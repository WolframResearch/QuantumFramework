(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    349958,       7766]
NotebookOptionsPosition[    339901,       7605]
NotebookOutlinePosition[    340397,       7623]
CellTagsIndexPosition[    340354,       7620]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reviewing Probability", "Title",
 CellChangeTimes->{{3.9448487458361225`*^9, 
  3.94484874867618*^9}},ExpressionUUID->"a95eef93-0a1c-3746-8d2f-\
8c03d537a6f2"],

Cell["\<\
We will discuss the concept of probability and how it relates to the \
frequency of different outcomes in a repeatable measurement. Then we will \
show how probabilities in quantum theory help us calculate joint and marginal \
probabilities.\
\>", "Text",
 CellChangeTimes->{{3.968331700214238*^9, 3.9683317023573513`*^9}, {
  3.968349049736882*^9, 
  3.9683491163527946`*^9}},ExpressionUUID->"f844df69-a66d-4e30-be6b-\
197320559c7c"],

Cell[CellGroupData[{

Cell["Key Concepts", "Section",
 CellChangeTimes->{{3.9448487565071926`*^9, 
  3.944848758051235*^9}},ExpressionUUID->"d47a7f2d-e3d8-a646-800b-\
2925ca67ba16"],

Cell["Random outcome", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.945083983169876*^9, 3.9450839880544662`*^9}, {3.9450853294131107`*^9, 
  3.945085330108259*^9}},ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-\
7dccf980dd4f"],

Cell["Probability distribution", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.96834910352884*^9, 
  3.968349103534596*^9}},ExpressionUUID->"1ad28be2-632c-2f46-baa1-\
84defee11031"],

Cell["Marginal probability", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.9683491041238327`*^9, 
  3.968349108511135*^9}},ExpressionUUID->"c6f9af1d-b3a4-4764-8e95-\
09b0b5cfd1b0"],

Cell["Joint probability", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.9683491041238327`*^9, 
  3.968349111357705*^9}},ExpressionUUID->"89a7bac9-c131-4ecc-a181-\
df131c4107d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frequency vs probability", "Section",
 CellChangeTimes->{{3.9450842281823845`*^9, 3.945084231085821*^9}, {
   3.945088886049017*^9, 3.9450888905680294`*^9}, 
   3.969206254588737*^9},ExpressionUUID->"8a65c536-47fd-0649-a611-\
4a5099f3c6b0"],

Cell["\<\
You\[CloseCurlyQuote]re no doubt familiar with coin flips or dice rolls as \
ways to generate random outcomes. For our purposes, think of a random outcome \
as a definite result from a repeatable experiment. Randomness here means that \
several different outcomes are possible, and while we may know their \
probabilities, there is no way to determine which specific outcome will occur \
before running the experiment.\
\>", "Text",
 CellChangeTimes->{{3.945085291101513*^9, 3.9450853176283836`*^9}, {
   3.9450853533803387`*^9, 3.945085373932991*^9}, {3.945085588900688*^9, 
   3.945085600461693*^9}, {3.9450858169158382`*^9, 3.945085950666769*^9}, 
   3.968331793368844*^9},ExpressionUUID->"a99a2876-174d-ad44-aee4-\
86201ca9154d"],

Cell[TextData[{
 "You can find much more information on probability and statistics in any of \
the following Wolfram U courses: ",
 ButtonBox["Introduction to Probability",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-\
to-probability/"], None},
  ButtonNote->
   "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
probability/"],
 ", and ",
 ButtonBox["Introduction to Statistics",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-\
to-statistics/"], None},
  ButtonNote->
   "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"],
 "."
}], "Text",
 CellChangeTimes->{
  3.9450855848760777`*^9, {3.9692100665057707`*^9, 
   3.9692100719495687`*^9}},ExpressionUUID->"0caacd39-bc7a-df4c-bcef-\
56175aed7f9b"],

Cell["\<\
Quantum theory provides a way to compute the probability distribution over \
possible measurement outcomes. You can think of a probability distribution as \
a rule that assigns a nonnegative probability to each possible outcome of an \
experiment, with all probabilities adding up to 1. In quantum circuits, this \
distribution is typically defined over the discrete set of possible \
bitstrings.\
\>", "Text",
 CellChangeTimes->{{3.9450854540443497`*^9, 3.945085499540102*^9}, {
   3.9450855373336105`*^9, 3.945085565252907*^9}, {3.9450859836765633`*^9, 
   3.945086073819351*^9}, {3.968331832707749*^9, 3.968331857850827*^9}, 
   3.968331905057693*^9},ExpressionUUID->"a7ad6136-43aa-3e46-8dce-\
d3445484c29c"],

Cell["\<\
Let\[CloseCurlyQuote]s look at a couple examples of generating random \
outcomes to build intuition.\
\>", "Text",
 CellChangeTimes->{{3.9450863574437885`*^9, 
  3.945086383034889*^9}},ExpressionUUID->"7b606baf-0b78-564a-8b89-\
f19177ee58d6"],

Cell["\<\
Suppose you want to sample a random integer between 1 and 10. One realization \
of this process is as follows:\
\>", "Text",
 CellChangeTimes->{{3.945086419387413*^9, 3.9450865199953384`*^9}, 
   3.9683319969342833`*^9, {3.9692063134642076`*^9, 
   3.969206360208858*^9}},ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-\
9a38afeacffd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.945086444261326*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.9450864449189034`*^9, 3.945086448910202*^9}, 
   3.968331898474905*^9, 3.9692101227493963`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"d5af3dbc-c1e5-4865-9997-30b74ee8ff60"]
}, Open  ]],

Cell["\<\
The above function returns a uniformly random integer from 1 to 10 \
(inclusive).\
\>", "Text",
 CellChangeTimes->{
  3.968331989853199*^9, {3.968345137625216*^9, 
   3.968345140945898*^9}},ExpressionUUID->"24077bc8-8047-4901-bf50-\
393f53f5d20d"],

Cell["Now examine the count of each number in the sequence above.", "Text",
 CellChangeTimes->{{3.945086505914669*^9, 3.9450865453806267`*^9}, 
   3.968345156756831*^9, {3.969206470603088*^9, 
   3.969206473589244*^9}},ExpressionUUID->"0f46b1ee-01e5-0a41-b171-\
f167e749208c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberdata", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], ",", "50"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.96920641136404*^9, 3.969206411855741*^9}, {
  3.9692065218291483`*^9, 3.96920652362171*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "4", ",", "9", ",", "9", ",", "10", ",", "3", ",", "8", ",", "7", 
   ",", "2", ",", "1", ",", "3", ",", "3", ",", "7", ",", "5", ",", "6", ",", 
   "8", ",", "10", ",", "10", ",", "10", ",", "8", ",", "8", ",", "6", ",", 
   "8", ",", "8", ",", "10", ",", "1", ",", "4", ",", "7", ",", "2", ",", "2",
    ",", "8", ",", "3", ",", "2", ",", "7", ",", "1", ",", "4", ",", "2", ",",
    "9", ",", "7", ",", "7", ",", "4", ",", "4", ",", "8", ",", "3", ",", "7",
    ",", "8", ",", "10", ",", "7", ",", "4", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{
  3.945086413375641*^9, 3.96833189849666*^9, 3.968345158296126*^9, 
   3.969206414554636*^9, {3.9692065220021048`*^9, 3.969206528213935*^9}, 
   3.969210122752198*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"fe6c0cca-f39f-46b4-87f9-b7baa29121ed"]
}, Open  ]],

Cell["\<\
Now examine the frequency of each number in the sequence above:\
\>", "Text",
 CellChangeTimes->{{3.945086846427105*^9, 3.94508685878866*^9}, {
  3.945086949602453*^9, 3.9450869571624775`*^9}, {3.969206423854501*^9, 
  3.969206448710129*^9}, {3.969206487607438*^9, 3.9692064893076468`*^9}, {
  3.969206543133527*^9, 
  3.96920654510148*^9}},ExpressionUUID->"04da42bd-d5dd-764f-b4c9-\
d9cfb6aa1b2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"numberdata", ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["5", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["680", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[{0.5}, "Count", Ticks -> {
       Range[10], Automatic}, PlotRange -> {{0, 11}, All}, PlotLabel -> 
     "Count of different number for a sequence of 50"],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.9450867664203815`*^9, 3.9450867675299015`*^9}, {
  3.968332019958971*^9, 3.968332127126045*^9}, {3.968332846059518*^9, 
  3.968332846399328*^9}, {3.969206456461357*^9, 3.96920645764797*^9}, {
  3.9692065342510967`*^9, 3.9692065350595713`*^9}, {3.969210092117426*^9, 
  3.969210095638475*^9}, {3.9692101451889057`*^9, 3.969210145527388*^9}, {
  3.9692105033702297`*^9, 3.969210564371533*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.79375, 0.25], EdgeForm[{GrayLevel[0], Opacity[
    0.5529999999999999], Thickness[Small]}], {}, 
    {RGBColor[1., 0.79375, 0.25], EdgeForm[{GrayLevel[0], Opacity[
     0.5529999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1., 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{75.90701474531897, 99.23793459483495}, {
           62.1088227484301, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {2.5, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{121.06885444435093`, 144.3997742938669}, {
           2.6223277008654975`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {3.5, 5.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{166.23069414338286`, 189.56161399289886`}, {
           2.6223277008654975`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4., 0}, {4.5, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{211.39253384241482`, 
           234.72345369193079`}, {-27.120919822916818`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {5.5, 1.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{256.5543735414468, 279.8852933909628}, {
           121.59531779599472`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {6.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{301.71621324047874`, 325.0471330899947}, {
           62.1088227484301, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {7.5, 8.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{346.8780529395107, 
           370.2089727890267}, {-86.60741487048142, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8., 0}, {8.5, 10.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{392.03989263854265`, 
           415.3708124880586}, {-146.09390991804602`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 10]& ,
        TagBoxNote->"10"],
       StyleBox["10", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[10, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9., 0}, {9.5, 3.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{437.2017323375746, 460.5326521870906}, {
           62.1088227484301, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0}, {10.5, 6.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{482.36357203660657`, 
           505.69449188612253`}, {-27.120919822916818`, 152.08856531977702`}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.22, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], "ChartDefaultStyle" -> {
      Directive[
       RGBColor[1., 0.725, 0], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultChartBaseStyle" -> Directive[
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0]}]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Count of different number for a sequence of 50\"", TraditionalForm],
  PlotRange->{{0, 11}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.9450867680403194`*^9, 3.945086810296196*^9, {3.968332008840445*^9, 
   3.9683321275479927`*^9}, 3.968332846907755*^9, 3.9692064585415916`*^9, 
   3.969206535387555*^9, {3.9692101228913603`*^9, 3.969210146100758*^9}, {
   3.969210520963682*^9, 3.969210565479403*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"b22269c4-e023-4af1-90df-841c2e051ec7"]
}, Open  ]],

Cell["\<\
Now examine the frequency of each number across different sequences as the \
sequence length increases:\
\>", "Text",
 CellChangeTimes->{{3.9692065141917763`*^9, 3.969206519137735*^9}, {
  3.969206552706807*^9, 3.969206569557378*^9}, {3.96920660380655*^9, 
  3.9692066057071447`*^9}},ExpressionUUID->"d25f250a-d0f6-4b19-bac6-\
b3ff81795bca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], ",", "j"}], "]"}], ",", 
      InterpretationBox[
       DynamicModuleBox[{Typeset`open = False}, 
        TemplateBox[{"Expression", "SequenceIcon", 
          GridBox[{{
             RowBox[{
               TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["Sequence", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
               TagBox["6", "IconizedItem"]}]}, {
             RowBox[{
               TagBox["\"Byte count: \"", "IconizedLabel"], 
               "\[InvisibleSpace]", 
               TagBox["944", "IconizedItem"]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          Dynamic[Typeset`open]},
         "IconizedObject"]],
       Sequence[{0.5}, "Probability", Ticks -> {
          Range[10], Automatic}, PlotRange -> {{0, 11}, {0, 0.25}}, PlotLabel -> 
        ToString[$CellContext`j] <> " repetition of experiment", ImageSize -> 
        200],
       SelectWithContents->True,
       Selectable->False]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"10", "^", 
       RowBox[{"Range", "[", "5", "]"}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.968332658265246*^9, 3.968332877957559*^9}, {
   3.969206503462186*^9, 3.969206504119877*^9}, 3.9692065971049337`*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"1b509676-e49b-468d-b8c5-1ebd0661bef5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.567], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.567], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.2}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 
             96.92032127122152}, {-46.936535284342426`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.2]& , TagBoxNote -> 
          "0.2"], 
         StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{6., 0}, {6.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{177.04475092858377`, 189.3482408796355}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{8., 0}, {8.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{223.25871073279077`, 235.56220068384252`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.2}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 
             258.66918058594604`}, {-46.936535284342426`, 
             75.55812832289487}}], "DelayedMouseEffectStyle"], 
          StatusArea[#, 0.2]& , TagBoxNote -> "0.2"], 
         StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0}, {10.5, 0.3}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{269.4726705369978, 
             281.7761604880495}, {-107.80886708796106`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.3]& , TagBoxNote -> 
          "0.3"], 
         StyleBox["0.3`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0},
     FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"10 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}], 
   GraphicsBox[{{
      Directive[
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999], 
         GrayLevel[0]]]], {{}, {
        Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5529999999999999], 
           GrayLevel[0]]]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{1., 0}, {1.5, 0.1}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1]& , TagBoxNote -> 
             "0.1"], 
            StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2., 0}, {2.5, 0.15}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.15]& , TagBoxNote -> 
             "0.15"], 
            StyleBox["0.15`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.15, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{3., 0}, {3.5, 0.07}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.07]& , TagBoxNote -> 
             "0.07"], 
            StyleBox["0.07`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.07, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4., 0}, {4.5, 0.11}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.11]& , TagBoxNote -> 
             "0.11"], 
            StyleBox["0.11`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.11, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5., 0}, {5.5, 0.13}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.13]& , TagBoxNote -> 
             "0.13"], 
            StyleBox["0.13`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.13, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6., 0}, {6.5, 0.04}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.04]& , TagBoxNote -> 
             "0.04"], 
            StyleBox["0.04`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.04, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{7., 0}, {7.5, 0.01}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.01]& , TagBoxNote -> 
             "0.01"], 
            StyleBox["0.01`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.01, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{8., 0}, {8.5, 0.1}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1]& , TagBoxNote -> 
             "0.1"], 
            StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9., 0}, {9.5, 0.16}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"]}, StatusArea[#, 0.16]& , TagBoxNote -> 
             "0.16"], 
            StyleBox["0.16`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.16, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10., 0}, {10.5, 0.13}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.13]& , 
             TagBoxNote -> "0.13"], 
            StyleBox["0.13`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.13, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.22, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
       "ChartDefaultStyle" -> {
         Directive[
          RGBColor[1., 0.725, 0], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.24, 0.6, 0.8], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.455, 0.7, 0.21], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.578, 0.51, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.4, 0.64, 1.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[1., 0.75, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.8, 0.4, 0.76], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.637, 0.65, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
       "DefaultChartBaseStyle" -> Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[{
           GrayLevel[0]}]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"100 repetition of experiment\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, Automatic}}], 
   GraphicsBox[{{
      Directive[
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999], 
         GrayLevel[0]]]], {{}, {
        Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5529999999999999], 
           GrayLevel[0]]]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{1., 0}, {1.5, 0.104}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.104]& , 
             TagBoxNote -> "0.104"], 
            StyleBox["0.104`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.104, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{2., 0}, {2.5, 0.101}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.101]& , 
             TagBoxNote -> "0.101"], 
            StyleBox["0.101`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.101, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{3., 0}, {3.5, 0.097}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.097]& , 
             TagBoxNote -> "0.097"], 
            StyleBox["0.097`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.097, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4., 0}, {4.5, 0.089}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.089]& , 
             TagBoxNote -> "0.089"], 
            StyleBox["0.089`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.089, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{5., 0}, {5.5, 0.101}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.101]& , 
             TagBoxNote -> "0.101"], 
            StyleBox["0.101`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.101, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{6., 0}, {6.5, 0.098}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.098]& , 
             TagBoxNote -> "0.098"], 
            StyleBox["0.098`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.098, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{7., 0}, {7.5, 0.112}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.112]& , 
             TagBoxNote -> "0.112"], 
            StyleBox["0.112`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.112, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{8., 0}, {8.5, 0.114}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.114]& , 
             TagBoxNote -> "0.114"], 
            StyleBox["0.114`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.114, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9., 0}, {9.5, 0.102}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.102]& , 
             TagBoxNote -> "0.102"], 
            StyleBox["0.102`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.102, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10., 0}, {10.5, 0.082}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.082]& , 
             TagBoxNote -> "0.082"], 
            StyleBox["0.082`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.082, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.22, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
       "ChartDefaultStyle" -> {
         Directive[
          RGBColor[1., 0.725, 0], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.24, 0.6, 0.8], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.455, 0.7, 0.21], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.578, 0.51, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.4, 0.64, 1.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[1., 0.75, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.8, 0.4, 0.76], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.637, 0.65, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
       "DefaultChartBaseStyle" -> Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[{
           GrayLevel[0]}]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"1000 repetition of experiment\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, Automatic}}], 
   GraphicsBox[{{
      Directive[
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999], 
         GrayLevel[0]]]], {{}, {
        Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5529999999999999], 
           GrayLevel[0]]]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1., 0}, {1.5, 0.1033}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1033]& , 
             TagBoxNote -> "0.1033"], 
            StyleBox["0.1033`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1033, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2., 0}, {2.5, 0.1044}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1044]& , 
             TagBoxNote -> "0.1044"], 
            StyleBox["0.1044`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1044, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3., 0}, {3.5, 0.1005}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1005]& , 
             TagBoxNote -> "0.1005"], 
            StyleBox["0.1005`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1005, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4., 0}, {4.5, 0.102}, "RoundingRadius" -> 0]}],
                "DelayedMouseEffectStyle"]}, StatusArea[#, 0.102]& , 
             TagBoxNote -> "0.102"], 
            StyleBox["0.102`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.102, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5., 0}, {5.5, 0.0978}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.0978]& , 
             TagBoxNote -> "0.0978"], 
            StyleBox["0.0978`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.0978, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6., 0}, {6.5, 0.1046}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.1046]& , 
             TagBoxNote -> "0.1046"], 
            StyleBox["0.1046`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.1046, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7., 0}, {7.5, 0.0922}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.0922]& , 
             TagBoxNote -> "0.0922"], 
            StyleBox["0.0922`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.0922, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8., 0}, {8.5, 0.0953}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.0953]& , 
             TagBoxNote -> "0.0953"], 
            StyleBox["0.0953`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.0953, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{9., 0}, {9.5, 0.0979}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.0979]& , 
             TagBoxNote -> "0.0979"], 
            StyleBox["0.0979`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.0979, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10., 0}, {10.5, 0.102}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.102]& , 
             TagBoxNote -> "0.102"], 
            StyleBox["0.102`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.102, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.22, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
       "ChartDefaultStyle" -> {
         Directive[
          RGBColor[1., 0.725, 0], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.24, 0.6, 0.8], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.455, 0.7, 0.21], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.578, 0.51, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.4, 0.64, 1.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[1., 0.75, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.8, 0.4, 0.76], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.637, 0.65, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
       "DefaultChartBaseStyle" -> Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[{
           GrayLevel[0]}]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"10000 repetition of experiment\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, Automatic}}], 
   GraphicsBox[{{
      Directive[
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.5529999999999999], 
         GrayLevel[0]]]], {{}, {
        Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[
          Directive[
           Thickness[Small], 
           Opacity[0.5529999999999999], 
           GrayLevel[0]]]], {{
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1., 0}, {1.5, 0.10084}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.10084]& ,
              TagBoxNote -> "0.10084"], 
            StyleBox["0.10084`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.10084, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2., 0}, {2.5, 0.0989}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.0989]& , 
             TagBoxNote -> "0.0989"], 
            StyleBox["0.0989`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.0989, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3., 0}, {3.5, 0.09926}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.09926]& ,
              TagBoxNote -> "0.09926"], 
            StyleBox["0.09926`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.09926, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{4., 0}, {4.5, 0.09914}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.09914]& ,
              TagBoxNote -> "0.09914"], 
            StyleBox["0.09914`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.09914, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5., 0}, {5.5, 0.09922}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.09922]& ,
              TagBoxNote -> "0.09922"], 
            StyleBox["0.09922`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.09922, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6., 0}, {6.5, 0.10019}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.10019]& ,
              TagBoxNote -> "0.10019"], 
            StyleBox["0.10019`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.10019, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7., 0}, {7.5, 0.10116}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.10116]& ,
              TagBoxNote -> "0.10116"], 
            StyleBox["0.10116`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.10116, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8., 0}, {8.5, 0.09975}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.09975]& ,
              TagBoxNote -> "0.09975"], 
            StyleBox["0.09975`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.09975, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{9., 0}, {9.5, 0.10068}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.10068]& ,
              TagBoxNote -> "0.10068"], 
            StyleBox["0.10068`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.10068, {}], "Tooltip"]& ]}, {
          TagBox[
           TooltipBox[
            TagBox[{
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10., 0}, {10.5, 0.10086}, "RoundingRadius" -> 
                  0]}], "DelayedMouseEffectStyle"]}, StatusArea[#, 0.10086]& ,
              TagBoxNote -> "0.10086"], 
            StyleBox["0.10086`", {}, StripOnInput -> False]], Annotation[#, 
            Style[0.10086, {}], 
            "Tooltip"]& ]}}}, {}, {}}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-0.22, 0}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 200, 
     Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
       "ChartDefaultStyle" -> {
         Directive[
          RGBColor[1., 0.725, 0], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.24, 0.6, 0.8], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.455, 0.7, 0.21], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.578, 0.51, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.772079, 0.431554, 0.102387], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.4, 0.64, 1.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[1., 0.75, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.8, 0.4, 0.76], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.637, 0.65, 0.], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.915, 0.3325, 0.2125], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
          Opacity[0.6]], 
         Directive[
          RGBColor[
          0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
          Opacity[0.6]], 
         Directive[
          RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
          Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
       "DefaultChartBaseStyle" -> Directive[
         RGBColor[1., 0.79375, 0.25], 
         EdgeForm[{
           GrayLevel[0]}]], 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
     FormBox["\"100000 repetition of experiment\"", TraditionalForm], 
     PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {{{1, 
         FormBox["1", TraditionalForm]}, {2, 
         FormBox["2", TraditionalForm]}, {3, 
         FormBox["3", TraditionalForm]}, {4, 
         FormBox["4", TraditionalForm]}, {5, 
         FormBox["5", TraditionalForm]}, {6, 
         FormBox["6", TraditionalForm]}, {7, 
         FormBox["7", TraditionalForm]}, {8, 
         FormBox["8", TraditionalForm]}, {9, 
         FormBox["9", TraditionalForm]}, {10, 
         FormBox["10", TraditionalForm]}}, Automatic}}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.968332675756051*^9, 3.968332710707301*^9}, {
   3.9683328018777227`*^9, 3.968332878331007*^9}, 3.9692065077655354`*^9, 
   3.969206599127225*^9, 3.969210123010168*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"89e88ab5-6af9-4f65-84db-a2c643986a03"]
}, Open  ]],

Cell["\<\
As you can see, with more repetition of the same experiment, the observed \
frequency of outcomes gets closer to the true probability distribution. \
\>", "Text",
 CellChangeTimes->{{3.968332889987005*^9, 3.968332971779386*^9}, 
   3.9692066245848303`*^9},ExpressionUUID->"6a135abe-9b98-4553-822d-\
af701fcffbab"],

Cell["\<\
Now let\[CloseCurlyQuote]s consider the case where we assign a specific \
weight to each number: {1,1,2,3,4,4,3,2,1,1}.
We can compute the corresponding probabilities by normalizing the weights; \
that is:\
\>", "Text",
 CellChangeTimes->{{3.968345181559595*^9, 3.9683451951228*^9}, {
  3.9683453503648567`*^9, 3.968345367118132*^9}, {3.9683454584931917`*^9, 
  3.968345470108626*^9}},ExpressionUUID->"23ea6f15-b590-4340-b738-\
f73543fee937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probWeights", "=", 
  RowBox[{"Normalize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", 
      "2", ",", "1", ",", "1"}], "}"}], ",", "Total"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.968345369766575*^9, 3.968345374593595*^9}, {
   3.968345819314685*^9, 3.9683458252444763`*^9}, 3.969206638242259*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"f697b007-ec50-4c4f-9ccc-719490dd17e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "22"], ",", 
   FractionBox["1", "22"], ",", 
   FractionBox["1", "11"], ",", 
   FractionBox["3", "22"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["3", "22"], ",", 
   FractionBox["1", "11"], ",", 
   FractionBox["1", "22"], ",", 
   FractionBox["1", "22"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9683453749211473`*^9, 3.9683458258558197`*^9, {3.96920663466405*^9, 
   3.9692066446024857`*^9}, 3.969210123032341*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"d7a380b2-509d-49f3-a828-974edc33e915"]
}, Open  ]],

Cell["\<\
If we run the experiment many times, we expect the frequency of results to \
converge to the probabilities above. Now let\[CloseCurlyQuote]s generate \
different data samples of results for 10, 100, and 10,000 runs. As the number \
of realizations increases, the observed frequencies should get closer to the \
expected probabilities.\
\>", "Text",
 CellChangeTimes->{{3.968346092222145*^9, 3.968346212612296*^9}, 
   3.96834629812549*^9},ExpressionUUID->"09eddf68-cce0-45fa-8caa-\
2c27b9dd0ca3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sequenceOfResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",",
           "2", ",", "1", ",", "1"}], "}"}], "->", 
        RowBox[{"Range", "[", "10", "]"}]}], ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"2", "^", 
        RowBox[{"{", 
         RowBox[{"6", ",", "8", ",", "10"}], "}"}]}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.968345229247994*^9, 3.96834523812041*^9}, {
   3.968345303449218*^9, 3.968345332873069*^9}, {3.968345674732768*^9, 
   3.968345699044365*^9}, {3.9683459056361732`*^9, 3.96834591941611*^9}, {
   3.9683459784916162`*^9, 3.968345981479224*^9}, 3.968346039268961*^9, {
   3.969210606671832*^9, 3.969210642863203*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"46361cd7-ba0d-4bb3-ad7f-b5f2239647e3"],

Cell["Calculate frequencies for each experiment:", "Text",
 CellChangeTimes->{{3.96834630862914*^9, 
  3.968346340037835*^9}},ExpressionUUID->"9fa21214-3735-4af4-bfcb-\
3d3ac8b08a62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"KeySort", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"Range", "[", "10", "]"}], "->", "0"}], "]"}], ",", 
       RowBox[{"Normalize", "[", 
        RowBox[{
         RowBox[{"Counts", "[", "#", "]"}], ",", "Total"}], "]"}]}], "]"}], 
     "]"}], "&"}], "/@", "sequenceOfResults"}]}]], "Input",
 CellChangeTimes->{{3.96834570067354*^9, 3.968345726467319*^9}, {
  3.9683458400453043`*^9, 3.968345841560568*^9}, {3.968345876989462*^9, 
  3.968345879338402*^9}, {3.968345927713394*^9, 3.96834594675403*^9}, {
  3.968346001358674*^9, 3.968346027818421*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"36c3fa54-e6c3-4c9d-98e9-3015fa03f72b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["1", "16"]}], ",", 
     RowBox[{"2", "\[Rule]", 
      FractionBox["1", "64"]}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["5", "64"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["3", "16"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["1", "4"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["11", "64"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["5", "64"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["9", "64"]}], ",", 
     RowBox[{"9", "\[Rule]", 
      FractionBox["1", "64"]}], ",", 
     RowBox[{"10", "\[Rule]", "0"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["7", "128"]}], ",", 
     RowBox[{"2", "\[Rule]", 
      FractionBox["13", "256"]}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["1", "16"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["3", "32"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["53", "256"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["47", "256"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["39", "256"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["7", "64"]}], ",", 
     RowBox[{"9", "\[Rule]", 
      FractionBox["5", "128"]}], ",", 
     RowBox[{"10", "\[Rule]", 
      FractionBox["3", "64"]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["43", "1024"]}], ",", 
     RowBox[{"2", "\[Rule]", 
      FractionBox["23", "512"]}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["53", "512"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["33", "256"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["11", "64"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["193", "1024"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["133", "1024"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["105", "1024"]}], ",", 
     RowBox[{"9", "\[Rule]", 
      FractionBox["25", "512"]}], ",", 
     RowBox[{"10", "\[Rule]", 
      FractionBox["5", "128"]}]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.968345718865838*^9, 3.968345726775012*^9}, 
   3.968345842146984*^9, 3.9683458795880117`*^9, {3.968345932171585*^9, 
   3.968345947142062*^9}, {3.968345982795014*^9, 3.968345989544773*^9}, {
   3.9683460299745207`*^9, 3.96834604182409*^9}, 3.969206650056582*^9, 
   3.9692101230455112`*^9, 3.9692106489515257`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"b6d0455c-bb1b-4eb0-bc41-d6bc12b147b3"]
}, Open  ]],

Cell["Visualize the results:", "Text",
 CellChangeTimes->{{3.968346343994961*^9, 
  3.96834634682174*^9}},ExpressionUUID->"265dbc0e-bbd2-4b8f-8985-\
29bc5649a9b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Values", "/@", "freq"}], ",", "probWeights"}], "]"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<64 runs of experiment\>\"", 
      ",", "\"\<256 runs of experiment\>\"", 
      ",", "\"\<1,024 runs of experiment\>\"", ",", "\"\<Probabilities\>\""}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683457607292233`*^9, 3.9683457699785557`*^9}, {
   3.968345828819425*^9, 3.9683458650473022`*^9}, {3.968345895245739*^9, 
   3.9683458962447157`*^9}, {3.968345940724985*^9, 3.9683459654802103`*^9}, {
   3.9683463487080307`*^9, 3.9683464161570053`*^9}, 3.9692100447328997`*^9, {
   3.969210653094048*^9, 3.969210679453546*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"4a5461b5-69e9-40c3-8907-ab31f12a933f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3700990099009899, 0.}, {50.145364536453656`, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.346084608460846, 0.}, {2.007650765076508, 
                  0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.3460846084608464`, 0.}, {3.007650765076508, 
                  0.0546875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[7, 128]]& , TagBoxNote -> "7/128"], 
             StyleBox[
              FractionBox["7", "128"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[7, 128], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3.3460846084608464`, 0.}, {4.007650765076508, 
                  0.0419921875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[43, 1024]]& , TagBoxNote -> "43/1024"], 
             StyleBox[
              FractionBox["43", "1024"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[43, 1024], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{4.346084608460846, 0.}, {5.007650765076508, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.361386138613861, 0.}, {7.022952295229523, 
                  0.015625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 64]]& , TagBoxNote -> "1/64"], 
             StyleBox[
              FractionBox["1", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7.361386138613861, 0.}, {8.022952295229523, 
                  0.05078125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[13, 256]]& , TagBoxNote -> "13/256"], 
             StyleBox[
              FractionBox["13", "256"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[13, 256], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8.361386138613861, 0.}, {9.022952295229523, 
                  0.044921875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[23, 512]]& , TagBoxNote -> "23/512"], 
             StyleBox[
              FractionBox["23", "512"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[23, 512], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{9.361386138613861, 0.}, {10.022952295229523`, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.376687668766877`, 0.}, {12.038253825382538`,
                   0.078125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[5, 64]]& , TagBoxNote -> "5/64"], 
             StyleBox[
              FractionBox["5", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[5, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{12.376687668766877`, 0.}, {13.038253825382538`,
                   0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{13.376687668766877`, 0.}, {14.038253825382538`,
                   0.103515625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[53, 512]]& , TagBoxNote -> "53/512"], 
             StyleBox[
              FractionBox["53", "512"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[53, 512], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{14.376687668766877`, 0.}, {15.038253825382538`,
                   0.09090909090909091}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 11]]& , TagBoxNote -> "1/11"], 
             StyleBox[
              FractionBox["1", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{16.39198919891989, 0.}, {17.053555355535554`, 
                  0.1875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 16]]& , TagBoxNote -> "3/16"], 
             StyleBox[
              FractionBox["3", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{17.39198919891989, 0.}, {18.053555355535554`, 
                  0.09375}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 32]]& , TagBoxNote -> "3/32"], 
             StyleBox[
              FractionBox["3", "32"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 32], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{18.39198919891989, 0.}, {19.053555355535554`, 
                  0.12890625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[33, 256]]& , TagBoxNote -> "33/256"], 
             StyleBox[
              FractionBox["33", "256"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[33, 256], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{19.39198919891989, 0.}, {20.053555355535554`, 
                  0.13636363636363635`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 22]]& , TagBoxNote -> "3/22"], 
             StyleBox[
              FractionBox["3", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{21.40729072907291, 0.}, {22.06885688568857, 
                  0.25}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"],
               StatusArea[#, 
               Rational[1, 4]]& , TagBoxNote -> "1/4"], 
             StyleBox[
              FractionBox["1", "4"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 4], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{22.40729072907291, 0.}, {23.06885688568857, 
                  0.20703125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[53, 256]]& , TagBoxNote -> "53/256"], 
             StyleBox[
              FractionBox["53", "256"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[53, 256], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{23.40729072907291, 0.}, {24.06885688568857, 
                  0.171875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[11, 64]]& , TagBoxNote -> "11/64"], 
             StyleBox[
              FractionBox["11", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[11, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{24.40729072907291, 0.}, {25.06885688568857, 
                  0.18181818181818182`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[2, 11]]& , TagBoxNote -> "2/11"], 
             StyleBox[
              FractionBox["2", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[2, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{26.422592259225926`, 0.}, {27.08415841584159, 
                  0.171875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[11, 64]]& , TagBoxNote -> "11/64"], 
             StyleBox[
              FractionBox["11", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[11, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{27.422592259225926`, 0.}, {28.08415841584159, 
                  0.18359375}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[47, 256]]& , TagBoxNote -> "47/256"], 
             StyleBox[
              FractionBox["47", "256"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[47, 256], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{28.422592259225926`, 0.}, {29.08415841584159, 
                  0.1884765625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[193, 1024]]& , TagBoxNote -> "193/1024"], 
             StyleBox[
              FractionBox["193", "1024"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[193, 1024], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{29.422592259225926`, 0.}, {30.08415841584159, 
                  0.18181818181818182`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[2, 11]]& , TagBoxNote -> "2/11"], 
             StyleBox[
              FractionBox["2", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[2, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{31.437893789378943`, 0.}, {32.0994599459946, 
                  0.078125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[5, 64]]& , TagBoxNote -> "5/64"], 
             StyleBox[
              FractionBox["5", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[5, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{32.43789378937894, 0.}, {33.0994599459946, 
                  0.15234375}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[39, 256]]& , TagBoxNote -> "39/256"], 
             StyleBox[
              FractionBox["39", "256"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[39, 256], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{33.43789378937894, 0.}, {34.0994599459946, 
                  0.1298828125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[133, 1024]]& , TagBoxNote -> "133/1024"], 
             StyleBox[
              FractionBox["133", "1024"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[133, 1024], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{34.43789378937894, 0.}, {35.0994599459946, 
                  0.13636363636363635`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 22]]& , TagBoxNote -> "3/22"], 
             StyleBox[
              FractionBox["3", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{36.45319531953196, 0.}, {37.11476147614762, 
                  0.140625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[9, 64]]& , TagBoxNote -> "9/64"], 
             StyleBox[
              FractionBox["9", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[9, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{37.45319531953196, 0.}, {38.11476147614762, 
                  0.109375}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[7, 64]]& , TagBoxNote -> "7/64"], 
             StyleBox[
              FractionBox["7", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[7, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{38.45319531953196, 0.}, {39.11476147614762, 
                  0.1025390625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[105, 1024]]& , TagBoxNote -> "105/1024"], 
             StyleBox[
              FractionBox["105", "1024"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[105, 1024], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{39.45319531953196, 0.}, {40.11476147614762, 
                  0.09090909090909091}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 11]]& , TagBoxNote -> "1/11"], 
             StyleBox[
              FractionBox["1", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{41.468496849684975`, 0.}, {42.13006300630064, 
                  0.015625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 64]]& , TagBoxNote -> "1/64"], 
             StyleBox[
              FractionBox["1", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{42.468496849684975`, 0.}, {43.13006300630064, 
                  0.0390625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[5, 128]]& , TagBoxNote -> "5/128"], 
             StyleBox[
              FractionBox["5", "128"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[5, 128], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{43.468496849684975`, 0.}, {44.13006300630064, 
                  0.048828125}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[25, 512]]& , TagBoxNote -> "25/512"], 
             StyleBox[
              FractionBox["25", "512"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[25, 512], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{44.468496849684975`, 0.}, {45.13006300630064, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[1., 0.78, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{46.48379837983799, 0.}, {47.145364536453656`, 
                  0.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 0]& , TagBoxNote -> "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.928, 0.5210666666666667, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{47.48379837983799, 0.}, {48.145364536453656`, 
                  0.046875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 64]]& , TagBoxNote -> "3/64"], 
             StyleBox[
              FractionBox["3", "64"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 64], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[
            0.7116405333333333, 0.48160000000000003`, 0.5483194666666666]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{48.48379837983799, 0.}, {49.145364536453656`, 
                  0.0390625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[5, 128]]& , TagBoxNote -> "5/128"], 
             StyleBox[
              FractionBox["5", "128"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[5, 128], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.42], 
              GrayLevel[0]]], 
            RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{49.48379837983799, 0.}, {50.145364536453656`, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.3700990099009899, 0.}, {51.14086984698471, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{1.346084608460846, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {1.346084608460846, 
              0.}]}], 
           LineBox[{{50.145364536453656`, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {50.145364536453656`, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{5.007650765076507, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {5.007650765076507, 
                0.}]}], 
             LineBox[{{6.361386138613861, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.361386138613861, 
                0.}]}], 
             LineBox[{{10.022952295229521`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {10.022952295229521`, 
                0.}]}], 
             LineBox[{{11.376687668766875`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {11.376687668766875`, 
                0.}]}], 
             LineBox[{{15.038253825382537`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {15.038253825382537`, 
                0.}]}], 
             LineBox[{{16.39198919891989, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.39198919891989, 
                0.}]}], 
             LineBox[{{20.053555355535554`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {20.053555355535554`, 
                0.}]}], 
             LineBox[{{21.40729072907291, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {21.40729072907291, 
                0.}]}], 
             LineBox[{{25.06885688568857, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {25.06885688568857, 
                0.}]}], 
             LineBox[{{26.422592259225926`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {26.422592259225926`, 
                0.}]}], 
             LineBox[{{30.08415841584159, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {30.08415841584159, 
                0.}]}], 
             LineBox[{{31.437893789378943`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {31.437893789378943`, 
                0.}]}], 
             LineBox[{{35.0994599459946, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {35.0994599459946, 
                0.}]}], 
             LineBox[{{36.45319531953196, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {36.45319531953196, 
                0.}]}], 
             LineBox[{{40.11476147614762, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {40.11476147614762, 
                0.}]}], 
             LineBox[{{41.468496849684975`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {41.468496849684975`, 
                0.}]}], 
             LineBox[{{45.13006300630064, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {45.13006300630064, 
                0.}]}], 
             LineBox[{{46.48379837983799, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {46.48379837983799, 
                0.}]}]}}}, 
          StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, {
         "GraphicsTicks"}, StripOnInput -> False]}, {"GraphicsAxes"}, 
       StripOnInput -> False]}}, {
    DisplayFunction -> Identity, PlotInteractivity :> True, 
     DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.3700990099009899, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"64 runs of experiment\"", "\"256 runs of experiment\"", 
       "\"1,024 runs of experiment\"", "\"Probabilities\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[1., 0.78, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[
                    0.7116405333333333, 0.48160000000000003`, 
                    0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1., 0.78, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.928, 0.5210666666666667, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7116405333333333, 0.48160000000000003`, 
                    0.5483194666666666]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.49920000000000003`, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.968345829058305*^9, {3.968345865990205*^9, 3.968345896527691*^9}, {
   3.9683459659459333`*^9, 3.9683459840786657`*^9}, {3.968346033376354*^9, 
   3.968346043213333*^9}, {3.9683463578386393`*^9, 3.9683463640428677`*^9}, {
   3.968346408796171*^9, 3.968346416562212*^9}, 3.9692066531503267`*^9, 
   3.969210123314844*^9, 3.969210680179516*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"24b17939-555b-43cf-b072-4ebe8f05645f"]
}, {2}]],

Cell["\<\
As expected, with more runs of the experiment, the observed frequencies get \
closer to the expected probabilities (law of large numbers).\
\>", "Text",
 CellChangeTimes->{{3.96840497477395*^9, 
  3.968405020445067*^9}},ExpressionUUID->"78bc4bbf-0fb0-4c93-9303-\
5e2eede052f3"],

Cell["\<\
Now let\[CloseCurlyQuote]s consider a case analogous to three different \
players rolling dice and collecting their joint outcomes. Of course, the \
quantum case can differ markedly from the classical \
one\[LongDash]classically, similar correlations might require prearranged \
strategies or communication. For the moment, however, we will set aside \
interpretation and focus only on the probabilities of the outcomes (i.e., the \
joint distribution and any marginals), leaving the discussion of correlations \
for later.\
\>", "Text",
 CellChangeTimes->{{3.9684050308300858`*^9, 
  3.968405168796027*^9}},ExpressionUUID->"53177d8d-37b1-4b4b-b185-\
fd0128a7f952"]
}, Closed]],

Cell[CellGroupData[{

Cell["Joint vs marginal probabilities", "Section",
 CellChangeTimes->{{3.968346525411975*^9, 3.96834652971935*^9}, 
   3.968347200471768*^9},ExpressionUUID->"2a9feec0-c161-41ec-99f7-\
d0b837b42d52"],

Cell[TextData[{
 "Consider a three-qubit system. Each qubit is measured in the computational \
basis, so any measurement result can be described by a three-bit string; \
overall ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c7b9a803-7b74-44b0-b807-ec78946781f9"],
 " possible outcomes:"
}], "Text",
 CellChangeTimes->{{3.968334798703397*^9, 3.968334800860444*^9}, {
  3.96833837210157*^9, 3.9683385059593153`*^9}, {3.9683387496589127`*^9, 
  3.968338750236002*^9}},ExpressionUUID->"7104ffe3-042b-4b5e-9406-\
08adc37cba22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.968338463681965*^9, 3.968338477912222*^9}, {
  3.968338727623354*^9, 3.96833874458032*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"fccaeaca-17f7-4da9-94c0-5c4705db8e2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.968338470930825*^9, 3.968338478172585*^9}, {
   3.968338728022441*^9, 3.96833874479382*^9}, 3.968347206025429*^9, 
   3.968348364888864*^9, 3.969210123327825*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"a045777d-85b7-4b74-ae66-3025566180ab"]
}, Open  ]],

Cell["\<\
We will prepare the system in a special initial state. For now, we will skip \
the details of what this state is and focus only on the probability of \
outcomes. Using quantum theory, we can calculate the joint probabilities of \
the measurement results, that is, the probabilities for all possible tuples \
of 0s and 1s listed above.\
\>", "Text",
 CellChangeTimes->{{3.968338514342286*^9, 3.9683385826424026`*^9}, {
  3.9692067569734163`*^9, 
  3.9692067589440613`*^9}},ExpressionUUID->"4bdd9796-6bf6-49e0-9204-\
d18f5d55fe66"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{"\"\<RandomPure\>\"", "[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"state", "[", "\"\<Probabilities\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.96834658818622*^9, 3.968346590837062*^9}, {
  3.96834747927142*^9, 3.968347483151351*^9}, {3.9683475175205107`*^9, 
  3.9683475179073763`*^9}, {3.969206692362191*^9, 3.969206699643125*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"ca4e971c-47a0-416f-a4d8-69e1f7a57958"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], "\[Rule]",
     "0.380372746061938`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]], "\[Rule]",
     "0.059969264924188005`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], "\[Rule]",
     "0.014355754285658192`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]], "\[Rule]",
     "0.0909716069397538`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], "\[Rule]",
     "0.26779198692739997`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]], "\[Rule]",
     "0.024469872344652213`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]], "\[Rule]",
     "0.02040809548666238`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]], "\[Rule]",
     "0.14166067302974736`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.969206700221458*^9, 3.969210123683578*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"eab36393-1311-4910-b31f-4c126cbe5c27"]
}, Open  ]],

Cell["\<\
Generate the corresponding multivariate distribution of outcomes:\
\>", "Text",
 CellChangeTimes->{{3.969206721345047*^9, 
  3.969206733314212*^9}},ExpressionUUID->"63b16e63-3985-47b7-9702-\
f3800c34688e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumMeasurementOperator", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", "3", "}"}]}], "}"}], "]"}], "[", "state", "]"}], 
    "[", "\"\<MultivariateDistribution\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.96834658818622*^9, 3.968346590837062*^9}, {
   3.96834747927142*^9, 3.968347483151351*^9}, {3.9683475175205107`*^9, 
   3.9683475179073763`*^9}, 3.969206692362191*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"0e149d74-16a5-42e8-a403-0dcf3c6d024d"],

Cell["Visualize the contingency table of the distribution:", "Text",
 CellChangeTimes->{{3.968338636686473*^9, 
  3.968338644575511*^9}},ExpressionUUID->"329574b4-9037-4d82-af34-\
1f2368554fcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]", ",", "\"\<ProbabilityTable\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.968334621333435*^9, 3.968334623985634*^9}, {
   3.968334718782447*^9, 3.968334786839274*^9}, {3.968334817411254*^9, 
   3.9683348328871202`*^9}, 3.9683349308898687`*^9, 3.968335091370207*^9, {
   3.968337811372466*^9, 3.968337814299076*^9}, {3.9683379010531588`*^9, 
   3.968337916340279*^9}, 3.9683379854138927`*^9, {3.9683383073642797`*^9, 
   3.968338349906373*^9}, {3.9683440544597597`*^9, 3.968344059957852*^9}, {
   3.9683465784339323`*^9, 3.968346579339635*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"bdba2106-92ca-404d-b4f1-f97c1a8abf2e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|0 -> <|0 -> 0.38037274606193794`, 1 -> 0.059969264924188005`|>, 
         1 -> <|0 -> 0.01435575428565819, 1 -> 0.0909716069397538|>|>, 
       1 -> <|0 -> <|0 -> 0.2677919869274, 1 -> 0.024469872344652213`|>, 
         1 -> <|0 -> 0.02040809548666238, 1 -> 0.14166067302974739`|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[60]]], 2, 
             DirectedInfinity[1], {All, All}]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 2], 2], 2], "Meta" -> <||>, "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[60]]], 2, 
             DirectedInfinity[1], {All, All}]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 2], 2], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.380373"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0599693"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0143558"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0909716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.267792"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0244699"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0204081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.141661"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> 
          RGBColor[0.749003690406716, 0.749003690406716, 0.749003690406716], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{240.225, {156.0380859375, 164.635986328125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{240.225, {156.0380859375, 164.635986328125}}],
    BaseStyle->{
     LineBreakWithin -> False, 
      LightDarkAutoColorRules -> <|"MarkedColors" -> True|>},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9683347498708076`*^9, 3.968334781312378*^9}, 
   3.968334833661944*^9, 3.96833493137146*^9, 3.968335091835074*^9, 
   3.9683378255174103`*^9, {3.968337913355226*^9, 3.968337917173132*^9}, 
   3.9683379866064*^9, 3.9683383267900763`*^9, 3.968338591860108*^9, 
   3.968344061885295*^9, 3.9683472065982*^9, 3.968348365467308*^9, 
   3.969210125373148*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"ed4ea9e5-d465-4e09-964b-82b5d678cd22"]
}, Open  ]],

Cell["\<\
Since we have the multivariate distribution, we can compute the probability \
of any scenario by summing over the appropriate outcomes. Let\
\[CloseCurlyQuote]s consider a few cases.\
\>", "Text",
 CellChangeTimes->{{3.968346620867334*^9, 3.968346674311495*^9}, {
  3.968407065500433*^9, 
  3.9684070901593113`*^9}},ExpressionUUID->"005c39db-c2d5-49eb-9bdc-\
f4c14fac70e1"],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 and 1 for qubit-3 (and any \
result for qubit-2)\
\>", "Text",
 CellChangeTimes->{{3.968343296961424*^9, 3.9683433000128717`*^9}, 
   3.96834336409851*^9, {3.968344154426264*^9, 3.968344165506075*^9}, {
   3.968344946656548*^9, 3.968344962896373*^9}, {3.9683450014458847`*^9, 
   3.9683450047735357`*^9}},ExpressionUUID->"3fe18dc6-3f46-4c14-ad57-\
20f216f68436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"q1", "\[Equal]", "0"}], "&&", 
    RowBox[{"q3", "==", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683440306290407`*^9, 3.9683440421543617`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"743bbc34-5146-4ab2-b454-696944ca422e"],

Cell[BoxData["0.1509408718639418`"], "Output",
 CellChangeTimes->{3.968344042436005*^9, 3.968344169025601*^9, 
  3.968347206654845*^9, 3.968348365526278*^9, 3.969206824157559*^9, 
  3.9692101254387693`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"df95090f-1b2b-4fde-9db7-bae91262b510"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s calculate the above probability step-by-step:
- From the full list of outcome\[Dash]probability pairs, select the outcomes \
whose first bit is 0 and last bit is 1 (i.e., {0,b,1} with be can be either 0 \
or 1, but we do not care).
- Extract the probabilities associated with those selected outcomes.
- Add those probabilities together.\
\>", "Text",
 CellChangeTimes->{{3.9683443234486*^9, 3.9683443298891563`*^9}, {
  3.968344476476479*^9, 3.968344585352982*^9}, {3.968344634166768*^9, 
  3.9683446714700403`*^9}, {3.968346688410387*^9, 
  3.9683466947212954`*^9}},ExpressionUUID->"a39e8465-5c77-476d-ae22-\
8b9c55d68a82"],

Cell["\<\
We can use the multivariate distribution and compute the full list of outcome\
\[Dash]probability pairs:\
\>", "Text",
 CellChangeTimes->{{3.968338674962756*^9, 3.968338714106701*^9}, {
  3.9692099692433968`*^9, 
  3.96920997155223*^9}},ExpressionUUID->"b5db0754-608e-4e81-a998-\
f93dfcaedce7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prob", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PDF", "[", 
        RowBox[{"\[ScriptCapitalD]", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"prob", ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["592", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[TableDepth -> 2, TableHeadings -> {None, 
       Map[Style[#, Bold]& , {"Outcome", "Probability"}]}],
    SelectWithContents->True,
    Selectable->False]}], "]"}]}], "Input",
 CellChangeTimes->{{3.968338667267015*^9, 3.9683386793897867`*^9}, {
  3.968338715954968*^9, 3.968338740208674*^9}, {3.968339496759749*^9, 
  3.968339498023903*^9}, {3.968339562988065*^9, 3.968339623711769*^9}, {
  3.9692067776889057`*^9, 3.969206812667809*^9}, {3.969206844877241*^9, 
  3.969206853159433*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"2ab78193-6c6a-4b43-94a0-d9e948b9e759"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       StyleBox["\<\"Outcome\"\>",
        StripOnInput->False,
        FontWeight->Bold],
       HoldForm], 
      TagBox[
       StyleBox["\<\"Probability\"\>",
        StripOnInput->False,
        FontWeight->Bold],
       HoldForm]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], "0.38037274606193794`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], "0.059969264924188005`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], "0.01435575428565819`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1"}], "}"}], "0.0909716069397538`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], "0.2677919869274`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], "0.024469872344652213`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], "0.02040809548666238`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], "0.14166067302974739`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableDepth -> 2, TableHeadings -> {None, {
       Style["Outcome", Bold], 
       Style["Probability", Bold]}}]]]], "Output",
 CellChangeTimes->{
  3.968338671461172*^9, {3.968338734983478*^9, 3.968338740372651*^9}, 
   3.968339498673562*^9, {3.968339579882612*^9, 3.968339624439142*^9}, 
   3.9683441746161747`*^9, 3.968347206651628*^9, 3.968348365521378*^9, {
   3.9692067855423527`*^9, 3.969206814068118*^9}, {3.969206847919838*^9, 
   3.969206853433913*^9}, 3.969210125452684*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"aeb1ac0f-8bbb-4612-9d81-\
09adc5eb68b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"prob", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", "0"}], "&&", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}], "==", "1"}]}], "&"}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.968344286911707*^9, 3.968344321057107*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"16a7bb94-17fd-4387-b97e-8ca0c30f2b82"],

Cell[BoxData["0.1509408718639418`"], "Output",
 CellChangeTimes->{{3.968344302142111*^9, 3.9683443213580523`*^9}, 
   3.968347206666059*^9, 3.968348365534387*^9, 3.969206832623671*^9, 
   3.969210125457356*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"22391bf6-3cce-4c15-b196-11b3dc565720"]
}, Open  ]],

Cell["\<\
Now suppose we do not care about qubit 3 and want to focus only on the \
statistics of qubits 1 and 2. To do this, we compute the marginal \
distribution by summing over the outcomes of qubit 3. (In the quantum \
formalism, this corresponds to taking the partial trace over qubit 3 to \
obtain the reduced state of qubits 1 and 2.)\
\>", "Text",
 CellChangeTimes->{{3.9683387696786413`*^9, 3.968338826104653*^9}, 
   3.968338867958982*^9},ExpressionUUID->"fb3b931d-55e8-43c2-893d-\
e8fbc60dc37b"],

Cell["\<\
To get the marginal distribution, the calculation as follows:
- first group outcomes based on the values of the first and second elements \
(we are only interested in the marginal distribution qubit 1 and 2)
- for each group, add up the values of probabilities\
\>", "Text",
 CellChangeTimes->{{3.9683396735888*^9, 3.9683397394130077`*^9}, {
   3.968342609785865*^9, 3.968342627514386*^9}, 
   3.968342793727981*^9},ExpressionUUID->"d99e11ba-4b28-4168-9c4f-\
340628e6c33b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{"prob", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", "2"}], "]"}], "]"}], "&"}], ")"}], "->", "Last"}], ",", 
   "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.9683396667035522`*^9, 3.968339668030319*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"3ba33f05-0a31-4f55-9db5-2b725f3f8697"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", "0.44034201098612596`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", "0.10532736122541199`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "0.2922618592720522`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.16206876851640978`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9683426294154367`*^9, 3.968347206668523*^9, 
  3.968348365536974*^9, 3.969206877015374*^9, 3.9692101254686117`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"f0b2348d-ad10-4fa9-9a00-026ae9347800"]
}, Open  ]],

Cell["\<\
The same process can be done more cleanly using built-in Wolfram Language \
functionality. This makes it much easier to compute other probabilities as \
well (you\[CloseCurlyQuote]ll see this shortly).\
\>", "Text",
 CellChangeTimes->{{3.968342802234582*^9, 3.96834284010005*^9}, 
   3.968342991108684*^9},ExpressionUUID->"400c57fe-ed6e-496e-9e04-\
ffcd28efb036"],

Cell["Calculate  the marginal distribution", "Text",
 CellChangeTimes->{{3.968343071721896*^9, 3.9683430828735113`*^9}, 
   3.9683432077817698`*^9},ExpressionUUID->"01c379a5-53d5-4db7-81df-\
5e27494b743c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]12", "=", 
  RowBox[{"MarginalDistribution", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9683388810538483`*^9, 3.9683389257334347`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"92db6b77-fa57-434a-b748-d10764e8fa28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CategoricalDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                StyleBox[
                 TagBox[
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    0 -> <|0 -> NumberForm[0.44034201098612596`, 2], 1 -> 
                    NumberForm[0.10532736122541199`, 2]|>, 
                    1 -> <|0 -> NumberForm[0.2922618592720522, 2], 1 -> 
                    NumberForm[0.16206876851640978`, 2]|>|>, "AllowEmbedding" -> 
                    True, "InitialShape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {All}]]], 2, 
                    DirectedInfinity[1], {}], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 2], 2], 
                    "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
                    "Shape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {All}]]], 2, 
                    DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 2], 2], 
                    "Path" -> {}, "DisplayedRowCount" -> 2, 
                    "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, 
                    "DataColumnCount" -> 1, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.44034201098612596`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[0]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.10532736122541199`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[1]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.2922618592720522, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[0]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.16206876851640978`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[1]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    RGBColor[
                    0.749003690406716, 0.749003690406716, 0.749003690406716], 
                    Spacings -> {0, 0}, Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {
                    LineBreakWithin -> False, 
                    LightDarkAutoColorRules -> <|"MarkedColors" -> True|>}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                   Deploy, DefaultBaseStyle -> "Deploy"], 
                  Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], Magnification -> 
                 0.8 Inherited, StripOnInput -> False], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CategoricalDistribution[<|
   "Probabilities" -> 
    SparseArray[
     Automatic, {2, 2}, 0., {
      1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {0.44034201098612596`, 
       0.10532736122541199`, 0.2922618592720522, 0.16206876851640978`}}], 
    "Index" -> {<|0 -> 1, 1 -> 2|>, <|0 -> 1, 1 -> 2|>}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.968338884659535*^9, 3.9683389259506903`*^9}, 
   3.968344774655635*^9, 3.96834720669258*^9, {3.968348357103101*^9, 
   3.9683483655676413`*^9}, 3.969206880638013*^9, 3.9692101254968233`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"b9050810-6f31-4f6b-91d7-c6dd5c84b918"]
}, Open  ]],

Cell["\<\
Visualize the contingency table of the marginal distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343056167914*^9, 
  3.968343066604546*^9}},ExpressionUUID->"4dc39fdf-094a-4646-b8cd-\
447e8ccda05f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]12", ",", "\"\<ProbabilityTable\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9683395156082172`*^9, 3.96833951607542*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c00143cc-d3c6-4704-9d46-0e47063baf53"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|0 -> 0.44034201098612596`, 1 -> 0.10532736122541199`|>, 
       1 -> <|0 -> 0.2922618592720522, 1 -> 0.16206876851640978`|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`AtomShape[60]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 2], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`AtomShape[60]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 2], 2], "Path" -> {}, "DisplayedRowCount" -> 2,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.440342"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.105327"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.292262"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.162069"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> 
          RGBColor[0.749003690406716, 0.749003690406716, 0.749003690406716], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{183.788, {76.24456787109375, 84.84246826171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{183.788, {76.24456787109375, 84.84246826171875}}],
    BaseStyle->{
     LineBreakWithin -> False, 
      LightDarkAutoColorRules -> <|"MarkedColors" -> True|>},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.968339516455041*^9, {3.9683447712539988`*^9, 3.9683447763205137`*^9}, 
   3.9683472067075872`*^9, {3.968348358490398*^9, 3.968348365587421*^9}, 
   3.969206886637643*^9, 3.969210125510634*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"0346821c-227c-4b37-922a-e5a380b75b86"]
}, Open  ]],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 from the marginal \
probability distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343279930684*^9, 3.9683432879877996`*^9}, {
  3.968347171297394*^9, 3.9683471738250303`*^9}, {3.968347282354623*^9, 
  3.968347288384892*^9}, {3.96834733353307*^9, 3.968347334192477*^9}, {
  3.968347404911089*^9, 
  3.9683474072806377`*^9}},ExpressionUUID->"55b1a2df-21fe-4d60-9e8a-\
52e638092738"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"q1", "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]12"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683432462218018`*^9, 3.9683432763884373`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"3d57a38b-7b1f-47c1-be50-8973636de630"],

Cell[BoxData["0.545669372211538`"], "Output",
 CellChangeTimes->{{3.9683432724750347`*^9, 3.968343276786672*^9}, 
   3.968344778118535*^9, {3.968347175135141*^9, 3.96834720674972*^9}, 
   3.968348365630196*^9, 3.969206888428315*^9, 3.9692101255470133`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"d5194225-2e32-4680-9a58-953e0c08d861"]
}, Open  ]],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 from the overall \
probability distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343279930684*^9, 3.9683432879877996`*^9}, {
  3.968347171297394*^9, 3.9683471738250303`*^9}, {3.968347282354623*^9, 
  3.968347288384892*^9}, {3.96834733353307*^9, 3.968347340185274*^9}, {
  3.9683474104085197`*^9, 
  3.968347410637444*^9}},ExpressionUUID->"69fc3163-cb41-403c-b9e8-\
0b78969efcea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"q1", "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683471801529303`*^9, 3.9683471823847637`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"084ca74a-0b07-4573-9aa7-fc50c2e27a8f"],

Cell[BoxData["0.545669372211538`"], "Output",
 CellChangeTimes->{{3.968347182682353*^9, 3.9683472067549963`*^9}, 
   3.968348365634705*^9, {3.9692068929221783`*^9, 3.9692068992569027`*^9}, 
   3.9692101255569487`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"f8f08361-7621-42db-bc63-82a606d66ecd"]
}, Open  ]],

Cell["\<\
Of course, the rules of quantum theory provide a recipe for obtaining the \
quantum state of qubits 1 and 2 by averaging over all contributions from \
qubit 3. This is done by tracing over the degrees of freedom of qubit 3, \
which yields the reduced state for qubits 1 and 2.\
\>", "Text",
 CellChangeTimes->{{3.968347608460641*^9, 3.968347618114686*^9}, {
  3.968347694369904*^9, 3.968347725796362*^9}, {3.9683483774023848`*^9, 
  3.9683484078304653`*^9}, {3.968348472196415*^9, 
  3.9683484806477013`*^9}},ExpressionUUID->"6390c58d-7126-4d6b-89ee-\
62824a1001f5"],

Cell["\<\
Trace out the qubit-3 (which is the 3rd subsystem) from the overall state:\
\>", "Text",
 CellChangeTimes->{{3.96834913803797*^9, 
  3.9683491518502893`*^9}},ExpressionUUID->"0cc0a715-2576-41dc-ad83-\
0572fb94f67f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumPartialTrace", "[", 
  RowBox[{"state", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968348413703866*^9, 3.9683484146103067`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"7766b02c-42b2-4bf5-8bcd-b090f879b764"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAMZlD1Ytve4/eg9hbEVz4j9a
MXeKzWHVP/wrGacXPOw/gkzQlQfH3j+7/Ax+8UvqPxaZJsMRpug/Fmttj0+R
4z807jqy+ITuP9F6FJxRv+4/tul2Hil25T/jB5PLdwHlP+7Is8qa6Ok/CM1U
MPMP6z9O6F7ddXHvPwbIOV3WgN0/MF6GoXcI6z8ooyYHCcPRP9USujDjNu8/
EcsPlxJk6T/AL//I4xrpPyC6pQJxAec/hPawzJn77D+IIJWS8i7gP2rbK3A1
j+8/tfeRXY9I6j/shshjvevhP0e/nYViX+4/zJ1TeBVP4j/VS0lXe7fhP5z5
3nLhseI/DdOpVGjQ2j/W0UJsPVXuP7TwOKqJze0/GPM+rPPL6z/AILd/YnHd
P81DwzVode8/+gQIPgpy6z/XztKAmz/rP6FOYmDszu0/uu/Y6/S/4T8EGfWA
bOvnP5f1xABGfeg/aM+XHz4g7j/EOi/oyZ7qP8AFnGnGGO0/xukH0ERo1T/d
97iLUSXfP5VvypA=
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, PlotInteractivity :> 
              True, DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
              DisplayFunction -> Identity, PlotInteractivity :> True, 
              DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, Background -> 
              RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
              False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAMZlD1Ytve4/eg9hbEVz4j9a
MXeKzWHVP/wrGacXPOw/gkzQlQfH3j+7/Ax+8UvqPxaZJsMRpug/Fmttj0+R
4z807jqy+ITuP9F6FJxRv+4/tul2Hil25T/jB5PLdwHlP+7Is8qa6Ok/CM1U
MPMP6z9O6F7ddXHvPwbIOV3WgN0/MF6GoXcI6z8ooyYHCcPRP9USujDjNu8/
EcsPlxJk6T/AL//I4xrpPyC6pQJxAec/hPawzJn77D+IIJWS8i7gP2rbK3A1
j+8/tfeRXY9I6j/shshjvevhP0e/nYViX+4/zJ1TeBVP4j/VS0lXe7fhP5z5
3nLhseI/DdOpVGjQ2j/W0UJsPVXuP7TwOKqJze0/GPM+rPPL6z/AILd/YnHd
P81DwzVode8/+gQIPgpy6z/XztKAmz/rP6FOYmDszu0/uu/Y6/S/4T8EGfWA
bOvnP5f1xABGfeg/aM+XHz4g7j/EOi/oyZ7qP8AFnGnGGO0/xukH0ERo1T/d
97iLUSXfP5VvypA=
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, PlotInteractivity :> 
              True, DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
              DisplayFunction -> Identity, PlotInteractivity :> True, 
              DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, Background -> 
              RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
              False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.5746896929393726`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.8893883815517218`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
  SparseArray[
   Automatic, {4, 4}, Complex[0., 0.], {
    1, {{0, 4, 8, 12, 16}, {{1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {
      2}, {3}, {4}, {1}, {2}, {3}, {4}}}, {Complex[0.4403420109861261, 0.], 
     Complex[0.11030170427542012`, -0.08339951864616728], 
     Complex[-0.21881036993671266`, 0.17629950467465236`], Complex[
     0.035681630354687986`, -0.012847743014609836`], Complex[
     0.11030170427542012`, 0.08339951864616728], Complex[0.105327361225412, 
     0.], Complex[-0.013332559113962923`, -0.0345161373957634], Complex[
     0.053370436832921635`, 0.09335227582568899], 
     Complex[-0.21881036993671266`, -0.17629950467465236`], 
     Complex[-0.013332559113962923`, 0.0345161373957634], Complex[
     0.2922618592720523, 0.], Complex[-0.026102351726375345`, 
     0.12598630779269748`], Complex[0.035681630354687986`, 
     0.012847743014609836`], Complex[
     0.053370436832921635`, -0.09335227582568899], 
     Complex[-0.026102351726375345`, -0.12598630779269748`], Complex[
     0.1620687685164098, 0.]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9683484153797913`*^9, 3.969206902210919*^9, 
  3.969210125655746*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"dff38ffc-bd10-4b10-b069-9d58ae2fb348"]
}, Open  ]],

Cell["\<\
And this reduced state yields the same marginal probabilities as before:\
\>", "Text",
 CellChangeTimes->{{3.968348432601138*^9, 3.9683484444804983`*^9}, 
   3.9683486123255367`*^9},ExpressionUUID->"50322e51-e8b3-4f44-9d14-\
cbe0b8e6ff28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumPartialTrace", "[", 
   RowBox[{"state", ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "[", "\"\<Probabilities\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.968348418703348*^9, 3.9683484257486973`*^9}, {
  3.968348807351156*^9, 3.968348807780431*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"002a4746-e5d1-425f-a910-9c8d8cf8e04f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], "\[Rule]", 
    "0.44034201098612596`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    "0.10532736122541198`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    "0.2922618592720522`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], "\[Rule]", 
    "0.16206876851640978`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.968348422403769*^9, 3.968348426088222*^9}, 
   3.968348811448718*^9, 3.969206907354138*^9, 3.969210125668968*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"3fa0f1f3-172e-4533-b5a3-29f9ecccb3cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]12", ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.968348993820956*^9, 3.9683490200113792`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"9c966f8c-5757-49ae-bb49-d9ec63fc0514"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", "0.44034201098612596`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", "0.10532736122541199`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "0.2922618592720522`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.16206876851640978`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.96834899628862*^9, 3.9683490206134777`*^9}, 
   3.9692069107595*^9, 3.969210125674444*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"7e4a33b8-48bc-499d-ac66-cdeb4097c456"]
}, Open  ]],

Cell["\<\
In future chapters, we will discuss in details the idea of tracing out a \
subsystem and how to describe the state of composite systems in quantum \
theory.\
\>", "Text",
 CellChangeTimes->{{3.968348724077909*^9, 
  3.968348784413887*^9}},ExpressionUUID->"ca976c05-fac3-44fe-84bc-\
b0a0df9a5339"]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.957529162391567*^9, 3.9575291646615334`*^9}, {
  3.968252755378531*^9, 
  3.9682527559221497`*^9}},ExpressionUUID->"473bcbcb-924a-48c6-a51d-\
1eeef80ed47e"],

Cell["Install Wolfram quantum framework", "Text",
 CellChangeTimes->{{3.968331681657031*^9, 
  3.968331687131729*^9}},ExpressionUUID->"869583df-5da3-424d-86ae-\
594e1e994fc4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletInstall", "[", 
  RowBox[{"\"\<https://www.wolfr.am/DevWQCF\>\"", ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}], "\n", 
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]}], "Code",
 CellChangeTimes->{{3.9388016656063175`*^9, 3.9388016757122*^9}, {
  3.957529117446884*^9, 3.957529117764634*^9}, {3.9575291526382093`*^9, 
  3.95752915355468*^9}, {3.9579616792800007`*^9, 3.9579616795817413`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a6ed380e-35d9-4d06-9ba5-70dc10b7dde6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.3\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/mohammadb/Library/Wolfram/Paclets/Repository/\
Wolfram__QuantumFramework-1.6.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.6.3", "WolframVersion" -> 
    "13.1+", "PrimaryContext" -> "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{"Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}, 
         "Wolfram`QuantumFramework`Init`", "Wolfram`QuantumFramework`Gates`", 
         "Wolfram`QuantumFramework`Experimental`", 
         "Wolfram`QuantumFramework`ExampleRepository`", 
         "Wolfram`QuantumFramework`DiagramPlot`", 
         "Wolfram`QuantumFramework`SecondQuantization`", 
         "Wolfram`QuantumFramework`QuantumOptimization`"}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumSimilarity", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumPhaseSpaceTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{
         "IBMQuantumPlatform.paclet", "IBMQuantumPlatform-0.0.2.paclet"}}}}, 
    "Location" -> 
    "/Users/mohammadb/Library/Wolfram/Paclets/Repository/Wolfram__\
QuantumFramework-1.6.3"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.957529358529237*^9, 3.95753068051863*^9, 3.968249612751997*^9, {
   3.968252003052746*^9, 3.968252020320809*^9}, 3.968254248592813*^9, 
   3.9683318971260653`*^9, 3.96833782397351*^9, 3.968345686645543*^9, {
   3.969210121485729*^9, 3.969210131910822*^9}},
 CellLabel->"Out[28]=",ExpressionUUID->"b113e07b-df3c-43bd-b16a-0bcb4ea9a92b"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1728, 959},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"Openers" -> <|"ExampleSection" -> <|"3" -> Closed|>|>|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"14.3 for Mac OS X ARM (64-bit) (July 22, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5fcd9741-bbf6-774b-b015-725de9406468"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 165, 3, 144, "Title",ExpressionUUID->"a95eef93-0a1c-3746-8d2f-8c03d537a6f2"],
Cell[744, 27, 444, 9, 83, "Text",ExpressionUUID->"f844df69-a66d-4e30-be6b-197320559c7c"],
Cell[CellGroupData[{
Cell[1213, 40, 159, 3, 99, "Section",ExpressionUUID->"d47a7f2d-e3d8-a646-800b-2925ca67ba16"],
Cell[1375, 45, 257, 4, 46, "Item",ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-7dccf980dd4f"],
Cell[1635, 51, 216, 4, 46, "Item",ExpressionUUID->"1ad28be2-632c-2f46-baa1-84defee11031"],
Cell[1854, 57, 215, 4, 46, "Item",ExpressionUUID->"c6f9af1d-b3a4-4764-8e95-09b0b5cfd1b0"],
Cell[2072, 63, 212, 4, 46, "Item",ExpressionUUID->"89a7bac9-c131-4ecc-a181-df131c4107d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2321, 72, 246, 4, 99, "Section",ExpressionUUID->"8a65c536-47fd-0649-a611-4a5099f3c6b0"],
Cell[2570, 78, 743, 12, 116, "Text",ExpressionUUID->"a99a2876-174d-ad44-aee4-86201ca9154d"],
Cell[3316, 92, 903, 25, 50, "Text",ExpressionUUID->"0caacd39-bc7a-df4c-bcef-56175aed7f9b"],
Cell[4222, 119, 721, 12, 116, "Text",ExpressionUUID->"a7ad6136-43aa-3e46-8dce-d3445484c29c"],
Cell[4946, 133, 252, 6, 50, "Text",ExpressionUUID->"7b606baf-0b78-564a-8b89-f19177ee58d6"],
Cell[5201, 141, 339, 7, 50, "Text",ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-9a38afeacffd"],
Cell[CellGroupData[{
Cell[5565, 152, 234, 5, 44, "Input",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],
Cell[5802, 159, 224, 3, 50, "Output",ExpressionUUID->"d5af3dbc-c1e5-4865-9997-30b74ee8ff60"]
}, Open  ]],
Cell[6041, 165, 257, 7, 50, "Text",ExpressionUUID->"24077bc8-8047-4901-bf50-393f53f5d20d"],
Cell[6301, 174, 276, 4, 50, "Text",ExpressionUUID->"0f46b1ee-01e5-0a41-b171-f167e749208c"],
Cell[CellGroupData[{
Cell[6602, 182, 368, 8, 44, "Input",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],
Cell[6973, 192, 852, 14, 80, "Output",ExpressionUUID->"fe6c0cca-f39f-46b4-87f9-b7baa29121ed"]
}, Open  ]],
Cell[7840, 209, 408, 8, 50, "Text",ExpressionUUID->"04da42bd-d5dd-764f-b4c9-d9cfb6aa1b2d"],
Cell[CellGroupData[{
Cell[8273, 221, 1616, 33, 48, "Input",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],
Cell[9892, 256, 10800, 317, 382, "Output",ExpressionUUID->"b22269c4-e023-4af1-90df-841c2e051ec7"]
}, Open  ]],
Cell[20707, 576, 351, 7, 50, "Text",ExpressionUUID->"d25f250a-d0f6-4b19-bac6-b3ff81795bca"],
Cell[CellGroupData[{
Cell[21083, 587, 1805, 42, 48, "Input",ExpressionUUID->"1b509676-e49b-468d-b8c5-1ebd0661bef5"],
Cell[22891, 631, 51144, 1304, 228, "Output",ExpressionUUID->"89e88ab5-6af9-4f65-84db-a2c643986a03"]
}, Open  ]],
Cell[74050, 1938, 323, 6, 50, "Text",ExpressionUUID->"6a135abe-9b98-4553-822d-af701fcffbab"],
Cell[74376, 1946, 452, 9, 83, "Text",ExpressionUUID->"23ea6f15-b590-4340-b738-f73543fee937"],
Cell[CellGroupData[{
Cell[74853, 1959, 485, 10, 44, "Input",ExpressionUUID->"f697b007-ec50-4c4f-9ccc-719490dd17e5"],
Cell[75341, 1971, 605, 16, 65, "Output",ExpressionUUID->"d7a380b2-509d-49f3-a828-974edc33e915"]
}, Open  ]],
Cell[75961, 1990, 506, 9, 83, "Text",ExpressionUUID->"09eddf68-cce0-45fa-8caa-2c27b9dd0ca3"],
Cell[76470, 2001, 1007, 24, 44, "Input",ExpressionUUID->"46361cd7-ba0d-4bb3-ad7f-b5f2239647e3"],
Cell[77480, 2027, 183, 3, 50, "Text",ExpressionUUID->"9fa21214-3735-4af4-bfcb-3d3ac8b08a62"],
Cell[CellGroupData[{
Cell[77688, 2034, 785, 18, 44, "Input",ExpressionUUID->"36c3fa54-e6c3-4c9d-98e9-3015fa03f72b"],
Cell[78476, 2054, 2743, 73, 164, "Output",ExpressionUUID->"b6d0455c-bb1b-4eb0-bc41-d6bc12b147b3"]
}, Open  ]],
Cell[81234, 2130, 163, 3, 50, "Text",ExpressionUUID->"265dbc0e-bbd2-4b8f-8985-29bc5649a9b4"],
Cell[CellGroupData[{
Cell[81422, 2137, 892, 18, 74, "Input",ExpressionUUID->"4a5461b5-69e9-40c3-8907-ab31f12a933f"],
Cell[82317, 2157, 62604, 1575, 348, "Output",ExpressionUUID->"24b17939-555b-43cf-b072-4ebe8f05645f"]
}, {2}]],
Cell[144933, 3735, 287, 6, 50, "Text",ExpressionUUID->"78bc4bbf-0fb0-4c93-9303-5e2eede052f3"],
Cell[145223, 3743, 675, 12, 116, "Text",ExpressionUUID->"53177d8d-37b1-4b4b-b185-fd0128a7f952"]
}, Closed]],
Cell[CellGroupData[{
Cell[145935, 3760, 198, 3, 76, "Section",ExpressionUUID->"2a9feec0-c161-41ec-99f7-d0b837b42d52"],
Cell[146136, 3765, 603, 14, 83, "Text",ExpressionUUID->"7104ffe3-042b-4b5e-9406-08adc37cba22"],
Cell[CellGroupData[{
Cell[146764, 3783, 324, 7, 44, "Input",ExpressionUUID->"fccaeaca-17f7-4da9-94c0-5c4705db8e2a"],
Cell[147091, 3792, 869, 22, 50, "Output",ExpressionUUID->"a045777d-85b7-4b74-ae66-3025566180ab"]
}, Open  ]],
Cell[147975, 3817, 539, 10, 83, "Text",ExpressionUUID->"4bdd9796-6bf6-49e0-9204-d18f5d55fe66"],
Cell[CellGroupData[{
Cell[148539, 3831, 530, 9, 74, "Input",ExpressionUUID->"ca4e971c-47a0-416f-a4d8-69e1f7a57958"],
Cell[149072, 3842, 2687, 76, 89, "Output",ExpressionUUID->"eab36393-1311-4910-b31f-4c126cbe5c27"]
}, Open  ]],
Cell[151774, 3921, 215, 5, 50, "Text",ExpressionUUID->"63b16e63-3985-47b7-9702-f3800c34688e"],
Cell[151992, 3928, 659, 15, 44, "Input",ExpressionUUID->"0e149d74-16a5-42e8-a403-0dcf3c6d024d"],
Cell[152654, 3945, 194, 3, 50, "Text",ExpressionUUID->"329574b4-9037-4d82-af34-1f2368554fcd"],
Cell[CellGroupData[{
Cell[152873, 3952, 700, 11, 44, "Input",ExpressionUUID->"bdba2106-92ca-404d-b4f1-f97c1a8abf2e"],
Cell[153576, 3965, 52015, 1003, 346, "Output",ExpressionUUID->"ed4ea9e5-d465-4e09-964b-82b5d678cd22"]
}, Open  ]],
Cell[205606, 4971, 383, 8, 50, "Text",ExpressionUUID->"005c39db-c2d5-49eb-9bdc-f4c14fac70e1"],
Cell[205992, 4981, 423, 8, 50, "Text",ExpressionUUID->"3fe18dc6-3f46-4c14-ad57-20f216f68436"],
Cell[CellGroupData[{
Cell[206440, 4993, 443, 11, 44, "Input",ExpressionUUID->"743bbc34-5146-4ab2-b454-696944ca422e"],
Cell[206886, 5006, 285, 4, 50, "Output",ExpressionUUID->"df95090f-1b2b-4fde-9db7-bae91262b510"]
}, Open  ]],
Cell[207186, 5013, 657, 12, 149, "Text",ExpressionUUID->"a39e8465-5c77-476d-ae22-8b9c55d68a82"],
Cell[207846, 5027, 304, 7, 50, "Text",ExpressionUUID->"b5db0754-608e-4e81-a998-f93dfcaedce7"],
Cell[CellGroupData[{
Cell[208175, 5038, 1821, 43, 79, "Input",ExpressionUUID->"2ab78193-6c6a-4b43-94a0-d9e948b9e759"],
Cell[209999, 5083, 2187, 62, 272, "Output",ExpressionUUID->"aeb1ac0f-8bbb-4612-9d81-09adc5eb68b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212223, 5150, 662, 20, 44, "Input",ExpressionUUID->"16a7bb94-17fd-4387-b97e-8ca0c30f2b82"],
Cell[212888, 5172, 289, 4, 50, "Output",ExpressionUUID->"22391bf6-3cce-4c15-b196-11b3dc565720"]
}, Open  ]],
Cell[213192, 5179, 506, 9, 83, "Text",ExpressionUUID->"fb3b931d-55e8-43c2-893d-e8fbc60dc37b"],
Cell[213701, 5190, 483, 9, 116, "Text",ExpressionUUID->"d99e11ba-4b28-4168-9c4f-340628e6c33b"],
Cell[CellGroupData[{
Cell[214209, 5203, 472, 13, 44, "Input",ExpressionUUID->"3ba33f05-0a31-4f55-9db5-2b725f3f8697"],
Cell[214684, 5218, 746, 18, 50, "Output",ExpressionUUID->"f0b2348d-ad10-4fa9-9a00-026ae9347800"]
}, Open  ]],
Cell[215445, 5239, 373, 7, 83, "Text",ExpressionUUID->"400c57fe-ed6e-496e-9e04-ffcd28efb036"],
Cell[215821, 5248, 205, 3, 50, "Text",ExpressionUUID->"01c379a5-53d5-4db7-81df-5e27494b743c"],
Cell[CellGroupData[{
Cell[216051, 5255, 354, 7, 44, "Input",ExpressionUUID->"92db6b77-fa57-434a-b748-d10764e8fa28"],
Cell[216408, 5264, 44537, 794, 93, "Output",ExpressionUUID->"b9050810-6f31-4f6b-91d7-c6dd5c84b918"]
}, Open  ]],
Cell[260960, 6061, 211, 5, 50, "Text",ExpressionUUID->"4dc39fdf-094a-4646-b8cd-447e8ccda05f"],
Cell[CellGroupData[{
Cell[261196, 6070, 277, 5, 44, "Input",ExpressionUUID->"c00143cc-d3c6-4704-9d46-0e47063baf53"],
Cell[261476, 6077, 33705, 625, 186, "Output",ExpressionUUID->"0346821c-227c-4b37-922a-e5a380b75b86"]
}, Open  ]],
Cell[295196, 6705, 444, 9, 50, "Text",ExpressionUUID->"55b1a2df-21fe-4d60-9e8a-52e638092738"],
Cell[CellGroupData[{
Cell[295665, 6718, 381, 9, 44, "Input",ExpressionUUID->"3d57a38b-7b1f-47c1-be50-8973636de630"],
Cell[296049, 6729, 335, 4, 50, "Output",ExpressionUUID->"d5194225-2e32-4680-9a58-953e0c08d861"]
}, Open  ]],
Cell[296399, 6736, 443, 9, 50, "Text",ExpressionUUID->"69fc3163-cb41-403c-b9e8-0b78969efcea"],
Cell[CellGroupData[{
Cell[296867, 6749, 390, 9, 44, "Input",ExpressionUUID->"084ca74a-0b07-4573-9aa7-fc50c2e27a8f"],
Cell[297260, 6760, 296, 4, 50, "Output",ExpressionUUID->"f8f08361-7621-42db-bc63-82a606d66ecd"]
}, Open  ]],
Cell[297571, 6767, 576, 10, 83, "Text",ExpressionUUID->"6390c58d-7126-4d6b-89ee-62824a1001f5"],
Cell[298150, 6779, 225, 5, 50, "Text",ExpressionUUID->"0cc0a715-2576-41dc-ad83-0572fb94f67f"],
Cell[CellGroupData[{
Cell[298400, 6788, 270, 5, 44, "Input",ExpressionUUID->"7766b02c-42b2-4bf5-8bcd-b090f879b764"],
Cell[298673, 6795, 12114, 240, 86, "Output",ExpressionUUID->"dff38ffc-bd10-4b10-b069-9d58ae2fb348"]
}, Open  ]],
Cell[310802, 7038, 249, 5, 50, "Text",ExpressionUUID->"50322e51-e8b3-4f44-9d14-cbe0b8e6ff28"],
Cell[CellGroupData[{
Cell[311076, 7047, 372, 8, 44, "Input",ExpressionUUID->"002a4746-e5d1-425f-a910-9c8d8cf8e04f"],
Cell[311451, 7057, 1414, 41, 53, "Output",ExpressionUUID->"3fa0f1f3-172e-4533-b5a3-29f9ecccb3cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312902, 7103, 275, 5, 44, "Input",ExpressionUUID->"9c966f8c-5757-49ae-bb49-d9ec63fc0514"],
Cell[313180, 7110, 722, 18, 50, "Output",ExpressionUUID->"7e4a33b8-48bc-499d-ac66-cdeb4097c456"]
}, Open  ]],
Cell[313917, 7131, 306, 7, 50, "Text",ExpressionUUID->"ca976c05-fac3-44fe-84bc-b0a0df9a5339"]
}, Closed]],
Cell[CellGroupData[{
Cell[314260, 7143, 212, 4, 76, "Section",ExpressionUUID->"473bcbcb-924a-48c6-a51d-1eeef80ed47e"],
Cell[314475, 7149, 175, 3, 50, "Text",ExpressionUUID->"869583df-5da3-424d-86ae-594e1e994fc4"],
Cell[CellGroupData[{
Cell[314675, 7156, 518, 8, 104, "Code",ExpressionUUID->"a6ed380e-35d9-4d06-9ba5-70dc10b7dde6"],
Cell[315196, 7166, 24665, 434, 86, "Output",ExpressionUUID->"b113e07b-df3c-43bd-b16a-0bcb4ea9a92b"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

