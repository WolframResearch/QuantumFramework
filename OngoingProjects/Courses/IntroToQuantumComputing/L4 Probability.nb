(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Wolfram 14.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       154,          7]
NotebookDataLength[    348874,       7710]
NotebookOptionsPosition[    338509,       7544]
NotebookOutlinePosition[    339005,       7562]
CellTagsIndexPosition[    338962,       7559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Reviewing Probability", "Title",
 CellChangeTimes->{{3.9448487458361225`*^9, 
  3.94484874867618*^9}},ExpressionUUID->"a95eef93-0a1c-3746-8d2f-\
8c03d537a6f2"],

Cell["\<\
We will discuss the concept of probability and how it relates to the \
frequency of different outcomes in a repeatable measurement. Then we will \
show how probabilities in quantum theory help us calculate joint and marginal \
probabilities.\
\>", "Text",
 CellChangeTimes->{{3.968331700214238*^9, 3.9683317023573513`*^9}, {
  3.968349049736882*^9, 
  3.9683491163527946`*^9}},ExpressionUUID->"f844df69-a66d-4e30-be6b-\
197320559c7c"],

Cell[CellGroupData[{

Cell["Key Concepts", "Section",
 CellChangeTimes->{{3.9448487565071926`*^9, 
  3.944848758051235*^9}},ExpressionUUID->"d47a7f2d-e3d8-a646-800b-\
2925ca67ba16"],

Cell["Random outcome", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.945083983169876*^9, 3.9450839880544662`*^9}, {3.9450853294131107`*^9, 
  3.945085330108259*^9}},ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-\
7dccf980dd4f"],

Cell["Probability distribution", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.96834910352884*^9, 
  3.968349103534596*^9}},ExpressionUUID->"1ad28be2-632c-2f46-baa1-\
84defee11031"],

Cell["Marginal probability", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.9683491041238327`*^9, 
  3.968349108511135*^9}},ExpressionUUID->"c6f9af1d-b3a4-4764-8e95-\
09b0b5cfd1b0"],

Cell["Joint probability", "Item",
 CellChangeTimes->{{3.9448487641071663`*^9, 3.944848772534397*^9}, {
  3.9683491041238327`*^9, 
  3.968349111357705*^9}},ExpressionUUID->"89a7bac9-c131-4ecc-a181-\
df131c4107d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Experiments and Randomness", "Section",
 CellChangeTimes->{{3.9450842281823845`*^9, 3.945084231085821*^9}, {
  3.945088886049017*^9, 
  3.9450888905680294`*^9}},ExpressionUUID->"8a65c536-47fd-0649-a611-\
4a5099f3c6b0"],

Cell["\<\
You\[CloseCurlyQuote]re no doubt familiar with coin flips or dice rolls as \
ways to generate random outcomes. For our purposes, think of a random outcome \
as a definite result from a repeatable experiment. Randomness here means that \
several different outcomes are possible, and while we may know their \
probabilities, there is no way to determine which specific outcome will occur \
before running the experiment.\
\>", "Text",
 CellChangeTimes->{{3.945085291101513*^9, 3.9450853176283836`*^9}, {
   3.9450853533803387`*^9, 3.945085373932991*^9}, {3.945085588900688*^9, 
   3.945085600461693*^9}, {3.9450858169158382`*^9, 3.945085950666769*^9}, 
   3.968331793368844*^9},ExpressionUUID->"a99a2876-174d-ad44-aee4-\
86201ca9154d"],

Cell["\<\
You can find much more information on probability and statistics in any of \
the following Wolfram U courses:\
\>", "Text",
 CellChangeTimes->{
  3.9450855848760777`*^9},ExpressionUUID->"0caacd39-bc7a-df4c-bcef-\
56175aed7f9b"],

Cell[TextData[ButtonBox["Introduction to Probability",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
probability/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
probability/"]], "Item",
 CellChangeTimes->{{3.945085380508417*^9, 
  3.945085413546896*^9}},ExpressionUUID->"dc127136-a384-b241-87a8-\
49163a2a9890"],

Cell[TextData[ButtonBox["Introduction to Statistics",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"], None},
 ButtonNote->
  "https://www.wolfram.com/wolfram-u/courses/mathematics/introduction-to-\
statistics/"]], "Item",
 CellChangeTimes->{{3.945085380508417*^9, 
  3.945085436441641*^9}},ExpressionUUID->"b243c298-eff2-5a4f-b900-\
358f1e9df0e8"],

Cell["\<\
Quantum theory provides a way to compute the probability distribution over \
possible measurement outcomes. You can think of a probability distribution as \
a rule that assigns a nonnegative probability to each possible outcome of an \
experiment, with all probabilities adding up to 1. In quantum circuits, this \
distribution is typically defined over the discrete set of possible \
bitstrings.\
\>", "Text",
 CellChangeTimes->{{3.9450854540443497`*^9, 3.945085499540102*^9}, {
   3.9450855373336105`*^9, 3.945085565252907*^9}, {3.9450859836765633`*^9, 
   3.945086073819351*^9}, {3.968331832707749*^9, 3.968331857850827*^9}, 
   3.968331905057693*^9},ExpressionUUID->"a7ad6136-43aa-3e46-8dce-\
d3445484c29c"],

Cell["\<\
Let\[CloseCurlyQuote]s look at a couple examples of generating random \
outcomes to build intuition.\
\>", "Text",
 CellChangeTimes->{{3.9450863574437885`*^9, 
  3.945086383034889*^9}},ExpressionUUID->"7b606baf-0b78-564a-8b89-\
f19177ee58d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Frequency vs probability", "Section",
 CellChangeTimes->{{3.9450842356135406`*^9, 3.945084237445633*^9}, {
  3.945086399483801*^9, 3.9450864015551624`*^9}, {3.968345122060177*^9, 
  3.968345125605049*^9}},ExpressionUUID->"239562c2-459c-0742-ac91-\
9ac33b151e7c"],

Cell["\<\
Suppose you want to choose a random whole number between 1 and 10. As with \
many concepts in probability and statistics, there is a built-in Wolfram \
Language function for this:\
\>", "Text",
 CellChangeTimes->{{3.945086419387413*^9, 3.9450865199953384`*^9}, 
   3.9683319969342833`*^9},ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-\
9a38afeacffd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "10"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{3.945086444261326*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{{3.9450864449189034`*^9, 3.945086448910202*^9}, 
   3.968331898474905*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"ebb0ecaa-f739-46a3-ad97-ce5d66450ffd"]
}, Open  ]],

Cell["\<\
The above function returns a uniformly random integer from 1 to 10 \
(inclusive).\
\>", "Text",
 CellChangeTimes->{
  3.968331989853199*^9, {3.968345137625216*^9, 
   3.968345140945898*^9}},ExpressionUUID->"24077bc8-8047-4901-bf50-\
393f53f5d20d"],

Cell["You can also simulate a sequence of random choices:", "Text",
 CellChangeTimes->{{3.945086505914669*^9, 3.9450865453806267`*^9}, 
   3.968345156756831*^9},ExpressionUUID->"0f46b1ee-01e5-0a41-b171-\
f167e749208c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomInteger", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "10"}], "}"}], ",", "20"}], "]"}]], "Input",
 CellLabel->
  "In[123]:=",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "6", ",", "9", ",", "7", ",", "1", ",", "2", ",", "5", ",", "7", ",",
    "5", ",", "3", ",", "3", ",", "4", ",", "4", ",", "1", ",", "3", ",", "8",
    ",", "2", ",", "1", ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.945086413375641*^9, 3.96833189849666*^9, 
  3.968345158296126*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"7f59ac94-8e3d-4b36-bc52-ac5eb0e4374d"]
}, Open  ]],

Cell[TextData[{
 "The experiment to \[OpenCurlyDoubleQuote]choose a random whole number \
between 1 and 10\[CloseCurlyDoubleQuote] generally assumes that random means \
each number has an equal probability to be chosen. Let\[CloseCurlyQuote]s \
look at some specific data to see that your intuitions about equal \
probability for outcomes must be considered carefully. You can use ",
 Cell[BoxData[
  ButtonBox["SeedRandom",
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["https://reference.wolfram.com/language/ref/SeedRandom.html"], None},
   ButtonNote->"https://reference.wolfram.com/language/ref/SeedRandom.html"]],
   "InlineCode",ExpressionUUID->"fd2046e4-3831-6b4e-8307-9c1ce356d7f1"],
 " to give simulated random results reproducibility:"
}], "Text",
 CellChangeTimes->{{3.9450865659394646`*^9, 3.945086683851324*^9}, {
  3.945086871267208*^9, 3.9450869078665485`*^9}, {3.9450869402906265`*^9, 
  3.945086944508871*^9}},ExpressionUUID->"9a92bab1-48ed-4846-98e8-\
e1ec8c64013e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "2134", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"numberdata", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "10"}], "}"}], ",", "20"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.94508673007909*^9, 3.9450867443469753`*^9}, {
  3.9450868012855816`*^9, 3.9450868060276012`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"bf3194b2-7c9a-1d41-974f-a7362ace1fbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "5", ",", "7", ",", "6", ",", "5", ",", "2", ",", "6", ",", "2", ",",
    "9", ",", "9", ",", "5", ",", "2", ",", "10", ",", "7", ",", "10", ",", 
   "8", ",", "9", ",", "3", ",", "2", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.9450867451974144`*^9, 3.9450868067848816`*^9, 
  3.9683320071924057`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"39e8a7a7-0200-46f4-8d5f-9f85e51a534f"]
}, Open  ]],

Cell["\<\
The following histogram shows some features of this outcome that may surprise \
you:\
\>", "Text",
 CellChangeTimes->{{3.945086846427105*^9, 3.94508685878866*^9}, {
  3.945086949602453*^9, 
  3.9450869571624775`*^9}},ExpressionUUID->"04da42bd-d5dd-764f-b4c9-\
d9cfb6aa1b2d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"numberdata", ",", 
   RowBox[{"{", ".5", "}"}], ",", "\"\<Probability\>\"", ",", 
   RowBox[{"Ticks", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Range", "[", "10", "]"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "11"}], "}"}], ",", "All"}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9450867664203815`*^9, 3.9450867675299015`*^9}, {
  3.968332019958971*^9, 3.968332127126045*^9}, {3.968332846059518*^9, 
  3.968332846399328*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.79375, 0.25], EdgeForm[{GrayLevel[0], Opacity[0.567], 
    Thickness[Small]}], {}, 
    {RGBColor[1., 0.79375, 0.25], EdgeForm[{GrayLevel[0], Opacity[0.567], 
     Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2., 0}, {2.5, 0.2}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{131.1529693214799, 
           153.93757143498888`}, {-94.69673915162977, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.2]& ,
        TagBoxNote->"0.2"],
       StyleBox["0.2`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{3., 0}, {3.5, 0.05}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{175.2221735484979, 198.00677566200687`}, {
           79.44513702996503, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.05]& ,
        TagBoxNote->"0.05"],
       StyleBox["0.05`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.05, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5., 0}, {5.5, 0.25}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{263.3605820025338, 
           286.14518411604286`}, {-152.74403121216136`, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.25]& ,
        TagBoxNote->"0.25"],
       StyleBox["0.25`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.25, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6., 0}, {6.5, 0.1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{307.42978622955184`, 330.2143883430608}, {
           21.39784496943342, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.1]& ,
        TagBoxNote->"0.1"],
       StyleBox["0.1`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7., 0}, {7.5, 0.1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{351.4989904565698, 374.2835925700788}, {
           21.39784496943342, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.1]& ,
        TagBoxNote->"0.1"],
       StyleBox["0.1`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{8., 0}, {8.5, 0.05}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{395.56819468358776`, 418.35279679709674`}, {
           79.44513702996503, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.05]& ,
        TagBoxNote->"0.05"],
       StyleBox["0.05`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.05, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{9., 0}, {9.5, 0.15}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{439.6373989106057, 
           462.4220010241147}, {-36.64944709109815, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.15]& ,
        TagBoxNote->"0.15"],
       StyleBox["0.15`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.15, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{10., 0}, {10.5, 0.1}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{483.7066031376237, 506.4912052511327}, {
           21.39784496943342, 138.2424290904966}}],
         "DelayedMouseEffectStyle"],
        StatusArea[#, 0.1]& ,
        TagBoxNote->"0.1"],
       StyleBox["0.1`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.22, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{CoordinatesToolOptions -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], "ChartDefaultStyle" -> {
      Directive[
       RGBColor[1., 0.725, 0], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.24, 0.6, 0.8], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.455, 0.7, 0.21], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.578, 0.51, 0.85], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.4, 0.64, 1.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[1., 0.75, 0.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.8, 0.4, 0.76], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.637, 0.65, 0.], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       Opacity[0.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultChartBaseStyle" -> Directive[
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0]}]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]},
  PlotRange->{{0, 11}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{{{1, 
      FormBox["1", TraditionalForm]}, {2, 
      FormBox["2", TraditionalForm]}, {3, 
      FormBox["3", TraditionalForm]}, {4, 
      FormBox["4", TraditionalForm]}, {5, 
      FormBox["5", TraditionalForm]}, {6, 
      FormBox["6", TraditionalForm]}, {7, 
      FormBox["7", TraditionalForm]}, {8, 
      FormBox["8", TraditionalForm]}, {9, 
      FormBox["9", TraditionalForm]}, {10, 
      FormBox["10", TraditionalForm]}}, Automatic}]], "Output",
 CellChangeTimes->{
  3.9450867680403194`*^9, 3.945086810296196*^9, {3.968332008840445*^9, 
   3.9683321275479927`*^9}, 3.968332846907755*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"51c25416-5fcf-46c0-bf3d-965ee6aa3dfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Histogram", "[", 
     RowBox[{
      RowBox[{"RandomInteger", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "10"}], "}"}], ",", "j"}], "]"}], ",", 
      RowBox[{"{", ".5", "}"}], ",", "\"\<Probability\>\"", ",", 
      RowBox[{"Ticks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "[", "10", "]"}], ",", "Automatic"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "11"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", ".25"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", 
       RowBox[{
        RowBox[{"ToString", "[", "j", "]"}], 
        "<>", "\"\< repetition of experiment\>\""}]}], ",", 
      RowBox[{"ImageSize", "->", "200"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"10", "^", 
       RowBox[{"Range", "[", "5", "]"}]}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.968332658265246*^9, 3.968332877957559*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1b509676-e49b-468d-b8c5-1ebd0661bef5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.567], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.567], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{61.50985141806626, 73.813341369118}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.2}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 
             96.92032127122152}, {-46.936535284342426`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.2]& , TagBoxNote -> 
          "0.2"], 
         StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.2}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{130.83079112437676`, 
             143.1342810754285}, {-46.936535284342426`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.2]& , TagBoxNote -> 
          "0.2"], 
         StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5., 0}, {5.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{153.93777102648028`, 166.24126097753202`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{7., 0}, {7.5, 0.2}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{200.15173083068728`, 
             212.45522078173903`}, {-46.936535284342426`, 
             75.55812832289487}}], "DelayedMouseEffectStyle"], 
          StatusArea[#, 0.2]& , TagBoxNote -> "0.2"], 
         StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.2, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 258.66918058594604`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"10 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}], 
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.5529999999999999], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.5529999999999999], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{61.50985141806626, 73.813341369118}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.13}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 
             96.92032127122152}, {-4.325903021809367, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.13]& , TagBoxNote -> 
          "0.13"], 
         StyleBox["0.13`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.13, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.11}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             7.84856333891436, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.11]& , TagBoxNote -> 
          "0.11"], 
         StyleBox["0.11`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.09}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{130.83079112437676`, 143.1342810754285}, {
             20.0230296996381, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09]& , TagBoxNote -> 
          "0.09"], 
         StyleBox["0.09`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5., 0}, {5.5, 0.09}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{153.93777102648028`, 166.24126097753202`}, {
             20.0230296996381, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09]& , TagBoxNote -> 
          "0.09"], 
         StyleBox["0.09`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{6., 0}, {6.5, 0.09}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{177.04475092858377`, 189.3482408796355}, {
             20.0230296996381, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09]& , TagBoxNote -> 
          "0.09"], 
         StyleBox["0.09`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{7., 0}, {7.5, 0.12}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{200.15173083068728`, 212.45522078173903`}, {
             1.7613301585524965`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.12]& , TagBoxNote -> 
          "0.12"], 
         StyleBox["0.12`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.12, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{8., 0}, {8.5, 0.11}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{223.25871073279077`, 235.56220068384252`}, {
             7.84856333891436, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.11]& , TagBoxNote -> 
          "0.11"], 
         StyleBox["0.11`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.11, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 258.66918058594604`}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0}, {10.5, 0.06}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{269.4726705369978, 281.7761604880495}, {
             38.28472924072369, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.06]& , TagBoxNote -> 
          "0.06"], 
         StyleBox["0.06`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.06, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0},
     FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"100 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}], 
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.5529999999999999], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.5529999999999999], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.104}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{61.50985141806626, 73.813341369118}, {
             11.50090324713149, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.104]& , TagBoxNote -> 
          "0.104"], 
         StyleBox["0.104`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.104, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.1}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 96.92032127122152}, {
             13.935796519276224`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1]& , TagBoxNote -> 
          "0.1"], 
         StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.116}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             4.196223430697245, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.116]& , TagBoxNote -> 
          "0.116"], 
         StyleBox["0.116`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.116, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.091}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{130.83079112437676`, 143.1342810754285}, {
             19.414306381601904`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.091]& , TagBoxNote -> 
          "0.091"], 
         StyleBox["0.091`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.091, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5., 0}, {5.5, 0.08}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{153.93777102648028`, 166.24126097753202`}, {
             26.110262879999965`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.08]& , TagBoxNote -> 
          "0.08"], 
         StyleBox["0.08`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.08, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{6., 0}, {6.5, 0.093}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{177.04475092858377`, 189.3482408796355}, {
             18.196859745529537`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.093]& , TagBoxNote -> 
          "0.093"], 
         StyleBox["0.093`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.093, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{7., 0}, {7.5, 0.098}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{200.15173083068728`, 212.45522078173903`}, {
             15.153243155348605`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.098]& , TagBoxNote -> 
          "0.098"], 
         StyleBox["0.098`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.098, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{8., 0}, {8.5, 0.103}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{223.25871073279077`, 235.56220068384252`}, {
             12.109626565167673`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.103]& , TagBoxNote -> 
          "0.103"], 
         StyleBox["0.103`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.103, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.117}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 258.66918058594604`}, {
             3.587500112661047, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.117]& , TagBoxNote -> 
          "0.117"], 
         StyleBox["0.117`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.117, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0}, {10.5, 0.098}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{269.4726705369978, 281.7761604880495}, {
             15.153243155348605`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.098]& , TagBoxNote -> 
          "0.098"], 
         StyleBox["0.098`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.098, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0},
     FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"1000 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}], 
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.5529999999999999], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.5529999999999999], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.1065}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{61.50985141806626, 73.813341369118}, {
             9.97909495204101, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1065]& , TagBoxNote -> 
          "0.1065"], 
         StyleBox["0.1065`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1065, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.1009}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 96.92032127122152}, {
             13.387945533043663`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1009]& , TagBoxNote -> 
          "0.1009"], 
         StyleBox["0.1009`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1009, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.1029}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             12.170498896971282`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1029]& , TagBoxNote -> 
          "0.1029"], 
         StyleBox["0.1029`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1029, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.1031}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{130.83079112437676`, 143.1342810754285}, {
             12.04875423336405, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.1031]& , TagBoxNote -> 
          "0.1031"], 
         StyleBox["0.1031`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.1031, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5., 0}, {5.5, 0.0976}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{153.93777102648028`, 166.24126097753202`}, {
             15.396732482563067`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0976]& , TagBoxNote -> 
          "0.0976"], 
         StyleBox["0.0976`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0976, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{6., 0}, {6.5, 0.0962}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{177.04475092858377`, 189.3482408796355}, {
             16.24894512781374, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0962]& , TagBoxNote -> 
          "0.0962"], 
         StyleBox["0.0962`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0962, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{7., 0}, {7.5, 0.0978}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{200.15173083068728`, 212.45522078173903`}, {
             15.274987818955836`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0978]& , TagBoxNote -> 
          "0.0978"], 
         StyleBox["0.0978`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0978, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{8., 0}, {8.5, 0.0999}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{223.25871073279077`, 235.56220068384252`}, {
             13.996668851079846`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0999]& , TagBoxNote -> 
          "0.0999"], 
         StyleBox["0.0999`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0999, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.0967}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 258.66918058594604`}, {
             15.944583468795642`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0967]& , TagBoxNote -> 
          "0.0967"], 
         StyleBox["0.0967`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0967, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0}, {10.5, 0.0984}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{269.4726705369978, 281.7761604880495}, {
             14.909753828134129`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0984]& , TagBoxNote -> 
          "0.0984"], 
         StyleBox["0.0984`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0984, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0},
     FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"10000 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}], 
   GraphicsBox[{{
      RGBColor[1., 0.79375, 0.25], 
      EdgeForm[{
        GrayLevel[0], 
        Opacity[0.5529999999999999], 
        Thickness[Small]}], {}, {
       RGBColor[1., 0.79375, 0.25], 
       EdgeForm[{
         GrayLevel[0], 
         Opacity[0.5529999999999999], 
         Thickness[Small]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.5, 0.10055}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{61.50985141806626, 73.813341369118}, {
             13.60099869435632, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.10055]& , TagBoxNote -> 
          "0.10055"], 
         StyleBox["0.10055`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.10055, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.5, 0.09789}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{84.61683132016977, 96.92032127122152}, {
             15.22020272033258, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09789]& , TagBoxNote -> 
          "0.09789"], 
         StyleBox["0.09789`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09789, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3., 0}, {3.5, 0.09982}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{107.72381122227327`, 120.02730117332501`}, {
             14.045366716522736`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09982]& , TagBoxNote -> 
          "0.09982"], 
         StyleBox["0.09982`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09982, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.5, 0.09952}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{130.83079112437676`, 143.1342810754285}, {
             14.227983711933604`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.09952]& , TagBoxNote -> 
          "0.09952"], 
         StyleBox["0.09952`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.09952, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{5., 0}, {5.5, 0.0993}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{153.93777102648028`, 166.24126097753202`}, {
             14.361902841901568`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0993]& , TagBoxNote -> 
          "0.0993"], 
         StyleBox["0.0993`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0993, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{6., 0}, {6.5, 0.10021}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{177.04475092858377`, 189.3482408796355}, {
             13.80796462248864, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.10021]& , TagBoxNote -> 
          "0.10021"], 
         StyleBox["0.10021`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.10021, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{7., 0}, {7.5, 0.10117}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{200.15173083068728`, 212.45522078173903`}, {
             13.223590237173894`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.10117]& , TagBoxNote -> 
          "0.10117"], 
         StyleBox["0.10117`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.10117, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{8., 0}, {8.5, 0.10173}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{223.25871073279077`, 235.56220068384252`}, {
             12.882705179073625`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.10173]& , TagBoxNote -> 
          "0.10173"], 
         StyleBox["0.10173`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.10173, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{9., 0}, {9.5, 0.0988}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{246.36569063489426`, 258.66918058594604`}, {
             14.666264500919652`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.0988]& , TagBoxNote -> 
          "0.0988"], 
         StyleBox["0.0988`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.0988, {}], "Tooltip"]& ], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{10., 0}, {10.5, 0.10101}, "RoundingRadius" -> 0]}, 
            ImageSizeCache -> {{269.4726705369978, 281.7761604880495}, {
             13.320985968059674`, 75.55812832289487}}], 
           "DelayedMouseEffectStyle"], StatusArea[#, 0.10101]& , TagBoxNote -> 
          "0.10101"], 
         StyleBox["0.10101`", {}, StripOnInput -> False]], Annotation[#, 
         Style[0.10101, {}], 
         "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {-0.22, 0},
     FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> 200, 
    Method -> {CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}, "AxisPadding" -> Scaled[0.02], 
      "ChartDefaultStyle" -> {
        Directive[
         RGBColor[1., 0.725, 0], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.24, 0.6, 0.8], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.455, 0.7, 0.21], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.578, 0.51, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.772079, 0.431554, 0.102387], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.4, 0.64, 1.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[1., 0.75, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.8, 0.4, 0.76], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.637, 0.65, 0.], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.915, 0.3325, 0.2125], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Opacity[0.6]], 
        Directive[
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Opacity[0.6]]}, "DefaultBoundaryStyle" -> Automatic, 
      "DefaultChartBaseStyle" -> Directive[
        RGBColor[1., 0.79375, 0.25], 
        EdgeForm[{
          GrayLevel[0]}]], 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
      "RangePadding" -> Scaled[0.05]}, PlotLabel -> 
    FormBox["\"100000 repetition of experiment\"", TraditionalForm], 
    PlotRange -> {{0, 11}, {0, 0.25}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {{{1, 
        FormBox["1", TraditionalForm]}, {2, 
        FormBox["2", TraditionalForm]}, {3, 
        FormBox["3", TraditionalForm]}, {4, 
        FormBox["4", TraditionalForm]}, {5, 
        FormBox["5", TraditionalForm]}, {6, 
        FormBox["6", TraditionalForm]}, {7, 
        FormBox["7", TraditionalForm]}, {8, 
        FormBox["8", TraditionalForm]}, {9, 
        FormBox["9", TraditionalForm]}, {10, 
        FormBox["10", TraditionalForm]}}, Automatic}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.968332675756051*^9, 3.968332710707301*^9}, {
  3.9683328018777227`*^9, 3.968332878331007*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"13bb069d-4a9f-4856-95fa-7f7c5540b08f"]
}, Open  ]],

Cell["\<\
As you can see, with more repetition of the same experiment, the observed \
frequency of outcomes gets closer to the true probability distribution. That \
said, any finite sample can show quirky deviations, which is why repeating an \
experiment many times is the best way to confirm that the expected \
distribution accurately describes it.\
\>", "Text",
 CellChangeTimes->{{3.968332889987005*^9, 
  3.968332971779386*^9}},ExpressionUUID->"6a135abe-9b98-4553-822d-\
af701fcffbab"],

Cell["\<\
Now let\[CloseCurlyQuote]s consider the case where we assign a specific \
weight to each number: {1,1,2,3,4,4,3,2,1,1}.
We can compute the corresponding probabilities by normalizing the weights; \
that is:\
\>", "Text",
 CellChangeTimes->{{3.968345181559595*^9, 3.9683451951228*^9}, {
  3.9683453503648567`*^9, 3.968345367118132*^9}, {3.9683454584931917`*^9, 
  3.968345470108626*^9}},ExpressionUUID->"23ea6f15-b590-4340-b738-\
f73543fee937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"probWeights", "=", 
  RowBox[{"Normalize", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",", 
      "2", ",", "1", ",", "1"}], "}"}], ",", "Total"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.968345369766575*^9, 3.968345374593595*^9}, {
  3.968345819314685*^9, 3.9683458252444763`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"f697b007-ec50-4c4f-9ccc-719490dd17e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "22"], ",", 
   FractionBox["1", "22"], ",", 
   FractionBox["1", "11"], ",", 
   FractionBox["3", "22"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["3", "22"], ",", 
   FractionBox["1", "11"], ",", 
   FractionBox["1", "22"], ",", 
   FractionBox["1", "22"]}], "}"}]], "Output",
 CellChangeTimes->{3.9683453749211473`*^9, 3.9683458258558197`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"f9c81f87-5614-43e5-8fcb-aa69823aba07"]
}, Open  ]],

Cell["\<\
If we run the experiment many times, we expect the frequency of results to \
converge to the probabilities above. Now let\[CloseCurlyQuote]s generate \
different data samples of results for 10, 100, and 10,000 runs. As the number \
of realizations increases, the observed frequencies should get closer to the \
expected probabilities.\
\>", "Text",
 CellChangeTimes->{{3.968346092222145*^9, 3.968346212612296*^9}, 
   3.96834629812549*^9},ExpressionUUID->"09eddf68-cce0-45fa-8caa-\
2c27b9dd0ca3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sequenceOfResults", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "2", ",", "3", ",", "4", ",", "4", ",", "3", ",",
           "2", ",", "1", ",", "1"}], "}"}], "->", 
        RowBox[{"Range", "[", "10", "]"}]}], ",", "j"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", 
       RowBox[{"{", 
        RowBox[{"10", ",", "100", ",", "10000"}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.968345229247994*^9, 3.96834523812041*^9}, {
   3.968345303449218*^9, 3.968345332873069*^9}, {3.968345674732768*^9, 
   3.968345699044365*^9}, {3.9683459056361732`*^9, 3.96834591941611*^9}, {
   3.9683459784916162`*^9, 3.968345981479224*^9}, 3.968346039268961*^9},
 CellLabel->
  "In[157]:=",ExpressionUUID->"46361cd7-ba0d-4bb3-ad7f-b5f2239647e3"],

Cell["Calculate frequencies for each experiment:", "Text",
 CellChangeTimes->{{3.96834630862914*^9, 
  3.968346340037835*^9}},ExpressionUUID->"9fa21214-3735-4af4-bfcb-\
3d3ac8b08a62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"freq", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"KeySort", "[", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"Range", "[", "10", "]"}], "->", "0"}], "]"}], ",", 
       RowBox[{"Normalize", "[", 
        RowBox[{
         RowBox[{"Counts", "[", "#", "]"}], ",", "Total"}], "]"}]}], "]"}], 
     "]"}], "&"}], "/@", "sequenceOfResults"}]}]], "Input",
 CellChangeTimes->{{3.96834570067354*^9, 3.968345726467319*^9}, {
  3.9683458400453043`*^9, 3.968345841560568*^9}, {3.968345876989462*^9, 
  3.968345879338402*^9}, {3.968345927713394*^9, 3.96834594675403*^9}, {
  3.968346001358674*^9, 3.968346027818421*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"36c3fa54-e6c3-4c9d-98e9-3015fa03f72b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"2", "\[Rule]", "0"}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["1", "5"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["3", "10"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"9", "\[Rule]", "0"}], ",", 
     RowBox[{"10", "\[Rule]", "0"}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["3", "100"]}], ",", 
     RowBox[{"2", "\[Rule]", 
      FractionBox["1", "25"]}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["11", "100"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["21", "100"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["6", "25"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["1", "10"]}], ",", 
     RowBox[{"9", "\[Rule]", 
      FractionBox["1", "20"]}], ",", 
     RowBox[{"10", "\[Rule]", 
      FractionBox["1", "50"]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", 
      FractionBox["443", "10000"]}], ",", 
     RowBox[{"2", "\[Rule]", 
      FractionBox["231", "5000"]}], ",", 
     RowBox[{"3", "\[Rule]", 
      FractionBox["469", "5000"]}], ",", 
     RowBox[{"4", "\[Rule]", 
      FractionBox["33", "250"]}], ",", 
     RowBox[{"5", "\[Rule]", 
      FractionBox["1821", "10000"]}], ",", 
     RowBox[{"6", "\[Rule]", 
      FractionBox["229", "1250"]}], ",", 
     RowBox[{"7", "\[Rule]", 
      FractionBox["671", "5000"]}], ",", 
     RowBox[{"8", "\[Rule]", 
      FractionBox["953", "10000"]}], ",", 
     RowBox[{"9", "\[Rule]", 
      FractionBox["91", "2000"]}], ",", 
     RowBox[{"10", "\[Rule]", 
      FractionBox["217", "5000"]}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.968345718865838*^9, 3.968345726775012*^9}, 
   3.968345842146984*^9, 3.9683458795880117`*^9, {3.968345932171585*^9, 
   3.968345947142062*^9}, {3.968345982795014*^9, 3.968345989544773*^9}, {
   3.9683460299745207`*^9, 3.96834604182409*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"be398a1f-664f-43bb-8f7a-374ed2bf7b6e"]
}, Open  ]],

Cell["Visualize the results:", "Text",
 CellChangeTimes->{{3.968346343994961*^9, 
  3.96834634682174*^9}},ExpressionUUID->"265dbc0e-bbd2-4b8f-8985-\
29bc5649a9b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Transpose", "@", 
    RowBox[{"Append", "[", 
     RowBox[{
      RowBox[{"Values", "/@", "freq"}], ",", "probWeights"}], "]"}]}], ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<10 runs of experiment\>\"", 
      ",", "\"\<100 runs of experiment\>\"", 
      ",", "\"\<10,000 runs of experiment\>\"", 
      ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683457607292233`*^9, 3.9683457699785557`*^9}, {
  3.968345828819425*^9, 3.9683458650473022`*^9}, {3.968345895245739*^9, 
  3.9683458962447157`*^9}, {3.968345940724985*^9, 3.9683459654802103`*^9}, {
  3.9683463487080307`*^9, 3.9683464161570053`*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"4a5461b5-69e9-40c3-8907-ab31f12a933f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.3700990099009899, 0.}, {50.145364536453656`, 
       0.}}]}, {{}, {{{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.346084608460846, 0.}, {2.007650765076508, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{42.83477814379428, 50.03476525242116}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.3460846084608464`, 0.}, {3.007650765076508, 
                  0.03}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{52.58435049438539, 59.78433760301226}, {
                 117.13782716600282`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 100]]& , TagBoxNote -> "3/100"], 
             StyleBox[
              FractionBox["3", "100"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 100], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3.3460846084608464`, 0.}, {4.007650765076508, 
                  0.0443}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{62.33392284497649, 69.53390995360337}, {
                 103.01120980976324`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[443, 10000]]& , TagBoxNote -> "443/10000"], 
             StyleBox[
              FractionBox["443", "10000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[443, 10000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{4.346084608460846, 0.}, {5.007650765076508, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{72.0834951955676, 79.28348230419446}, {
                 101.87066282677377`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.361386138613861, 0.}, {7.022952295229523, 
                  0.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{91.73182327205137, 98.93181038067824}, {
                 146.77408735391802`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0]& , TagBoxNote -> 
              "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7.361386138613861, 0.}, {8.022952295229523, 
                  0.04}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{101.48139562264247`, 
                 108.68138273126934`}, {107.25907377003108`, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1, 25]]& , TagBoxNote -> "1/25"], 
             StyleBox[
              FractionBox["1", "25"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 25], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{8.361386138613861, 0.}, {9.022952295229523, 
                  0.0462}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{111.23096797323356`, 
                 118.43095508186045`}, {101.1342466645286, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[231, 5000]]& , TagBoxNote -> "231/5000"], 
             StyleBox[
              FractionBox["231", "5000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[231, 5000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{9.361386138613861, 0.}, {10.022952295229523`, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{120.98054032382467`, 
                 128.18052743245153`}, {101.87066282677377`, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.376687668766877`, 0.}, {12.038253825382538`,
                   0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{140.62886840030845`, 147.8288555089353}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{12.376687668766877`, 0.}, {13.038253825382538`,
                   0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{150.37844075089956`, 157.5784278595264}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{13.376687668766877`, 0.}, {14.038253825382538`,
                   0.0938}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{160.12801310149064`, 
                 167.32800021011752`}, {54.11138049970316, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[469, 5000]]& , TagBoxNote -> "469/5000"], 
             StyleBox[
              FractionBox["469", "5000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[469, 5000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{14.376687668766877`, 0.}, {15.038253825382538`,
                   0.09090909090909091}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{169.87758545208175`, 
                 177.07757256070863`}, {56.967238299629514`, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1, 11]]& , TagBoxNote -> "1/11"], 
             StyleBox[
              FractionBox["1", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{16.39198919891989, 0.}, {17.053555355535554`, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{189.52591352856552`, 196.7259006371924}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{17.39198919891989, 0.}, {18.053555355535554`, 
                  0.11}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{199.27548587915663`, 
                 206.47547298778352`}, {38.10779999822894, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[11, 100]]& , TagBoxNote -> "11/100"], 
             StyleBox[
              FractionBox["11", "100"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[11, 100], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{18.39198919891989, 0.}, {19.053555355535554`, 
                  0.132}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{209.02505822974774`, 
                 216.22504533837463`}, {16.37454252709111, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[33, 250]]& , TagBoxNote -> "33/250"], 
             StyleBox[
              FractionBox["33", "250"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[33, 250], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{19.39198919891989, 0.}, {20.053555355535554`, 
                  0.13636363636363635`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{218.77463058033885`, 
                 225.97461768896574`}, {12.063813772485275`, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[3, 22]]& , TagBoxNote -> "3/22"], 
             StyleBox[
              FractionBox["3", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{21.40729072907291, 0.}, {22.06885688568857, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{238.42295865682263`, 
                 245.62294576544951`}, {47.98655339420067, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{22.40729072907291, 0.}, {23.06885688568857, 
                  0.21}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{248.17253100741374`, 
                 255.37251811604062`}, {-60.67973396148841, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[21, 100]]& , TagBoxNote -> "21/100"], 
             StyleBox[
              FractionBox["21", "100"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[21, 100], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{23.40729072907291, 0.}, {24.06885688568857, 
                  0.1821}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{257.92210335800485`, 
                 265.12209046663173`}, {-33.11801198672728, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1821, 10000]]& , TagBoxNote -> "1821/10000"], 
             StyleBox[
              FractionBox["1821", "10000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1821, 10000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{24.40729072907291, 0.}, {25.06885688568857, 
                  0.18181818181818182`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{267.6716757085959, 
                 274.87166281722284`}, {-32.83961075465899, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[2, 11]]& , TagBoxNote -> "2/11"], 
             StyleBox[
              FractionBox["2", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[2, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{26.422592259225926`, 0.}, {27.08415841584159, 
                  0.2}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{287.32000378507973`, 
                 294.5199908937066}, {-50.80098056551668, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[1, 5]]& , TagBoxNote -> "1/5"], 
             StyleBox[
              FractionBox["1", "5"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 5], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{27.422592259225926`, 0.}, {28.08415841584159, 
                  0.24}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{297.06957613567084`, 
                 304.26956324429773`}, {-90.3159941494036, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[6, 25]]& , TagBoxNote -> "6/25"], 
             StyleBox[
              FractionBox["6", "25"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[6, 25], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{28.422592259225926`, 0.}, {29.08415841584159, 
                  0.1832}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{306.81914848626195`, 
                 314.01913559488884`}, {-34.20467486028417, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[229, 1250]]& , TagBoxNote -> "229/1250"], 
             StyleBox[
              FractionBox["229", "1250"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[229, 1250], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{29.422592259225926`, 0.}, {30.08415841584159, 
                  0.18181818181818182`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{316.56872083685306`, 
                 323.76870794547995`}, {-32.83961075465899, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[2, 11]]& , TagBoxNote -> "2/11"], 
             StyleBox[
              FractionBox["2", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[2, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{31.437893789378943`, 0.}, {32.0994599459946, 
                  0.3}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{336.21704891333684`, 
                 343.4170360219637}, {-149.588514525234, 
                 147.52408735391802`}}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 
               Rational[3, 10]]& , TagBoxNote -> "3/10"], 
             StyleBox[
              FractionBox["3", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{32.43789378937894, 0.}, {33.0994599459946, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{345.9666212639279, 353.1666083725548}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{33.43789378937894, 0.}, {34.0994599459946, 
                  0.1342}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{355.716193614519, 362.9161807231459}, {
                 14.20121677997733, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[671, 5000]]& , TagBoxNote -> "671/5000"], 
             StyleBox[
              FractionBox["671", "5000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[671, 5000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{34.43789378937894, 0.}, {35.0994599459946, 
                  0.13636363636363635`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{365.4657659651101, 372.665753073737}, {
                 12.063813772485275`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 22]]& , TagBoxNote -> "3/22"], 
             StyleBox[
              FractionBox["3", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{36.45319531953196, 0.}, {37.11476147614762, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{385.1140940415939, 392.31408115022083`}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{37.45319531953196, 0.}, {38.11476147614762, 
                  0.1}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{394.863666392185, 402.0636535008119}, {
                 47.98655339420067, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 10]]& , TagBoxNote -> "1/10"], 
             StyleBox[
              FractionBox["1", "10"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 10], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{38.45319531953196, 0.}, {39.11476147614762, 
                  0.0953}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{404.6132387427761, 411.813225851403}, {
                 52.629567490307394`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[953, 10000]]& , TagBoxNote -> "953/10000"], 
             StyleBox[
              FractionBox["953", "10000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[953, 10000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{39.45319531953196, 0.}, {40.11476147614762, 
                  0.09090909090909091}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{414.3628110933672, 421.5627982019941}, {
                 56.967238299629514`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 11]]& , TagBoxNote -> "1/11"], 
             StyleBox[
              FractionBox["1", "11"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 11], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{41.468496849684975`, 0.}, {42.13006300630064, 
                  0.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{434.011139169851, 441.21112627847793`}, {
                 146.77408735391802`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0]& , TagBoxNote -> 
              "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{42.468496849684975`, 0.}, {43.13006300630064, 
                  0.05}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{443.7607115204421, 450.960698629069}, {
                 97.38032037405935, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 20]]& , TagBoxNote -> "1/20"], 
             StyleBox[
              FractionBox["1", "20"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 20], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{43.468496849684975`, 0.}, {44.13006300630064, 
                  0.0455}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{453.5102838710332, 460.7102709796601}, {
                 101.82575940224663`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[91, 2000]]& , TagBoxNote -> "91/2000"], 
             StyleBox[
              FractionBox["91", "2000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[91, 2000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{44.468496849684975`, 0.}, {45.13006300630064, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{463.2598562216243, 470.4598433302512}, {
                 101.87066282677377`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           RGBColor[1., 0.78, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{46.48379837983799, 0.}, {47.145364536453656`, 
                  0.}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{482.9081842981081, 490.10817140673504`}, {
                 146.77408735391802`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0]& , TagBoxNote -> 
              "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}, {
           RGBColor[0.928, 0.5210666666666667, 0.2], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{47.48379837983799, 0.}, {48.145364536453656`, 
                  0.02}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{492.6577566486992, 499.8577437573261}, {
                 127.01658056197455`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 50]]& , TagBoxNote -> "1/50"], 
             StyleBox[
              FractionBox["1", "50"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 50], {}], "Tooltip"]& ]}, {
           RGBColor[
           0.7116405333333333, 0.48160000000000003`, 0.5483194666666666], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{48.48379837983799, 0.}, {49.145364536453656`, 
                  0.0434}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{502.4073289992903, 509.6073161079172}, {
                 103.90029761540069`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[217, 5000]]& , TagBoxNote -> "217/5000"], 
             StyleBox[
              FractionBox["217", "5000"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[217, 5000], {}], "Tooltip"]& ]}, {
           RGBColor[0.49920000000000003`, 0.5552, 0.8309304], 
           EdgeForm[{
             GrayLevel[0], 
             Opacity[0.42], 
             Thickness[Small]}], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{49.48379837983799, 0.}, {50.145364536453656`, 
                  0.045454545454545456`}, "RoundingRadius" -> 0]}, 
                ImageSizeCache -> {{512.1569013498814, 519.3568884585083}, {
                 101.87066282677377`, 147.52408735391802`}}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 22]]& , TagBoxNote -> "1/22"], 
             StyleBox[
              FractionBox["1", "22"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 22], {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, 
     StyleBox[{{
        Thickness[Tiny], 
        LineBox[{{0.3700990099009899, 0.}, {51.14086984698471, 0.}}], 
        StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
       StyleBox[{{
          Thickness[Tiny], 
          LineBox[{{1.346084608460846, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {1.346084608460846, 0.}]}], 
          LineBox[{{50.145364536453656`, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {50.145364536453656`, 
             0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
            LineBox[{{5.007650765076507, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {5.007650765076507, 
               0.}]}], 
            LineBox[{{6.361386138613861, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {6.361386138613861, 
               0.}]}], 
            LineBox[{{10.022952295229521`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {10.022952295229521`, 
               0.}]}], 
            LineBox[{{11.376687668766875`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {11.376687668766875`, 
               0.}]}], 
            LineBox[{{15.038253825382537`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {15.038253825382537`, 
               0.}]}], 
            LineBox[{{16.39198919891989, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {16.39198919891989, 
               0.}]}], 
            LineBox[{{20.053555355535554`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {20.053555355535554`, 
               0.}]}], 
            LineBox[{{21.40729072907291, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {21.40729072907291, 
               0.}]}], 
            LineBox[{{25.06885688568857, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {25.06885688568857, 
               0.}]}], 
            LineBox[{{26.422592259225926`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {26.422592259225926`, 
               0.}]}], 
            LineBox[{{30.08415841584159, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {30.08415841584159, 
               0.}]}], 
            LineBox[{{31.437893789378943`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {31.437893789378943`, 
               0.}]}], 
            LineBox[{{35.0994599459946, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {35.0994599459946, 
               0.}]}], 
            LineBox[{{36.45319531953196, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {36.45319531953196, 
               0.}]}], 
            LineBox[{{40.11476147614762, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {40.11476147614762, 
               0.}]}], 
            LineBox[{{41.468496849684975`, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {41.468496849684975`, 
               0.}]}], 
            LineBox[{{45.13006300630064, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {45.13006300630064, 
               0.}]}], 
            LineBox[{{46.48379837983799, 0.}, 
              
              Offset[{-1.102182119232618*^-15, -6.}, {46.48379837983799, 
               0.}]}]}}}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
      StripOnInput -> False, Antialiasing -> False]}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0.3700990099009899, 0.}, 
    CoordinatesToolOptions :> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}, DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
    DisplayFunction -> Identity, FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], PlotInteractivity :> True, 
    PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.05]}}, Ticks -> {None, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"10 runs of experiment\"", "\"100 runs of experiment\"", 
       "\"10,000 runs of experiment\"", "\"Probabilities\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[1., 0.78, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[
                    0.7116405333333333, 0.48160000000000003`, 
                    0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.42], 
                    GrayLevel[0]]], 
                    RGBColor[0.49920000000000003`, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1., 0.78, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.928, 0.5210666666666667, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.7116405333333333, 0.48160000000000003`, 
                    0.5483194666666666]|>, "RGBColorSwatchTemplate"]}], "]"}],
                    ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.42`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.49920000000000003`, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.968345829058305*^9, {3.968345865990205*^9, 3.968345896527691*^9}, {
   3.9683459659459333`*^9, 3.9683459840786657`*^9}, {3.968346033376354*^9, 
   3.968346043213333*^9}, {3.9683463578386393`*^9, 3.9683463640428677`*^9}, {
   3.968346408796171*^9, 3.968346416562212*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"736b5b39-f96b-4692-bd79-d7bd4b430c47"]
}, Open  ]],

Cell["\<\
As expected, with more runs of the experiment, the observed frequencies get \
closer to the expected probabilities (law of large numbers).\
\>", "Text",
 CellChangeTimes->{{3.96840497477395*^9, 
  3.968405020445067*^9}},ExpressionUUID->"78bc4bbf-0fb0-4c93-9303-\
5e2eede052f3"],

Cell["\<\
Now let\[CloseCurlyQuote]s consider a case analogous to three different \
players rolling dice and collecting their joint outcomes. Of course, the \
quantum case can differ markedly from the classical \
one\[LongDash]classically, similar correlations might require prearranged \
strategies or communication. For the moment, however, we will set aside \
interpretation and focus only on the probabilities of the outcomes (i.e., the \
joint distribution and any marginals), leaving the discussion of correlations \
for later.\
\>", "Text",
 CellChangeTimes->{{3.9684050308300858`*^9, 
  3.968405168796027*^9}},ExpressionUUID->"53177d8d-37b1-4b4b-b185-\
fd0128a7f952"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joint vs marginal probabilities", "Section",
 CellChangeTimes->{{3.968346525411975*^9, 3.96834652971935*^9}, 
   3.968347200471768*^9},ExpressionUUID->"2a9feec0-c161-41ec-99f7-\
d0b837b42d52"],

Cell[TextData[{
 "Consider a three-qubit system. Each qubit is measured in the computational \
basis, so any measurement result can be described by a three-bit string; \
overall ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["2", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c7b9a803-7b74-44b0-b807-ec78946781f9"],
 " possible outcomes:"
}], "Text",
 CellChangeTimes->{{3.968334798703397*^9, 3.968334800860444*^9}, {
  3.96833837210157*^9, 3.9683385059593153`*^9}, {3.9683387496589127`*^9, 
  3.968338750236002*^9}},ExpressionUUID->"7104ffe3-042b-4b5e-9406-\
08adc37cba22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.968338463681965*^9, 3.968338477912222*^9}, {
  3.968338727623354*^9, 3.96833874458032*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"fccaeaca-17f7-4da9-94c0-5c4705db8e2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.968338470930825*^9, 3.968338478172585*^9}, {
   3.968338728022441*^9, 3.96833874479382*^9}, 3.968347206025429*^9, 
   3.968348364888864*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"25485904-f3df-4c73-a84a-7352f38926a0"]
}, Open  ]],

Cell["\<\
We will prepare the system in a special initial state. For now, we will skip \
the details of what this state is and focus only on the probability of \
outcomes. Later, we will elaborate on the details of this state and what it \
means.\
\>", "Text",
 CellChangeTimes->{{3.968338514342286*^9, 
  3.9683385826424026`*^9}},ExpressionUUID->"4bdd9796-6bf6-49e0-9204-\
d18f5d55fe66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{"\"\<RandomPure\>\"", "[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumMeasurementOperator", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}], ",", 
        RowBox[{"{", "3", "}"}]}], "}"}], "]"}], "[", "state", "]"}], 
    "[", "\"\<MultivariateDistribution\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.96834658818622*^9, 3.968346590837062*^9}, {
  3.96834747927142*^9, 3.968347483151351*^9}, {3.9683475175205107`*^9, 
  3.9683475179073763`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"ca4e971c-47a0-416f-a4d8-69e1f7a57958"],

Cell["\<\
Using quantum theory, we can calculate the joint probabilities of the \
measurement results, that is, the probabilities for all possible tuples of 0s \
and 1s listed above.\
\>", "Text",
 CellChangeTimes->{{3.968405209451626*^9, 
  3.968405262917656*^9}},ExpressionUUID->"89363d20-c606-4d21-868e-\
07ba3655e213"],

Cell["Visualize the contingency table of the distribution:", "Text",
 CellChangeTimes->{{3.968338636686473*^9, 
  3.968338644575511*^9}},ExpressionUUID->"329574b4-9037-4d82-af34-\
1f2368554fcd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]", ",", "\"\<ProbabilityTable\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.968334621333435*^9, 3.968334623985634*^9}, {
   3.968334718782447*^9, 3.968334786839274*^9}, {3.968334817411254*^9, 
   3.9683348328871202`*^9}, 3.9683349308898687`*^9, 3.968335091370207*^9, {
   3.968337811372466*^9, 3.968337814299076*^9}, {3.9683379010531588`*^9, 
   3.968337916340279*^9}, 3.9683379854138927`*^9, {3.9683383073642797`*^9, 
   3.968338349906373*^9}, {3.9683440544597597`*^9, 3.968344059957852*^9}, {
   3.9683465784339323`*^9, 3.968346579339635*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"bdba2106-92ca-404d-b4f1-f97c1a8abf2e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|0 -> <|0 -> 0.05287459461164781, 1 -> 0.2149861667781321|>, 
         1 -> <|0 -> 0.11246735741260994`, 1 -> 0.2597857088158883|>|>, 
       1 -> <|0 -> <|0 -> 0.024391016891455654`, 1 -> 0.20719916529897242`|>, 
         1 -> <|0 -> 0.07796089168707356, 1 -> 0.05033509850422049|>|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[60]]], 2, 
             DirectedInfinity[1], {All, All}]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 2], 2], 2], "Meta" -> <||>, "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`Limited[
             TypeSystem`PackageScope`ColumnShape[
              TypeSystem`PackageScope`KeyValueShape[
               TypeSystem`PackageScope`AtomShape[34], 
               TypeSystem`PackageScope`AtomShape[60]]], 2, 
             DirectedInfinity[1], {All, All}]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Assoc[
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[Real], 2], 2], 2], "Path" -> {}, "DisplayedRowCount" -> 
     2, "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0528746"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.214986"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.112467"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.259786"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.024391"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.207199"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0779609"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0503351"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> 
          RGBColor[0.749003690406716, 0.749003690406716, 0.749003690406716], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{240.225, {156.0380859375, 164.635986328125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{240.225, {156.0380859375, 164.635986328125}}],
    BaseStyle->{
     LineBreakWithin -> False, 
      LightDarkAutoColorRules -> <|"MarkedColors" -> True|>},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9683347498708076`*^9, 3.968334781312378*^9}, 
   3.968334833661944*^9, 3.96833493137146*^9, 3.968335091835074*^9, 
   3.9683378255174103`*^9, {3.968337913355226*^9, 3.968337917173132*^9}, 
   3.9683379866064*^9, 3.9683383267900763`*^9, 3.968338591860108*^9, 
   3.968344061885295*^9, 3.9683472065982*^9, 3.968348365467308*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"f2b4448f-5e8b-42b9-914c-1bbd000d1bc9"]
}, Open  ]],

Cell["\<\
We can use the multivariate distribution and compute the probability of each \
outcome:\
\>", "Text",
 CellChangeTimes->{{3.968338674962756*^9, 
  3.968338714106701*^9}},ExpressionUUID->"b5db0754-608e-4e81-a998-\
f93dfcaedce7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"prob", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"PDF", "[", 
        RowBox[{"\[ScriptCapitalD]", ",", "#"}], "]"}]}], "}"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", "3"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{"prob", ",", 
   RowBox[{"TableDepth", "->", "2"}], ",", 
   RowBox[{"TableHeadings", "->", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", 
      RowBox[{"{", 
       RowBox[{"\"\<Outcome\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.968338667267015*^9, 3.9683386793897867`*^9}, {
  3.968338715954968*^9, 3.968338740208674*^9}, {3.968339496759749*^9, 
  3.968339498023903*^9}, {3.968339562988065*^9, 3.968339623711769*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"2ab78193-6c6a-4b43-94a0-d9e948b9e759"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"Outcome\"\>",
       HoldForm], 
      TagBox["\<\"Probability\"\>",
       HoldForm]},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], "0.05287459461164781`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], "0.2149861667781321`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], "0.11246735741260994`"},
     {
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1"}], "}"}], "0.2597857088158883`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], "0.024391016891455654`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], "0.20719916529897242`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], "0.07796089168707356`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], "0.05033509850422049`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableDepth -> 2, 
    TableHeadings -> {None, {"Outcome", "Probability"}}]]]], "Output",
 CellChangeTimes->{
  3.968338671461172*^9, {3.968338734983478*^9, 3.968338740372651*^9}, 
   3.968339498673562*^9, {3.968339579882612*^9, 3.968339624439142*^9}, 
   3.9683441746161747`*^9, 3.968347206651628*^9, 3.968348365521378*^9},
 CellLabel->
  "Out[195]//TableForm=",ExpressionUUID->"2fa14dba-0e68-4782-93dd-\
6a7e09edb569"]
}, {2}]],

Cell["\<\
Since we have the multivariate distribution, we can compute the probability \
of any scenario by summing over the appropriate outcomes. Let\
\[CloseCurlyQuote]s consider a few cases.\
\>", "Text",
 CellChangeTimes->{{3.968346620867334*^9, 3.968346674311495*^9}, {
  3.968407065500433*^9, 
  3.9684070901593113`*^9}},ExpressionUUID->"005c39db-c2d5-49eb-9bdc-\
f4c14fac70e1"],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 and 1 for qubit-3 (and any \
result for qubit-2)\
\>", "Text",
 CellChangeTimes->{{3.968343296961424*^9, 3.9683433000128717`*^9}, 
   3.96834336409851*^9, {3.968344154426264*^9, 3.968344165506075*^9}, {
   3.968344946656548*^9, 3.968344962896373*^9}, {3.9683450014458847`*^9, 
   3.9683450047735357`*^9}},ExpressionUUID->"3fe18dc6-3f46-4c14-ad57-\
20f216f68436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"q1", "\[Equal]", "0"}], "&&", 
    RowBox[{"q3", "==", "1"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683440306290407`*^9, 3.9683440421543617`*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"743bbc34-5146-4ab2-b454-696944ca422e"],

Cell[BoxData["0.4747718755940204`"], "Output",
 CellChangeTimes->{3.968344042436005*^9, 3.968344169025601*^9, 
  3.968347206654845*^9, 3.968348365526278*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"167e04e8-92c1-44e0-bb02-05432aac35b1"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s calculate the above probability step-by-step:
- From the full list of outcome\[Dash]probability pairs, select the outcomes \
whose first bit is 0 and last bit is 1 (i.e., {0,b,1} with be can be either 0 \
or 1, but we do not care).
- Extract the probabilities associated with those selected outcomes.
- Add those probabilities together.\
\>", "Text",
 CellChangeTimes->{{3.9683443234486*^9, 3.9683443298891563`*^9}, {
  3.968344476476479*^9, 3.968344585352982*^9}, {3.968344634166768*^9, 
  3.9683446714700403`*^9}, {3.968346688410387*^9, 
  3.9683466947212954`*^9}},ExpressionUUID->"a39e8465-5c77-476d-ae22-\
8b9c55d68a82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{"prob", ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], "==", "0"}], "&&", 
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}], "==", "1"}]}], "&"}]}], 
    "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.968344286911707*^9, 3.968344321057107*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"16a7bb94-17fd-4387-b97e-8ca0c30f2b82"],

Cell[BoxData["0.4747718755940204`"], "Output",
 CellChangeTimes->{{3.968344302142111*^9, 3.9683443213580523`*^9}, 
   3.968347206666059*^9, 3.968348365534387*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"b7371d8e-2772-40ec-8dce-58b410c0a6ea"]
}, Open  ]],

Cell["\<\
Now suppose we do not care about qubit 3 and want to focus only on the \
statistics of qubits 1 and 2. To do this, we compute the marginal \
distribution by summing over the outcomes of qubit 3. (In the quantum \
formalism, this corresponds to taking the partial trace over qubit 3 to \
obtain the reduced state of qubits 1 and 2.)\
\>", "Text",
 CellChangeTimes->{{3.9683387696786413`*^9, 3.968338826104653*^9}, 
   3.968338867958982*^9},ExpressionUUID->"fb3b931d-55e8-43c2-893d-\
e8fbc60dc37b"],

Cell["\<\
To get the marginal distribution, the calculation as follows:
- first group outcomes based on the values of the first and second elements \
(we are only interested in the marginal distribution qubit 1 and 2)
- for each group, add up the values of probabilities\
\>", "Text",
 CellChangeTimes->{{3.9683396735888*^9, 3.9683397394130077`*^9}, {
   3.968342609785865*^9, 3.968342627514386*^9}, 
   3.968342793727981*^9},ExpressionUUID->"d99e11ba-4b28-4168-9c4f-\
340628e6c33b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupBy", "[", 
  RowBox[{"prob", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", "2"}], "]"}], "]"}], "&"}], ")"}], "->", "Last"}], ",", 
   "Total"}], "]"}]], "Input",
 CellChangeTimes->{{3.9683396667035522`*^9, 3.968339668030319*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"3ba33f05-0a31-4f55-9db5-2b725f3f8697"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", "0.2678607613897799`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", "0.37225306622849824`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "0.23159018219042807`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.12829599019129403`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9683426294154367`*^9, 3.968347206668523*^9, 
  3.968348365536974*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"57b99e87-f828-4e10-9a0b-8858d12e92bd"]
}, Open  ]],

Cell["\<\
The same process can be done more cleanly using built-in Wolfram Language \
functionality. This makes it much easier to compute other probabilities as \
well (you\[CloseCurlyQuote]ll see this shortly).\
\>", "Text",
 CellChangeTimes->{{3.968342802234582*^9, 3.96834284010005*^9}, 
   3.968342991108684*^9},ExpressionUUID->"400c57fe-ed6e-496e-9e04-\
ffcd28efb036"],

Cell["Calculate  the marginal distribution", "Text",
 CellChangeTimes->{{3.968343071721896*^9, 3.9683430828735113`*^9}, 
   3.9683432077817698`*^9},ExpressionUUID->"01c379a5-53d5-4db7-81df-\
5e27494b743c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]12", "=", 
  RowBox[{"MarginalDistribution", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9683388810538483`*^9, 3.9683389257334347`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"92db6b77-fa57-434a-b748-d10764e8fa28"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CategoricalDistribution",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.55], 
               RectangleBox[{0., 0.}, {0.87, 1.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.8], 
               RectangleBox[{1., 0.}, {1.88, 2.}, "RoundingRadius" -> 0]}, {
               GrayLevel[0.65], 
               RectangleBox[{2., 0.}, {2.88, 3.}, "RoundingRadius" -> 0]}}, 
             Background -> GrayLevel[1], ImageSize -> {Automatic, 29.029}, 
             AspectRatio -> 1], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"Vector\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (length: \"", "2", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Categories: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"], 
                    TagBox[
                    
                    GridBox[{{"0", "1"}}, AutoDelete -> False, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    FrameStyle -> GrayLevel[0.8]], "Grid"]}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Probabilities: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                StyleBox[
                 TagBox[
                  TagBox[
                   
                   DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|
                    0 -> <|0 -> NumberForm[0.2678607613897799, 2], 1 -> 
                    NumberForm[0.37225306622849824`, 2]|>, 
                    1 -> <|0 -> NumberForm[0.23159018219042807`, 2], 1 -> 
                    NumberForm[0.12829599019129403`, 2]|>|>, "AllowEmbedding" -> 
                    True, "InitialShape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {All}]]], 2, 
                    DirectedInfinity[1], {}], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 2], 2], 
                    "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
                    "Shape" -> TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[34], 
                    TypeSystem`PackageScope`UnknownShape[False]]], 2, 
                    DirectedInfinity[1], {All}]]], 2, 
                    DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[Integer], TypeSystem`AnyType, 2], 2], 
                    "Path" -> {}, "DisplayedRowCount" -> 2, 
                    "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, 
                    "DataColumnCount" -> 1, "SortPaths" -> {}, 
                    "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
                    "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.2678607613897799, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[0]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.37225306622849824`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[0], 
                    Key[1]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["0"], 
                    Style[
                    RawBoxes["0"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[0]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.23159018219042807`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[0]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    RawBoxes["1"], 
                    Style[
                    RawBoxes["1"], FontColor -> 
                    RGBColor[0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[1]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    RGBColor[0.9500473017990948, 0.9500473017990948, 
                    0.9500473017990948], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    NumberForm[0.12829599019129403`, 2], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key[1], 
                    Key[1]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {
                    ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    RGBColor[
                    0.749003690406716, 0.749003690406716, 0.749003690406716], 
                    Spacings -> {0, 0}, Alignment -> Left, 
                    BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Dynamic[
                    Replace[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
                    Except[
                    Alternatives[
                    Blank[Spacer], ""]]] :> 
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`bar]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {
                    LineBreakWithin -> False, 
                    LightDarkAutoColorRules -> <|"MarkedColors" -> True|>}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                   Deploy, DefaultBaseStyle -> "Deploy"], 
                  Dataset`InterpretDataset[1], Selectable -> False, Editable -> 
                  False, SelectWithContents -> True], Magnification -> 
                 0.8 Inherited, StripOnInput -> False], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CategoricalDistribution[<|
   "Probabilities" -> 
    SparseArray[
     Automatic, {2, 2}, 0., {
      1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {0.2678607613897799, 
       0.37225306622849824`, 0.23159018219042807`, 0.12829599019129403`}}], 
    "Index" -> {<|0 -> 1, 1 -> 2|>, <|0 -> 1, 1 -> 2|>}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.968338884659535*^9, 3.9683389259506903`*^9}, 
   3.968344774655635*^9, 3.96834720669258*^9, {3.968348357103101*^9, 
   3.9683483655676413`*^9}},
 CellLabel->
  "Out[199]=",ExpressionUUID->"9011eaaa-b732-459b-be11-3e4568026b7e"]
}, Open  ]],

Cell["\<\
Visualize the contingency table of the marginal distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343056167914*^9, 
  3.968343066604546*^9}},ExpressionUUID->"4dc39fdf-094a-4646-b8cd-\
447e8ccda05f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]12", ",", "\"\<ProbabilityTable\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9683395156082172`*^9, 3.96833951607542*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"c00143cc-d3c6-4704-9d46-0e47063baf53"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      0 -> <|0 -> 0.2678607613897799, 1 -> 0.37225306622849824`|>, 
       1 -> <|0 -> 0.23159018219042807`, 1 -> 0.12829599019129403`|>|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`AtomShape[60]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 2], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[34], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[34], 
            TypeSystem`PackageScope`AtomShape[60]]], 2, 
          DirectedInfinity[1], {All}]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[Integer], 
       TypeSystem`Assoc[
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Real], 2], 2], "Path" -> {}, "DisplayedRowCount" -> 2,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.267861"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[0], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.372253"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[0], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["0"], 
                  Style[
                   RawBoxes["0"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[0]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.23159"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[0]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  RawBoxes["1"], 
                  Style[
                   RawBoxes["1"], FontColor -> 
                   RGBColor[
                    0.2749633796890805, 0.536987306253161, 
                    0.791992189065661]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key[1], 
                    Key[1]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             RGBColor[
              0.9500473017990948, 0.9500473017990948, 0.9500473017990948], 
             Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.128296"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key[1], 
                 Key[1]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> 
          RGBColor[0.749003690406716, 0.749003690406716, 0.749003690406716], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Dynamic[
     Replace[
      Replace[
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
       TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
          Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
          Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
           Blank[]], 
          Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
           Blank[]]] :> (
         Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
          TypeSystem`NestedGrid`PackagePrivate`path$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
          TypeSystem`NestedGrid`PackagePrivate`pathType$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
          TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
         TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
          TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
         TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
          TypeSystem`NestedGrid`PackagePrivate`path$, 
           TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
        Spacer[10], Blank[] :> Spacer[10]}], 
      Pattern[TypeSystem`NestedGrid`PackagePrivate`bar, 
        Except[
         Alternatives[
          Blank[Spacer], ""]]] :> 
      TypeSystem`NestedGrid`PackagePrivate`makeFramedPathbar[
       TypeSystem`NestedGrid`PackagePrivate`bar]], 
     TrackedSymbols :> {
      TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{183.788, {76.24456787109375, 84.84246826171875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{183.788, {76.24456787109375, 84.84246826171875}}],
    BaseStyle->{
     LineBreakWithin -> False, 
      LightDarkAutoColorRules -> <|"MarkedColors" -> True|>},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.968339516455041*^9, {3.9683447712539988`*^9, 3.9683447763205137`*^9}, 
   3.9683472067075872`*^9, {3.968348358490398*^9, 3.968348365587421*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"b71a5347-3c98-4e4d-851c-aa696da6d847"]
}, Open  ]],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 from the marginal \
probability distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343279930684*^9, 3.9683432879877996`*^9}, {
  3.968347171297394*^9, 3.9683471738250303`*^9}, {3.968347282354623*^9, 
  3.968347288384892*^9}, {3.96834733353307*^9, 3.968347334192477*^9}, {
  3.968347404911089*^9, 
  3.9683474072806377`*^9}},ExpressionUUID->"55b1a2df-21fe-4d60-9e8a-\
52e638092738"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"q1", "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]12"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683432462218018`*^9, 3.9683432763884373`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"3d57a38b-7b1f-47c1-be50-8973636de630"],

Cell[BoxData["0.6401138276182781`"], "Output",
 CellChangeTimes->{{3.9683432724750347`*^9, 3.968343276786672*^9}, 
   3.968344778118535*^9, {3.968347175135141*^9, 3.96834720674972*^9}, 
   3.968348365630196*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"7e38da62-7ac9-4ba2-8e34-abf88c5b111d"]
}, Open  ]],

Cell["\<\
Calculate the probability of getting 0 for qubit-1 from the overall \
probability distribution:\
\>", "Text",
 CellChangeTimes->{{3.968343279930684*^9, 3.9683432879877996`*^9}, {
  3.968347171297394*^9, 3.9683471738250303`*^9}, {3.968347282354623*^9, 
  3.968347288384892*^9}, {3.96834733353307*^9, 3.968347340185274*^9}, {
  3.9683474104085197`*^9, 
  3.968347410637444*^9}},ExpressionUUID->"69fc3163-cb41-403c-b9e8-\
0b78969efcea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"q1", "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"q1", ",", "q2", ",", "q3"}], "}"}], "\[Distributed]", 
    "\[ScriptCapitalD]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9683471801529303`*^9, 3.9683471823847637`*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"084ca74a-0b07-4573-9aa7-fc50c2e27a8f"],

Cell[BoxData["0.6401138276182781`"], "Output",
 CellChangeTimes->{{3.968347182682353*^9, 3.9683472067549963`*^9}, 
   3.968348365634705*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"dc6474d3-72f5-474e-8633-5aea565b4e38"]
}, Open  ]],

Cell["\<\
Of course, the rules of quantum theory provide a recipe for obtaining the \
quantum state of qubits 1 and 2 by averaging over all contributions from \
qubit 3. This is done by tracing over the degrees of freedom of qubit 3, \
which yields the reduced state for qubits 1 and 2.\
\>", "Text",
 CellChangeTimes->{{3.968347608460641*^9, 3.968347618114686*^9}, {
  3.968347694369904*^9, 3.968347725796362*^9}, {3.9683483774023848`*^9, 
  3.9683484078304653`*^9}, {3.968348472196415*^9, 
  3.9683484806477013`*^9}},ExpressionUUID->"6390c58d-7126-4d6b-89ee-\
62824a1001f5"],

Cell["\<\
Trace out the qubit-3 (which is the 3rd subsystem) from the overall state:\
\>", "CodeText",
 CellChangeTimes->{{3.96834913803797*^9, 
  3.9683491518502893`*^9}},ExpressionUUID->"0cc0a715-2576-41dc-ad83-\
0572fb94f67f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumPartialTrace", "[", 
  RowBox[{"state", ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.968348413703866*^9, 3.9683484146103067`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"7766b02c-42b2-4bf5-8bcd-b090f879b764"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAIarMNXMZOg/77IroR+H7T+A
rQziOyXjPyZIdbWMLOg/KL0MfqTd2j8xOIQOO5bsP6QosuXoWuM/nj3/NXdh
7D8enoBWp9ffPxLbecujsO4/wGNaOqv65D893Rt5ooDkP5o216uFGu8/w2tA
Hr246D+DuQ25UPfoP5RPFQGNku4/YKtKENVT7j/X9D2CVzXnP6Wz9VBQK+8/
okRcaLQC6T/tkU5xT7XoP9S0L4uuMOY/a+TQuPnU4j+2cmKoPMzuP6Bk/fCM
Xew/ciADCQsE5j/UUMra3fTtP81DwzVode8/+gQIPgpy6z/XztKAmz/rP/oS
Xv2r3e0/GBEaVp7a5z8noCvFGdrtP5DIoL9KB+g/p3urrpsJ7D8TfNW97y7T
P6m4JqmxRO8/QE0vhTnY6T/t/qLfEJTpPzoeJ2uCrOw/YgFl7iz57T/JAMNb
F0fkPx57rOS+Q+8/tWYaaKuG6T+lf3KyJ4HoP2+103uw3uk/axPOYMrv5T84
Jzl2aN7uP2E5yC4=
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, PlotInteractivity :> 
              True, DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
              DisplayFunction -> Identity, PlotInteractivity :> True, 
              DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, Background -> 
              RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
              False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAIarMNXMZOg/77IroR+H7T+A
rQziOyXjPyZIdbWMLOg/KL0MfqTd2j8xOIQOO5bsP6QosuXoWuM/nj3/NXdh
7D8enoBWp9ffPxLbecujsO4/wGNaOqv65D893Rt5ooDkP5o216uFGu8/w2tA
Hr246D+DuQ25UPfoP5RPFQGNku4/YKtKENVT7j/X9D2CVzXnP6Wz9VBQK+8/
okRcaLQC6T/tkU5xT7XoP9S0L4uuMOY/a+TQuPnU4j+2cmKoPMzuP6Bk/fCM
Xew/ciADCQsE5j/UUMra3fTtP81DwzVode8/+gQIPgpy6z/XztKAmz/rP/oS
Xv2r3e0/GBEaVp7a5z8noCvFGdrtP5DIoL9KB+g/p3urrpsJ7D8TfNW97y7T
P6m4JqmxRO8/QE0vhTnY6T/t/qLfEJTpPzoeJ2uCrOw/YgFl7iz57T/JAMNb
F0fkPx57rOS+Q+8/tWYaaKuG6T+lf3KyJ4HoP2+103uw3uk/axPOYMrv5T84
Jzl2aN7uP2E5yC4=
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, PlotInteractivity :> 
              True, DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, 
              DisplayFunction -> Identity, PlotInteractivity :> True, 
              DefaultBaseStyle -> {"PlotGraphics", "Graphics"}, Background -> 
              RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
              False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.6287626012444363`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "0.8053049164137395`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
  SparseArray[
   Automatic, {4, 4}, Complex[0., 0.], {
    1, {{0, 4, 8, 12, 16}, {{1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {
      2}, {3}, {4}, {1}, {2}, {3}, {4}}}, {Complex[0.26786076138977977`, 0.], 
     Complex[0.026722380059245793`, 0.1726132626600238], Complex[
     0.2263824247655114, 0.020460706915468002`], 
     Complex[-0.0335233050613727, -0.1443939182022153], Complex[
     0.026722380059245793`, -0.1726132626600238], Complex[0.3722530662284981, 
     0.], Complex[0.08970127278467205, -0.22804312683940386`], Complex[
     0.0028241497684844546`, 0.053110439881813326`], Complex[
     0.2263824247655114, -0.020460706915468002`], Complex[0.08970127278467205,
      0.22804312683940386`], Complex[0.23159018219042796`, 0.], 
     Complex[-0.033613331060727974`, -0.07755306768335428], 
     Complex[-0.0335233050613727, 0.1443939182022153], Complex[
     0.0028241497684844546`, -0.053110439881813326`], 
     Complex[-0.033613331060727974`, 0.07755306768335428], Complex[
     0.12829599019129398`, 0.]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9683484153797913`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"5eb74e31-d523-4071-a131-1d829b2f172a"]
}, Open  ]],

Cell["\<\
And this reduced state yields the same marginal probabilities as before:\
\>", "Text",
 CellChangeTimes->{{3.968348432601138*^9, 3.9683484444804983`*^9}, 
   3.9683486123255367`*^9},ExpressionUUID->"50322e51-e8b3-4f44-9d14-\
cbe0b8e6ff28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumPartialTrace", "[", 
   RowBox[{"state", ",", 
    RowBox[{"{", "3", "}"}]}], "]"}], "[", "\"\<Probabilities\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.968348418703348*^9, 3.9683484257486973`*^9}, {
  3.968348807351156*^9, 3.968348807780431*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"002a4746-e5d1-425f-a910-9c8d8cf8e04f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], "\[Rule]", 
    "0.2678607613897798`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    "0.37225306622849813`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    "0.231590182190428`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], "\[Rule]", 
    "0.128295990191294`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.968348422403769*^9, 3.968348426088222*^9}, 
   3.968348811448718*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"378ffcf9-4415-4e55-bb90-9c24e330515b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"\[ScriptCapitalD]12", ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.968348993820956*^9, 3.9683490200113792`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"9c966f8c-5757-49ae-bb49-d9ec63fc0514"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "\[Rule]", "0.2678607613897799`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], "\[Rule]", "0.37225306622849824`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], "\[Rule]", "0.23159018219042807`"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "0.12829599019129403`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.96834899628862*^9, 3.9683490206134777`*^9}},
 CellLabel->
  "Out[212]=",ExpressionUUID->"57208945-8de4-4767-a158-239481d831ed"]
}, Open  ]],

Cell["\<\
In future chapters, we will discuss in details the idea of tracing out a \
subsystem and how to describe the state of composite systems in quantum \
theory.\
\>", "Text",
 CellChangeTimes->{{3.968348724077909*^9, 
  3.968348784413887*^9}},ExpressionUUID->"ca976c05-fac3-44fe-84bc-\
b0a0df9a5339"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initialization", "Section",
 CellChangeTimes->{{3.957529162391567*^9, 3.9575291646615334`*^9}, {
  3.968252755378531*^9, 
  3.9682527559221497`*^9}},ExpressionUUID->"473bcbcb-924a-48c6-a51d-\
1eeef80ed47e"],

Cell["Install Wolfram quantum framework", "Text",
 CellChangeTimes->{{3.968331681657031*^9, 
  3.968331687131729*^9}},ExpressionUUID->"869583df-5da3-424d-86ae-\
594e1e994fc4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletInstall", "[", 
  RowBox[{"\"\<https://www.wolfr.am/DevWQCF\>\"", ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}], "\n", 
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]}], "Code",
 CellChangeTimes->{{3.9388016656063175`*^9, 3.9388016757122*^9}, {
  3.957529117446884*^9, 3.957529117764634*^9}, {3.9575291526382093`*^9, 
  3.95752915355468*^9}, {3.9579616792800007`*^9, 3.9579616795817413`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"a6ed380e-35d9-4d06-9ba5-70dc10b7dde6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.3\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/mohammadb/Library/Wolfram/Paclets/Repository/\
Wolfram__QuantumFramework-1.6.3\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.6.3", "WolframVersion" -> 
    "13.1+", "PrimaryContext" -> "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {{"Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}, 
         "Wolfram`QuantumFramework`Init`", "Wolfram`QuantumFramework`Gates`", 
         "Wolfram`QuantumFramework`Experimental`", 
         "Wolfram`QuantumFramework`ExampleRepository`", 
         "Wolfram`QuantumFramework`DiagramPlot`", 
         "Wolfram`QuantumFramework`SecondQuantization`", 
         "Wolfram`QuantumFramework`QuantumOptimization`"}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumSimilarity", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumPhaseSpaceTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{
         "IBMQuantumPlatform.paclet", "IBMQuantumPlatform-0.0.2.paclet"}}}}, 
    "Location" -> 
    "/Users/mohammadb/Library/Wolfram/Paclets/Repository/Wolfram__\
QuantumFramework-1.6.3"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.957529358529237*^9, 3.95753068051863*^9, 3.968249612751997*^9, {
   3.968252003052746*^9, 3.968252020320809*^9}, 3.968254248592813*^9, 
   3.9683318971260653`*^9, 3.96833782397351*^9, 3.968345686645543*^9},
 CellLabel->
  "Out[131]=",ExpressionUUID->"300d035c-d109-4067-98a2-eb658e44f942"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1728, 959},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"Openers" -> <|"ExampleSection" -> <|"3" -> Closed|>|>|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"14.3 for Mac OS X ARM (64-bit) (July 22, 2025)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5fcd9741-bbf6-774b-b015-725de9406468"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[576, 22, 165, 3, 144, "Title",ExpressionUUID->"a95eef93-0a1c-3746-8d2f-8c03d537a6f2"],
Cell[744, 27, 444, 9, 83, "Text",ExpressionUUID->"f844df69-a66d-4e30-be6b-197320559c7c"],
Cell[CellGroupData[{
Cell[1213, 40, 159, 3, 99, "Section",ExpressionUUID->"d47a7f2d-e3d8-a646-800b-2925ca67ba16"],
Cell[1375, 45, 257, 4, 46, "Item",ExpressionUUID->"d25bbdeb-3d67-2b4e-a22a-7dccf980dd4f"],
Cell[1635, 51, 216, 4, 46, "Item",ExpressionUUID->"1ad28be2-632c-2f46-baa1-84defee11031"],
Cell[1854, 57, 215, 4, 46, "Item",ExpressionUUID->"c6f9af1d-b3a4-4764-8e95-09b0b5cfd1b0"],
Cell[2072, 63, 212, 4, 46, "Item",ExpressionUUID->"89a7bac9-c131-4ecc-a181-df131c4107d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2321, 72, 224, 4, 99, "Section",ExpressionUUID->"8a65c536-47fd-0649-a611-4a5099f3c6b0"],
Cell[2548, 78, 743, 12, 116, "Text",ExpressionUUID->"a99a2876-174d-ad44-aee4-86201ca9154d"],
Cell[3294, 92, 237, 6, 50, "Text",ExpressionUUID->"0caacd39-bc7a-df4c-bcef-56175aed7f9b"],
Cell[3534, 100, 437, 10, 46, "Item",ExpressionUUID->"dc127136-a384-b241-87a8-49163a2a9890"],
Cell[3974, 112, 434, 10, 46, "Item",ExpressionUUID->"b243c298-eff2-5a4f-b900-358f1e9df0e8"],
Cell[4411, 124, 721, 12, 116, "Text",ExpressionUUID->"a7ad6136-43aa-3e46-8dce-d3445484c29c"],
Cell[5135, 138, 252, 6, 50, "Text",ExpressionUUID->"7b606baf-0b78-564a-8b89-f19177ee58d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5424, 149, 268, 4, 99, "Section",ExpressionUUID->"239562c2-459c-0742-ac91-9ac33b151e7c"],
Cell[5695, 155, 356, 7, 83, "Text",ExpressionUUID->"d70f70ef-bc1a-a64b-bcc3-9a38afeacffd"],
Cell[CellGroupData[{
Cell[6076, 166, 234, 5, 44, "Input",ExpressionUUID->"e18b0798-dd83-cf42-ac18-3462fd8e8583"],
Cell[6313, 173, 200, 3, 50, "Output",ExpressionUUID->"ebb0ecaa-f739-46a3-ad97-ce5d66450ffd"]
}, Open  ]],
Cell[6528, 179, 257, 7, 50, "Text",ExpressionUUID->"24077bc8-8047-4901-bf50-393f53f5d20d"],
Cell[6788, 188, 218, 3, 50, "Text",ExpressionUUID->"0f46b1ee-01e5-0a41-b171-f167e749208c"],
Cell[CellGroupData[{
Cell[7031, 195, 223, 6, 44, "Input",ExpressionUUID->"2dd8d839-102b-d64a-926d-a8953aa8f5fb"],
Cell[7257, 203, 435, 9, 50, "Output",ExpressionUUID->"7f59ac94-8e3d-4b36-bc52-ac5eb0e4374d"]
}, Open  ]],
Cell[7707, 215, 992, 18, 116, "Text",ExpressionUUID->"9a92bab1-48ed-4846-98e8-e1ec8c64013e"],
Cell[CellGroupData[{
Cell[8724, 237, 460, 10, 74, "Input",ExpressionUUID->"bf3194b2-7c9a-1d41-974f-a7362ace1fbb"],
Cell[9187, 249, 439, 8, 50, "Output",ExpressionUUID->"39e8a7a7-0200-46f4-8d5f-9f85e51a534f"]
}, Open  ]],
Cell[9641, 260, 284, 7, 50, "Text",ExpressionUUID->"04da42bd-d5dd-764f-b4c9-d9cfb6aa1b2d"],
Cell[CellGroupData[{
Cell[9950, 271, 684, 17, 44, "Input",ExpressionUUID->"50bc984f-1b70-8e47-a4e2-2c8db67574ec"],
Cell[10637, 290, 9216, 271, 354, "Output",ExpressionUUID->"51c25416-5fcf-46c0-bf3d-965ee6aa3dfb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19890, 566, 1205, 32, 74, "Input",ExpressionUUID->"1b509676-e49b-468d-b8c5-1ebd0661bef5"],
Cell[21098, 600, 53292, 1361, 228, "Output",ExpressionUUID->"13bb069d-4a9f-4856-95fa-7f7c5540b08f"]
}, Open  ]],
Cell[74405, 1964, 491, 9, 83, "Text",ExpressionUUID->"6a135abe-9b98-4553-822d-af701fcffbab"],
Cell[74899, 1975, 452, 9, 83, "Text",ExpressionUUID->"23ea6f15-b590-4340-b738-f73543fee937"],
Cell[CellGroupData[{
Cell[75376, 1988, 467, 11, 44, "Input",ExpressionUUID->"f697b007-ec50-4c4f-9ccc-719490dd17e5"],
Cell[75846, 2001, 534, 15, 65, "Output",ExpressionUUID->"f9c81f87-5614-43e5-8fcb-aa69823aba07"]
}, Open  ]],
Cell[76395, 2019, 506, 9, 83, "Text",ExpressionUUID->"09eddf68-cce0-45fa-8caa-2c27b9dd0ca3"],
Cell[76904, 2030, 937, 23, 44, "Input",ExpressionUUID->"46361cd7-ba0d-4bb3-ad7f-b5f2239647e3"],
Cell[77844, 2055, 183, 3, 50, "Text",ExpressionUUID->"9fa21214-3735-4af4-bfcb-3d3ac8b08a62"],
Cell[CellGroupData[{
Cell[78052, 2062, 789, 19, 44, "Input",ExpressionUUID->"36c3fa54-e6c3-4c9d-98e9-3015fa03f72b"],
Cell[78844, 2083, 2634, 72, 164, "Output",ExpressionUUID->"be398a1f-664f-43bb-8f7a-374ed2bf7b6e"]
}, Open  ]],
Cell[81493, 2158, 163, 3, 50, "Text",ExpressionUUID->"265dbc0e-bbd2-4b8f-8985-29bc5649a9b4"],
Cell[CellGroupData[{
Cell[81681, 2165, 816, 18, 74, "Input",ExpressionUUID->"4a5461b5-69e9-40c3-8907-ab31f12a933f"],
Cell[82500, 2185, 65897, 1582, 348, "Output",ExpressionUUID->"736b5b39-f96b-4692-bd79-d7bd4b430c47"]
}, Open  ]],
Cell[148412, 3770, 287, 6, 50, "Text",ExpressionUUID->"78bc4bbf-0fb0-4c93-9303-5e2eede052f3"],
Cell[148702, 3778, 675, 12, 116, "Text",ExpressionUUID->"53177d8d-37b1-4b4b-b185-fd0128a7f952"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149414, 3795, 198, 3, 99, "Section",ExpressionUUID->"2a9feec0-c161-41ec-99f7-d0b837b42d52"],
Cell[149615, 3800, 603, 14, 83, "Text",ExpressionUUID->"7104ffe3-042b-4b5e-9406-08adc37cba22"],
Cell[CellGroupData[{
Cell[150243, 3818, 328, 8, 44, "Input",ExpressionUUID->"fccaeaca-17f7-4da9-94c0-5c4705db8e2a"],
Cell[150574, 3828, 851, 23, 50, "Output",ExpressionUUID->"25485904-f3df-4c73-a84a-7352f38926a0"]
}, Open  ]],
Cell[151440, 3854, 388, 8, 83, "Text",ExpressionUUID->"4bdd9796-6bf6-49e0-9204-d18f5d55fe66"],
Cell[151831, 3864, 800, 20, 74, "Input",ExpressionUUID->"ca4e971c-47a0-416f-a4d8-69e1f7a57958"],
Cell[152634, 3886, 322, 7, 50, "Text",ExpressionUUID->"89363d20-c606-4d21-868e-07ba3655e213"],
Cell[152959, 3895, 194, 3, 50, "Text",ExpressionUUID->"329574b4-9037-4d82-af34-1f2368554fcd"],
Cell[CellGroupData[{
Cell[153178, 3902, 704, 12, 44, "Input",ExpressionUUID->"bdba2106-92ca-404d-b4f1-f97c1a8abf2e"],
Cell[153885, 3916, 51992, 1003, 346, "Output",ExpressionUUID->"f2b4448f-5e8b-42b9-914c-1bbd000d1bc9"]
}, Open  ]],
Cell[205892, 4922, 237, 6, 50, "Text",ExpressionUUID->"b5db0754-608e-4e81-a998-f93dfcaedce7"],
Cell[CellGroupData[{
Cell[206154, 4932, 983, 26, 74, "Input",ExpressionUUID->"2ab78193-6c6a-4b43-94a0-d9e948b9e759"],
Cell[207140, 4960, 1887, 54, 272, "Output",ExpressionUUID->"2fa14dba-0e68-4782-93dd-6a7e09edb569"]
}, {2}]],
Cell[209039, 5017, 383, 8, 50, "Text",ExpressionUUID->"005c39db-c2d5-49eb-9bdc-f4c14fac70e1"],
Cell[209425, 5027, 423, 8, 50, "Text",ExpressionUUID->"3fe18dc6-3f46-4c14-ad57-20f216f68436"],
Cell[CellGroupData[{
Cell[209873, 5039, 447, 12, 44, "Input",ExpressionUUID->"743bbc34-5146-4ab2-b454-696944ca422e"],
Cell[210323, 5053, 240, 4, 50, "Output",ExpressionUUID->"167e04e8-92c1-44e0-bb02-05432aac35b1"]
}, Open  ]],
Cell[210578, 5060, 657, 12, 149, "Text",ExpressionUUID->"a39e8465-5c77-476d-ae22-8b9c55d68a82"],
Cell[CellGroupData[{
Cell[211260, 5076, 666, 21, 44, "Input",ExpressionUUID->"16a7bb94-17fd-4387-b97e-8ca0c30f2b82"],
Cell[211929, 5099, 245, 4, 50, "Output",ExpressionUUID->"b7371d8e-2772-40ec-8dce-58b410c0a6ea"]
}, Open  ]],
Cell[212189, 5106, 506, 9, 83, "Text",ExpressionUUID->"fb3b931d-55e8-43c2-893d-e8fbc60dc37b"],
Cell[212698, 5117, 483, 9, 116, "Text",ExpressionUUID->"d99e11ba-4b28-4168-9c4f-340628e6c33b"],
Cell[CellGroupData[{
Cell[213206, 5130, 476, 14, 44, "Input",ExpressionUUID->"3ba33f05-0a31-4f55-9db5-2b725f3f8697"],
Cell[213685, 5146, 704, 19, 50, "Output",ExpressionUUID->"57b99e87-f828-4e10-9a0b-8858d12e92bd"]
}, Open  ]],
Cell[214404, 5168, 373, 7, 83, "Text",ExpressionUUID->"400c57fe-ed6e-496e-9e04-ffcd28efb036"],
Cell[214780, 5177, 205, 3, 50, "Text",ExpressionUUID->"01c379a5-53d5-4db7-81df-5e27494b743c"],
Cell[CellGroupData[{
Cell[215010, 5184, 358, 8, 44, "Input",ExpressionUUID->"92db6b77-fa57-434a-b748-d10764e8fa28"],
Cell[215371, 5194, 44495, 795, 93, "Output",ExpressionUUID->"9011eaaa-b732-459b-be11-3e4568026b7e"]
}, Open  ]],
Cell[259881, 5992, 211, 5, 50, "Text",ExpressionUUID->"4dc39fdf-094a-4646-b8cd-447e8ccda05f"],
Cell[CellGroupData[{
Cell[260117, 6001, 281, 6, 44, "Input",ExpressionUUID->"c00143cc-d3c6-4704-9d46-0e47063baf53"],
Cell[260401, 6009, 33660, 625, 186, "Output",ExpressionUUID->"b71a5347-3c98-4e4d-851c-aa696da6d847"]
}, Open  ]],
Cell[294076, 6637, 444, 9, 50, "Text",ExpressionUUID->"55b1a2df-21fe-4d60-9e8a-52e638092738"],
Cell[CellGroupData[{
Cell[294545, 6650, 385, 10, 44, "Input",ExpressionUUID->"3d57a38b-7b1f-47c1-be50-8973636de630"],
Cell[294933, 6662, 294, 5, 50, "Output",ExpressionUUID->"7e38da62-7ac9-4ba2-8e34-abf88c5b111d"]
}, Open  ]],
Cell[295242, 6670, 443, 9, 50, "Text",ExpressionUUID->"69fc3163-cb41-403c-b9e8-0b78969efcea"],
Cell[CellGroupData[{
Cell[295710, 6683, 394, 10, 44, "Input",ExpressionUUID->"084ca74a-0b07-4573-9aa7-fc50c2e27a8f"],
Cell[296107, 6695, 223, 4, 50, "Output",ExpressionUUID->"dc6474d3-72f5-474e-8633-5aea565b4e38"]
}, Open  ]],
Cell[296345, 6702, 576, 10, 83, "Text",ExpressionUUID->"6390c58d-7126-4d6b-89ee-62824a1001f5"],
Cell[296924, 6714, 229, 5, 55, "CodeText",ExpressionUUID->"0cc0a715-2576-41dc-ad83-0572fb94f67f"],
Cell[CellGroupData[{
Cell[297178, 6723, 274, 6, 44, "Input",ExpressionUUID->"7766b02c-42b2-4bf5-8bcd-b090f879b764"],
Cell[297455, 6731, 12060, 239, 86, "Output",ExpressionUUID->"5eb74e31-d523-4071-a131-1d829b2f172a"]
}, Open  ]],
Cell[309530, 6973, 249, 5, 50, "Text",ExpressionUUID->"50322e51-e8b3-4f44-9d14-cbe0b8e6ff28"],
Cell[CellGroupData[{
Cell[309804, 6982, 376, 9, 44, "Input",ExpressionUUID->"002a4746-e5d1-425f-a910-9c8d8cf8e04f"],
Cell[310183, 6993, 1370, 42, 53, "Output",ExpressionUUID->"378ffcf9-4415-4e55-bb90-9c24e330515b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[311590, 7040, 279, 6, 44, "Input",ExpressionUUID->"9c966f8c-5757-49ae-bb49-d9ec63fc0514"],
Cell[311872, 7048, 680, 18, 50, "Output",ExpressionUUID->"57208945-8de4-4767-a158-239481d831ed"]
}, Open  ]],
Cell[312567, 7069, 306, 7, 50, "Text",ExpressionUUID->"ca976c05-fac3-44fe-84bc-b0a0df9a5339"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312910, 7081, 212, 4, 99, "Section",ExpressionUUID->"473bcbcb-924a-48c6-a51d-1eeef80ed47e"],
Cell[313125, 7087, 175, 3, 50, "Text",ExpressionUUID->"869583df-5da3-424d-86ae-594e1e994fc4"],
Cell[CellGroupData[{
Cell[313325, 7094, 522, 9, 104, "Code",ExpressionUUID->"a6ed380e-35d9-4d06-9ba5-70dc10b7dde6"],
Cell[313850, 7105, 24619, 434, 86, "Output",ExpressionUUID->"300d035c-d109-4067-98a2-eb658e44f942"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

