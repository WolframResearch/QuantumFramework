(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    625926,      11841]
NotebookOptionsPosition[    607892,      11537]
NotebookOutlinePosition[    608326,      11554]
CellTagsIndexPosition[    608283,      11551]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Introduction to Variational Quantum Algorithms", "Title",ExpressionUUID->"c8ac950e-57ee-b141-ac03-3c0bbff9b2c1"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.954603991042654*^9, 
  3.95460399343388*^9}},ExpressionUUID->"5379e0dc-e58a-b045-88c2-\
16113a507603"],

Cell["\<\
Quantum computing has long been envisioned as a transformative technology, \
with the potential to tackle problems that are intractable for classical \
computers. Quantum algorithms promise exponential speedups in areas such as \
number factorization, quantum system simulation, and solving linear systems \
of equations.\
\>", "Text",
 CellChangeTimes->{{3.9548461122933803`*^9, 
  3.9548461161737757`*^9}},ExpressionUUID->"f868ee82-930d-8c48-9019-\
1d37c4ebe90a"],

Cell["\<\
The introduction of cloud-based quantum computers in 2016 provided public \
access to real quantum hardware. However, due to noise and the limited number \
of qubits, running large-scale quantum algorithms remained impractical. This \
led to growing interest in what could be achieved with these early devices, \
commonly referred to as Noisy Intermediate-Scale Quantum (NISQ) computers. \
Today\[CloseCurlyQuote]s state-of-the-art NISQ devices contain up to 1000 \
qubits, with only two quantum processors having over 1,000 qubits, making it \
possible to surpass classical supercomputers in specific, carefully designed \
computational tasks\[LongDash]a milestone known as quantum supremacy.\
\>", "Text",
 CellChangeTimes->{
  3.954846118920421*^9},ExpressionUUID->"74444705-7f77-3244-9ab0-\
86c43fe6eacb"],

Cell["\<\
Variational Quantum Algorithms (VQAs) have emerged as the leading approach \
for using the power of NISQ devices. Given the constraints of current quantum \
hardware, VQAs employ a hybrid quantum-classical optimization framework. They \
utilize parameterized quantum circuits executed on a quantum computer, while \
classical optimizers adjust the parameters to minimize a given cost function. \
This strategy mirrors machine-learning techniques, such as neural networks, \
which rely on optimization-based learning methods.\
\>", "Text",
 CellChangeTimes->{{3.9548461659781876`*^9, 
  3.9548461674579315`*^9}},ExpressionUUID->"41b69610-d4ab-ec49-a771-\
2b5bd4da3ebb"],

Cell[CellGroupData[{

Cell["Applications", "Subsection",
 CellChangeTimes->{{3.954604038227192*^9, 
  3.954604039473894*^9}},ExpressionUUID->"9e8b7de8-a529-a248-9076-\
0eef90d5fa47"],

Cell["\<\
VQAs have been explored for a wide range of applications, spanning nearly all \
areas initially envisioned for quantum computing. As illustrated in the \
following image, VQAs are applied across various domains, including error \
correction, machine learning, combinatorial optimization, ground-state \
estimation, and mathematical problem-solving.
\
\>", "Text",
 CellChangeTimes->{{3.9548462323827915`*^9, 3.9548462370243073`*^9}, {
  3.954846281950758*^9, 
  3.9548462825560856`*^9}},ExpressionUUID->"13d473a0-ab1f-8c42-9571-\
c83359487859"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
gCUme/xebNMOdCfuKtoMkU+atr2C0ymGyhp4kfidnWmtdhSRX7392Xly7BPi
fPsc88fZSZyKeHPaVftQBj4sPWSGpcS0DqrqSmSTIC2+UEUnOI9tdLQFewks
iLvFXyPPDE5iTSw0sUTn0NjQjJdiNsRusXMkI1d4Edhd2tkbj2jWgdz63xp1
zo8Zms7a9lvIUmrg4wCXmIp4E4TEX3MgHqI2rhZ+Rn65O28QGsqmINLpNE9g
/E4B0WbITiipgRFICpXtgdCDQJewNY+3fvvmzv1Eyxi3shdyNScDPJztHnQn
czicEKcXrdkPl/gj0nCfTu1qTDPs6xc/OwyYynXncSp8fZ0LO3W2jfu9pCN2
5Z9P++vmt2AOx/344buwi8TZIU+jE6/2v1nu0K5td/LP3drnCjmMY4bmis1k
Mv4PpLsfPXsWBZlhUcDVaK5M/10zRk1t1BLmOwxgoOfQ8ew+LOy0As1zNkwN
7FBMx7B3xQ1hZfZCOp69t8BOMc4HodrZW/HD+h8nsDbZeQufkdE/ZzVGPs3F
QP/EQidjzpKqTvyMAE9J5f5xVj8oXnj2nIBedIo2QxMztFdwgm+4ffu9LQZV
tb7+EQIdVQs0Qz8U5kQIfXVxDsdIo7NzZM+enQSZMSpign7OmcnLDO3MmIpO
O5wboXO2FIWdhKKYIc4ApMt8CzSrgs0wbE2eTPOhBv2+eI2Zqn9+TWFNVZ3E
VpFNTU2zZs1yxngH45pGNTaO5Gvcc1tbW9vb2/Eoqg62BSAzLABcabjecNXh
2jPW19jQMHGce63i6t133335uogjKiebGHyL/3EY0/O7q3A/JmxIc3OGfPEF
iVvZS7iho2o0T9vG45ghFBSr2bFN/3DxzZB26ijre/3+aT5poDkz84l/10VM
psRO+udbfaDA4dnLS12izdAMhW0HIZ34G+7mfptG30kC1QV3fNZEs11fmBkO
qmeDmgb3E13JTjk02QjsdhHn9GI/gf0pzMmMPidhOlciM+zrF9eIbyG+GfID
+h/fGblx0O+rz2o0aK7qmJFwU6G85557Qg7TOfbY48ORbQ76+H5HH3HgKSe3
nnHK8V+44pw1V573uc8saJk+hcUOnklx11ZEMSYyw5jgisJ1lclkqIJ77bHn
qScuWn3RpasvuOS0kz696Ji/OuqQw/Zv2Yfnc//99+dFi6t3991358KaqRyk
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
VXT88ccHjlFQgBlSzOxq1jCBNB1GfDNkPw44FfbDifNYV+vIG3WRYAW7bSHX
N0pmC1sBZsgVzGQudjJ7DuvgzB4oxg9TeTbCrFIzNDMdc2pjzkqM/3KuYc6F
h4VmiuGkApLI1bQ996pwLy3nNfDJT87LhQon5Sp8hw28sWBJ88UXX5bvPrdv
/15Dw65BNcgfJgjnunUdJfg0tcaaNWucG33RD+GY4aCHsGOMZetoKQJhnCfS
DT8sSeSHxQW6NWbMGJz8OG07zRR1pc+XS/yJ+cwsfsWaHY8N+VL9/UfCkj2s
jW+GxsTC5M1UNEPMjAcycui85e+qADNkxXF0FXmgGeIkmPOAF9RdrBZ/Uuaq
M8Mf/9uLED+sD+kycxwzbb7tTs54Ys+SzJUTMUNkjx+NMcyYCa5bw2bY0rKv
iePleo4M77+fsH/xRKhjAbtdsuSsXXZpGDiG4YdHgRYedNAhRf8gNQbnUHBu
8aW4uThmGN1C3olhqpFhJYB7OrtFDOqHiUzdW6vgh8NpbjgrceA67PSBdcrW
vNCHvaTZCSVwBeOEEU8Qhc2BwrBhRIUyFM5us+eYIfubOFFH086QIURnvET2
EOERU16VrtMduAAzZDtDZ0495tw4XqAZcgwcewn7pOTbbrOKzPDYBYuohYHv
MpZomyGsLCkz5NGR4fgxQ6xpZ772zHDWrI/5fUNyXYkpdc1nnLGksD1v23b7
6NFjcjXUTbnKZTwjjB4xYmR7+xXF/Qi1B4MMgTf3oh8rr9pkWz/KOdWXiANr
maP7qoT1ThWFAd1ihSwnlevIgScmPtZFe2PZMO7HMoTtCTmBI3/REd5ICjND
js2SCpkGZfN9dznVuzRDE9ajO9nyRlekd7FK19+5GaUw5XVb5nCCJm/xzdB0
J6F5Os7JhYOaISTW2aqGzXDzbXemcpXITrTQTrNmz60cM8w3Xbvpa7Vthm1t
5+acLaxB4JgtW7YWvHO2t8EhZs7c/9RTT/vKV/6HXGJQnLhcqc3QmdAkwgxh
HfaaCYZBRDSc8kx+WDZQrHEOxPnz5++7776cF7ICa/DNpN7IJLKKF1gSp0wu
zAy39/fApYPZ23I4F7sDL16zfweWQ/YgWqbXBlfDEg5bTRukVaZy06yYPbML
MCWNb5lDUCO5Jv5yP9gJe6ZgE8YDqabsF4NtabY4runjTKHFcu4K/zU9X+yd
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
+N/iwemMs+rmTDzeNZJhdpJhsZEMhQyrBlSZZDjk2OqwsNM/LTpvydRJMwpb
CeX3r70ZOhYi6VBybOLbM2fXDXL72Mc+tnv3bnAaB03ktYtjcw76IIMsx0zA
QyEcL0axFhY6xWPTTIZIk2bPymRnD5ojuU4yFAL0H02mZW/1FZt98uzyGE32
IUMUaFIrzZuZQ2ceKhkWQ4aku8yhTsquZMjIM2a4GM4GRGuRhAAt/BNvEboY
y67lKy9ijbRbOhdkSf9oMmiqe3dBLDP1AX2lcBYfurWyskrXBoNvU9jgklaI
gPG/f33rN3/4U5Gpd3n5ojMmO4eS1yw6re3L9dKviq/iN9nAOCDD5m999YU3
XmaqqKq85NLLQincP+1s/lJVZd/77m558ae/ttLsmaefe94Sn2Nf//NfQsdC
HUqOUwHJ0FRTU9OsWbPY53utrcz5gebSe9giY8Q4PK85OSVBhrKosbVYnrMZ
pD7LAwUZTIRjac4wiRYZugKk6Rm9y+GBYpVJG2YUV6kzkCExzPTtJbBZgQ1l
dTxzfNkKF4Nd3HLFNTeYcxS5kQBpjVAzGiE/S+BEIUyzVdY6eoTStJHhoLYz
7eOgLKbyefNS5/xbXT08k6n0aHDFtGkzk25gh9L+/Qfey+JB8Sk7oFzsJMPD
/ylzz6c2OcnwrOknBXHQCJge+Po3sksnN8k8w+yiyYFcg4tPbS+XFWudNsPl
iz/k7x/91j/eCetmSTqgQ8kxqgAyhMaMGcM+39WvBGVyziH+miFoGESxDVTG
jMmruhSSIcPFWB4irsZANsO01PFYM0YNWQ4bzWM52mta82SKoHkgZxWaB4L9
hBUJfgKKnA9pXhM0zDpcyTBIAtGZ4abx2bTICdcByTjxT4R/yWygSjqeLF95
ESNdg/oYXgafpTQuyowykc2yBJq7LFcUmi6BiPiAv8KNDHwtjTENicmSIX45
lpUd4UFZbWnIkKOjf2TyU9Zg6Nngvn0HJN3ADqUDBw6GiBl/fOPPv/39nwpO
W6/bPrh/n1890fynHz9gJmwZ2r8Ce4sp3EwPPPQNfIOEDO/+1lffJ8OQyvdP
Z5xZd8bsOicZbrrosrafqz9+zvWo37/2RuhY+J4OJcerAshQ3IddAw9yViGt
hYx+Y1oOxWMlr7VQ00aGMkMvk/UCFusfJ+/xM4iOziCSE/9KTpCYhKdGwgfA
mzWkC+pj5Or5y5fhQHwWMuRGKYrRsLEFQIhiJQQiY2ibtaMuQil2cQEX/GtZ
L5UMgySuK8eS+UFMduYAMWcMcuqg+dkkTDN2DYu1ViTBv1xBz7lSCXchee1C
4Sb74TOXxpPGRLT6Sb5kuGvXt/Fc+4BWRUXf6B+ZPJT9ndvTp8EA3RLyrS4J
hYgZb7/97t/fervgNG9e/amTTnz7hV1W+txVq7sf/oGf/ddLxRRupu9857v4
BjWuW/nK33+H9NXvPHh418Ov3HJVWOVb6S9/fevNP/9V0uc+/8XqwcN++fzv
rHTvnQ8O7H8k9pqZJf31b/+IggyTfvo6lwogQ6E75zgyA2iLNwqNhCYEMoMX
VXopbWTIpeUkicENLGda86xsZk4pB2yG5NNI4CLIDXnIjSRJWdjOWZS5HZ+t
2rGFGUiJ+BvR0ngdngw1hUuGOUGrsrIq+kcmD+EHb04y1KmG4SrEAeUiU3V1
9epFZ+z/+b9aadHpE8eOHRtiRU888T18gz500cr/fvv3SDff8zn8i43xnOav
fvWr8t4V9+782m9+9qqVpkycumLFitguuA4lx6wCyJCc5hrzn+sayy9lFm7a
DOXwAmpMDxlqUjLUFC4ZZqPce1IW0qBBQ6N/ZPITYNWnwQMHDkm6gR1NBw4e
fG///sQTeAlP9UdXLtj/0r9a6YTqvus3bAixrp8++2wbGa49lAy/973YThag
u6hh6W/+61UrLVm0DHgcWzN0KDlmFUCG7O1dOQ3lmHFp8LmiosK1Rud2HykZ
lmJSMtSU1zPg69DRq7FxZcTPS96aMGEKerIScpkpdQEOYkMRn3TnnXdWVZR9
78ufsrDwN0/eXdH9A2C5cKvDN2jtZetIhts/96mYyfDqa66pGT3OSYaXrN+M
lgCS42lG0o9ep1O4ZGhu37t3r2s2eV8Hr1HJsBSTkqGmvJ6B9iAwTvfkihQa
DFvf95opd6PZyiOO6KtDyVFo/4EDsUGRV1qxYsWEmlGv/+RBiww3rzirqrI8
9Ora7JNbLyMZfujiVTGTIUC3qk+/7zz8PYsMP/OJm3v37v3Q178eQxt0KDl+
hUiGnFXIUWYuc+xarJJhJ0lKhpryfQaeeuoH2dg1PbO2uCr87dq195gxLmu7
p0Sg2ayp8/8anMn0wJbUNrjUlYYB5erq6gVnTHMOJZ816fi2qXdhV4dv0KLG
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
upUf+ueVaSPD1iwAnDi65sF7Wkw4PHXm7EQQWpUe0THZZ14B0VF/QahUqqSE
d/20aTP79h3YrVtFWdkRffsOCLgGiqoTCi+1I8p7tXz+GpMM62ZNqqioSKQ9
eIFeeu3lJMO0TcfimOCFy1eZZHjRh9ensKmqOCW+ya6/ZUzf5LhbplKpVIeK
4RSSboUq1eKKeCYWNt9waVVFWVLxNEiGF1++AR8SaYC/Ghoaxtec/PT3nhUy
xOeaMePUD6WTS+IZWiEu8S+hUWcYqlQqlSr92rNnT5vvyZa1JhkuqZ+Nd1lS
RmaOJgMO00mGtP98dP1lh/qhLE3wiqlSIolz6FwDReMWqlQqlaok1NjYOHbE
YNP3ZM+3bj16UL8Ep8rTAyW1ZNiaDV8zYfxEkwy/csfXjho4SGeRqfDDwVxk
maGwdaaBSqVSqUpC+/btKy8vX7PoEN+TCxeelkiwGlFNTU3KybClpaVLl67b
r/6UCYezpp+q66GoRHuySroVKpVKpVLlIa57svfJL5nRrWtGHZ3slLna2tqZ
p9We96ElqSXD1mxg8BlTDol6DVDs1aNX2pypVSqVSqVSqYKI0fkaZo03DYaX
rVqQrMGwNUuGJ00cN2/R/DSTYXNzc9+qvl+542smHM6cNguNT7ppKpVKpVKp
VHkLbNOvoseP7r/pkOjWJ41KnG3QgIkzJqecDCFw9eQJU0wyXL9mU9eu3dRs
qFKpVCqVquTkXCj5w4vnpiG4NMiwbsHcug+enXIy3Lp1a9+qvjdc/xldRlml
UqlUKlVJq7m5udvhH7j7kxvNGYaTx41O3GDY2k6GZ82vSzkZcjj+7DPnmWbD
RQsWJz4cr1KpVCqVSpWXampqZp48yjQYrl8xPw0Gw9YsGc6ZexrIMA2Y6q+t
W7cO7D/w09t2mFGvjx0+Qs2GKpVKpVKpSkXAPyu69d4nv3TymBEpITF6oCxc
dk5K2uOjffv2VVdXn3XGXNNsOO+sNsbWqNcqlUqlUqlKQiCuU0YfY0a3/sjS
eSkxGLZmmzf25Jq6BXPTT4at2XH5Ll26XrR6vZDhg/e0HDP8WF3zQqVSqVQq
VfrFxd0uW7VAsHD3vZ8+6YQUDYACCEeNHlUqZNia9eWZMH7iz575pcDhgvpz
dLE8lUqlUqlU6VebRe7Q5fDmTKlJldPExo0bx088uYTIkEuiXHHJlabZcFj1
8ARXGFSpVCqVSqXKKTDM4Ydltqw9zzQYHjukf3oMhq1Zt47ps2aUEBm2Znl7
xtRa02y4+JylqeJtlUqlUqlUKkvV1dVjjqs2XZKXzatN27gnyHDw0UNKiww5
Rr9+7SbTSfnE0WMbGhqSbppKpVKpVCqVi5qamip693r4c1cJFj668/ojynul
zVcC7akaUFVaZNiaNRuOrzkZQPh/S6Ks3ZQevx6VSqVSqVQqEcMyz5pcY66F
h3/TZjBsLVky3Lt3Lzjw9NlnmEuijDnhxNI6C5VKpVKpVJ1BwK2KskNWSV6/
Yn6XwzJNTU1JN81WiZJha9Z3ZmD/I7/QtFPg8F+23tClS9fm5uakm6ZSqVQq
lUr1vmjOapgzSbBwz7duPXHk0elEr9IlQwa+nj51pumKMnXyNGxMumkqlUql
UqlU76uxsXFE9ZFmpJqzZpycWs/Z0iXD1nZXlHMXLBYy/ModX+tb1TdtkzlV
KpVKpVJ1TnEtPDO09fUbL+hT0Tu1rEIynDhjconGAwSHHzP8WHNMecrEaRUV
FenkcJVKpVKVkHYfqqampq25hLdSbRhCOTnram5utlqY9AVT2eL4prkW3p5v
3TrqmCE1NTVJN81TJMOTJo5LLbv6i84+06bMkDHlp7/37Kjjji9FE2iHF26W
1Ynl7PeghoaGULpZ/PbJt5vds2dP0tdMpVKFKa/+x+wrMh1F5knJmQJutYuL
U3j1HFHe64vXXSwGw4Y5k3B30nzxSYZDj60uUTJszUYU79q124XLV4vZ8CMX
rsWWFPr7dDxJD4O7ID0PvgjSHeFnUdK9YzjCDxA5KcCqdrMqVdokvz2tH5VJ
dx62Ksp61J48KulW2JIujrZK6dmSvqulLc55W3TmdMHCGy5bVVVRlnLiIhke
OfSolLfTX+gBThxd8+A9LRLB5sw5Z+E51zd1Mdq7d29JdLNlPcvGjTkl6VbY
0m5WpYpCrvhXXV0d4pcX2MbUMGv81jUflNTymQ27b/+Yf9r77Ztan7s7rLTn
vutz1th87WqzkdL4cOETV9j8UcxbkLYofGkTxzSnjj9BxpH3PvmlKSeNSr+f
bMcgw/cDSM6YLWPKj7V8v+bEk9I8jp8SEf/E4keYwcUMqz8htjHNnDR79ZKL
JN3w8Zs//y/N/qll52P/75svhJXu+exDOWvctOoKs5HS+BFHjwzrmkB4MhUa
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
g2voZGheyRz6bJT2RJBNhvEHkBl/xobO2YXIkeW4o7JXS/5SExlOnnGS4aHm
vd49GRvziLHulvwmqrKWlpbm5uYuvfRS/P3zP//zmZmZhYWFIA1g7/jx4+we
fPHFF8FyoLh33323j+JAfcQ/5EAgRG5ERLBiXvcjuTQYv+6vApI0dDI8ve7N
QZVcHEQ2SXbbji/EfcX0beFMA4tezimRAxaX/KUmMpxIAxM27/3K9m2fmNt6
JW2Coxomv4lqpOXlZbRVs9nM3HvmzBkQ3dGjR8Fs7Pcr7kjsT0A+G302ILTx
axbtBWQNxq/lPiMVaBRkyNd9o+NXEnscyKbB6BOEn8HX9tyPz5yD6p2D8BW7
8HfwyQbJX2oiQ1ndLflNVC8tLi6iufC3OBmg6/jx4+zoG7AjsT/Z+LV1P6I+
BePXsfuMjV+Pwn2m1Wpdeuml/O3t3Lmz3W4PvQipP42CDGUyGv4vYNSa2O2F
u4ZSSvKXmshQVndLfhPVTiXhkIo7EoFe1emss85Dc5+x8ete3WfKcy+wMJjA
+Z73vEfry1REIkNZ3S35S01kKKu7Jb+J6qiFhQU02srKSk9HBR2J4CtAY/UD
2tj4dab7TDx+3dV95sILLwzIcOPGjXv37k19otJZiQxldbfkLzWRoazulvwm
qqkAhzMzM73CIcWORIBTNTsS+1NJ95mDBw82sjQ3N5f6DKSzEhnK6m7JX2oi
Q1ndLflNVF+h0QCHA86RA1ABomrXkdiH0FCLi4s33HCDyLDKEhnK6m7JX2oi
Q1ndLflNVF+trq7OdTSUOXLvvvtu3JH41ltvDZ5zWi0tLTWbTbQSfmYM+7Nh
w4YAC7HloYcemkgerp1EhrK6W/KXWt7iqpJUL4kM+xOYcHZ2dlhwaPIdidDR
o0dPnjxZI3Bqt9utVmt+ft5+XXhUrqysoJU4RdNr48aNl156KbtMcdaKxJhW
eqlJkyGRoSQNKJFh3wLwZEbAHoqASW+99daxY8dsSb7KdiSC+paWltAOQGX8
ovAXn7HFmBm4CITm5EyGEEey973vfbt372YaYCHgEOd46tSppKcy1dJLTZoM
JXypLS4ubpekbnrve9/b6LwrU1ckV3nRm6UyGikcmt55552TJ09aNMKKdCTi
3FutFn5C9jTG19gxh00EGiyelgkSBvoyvmLdXXJqqvq+1Kr/mJXGKb3UpIpr
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
DtHfBIT59ttvnzhxAiiIDIGC+IvP2ILtNkJ9xRVXeDjcsGHDzTffPGDR0jjV
Hxma/ylV0jtDJhuFJX+piQwnzESGUpWVuTxKHhkC2Ab0N+EY8bFjx7j6CQPU
HD9+/NSpU3lrpqyuru7cudMIYe/evYpSWC/1R4anz50q1uuxMtkQLflLbcLI
kIOSjc4UtZ5GgSfAOFbL+YGc51nGaWgCLPlNJPUkcmCz2Qy2BMn68zd55513
4jFiZAI+zFzxpEBlgl1LFVTfZMhFTIJF7mSy8Vvyl9qEkaFfjAPWdV2SSbKV
nzwbnH7eoiETZslvIqlXBRGwYzJkgMEy/ibgxrfeeqvrGLE0PeqbDGWyiljy
l9qEkaFsCi35TST1IYPDdrv9R3/0R7Ozs61Wa3V1FSxHxivwN+EY8dGjR8uP
EUvTI5GhrO6W/KUmMpTV3ZLfRFJ/WlhYwIU7//zzN2zYgA8bN2684IIL/uzP
/gy8F/ib2BjxK6+8QhTEh/7GiKWJl8hQVndL/lITGcrqbslvIqk/tdvt8847
r3GuAIr/8i//kjlGfPToUY0RS10lMpTV3ZK/1ESGsrpb8ptI6k+tVisOHrhh
w4Zms+nHiIGIGiOWyktkKKu7JX+piQxldbfkN5HUn+zhE2jfvn2DRy+UplYi
Q1ndLflLzW6i1qMPxCueyGTVt+Q3kdSfMvsMscV8liWpD9lL7Zv7H/OLpslk
dbHkL7W8f9slqV4SGdZOq6urF154YXAdsUWRpaVBpJeaNBkSGUrSgBIZ1lHL
y8tAQfYc4i8+K760NKD0UpMmQwlfangyH5Kk+ktDkDXV6uoqrh2u4NLSknoL
pcGll5o0GdJLTZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZKkadP/D9Us6mQ=
    "], {{0, 573.}, {646.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{449.25, Automatic},
  ImageSizeRaw->{646.5, 573.},
  PlotRange->{{0, 646.5}, {0, 573.}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"df0f0ebb-9c9c-7247-ae49-936585198b97"],

Cell["\<\
Cerezo, M., Arrasmith, A., Babbush, R. et al. Variational quantum algorithms. \
Nat Rev Phys 3, 625\[Dash]644 (2021)\
\>", "Text",
 TextAlignment->Right,
 FontSize->9,ExpressionUUID->"d5113e8b-096b-df42-9cbb-97f38aa0dc53"],

Cell["\<\
While they hold promise for achieving near-term quantum advantage, \
significant challenges remain, including issues related to trainability, \
accuracy, and efficiency. Addressing these challenges is crucial for the \
continued advancement of VQAs and their practical implementation in solving \
real-world problems.\
\>", "Text",
 CellChangeTimes->{
  3.9548463926185417`*^9},ExpressionUUID->"563c93a0-73ac-f845-af8f-\
a0d91a612ba5"],

Cell["\<\
In simple terms, Variational Quantum Algorithms (VQAs) are one of the most \
popular approaches for running quantum algorithms on today\[CloseCurlyQuote]s \
early-stage quantum computers. You can think of VQAs like \
\[OpenCurlyDoubleQuote]putting the carriage before the horses\
\[CloseCurlyDoubleQuote], we know what problem we want to solve, but we don\
\[CloseCurlyQuote]t yet know the exact quantum circuit to do it. Instead of \
designing the circuit manually, VQAs use classical optimization techniques to \
\[OpenCurlyDoubleQuote]learn\[CloseCurlyDoubleQuote] the best circuit for the \
task.\
\>", "Text",
 CellChangeTimes->{{3.9548464098586903`*^9, 
  3.9548464241186295`*^9}},ExpressionUUID->"48cc1b2c-57c0-b348-8ae9-\
e247c30af415"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pipeline", "Subsection",
 CellChangeTimes->{{3.9546040198902206`*^9, 
  3.954604021658373*^9}},ExpressionUUID->"e5683458-d511-1842-bc74-\
1cc4b92960f3"],

Cell["\<\
The core components of this algorithms include a parameterized quantum \
circuit, known as the ansatz, which is used to represent possible solutions. \
This ansatz is evaluated through a cost function that encodes the problem we \
are trying to solve. Finally, a training procedure, primarily driven by a \
classical optimizer, adjusts the parameters of the ansatz to improve the \
solution iteratively.\
\>", "Text",
 CellChangeTimes->{{3.9548465521017513`*^9, 
  3.954846557869488*^9}},ExpressionUUID->"1be36ef1-0d34-a644-a33e-\
ae1c8c89cb30"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"v1", "=", "\"\<Circuit Ansatz\>\""}], ";", 
  RowBox[{"v2", "=", "\"\<Problem-Specific\\nCost Function\>\""}], ";", 
  RowBox[{"v3", "=", "\"\<Training Procedure\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edges", "=", 
    RowBox[{"DirectedEdge", "@@@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"v1", "->", "v2"}], ",", 
       RowBox[{"v2", "->", "v3"}], ",", 
       RowBox[{"v3", "->", "v1"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"GraphPlot", "[", 
  RowBox[{"edges", ",", 
   RowBox[{"PlotTheme", "->", "\"\<VibrantColor\>\""}], " ", ",", 
   RowBox[{"VertexSize", "->", "Large"}], ",", 
   RowBox[{"VertexLabels", "->", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", "2"], ",", 
        FractionBox["1", "2"]}], "}"}]}], "]"}]}], ",", 
   RowBox[{"VertexLabelStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"White", ",", "Italic", ",", "15"}], "]"}]}], ",", 
   RowBox[{"VertexCoordinates", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"v1", "->", 
       RowBox[{"{", 
        RowBox[{"0.125", ",", "0.1"}], "}"}]}], ",", 
      RowBox[{"v2", "->", 
       RowBox[{"{", 
        RowBox[{".1", ",", "0.05"}], "}"}]}], ",", 
      RowBox[{"v3", "->", 
       RowBox[{"{", 
        RowBox[{".15", ",", ".05"}], "}"}]}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<VQA Components\>\""}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"f3f92e19-82f3-854a-9606-93ba22d84bde"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox[{
    {RGBColor[0.192157, 0.388235, 0.807843], Arrowheads[Medium], 
     ArrowBox[{{
       DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
        "VertexID$2", Automatic, Center]}, {
       DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
        "VertexID$3", Automatic, Center]}, {
       DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
        "VertexID$1", Automatic, Center]}}]}, 
    {RGBColor[0.790588, 0.201176, 0.], EdgeForm[RGBColor[
     0.790588, 0.201176, 0.]], 
     TagBox[{
       TagBox[DiskBox[{0.125, 0.1}, 0.009999999999999998],
        "DynamicName",
        BoxID -> "VertexID$1"], InsetBox[
        StyleBox["\<\"Circuit Ansatz\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[1],
         FrontFaceColor->GrayLevel[1],
         BackFaceColor->GrayLevel[1],
         GraphicsColor->GrayLevel[1],
         FontSize->15,
         FontSlant->Italic,
         FontColor->GrayLevel[1]], Dynamic[
        DynamicLocation[
          "VertexID$1", Automatic, {Left, Bottom}] + (
           DynamicLocation["VertexID$1", Automatic, {Right, Top}] - 
           DynamicLocation["VertexID$1", Automatic, {Left, Bottom}]) {
           Rational[1, 2], Rational[1, 2]}],
        BaseStyle->"Graphics"]},
      "DynamicName",
      BoxID -> "VertexLabelID$1"], 
     TagBox[{
       TagBox[DiskBox[{0.1, 0.05}, 0.009999999999999998],
        "DynamicName",
        BoxID -> "VertexID$2"], InsetBox[
        StyleBox["\<\"Problem-Specific\\nCost Function\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[1],
         FrontFaceColor->GrayLevel[1],
         BackFaceColor->GrayLevel[1],
         GraphicsColor->GrayLevel[1],
         FontSize->15,
         FontSlant->Italic,
         FontColor->GrayLevel[1]], Dynamic[
        DynamicLocation[
          "VertexID$2", Automatic, {Left, Bottom}] + (
           DynamicLocation["VertexID$2", Automatic, {Right, Top}] - 
           DynamicLocation["VertexID$2", Automatic, {Left, Bottom}]) {
           Rational[1, 2], Rational[1, 2]}],
        BaseStyle->"Graphics"]},
      "DynamicName",
      BoxID -> "VertexLabelID$2"], 
     TagBox[{
       TagBox[DiskBox[{0.15, 0.05}, 0.009999999999999998],
        "DynamicName",
        BoxID -> "VertexID$3"], InsetBox[
        StyleBox["\<\"Training Procedure\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[1],
         FrontFaceColor->GrayLevel[1],
         BackFaceColor->GrayLevel[1],
         GraphicsColor->GrayLevel[1],
         FontSize->15,
         FontSlant->Italic,
         FontColor->GrayLevel[1]], Dynamic[
        DynamicLocation[
          "VertexID$3", Automatic, {Left, Bottom}] + (
           DynamicLocation["VertexID$3", Automatic, {Right, Top}] - 
           DynamicLocation["VertexID$3", Automatic, {Left, Bottom}]) {
           Rational[1, 2], Rational[1, 2]}],
        BaseStyle->"Graphics"]},
      "DynamicName",
      BoxID -> "VertexLabelID$3"]}}],
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large,
  PlotLabel->FormBox["\"VQA Components\"", TraditionalForm]]], "Output",
 CellChangeTimes->{3.954933093470701*^9},
 TextAlignment->Center,
 CellLabel->"Out[15]=",ExpressionUUID->"e2a33b42-1d63-bb41-bf00-5eb3054f4711"]
}, {2}]],

Cell["\<\
This process is best illustrated in the Hybrid Loop shown in the next image. \
The quantum computer runs the ansatz, the results are evaluated through the \
cost function, and the classical optimizer processes this information to \
update the parameters for the next iteration.\
\>", "Text",
 CellChangeTimes->{{3.9548465846390934`*^9, 
  3.9548465876588573`*^9}},ExpressionUUID->"6ba4dcec-b6a3-114f-b086-\
ba9ebc8e9a8c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQ90VNW5948KifXyTxIyeANGCFah/A/yR4REuUAF22jiBUEQQcDwigYU
GivFSKoRlRDBIFKQUOUuYGHhXaLVF65F5S5eamtZulhF/dVFlT8p7b0v9oqQ
9q6u/J6Zxzzs7PNnzsycyT4z+X74rqzhzDn77HNmzpy9v+fZz+49t7xkwaXt
2rV75HL6UzKn4uaHH57z49Ku9J9/feiRhfc/NH/erQ8tnX///IdHzb2MFo6k
dcdktGsXft0EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAgLRgxMSnIAiKQ6avXQAAAAAAAAAAIG0x3uuHoBSV6Ws3
CuXl5e1aor5bWVmpvlVYWKi+S/9V3z1w4IC8Ra+9F0v/Vd/VNnQp1r0+7sXi
MHGYOEwcJg7T4GFqG3o/TK0+MR2m+lZMh6nWB4eJw0yzwwQAgDTAeK8fglJU
pq/dKHDzplJBfZdaO+pb9fX16rv0X/Xd48ePy1v0urIlLsVqbSptQ5di3evj
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
w6tc2uo8NZLTu+yA8aTV9JofKNs+sHYfVGiLJDaRh+8VFRWhnCzMA9gKcu/L
/6W6WvyKv27fzj7JyRkzaLm4TH8/flyLX1INE1mHfZVz77wjXkdT83hDNWUW
mw9NERNDds0Lv2wZ96WOH/xLcxdYW64GgNG+6K8EcanV4KkJmyIhXuo3U1Z2
GiApJ0EL+xGLpskhu5RVtJpaJSqQKk/HQodMogLZwaN1NG9QzD06BDl2PhBa
rq0scUqaI6dWWN1EnDftxKpp+Wlbzh8lbpW2Ux6vJ+vztvRCzp62laxMa9I6
VFU+h+o3SkXbo3osUTOwwbBqZTUcfXTKxCH5+b3VWV/z8vK0wCotg7rks9IS
Xnmfzo/h+QrVnFRetuJ4MNpKduSSLl6tdpNrYisYVgAAEGSM9/qToeJZdWIW
NTkMSaN1xIB679CnmpGy7Ildsjn7MFyOupATj6sGjrojMaaaWnpNYkwRaoQS
J5tqahkSxjFLvFwil0YoE/9pO9Um+FPhQYJR/SL2waxlqkvUQ1CxxlzJmaFi
qQIxJX4PvpxOdUzk5uaOGTOGmnwxzRztBRhWiWBrWFErt/+wW72kqxKoVU/t
anVJ1DTpnBhEXcL9AknGXltbW1FRwU1xHjloLU36Dh7r2WQ3dRR9LUOh7Hn3
3Ix0Va0jL0bKX7dvF8dGpfHoUadYIJaaj13sFHaHzr3zjmqAqGvSvthnkIXs
SIjZoq6pbcuIrSTp3LkQdcihZhCJt8PFUpn8X2vhXI4ajiWV4Ugh7VxxOJAX
z4odOdXGUaHltomq+FjE36O/JK6M6pVZK9wUcQXV4C6pMAeGWU+4BIzJqdNM
JKqkrXup7YVWkyArOvNsealVVfeoHgV9Z7TaUiVlW9qL9Ri1zx2GVRB0+K2y
QQP7FhWNE6OJbjHqhLCykMeVa1G7WuYosY+aPMDeF6dk5xuWd9tKW2LNu67u
Qm6RnNiq65XdtcRWMKwAACDIGO/1+ysJB7KiuiW2xo7qCI1oGaP12edn2IqR
DXniPDUtOdNw5ita01o+x1NZl6/ZsJ92JMYOw5FL1mNhR0jNK6UWPiJiZInx
ZYt2jFaxs8RlSvJ2q+NH1RAnTUq2RnOp1pbVFUx1uZxn73Tq1KldM9Rai28A
ly0wrBLBaliNmnC/l3RVnF2W4Hb40qVLq6qqeNgCfSL8QtuEY6V4K16NugYy
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
gozxXn8KaXxJDadM19wqFi3nU6rmYxfFZFiNiEw+qJpgTXY+GJVJ+1KjsHjN
mAwrPiheB4MBY1Kyr01gEDGswsFIlpn12GiKdZCgFl7V7FPVXswldWpdpMyq
cEu+2VNSV/jbn+rjfYgcLtO+Ap7TfbBhlaK9aSiFNHXBj2BYpZzmPLjc3UH6
xS/fjTp53+N1r91TvvLWqfOGj51EuvO+RxYur6WF9NYVHTs/VLWBV4s1wqr/
0NEkKvCFX/za+IkKgtiwSt4ldtE+CmdcdFntYlJH2wTs6s2XynQp6mLG9bie
5sCwAgCAIGO8159C4kgk2wCqES1Tr1sDomI1rORdNdRqx+4PtN3Ru2oqKl4t
JsNKhh9iMGCsSu6VmTBHjhxpm22V48eP19bW0t9EClEMK635rWlLJOZqdSTs
yjURuhJeFTaOLsY4bblw8jmHwnkawXVKi32tWoh7C/zCiepI8qvnbQy35g5C
TJ4bDKv00Mv7Prll4pQbbxrnXSNvHLt62797LL++vr4wRm6dOk8tAYaV8S9J
HLrbNQs6Z7Iqf3yNusmqn+9fuLz2zvse6T90dOHkqfQ1uKd85eN1r9FXVCuc
Vsv8zhXy3+qX39iwdaf77u6aVy7r8y5e+MWv2QQzfq6MK9mGlRo95X6XUWOY
tXCsFuPW3RMttkhgFXPG9fPpaFhRC5B+Wumv6YoAAIAPGO/1p5A4nMl9BT6r
qmXEismwUj2x4ll1akorXjhz4Wbb0qx7dzeseMbDJrvBgE7THULa2Q4sbXaW
QOovt4tQUFBAr+ObJUczrM5H/J9I+3mLrflz0b9qeIlWazz1/IWTq9SGujrN
H7Wu1Syy1EqPzAOo20pcSMsH0C3a8EqQVVV4d6fWROypl5wcqhZWVVzzKKWK
YUU9U/dQCuoRt9lYi8frXisvL4/pctizZ8/s/+U1d1llZWWsVrnmIcCwMv4l
8SL61DIyL5f/lj38E3cHiTTtvm9NpAl33NOpaxaVQN9GL1di/6GjQz2vkf9u
fPPjma7+2C9++e5DKy6aY4+s2pLdo+eqn+/n11QaR23FJ9r7c6/+yvj5T0TJ
NqzOK2msouVUr2oZRvXtylqidffnQerK8SV4TD/DCgAA0gnjvf5UEUc0WdOt
qxL3idAMn5gMK/qvZh+JZ8WxW7ZzC9ImvNDWsLJ6aOpgQGtqd3drDhoBwyrA
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
BzjEnNI24SZ9MpKuU3f1R8/FNmeZTVc03Q2rHeHRRq9I1z4RtY5hRR2l8vJy
rRwt43ptbS3HWcGwYrWyYfVc3RY1VfgVHTvPXLQiaskcCmWbwCpWFU6eShIf
SU1mRcs5zTt95384a5Ev0w1QtdmL4+kCrStwBWgdOhX/Om+pLI+adH3pilUy
8rFv/6H3lK/kZPW++GzJUGsaVmr88IWTq91XaGz42bczjzRsdB8ar5patsXG
pPQzrAAAIJ0w3uuHoBSV6Ws3Cm3csOKmoLtPlZ+fX19fb/sIMnHDKtbZi9T1
m/PNepgHvDlHlscZwBNs0ifDsHKJdvCutmBYuUxwFms5rWBYlZeXW68sa8Z1
WplWg2HF8tGwWlH7iu38gKoWLFmuRlj17T/0mmu/F7XkvL79w+mn/DCs7ilf
OXhkEf0VY4fzR0l41Y6Ic+VLAiv+5kv2KjHERGwx0V9aJyPzO2qY2cr1u1zG
Vx787e+n3VeuHlRe82m8deo898GVptR6htWJJ8N+VMPFIX6NDS8p+pl614ui
hs3qtsqwwfpwFkefhgTCsAIAgABivNcPQSkq09duFNq4YVVQUODkVmVlZZWV
lakpdKwkbljFNHvRhZbTeXvPTHXh1BqPKW0TFwwrs0otw8r2+nrqKf1n8+zZ
s7QmDCtWK+ewmle+XN1k5qIV1w4Y7j4NJVtV9BXyxUSicgaNGLdyw/9Wd7pw
eW3etd9jN4n+sufjyxXEkwDKgag7ZbeKnSU6tE5dumnbTruv/OBvf289h5+d
+M9ZC5bU7f61VpT8mNCLqKMsbbXutcPPbHnTKWV9gkqSYRUJjnq28dTzjadf
1Kb8ax01NvwsvOtTz184uTqmuUhgWAEAQJAx3uuHoBSV6Ws3Cm3ZsNqzZ49t
iqrS0lKPjcNEDavYZi9S881uVV97GOjnMaWtD4JhZVapZVjZlvPMM8/YLodh
xfJ3lsA77l7gMpDt7fd+c/+yJ9VNVv18f/cePemzcJlE757ylSRrgvT49PK+
T0b/S/Ejq7ao3tELv/h1qOc1HHNFO9LeTVCqzyZBVrQLcatoyciiKfn9hmgb
bnzz4+Lp8zds3anFVs1csGTl+l3ayoNGjFPrzCMQvafpW17zyu13L1i6YhXt
7olnXqDP8aEVa/w6Ayy/DKsLJ6rD9lSLeKegKRLTFbaw3PwrGFYAABBkjPf6
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
C/JLwdCrysql8MMEhdASG2Hicb/QPUyF+0LPMZ7OckaYq2CNNokCtSWsvvxb
+eKcR19c/fiZYy+oHNb3/UsVa5+MjY2SdVVFicu33norKiqqvLy83w7pKCmL
np6e2NiYtaan3fZAJsKKQCAQCAQCwcfwi4cVzC3Vj0EqxtWSg4uwuvhFZc6T
aY88ksg3GN1OYF5tNBrhKgnvjjFLIB6P83Z0u4KJPWxLO46vlWdlTvalsBUR
VsFumhBWPpDhco6wUpI0V3d/UnKa2q9Yi7PuWI7PcigL7w3C6vDp70wVO4vW
Vm6pqS/f9LKxaO3Gmmalg+ctzNcnJlsH5ZUE7yDG7Wiou/7cms0L8kuhWPiL
FBmrdFdHT9yYCZidUMm21h2CTnV0HTvz6VcnP/yksc2yvNTcdkox8Bbu3vXV
LdAR9G6CvzynhJGJ8Jg4ZGXVDbuD/ZL9lCnA89b0/nn4jlTYKuhmdVO3Jpdd
W8LqzLEXXlz9eN/3L1VXZRc/N1V2VHrzVZtclSz7hK9yTHbwIyMMwkVFRTDY
yfohS2HzQI6Neu2VZe6NbkRYEQgEAoFAIPgSMDOE6ZAvazQYDA5rhKmpQyd/
KYKIsMKER/wbZCSp+MbzOqgYFSj1OsOz4EiczMO3Kb1u9tfKUVCjb4StiLAK
dgsxwurGlX2uaEztuXm1/lZfh9wpb8FHN6/uv3XtDcFsp1xtkhW8gv1K+f7k
3aucEL/SnLBqsJzOW1H2+dc/CLyHsXDt4dPfSY9PSp0+a/4S6yB1I3xa/+5H
GEmnoe76tDm5SH/hX6iUOVnBnozZOUpZ9phBR6CbO+oP17R0Nx49p14dFM4S
DkJ3hg0fwRNHsGdBfmmUQhCi8wanV+xuk6X14CN0vpI9sWCNWfiynIxzdNU0
Dwk8c+yFOY9PgL8Xv6jEPCP8R6mPJWRnz5UOYTA0tLe3s5cywjiYlpa2bt06
3JYOo7KAKpYtWxY/aZyrHsihR1iR6DqBQCAQCASCgM7OTph9qU+QYMIZRCGB
9913D0y8nbTnjNMjIyNQrgoL4V8NS5k69lpZKd6BD4hAtyupsBX8axe2inyt
xnjD7tz14urHveR2RYRVsFuoEVY2XfR2OWqo41bfITRZrskr1vcOV+kROScu
eXbLe4TV4dPfLS0uk5VF+vzrH2SDy4brHkadcCWpcCRhNNRdx+g8RoVZ7arv
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
+BS+bv41N5vAS7W2BrjYRn5/e3t7bGzUzqpF6oTVC5v2+X21RRbalvnEYvcI
KxX3Kp6eEjyjHEbw3bp+UOKppay47oHu+tJFyWFBS1g1vX9+S029Soyescij
bHrlO5trD/8f3HaVsEL1KjJmSFj1ff+S7H0I+9MNkzIy0vmIeHxHo5IzhX8t
wnteuQ0YoS5fvgx/4+Pjv/32W7YfRSB77OBHMX7gY+AD3vmdZrM5IjImJ78W
xnew0COs4DpAxzXUwycQCAQCgUAIduh0Oph9IRNiMBjg33kcYA98CjNYN2ZQ
fies0FZs+suE+JT09Ay+CzAz54MmpGERss5XApRCGOByQcl1dXW8fxRM3eFi
ZmZmSq8kT3nJqmnJis3C8fHxExflZqhnCWzaszAsPCy/bJvfV1tkoW24mr7w
9/WuEj6/9b2jTlihaNWt620ScmmPMgkmClXdvFovliBb0bVmV9uPnPDW/V1+
/wrcM1PFzjOffiVLH5VvqnHevcqhuRoSSCbYfWHh8Iip342nukyxMRF8RLws
+SMdX5iHsOzrEucRHR09bty4t99+mx+qMKxeGN1k04gMDEbQCw5X7e3tUdEx
c3LXrN/7bza4hx5hdZ6yBBIIBAKBQCBwgAmhMDvS6XQCowLTM5X3syoIEMIK
7VlTc0RkTElJiSBaxStBCcJTA8ozaqUQBuHTy5cv40IA32KjJjnTpxoYSnkJ
OQEZcK3BU1jQzuzsuamPJXz5t3KHq+mzx0vCwsOefLbI76ststC2UeMmOVxN
O8MsKQhMHbJHBQr+UZabV/dLytwjaK3bfbQOCkGFymZR4cFUCKvg5YS7zv1c
sMbc0XVM8K1aWVZV3dStYUWuiq6T8WY5++N9YeExUQ86c0/uqMqNjYkSZBWl
4XU8BDYJxyzeWctJPPLII2wb3/vwQyHLVCLryoVcmRAIDzunTk03TM9ZvfMT
YVgnwopAIBAIBAIhtIHzQ37PLjv4PTCrhBmUGxPXgCKs0GY+tToqOqa9vV1o
J//2WeCUYILN+zUNKIQwSMHIKLh00vAHlZyADKisziuuI6kVGxPZ2Vrg5Gq6
7/uXwsPv0z0c5fcFF1kIW0P3P2A1Pc0wRiP3qiNyAlP7Ben1QS7rrVvXDty8
+vrNa822MEBpgXZfLHmZrL63PHeyuvD39fCIxU+e6vdvwRPb8HJT0drKTS+/
1thmKS6rWl5q1tC3ihkUqxIVuKuhtcFy2u+XIjDtxVcOhIWFlxSmO//LX7B0
ZmxstOCXK2WEhGGLkVpCoLqTwBkFL4rFRx0K3lwMeLyQ3xB2LslbOmrMxOfX
vS07oBNhRSAQCAQCgRDagAmhTqeT7hHeb8IMCmaYrhYegIQVClsZpudMnBgv
TIzZbFl2is5y9sExAn+lDhbuh/wVVirIVfH8GEJ2WYFyVRVrn3SVE3hqTjys
dII3ZIks8G1xUXlYeNiuLa7dnPIE1PU22f23eaehylTO2M2r9YoFyrpdua5k
lTAx6r6w8LZT//L7F+GhHT79XePRc94rv+n98+WbamTZqs+//oHcq1Tsselz
4RF75408l+7Mi19Upk6ZKAhbSV+FCOApJqnjsTpgiERXYThRGN1k04gMSN4Z
DdiH2u3bt0dExuQ+t1NpKCfCikAgEAgEAsH3gDmbe/F3bkOn08H0EiZIbEIL
U0qYc/LpezzJEugSveMhnCGs0OCASYlT5s7N5ifPMOmNiorKysqSzqhZfATG
MjjfKbyAjO7jYwyFnIAI3CkEbjC5KiW5XXVDGatR4yZZKDU8mRcM3avcELCS
9Xqy5QRU+AiF06URfyrxffaYwT2yflyYE1C2NFfTBZYUpsMj9tj0uX7/LgLf
9nacyFtRJvhZdXQde7ZwLZNbJxNs6/4ueMSiooa7NwRIha0G5ILNhZFLELZy
KOqIQEpKGN2UdLGEqHy2Myo6ZvbTxbxc1V1CWJHoOoFAIBAIhACH77MEwoyU
pQLE6Whvby/+i4rrCCFy0BkgYeVL/s15wgotJ782IjIG5+TwF7svq/g6MHQC
D5N8ZwIlpC+UkRWUDbWQlcZ1Sa5KxTIMY2G9s7io3O8rL7LQs/jJU8PCwirL
Zrl0T8omB8SEgEqf/mZXXx/8VDXfH+pW2dWoZCmpW31v3W6JFk5Wfd+/FBU1
HB4xSsfpjLWdupC/2ryirGp3Q2v5ppcLSys3vNzk91YFrFnO/qh7OCosPKxp
z0JPRgGpsJVsOg8egrCVNKOuFGx0Y8qQKGMlHCbkPWE709Mz9JNSpHJVdwlh
RSAQCAQCgRDg8P1cCMPckJXiBVd/NxRu8E6BT1hhhOCc3DXj9ZOEeASltEps
Ao9vkJVeT+MLZbYKEMIxWE5ABpZ83BO5KhVDmR1YUO86eMrv6y+yULL8sm1w
X02aGOuq74esD9XNq/V3DpBL6mdTX799wB6baJWtEIvANd26fpCVc/NKnQrx
pVKRnJy7mh0/UhgWHqZ7OCoEAgN9ZgdOfEleVQ4t84nF8Ig9OSfB84FAVtgK
xjLkjpSYKME/CsYpJRUsntESmCt+eIWdMN7x1cHOZcuWPRwRoyRXRYQVgUAg
EAgEQiDAL3MhmCvCPLOlpYWfWCKF4jZbNRAkhBXa6p2fPJI8Y+rUdEHYSimt
EpvAY4gfz0dJQyHgANT0gIMxuzdfFMZECLN6t+WqVIwCA8k0NxYMePZ4iUt3
oyyPxJFRtykpWTcqmXi9K/vsQlX10gR/CqGFB4TTnWiMY6tcNzssLJwCA8k0
tBdfOWALBowc8eP/rdRqLJAVtoKhymAwqHgOS7XT+WELTudHN9k0IgOD8wrh
Rc/27dsjo2KyF290adQmwopAIBAIBALB9/AXYeWNYoOIsEJ7ft3bo8ZMXJK3
VNCcx2m89Crh6+Nvv/0WQwVRfYIPhWDMlSwlKBsTcVuuKmeqe1ol6vbknARY
UI8aN4n8rMg8txc27cNIpd3blzLXplvX3rD5Jtl1qFRMwampXjjs5tXXZZWp
pMSUPC12rdnJ051sj6R59dDCW9cOoKPXf/90MHFSHDxi8ZOnNnT/w+9fEFlQ
m+Xsj4uLypEQdlVr3RmTFbZSiohHCMJWbIzjVdll04jgfumrGdgZExM7bXae
Q7kqIqwIBAKBQCAQAgG+F13H2ZcbSQAdIugIK7Tc53ZGRMbwQh8Dg2mVpH3B
6AbY/9lnn8GGIFGFM3N8MY2yV7zcujSFt02uasokD+WqVKzv+5dsGQPDw1DP
ilytyNyztlP/emz6XPtSOqxq/TOKKlJ9b93qO3TrepudxXrdxv8gkeWKR5NT
LlLy5rSDlpKg1mCT0H0LemGz6wdl4hAH7etzezOmTgoLC4eLk1+2ze/fFFmQ
WkP3P+InT0W2ytXkmy6ZrLCVUkQ8G6p4YSsYyz7//PMBjr8SyC4Wcii4Iqen
Z0yIT1mx6S9uD9ahR1hRlkACgUAgEAgEHkxf3Q1NdYcIUsKq0i5sNfvp4ujo
WP41sYo+LVxG5iXFS1QJ75oxVbfBYBgzZowgmWWXq4rQRK7KoTXtWRgZOeI+
u6vVi68cINqKzHlrO/Wv/LJtNscqm27VmI//vEOJrVK1TjkO6s3BsL6hVJKS
CJUj9ydHEliDNhhOeKvvLbf6ImO7ty8Nt9PC8ZOnbt3f5fdvjSyIDB8xuHnC
wsKmpupdzbzphikJW0mVpniwuHhkqNDPSggnZNyXMJKWlJRERMY8a2r2ZJgm
wopAIBAIBALhboBOp3M4QYJZqBszqOAlrNBW7/xEPyklPT1DeC8sfVmM4EU8
BCUrBLppway+sLCQfXRbrqp0ng+oKmY//t9KW3igbUlkcwV5bPrcxUXlsEoi
I1OyJ58tQpePsEHHqv/+6aBWDI+89b1jc9DqOwQbcgccue3yJGtybJWdsDp8
u0yvtvy/uj7+8w5beKD9EdM9HAWPmN+/QbIAN3jERo2bhFSVtx2rpCYrbMXi
1qXjHaKlpSUpKUmaRmRAwS0Zxruo6JiZT632fIAmwopAIBAIBALhboDZbIYJ
krqMVU9PT6hmCXRoz697++GIGEHoA+U4mJQH23Pp0iXZ1EhMvoO9gIb5v1fl
qpyxd97IW7ooOTz83vBw5CHCCAR52G8PuE9iokasXjHXXcequ8v++6eDLa8W
L12ccef5okeMoITBRyxhYlRl2SwNJdZdMllhK1n5KRXI6rfDzokT4w3Tc9yT
qyLCikCAqThMO+EOxBfN8FTCNuxR4pMJBAKBQAgZtLS0wPRSGunGYDQag4uw
8kQWQ9ayF2+MjIqpq6sTOsgnPII5g9EOQZlKVr7D23JVLtnZ4yVgu7Y8SUYm
a017FsIdwqKTbl6ps4uNv6Gi5nTXmk2567b4/O2shX3fv0SPGJm6vfNGHv+I
+dekwlYDnMeUCm0lm1oXds6dmz0pcYqGL5KIsCLcVUASGBU8kA3GF6MslzfL
4EkgEAgEgrfh4wQ0TMPKIYKIsAp/YMTY+Bma2+iJGeMnJEZHR/OTSRRdlxX6
kP0I5Tt8JldFRuYLs8tADQqSa6YEFSxmizG8duC2qrzfvwsyMi1MVthKRY8d
P4KltFSeUTdyZNy4JG8MyiMeHhNihBVcMZgweClxMyFIAc8UzsN1Op30zTI8
d+hwBX/J1YpAIBAIPoDvMyazFzQhQ1iFhd1z5tgLXrL2hmcffUSfnp7Gv8xC
oQ/2hovN6pnzFaKurs73clVkZL43uwtW/c1rzXfS6snrUAWT3U56eO2A3Xtq
P3OgIiMLVZMVtpJmuZV1voKdEyeMz8/LPGEp8tJwbCpICw+/N5QIKwJBAM9W
KflQ9fT0sGM856zgKfZGGiaHwAwOvq+XQCAQCK7C93MhpJXQzXieHIKOsALz
9jS+s7UgNiaipKSEn5/DnAGFraRTdxiIY2Nj/ChXRUYWEGZLxtcxhAi6rawe
CH5ZFhk99r4jt6633vjPff6/dGRkfjIlYSs2SRDCkeCjjPSpszInX/zCu0pc
u7Y8eT8RVoTQBTxW6D0FkLo18jCZTHgYzD899NDDojwpwQ1gT4mwIhAIhKCA
7+dCMExAjerB79KEd84ghAkrtIrSebGxUe3t7awBME+Ij4/nLyZsZ2SkB45c
FRmZ/+3KPnsWP5v4lYyTkj3AEE2a/m9QMsty63o78kvydr3jt77Dg6TTIaEQ
DN9DkzbAXouNSYPD/H+tyMgCw2SFrQoKCnhHYhjvli3Ni5845lSXyQdNIsKK
ENrgaSj1I3Em7/b7ZQbm0OV2Ce4BFbqIsCIQCISggF/mQjAmqnwK4+Dhw4eD
i7DymVLu9g1zM6Y+MnHiBBYcwVypUa4qImJkwZJ0vyv6kpEFmr1W/cz7h0yu
nmV5s+gfp6rgXGcOPrj/ua8/rnGjYSe71vr9+pCRBZrBePf4jEejo6OYkA6M
72zs2759e2TEw88+k+az9jw1Jz7ECCvSsCIw8ByU2Wx2eDwLiNDpdO7VyNgq
lTucDznstcO9uhhQ7tVzqo1AIBAIPgP8+AdagpiWlhb3fIz9SFj52MLuuycu
Lm727NmYE3DALlcVERHx8EidX9pDRkZGRkbmDQsPuycyMmLq1KkwXUHCqqen
JzIycuzYMeF+aVIIEVaUJZDAwNNH6vGACKbvgUET8HiycEJ+Kg5Tell9Wr46
HvgpPOMmkwkKxCmuLZnCYOGwwfNpjH0SiC++MfxNzrIf8vCLiBaBQCAQghco
56juhSUL3xNWM2bM8OM0fsSI4TAix8XFRUdHgfln6k5GRkZGRuZlGzlyxPDh
wydPnpyQkBAZGREedo/fGnP//d3d3T6bZhBhRfANjEajlN5RAZNe54+X1aHF
9J3C/kuXLuHtx0pACMQXqt2qU0x8/nG+hVAFS/PEWggbjEODhQar1O3rRiAQ
CISQRGdnp+wAxAMGKVeL9T1hdfny5b1+RXV19axZs/74xz/6txkEAoFAIHgb
OTk5K1as8G8bWltb/+d//sdn0wwirAi+AT8tdybGgaebpP5UwlScHSzslyWa
Bob6ZRmNRgwK5qP5fjfUDYz5TSl1ir/JlRpDIBAIBAKC9yJWgRseVjgG0QBE
IBAIBAIhBECEFcE34AkrZ47nCSs2Y1figlwlrJjTlFT+nXmC8R+xxit1iggr
AoFACF74XsMKfX0xObXBYMAQdQZ8S9LZ2emGhhURVgQCgUAgEEIGXiWsYAYI
5VM8FGEgwAgr9pFUXYoXh2c5somwIhAIhBCGj7ME9vf3Q3X87Ein07ERhzXJ
vUGECCsCgUAgEAghA7+kcibchWAyU24QVmzi7QPCaoALAJRqZwlHEmFFIBAI
IQAfz4VgmBBGn1128HswdN0Nvy8irAgEAoFAIIQMiLAi+Aa8bJTwHtnh8bCN
O31DWDEaCrWtBoiwIhAIhJCGj+dCMAjqdDphjzA44lDCZ611EkRYEQgEAoFA
CBkQYUXwDXiPKV7PXAm8/jmbw/uGsGJauORhRSAQCHcDfD8X0ul0ZrOZTyML
o57BYMB/WRIQN7IEEmFFIBAIBAIhZECEFcE3gOk3asz+zrm0R+xgXvzcxx5W
KnuE/URYEQgEQvDCbDbLDgfeA58lEF/i9Pb24sDHwtKVBil1EGFFIBAIBAIh
ZECi6wSfgZ+fq2c+UnLH8iVhxcdrEGFFIBAIBA0BgyAjpljYOx8LL3zkPIiw
IhAIBAKBEDLwKmGFsyYfp4omBCxgfq7X63ESrqLLwR8mEEqMCxJO7+npkd3P
ypHWokRYsSyB/DKBEVMC+6pOWBmNRqU+EggEAuEuBwx2nXbwb3Bg6MGRS/f/
s/cm0FFdV743IFXVrbkkBiftl9DO4NXOc6JOv17xt9zupJ+/1+10Jw6OO45j
OY4cO/JsBB7AIDA2ZjKTwMYDWCDbDGIWiMkWiFkgBFKBEPNQqDSBhChLSAIE
4n4b7efzHe5Ut0qquqXS/q+9tKpunXvuPufeunXPT/vs43bTKoFM/iFDyMh6
sxn9FSSRSCTDRMCKFE2xKQ991DNZsexVKSkpkkAsxoKgEvYR1Mn+Ty1J9yEB
SrALuxoVy4vfhoHx8xB5l3ggppgWnneSVQ4eakeUkUgkEonULSJgRUYWf2b0
V5BEIpEMEwErUpTl9XpZ4NOQIUP4RZF49ARXpiLkYfu63e60tDS8gPkM7VAD
W92PZ1/w9A5/GXFi5aEMi5vKycnBmiWRVPwURagEdgE3oBj4z5xhbQG3WWE4
HBxXXiGJRCKRSEzw89FdPxMErMjI4s+M/gqSSCSSYSJgRTJEiHEY7WGhUBjd
pLGMIB+jhftidBOjSfCWQTBcOpxnU6wediwkYAigFMO6UBkZGX044VpOGI6F
6IxRMklh+FTPqogkEolEMkrRT7qOggckPsU6+59IV4JyCVih1aanX8jMbJg0
qW7YMMn2xtmzJYWhWFNuruFQAhwDN8DDKBwL+0HeFfqtOjUVexj+Sj6Khc6M
MzP6K0gikUiGKaLAyufzwSMTH0JDIvHKy8uDKwRGCvB8Di+ysrL0/IsZnuRx
R/jLri6eU/GCjfBRTk6O5FM+jgtrk5eRCHzL6hRjsPCC51Typql9SiKRSKTY
kSErJvOxwRKFncBK7PXAqnH27KsVFR2trZIa2n2+tuLiptxceAEF/J28JZCd
Da/DOEok7EJmJrqB7kXI6oYNa87Pb//2aSeMY4Gf0JPX6+slPQxboDboYfjU
8M6MP4vQN4tEIpFiX4Y8pJFIhosBK6MdIZFIJJLBiv6zkCRq91edGjJkCPxl
M9/Di87ttcCqbtgwxmGu19c35+djeNWFzMym3FwesCClqU1Ph+0thYUhHSVy
Bt6iG9CKyB0Fe4NhupCAVXVqKsIoUEdrK3RdIDsbe1iC/kDRiRPrPRax7xaJ
RCLFughYkXqnCFiRSCQSCRX9ZyE2XV0xED0vLw+nCoaR2Kp3AqsLmZksqkpx
Plp1ampzfj4WgJL8R2xHw6EEhidJ5jBGwsKI5oIOZDwQXsBbeZlAdjbrTPk8
wTgzOE2KnRAhi9p3jUQikWJNBKxIvVMErEgkEomEivKzkNfrxd8gfoVZiQKB
wODBg8PgTr0QWNUNG6ZNq5jBp/IKWWiQ4QwkmoZN1gms9NAqNIbC4htYYYdE
s41R+66RSCRSrAkfmYz2gkSKqtiqfwSsSCQSiZSTkxNNwuPz+TBRlXYxcCmM
H6leCKwYS+lobQ0a9IKF+S0ErIIaA32iDhKFheMbWOHUSAJWJF7hJW2mVM9R
U6BTRnsRgujaYIoosKJVAkkxKLhZ8alu6fokkUgkUpSFS9Nql8nKykpJSZFs
DJrYqrcBq8bZs1kxPYvTYXl+CwErbatNT2c9rL98HAOrQHY29gYBKxITLmIe
6iRun88HvwUxskIT/Hb8KnRFeSX0sKET7IVLyXe7SxESXhthpAWISxGwIvUq
sYkYEvWgOxiJRCKRerrgRyfoAxI8XQ+RDVSDPrP1NmDF0oCD9OQUgjIS6qIB
rHAlweb8fCjTUljYlJurmEsci4EnuExe4+zZYNplGiZNgrfyMrAjlFH0HA4N
u4AbUAO4JD8EWt2wYZgLizmjAUD0ACjGZ0Dgth66Ak7KM3HBFuY/OqZ4vlgn
YA2YGx92gS18W7A22Agm70nWXdBR+Br2hUNjYf4kwnaonxnbzm/kt7NMaCC8
JORXBTsFuDClYlIy2IWdRFy6UbHTJOeLFAXhGvdpaWkIZDIyMuAt3FdhBAGv
FfkMbAy6TEYgEIBKoIwEQSDpipFhCM6OxwBgbU7Fp2GMjm/QdfCbiIuSwC9j
SNFH2MlwTrWL4QmKHXCBbkcZCcamCFiRSCQSiUQiRVnw8AyP32r/LEaiJRna
5OXlEbBSG8iHvbieGrBqnD27o7UVrCk390JmJiMVEmhTm55+vb4eLJCdjWvw
YTEeYmCWLVaGVcUKQJ3a6xVCtVgDEhLM2QVvecSBLA62I9uBOnFtRMWsU3gg
PcCKX/4vvDTjLOM9VIUQCR2DVvCdCT3DH4vvTCZkR/Lt0Hv8iWOzRKFCPsUZ
Ct6yfoOj8MyTVSJZ95CdR9jIVpyEo8BbPIS8peASK8mQF3JL5h6COz3XsEiK
vODmiatdMGKTkZHBGI7a4q1BaRWb2QF/cX1Y+MsXQC4RCzdtn8/HSJR2bA+U
xL4KSoG6RdjJ2G/IrPQfVw+tgs7HM44v5LHNRgkDLYhZEbAikUgkEolEiprU
Yn11SrvyXgWsWIpvMZQF7/QAq7phw3AjH9WDJa/X1/Ml5emM5EmcEFDwCAux
BkNeGESk1l5kWRImgyV5Z7AYbGFYic3mk8dZ6e80PSdC27D5vP98FncWHwV9
jpAQt8MLKANboCcbJk3C7fAXOpzfzuph3Qudyac1EztBEGyEPufJFSsPzqg1
UHE7w2XyKYHQnzwNYwiRNRMpHANZ0BZ4DT3D/NRzFkjdrkAgMGTIELzBpqSk
SFgND7IU46MkAEpegN8RmZVkdKwn5jY6wn+LgAYPHqw9+Q5/yKKQDRizPjKI
hOdC528czgTUAFBYoA831wZ7IHZ+Q5Gh9fK5gQSsSCQSiUQi9WZFf8Vk/B8x
ASudUhvF88BKTwIrRVMEVgxK8KiHbeTjmuRbwDpaWxnNYDyEB1a4URKwpNhe
ZFMSSgY7MvbCqmVb9IApte0aqCS8GDbsNHk+fNYt8BHfMyzeiQdc/GmSBIwx
dsdfAIw3irdjJT7aiq9f7UrTvjYkwAo9wUmIzBomTWLNZBv5WZZYCUZeKU44
lXhI6naxYKE+stgnJrZaE78RWYfb7VYDO7AdaRU/4w+DheQBP5jYMBaygjN2
pwHiWMkoACv8geb7UD+9wdg2DRaBlfOz75GPwekI093uFl5FGvHYvUERBVYk
EolEIpFIMa7oAyv8J3vQPCG82JBKu2YCVqGaIpRgNfMMQZFU4JaWwkKeosBb
VoaFOUkITFtxsYR4KLYXAYs8RAq2XK+v5/EImw8or7NbgFUYMWwMrEnaznoJ
a+Z9VsNBbLvkRLMzJdmu5jM/BU+759WuDTUPMW4KZ30yY8BK5Kgm81l/l6p9
NUhdFAuwUYRIvPA+zG+B22wfzSy4SH4ke+EtWs5D1EBW9AV9wv6loh12Am2P
NLBiAclh4BrsankqSCYMbJNzQjxi7CzSh37G2c96SCJgRSKRSCQSqTcr+sAK
/4cb6vMw7qVdhoBVqKaWw6o2PZ1nUJi/CEvypILPaKS2bByL6uHzHWlACd4H
+RE1TFI5gzNdAVa886H2rRpNQmMwh48fU8NBalWxSC2Jexo+y4PT1K60kIBV
0MuYUUftbtG+NkjdK5aiKmjaIszEzm/B6Cm12zibW6c4+09+Jw8EAmGTmW4X
iyjTnhgIbY90eiX85054SaUQGKp5yBJ2SX4uGSKLnTli+NMfdGXhOBYBKxKJ
RCKRSL1Z0QdWYudUhUjs1auAFT+QV1tcL6hprBLIsA+m2maZkXhSwYfQiLJQ
K8Uyzfn5itnL5e1lO4aU7RyTYmG6J9y9K8BKI7lWUGNz3xTJjGLyqFCBlVpb
NBooB49qDdQPrJh7es4UAasYEQY16aQTPp+PL4P7akwcw58VeQGMy1LcUZJM
yVghKdIzMTCiQqYUhg8IeTSIIp4IeQEG62Inwkr8No1Ar82+TsAqqEL9dSYj
I4uEGX0nIJFIcStDgFWE1NuAFQtwkmR50m8awAqn3YFhbIxG8iI+mzefdpsv
w7dIsYy8vRr5vRWtOjUV59m1FRdj+BDu3hVgxS9fqBEepmhq8/jkTeZTpis2
uRuBFeN43Qis2PnVc6YIWMWI2MS3MOa1yXMf8WK0RE6fFOcJopARxUj2JH6y
ZPRjjSQT4aFPcIt+YoM8SiMqCc++/AyqhcDpV15eHrjKX12wJezaUHjZxM7y
hVFWRIEVfFvhaokpPhmGQvppJiMji5AZfScgkUikHqDeBqwYfBBvzzel3xSh
RHVqKtYMn7KYGQ18BIfmI5FEpaxT/KRCsZNZNUyapPgzx7Yo5n5XM5ZRnC+M
u3cFWPEZwtmKfjqN+a92II0mRwFYabihcW1oAys9Z4qAVSyID68Kgyfgjmp3
WhaeJB8FY8iQYqwsi/kJmlQch9j6Fd5gnE2OC7piYPcKjoVuswmbrCH60Rnu
q4Yi2YRNOQFDNBQeNoR+ht3hFLMLAxyWJ94PQ+za6EolPVcRbXt8rBIY0k8z
GRlZhMzoOwGJRCL1APU2YMXPtlPM7B3UFKFEc34+buRneCmSCj7oCLbLI76g
Br4MH44lWXdP3l7WOjXgAzVj5WrpzdV2166WN35FwlDD2BiZUdtR7kbUpgTy
y/apXWlhTAlUm5qKwW9B26JmQb4hpNCF68eFNxBmJEfxTssWB5THw7DIK8Ud
2WS0oGNnVlKnwh6MM05iyMRAtWmVYmcPaGNGPAVqwIqhMDnKw8ioMILuWLJ6
CQRjaFQC/XCSqc4VD9mJ6OlcJTwRsAqqkH6aycjIImRG3wlIJBKpB6i3ASuw
dm7EoWfOWnN+Pl9MEUogouGZhl+FVEhQTHVqKvMHjwKFJWCKL8NHhcnbCzWw
jfKwLqwHw7RYhI/OxfLUtqv1GHNDT5AVOIOBRnyWKsWwNPyIX+swCsBKTvbU
rjSGH4NeBtot9XfOrGQsi4BVLAiBRnhogvEixRlqemiSImxhOwaNxolOhBWK
sZ2uz2sLVXiO+Fl7GMKE/mgnIccyalkfg56gMAAdOiY/IsOb7LTCZcMuP52R
V4x69XSuEp4IWAWVzp8SMjKyiJrRdwISiUTqAeqFwKo2PZ2FAMELjYmB1amp
VysqJPmjFIEVOzRfUp77CEtKAAULi0JPkE5IvGJ8iY/gUmwvcw/c5qebQYXt
Ph8DMoyi8BE+jHfJA5xwu/6F/3gqKJnJKDGkW8xV5pg8/g0/At+ChrHxvdrF
VQKx56Ez+YOyTuZ7mKeF/OlTS8zFnykJOMU8YKwSAlaxoK6gCZbmSHGQy9hC
WlqaBBxhBI4aaWHAKqZu4Gw1vVBXqfN6vV0BZRp5wDA6Ti2BmBgsBI7V/Ktf
/Upyghid0xn4xMTmGCo2We4M80HngWLz2oiaCFgFlc6fEjIysoia0XcCEokU
t4LxRdw8BPZCYOXn0jehmnJzJYu1wdtAdjaUkcMEhmIU2RF8eiEzE/aFF+wQ
bcXFjbNnI7cRZVQE0QqLqkI6IZkphtiE35EP0eHxCI9NxE68A3uxSW2sLZJM
U+BDS2Ehthc3whYWyMSAiX5gxUeF4Y5yMAiHwJAkSR4ntqMEB6FvEvylyI78
6umwWFvU5lfy9bODSuLEWGJ58B/KQ524hfUevGUAjXU1nlMWQccCxtin4DOe
BUlzFOkiPQJFUwxohHe31J6fxT6V533SSGAlclDC2IX55NLOMC8ROM+SpXcl
cRNDQPJOxvo1ErBr4x32qTxmLOwEVhpJ0eEykB8OW6efARKwihywgrsBXOGh
IspYUxgjazIysm43o+8EJBIpbkWrBMa49PxGsAXymNp9vrbiYjDGQJrz8xmV
ghdIdVh5xFBYgCEFJpxIyG9hwErspCgXMjNr09NhowSL8dmN4DXUj2msWDAY
bIHtfPZ4xCPMVXjN4zjU9fp6nrxBYTZ/DQW7MPDCOgSOiPCNb5d2xBRv0C28
J0jP4BAYt4b9IJ+VyTLYs8MhPITdJdnAeOyGsx1hX/SZtQ4jzaAw9iSfxx6K
saOzwlgVeA6Hxm6X50Xn83TxR+GDpliEGI8WxduxIZ59yZnijyhpC+sQCV+l
R6BIizGE8O6W2vOz2Jw1yXYNTiIpEFM3cAwnS0lJ0Z93PdTwIUWxxPWS7ezc
aYRvaecK0wiQCw8YMpcUd2SnlXcYW6eGLjUq6WLy9h6qiAKr+JDh43QyMjI/
Pa2RSKSIKQaBFaZjDWPHXgus0BAIXK2o4JOfw1vYKIkIgrdNublyY8WwHrDm
/Hw+uga2tBUXM0aBgTRQBgtjeZ4/QEkoAzvyZfgYsKCesDII37A2xbYjO8IC
WD8cHTeiV9AQxWPp72HERHAIRr06Wluxfu0EYnhobD64xDxkBtUqdoKiz1BY
sd8YGkLfECSyfpP0qqRd2FHYFiwGL2CjHOjhgo+KrUavFE806wTtc02PQNER
zs4LCRowaeewUlufDhmFRlCNdrW8opbDCkPRwOeQ0BOGD4W30B6TWjciLQxa
OfakYlTYOJUV91hMV6icjREwRRSpeN6DBompHaKnz1wLT2rRaySmyA3AycjI
9JvRdwISiRS3ikFgBU+nOudfSNTLgRUZGRpeOfrnPMa4GfsFjEuxbEVBB8KB
QEBCCVhEjeKdVm0CHSIyjZtzrK0SyJY71M9VUKGGDylKLWYJE1jhdnAM3v6q
U5LQIyRCihn1EVjJySHWHEYSfhZTp9jP8vPOAsB8ncLcWSg1tMggW1fSgvVc
hXdeepUM/5EiIyPz09MaiUSKmCIKrDBBVkiCp18cJuifgsFEwIqMzE/AihRM
LJxGm+fATTglJUXOXvAWrXin5YkKEwtV0rirayS/kig6EVbIfMJIqIWIJlTM
xYslGZPHLGHluB3PjmICIoRIipQDY7TkoBLPaRhwjy35J98Xf5Elx5IEieGi
gVlZWXqujVB9iw8RsAoqw3+kyMjI/PS0RiKRIiZ4II/csxD732sYCuOBn4AV
GZmfgBVJh9jNWS1Bk9frVaRVouZCdYgjJL8p+G8RtexVfJ0xMjBHZ4KGn/l8
PgnRkoQPQRex8CH9U+1YljAJamOVw/mC2gYPHqz2Y4c1KE7AZJXwG5EISdoC
R8ETB/2g5rxGAn/kaXKQxSNNzFEftGfwWu1i0FrPVUS/F5R0nYyMrLvM6DsB
iUQihSP24B2GwkjaQMCKjIzlRSdgRdJQIBBgmazgRV5eHsNWMHrFeW1q8UV4
p1XkIWwmHasNExAFTZfd9cCk7hKjPUFjvaCkhCRI4pfwbahRXtj58l9AlgEe
o5K0o6HwLCiCCAk/ROgkx4/81Eu1Sfr8TzwckTUTYRdsUQsSw66DavWEUocd
/RUfiiiwwrPc0/vW8B8pMjIyPz2tkUikninMdpKWlraNExsKbVMSPN/C0yns
Esa//AhYkZE1TJqEV05Ha2vQBfh6hBn7BYxvsclWEiHC0tgRsYPiXZpNBIPK
4U6uSC0kwl8KjZTsURO0SD8ewRRSki0M9GVlZQXFSopSm42IgUboXlCCgZ4o
ckKEiiA4QXAUfCEvxkdP9VGZjodHwQsGfRvSKXwhx3Qsvgulh0+iG11MYt+j
RcAqqAz/kSIjI/PT0xqJROqxgmdvybMQJqzQ2AUfUIOOceQiYEXWm602Pf1q
RQV/8Vyvr28rLmbrPPZQM+qr10vk8/ngZov5A9PS0uCFntErix1SqxNu8jqr
Er+NHTL81s2izoLGg4nfYh8JSWB52nEyYBiZGMVvM67Luw4rx1n8QSEDoiE1
0AGOYYZJPrJOsRI4ClwVaryIcSqx8/cXk4ZBzWoRZXiiYS/2QqMJKGSqsRB6
Z5QIWAWV4T9SZGRkfnpaI5FIPVbw4Mo/D8NbPf9G79OF9dYNH/V0rwz/ASLr
KVadmnohM1NutenphvvWFTP6K0hSFs756vrCbUh+wpgD3u1SW+JQURjvxP/c
sJAkxdxNOoX58OW/kqxy8dtfuqC0B1FPGP/6kQiaozg5lLmk/8ea7zTsbW0S
pUgFe5sIWAWV4T9SZGRkfnpaI5FIEVNEk67LhRMutMvgv4YphxXK8B8gMjJj
zeivIElZCBO6ngob7thQj+Fpn3GuOk5gVJyuzoT5l5DV8D83GDUENWBV4fWM
2lQ+pE/sxxodwGKKk+9YsS5OpsPwKsUoLGxvSOFP/HRLlgkNc8irpffXk0ws
vhVRYAV9Cyeip/ew4T9SZGRkfnpaI5FIERM+90bziEHTeoS9XBQBKzKy+DOj
v4IkVWE4UFema+HUQsMnfIW9Pgj/c8OHD+FcOT2BK1AGCiOuQQaoiJh4QiVy
0U2wXS03vvhtSHPYUBFX8VOjYSxpv84oOz5IDMVWY1Q8Cp6UrkeI9XRFFFjF
hwz/kSIjI/PT0xqJRIqYog+sMCOr4pM8PK6zJK4aD+FqImBFRhZ/ZvRXkKQl
XLEuPOKEd2zDaRVLtN5FYIVb8KeNXy7Q5/Np/Cph6BQGHmOedsVgM0wPxVOd
vLw8bVrFWseAWKjSCHtjawjqj4XGJFf86cZffHgkkFMpvK6IVokErHTI8B8p
MjIyPz2tkUikiCn6wIoltoW/4zgxVIWiVQINV3xktyB1UdG/RZB6lhD4hHrH
xh8Cw2cCip3kZ1y4YrdHNsGNVYuZrDD7ukYzfT4f9AMuqxehDoGuBmf0ZJLX
r678aymowrui4lUErILK8HE6GRmZn4AViUSKmAwZjeL/fDX+bR3eozUBq+4V
ASuSSMCKpEPh5cDpesL22BEmtuLpDZIokJ4wIW+nIulgmOdITSyjV4ROYk/P
qtSNiiiwohxWZGRk3WVG3wlIJFLcCh6SDSES8ICEuXYlqAoe78P2h4BV94qA
FUkkYEUikUjGKaLAKj5+5Q0fp5ORkfkJWJFIpPiV1+vFGRnwyNTFfzH3QmCF
vLErU1o0hJM+4G8kKif1FGEwZOTqj2icBolEIvVoEbAKKsPH6WRkZH4CViQS
qRfI6/V2cdDaS4AV9FJWVhYmSCGR4klDhgzJyckheEUikUioPgSsgsnwcToZ
GZmfgBWJRIo7eb3ecePGwWMYWzMIHplwAe6w0ynEPbCCTsP5WSRSfAvuA4St
SCQSqQ8Bq2AyfJxORkbmJ2BFIpEiJkNyWGVkZLCRKc+XYIia0qnwmFUcAytc
/tsoekAiGSL4Lvf0bMAkEonUFfUhYBVMho/TycjI/ASsSCRSxBT9jMo5OTmS
MSn/qdfr7dOZej2MmuMVWOEa3wbwAhLJaKWkpFCoFYlE6rXqE0lgFR8yfJxO
RkbmJ2BFIpEipugDK8zhDH/T0tLgr5wvYSgRmyqoX3EJrCR8j5fdbr/77rvv
vffeBx544EESqWfqvvvug2v4rrvugutZ8Tp3u91dXI6BRCKReqgIWAWV4eN0
MjIyPwErEokUMUUZWAUCgT6dqZVxpg8cXc6XYAuWCbXy+ANWarTq7rvvfuih
h/5EIsWX4Kq+6667iFmRSCQSioBVUBk+TicjI/MTsCKRSBFTlIEVMiU29lQE
VhhhlZKSEl7lcQOsFGcC3nnnnQ8//LDRXIFEiqAefPBBj8cjZ1aUz4pEIvU2
EbAKKsPH6WRkZH4CViQSKWKK/pRAOBxLSqMIrJDS9HJgBWNzOa269957jWYJ
JFKUJA+1CuOeQCKRSD1aEQVW8DAGj0w9PU+g4eN0MjIyPwErEokURxo8eHBW
Vha+lgMrthYevAi15ngCVvxCiqj77rvPaIRAIkVVd999t+RbEEZqOxKJROq5
iiiwolUCY9OqU1MbZ89uKy6+WlHBLJCdXZuebrhvZGRqZvSdgEQikbpN8Gjk
drtxwXoGrOA1DEVTUlLYyDQvLy+MmuMDWPl8PoqtIpFAd955J/9FGDx4ME0M
JJFIvUcErILK8HF6N1p1ampTbm5Hays27WpFRXN+fltx8fX6etzSUlhI2Ios
Ns24ewCJRCJ1v1gYFY5A5XPfwgivEuMIWPH9Axo0aJDR2IBEMkaPPvqoZPXA
OPiCk0gkkk4RsAoqw8fp3WXVqant307PbCsuhrf8pwxkwd+6YcMM95aMTGJG
3gVIJBIpAoJRp5xT9elMrRz2gDQ+gBUupMiLFgQk9Wbdd999kiAro7+jJNL/
r6FDh/LXZ9++fdnr//2//7fR3pF6vAhYBZXh4/RuMZ5WBbKzFctcyMxkrY5Z
ZtVSWGi4D123hkmT1M6CToPd4XwZ3pBomjHffxKJ1AuUk5NjIOGBxyR0AAVv
uzLfJz6AVV5eHj/8ueuuuyIBAR5++OEHSaTu1qOPPhqJy1USZNXTUwSTeq5u
3rwp2bJs2TK4JgVB+OlPf2oymeD1Pffc43Q64cXo0aOD7k4iaSuiwIqSrseO
tRUXY3OuVlRoFGvKzcVi1+vrJSFYsWDonuFudNFq09M7WluhLWHXUDdsGPQD
ASsSiUTqFkV/lcCgVApc8nq94dUcB8BKMh/wgQce6K5RP1R19913S8b+JFK3
y+PxwJXWjZGBP//5z/n62aoNJFLkxOBSbW3t2rVrMzIyzp49Ky927ty5qVOn
HjlypKioCO+uy5cvh43Tpk3bv3+/vHxbW1tmZub8+fN7OiUgRUd9Igms4kOG
j9O7bnzoVMOkSRolq1NTWYarrhCViLbCcE+6aBjqFnb3snNEwIpEIpG6RdEH
Vn2CxZ9jVvYwmFV8AKvBgwezgbnJZOqW8f6DDz5InIoUfQ0aNOjhhx/u+gUM
lfDV0vCNFB3l5+f/4Q9/+NGPfpSQkAAX3kcffSQpwEdMHT16VBAEKLZ+/XrF
AqiioiIMxPrud7/70EMPzZ8/P3L+k+JAdMcLKsPH6V23lsJCbEtHa2v3Fg5q
FzIzwbQTuUMBFs0FJfm3zOqGDWMkrVv6hKc9cDh4K58FidvDyEKPrVCskIW6
aQAr3F2RR/FTO7WBlVoNPdei+rUnkUi9STEIrLBMRkZGqDXHB7CSjPe7Pti/
9957o0MnSCS5YGz+85//vOuXMU9cafhGioTkcGn48OF4yfXt21cQBO0fl/37
91utViic++2cHUWtWrXKbDYnJiZizQ899FDXPSfFseiOF1SGj9O7bvyygEEL
B7KzWduRurDdRQ6zMK7FSvKVwF5Y4Hp9PRxUsi9aw6RJUIYFC8EubLFCsXO9
Qoat+AgxXo1z5vC7sPobZ8/mi7HtUCF81FZcjAdFP9u5YFRwFQ8KvvHb4bXO
CZKsQqgKX8Bf5kC7UuAr3y3wGlsEu7MX7NA8rVKrARxgHS5pVE83xWuARCKR
uq7oACufz7ftW/XpnNGzTUXw0ZAhQ6BMSkpKqEeJP2B19913d2WMD0Mhj8ej
iBEGDx78q0498MAD/9IpePHLX/7yV9+K3/4r3frXf/3Xf+EEb/Xvq1ZJ2A7w
R4em6fdKrTBsZ92iv2n8Xii+n8NrWqh9q3aW+Tr1e6Vxgvj4QF5dD7WCGlht
brfb6K8pqWdLwqbOnTt39epVebGCggKHwwE/SR988EFpaaliGaaGhoZ58+ZB
ScWZg0wdHR3Hjh2bP3/+k08+CZXPmjVLsVhlZeX169d1NIUU5yJgFVSGj9O7
aJjvCKUnYzlPhxgJUYNOitE+mKNJ5LK7szobZ8/GLfCCZy9IrmALHEg+JxEj
jvhjoSGHYehM4pvc5+b8fAngEjt5Dr8dNrLtDB/p7DqcrMen/8KqmAPgM+OB
UKEk/AwbAs1ktTH2xZ8d1l7Mu87XgKQOmoNb4C1b+TGMOLFYs9C+tyQSiaRb
0Um6DkcJNTAjjCe0OABW2ASme++9N+wB/gMPPCDvVRh55eXlscO1tLR806nL
ly/LowtaW1s1PuUFn165cqWpqemb2wUbQ2r+tWvXmpubJZWAkzp3h/Ed2wuq
knx648YNjU+ZYDjJGiIfn/KfBm0dFG5ra/tGppDGoV3vWyiJu0Al8vOo/alE
ek5QIBCA7/uvOkk4L5PJ1JWsVjyw6hPdoFBSXArub6WlpTNnznzkkUdcLtfO
nTsVy/j9fn6L2ndEsh2++3qK1dbWNjY2yovV19f/+Mc/vv/++99++21wDL50
2m0hxbEiCqxolcBYMEUApWE84GLlWTJ2SQ3N+fm4nQdWbCMPSeTsxc8xpY7W
VpZcizkgmZPICkschh0VfVPzmTEocIl5WJ2ayloNx+Vn82F5PRMkEUbJuRm/
hZ0OSTHwRL6dNYH3h22URLVhzZIeZoXjYHXFUL+5JBKJFGvyer1q0Rdyud3u
MJ6gCFgxPfroo5gmhe9SHlWJHKkAKQ6vYCMr0NbWpubzjRs3mpqaWlpaoEIJ
n9EPVeBYMCi7fPnylU7xfEYnsIKRINurlQuP58Xcg5LgtmIZ8AHLqA0Sr127
xnxrb29X8wdbAZ7ACwYGQwVWUH8X+xZqYLuoYTrGoKDtavWEcYKysrLgquMv
Qo/HEzawksxs1dN2EklDo0ePhpskJqfqY+iKfvIDwb0ab+B9+/ZNTEx85JFH
ouMJKQZFwCqoDB+nd9H0Z1yXkwFGP9TgjyI8YSFAPLBSxE0MbUkcUyysBqzU
EJCaz6weyUQ5FsElcYY5Kc9JJTFJiBRaIDtbD7BimI6FpfGF+e5VA1aYHUvi
PH/2o3nVRcL0f2dJJBIpZhUIBFJSUuDpKC0tbZy64FldexlBNRGwYrrzzjv5
eobAL/LtXcrDKDW8I3KERwOzwGiL510M+IQErKASniCx4C79wIp3VQ1G8a1W
rPbq1atB8Q6I4RqNyAfwgY1D+eCukIAVOMwPZsMAVgxGabiqp9WSE8T3tsYJ
8vl8klCrsC9pAlakrkgOhWbMmNGvX7+EhIQf//jHTz755IYNGwxxTFFer/eZ
Z5752c9+1rdvX7jan3rqKaM9IhkmAlZBZfg4vYvGIws2I0/D+Air5vx83BgS
sKpNT4ftEnLCcFDQ3f3RAlaSehhnkzij5qTcWElJ7BYP7tS89XfO4AtkZ/MY
jQWP8SdOzR92aGggb+xsBgVuMW6hfGtJJBIpdoXMKkJPR/jolZaWFonKo6Nu
AVaSyYCKBI8Pr9JIzMJHE+kER3w0UahTAhXd03NcGI2y8k1NTRol+RltcnDE
f6o2qUe8nadpcC1e4QEriULtW/70acfIsWI6Jx+FdIIwKx1TeBMDCViRdIqx
KbgVbN26dfLkyXV1dfJix48fHzp06MaNGxsaGnCLxlc+mmJuwJdx586db7zx
xubNm+XF2tvbp06dumrVqnou5Qsp/kTAKqgMH6d30dhcM1HflEDFKYQhASve
qlNT+UxQYgwDKzVn9AMrvqs7WlsVe1sDWPHWMGmSYjovNX/4GYVq1tPTWIX2
vSWRSKQYVqBTGgXg2UkyeU2n8NGrR6cn7TqwkkwGVMxdz8+e+0Y9Hkm8PSRJ
m+EwGQKs+PIaAWPi7aFBkpI83tHmNnxIkk7CYwiw4qPdtMEafz3oQXAhnSD4
vvNzA8ObGEjAiqRfcCN9/vnnf/rTn+KyfStWrJAUkAdcRW0CYHiS33sPHjxo
NpsTEhJ+8IMfPP7447m5uTHeBFJ4ImAVVIaP07txpM8ipjSsiVuHlAX2hAGs
2EKB8Lc2PV0RE8UZsPLLFii8Xl8viWsKCqwC2dm4tCJUpVhY0R9WsqeHUWlY
SF9bEolE0q9fRWWVwJCUl5cHLoXBrAhYge6++26+Bq/XKz8Kz1u045HE24OO
tBfJQhkCrPQ7yVMpEP8RHzelEY8kyqb4aRA/pugDK4mT2rCRb7s28UOFeoLw
S8103333EbAidZfkoCY9PZ1dKiaTaebMmYY4FlGtXbvWYrGwZt5///1Ge0SK
iCL6VBMIBOCpI7wkDLEjw8fpXTeGaCTplRSNpWwSuSxPoQIrTD8Oh2P8pJcA
K38nqeMXQOxobeUn9GkAK7ajfHXFoMCKgTKdacp6ooX6zSWRSCSdMgpYeb1e
XKBQLpxAFPYqgb0cWNntdra7WjovjSgj7cIaSbmZog+sJGFg2vhIUpjPms5v
DxplxIck6Wlm9IFVSGFgfOFvbud4igoVWIm3Twy88847CViRwpCETV26dEnx
+44w55e//OWECRO2b98OxaLsWBRmF8Kte+/evdOnT//1r39tMpnU7vYXL16M
tCekiKqnP9VEQYaP07tufNBU0HlhbPoev95cSMAKN3a0tgZNuh6XwAotkJ3d
wT0As67QWCUQyysmXdcfYaWxGmBI/seghf7dJZFIJF2KPrDyer2Yel1binPZ
tEXA6qGHHtIzqOfjkYJyDx5N6EEZ0QdWGkFTiuILMw+vX78eElPim6mH2EQf
WIWUuD7U5ocBrOCLz1+cBKxI4am9vf3MmTM5OTl//vOf4aooLy+Xl2lqapIE
l0ZhulxVVdXQoUOffvppxbjW7pWkOcePH6+pqZEXa2tre+CBB/7zP/9z1qxZ
FRUVOhPukWJKPf2pJgoyfJzedatOTWXwRHtWIJ/ASnFluqDACo6FW3je5e8d
wApq5mfkQVewUCvtoCm/ytKK+oEVy2EFJ1qy+iEaOCA5Iz3OQvvekkgkkm5F
H1hJVg1TlNvthvFIqDUTsPr5z3/O9h2i8tshCTEKFViFRHKiA6z4GDA9wIoP
jmKVS0KMgs7y45sZdFqlaASwUmymmiTAKujczzCAFWjw4MHs+nzwwQcJWJHC
0KhRo0wmEy6fB5o+fbqkgFGpnEpKSjBlVi4XLBFNyRu+devWxMREcAm6KyEh
4amnnqI8Vz1OPf2pJgoyfJzeLcbWm+tobdVIc8QAi4RrsRlnkgCetuJi3M5m
ojHGcr2+XrFmfmN4wEpSmB1RAmTY3MZoAitJvzF8x3xQC4Vi/cPP6cOZlaIK
sJK0iw+NkzArPH0UYUUikUiKij6wwqevbZ3Ky8tzu93bOOGW8P5DTcCKH9Sr
zRCRoImg3CNUlBF9YMUfUQ+wUmRNoVIvyUGDDgOjDKxCxZKShFchYUz9wIqf
FUjAiqRH8m/WyJEj4QJISEi44447fvvb3+Zz6VyMVVlZmSAI4Nvq1auN9uX/
qry8/LHHHvu7v/s76C5w7Ne//rXRHpFCVkSfaiiHVUwZg07yTOD+TrTCSI58
WhnDLIx3QXkWFIS7ICSBT9lGZC+whXEtsTOCCLZgHBHbLmEpjL3wfjIAhSmh
4CMkNgwKsXpwaUK2UQJwGBqSUB3mDJ9yij9u0PRQuK6fpFpsixzosXxiUD+f
lB7c8HdGTIEbfFwcVIu9IQF0sB0pGZ/vHQ4KG6EkHJelvjf8CuyiBf2qkkgk
Unjyer3RXCAGDjd48GB+CzyJSfKrZ2RkhDEfUCRgdXvGdbUQNUkoUVB4Eirg
ij6w4mc4hppli7GpUKlXqIFnUQZWoZ41iYdB+zw8YDVu3LhugbEErOJSjE3B
i9LS0rlz5yrmX4KPnnzyycWLF/v9fsmOxirWgBXLo1VXV5efn//000+vXLlS
sST8WBQUFPD5DGOkS0kirRKoQ4aP07vRGiZNYgykpbDwQmZm3bBh8LcpN5dt
V1u9jhEVpnafjwVuoZCoMNzE1FZczNMtLAnGO8M4D4+8ENTgdgZkYC9EQwxn
8UCMlWHhSbxvfOV8SyXOsO216ekMcMFRFGfbSboI/rJpfegDMihmrH+gZniN
h2uShc5itnZ+C84r5AEdX4Ofm1coURzQKj8BKxKJFC+C5yIJjMrLy5M8jOGC
YllZWWFU3suB1aBBg9i+ao+goZKW2AdWIZEWkYCVDg8JWJEM0e7du0eOHHn/
/fcLgpCQkLBhwwajPQpB+/fvxymBS5cuNdoXVclJVHV1tdlsTkxM/MlPfvLK
K6+sWbNGz7KnpKiJgFVQGT5O716rTk1tnD1bzpTafT4M9dHYkTGrjtZWREkX
MjPhdUthYcOkSTxxYpAHXiBmgY14UCgPe4EPUJvEoIziduYDAzLIynjf+MUN
EX9hJFJbcTHUib5BGXnl0GTF7WrOaMRZwafgGPYSoiRorBwAMmyIcVBsO2sC
Mij0mTWZL8kHy0nqR5/509rTZwIy677vNIlEIhkseDrycevJip2ZbXg8hcBK
LQWThghYEbAKA1hhHAIfphUHwKq9vZ2AFanH6YknnmCn2Gw2h/FvCwN1+vRp
+Nn65S9/WVRUZLQvIaigoMBms7Fuv+eeewhYxZQIWAWV4eP0SBifDxwlmQen
YTzU0og4go/kn2pHKOn0XKMSCXDr+uG6YtoLMqp9KvdZraR2/ca2PRJm0A2A
RCKRul/w6OV2u+EvPNsjucJhbFpaWl5eXkZGBnzah1YJjBlgJcmGFFJGqdgE
Voo9EFKKcrVKdDoZBWAlmfipZ3UwAlakyEkS2AMXJJuwxmvu3LmCIPzTP/3T
yy+/nJ+fX1dXFy0HuypJA3vQlDr4ChcUFMB38/777zebzc8//7xisba2tig7
RkIRsAoqw8fpEbLa9HRJnFXQHE1kZAaaUXcAEokU94pyDivx2wAqFEsMnpKS
0ud2UYRVjACruI+w0tio08MYBFY0JZAUg7pw4cL69etfeOGFf/u3fzt37pxi
ga1bt/JspAeRn54ovnvhdVFR0YkTJ+TF4H4Cv8iPPvrowoULFU8cKXKK6FMN
PAFC5eEtcxM7MnycHjmTx1mpJbAiIzPcDLoBkEik+Ff0VwkUO1O8Dh48GNcH
xC0+n49f8j68hQIJWBGwImCFImBFijW9++67cIPC5epA8+fPlxQgNhUjkge/
7du3D09c3759HQ7Hk08+2d7ebohvvVA9/akmCjJ8nB5RwwX1Org1Ea5WVOif
HkhGFjUz8CZAIpHiW4YAK0UFAoGsrKxxnZIkudIpAlZ6gJUku1EcAKvLly+z
wkatEhh0rN2zgFXQ6T8ErEjakn8jnn32WThx/fr1czgcv/jFL9atW2eIY6Qw
VFZW9h//8R9OpxOxFZw+oz3qRerpTzVRkOHj9OhY4+zZLYWFbJIgrsQnWd6O
jMxAM/Y+QCKR4lixA6yYAoEAAavIAatQUYakfFDYEn1gFSpr4sszwCUBUCFV
oqd8lIGV5IihnuWg5QlYkZh4NnX8+PHly5crcuMdO3Y8/PDDc+bMqaiowF3i
LKSqubl5TeH2nE0FNTU1RvvSnWKn6cyZM/Pnz//tb387b948xZLr168/cOBA
FF3rFerpTzVRkOHj9OhbbXr6hcxMNMOdISNDM/pOQCKR4lYxCKxycnLS0tLC
2JGAlR5gJYaIMiQkRzFVMq/oA6tQWROfX52FEkkCz4Kuk6VIvTQUfWDFB54F
7UMJsAo634eAFYlXSUnJtGnTfvOb37jdbkEQ9uzZY7RH0RN8d4pKve9sLPzn
wtKkymueRvEHJaeeW7Np1bbtFy5cMNq76Km5uXngwIGJiYnwEzx27NiCgoKg
PxYkPerpTzVRkOHjdDIyMj8BKxKJFDFlZGRENJ/nthCVlZWVkpICo54wDkfA
Siew4lFGSMAKhiRBmxB9YCVhTUEr5wuz5fMkiyF2eyBZ9IFVW1tb2MAqaOgL
ASsSr0ceeYSdmsTExI8++khSIM6CqcTOFpV4vVNXrXlkzRZP0SlzjZhYLSb4
b5r8N4TzohAQnWeafrF5/5trNn69p7ipqclof7tZ8hNaVFRkNpvZZfCTn/yE
8lx1iyL6VENJ18nIyLrLjL4TkEgkUjjC8K3wlJeXF+rh4KGLgJUeYBUSymht
bWWF9axsHn1gBUMn/Tjoxo0bfGE+BoCPvLp69ar2QflK9IzLog+soAmscNDx
Mt/hegLGCFiReE2YMMFisfzoRz/6y1/+8uWXX1ZXVxvtUXdKAmcOHz32ScG2
X6/ZZt9aYT0SEPZX2/b5krZUuLcedu047thxzLPntGfnCVdpne1YwFp9I6nm
xv/advDtTYUFRXv4L0ucQbxAILBq1aoXXnjhZz/7Wb9+/VJTU+Vl5E2Os06I
hCL6VIOPHFFeKrrbZfg4nYyMzE/AikQi9UxlZWWFDayGhHXrI2ClB1iFFJLE
YxwWj6Sh6AOrkA4KTWAlJQFjPMdr5VbkkSvUeCTRCGAl4XjakxxDxZIErHqV
4Juya9eusWPHPvroo7W1tfIClZWVa9asqf82G7AYjyDi+MmTn67Ke2pp/t+t
3GHdetTkrU/w1pv3VZn219m3H3dtOTJgzd7+K7d71u0ZsLbIs+O4o6TSfKrV
fO66qeqmpVE0N4jOfWf/T8HuyWvWFZd546x/+ObADWHDhg1lZWWKJdPT059+
+mko0KvmS3ZFBKyCyvBxOhkZmZ+AFYlE6pny+XzwLJSSkjKO05AhQ/ABbJyS
MjIykFZlZWWFcUQCVnqAldg5AtXDT/h4JJ2zWgwBVjyG0i7PUymJe/oby7un
B++IRgAr8XYMpR0zxmNJPZlnCFj1Hk2aNOmee+5JTEyEbk9ISFixYoWkQJyx
F4lq6+qWfF34xNL8O1bucOw+Z9lSIWwsc+Tt6b/oq+Qv1yd/ubH/4gLP8kL3
V+VCSVXiwYZ+hxuFgxdse886dxzrv6Fk4FcHPFsPDthyKGnvGfuxBvuxJnut
mHTqm4e2FM/c8JW3/LDR7Yug5HeSM2fOCIIAF1Lfvn2///3vP/3009r/GiCJ
BKx0yPBxOhkZmZ+AFYlE6rEaPHiw5FkoJSVFO6d6Tk6O2+0OL6kCASudwIoH
Dhrog59WppM+GQKsJNFEGiUZqWtqapIPtHmOp8Ft+DYGTc+OMgRY8RxPY2DI
kzqd40cCVvEq+Zfi97//PfZ5YmLiXXfdlZ+fb4hjUVbd+fPL12969qMFP1iQ
79hQYtlUIWw8JKwtsa8pti/baVu+05O7zbG6SFi/372qyLGuzLnpQNKqIvfq
IueG/Z71xfatR5zbj7u2ViRtLndvPZy87Wj/7Ycd3lrz2TZT9XVznZjYIlqb
xP6Ha/57XeFn6786e+6c0S2Ohg4dOvSLX/zCZDL17dsXrih4PKDE7EFFwCqo
DB+nk5GR+QlYkUikiCmiSddBeXl5Pp+PvQ0EAvB0BH+194Iy4FgYhyNgpRNY
wbCUBdVo5CxihEQR72jvEk1gJdlFLakUm8pXXl6u6Bs/WVLNeR6O6fEt0ClD
gJXIJdjXOIN81+n0jYBVHIi/Hs6fPw93DMWzv3z58vvuu2/ixIk7duyI+3gY
+L6s27bjuS+W/ujLTbb1B635BxwLtzrnrUn6IDd59uKkDxcNnJXr/myN84uN
9qXb7ct2O1fsda3eY12z17Vsh2fZNvfSwqSlhZ7Vu/qv3O0pqBBK603HW80n
28zHW62H6j17zw3YdiR5xwlnWZVzf6WrtNZ1pMFxuiXp3LU7DlY9sWnrvHUb
ffFOrjo6Orxeb1ZW1gMPPDB+/HjFMnv27Dl58mSUHYtZRfSpBh7P4LbMP6T1
RBk+TicjI/MTsCKRSBET5kWP2uFgTDR48GDtMgi1wntCI2ClE1iJt0dPKQ5U
+UxNerJXoXiogsNbeBjOyclJS0uDU5OSkgIXwK86Bc/JanF0/MQ9PTnAxc7R
N4uPUtsFfCsvL//e974H/aMW5heU0TFWAwWChgdguCBo8uTJQXlaUPHUSyew
4k+i4i48utQPGMM4QSIBq9jT8ePHFyxY8Ne//vWOO+6wWq3Hjh2Tl4ErRGcY
Yc8V3KkKtm0fvWDRz+Ys8awoEtYcMOfuEuZvcn20HMz54Wr7gg3WhZvNXxZY
FhXavtjg/mx10pylyR8sSZqT6/l0pfuL9c6lOy1fHUnYXZlQUmcpqnIWHHGt
35+8fl//rw56CivcW4869/kdJZWeXccHbDk4cH3JgM3lSXtPO040C3WiqU60
1IuWy6KtQbzzYNUf8zYu21zYG1I8Kf7uwA/TP/zDP1gslt/97nfTp0/ft29f
L4/C6ulPNVGQ4eN0MjIyPwErEokUMUUZWImdT1/a/87DVO0pKSnhVd6jH+2i
CaxEDjs0NTVJxqQ8/9GZpkmUrcFXUVGRlpbGXIJTA2/HjRsHLwYPHowb4UVO
To7k0HxKpW/0ZTXHo7Md5T7j/Li33nqL+aN4HcLgiFUijyfhQ7D0BCPBZcxO
ZaisSePQir6pSTuAioVg6edO/LUR0gkiYBVrGjJkCE7O6tM54++LL76QFIjv
/FTwddhX5n170fKUOYs8878WPv/K/ska15TPk977xDVpXtLEeUmT5numzHdP
ze4/Ya5r+sKk9xckT53v+mCZY95666JCy/LdiWtLLXn7HSt2uXO398/OT87Z
5Fn0ddLK3e71B+0FR90byvrn7eufv2/A+pLkTYfcRadNJ1stZ26YfNdtx9uc
B+uTSnxJpdWO01cs50VzTYet+oaz6qrHf+V/HG/8n7vK/5ybt3r7zoaGBqP7
KYKSX2Ber9dsNrNv+g9/+EPJ6hi9TT39qSYKMnycTkZG5idgRSKRIqboAysM
s1GbFZiTk4OPqdp5rtTU0x/togysxNuZ1bVr1zo6OmAEAS9ColXXO3X16lWe
Y3z88cculwud+d3vfnf69GnJXllZWW63GwvAwBnGZVAJHJohFD6GB7bjUbRH
0Dyzam1tRT4DG1kzN2zYgAfVuE6gPPOhpaWlvb0dg0z42KqgIWfQk3D0sWPH
YgPfeustvkVQFTZHO3YFjovFoLwE4mEDwbeglYhcNB1UAlVBeagZ9mXNhKqC
ognYq4sniICVsZKfmhEjRiQkJNxxxx2PPPLIzJkzz8X7fDQU9ENxadm7Cxb/
68z5yTlfC4uLTJ9vFT5YaZ/+he39z61TP7dPXWzLyrXPyLFP+9z2fo5t+iLb
zIW2GUusH+bb5uY7P1yeNHtZ8oyFA2YvHTB72cAPl3jmb3Is2+VYd9CRt9+5
Yk//JbuS8/a5vz5qKanrV95kKm+yHbzkLqpM3no0eY9POHrZdE40V4qCX7Sd
vurx1t5RWD5gx2HP/nMeb42r4oLz1GXzBVFoEm1toqO24x8PnHl19YaC4pJv
gq3oGh9qbGzMzs5OTU39wQ9+0K9fv3//93832iOD1dOfaqIgw8fpeqw2PT2Q
nd1WXNy91V7IzGzOzwfTU7hu2LCWwkIoXJ2aKv9I0T3YDhubcnMN70AwcLtx
9mxoAnjFb0fPGyZNiqYn4AaYpCfVPIyoQcOvVlREs/lqZvSdgEQiRVuBQCAv
Lw/Gd2mdgheSZFDdpegDK6/Xi5OkoF3bOOXk5LBwFBC0N4zKe/qjXfSBldiJ
m+QIAtTc3Kwzo1GLTJ9++inzBF7jRvmOcJ0zZvXTn/60urpaXpVEQeEMjEav
XLmye/duCSNCTASfwkH1pPSHwpI4Ikbw9ExRuXbtGjp8pFNqzdGOtoLGBu2Q
oJWwqvhFA8M4y3AUPc5onCACVlEWnNmysrL333//r3/9q+LCl3BlLlq0iP9l
ibOQKr450BuHjx7NWrLyP2bnDJyxyPHRavusFY735iaPzkoeMc0zcrJr1Czn
6FmekTNco2d6xszuPzLLPeZD59tz3GM/8Iz7xD1xXtL4eUlT5rtn5Do+3WhZ
tNu8qtS6dI9t6S7Hkh3O3J2eNYeEHWdNe2tMe+uE3efcmw561u9zbTtlLbto
PtxirvjGejiQVFw9cJPXU3jU4T3vKm/wHPC7wbxVnpJzA3YeSzpU6zx7JbFB
NJ0Xheob1pqbwgXR3Cyar4h/V9n8/+QVDl20fMf+/dorfvZo8eervr5+6dKl
W7duVSw5ZsyYN998E37m4j7+qqc/1URBQcfRjbNnX6+vV9sdPoLxflNu7oXM
zEiM4uHo7dw9tlvqrE1Pbyks7Pg20Br817MX7ILlA9nZfD1850h2YZ5HqHN0
Ghwd2sic5J2BJuBG6I2o+QMdiAeF3mMethUXK3oYaWOXAXSFgefIT8CKROpl
wrw3fZQEI76gGctDPRbU2Y0V6jyoYuuYwguvEnv+o50hwAqFEUFXrlyB0VDY
WcFReXl5zI2gyfO9Xi8r3F3nDqHo2LFjr127Bi1qb28POwvKjRs3YHeoBKqK
g0w+GLIFpxhDvKJMJwhYRVMvvvgifKGsVit0V0JCQuG3QxWmOGNTvCRNO3Hq
9Jxlq349c/735m0yzy8wfVaQOH2Z471sx7iP7W9/KIybY3/nY9voD5xvTHGM
mOp6Y5ojM8s9aoZ75Cz36Dnudz61T11o/mCN+dNN1o/W2D/Mt81bZ/94hXvW
CvtnG825Rbbl++3L97mX7E7+YtOALzYmLd/t3HDEuuWUfdsp91eHvpO75Y6l
Wweu3e/Zdsa585Rt95mknaeSth+5Y+OBgTtPWc9eEfw3LdWiqV601N50nQwk
H6zylFbaTzdZLohg1lrRdeJSclmVs/y80ChaL4suX8uDuw5O+2pLifdgF2/U
PUXyC7WhoUEQBLiw+/Xr94//+I/PPvusIY5FRxF9qulVqwQ2TJrEdmn3+S5k
ZsKWptxcnoTAa3n0URcNg5dC9VbbwEmMq2Fu69mLAavG2bNZPdAPGu6xQ0Qz
ZEhutenpPHVUBFbwadT8AWfwoCy2TcPDSBsCK/jb7ZduqNZtX2kSiRTz4sd0
ioKRuJ74kBgXNAGDu7oXyhGwChtYdaNYfqo+OlaEBPF5riT5rMIQHBEdiD6J
JWmLgFU0xZJTmUym/v37r1271miPIi4J2aiqqlq8buNfZsz90ZQvnLNXWD5c
lTD5c9s7n7hGzHC9OdXx5lTX8MnuYe87X5/qfmV80kvjPa+848qY6H59qmPU
bMeoD26VHDvX9e68pHc/cU3+3P1+ji1rqfPjfMenG9zzNjk/XZf88ZqBs5Z7
5q53LNluW11iW+11rNqXvGjnoC8LXSuL7QVHXdt8tuLztr3VSZsPJxdWOA+c
F461WU5dFc6J1lNt7gN1ycVVziMBoVrstJtCnQjm8F0dcLA2+UClp7zWfajW
U17jONVsrhfN8GnNDeG8aA6IlkbRfuTi7zfvnbp8VblSqvz41okTJ+6++26W
6goudaM9iqAIWAVVqEN7kGSO24XMTPZRu88XibE8C1XqxjrBbaxTJ7CqTk0N
ZGczWqXHvdr0dOgrtelmUZ6G1pyfj05KcBC8BSfDji+CHUPFcTj1DzpTwojU
POwuU+xwcD5y8YEhWTS+7SQSKQYk4RW4khoM4XF6YEZGBkZewXi8e+OsjBIu
bw3twpbC6y5OeyRgZTiwwpz5KJ2RcnyQleIikr5O8W/VWgdVsYml2sAKSqp9
iSQfwWuctapWWA9A7l7IjC6Felx4bezy5QSsoinoJUEQ4O66bt26evXpMPGn
hoaGFRu/Tvsg++9nLLR9vNH00bqEqYsdYz9NHjYjaehk5+vT3BmTnK9Otg+D
v+PcL41zvjTO/fxYz4vv2YdPs42YYR/1kW3MJ/bMj23j59umLLG/v8I1eZlz
5gr3jFWumavcs1Y6526wLClJWFNhWXPEtuqQM3evK7fInnfAVFiZuKMmoajW
ur3Svb48aX25fe95i7fZfPCyUNHi2F+XvO10/6JK8+lr5tPXzWduJFaJ9pNt
Aw5UD/DWCbUdlguicF60nL/p9F1OOlzXv/jEd3YcHuittF64kRi4FW1lqROt
NdfBhJrr5vM3HeeuOQ432PzXkirqntzl/WjdxpOyPIFxrObm5sLCwrfffht/
9Yx2J4IiYBVU+gfULF5InpSJj79SRDpdNHbobqwzVGDVve7h0bu9ozQMzho6
2Y1wpjo1td3n664kXZHwkBleotHs8FAt4l91EokUG4LBBQ7HYNCtOLSEgSoC
gSF0Z1ASASvDgRUfOKc/xomfA8sYC7yAGhBAYdxdWloaXxI+4puJMwH7KIkV
gxfwLcMQLH5fzBoH9fMfwRY+WgxeM9/gI0mIoDw2jNUJXskvS0U/1dxmFUI/
SNoItwLJvQKKgTOwnX0d4C1riIGBZwSsoinopXvuucdoL6KnxsbGdQWbh320
4GfTv3R8sMby8df9staaJiyyjPvEOXKm47WZ1tdnWt+YYR/6nvOFsY7nRif9
7S33c2McL77nee5d94sTbMOnOoZPc706xfXGTPebM5yZH7vGzXNO/MI+I888
r8Ccvc28YJf5ix3Wz4vs2Vtdn33lWLIvce0Jc/4Z01enzBtPuFfs86zYK2yt
FHZeSCyqMRdfcG6vHLTO69xdbTrcIhxqsRy5Jhy9krzHn1RUaTl1xdKZdN1U
Kwq14oCyuoFFJzyHzicfPp90sMp9uM5+rlmov2m5JHpONA4orXSeuCjU3TA3
3pohKJwX7dXt7kPVSftO2063WKtuCjViQr1oq+m4Y+/pP6zdPG/DV1VVVUaf
jejpqaeeiu8bQh8CVsGkf0CtAaz44Xa3p0b3xx2wqk1Px5i0bu8oDYsEDsJp
krEPrAzp8FAt0t90EokUI8IhcNAAKlxeLWpeRUJI3mBMjYsGYoRV15+aIvpo
FwXFAbDS4C0akmMunhQhlkFyJUdScCFhJRh5xSYY8ln9keFI9uXdAwf4I0Jh
dAn+MoqFR4ejIAsCf5hXKH6lACzDpAisYF/YhV96gI9Pk0Bp+BSOjrtg3njG
f2A7OzSD3uy4kpRxBn5BCFhFU9BL3/ve9yQpqeMvb1VLS0vBzt0jFuTeOyHb
M2Gh8/1cy4TPbW9/6npjuidjsufldz0vj/e8Mt71wlhX+mh3+tj+T73memak
69mxjvRx1pcn2F6dZH/1Peer7znemGUeMz9hwpKEKSv6zcjrNytfmLbCPm25
Z8oiz6SF9g82WD7bKmRvcc792vZZgXvu13fMXJX8yXrnop225QeEVV7r2nLP
0j0DP9+StO6wsN0vbKsUdldbd1YOXFvq2XpaKLvkOHDRejBgPXo5qbh60Jbj
7v117rKLSQfOe8ouJHmr+xefHbCzfMDBs7aaq0LjrRl/5os3LQ2i+ZJor21P
PlY/4GCV63jA1nArh1Xyfl/SoTpLVbupSrT6OgTfdcF3xey7aqoR+zaJg8qq
79184IkV61Zs21FdU2P0+elmyS/g//qv/4rvG0JEb9oErHhj0+K6zn80Dt2N
dRoFrDAqqdubE9S6HQexVFQxDqyM6vBQLUJfcBKJFGvCQW7QEAgYMvfhAlG6
ouivEihqZpUHf7rSLmPH411XTwdW/OQ+kP4JaHwaK5anXVIblOEDnPhLiD8Q
oyKK3yOeCMm7iGdWfC41lherTycdkgRAsiNKrj3Yi2ErRWAlj4xiR5FQa7a2
pgRls37jP4IXDACitzgZEGO9up4lLGwRsIqm+nTmWpffTm/cuDF8+PDPP/+c
bemJFOvKlStbdxdN+HLlL2fnOqav7jd7Q8L0tQlTVpnf+0IY/Yl9+HTnKxOt
GTOEoVOcz493/22M42+ZjmdGO9NGuNLecMPfp0e5nx7tTH/H9fy79penCm9+
YB8xx/n6R9Yxc63vfml9b7FtwiLXxIXO91c6Zqx2Tl06YEJO/4mLnB+us+Xs
FL7YZVtcbF1W6l5QMODT9a5FJfaVB+0ry+xrj3hWe+/IKei/pMi1/phrfYXz
q6Our48NXFkyaHWJe7fPtavSs6vStbem/84z393kTSo7bzvV6jzeYvdft9SL
1jox6fCF/ofrHLXtwiXR2iBa628K9aKl4VaolfNCh+fo+TsKSwcVHbVWXTE3
iEKVKPg7hMoOy7kbwtmrwtkr5jNXXcU+V4kv0d8OO3oqW/9HQclzazat2b6j
sbHR6DMWsvjLcufOnXD7OnfunKRMS0vL97///fi+IfT0p5ooSP+AWhtYyRfd
qxs2rDk/H5efg9e4MJ8k/grLYM3X6+vhU7YGn+Kh/d+uKAdVYW2KiYmqU1Mx
ITx6BS/gKJKMSTywwvKINeAvFJbndMLMS3BEefPVgBVUAs3BHPVyeIKHRsNK
JMYmV0Iv8dv15IzC9FnoGM7aU8NB/GmS9yHrE2g4FGMutXALkeBKkRKHtU89
9qQEFfIe8iswQjH+qsALhu86eRfx6dzVOpwVgMJwIEVKBhvZ9YmdoDjjFS5C
bCNWwnqe75Og1i1fZxKJFPvC0bROYCUfbgddkU2u6AMrfgk5RXUlq3xPf7Tr
6cBK4r/+HXmUwZ9BBl7k1zaPs/hgJG1gFQgENLpI43CsWnkAJH4fFZvMrnb5
ZZmSkiLZwgdlSb4C6Ji8RXyHs0gz8fb+NDZvFS8CVtFUYmLiHXfcsWfPHsn2
lStXmkwmvCa/+uorQ3wLWzdv3iwp807IWfKbKfMGjVtgn7TSNHlF4oTchHEL
zWMX2N6Y7Xx1su3V94WMqULGZEf62/a/jnT/5XXXn19LevJ121/H2NLesj09
yvrsGNOLE02vTu37xkcJb84zj/zENuJD21tzPG9+4Hlzlnvkh8mZ893jFwuz
Npo+3Wmau8M0f5dpQZH9082eD9e5PtthXnbQtOqwKe9IYv5J+4qDnoVFjjUV
5i01YKYd9cLW8661B51fHzeVNJn2fWMubbJ4WzzbKz07zwrHrppP3LCdvGHx
ic5T7YOK/Z6jzeZa0VIt2sDqROGC6D51acDBc/1PXnI03Ly1LOBFsTPg6qaj
8rK7ojr5cE1SeY2n4ryt8orl/K0dBX+HpfLGLfNd9+w76y7xm09fNp34xnrs
kuVks8XfnlgLx2q+d8P2Ubkrv9q9u8dlv6yoqEhPT8c1AeW35UuXLv3zP/9z
QkKCIb5FQfiD1aOfaqIgnaNpvyawqhs2jFWI+bSvc6n/4FOGs0QOmCCgaPf5
YLyPqwFiMdgiYTLs0CyqhxejE8wZrAcqrE1PB2PAgWdWDFjB9nbZDz3UwHyA
F23FxewjPcAKWsTvwpqMGc5Z5yBHwgp5tAIFJMQM3uJeelK1Yxp8MOgucB52
4U8HcwZBjdqVAM5gDdBpzDfWdnjBmBU0H1uBayZqnPqL06cj2GE7KgIrdiXw
YqcPSZrcbYRLkpo1OhxZorxb/N/yOqwNqoKPMDc7q5ydHegf3lXoavm1pDO7
vkgikXqHYGiJERHaxZBrybeH8VQTfWDFx5Dk5OTwo2k2n0seSaJTPf3RrtcC
K34imyKwUqRPfFwW26gNrERu0qIGsJLvq4Ge+Dol21mHBL0s+dAvHj2JHBDD
ybMSsb34FPdqQV/GioBVNHXgwIEzZ85cuXJFsn3u3Ll9O9Wnc3m1MWPGGOJe
UEnivsoOHpy1aMWjHy8bMG1lYtb6xIl5lnFfWEZ/5Bqe5X55ovvF8Z7nO8Ol
XhznfHa08y+v29PecD75muPPb9iefNP+1ChL2luO1BHuJ4Zb00YK6eMtL76f
OGy29dVptoxpttc/tI3MNo/NsUxaZp6SZ566xjZluWviUvfkXMfMdea5O82f
7TIt2G3+cp/t872eTza7P/layC0zrz5izjtiWn/auqbCs3C3feUhy5ZqU2GV
aUedZVedJ7/Cs/544r5Ga0mzdf835vJW9+7agYWnbIfbhJM3hJPX7WdE65nr
A/fXDDpQbavqsNaIttpbJlwUHbXX+h+pHXisxhYQhUui89zl/odrkg5XWWuu
wFuhXnSebh64r9JzpFGo7rB08i7Bdy1pb6XdW207c9Vyosl8PGA9FhCOXhKO
NFqOXLIeu+QurbGfbHYcrLl3zfZxGwu2F++7du2aUWdWv1avXu1wOPArb7FY
hg8fLinQ0dFRXV1dVlZmiHtREP6CxNRtPAbVLcCKJy0w0ofRPU+W4NNAdjbs
hUN7HOwzWsVDJMY34C+/nR0a1FJYeCEzE0N02EY+jgW38+sVMp7GF2PACt2G
j5C3MP7AfACH4SON5suBFWIi1i0SGKIWkcVcUox3wrbroVXi7cDNzyVxEm+n
Z/xp4iuBfhBvJ4HgANTAt515y2/UPvXnMzJgL550KQIr/Ag6kGdQ4u3p0RTd
hmYq1qzY4VA5HELeLWjopKQe1jS8ztlBeUgFO+IVzhfW8/0SSSRSrxHO/dGY
thMIBKCA/F+NMMiNfWDFht4a68dhD0jG7DrV0x/tejqw4mONQrqu1FK1awMr
PlqPkc8IAStt9NRFYKUWLSapBL4149TF3zQIWJGY5DP+jh49CtdSYmJiQkLC
vHnzDPFKTRJvKysrF67d8Nv3P/O8/bll2oY+k9f0eW+Z6Z3FiWO/NI1eYHlj
ju2VKbaXJwovT7G+ONGW/o71mTHWp0cJaaOtT77u+tOr9tThzj8OdT4+1P7E
MPuf3xT++o7wt/GOZ8a5nxnrfvYdz3PjXRnTbSM+FTJzEiesSJyclzhllWla
fsKsjaYPvhY+LHDPzHfOyDfN3534RbH5ywOJi8tMy8qtC/cnz93uXFxmyT9p
XnvMtP6kef2ppNx9nhX7LVtrwITt5017Lnq+Opm0/qi15JKltNla1mItv+oq
aRiw9aStotl0psN26obZJ5r8YvLhi/1Lztn97UJdJ7A632EJiEJA7H/8/Hd2
lycdOus6UefxNVsviZZOWmW5IJouirbqjqQj9QNLzrmONtrPtrkPVNmPXjRX
XhNOtVhOfPMtsGq0HAmYjwaSCsocJWeFiovmikbhbJtw9oqz1P9QYfH7azft
Lt7X0dGh1vmGa//+/f369YMLFe6KO3bsMNodA0TASo900iq/ErBC4sHCVySQ
hG1nmAXG+AwB4UfyCVOMWvB0gh1aMmGQoQ8eIDBn5DSAJzCMt/D7+jloJt6O
YthKiPqnBKrNwtPIecXQh6RnkH7oSe6ENUiizvi+klSimN8JC0v4GNQZFFgF
PfV+jh+qASvJvFGegDHn1S5gxZo1OpxhT75bWNPkHc66kW81o2qSrggpd5ZI
IpF6hzIyMljyZ8VoCjaglnyKu8Q+sGIDc+0AKuiH8JZB7OmPdj0dWIkq6/0F
FZ+6nGeV2sCK5zysvT0OWGmkrpK0SP85JWBFCqqioqKRI0e2tLRItscCtfBX
VS3KW5c2a8EP3/nc9fZi+zsLzWO/sIzKNo35MmHM56YR8yzDZjpenmx9eVrC
0BkJr840Pz/Z+textqdG2lNfdzzxuvOxoe4/DHX8McP+x1dtTwy3PDXW9OwE
898mCM+Msz/zrvX5CcLQWcLrn5rfWgB1CiM+s436zDF6vvW9lQnTNpmmbzLN
+jrxg03CzE22Dza7p6/0vL/S+ukO27yd1s+22+bvtnxR7Plsx6CsfHtuqWXt
cfO6k5aNZyxfV7pWl3vWHrdsv2De0ZBYVG8uCbi3+pO/Pi6UfmMpuyx4LwuH
252lgUE7z9mPtJjO3hTOdAg+UagWnacvDyivv7UCYP2tvFXOc60DKmrdR6qT
Dld+p/SUs+6a0CTaGkTrxZtCwy1gZTkvmi/cWi7QVnUt6eD5767f6y6ptFbf
tPjahVOtncDqm05gFRCONTmLTjmLz9oP11u9tRZvrXCwDsxytCHxTKv1aEP/
/N0Pri2cs6mg4tgxo8+5sqZMmZLLBS3EwsUZTUUaWPl8Prgtx8608fCkZygt
GfXLdb2+Xp4kipWX54Nio375URjLArEKWVWSQ/CF+ZmGGDGlzTE0kq4z/sCH
aWnwmW4EVgzOSLxqKy7WE6jDdpfnuQrJGdYDfDdi9FRIHSI/9Wqng/dQPoeO
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
LYkXASs9CjqOlo++uxFYSab4SYb/YQMrTKZ9vb6eIQUsox9YybMPRQ1Y+b+N
8BG/hVTgjKKTGh2r0VH6neGzoIvqyyxGAVjJ016ptVSx5pCAleKkP95YwB4B
KxKJFJ6ysrLUIkO05fP5YmpwqigYboOTmLBILUkXJkFS3Bi0/lgboYeq+ABW
uC4AugFnWTtfGR9iJJ/ypg2s2JqSfMBeUFYTI8AKyS1+qpi6Ki8vD/fCxUM1
+hOr4g9BwIrEK6QQqS1btnz/+9/HZQT79ev36KOPdrsz+73ed+cu/NcxH3lG
fWkZm5cwZmnCyC9NbyxIfP0zc8YH9pdn2l6aYXt5mu2FKY70CY6/TbI+P6Pv
S9MTn3s/4Zl3hT+PsP7pdcufRloef8Px6MvOh9MdQ56z/+5F52+fsw150fyH
1/v9cZTpsTctj2UIfxppfmpc32cmJjw7LeG52f1e+jDxldm2F7Ocz7+f/LcJ
7pem2d9cYH5nZeKEVZb3VlsmrbVMWmd+f6N5ZoF1Wr7nvaXCzK8SPykyfbLb
PK/InL3X9HmJbd6OpA+32L48IOQetiw9ZFpxxLT6pOfLvUmLis0bzpk3+Cwb
z5k31zjyTySv8go7Gs27Gy17LpkOXLbtCfT/6qRwsNV05Lrp6HXz0Q7bKXFg
cZ2z/BuTX7RW3jKb/6a5Xkzef3pAydFbkKrhVj6rW3ZRtDaKtkui+9w3/Y/W
JFdUDzhU7ThxyXRetNSK1ipR8N80VV63nG23nGm9NSXwdJtn14nv5O1N2n7E
vq/SfKjefKjBUlpnOVBlLqk0l9Y4th93byoVSuuE/X5LyTlLsc+896xQ7Lv1
trQyqaDUufeUcOwb65krgv+662Tgf+46/MKytZv3lTQ3N3fvlfDBrFlmsxm/
0f37Jy9YsCCkq6h7nYlNEbDSIz0YRDL67jqwks9602YIGlUFvkW1rDDmX5Ks
M4hlQgVWfIxNNIEV2xGXnBOVstMrmoR0dd2ZumHD+NxlfCr7aAIrNkmTJZNX
u4AVaw418IxVrghUGbCiKYEkEik8wdgz7ASY+nNcM+Xk5ITHx8IWn5Q7VAWt
PNZG6KEqPoCV2HkpskTiGsyKp1WKAVGMIMlD8lh4kuQC5uvELXB0fradRhdp
ACsW5sRPP5TXKfny8idUsguf7Evxm8vHTPKoB9fQxAPBjvAa88LxlRCwIqGq
qqqampr0l0cO0NzcPGvWrL//+7/v16/f22+/3V3OHDt+4sPFq/7fEVM9L8w0
j1rSb/TyhDe/ML2+wPTaZ6Zhc80Zc00Z80xDPza9lGV/drw7LdOeNlZ4Ztyt
pf3S3ranjnA8Ptz9hxcc/51h/UOG/ZHnXL9NNz/ykumRocKQV6xDXkp8dFi/
P44w/ffrlt+/ant0qPlPoxKfei8hbYL5r5MTnpthefZ927MTHemThJdmWIZl
m0YuNo/8wv76p8435lreXpwwca15Yr5l8gbT1E2mGV8nzCo0z9rsmLzaMXWD
5dMi07w9luy9pvl7zV+WuT7emjSnwLzksGXpYeuyw5aVR82rj/XP2W1fUWHa
eNa63ids8lu21CWtPuxZe0TYc0nY1QB/LfsvO3dWJxecth26Zi2/Zq64Jhy7
IRxv77+v1nWkRagUbeduWv03rTWipV5MLq8ZUF5rq78hdDIroeEWsxIaReEb
0XPs/J0FJf3Lq269rROFqpvWKtFS2SH4OoHV6Vbr6SuOI5f6F1ZYKm5lWU/e
cji54KC96JT1QI25rMZSUm0rOuPZuE/Y57OU+C3FPsves5ai0+bdJ817Tln2
+ZwFpc6t5eaDtZayKsFbJZRWWcobzKevmuvFpJNN/5K/7a1V67YW77typS2M
s88Q07Vr1/YUF8/4fOE//+YR+C73M1t++X/+o/bbGYj6SVRbW9u5c+fa29vD
cKanKNLACv+HGMajY0xJDwaRjL67Dqy0q2JAQJ50XQM4IKJh4TGSmnFjqFMC
+eXqogmsoOEMPTXn50tWPNTT5xrLL+pMus4jL4xYw2IsrMiQKYGsXWoXsGLN
YSddV+SE8toIWJFIpPAEA2QY37EQI3gtmSXXLYryKoHi7eP0UBW08lgboYeq
uAFWYicmYvzH7XbDBcyein0+H1zMLL4IPlW7tvnZgkOGDGHFcnJykHzKyRKf
CA52z8jIGDx4MONdPM6S7Muv1iefoKfBl/izJqlTLaE6n7aLh2ngA9QGzcQd
+dr4rpBIQqskPR87gxECVtFUY2Pjb37zG5vNNn/+/PBqqKmpmThxot/vl2xn
SEGNLUi2nz579sPPlzz23tw7R+YII5aYRiy2vPqJ64WZ1pfm9Bs235yRbcqY
Z/7/2HsPsCqyNd9bdq1UVTuA2t1z5sw5/c25c+fec+/9Ps/cmdMGEBAJgiiY
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
ydUauwq/3p4jTb0oPdIgTm+UHGuWZbZ/nXKWLe1BlQ/psw/EJTelRddlpd1/
SD2rUXBVWnpNVtFDN9zHV+WkQ04uvxhVcY298lKxY+C116TjFQ+s6MsvuFP0
5dey6jsjS6+NKmwXn+lEDQ9xzU1c2YPLO3HxVVjUivKbYE4DPFkn3ZPDHC5B
R8pQShHcnwf35MCkE2DXcRR7RBwVB7ekgJhDcHMKtXk/2LwfRe4is63wyFFU
7yaAiGXp4LUoZBNxX4rdw2inQGLvT1t5MHNt2JmW7NQF/2OuNe+l86kX6PH5
nzlzRiQSAQDy8/M/6e2GXQKwGoqGfZ4umGCCdQnASpCg35+4d7/o6GgdHR1+
W0Du08zMjDvyZXluc29BH4CP+FmtAKw+HbBS9VbiNPgUQzXlIGhLqfcFVqp4
ZxB/JLlKnKsHQ3MEGhZgpcrfBnEYk/frBVVMpOoZ9U6CNFAHqa46fGfJletD
39kLvARg9aWI69m//vWvXIv5+vr2P5tfWDJxjh/6uzMa58SOs8Vjbck4R6LA
Vm5Q0wtqeSEtL6DtjbXdmIkuRNsD6vqIJvkDPX+i68XounNG67kjfU842ZfS
96cM/IGBL9F3Z/RcmMmutJ4rPcmF0XVCk13AZHdKjzMXzkR6zljXlv5XLcBo
iHp7U23ECOqvBgowpbUAaVuKdOxFOnZAx477AnXtWB1r7pRI35nS52OzewAj
b2Dsj409WWN3OC1IZL6ETA9gpwXiGUvB3EiwcC1ctA4tXg+tYqD1ZmyxnrWM
JLYxyDkeue+BnsnII4F13YF8U2DAQRSUioOOopA0FJqOl6aj8OPiJQclwSlw
dS5YfRJG5OA1uTgyF64vkK1IYyKy4OZSvLkYbSnF20rBjgrphhw2pgAmVv8n
s9p7geytGbk1jz7USI624rQrJP0KOdGhse+MbF+19EiTJL1JcryVPdk+Mr3+
632l4ux29ax29fxOafENpvx7aenNUSVdTOtr3C7Hl+Sk7Q3drmBW4uafRlV0
k2uvmWtyuuMNc+U1ufSKvvSCtD1jWp6hy3Lp2Z5/TMlXL7uM6x6gmjuooguX
dZDiy7igBecq1gOKDxRJ9hWCjHPoUAncnwf25sDELLgzHcSni6N2oU27qZgU
sGkf2LgHrk2iopMZ3xWot1+4DgISKdE1wQGRrHsga+dH7HyRnQ+28WRm2+CZ
VqzpArHRjENpGZ9zVB84cEAkEmGMW1paPud9P78EYDUUDfs8XTDBBOsSgJUg
Qb8zcS8PPKfqL5lM9tHDWH06cRXhCjx0yNbR0aEMOB8dHf0BdxSA1VCAlSpt
4OazgxdJFWUMBRO9F7DqA20GD+2u6pI0OAviNSzASpWqDe4wJv+vPmOqmEi1
g97p2Kba4KodpLrQ753Vf68hIReA1Rel8ePHcy02adIk1YNKTM396Lbt3P0n
XTs83kPU62cFFIsE3eAEztyRpgel5aGm7UVp+9BazuqaNlItB1bbhdF2w7oe
QNeHmuQL9Djz4YxSYCs/kb4fmuzO6jpItG1k2jaMrj3RtYe6zqJJLiI9F6jr
SrRtsI4Vpe8Btazhf/uOgoTCEnrCQlrbktKxUdOxpXTsFKbrQLStaB0rOMmB
mqwIzK4AVvqulKE3ZeRHjNwZI3dqWgCcHgymh1AzlqIZy2jzYHrGEjh/NbV4
A7LYSBatYxespq3WAYftIuddwGUXdE1ErknQcz/2TBS77oD+KSjgCA48AoN7
mdXSdBx2DIVnSgL30qGpICIXrT5J1uTCyFy0No+szZOFHcEbC/DmErSlBG0t
BbGn4fbTsnWZOL4KJp7DSdWKTQP318niiqWJZ8jhNpLaSh9tR8evMGkt6gdq
UN5NnH+DFN7GJXfxmR80jjdK87px5Y+k5hGufY7rXuCLb0YWd0ur76M2OWmV
K4JZtcvpS2/oDrnGhe/Vz9+kO+Xk6hvm8mv6Z2CF21+xdT9Iy7voxoey05dG
5dSJSzvJ2Rvw9GVc1I7ymmBuE5NWId2dizLO4cMVKKUE7s2BSVlwZyaMT2c3
7BaviQcxB9HGfWDDbmptAlyzk4rcyYTFMP/Pv8IRIjhBh3gtR6viJC4h6pau
2NFfzSEQWPtKZlnS5ovJDAuJydypDu6feUiHhIRwQ1osFg/lYfVFSwBWQ9Gw
z9MFE0ywLgFYCRL0e1Jtbe1bUZWqPgzmDHS7T/euwr8LyWQynSFIldG9F+ZS
lQCshgKsBkIcb5UqmhgKJnovYPVeDOp9w0kNC7BSdRh7Z/VV6ZYq9vklHbR7
927upyR/TwaldAyLjIzU1NS893OsmKHcVABWv3LFxcW5uLhkZWX1P6XEVt3d
3Rae4eTvTiO+c1cb6wTGOSuY1XgPON4dabpgTWda05Fo2RNNJ1bTUTzREel4
inT9KF0voOMJdL2oSd6iSZ7UJC84yYPRdaR1HZCOM6XrDnQ9kK4r0XFA2g6M
jo1kooVk4mJG2xJq2wJtB0rHUW2yB/puDj3GAOnYibgj2vYiHXvuk9KxJ9o2
9CQ7apILmOQM9JyAgla5ifQ9gKE3MXDDUzzA1CBgGkyZLQFmIZR5KDVrhWjO
SjQnnMwJp+ctZ+avZhauVmwUaBcrcogDjnHQaSd0SURuu5H7Xuh1gHZPlDpu
Bf4pKPAICkxFS9JQ78JAFHYchx2X+SfR4Zl4dY7C1uQSRTCrQhJxXLoiDW0u
hZuLUG8kKxhXId6UJ92cgxJrcEIV3l0D915g9tWMjM1HBxvR4WZypI2ktePM
qxrJVWxaCznVRU71kIKbdPEdNr9b/UQDPKeIZEVXPaZrnuK652ztk6/yr+Gm
V7j1Dc1ZG8+s5OSq/Juz16UX7+MOuQJYtb9k2l6RS6/E1bfVS6/ii4/gxceg
/j5bfm3UiRrZiQu4uB0WXcK5TTirVn3PKZx2FqZVwEMlMDkf7c4CuzLgjgy0
9ZB6RDzckQ4374cbksDaRBixA0TsoEM2sqHRxGUptvOjInag0I0SR3+ZlTvl
HETZB1I2ntJZlnimlWi2jWTKbA1984aLF+Wfd7e+yspKPz+/ZcuW/ba3CJQL
wGpoGvZ5umCCCdYlACtBgn5PGjNmDD8j42adXl5eGRkZxT+L+25lZcWfra2t
/Si3+6S7BPbBL0PXB3uRCcBqKMBKlcC8E6qoookHQwhw9F7AaiBi81FK/r7A
iscp3O+uT9MNHVj1Wcr3TrrVp235gx0dHQcOHAj+WTt37uTKwx3kz/IPhLdm
0tnZaWJiIpPJ+IeDqmvcW9u2o1f8d9W2cnZ25jLhbjTEkgvA6jejvILiSYtC
GE0vapw7GutIxtoxnI23w+Md4XhHStOV0nKntLygljuj5chMdETaLkDbm9L2
gdruWNuJ0bZntB2wjrNI101N111Nx43ScQO6Hmq6nlDHSTzRktGyRNo2WNuW
aFkSrcVIy5LRXCiZuBjr2AAtK6jFfdqIJjqoaTsQLSta2xr++yyo60wZ+oLJ
rr3xrzzgZFd6sjM09KCM/dDUADg1kJoeLDJfSnHWG3Sdmh+J562UzghWnxWM
LTap2W4T2W4H9nHAfgdy2glcEqBrEnBTLAyE3gcZt51i11gUmAqDUlGvkxUO
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
9Xm6u+zuN6Fu5MWl5GSbZchxWuzBzZtdbohUcuP4cdX7C+thpuJDAADQTVR2
CYvFQubmfh1sl9YFIFh5FRCsFLD9AW2uB6yrq6PvYj2gTwDByss5evRo//79
6QgHBwffunVLbY+choXr3L59e/naLY+FZghhxcIAiy4kxzgg0xA2Sz8wRx5s
kYYUSUOLhYh5wohyQ0Shf0SeGFkpjqkQoyqkqCo5ulqMqxbH1xjGLdKPq9Qm
rRGTVsmTa/WTVuomrdInr+yTsNA8ebE+pVZK26jNahSyt8rZW0zpa0XLDrlg
l1y0WyzZoy890CfvWd2CA1LlEbnqqFh9VFr+mrniBWP1EWHNCflRkJW4/m1x
0y8CVr2kf/aMfttZuemstOPXul2/kfZdNOz94LFnT+n2f2TY/4lh32/1+z7U
P/9r/d4Luj3npF2/Ene9Z9z4Rt/KzQGVz5kqtxkWbJbmN4hFa+Q5y+XMxdLM
Mv+k2f4J2frxmbq4NG1sunbsVMOIBO2IyZqIBPOgsaaBo/0GxTw2cKyXrL+b
OHEivev69u27adOmO3fuqOsP8C1Un6e7xa4fPUq78+DmzcsZGXZKknfpmsEu
t3XrzBkEaMHcbqo+BgAA3QILDukacW56MkCw8iogWClgHxObSTbsvwu8DQhW
XguTLK5cuTJx4kRRFBctWqSuS27hdx99NDm3Qv/TFH1Ithw6SxqQK4XmSwPz
dYMs4pBCIbz44e6Bw8sMEcWG4YVC5AJxdMVD2WpshRRTJccslsfVGGMX6uOr
hKRVcuJyadJKKblOSq4Xp9WZkyoNU5cZpy0zpNbq09dJOdsMWesNWRulgu1y
wU65eLc07wVj8XZT0Tax8rC86LBUdVRa+opu6cv+C/dKq97QrTkhrz0lrzst
bnrXtO5kn9rXpOfO67adlbb/Wt75oX7Xw4WBpl3nAjed1O/54KHtOq/bdVa3
831556/IC8PGNwOX75fqXxJrDxkqthlL1hotNcbsKkNGuX5GiX9Sjnlipvww
e1W2ZtxMbfR0/cgJ0ohEzfCJhiFx5rBozcAoeXB01crVal+f/2b37t2yLJNv
Ix9++CE9orqGBnwI1efprtvljAzWnWv79nVanpTpcsfpuRCsYG431R4BAIBu
gwWHdBm3rApsamrC9mreAwQrBbQvgYGB1m+1tLTQd90l3oLuBoKVr7Bnz55r
166p7YXbeOmVY0/HztaEzBFC8+XQPCl0jjzQIg0qkB4mYy+Ww0ulYeW6iBLT
8ALdyPni6IXy6EeaVfQiKXaJNK7GHDNfjl8iJtVKSculSaulyXXi1AbD5OW6
acvFmev0qXWmlJX+M2pN6XWBM1ZJcxqlgt3iwyCrveK8/QGWLbr5z0uVR4RF
D5NZictfM1a9aF58UF59Sqo7ITWcEjec1m1+r+/q1wzrj0tNH8hNF6TtD4Os
Htr+3wVuebvvphPS3g/lXWcfSlU7fiVv/5X/htf9Vx+SG14T614Slz8vL94u
lm+Wiup0uUulrArdzLnGZIt2SrGUOEcYn6mJTZFHJ+mHT9COSJSHxpkGxUgD
x4phUf/f2Am3b99u9xppaN++fdevX1fbi14Hdgn0Ertx/DjrTkeLAXm7nJHR
keJE3vpzeTk163e/rK+nrdgXrOzUYN+I8/RE+0FirBjd9NB+yas1NcRt5gw5
0ulZjhgbKDsDThpiHWHlHazWvpOOtO5zptIDAADQjdBUVEFBQYpFfzSJNJmD
d7QkMPARPWBjF2ANBCsFtC82N7Jk6kfP6GlvAIKV98PLF14iZbjC/6wQ/Prr
ZWs29wlJFwcUCiGzpdBcKTRPF/ZIthpcJIUXiw93DywyReTpRpQIkRXCmIVC
VIUYvUg7bokubnFA9HxxQo2QuExMWiFNWilOrpWmrjVNWiylrhXSNokZm3QZ
Gw0z1/mnLnts+hJD7iY5v0mc+7w474CheIe5cKtc0SxWHpKrjsrVL8vLXutT
vlde8apQd1K39qTccEre8I5u0zuBtUcMW9/XNZ0jJm8/p9t5Qb/7Q93ejwK2
/LLPs2/rd5/X7Txn2PbvAfUvm+sOi5tOSA2vSCtfEJfukiq2iqXrtQW12rwa
KbPCmJwnTcnXTs4TJswS4lK1Y6fpRsaLIyboIuL0Q2LlgdFiaJQ5bMzBI0fb
veMS97BbzreAYOUlxrYFvNvS0uVKvsjPv33xIq2Evmj/drwWja2yP4DWZdoa
Gx10gK5qvHflyq0zZ1hyeEUZPrE8hfTdOr087Q6thPwk3SHFyAviHv2VlrnL
zYPYQcU2i9YRa38uL7/77QkU+ZVX2Ig/N44fp62T01neMFbYphhFqqWnkALU
AZuZ8ztt3Xetw48oAMCXCQoKUmTmoXui2f/yQJUuhEX1SFQUrMhM4d69e18/
4s6dO/fv3++C/7SS27fJ7PBr8pO87kIlPFS/tSlY0WRudsKrSBdIR2iPiCcu
ToXI6aRHLm5f5Uol/AUilXTtAvGQ2lzPFeNUJRCsfBf68WG3rm8JC8zbjz/+
ZErOQnlAtl9ovjAglyZjlwc+DLWSBxcKQ+dKw4oMQ/Pl4aVCZIUYuUAaWyFE
V4pxS3SxVcbYcu2EGiFphZS0XExeKU6plZNrjclLxNR1YtpGIWOzmPWcnLfL
f9Y6c2aDMavBPHuDrmCbNP8FU+Fz+tK90sJDcuVhefFL0pJX9dVHAiqel1af
lNeckOtP6dafFja/a2g48XBhYNM53bb3pe3vSzvOyjt/Le/8jbT7A/8tpwO2
vG167heBa48GrH9L2vKOtOGYuOawtOx5sWqHVPasVNygtazS5lQZppfophZr
phaIE3PF8elC9HT9qET98ATdsPHy0Fh5cJR+YJQYFp2Qna/uFQFeAgQrb7Av
8v/n89jllXqkEiqSMIXkz+XltM4v6+utVQXrhqgsc+/KFRpERBOz08LXjx7t
1AGqdDF1i5xORTNrJ5k+Q34y6UbhJBWdiDFpiFeNeOdJizZ7xHKCKQQrGmNG
3qWhTaSzdNxY6jCm+1FunTlDfWYSls3Ro2NFCtNqyU8mmvFBWZ227tPmns8z
AMDLaG5uVkRJpaSkWCyWTk8k83ebi6SAr6OKYHX37t3r16//zQpykLzlYCX3
7t27ceOGzUq+/vrrLgwFrXDs2LE2BSu6opZ8CqwXxpLJ6a1bt6w9IZDjXZho
k1NIF65du0Zq6LIE50olbrlAPOxikZ9dOL3LlUCw8mn++te/Dh8+fMeOHfRX
39KseI68/NrPYmeLIfmaAXkCsdA8cWC+NKhAO6RAO7RIHFpqGmrRDS8VRpYL
keXi2EoxeqEQV22ILjfFzBMnrJASV4hJKx5pVnWGSdX6qSu0MzeI6Rt1aet0
02v101b4p66ULdtNuZvNOetMc541FTT652+VFzbLlYelqiNy9Uvistf8K/cb
lx6V1pyU1p6QG96WNpyWNv9735WvmNad1G07L297X9d0Vt7xgbTzQ3n3B/qm
9x9fuuc7NbuNW07Lje/KG96U618WVx2Ulu4RK7ZJpRuk/LXS7Bpj6nzd9Lna
aSUPw6sSZmnjMoQxU40jxhmGxUtDE8QhcYawUVJolGnA6N///vftHryCrKH3
339/yJAh7777rmfaBZ0CwcobjClL7XYTWPFr/Xij0gcTl/hTqMBy68wZa1XB
WnKhKg2vrnSkutg02havulAhTlGGVMgvgmN9548zBU8RyHS1psbaeVaDokfs
OD+k9KCiJAsq4weKjzTjVTimWfG+2UwLxhQztiGj/dZ7QFYxlz7GAADfgUzM
Hdn+j2ZKx5LAnofnBSum7Vy/fp0JKeTFV199xUSeTiv5+uuvaeFr166xeJsH
Dx4wCYu8cHxyxGtfGzdutBamaJAhOUheKM69f/8+FYUIxCvaKBWLmIeOxybx
KhOlC4KVi5XYvECkC/wF6trYdlmwIlf25s2bXagEgpVPM2fOHDr42dnZVIX2
Xc2KfGpq1mz+7qAsKSxXDs00hGbpQ7P1YVmGgVmGITn+Q3L7DpllGFYgjiiV
RpVpxywUoyrEmMW62AX62AVCwjJpwnJ50krhoWa12jh5sTR9rZS5VUqYpzM/
ptMZ/IenGufsEAt2i4W7jJYmk6XxsazV/vlb9WUvyJUH5eqXpZrX5OWvByzc
J9e+Ka59GGQlrntb2PQL3cZ3+yw/atjyK6npnNx0Ttpx3rjlTEDDWwFrj5k3
nzCvPxZY26xf95q0/k1pzVFx+QtS1U6xfKtU1CDkrdKnLzRML5FSSsXJheKE
2drxmUJMinlEvH54vDAsQTM03hg21jAgUjsoduX6jZ4canaTbNiwwWg0kvvn
Jz/5iScdAHaAYOUNxvJKtVsFGimKMbWEQY5Q5YSus1PIQVSDUigh9ETFQaoR
WS9IZMv3Ok0FT4sp1g+SCpnSRUOhmHrDjGliLDbMptutj/Qia+edEqxodxTL
9PgIN+vTFdFlTF/ic2rRLig0PbaZI3PA8dZ91Lrw4QUA+CKORFiRmXvX1nzZ
BLsEehUeFqyYjHP9+nXF3JP86qBmdfv2bTtaEFM2SG2dTm9thmmR2Q3pDvlo
sCEKCgoKDg62VqsePHjAdCGaT5jnzp07rM5ONStrlalrghVp1Do4yvFKeJ3N
zgW6yaVr6AibY+usYEVG2Dp6DYJVL2Hjxo2iKNLx/+d//udf//rXanvkKn/4
wx9mWir8/1+aNCBbDs2UBuTIobly2GxxcJ5+yBz/8Ez/oTnG4UWmEYWGUcX6
MfPlqAWmsSWGmDIxYbk0cbk4aYU4ZZU8eblh0jIpY6sYM1fr56fx89MNnxmQ
s1k3u1HM36Er3COX7NfP3dMnZ7Wp6DlT8U5zyU5T2W7/sn0BC3YHLNwjrj0h
NZwW170jbvyFsOWXhg1v9135kv7Zd/XrT5jXHvNf+7px40m58Yzc9L6u8T19
/esBNbvNy16QVx8Rl70oL2ySSjYJBXVyZqUxpUQ7s0ycMlebZBESsuXo1IAR
8foREzUjkjTDJugGR5lDR2lDY/81Jtn11cTO8te//jUuLk6rJcPjR26hoqIi
11eLA8BQfZ7uojkYYWVdmNdSLmdkkHMV8VFsDZ21qqCQd6ia9ODmTXKcNzuL
4BTGdCe+C1/k5zMBjco1NAMVb4oTmYBjU7uzdsYpwYoeoTm+eGNDygbQ5umt
nGDFjrO4L2tvSd/5kDPHW/dRc+JDCwDwZZqammzGjfCQmTudMrhll0AIVl6F
JwWru3fv2pdQyEFWwFr/oZC5Dytjc+nf3//+dyb72BG+SDEqbd14BK+HXLp0
iW1GQH7aiUJkAk5HEgqr2Vr/4SGdJQWuX79OXFJoVo7Ps+g6Plcq6fQCdTr4
FBbqZj22jmtNbKGlK5VAsPJ1Pvzww0GDBpHxlyTpvffeU9sd9/Da68dDJxaI
z8wWQvKEZ7KFATmagbmawflieJ45PFs3rFA3vEQ/ssg4Yq4+cq5xTHGfSMsj
zapGmrhMmLRMTF5lTKrSzWwQo4s1j25OcUSGcfY2c8ZawbJDyt8hFe0W5u3X
Fe8wFjVJ5QcNZft1C18wVB4yVu5/vHhT34W7TTWHTcuaTcsOm1YeNa9+5TvV
Bx5b8oJpw0njhtNS4xmx8Yy09Zfis7+QN74jbTglrn3VvHin/8JG04JGw7zN
UlGDnLtcn7ZASF8oTCuVEy36+Gx9TIr/qETDiES/kUmaiAnSkJiAsFHaAdH6
weOOvfFWu8dD48h3le985ztkZH74wx++/PLL9KDvhucBb0P1ebqLdjkjg/XF
kWxRrHBH4VikQlIPzQFlPUT0iELeoSsK77a0XNu3z6bZCf2ixq+hY4mweKPq
GWnXfhMsJ5VN9cbaeccFKzbOHTlAjOlLjgtWNtcD2rnKjrTuo+byRxkA4Bu0
tLTQTQDr6uqs9ajm5maqL/k92l7QLS1CsPIqPCZY8TrSV1991VExXpqwmSqc
hQ9Zx2gxWJiQHa2GVH7nzh1WQxeWrfGtdJTZiZfg7Khn5HTWWT4uyynBik9c
zytLDlbi4AXi4506yuVOx5b9ykd8Oa41KS4QlgT2WsidkJqaumTJErUdcQPs
fiYfydXrtv6vAdPFZ3K0z2QKIbOk0FzNIIswxGIYkisPLdCOmC+MmqeNLBPG
lMtj5gWOzjVHF+vHV8kTloqTVorJa0xTV8hjCh4FWPlJETNkyx7/mat0OVtk
y06xYIdUvFsufT7AstlQuldXcUSqbJYWvyQufUO37OW+87eTn/KqY4YVrxpW
HdOveUPcdDqg7s2AujfExvflZ/9d3vQLadM78sa35fWnpLVvCnWviLVHjFVN
ppL1hrzVAekVfaYW6VPnG6aWGBLnmMbPMsbOlMemGkdOFkZNEoZNFIfE+w8c
aRgQ6Rcam1E4X62hPnjwYGxs7Oeff64YeQBcR/V5uhtn+o4kMmKFrSUdcoTG
LFH1g0XvWJ+uaKijVXhOGcujRWEZyPl2Ow0hY6mf3C5YsSOOBDI5LlixnRkd
rNDXw6jsmCufYgCAb8EkCxpMQoiLi6NZ1vn5mmJ7wS4Dwcqr8Jhgxcs7doJz
2HI/mwoPHwJkR//hZaIuqE+OnMLLOwQ7JXm5xpHd+rqgNdnE2Ur4kbdzgXg9
zZFsY+1d1ZoUOHuBKBCsfJ0eqTOwTrW0tGQUVet+lqYJyRFCsrShWdqBs+VB
c0yDZunC84XhJeKIEnHUPM2YMiFqof+YIlPMPGPcAtO4RXLSct20OuPwTK2f
HzF5aIo0Z68uc705bY0ur0nKb9IV7JKK9+rn7vTP2yKXHZQqDukWHZEWHxWX
HjMvetFcfVCuOyXVn5DWnhTWnRLXv61f/3bgsmbjuhPis78UN52W1p/Srzsh
NxwX645JtUfFmgNy1R5hwTadZY0xvUKfVqVLmS9PKRQnFQoTZmvHZegjp8gj
EzXDJ2iHxpsHxurDIv0GxvyvQTGtra3tPfQigt6M6vN0142t3bt35YrjsoBC
+qBSz+2LF1mgjrOCVaeqS6fW1tj4gMtRwDYEZO1a57BSGPNZkeupI+cdF6xY
rjCbNSvMWcGq0/vQqdZ91Fz6GAMAfA26MNCvYxzZSdBBIFh5FR4TrHjdxo5+
opBrFAoPHwfFx/BY46xc46wewus29svzco2DCo8qgpWDF4hcETsXyCZd05rc
UgkEqx4Akzusk6qp4Y77ef2N46EJs6Wfp2lCsqXQLE3YbGHQbOPgLHlovjCs
RIgoEUaWCqMX6MaUGaNK5HFV+nEVxvHzTROrTXFz/UMTDIOnyonVUsZmbdZW
88zVhqyNomW7lL9DLN4llew3FzxnLNouLjwoVzbLVUek6pelZa8GLtipX/6K
vOakvOYtqe64vPaEoeG4ruFk4MqXdQ1viRve1dWfkuvfkuvekFa9Ita8KFTt
Exfu1BfUGzIrhZyl2sxqIXWBMHWuNtGiGZ+jHzNVipykGZmkGZZgHBgdEDba
LyxaCItZv/W57h66Tu+BHnOT9BhaWlrIY9nXd/BRfZ7uuvHr6TpdfMdK8oIV
VavuXblinXS93WHBqv3b2/zx9kV+voML1ogDfKgV23qP/vrg5s2OTqQ7HrII
K5uxWNbOdyHCyo5oxtQkxwUrlpe+o9ApekWcat1HraufYACAr9LW1sby9vAE
Bwf7+n4uwA6eEawUy9zsu8RHLvGZrBRalv1Evry05dS2gw7qIby8Yyceqf3b
kUuka53W3K6GYMWHrnX5AnUEBCvgdqgQcezYsVOnTvFHfAt+hWBt/eZ+g6fp
Q9LEkAw5bJY4MFc/eJYcPlszrFiIKJFGlgpjyvRjioxR84X4JULCYl1CpWni
oj6JFQFTl8sz1gsz1gnpm6TMjaa0VbrcraJlh1i4XS7aLc173py32TBvn67i
kFR5SK46Ki15Rb/kaMCCfVLtG2Ltm7o1x+W64xKxtSflhhMByw8ba18TG06K
a96QVr0sLTskVD8vVuwyFtQbcpaJs1doZy3VzlwgTCsVJlm0E+bI0TP1kcma
UVP9hk/UDY4NDB0tDRzrFxY7OCnVM0P3u9/9bv/+/d3aFnAj2CXQS4ztNNf+
KCqJF53syAJMIWH5kRRiiB3BShFMxXQYm0m0qHv217IpKiSFFRm0mDM2Fbkv
8vPpFofME+tgMxd3CWSnk4Zsim+kJKvE2RxW1g6wS0NVRKda91Fz4UMMAPBt
2traTn6D2r6AbsczghWf+KhTtYEPSeKTKTml/PD6hiMykVN6iCLKyL4cpNDZ
Osp2xeN5wcqp7nd0gdxSuXsrgWDVg/niiy/69eun0WgaGhroEV/UrNo5tz/9
9NM0S0XAz6brfp5meCbNMCDFNHC6eXC6MKxQGD5PHFmqHVNuGF2kiykTxi8W
EqrFxBp94vKA8fP8Jy40JK+QU2uFzGd1GfXmtFppTpNoaZIKdwole3XF2835
W8UFh6SKg9Kiw+Lio3LNq/6LXjQu2ivVviWtfosKVvLa42L9CX3dW/5LXzAv
PSjXvi6tfElaelCq2GUqqDfkrRIsa7Q5K4T0xdqUMjF5rjYxT45N14+erhmd
Ig2fIIePMw4aK4dF+YXGmEPGvH36nfZuuyKs2mPHjn3/+98XRfGdd97pjoaA
24Fg5T3Gb/9nf90cK2a9pZ1CNbKZdJ1t/NdR6wpBie422KmW0m4VncXSp1P9
jQk7xKsv8vP5klStUuwSSCA18MXYfny8M7wQZLN1fjDZ0ktrVZAu2WOOOS5Y
8TnzSVt8taQ2msee/soku45a9/X0Vk58aAEAvQP7OwkCH8UzgpXj8Ujt35Ym
/sZF+ziVColPY/W3zsKx2p3UQ5yKR2r/tnbUaffb1RCs2HaHrlwgR8pDsALu
4sUXXxQEgVwarVYbHx//H//xH2p75B7eOvH2oIQ84ekU+Zk03TPTTCHT+wyc
Lg3L044oFUeVCGPnGUYXSjHl0rhFUkK1OHGplLTMPHGhcfJS0+QlxqkrdOkb
jWlrDbPWiXnPiZYmsXC7ULrH3/KcsXCbUHFQrjgkVjXL1S+Jy14NWLjXtPhF
Yc1JcfWb0po35Yf2hlj3lrT69YBFewIqdumXHJSr9pkLN+gKG8TC9VLOSm3m
YmFGhXZqqTapQBqfLUdNF0en6IZP1g8drxsUpx8YrRkYI4aOzi1d0N2j9OWX
X86bN08URXIDkNugoqKiu1sEbgGClVfZ1ZoaJjHxqah44/Uca8Gq/VGKpEvJ
yeQnW6rW/kgyImVohYokUV/W11NdiB2nrZOD5BS226BCYrIpVih0NqovsUAp
Poqs/dFSQdIEKcM2KGQaDvOElCdliNvEiJ9MalOoZ6xaKg2RwuQFO0jOspah
6HHSNHGANEFb5KPLmN6lCDljqx15IYtfAkmqJaeQd+nQ8RKizdZJv6xb91Fz
6OMKAOhNuGuXQOBVeECwUsQjOauHMK2JX4l2k/sSYhOFYGU/4VW7k3qIs4oN
X9gRscXDgtXf//53py4QH+rmiIcQrEA30dzc/Pjjj9MLlJaWprY7boN8ptZt
3v6/Q6Y+3EDwmQzdgOkBYdNNg7OkiCJhVKkcWWoYUyzHVErjFgsTFguJS/UT
q4yTqqVpa3VTV5imLjWm1PqnrJBzn5XydsiW7VLRLnnuHv+8jfqSPfLCZnnh
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
sLIZYaXIs3T79u1Ou+Y9gtXNmzf5U3w9wsqVbR8hWAHPQD50dBW8RqMpKysj
N217T9GsCFu37/5hRKr538bTm1N6arRxTIFhTL4+pliKny8nLNAlVYtTVknT
14gz6/UzVppTl0uzNog5G8XcraJlm1jQFJDTYCjYLs7dpSveIc/dKZbskEp3
yqW7jPmb/GevNcyuE+eskXLWCBkrtDMX6ybPMyRYpAl5mvjZfjGZ4uip+mET
AgZFy2FRfqFR2rCYokXLuqOb27Zt69u378MOStLZs2e7owngYZB0HeZD9mV9
Pb3i965cUd0ZmLWp+xwAAHiS06dPb926tdNiTU1N3e8L8DQuClb9+vXzjGCF
HFbO0n2CFXJYAe/nwYMHS5cuFQSBXr5Bgwbxu430AD7//POZOQWiJJHeCf8a
KUTONYzI1Y3J10UX68fNNY4rlpKWCFNXi9PrxBnrTNOXm2askrI3StmbpNzN
omWbLn+bf/ZaQ95WqWinVPCcrmCrXLBFKtwiFjWK+RsNWSvNMxcbZyyUUioN
SQX+4+fo4/PkcblydJp+1FRjRJJp8Dh54Di/sDghNH5qXil1yb16YHp6Or18
kiTNmjXrL3/5ixsrB2pBv3J09G3BV1B9ng7rbvuyvp5twEexuQUhTF1T6wkA
APAwbEJnvVQQ9AZcFKz4SX1HgXOK9FOqCFbuFVX4XQJ7gGCliF7r2jaOdlBR
sLJYLOz+DAkJgWDVS2DKyXvvvRccHEwu3+DBg2mQVU/id7/7rdFgfLgk8J8j
xBFFwrA5uhG50phiMXa+IW6uf6zFMGGhbtIy7fRazcwGw/RlxtRaMXuTnLVB
l7NVzNsmW7b6z2ow5m4QCpvkgkbJ8qxo2SRYNopzNgizG4zpK8zJpYEJs83x
ucb4OYbYWbqxaXLkNHHEVN3QJGlwvF9YnBQ2Pj5jNnXG7dFrM2fOJF377ne/
e+DAgW5qAngeCFYwnzC6VaLCLmdkqO4YjDe1nwQAAA9BM0oREEDVO3GjYGWx
WGw2odA3Ol3NpyhP9RNnl6F1q6jirADFl79+/Xqn5T0sWDk7Voryd+7csV9e
RcGKPd8IEREREKx6D0zcIHdLdnb2uXPn2nuc4tHa2po2c+b06dMtJeX/J3yq
LjxHGjpbP3y2OKZYiCuXxpWZYyzm8aWGCRX6xCrjlCX+yYsMqavkrI3ExIcp
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
9v8fjqvlsw==
    "], {{0, 425.25}, {1196.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{492.2249999999999, Automatic},
  ImageSizeRaw->{1196.25, 425.25},
  PlotRange->{{0, 1196.25}, {0, 425.25}}]], "Input",
 TextAlignment->Center,ExpressionUUID->"b85ed7f3-7c6a-ec45-a3f4-c876b324279b"],

Cell["\<\
Cerezo, M., Arrasmith, A., Babbush, R. et al. Variational quantum algorithms. \
Nat Rev Phys 3, 625\[Dash]644 (2021)\
\>", "Text",
 TextAlignment->Right,
 FontSize->9,ExpressionUUID->"419123e1-92f4-4c4e-8a1e-11876317fa0c"],

Cell["\<\
Now, rather than just describing it, let\[CloseCurlyQuote]s dive into \
parametrized circuits!\
\>", "Text",
 CellChangeTimes->{
  3.9548465916202946`*^9},ExpressionUUID->"d6d9ca1e-7814-0c49-a691-\
b9d8cee1b7f3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load Wolfram Quantum Framework", "Section",ExpressionUUID->"9fae4869-62db-214f-b9ae-43268b281003"],

Cell["\<\
First, we need to load the Wolfram Quantum Framework. Below is the command to \
install it, and if you already have it, simply load it:\
\>", "Text",
 CellChangeTimes->{
  3.954846620550329*^9},ExpressionUUID->"aa66aa90-ca13-b645-a986-\
992a2fbf90ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{"\"\<https://wolfr.am/DevWQCF\>\"", ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{3.954849425717087*^9},
 CellLabel->"In[67]:=",ExpressionUUID->"5c813704-d304-6147-907d-777847637b3c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.0\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.6.0\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\sebas\\\\AppData\\\\Roaming\\\\Mathematica\
\\\\Paclets\\\\Repository\\\\Wolfram__QuantumFramework-1.6.0\"", 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.6.0", "WolframVersion" -> 
    "13.1+", "PrimaryContext" -> "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {
        "Wolfram`QuantumFrameworkLoader`", {
         "Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}, 
         "Wolfram`QuantumFramework`Experimental`", 
         "Wolfram`QuantumFramework`ExampleRepository`", 
         "Wolfram`QuantumFramework`DiagramPlot`", 
         "Wolfram`QuantumFramework`SecondQuantization`", 
         "Wolfram`QuantumFramework`QuantumOptimization`"}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumSimilarity", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumPhaseSpaceTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{"IBMQ.paclet", "ServiceConnection_IBMQ-0.0.4.paclet"}, {
         "Cotengra.paclet", "Cotengra-0.1.paclet"}}}}, "Location" -> 
    "C:\\Users\\sebas\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\\
Wolfram__QuantumFramework-1.6.0"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.954849426703388*^9, 3.954849442421581*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"b2dccaf7-3b80-ec4b-a779-3908a165fb58"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]], "Code",
 InitializationCell->False,
 CellChangeTimes->{{3.889139402430415*^9, 3.88913940243405*^9}, {
   3.914445370949295*^9, 3.914445377460837*^9}, {3.9144454487962823`*^9, 
   3.914445468080778*^9}, {3.914445568918298*^9, 3.9144455689643407`*^9}, 
   3.9144458087286*^9, {3.914446159849004*^9, 3.914446160456131*^9}, 
   3.91467105361817*^9, {3.91512018920017*^9, 3.915120190716552*^9}, {
   3.916932303904995*^9, 3.916932304242816*^9}, 3.921668626945844*^9, {
   3.9375665606942835`*^9, 3.9375665706205225`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"7168c911-eecf-ce4c-ae54-3b5ece12f4eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parametrized Quantum Circuits", "Section",
 CellChangeTimes->{{3.9548470660374985`*^9, 3.9548470700623474`*^9}},
 CellID->35461336,ExpressionUUID->"4a719380-b8d4-dd45-ab0e-25baba065e4a"],

Cell[TextData[{
 "Variational Quantum Algorithms rely on Parameterized Quantum Circuits, a \
fancy term for quantum circuits that include gates with adjustable \
parameters. This algorithms work by exploring and comparing variational \
states ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Phi]", " ", 
       RowBox[{"(", "\[Theta]", ")"}]}]},
    "Ket"], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "a3f7ff66-5da4-294b-839a-6ee10c5b7320"],
 "  that depends on a set of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"{", " ", "\[Theta]", " ", "}"}], 
    RowBox[{"\[InvisibleComma]", "n"}]], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "1fc306f3-9d10-d248-9850-e35c756b4e0d"],
 " parameters. "
}], "Text",
 CellChangeTimes->{{3.9548470260927925`*^9, 3.9548470534837894`*^9}},
 CellID->583691851,ExpressionUUID->"1792628e-b171-af41-bbd5-e08e1bfb9369"],

Cell[TextData[{
 "You can build this variational states using a fixed initial state as ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"0"},
    "Ket"], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "e7c59ba8-8914-7242-8816-a87e3967408a"],
 " and a parametrized or variational quantum circuit ",
 Cell[BoxData[
  FormBox[
   RowBox[{"V", "(", 
    RowBox[{"\[Theta]", "\[InvisibleComma]", "\[InvisibleComma]"}], ")"}], 
   TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "828ecc50-8f0f-5948-96d0-695331d2cc5f"],
 ":"
}], "Text",
 CellID->97490106,ExpressionUUID->"55bbb9c0-d9ab-cf4a-b8a3-38b6a4967e72"],

Cell[BoxData[
 FormBox[
  RowBox[{
   TemplateBox[{
     RowBox[{"\[Phi]", " ", 
       RowBox[{"(", "\[Theta]", ")"}]}]},
    "Ket"], "=", 
   RowBox[{
    RowBox[{"V", "(", 
     RowBox[{"\[Theta]", "\[InvisibleComma]", "\[InvisibleComma]"}], ")"}], 
    TemplateBox[{"0"},
     "Ket"]}]}], TraditionalForm]], "DisplayFormula",
 TextAlignment->Center,
 CellID->501984331,ExpressionUUID->"83542243-cca6-0549-b4ea-9e983745fa25"],

Cell["\<\
Think of it this way: some quantum gates, like rotation gates, depend on a \
variable angle, while others, like Hadamard (H) gates or CNOT gates, have \
fixed operations with no adjustable parameters.\
\>", "Text",
 CellChangeTimes->{
  3.9548470156162853`*^9, {3.9548471116753807`*^9, 3.9548471134067993`*^9}, 
   3.9548471673574924`*^9},ExpressionUUID->"a290770f-8aba-9240-ab28-\
418acb2b1a59"],

Cell["\<\
We aim to train these variational quantum circuits using a classical \
optimizer that  fine-tune these parameters, in conjunction with a cost \
function that reflects the objective of our optimization. \
\>", "Text",
 CellChangeTimes->{{3.95484698828356*^9, 3.954846992134159*^9}, {
  3.9548471312898254`*^9, 3.9548471633225727`*^9}},
 CellID->658387201,ExpressionUUID->"e0de7d11-19b8-df40-b741-b791d662216b"],

Cell[TextData[{
 "Since the ",
 StyleBox["Wolfram Quantum Framework",
  FontWeight->"Bold"],
 " operates symbolically, defining parameterized quantum circuits is a \
natural process. This allows us to work with symbolic parameters instead of \
fixed numerical values, making it easier to optimize and analyze circuits."
}], "Text",
 CellChangeTimes->{
  3.9548471815438843`*^9},ExpressionUUID->"21f401fd-3c16-0f4c-a722-\
2c236a6da190"],

Cell[TextData[{
 StyleBox["Wolfram Quantum Framework",
  FontWeight->"Bold"],
 " supports ",
 StyleBox["\"free parameters\"",
  FontSlant->"Italic"],
 " in their quantum circuits, you only need to specify this tunable \
parameters by using the \"Parameters\" option:"
}], "Text",
 CellChangeTimes->{3.954847218593851*^9},
 CellID->171417182,ExpressionUUID->"c277dea8-a95d-e242-96da-01a6797a2857"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vqc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<00\>\"", ",", 
       RowBox[{
        RowBox[{"\"\<RX\>\"", "[", "\[Theta]1", "]"}], "\[Rule]", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{
        RowBox[{"\"\<RY\>\"", "[", "\[Theta]2", "]"}], "\[Rule]", 
        RowBox[{"{", "2", "}"}]}]}], "}"}], ",", 
     RowBox[{"\"\<Parameters\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.95484751716807*^9, 3.9548475202829895`*^9}},
 CellID->131182610,ExpressionUUID->"c72b3054-0535-ce4b-9646-6c1eef53704a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vqc", "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellLabel->"In[100]:=",
 CellID->589235324,ExpressionUUID->"953e1371-b9cc-9a43-9854-2d24d15cf958"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[Hue[0.62, 0.45, 0.87]], FaceForm[{Hue[0.62, 0.45, 0.87], 
       Opacity[0.3]}], GeometricTransformationBox[PolygonBox[CompressedData["
1:eJxVVAtM00ccLjd1iAwEhkwsELJGCigzg2FcZacRi9NK5jRMmEEBBYcbrYpp
I6A0Kw9HHQMsVBkPgeKYEamODRW9wxUdBjfKs0SnCNe6YmVR2/7rRnV16XXZ
L7lcvuRyv9f3faHpwo/3ABaLJXCcV/epk6+CgdH/xkP0fwzwh6yAaV8lA1f+
4ae9Gw9wWNy4RlrFwF9kW67uTgJYeHbFxEwZA8uqy4vbsgDev3Wkfa+UgT8n
y3hfSQBO9vsk/rVcBgpFA22GUoB5EdooXQYDj2Zm1zYoAT4fE8Gft4WBYTqu
b80ZgEtOxe1X8xjYrXpe2NEJsOJsahrgMDDfOxlorwPs6dsVv9SDgRcGG8vu
/wrw6o4losQZK+Rm3Wb3jgMcu+0hq2PACm/xUk2fTwFsvqEWf6m2QhG0f615
BPBGqVQwp8IKYxY2BXY/BVjXklIgElrhQN/jeL4N4PGm2QD3zVboc6wof/ss
wLnhauQZYYWTfJ59+gXAgyL/FT3zrFCjuHfP9hLgUU3/1b1TFlj5Qhlc6MAq
jvcoH1tgcKimSWoH+Ind/Uh9nQWyE95d5fYXwOIMtyF1ngWePm8qn2sB+FDz
+/KeFAv023eIq5wB2Gus4KgnzwIPL1Kt7zU4+jetDv+NbYFveSUM1/4OcPvo
O6vWsSzwRmdj4vIhR377Bk6D3gzFYYG1x28CXPdgsNv/thmGTCYYBi8DvGxR
gXbkRzNcSeok/ucAtpT7DM9vNsODU+xSYT3AT7nyO2z3aVi4a6hNMmpDIV2x
E5sMRijE9oqlXTYkcFNUd/cZYU1gilaqtKETBTtkzReMkMuXnNSIbWhNDnk7
8rQRWneqQyKTbKi06vXqgwojTA7KiXoWbUPZ6V5ZleVGmBItu/ipz3+4tT9P
0DLDuN6fmazQevYzrv88GhMnhtsYVz7dpZJMXinjqidbr4o6ksW46q2AIGc8
gUGufhqWJZWEM4j2G3NAfn9tsR5FOufBEZYGfb9Jj+i8isUTmT+8qUd0npz0
mqq+BwSdc87bwC3o3XiRoBPOfTTdnGr/5hhBdF+LW/cZp3cTRPfZuTUitWE9
QXTfh9duxsZIgigfyqdil/wdQFCLky/FeX/mPp9P0IiTT11zvy166UYQ5duT
74pkbBZBlI8S4rtg2xyCdE6+Xr5jfKPey4GdfL6m22AyBBNE+b4ciRXe7xFE
9bAGLNA8/oggqpexhSWJggMEUT3tyrglf6QkiOottjNfK9UQRPXofb3WesVM
ENWr12eLZ+PC9ajdqeeMhh0/NafpEdU7yEyqlNbpEfWDdR9c277nrh5Rv3im
nPEZCzIg6idaVY8+Oc2AqN9MmC55fNFqQNSPQnd2XJGbDOgf9u+AQQ==
         "]], {-0.1, 0}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TemplateBox[{"\"00\""},
           "Ket"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1.129626135594409, -1.5}], {{{0, 
         1}, {-1, 0}}, Center}]},
      TemplateBox[{"\"00\""}, "Ket"]],
     Annotation[#, 
      Ket[{"00"}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]1", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]1", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]1], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Y\"\>"], "(", "\[Theta]2", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Y\""], "[", "\[Theta]2", "]"}]],
     Annotation[#, 
      Subscript["R", "Y"][$CellContext`\[Theta]2], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  BoxID -> 
  "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 134.455131,\\\\n\\\\\\\"width\\\\\\\": 177.958984,\
\\\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"background\\\\\\\":  [254.996, 254.996, 254.996, \
1],\\\\n\\\\\\\"UserCoords\\\\\\\": [0.194390, -0.565055, 2.687839, \
-2.448956],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [0.500000, -2.000000],\\\\n\\\\\\\
\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \
\\\\\\\"name\\\\\\\": \\\\\\\"LineBox\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \
\\\\\\\"none\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,139], [244,139], [244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\
\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [137, 137, 137], \\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\
\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Butt\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\
\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[150.261,36.0423],[168.103,36.0423]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"LineBox\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"none\\\\\\\",\\\\n\
\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [137, 137, 137], \\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\
\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Butt\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\
\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[150.261,107.413],[168.103,107.413]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"LineBox\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"none\\\\\\\",\\\\n\
\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [137, 137, 137], \\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\
\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Butt\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\
\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,36.0423],[239.474,36.0423]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"LineBox\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"none\\\\\\\",\\\\n\
\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [137, 137, 137], \\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\
\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Butt\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\
\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,107.413],[239.474,107.413]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Tooltip\\\\\\\", \\\\\\\"delay\\\\\\\": \
0, \\\\\\\"label\\\\\\\": \\\\\\\"TemplateBox[{\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\"00\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"}, \\\\\\\
\\\\\\\\\"Ket\\\\\\\\\\\\\\\"]\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\
\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \
\\\\\\\"PolygonBox\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \
\\\\\\\"none\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [122.016, 149.965, \
221.848], \\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [122.016, 149.965, 221.848], \\\\\\\"opacity\\\\\\\": 0.3}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[150.261,16.4153], [150.261,127.04], [150.234,127.655], [150.155,128.266], \
[150.023,128.868], [149.839,129.456], [149.606,130.026], [149.324,130.574], \
[148.996,131.096], [148.625,131.587], [148.212,132.045], [147.761,132.465], \
[147.276,132.845], [146.76,133.181], [146.217,133.472], [145.651,133.715], \
[145.066,133.908], [144.466,134.05], [143.856,134.139], [143.241,134.176], \
[142.626,134.159], [142.013,134.09], [141.41,133.968], [140.818,133.794], \
[140.244,133.57], [139.692,133.298], [139.165,132.978], [138.668,132.615], \
[138.203,132.21], [137.776,131.766], [137.388,131.287], [137.043,130.777], \
[103.048,75.4646], [102.754,74.9363], [102.505,74.3849], [102.304,73.8145], \
[102.152,73.229], [102.05,72.6328], [101.998,72.03], [101.998,71.4251], \
[102.05,70.8224], [102.152,70.2261], [102.304,69.6407], [102.505,69.0702], \
[102.754,68.5188], [103.048,67.9905], [137.043,12.6783], [137.388,12.1678], \
[137.776,11.689], [138.203,11.2454], [138.668,10.8403], [139.165,10.4768], \
[139.692,10.1575], [140.244,9.88485], [140.818,9.66086], [141.41,9.48721], \
[142.013,9.36518], [142.626,9.29569], [143.241,9.27925], [143.856,9.31599], \
[144.466,9.40563], [145.066,9.54751], [145.651,9.74056], [146.217,9.98335], \
[146.76,10.2741], [147.276,10.6106], [147.761,10.9903], [148.212,11.4105], \
[148.625,11.8679], [148.996,12.3593], [149.324,12.8808], [149.606,13.4288], \
[149.839,13.9989], [150.023,14.5871], [150.155,15.1889], [150.234,15.7998]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": \
[1.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000], \
\\\\\\\"path\\\\\\\": [[66,5], [66,139], [244,139], \
[244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [122.016, 149.965, 221.848], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \
\\\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceform\\\\\\\": null, \\\\\\\"points\\\\\\\": \
[[150.261,16.4153],[150.261,127.04],[150.234,127.655],[150.155,128.266],[150.\
023,128.868],[149.839,129.456],[149.606,130.026],[149.324,130.574],[148.996,\
131.096],[148.625,131.587],[148.212,132.045],[147.761,132.465],[147.276,132.\
845],[146.76,133.181],[146.217,133.472],[145.651,133.715],[145.066,133.908],[\
144.466,134.05],[143.856,134.139],[143.241,134.176],[142.626,134.159],[142.\
013,134.09],[141.41,133.968],[140.818,133.794],[140.244,133.57],[139.692,133.\
298],[139.165,132.978],[138.668,132.615],[138.203,132.21],[137.776,131.766],[\
137.388,131.287],[137.043,130.777],[103.048,75.4646],[102.754,74.9363],[102.\
505,74.3849],[102.304,73.8145],[102.152,73.229],[102.05,72.6328],[101.998,72.\
03],[101.998,71.4251],[102.05,70.8224],[102.152,70.2261],[102.304,69.6407],[\
102.505,69.0702],[102.754,68.5188],[103.048,67.9905],[137.043,12.6783],[137.\
388,12.1678],[137.776,11.689],[138.203,11.2454],[138.668,10.8403],[139.165,10.\
4768],[139.692,10.1575],[140.244,9.88485],[140.818,9.66086],[141.41,9.48721],[\
142.013,9.36518],[142.626,9.29569],[143.241,9.27925],[143.856,9.31599],[144.\
466,9.40563],[145.066,9.54751],[145.651,9.74056],[146.217,9.98335],[146.76,10.\
2741],[147.276,10.6106],[147.761,10.9903],[148.212,11.4105],[148.625,11.8679],\
[148.996,12.3593],[149.324,12.8808],[149.606,13.4288],[149.839,13.9989],[150.\
023,14.5871],[150.155,15.1889],[150.234,15.7998], [150.261,16.4153]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Inset\\\\\\\", \\\\\\\"metadata\\\\\\\": \
{\\\\\\\"transform\\\\\\\": [0, 1, -1, 0, 140.975, 60.8291], \
\\\\\\\"localRect\\\\\\\": {\\\\\\\"left\\\\\\\": 0, \\\\\\\"top\\\\\\\": 0, \
\\\\\\\"right\\\\\\\": 21.7969, \\\\\\\"bottom\\\\\\\": 16.4531}, \\\\\\\"pos\
\\\\\\\": [1.12963, -1.5], \\\\\\\"opos\\\\\\\": [0.5, \
0.5]},\\\\n\\\\\\\"boxdata\\\\\\\": \\\\\\\"\\\\\\\\nStyleBox[\\\\\\\\n \
StyleBox[\\\\\\\\n  TemplateBox[{\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"00\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\"},\\\\\\\\n   \
\\\\\\\\\\\\\\\"Ket\\\\\\\\\\\\\\\"],\\\\\\\\n  StripOnInput->False,\\\\\\\\n \
 FontFamily->\\\\\\\\\\\\\\\"Roboto\\\\\\\\\\\\\\\",\\\\\\\\n  \
FontSize->11,\\\\\\\\n  FontColor->GrayLevel[0],\\\\\\\\n  \
Background->GrayLevel[0, 0]],\\\\\\\\n \
FontFamily->\\\\\\\\\\\\\\\"Arial\\\\\\\\\\\\\\\",\\\\\\\\n FontSize->10,\\\\\
\\\\n FontWeight->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n FontSlant->\
\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
FontTracking->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
PrivateFontOptions->{\\\\\\\\\\\\\\\"OperatorSubstitution\\\\\\\\\\\\\\\"->\
True},\\\\\\\\n FontColor->LightDarkSwitched[GrayLevel[0]],\\\\\\\\n \
FontOpacity->Automatic,\\\\\\\\n Background->None]\\\\\\\"}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Tooltip\\\\\\\", \\\\\\\"delay\\\\\\\": \
0, \\\\\\\"label\\\\\\\": \\\\\\\"RowBox[{SubscriptBox[\\\\\\\\\\\\\\\"\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\"R\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"X\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"], \\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\[Theta]1\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]\\\
\\\\\\\\\\\\\"}]\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\
\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"RectangleBox\\\\\
\\\",\\\\n\\\\\\\"metadata\\\\\\\": \
\\\\\\\"none\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,139], [244,139], [244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, 178.844], \
\\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [134.763, 120.008, 178.844], \\\\\\\"opacity\\\\\\\": 0.3}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[175.241,9.27828], [175.241,9.27828], [174.117,9.36719], [173.032,9.62862], \
[172.003,10.0546], [171.051,10.6373], [170.194,11.3687], [169.463,12.2258], \
[168.88,13.1782], [168.454,14.2067], [168.192,15.2921], [168.103,16.4153], \
[168.103,55.6692], [168.192,56.7924], [168.454,57.8778], [168.88,58.9063], \
[169.463,59.8587], [170.194,60.7158], [171.051,61.4472], [172.003,62.0299], \
[173.032,62.4559], [174.117,62.7173], [175.241,62.8062], [214.494,62.8062], \
[215.618,62.7173], [216.703,62.4559], [217.732,62.0299], [218.684,61.4472], \
[219.541,60.7158], [220.272,59.8587], [220.855,58.9063], [221.281,57.8778], \
[221.543,56.7924], [221.631,55.6692], [221.631,16.4153], [221.543,15.2921], \
[221.281,14.2067], [220.855,13.1782], [220.272,12.2258], [219.541,11.3687], \
[218.684,10.6373], [217.732,10.0546], [216.703,9.62862], [215.618,9.36719], \
[214.494,9.27828], [175.241,9.27828]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,139], [244,139], [244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\
\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [134.763, 120.008, 178.844], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \
\\\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceform\\\\\\\": null, \\\\\\\"points\\\\\\\": \
[[175.241,9.27828],[175.241,9.27828]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[175.241,9.27828],[170.194,11.3687]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[170.194,11.3687],[168.103,16.4153]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[168.103,16.4153],[168.103,55.6692]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[168.103,55.6692],[170.194,60.7158]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[170.194,60.7158],[175.241,62.8062]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[175.241,62.8062],[214.494,62.8062]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[214.494,62.8062],[219.541,60.7158]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[219.541,60.7158],[221.631,55.6692]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,55.6692],[221.631,16.4153]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,16.4153],[219.541,11.3687]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[219.541,11.3687],[214.494,9.27828]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[214.494,9.27828],[175.241,9.27828]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Inset\\\\\\\", \\\\\\\"metadata\\\\\\\": \
{\\\\\\\"transform\\\\\\\": [1, 0, 0, 1, 179.055, 29.2923], \\\\\\\"localRect\
\\\\\\\": {\\\\\\\"left\\\\\\\": 0, \\\\\\\"top\\\\\\\": 0, \\\\\\\"right\\\\\
\\\": 31.625, \\\\\\\"bottom\\\\\\\": 13.5}, \\\\\\\"pos\\\\\\\": [2, -1], \\\
\\\\\"opos\\\\\\\": [0.5, 0.5]},\\\\n\\\\\\\"boxdata\\\\\\\": \
\\\\\\\"\\\\\\\\nStyleBox[\\\\\\\\n StyleBox[\\\\\\\\n  RowBox[{\\\\\\\\n   \
SubscriptBox[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\<\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\
R\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\>\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\<\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"X\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\>\\\\\\\\\\\\\\\"], \\\\\\\\\\\\\\\"(\\\\\
\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\[Theta]1\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"}],\\\\\\\\n  StripOnInput->False,\\\\\\\\n  \
FontFamily->\\\\\\\\\\\\\\\"Roboto\\\\\\\\\\\\\\\",\\\\\\\\n  FontSize->11,\\\
\\\\\\n  FontColor->GrayLevel[0],\\\\\\\\n  Background->GrayLevel[0, 0]],\\\\\
\\\\n FontFamily->\\\\\\\\\\\\\\\"Arial\\\\\\\\\\\\\\\",\\\\\\\\n \
FontSize->10,\\\\\\\\n FontWeight->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\
\\\\n FontSlant->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
FontTracking->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
PrivateFontOptions->{\\\\\\\\\\\\\\\"OperatorSubstitution\\\\\\\\\\\\\\\"->\
True},\\\\\\\\n FontColor->LightDarkSwitched[GrayLevel[0]],\\\\\\\\n \
FontOpacity->Automatic,\\\\\\\\n Background->None]\\\\\\\"}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Tooltip\\\\\\\", \\\\\\\"delay\\\\\\\": \
0, \\\\\\\"label\\\\\\\": \\\\\\\"RowBox[{SubscriptBox[\\\\\\\\\\\\\\\"\\\\\\\
\\\\\\\\\\\\\\\\\\\\\\\\\"R\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
\\\"\\\\\\\\\\\\\\\"], \\\\\\\\\\\\\\\"[\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\[Theta]2\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"]\\\
\\\\\\\\\\\\\"}]\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\
\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\\\"RectangleBox\\\\\
\\\",\\\\n\\\\\\\"metadata\\\\\\\": \
\\\\\\\"none\\\\\\\",\\\\n\\\\\\\"primitives\\\\\\\":[\\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,139], [244,139], [244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, 178.844], \
\\\\\\\"opacity\\\\\\\": 0.3, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [134.763, 120.008, 178.844], \\\\\\\"opacity\\\\\\\": 0.3}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[175.241,80.6489], [175.241,80.6489], [174.117,80.7378], [173.032,80.9992], \
[172.003,81.4253], [171.051,82.0079], [170.194,82.7393], [169.463,83.5964], \
[168.88,84.5488], [168.454,85.5773], [168.192,86.6627], [168.103,87.786], \
[168.103,127.04], [168.192,128.163], [168.454,129.248], [168.88,130.277], \
[169.463,131.229], [170.194,132.086], [171.051,132.818], [172.003,133.4], \
[173.032,133.827], [174.117,134.088], [175.241,134.177], [214.494,134.177], \
[215.618,134.088], [216.703,133.827], [217.732,133.4], [218.684,132.818], \
[219.541,132.086], [220.272,131.229], [220.855,130.277], [221.281,129.248], \
[221.543,128.163], [221.631,127.04], [221.631,87.786], [221.543,86.6627], \
[221.281,85.5773], [220.855,84.5488], [220.272,83.5964], [219.541,82.7393], \
[218.684,82.0079], [217.732,81.4253], [216.703,80.9992], [215.618,80.7378], \
[214.494,80.6489], [175.241,80.6489]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,139], [244,139], [244,5]]},\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\
\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [134.763, 120.008, 178.844], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {\\\\\\\"absolute\\\\\\\": 1}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \
\\\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceform\\\\\\\": null, \\\\\\\"points\\\\\\\": \
[[175.241,80.6489],[175.241,80.6489]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[175.241,80.6489],[170.194,82.7393]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[170.194,82.7393],[168.103,87.786]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[168.103,87.786],[168.103,127.04]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[168.103,127.04],[170.194,132.086]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[170.194,132.086],[175.241,134.177]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[175.241,134.177],[214.494,134.177]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[214.494,134.177],[219.541,132.086]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[219.541,132.086],[221.631,127.04]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,127.04],[221.631,87.786]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[221.631,87.786],[219.541,82.7393]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[219.541,82.7393],[214.494,80.6489]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Line\\\\\\\", \\\\\\\"antialiased\\\\\\\" \
: true, \\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [134.763, 120.008, \
178.844], \\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": \
{\\\\\\\"absolute\\\\\\\": 1}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.25}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceform\\\\\\\": null, \
\\\\\\\"points\\\\\\\": [[214.494,80.6489],[175.241,80.6489]]}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Inset\\\\\\\", \\\\\\\"metadata\\\\\\\": \
{\\\\\\\"transform\\\\\\\": [1, 0, 0, 1, 179.172, 100.663], \\\\\\\"localRect\
\\\\\\\": {\\\\\\\"left\\\\\\\": 0, \\\\\\\"top\\\\\\\": 0, \\\\\\\"right\\\\\
\\\": 31.3906, \\\\\\\"bottom\\\\\\\": 13.5}, \\\\\\\"pos\\\\\\\": [2, -2], \
\\\\\\\"opos\\\\\\\": [0.5, 0.5]},\\\\n\\\\\\\"boxdata\\\\\\\": \
\\\\\\\"\\\\\\\\nStyleBox[\\\\\\\\n StyleBox[\\\\\\\\n  RowBox[{\\\\\\\\n   \
SubscriptBox[\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\<\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\
R\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\>\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\<\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Y\\\\\\\\\\\\\
\\\\\\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\>\\\\\\\\\\\\\\\"], \\\\\\\\\\\\\\\"(\\\\\
\\\\\\\\\\\", \\\\\\\\\\\\\\\"\\\\\\\\\\\\\\\\[Theta]2\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\")\\\\\\\\\\\\\\\"}],\\\\\\\\n  StripOnInput->False,\\\\\\\\n  \
FontFamily->\\\\\\\\\\\\\\\"Roboto\\\\\\\\\\\\\\\",\\\\\\\\n  FontSize->11,\\\
\\\\\\n  FontColor->GrayLevel[0],\\\\\\\\n  Background->GrayLevel[0, 0]],\\\\\
\\\\n FontFamily->\\\\\\\\\\\\\\\"Arial\\\\\\\\\\\\\\\",\\\\\\\\n \
FontSize->10,\\\\\\\\n FontWeight->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\
\\\\n FontSlant->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
FontTracking->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
PrivateFontOptions->{\\\\\\\\\\\\\\\"OperatorSubstitution\\\\\\\\\\\\\\\"->\
True},\\\\\\\\n FontColor->LightDarkSwitched[GrayLevel[0]],\\\\\\\\n \
FontOpacity->Automatic,\\\\\\\\n Background->None]\\\\\\\"}]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Inset\\\\\\\", \\\\\\\"metadata\\\\\\\": \
{\\\\\\\"transform\\\\\\\": [1, 0, 0, 1, 66, 30.3704], \
\\\\\\\"localRect\\\\\\\": {\\\\\\\"left\\\\\\\": 0, \\\\\\\"top\\\\\\\": 0, \
\\\\\\\"right\\\\\\\": 6.19922, \\\\\\\"bottom\\\\\\\": 11.3438}, \\\\\\\"pos\
\\\\\\\": [0.28125, -1], \\\\\\\"opos\\\\\\\": [1, 0.5]},\\\\n\\\\\\\"boxdata\
\\\\\\\": \\\\\\\"\\\\\\\\nStyleBox[\\\\\\\\n \
StyleBox[\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\",\\\\\\\\n  \
StripOnInput->False,\\\\\\\\n  FontSize->10,\\\\\\\\n  FontSlant->Italic,\\\\\
\\\\n  FontColor->RGBColor[0.537254, 0.537254, 0.537254],\\\\\\\\n  \
Background->GrayLevel[0, 0]],\\\\\\\\n \
FontFamily->\\\\\\\\\\\\\\\"Arial\\\\\\\\\\\\\\\",\\\\\\\\n FontSize->10,\\\\\
\\\\n FontWeight->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n FontSlant->\
\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
FontTracking->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
PrivateFontOptions->{\\\\\\\\\\\\\\\"OperatorSubstitution\\\\\\\\\\\\\\\"->\
True},\\\\\\\\n FontColor->LightDarkSwitched[GrayLevel[0]],\\\\\\\\n \
FontOpacity->Automatic,\\\\\\\\n Background->None]\\\\\\\"}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Inset\\\\\\\", \\\\\\\"metadata\\\\\\\": \
{\\\\\\\"transform\\\\\\\": [1, 0, 0, 1, 66, 101.741], \
\\\\\\\"localRect\\\\\\\": {\\\\\\\"left\\\\\\\": 0, \\\\\\\"top\\\\\\\": 0, \
\\\\\\\"right\\\\\\\": 6.19922, \\\\\\\"bottom\\\\\\\": 11.3438}, \\\\\\\"pos\
\\\\\\\": [0.28125, -2], \\\\\\\"opos\\\\\\\": [1, 0.5]},\\\\n\\\\\\\"boxdata\
\\\\\\\": \\\\\\\"\\\\\\\\nStyleBox[\\\\\\\\n \
StyleBox[\\\\\\\\\\\\\\\"2\\\\\\\\\\\\\\\",\\\\\\\\n  \
StripOnInput->False,\\\\\\\\n  FontSize->10,\\\\\\\\n  FontSlant->Italic,\\\\\
\\\\n  FontColor->RGBColor[0.537254, 0.537254, 0.537254],\\\\\\\\n  \
Background->GrayLevel[0, 0]],\\\\\\\\n \
FontFamily->\\\\\\\\\\\\\\\"Arial\\\\\\\\\\\\\\\",\\\\\\\\n FontSize->10,\\\\\
\\\\n FontWeight->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n FontSlant->\
\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
FontTracking->\\\\\\\\\\\\\\\"Plain\\\\\\\\\\\\\\\",\\\\\\\\n \
PrivateFontOptions->{\\\\\\\\\\\\\\\"OperatorSubstitution\\\\\\\\\\\\\\\"->\
True},\\\\\\\\n FontColor->LightDarkSwitched[GrayLevel[0]],\\\\\\\\n \
FontOpacity->Automatic,\\\\\\\\n Background->None]\\\\\\\"}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
0.232422, \\\\\\\"top\\\\\\\": -0.578125, \\\\\\\"right\\\\\\\": 2.67383, \
\\\\\\\"bottom\\\\\\\": -2.42188},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \\\\n{\
\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\
\\\\\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\
\\\\\\\": 2.714326, \\\\\\\"top\\\\\\\": -69.107283, \\\\\\\"right\\\\\\\": \
176.958984, \\\\\\\"bottom\\\\\\\": \
62.482283}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":[1.77958984375e2,1.\
3445513105468757e2]}\"}",
  ImageSize->{177.958984375, 134.45513105468757`}]], "Output",
 CellLabel->"Out[100]=",
 CellID->103571544,ExpressionUUID->"06ad06b7-a2fc-8a4d-a133-71b0def93a6d"]
}, Open  ]],

Cell[TextData[{
 "The parameters defined for a Wolfram Quantum Framework Operator are \
heritable, so you do not need to redefine it in later steps. For example we \
can calculate the resultant ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Phi]", " ", 
       RowBox[{"(", "\[Theta]", ")"}]}]},
    "Ket"], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "850d6d29-2b02-5c47-b151-0d52c7d54043"],
 " state from our defined variational circuit:"
}], "Text",
 CellID->244802441,ExpressionUUID->"80577f78-2b1a-4744-9063-6cd04534d892"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vqs", " ", "=", " ", 
  RowBox[{"vqc", "[", "]"}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->288251955,ExpressionUUID->"745e3a75-d188-d942-9a73-24dca0ab7a71"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.032937649502419`, {0., 10.032937649502419`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAIkrA+Bf1+8/osodfH2a7T/0
DplFzjTqP/ibvYz2qu8/Tx5218r97T8WyInjCljqP5TW5q6iyO8/iuyr/nA+
7T99o9IfLKLqP2RZpBISMu8/CY6nQXye6D8XkxjEnMrmPwUu00qi2+4/pFSq
CO+k7j8SYe+wFe3oP9kfdR/7IO8/pUhU8Pq+4z+gO27p7eHEP1a3CRMWye8/
q9/qhgN77T/n4P4L+bXpPy46l7kTd+8/0uxrorcK6z/Lu/IEM7XpP6BREiN0
Xu4/EM/6qqSA7T8MqQtrzprkP5LznchxdO0/PuKGhpCz6z/sjxo6cZbaPyRP
eOJFB+8/YWdfeoG/5z/aK2rmTyvnP4jQPNXgc+8/ADOYhvUM6j9h2R4UE4Dm
P9PuzRPLNew/5sCwEwia7T8XgubiYRXiP1mkhsaWzO8/gV76lO0b7T8YOA8R
V4PpP9KI0r+rZe8/0a7qtaRq7j9Ftus1TkjqP6Shh2e/DO0/JNZjjCV67T9p
jSN14RnhP45+zPk=
              "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
             RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
             False, FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
             PlotRangeClipping -> True, ExpressionUUID -> 
             "7821533e-41b2-4574-91f7-4e9fb4cd58f1"], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAIkrA+Bf1+8/osodfH2a7T/0
DplFzjTqP/ibvYz2qu8/Tx5218r97T8WyInjCljqP5TW5q6iyO8/iuyr/nA+
7T99o9IfLKLqP2RZpBISMu8/CY6nQXye6D8XkxjEnMrmPwUu00qi2+4/pFSq
CO+k7j8SYe+wFe3oP9kfdR/7IO8/pUhU8Pq+4z+gO27p7eHEP1a3CRMWye8/
q9/qhgN77T/n4P4L+bXpPy46l7kTd+8/0uxrorcK6z/Lu/IEM7XpP6BREiN0
Xu4/EM/6qqSA7T8MqQtrzprkP5LznchxdO0/PuKGhpCz6z/sjxo6cZbaPyRP
eOJFB+8/YWdfeoG/5z/aK2rmTyvnP4jQPNXgc+8/ADOYhvUM6j9h2R4UE4Dm
P9PuzRPLNew/5sCwEwia7T8XgubiYRXiP1mkhsaWzO8/gV76lO0b7T8YOA8R
V4PpP9KI0r+rZe8/0a7qtaRq7j9Ftus1TkjqP6Shh2e/DO0/JNZjjCV67T9p
jSN14RnhP45+zPk=
              "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
             RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
             False, FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
             PlotRangeClipping -> True, ExpressionUUID -> 
             "122db977-4739-43d2-8a70-611ba4508beb"], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity"], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], 
                  "SummaryItem"]}], ""}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"]], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {4}, 0, {
    1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
     Cos[Rational[1, 2] $CellContext`\[Theta]1] 
      Cos[Rational[1, 2] $CellContext`\[Theta]2], 
      Cos[Rational[1, 2] $CellContext`\[Theta]1] 
      Sin[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
      Cos[Rational[1, 2] $CellContext`\[Theta]2] 
      Sin[Rational[1, 2] $CellContext`\[Theta]1], Complex[0, -1] 
      Sin[Rational[1, 2] $CellContext`\[Theta]1] 
      Sin[Rational[1, 2] $CellContext`\[Theta]2]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, 
     "ParameterSpec" -> {{$CellContext`\[Theta]1, 0, 
        1}, {$CellContext`\[Theta]2, 0, 1}}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->43886257,ExpressionUUID->"3570a6ea-f607-2d40-b140-e9b4b817f519"]
}, Open  ]],

Cell["We can verify that the \"Parameters\" option values:", "Text",
 CellID->442250687,ExpressionUUID->"94f8c3b9-8142-a846-a6da-aeb4ebff95e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vqs", "[", "\"\<Parameters\>\"", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->314916099,ExpressionUUID->"28793778-f80a-0b4e-b454-ba8a8cabb019"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->265705957,ExpressionUUID->"808cf7d1-509e-a549-8c18-67a2c8f20474"]
}, Open  ]],

Cell["\<\
This option simplifies the repeated execution of the circuit by using the \
symbolic computation capabilities provided by the Wolfram Quantum Framework:\
\>", "Text",
 CellID->27661618,ExpressionUUID->"8fd63fd2-cacb-9247-8f17-df91084bb0a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vqc", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->51246933,ExpressionUUID->"166221d7-e45b-ad47-9471-ea050a0362cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]2", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]1", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> 
     False]]}]}]], "Output",
 CellLabel->"Out[6]=",
 CellID->141224996,ExpressionUUID->"3f303f91-414e-344a-bb28-3c12be462eac"]
}, Open  ]],

Cell["Replace \[Theta]1 value as follows:", "Text",
 CellID->13228737,ExpressionUUID->"0c843512-e98c-5140-87d3-44f9b8cca96e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vqc", "[", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{"\[Theta]1", "\[Rule]", "0"}], "\[RightAssociation]"}], "]"}], 
  "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->273488666,ExpressionUUID->"59cefe9b-2da9-4046-8747-cafd3e98ac68"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["\[Theta]2", "2"], "]"}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]}], "+", 
  RowBox[{
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]2", "2"], "]"}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> 
     False]]}]}]], "Output",
 CellLabel->"Out[7]=",
 CellID->346118142,ExpressionUUID->"37f50b33-0fe4-a24f-805d-ed6e6fc4bfa0"]
}, Open  ]],

Cell["\<\
As mentioned earlier, you can use the parameters at any stage of your \
algorithm, as they are carried through each step:\
\>", "Text",
 CellID->19311713,ExpressionUUID->"ebd3d8f7-3d89-c844-8e68-e38c549acf39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vqs", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[91]:=",
 CellID->79153954,ExpressionUUID->"cc2b009f-2f68-ef42-805a-45d3c34488d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["\[Theta]2", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]1", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]1", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]2", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> 
     False]]}]}]], "Output",
 CellLabel->"Out[91]=",
 CellID->43572769,ExpressionUUID->"a20c5fb9-f208-5b45-b6ca-1eead9fd4b0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vqs", "[", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\[Theta]2", "\[Rule]", "0"}], ",", 
     RowBox[{"\[Theta]1", "\[Rule]", "0"}]}], "\[RightAssociation]"}], "]"}], 
  "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->241601869,ExpressionUUID->"b1c25668-b903-ac4f-ad40-7b0f098734f8"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{"0", "\[InvisibleSpace]", "0"}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]], "Output",
 CellLabel->"Out[8]=",
 CellID->54608874,ExpressionUUID->"70e71718-f281-0547-bf77-0746212f0995"]
}, Open  ]],

Cell["\<\
You can directly replace the values for each parameter following the same \
order you defined them:\
\>", "Text",
 CellID->395982017,ExpressionUUID->"af740633-1f03-c24e-9e92-925216e615e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vqs", "[", 
   RowBox[{"0", ",", "0"}], "]"}], "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[95]:=",
 CellID->66592513,ExpressionUUID->"036d2fbe-9a48-7f4a-ac4d-00705948f141"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   TemplateBox[{
     RowBox[{"0", "\[InvisibleSpace]", "0"}]},
    "Ket"],
   FontWeight->"Plain"],
  Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]], "Output",
 CellLabel->"Out[95]=",
 CellID->440269759,ExpressionUUID->"d1de4232-4f28-2f47-8eeb-e464308069a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"vqs", "[", 
   RowBox[{"a", ",", "b"}], "]"}], "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[99]:=",
 CellID->208188513,ExpressionUUID->"09afcde9-efa1-954f-901d-2eaf85175596"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["a", "2"], "]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["b", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]}], "+", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", 
     FractionBox["a", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["b", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Cos", "[", 
     FractionBox["b", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["a", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["a", "2"], "]"}], " ", 
    RowBox[{"Sin", "[", 
     FractionBox["b", "2"], "]"}]}], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> 
     False]]}]}]], "Output",
 CellLabel->"Out[99]=",
 CellID->117803623,ExpressionUUID->"38d92a77-3f6d-1941-b9e4-3e03a5388706"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ansatz circuits", "Section",
 CellChangeTimes->{{3.9546043775473137`*^9, 
  3.9546043822578354`*^9}},ExpressionUUID->"577a03f4-0535-7040-be6c-\
3e5c805f5e01"],

Cell[CellGroupData[{

Cell["Initial State Preparation", "Subsection",
 CellChangeTimes->{{3.9546043669300427`*^9, 
  3.9546043746509*^9}},ExpressionUUID->"b273a3a2-3012-d044-a060-473be4195779"],

Cell[TextData[{
 "A reference state serves as the fixed starting point for our problem. To \
prepare a reference state, we apply a non-parameterized unitary gate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["U", "R"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ac83a0cd-8086-9948-9399-8cbf13f66fc2"],
 "\:200b at the beginning of our quantum circuit, ensuring that our initial \
state is given by:"
}], "Text",
 CellChangeTimes->{{3.95484762196982*^9, 
  3.9548476346109047`*^9}},ExpressionUUID->"882f61e6-ca69-c547-83e3-\
725a139c4a49"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      TemplateBox[{
        SubscriptBox["\[Psi]", "i"]},
       "Ket"], "=", 
      RowBox[{
       SubscriptBox["U", "R"], 
       TemplateBox[{"0"},
        "Ket"]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"5426dcef-c8e5-ba43-ab4d-b09d75498491"]], \
"Text",ExpressionUUID->"5f39d741-99d1-a045-948d-61ccd951a94b"],

Cell["\<\
If you have an educated guess or an existing optimal solution, using it as \
the reference state can help the variational algorithm converge faster.\
\>", "Text",
 CellChangeTimes->{
  3.954847666709379*^9},ExpressionUUID->"0fabb7eb-e1af-af44-84fb-\
65ad7abcd91c"],

Cell["\<\
The simplest reference state is the default state, where we initialize an \
n-qubit quantum circuit in the all-zero state:\
\>", "Text",
 CellChangeTimes->{{3.9548476739834003`*^9, 
  3.9548476791173344`*^9}},ExpressionUUID->"44cfed5e-c02a-864a-a2f6-\
adada590a18d"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       TemplateBox[{
         SubscriptBox["\[Psi]", "i"]},
        "Ket"], "=", 
       SuperscriptBox[
        TemplateBox[{"0"},
         "Ket"], 
        RowBox[{"\[TensorProduct]", "n"}]]}], ",", " ", 
      RowBox[{
       SubscriptBox["U", "R"], "=", "\[DoubleStruckOne]"}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"71de4771-fe03-5047-86b3-2753b83fb7af"]], \
"Text",ExpressionUUID->"600bd1dc-7085-d545-b3cf-e02b94038edf"],

Cell["\<\
For this default state, our unitary operator is simply the identity operator. \
Due to its simplicity, this default state is widely used as a reference state \
in many applications.\
\>", "Text",
 CellChangeTimes->{{3.9548476892788754`*^9, 
  3.9548476985569477`*^9}},ExpressionUUID->"ef9d9cf6-c969-dc40-95b8-\
e75cf00133b9"],

Cell["\<\
If we want to start with a more complex reference state that involves \
superposition and entanglement, we can prepare a state such as:\
\>", "Text",
 CellChangeTimes->{
  3.9548476958292828`*^9},ExpressionUUID->"2f772bb8-3a6c-bc4b-905a-\
d768133886be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<H\>\"", "->", "1"}], ",", 
       RowBox[{"\"\<CNOT\>\"", "->", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}], ",", 
     RowBox[{
     "\"\<Label\>\"", "->", "\"\<\!\(\*SubscriptBox[\(U\), \(R\)]\)\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<00\>\"", ",", "qc"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qc", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"ImageSize", "->", "Small"}]}], "]"}]}], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"33a39aa6-162d-b14a-9860-90411cf07dec"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -1}, {3.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -2}, {3.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[Hue[0.62, 0.45, 0.87]], FaceForm[{Hue[0.62, 0.45, 0.87], 
       Opacity[0.3]}], GeometricTransformationBox[PolygonBox[CompressedData["
1:eJxVVAtM00ccLjd1iAwEhkwsELJGCigzg2FcZacRi9NK5jRMmEEBBYcbrYpp
I6A0Kw9HHQMsVBkPgeKYEamODRW9wxUdBjfKs0SnCNe6YmVR2/7rRnV16XXZ
L7lcvuRyv9f3faHpwo/3ABaLJXCcV/epk6+CgdH/xkP0fwzwh6yAaV8lA1f+
4ae9Gw9wWNy4RlrFwF9kW67uTgJYeHbFxEwZA8uqy4vbsgDev3Wkfa+UgT8n
y3hfSQBO9vsk/rVcBgpFA22GUoB5EdooXQYDj2Zm1zYoAT4fE8Gft4WBYTqu
b80ZgEtOxe1X8xjYrXpe2NEJsOJsahrgMDDfOxlorwPs6dsVv9SDgRcGG8vu
/wrw6o4losQZK+Rm3Wb3jgMcu+0hq2PACm/xUk2fTwFsvqEWf6m2QhG0f615
BPBGqVQwp8IKYxY2BXY/BVjXklIgElrhQN/jeL4N4PGm2QD3zVboc6wof/ss
wLnhauQZYYWTfJ59+gXAgyL/FT3zrFCjuHfP9hLgUU3/1b1TFlj5Qhlc6MAq
jvcoH1tgcKimSWoH+Ind/Uh9nQWyE95d5fYXwOIMtyF1ngWePm8qn2sB+FDz
+/KeFAv023eIq5wB2Gus4KgnzwIPL1Kt7zU4+jetDv+NbYFveSUM1/4OcPvo
O6vWsSzwRmdj4vIhR377Bk6D3gzFYYG1x28CXPdgsNv/thmGTCYYBi8DvGxR
gXbkRzNcSeok/ucAtpT7DM9vNsODU+xSYT3AT7nyO2z3aVi4a6hNMmpDIV2x
E5sMRijE9oqlXTYkcFNUd/cZYU1gilaqtKETBTtkzReMkMuXnNSIbWhNDnk7
8rQRWneqQyKTbKi06vXqgwojTA7KiXoWbUPZ6V5ZleVGmBItu/ipz3+4tT9P
0DLDuN6fmazQevYzrv88GhMnhtsYVz7dpZJMXinjqidbr4o6ksW46q2AIGc8
gUGufhqWJZWEM4j2G3NAfn9tsR5FOufBEZYGfb9Jj+i8isUTmT+8qUd0npz0
mqq+BwSdc87bwC3o3XiRoBPOfTTdnGr/5hhBdF+LW/cZp3cTRPfZuTUitWE9
QXTfh9duxsZIgigfyqdil/wdQFCLky/FeX/mPp9P0IiTT11zvy166UYQ5duT
74pkbBZBlI8S4rtg2xyCdE6+Xr5jfKPey4GdfL6m22AyBBNE+b4ciRXe7xFE
9bAGLNA8/oggqpexhSWJggMEUT3tyrglf6QkiOottjNfK9UQRPXofb3WesVM
ENWr12eLZ+PC9ajdqeeMhh0/NafpEdU7yEyqlNbpEfWDdR9c277nrh5Rv3im
nPEZCzIg6idaVY8+Oc2AqN9MmC55fNFqQNSPQnd2XJGbDOgf9u+AQQ==
         "]], {-0.1, 0}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TemplateBox[{"\"00\""},
           "Ket"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1.129626135594409, -1.5}], {{{0, 
         1}, {-1, 0}}, Center}]},
      TemplateBox[{"\"00\""}, "Ket"]],
     Annotation[#, 
      Ket[{"00"}], "Tooltip"]& ], 
    TagBox[GeometricTransformationBox[{
       {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
        Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
        0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
        RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
         NCache[{2.46875, Rational[-5, 2]}, {2.46875, -2.5}],
         RoundingRadius->0.1]}, {
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None]}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
         {AbsoluteThickness[1], Opacity[0.3], 
          LineBox[{{0.625, -2}, {1.625, -2}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None]}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[
         None]}}, {
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -1.375}, {1.375, -0.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[{{
            TagBox[
             TooltipBox[
              {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
               Opacity[0.3], CapForm[None], 
               LineBox[{{1.625, -2.}, {1.85, -2.}}], 
               LineBox[{{2.15, -2.}, {2.375, -2.}}], 
               {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
                RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
                DiskBox[{2., -2.}, 0.15000000000000002], 
                {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
                 LineBox[{{1.85, -2.}, {2.15, -2.}}], 
                 LineBox[{{2., -2.15}, {2., -1.85}}]}}},
              "\"NOT\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "NOT", "Tooltip"]& ], 
            {RGBColor[0.880722, 0.611041, 0.142051], 
             LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
           TagBox[
            TooltipBox[
             {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
              Opacity[0.3], CapForm[None], 
              LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
              LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
              {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
               RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
               DiskBox[{2., -1.}, 0.09375]}},
             "\"1\"",
             TooltipStyle->"TextStyling"],
            Annotation[#, "1", "Tooltip"]& ], {}},
          RowBox[{
            SubscriptBox["\"C\"", "\"NOT\""], "[", 
            RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]],
         Annotation[#, 
          Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ]}, {}, InsetBox[
        StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(U\\), \\(R\\)]\\)\"\>",
         StripOnInput->False,
         FontFamily->"Times",
         Background->GrayLevel[0, 0]], 
        NCache[{Rational[3, 2], Rational[-2, 5]}, {1.5, -0.4}]]}, {1, 0}],
     EventHandlerTag[{
      "MouseClicked" :> (
        Wolfram`QuantumFramework`Draw`PackagePrivate`qc$27635 = 
        Wolfram`QuantumFramework`Draw`PackagePrivate`qc$27635["ToggleExpand", 
          Append[{}, 2]]), PassEventsDown -> True, PassEventsUp -> False, 
       Method -> "Preemptive"}]]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Small]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"0a0ecc8e-a7c3-5f48-9fb0-258afc504648"]
}, Open  ]],

Cell["Which is also called a Bell State:", "Text",
 CellChangeTimes->{{3.954847923647049*^9, 
  3.9548479281889725`*^9}},ExpressionUUID->"72af5dc8-5ab2-7f45-9464-\
8f7fb319daf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qc", "[", "]"}], "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"b7f902ba-decc-1148-9173-8537bf459221"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"0", "\[InvisibleSpace]", "0"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]]}], "+", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], 
   InterpretationBox[
    StyleBox[
     TemplateBox[{
       RowBox[{"1", "\[InvisibleSpace]", "1"}]},
      "Ket"],
     FontWeight->"Plain"],
    Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> 
     False]]}]}]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"4d8d0870-104b-594d-902d-e0494cef8a67"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ansatz Circuits", "Subsection",
 CellChangeTimes->{{3.954604418853409*^9, 
  3.9546044214351234`*^9}},ExpressionUUID->"739ee633-4958-c740-b07a-\
afd0e2269319"],

Cell["\<\
In physics and mathematics, the German word \[OpenCurlyDoubleQuote]Ansatz\
\[CloseCurlyDoubleQuote] refers to an educated guess for solving a problem. \
You may have done this before\[LongDash]trying out a potential solution based \
on intuition or prior knowledge. However, an ansatz is not just any guess; it \
must be well-informed.\
\>", "Text",
 CellChangeTimes->{{3.954847940055002*^9, 
  3.954847945485035*^9}},ExpressionUUID->"b9f1ae47-4b5a-a744-9196-\
ce3a86fae07e"],

Cell["\<\
In Variational Quantum Algorithms (VQAs), what we are guessing is the quantum \
circuit that will solve our problem. This is why we refer to this circuit \
simply as the ansatz\
\>", "Text",
 CellChangeTimes->{
  3.9548479614539948`*^9},ExpressionUUID->"5e8d2630-cfd9-ed49-b29f-\
c5165dec2f72"],

Cell["Generate a collection of parametrized states:", "Text",
 CellChangeTimes->{
  3.9548479375398407`*^9},ExpressionUUID->"3dc96890-19e5-ec4a-adc4-\
4c397675e367"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      TemplateBox[{
        RowBox[{"\[Psi]", "(", 
          OverscriptBox["\[Theta]", "->"], ")"}]},
       "Ket"], "=", 
      RowBox[{
       RowBox[{
        SubscriptBox["U", "V"], "(", 
        OverscriptBox["\[Theta]", "->"], ")"}], 
       SubscriptBox["U", "R"], 
       TemplateBox[{"0"},
        "Ket"]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"c5e81216-dcf1-0349-b78c-5dd72b6ffda7"]], \
"Text",ExpressionUUID->"fa2338eb-6149-7245-9a89-47b50aadf4d9"],

Cell[TextData[StyleBox["How Do We Choose an Ansatz?",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.95484802423287*^9, 
  3.9548480330167007`*^9}},ExpressionUUID->"00e0b498-0f0e-634d-abdc-\
6eb111652df5"],

Cell[CellGroupData[{

Cell["Problem-Inspired Ansatz", "Item",
 CellChangeTimes->{{3.954848034295309*^9, 
  3.9548480421375275`*^9}},ExpressionUUID->"3743edc2-5c53-5240-91be-\
9d11bd805643"],

Cell["\<\
 If we have prior knowledge about the problem, we can use physical intuition \
or mathematical insights to design a circuit tailored to the task. This \
approach typically leads to more efficient circuits with fewer parameters, \
making optimization easier. These are usually referred to generally as \
Hardware-Efficient ansatz.\
\>", "Subitem",
 CellChangeTimes->{{3.954848034295309*^9, 
  3.9548480592984104`*^9}},ExpressionUUID->"cfedbd43-0c90-fb41-8143-\
87836183800b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem-Agnostic Ansatz", "Item",
 CellChangeTimes->{{3.954848034295309*^9, 
  3.954848072478964*^9}},ExpressionUUID->"95f57baa-d895-e745-9a9c-\
688531431319"],

Cell["\<\
If we lack detailed knowledge about the problem, we can use a more general \
universal ansatz that does not rely on problem-specific intuition. These \
ansatze are more expressive, meaning they can represent a wide range of \
solutions. However, they also tend to be larger, with more gates and \
parameters, making the optimization process significantly harder.\
\>", "Subitem",
 CellChangeTimes->{{3.954848034295309*^9, 
  3.9548480773286743`*^9}},ExpressionUUID->"78d6f286-8ccf-a243-9899-\
4505c93e055e"]
}, Open  ]],

Cell["\<\
If we consider this simple ansatz, consisting of a pair of rotations and a \
CNOT gate, we can evaluate it and examine the states that can be generated:\
\>", "Text",
 CellChangeTimes->{{3.9548481869961987`*^9, 
  3.9548481939125366`*^9}},ExpressionUUID->"6c70b821-6efb-e345-ab6a-\
4f1093e5db16"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ansatz", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<00\>\"", ",", 
      RowBox[{"\"\<RY\>\"", "[", 
       RowBox[{"2", "\[Theta]1"}], "]"}], ",", 
      RowBox[{
       RowBox[{"\"\<RY\>\"", "[", 
        RowBox[{"2", "\[Theta]2"}], "]"}], "->", 
       RowBox[{"{", "2", "}"}]}], ",", "\"\<CNOT\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ansatz", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"81c6bdf2-6db1-934e-9773-d453cb024c67"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -1}, {3.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -2}, {3.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[Hue[0.62, 0.45, 0.87]], FaceForm[{Hue[0.62, 0.45, 0.87], 
       Opacity[0.3]}], GeometricTransformationBox[PolygonBox[CompressedData["
1:eJxVVAtM00ccLjd1iAwEhkwsELJGCigzg2FcZacRi9NK5jRMmEEBBYcbrYpp
I6A0Kw9HHQMsVBkPgeKYEamODRW9wxUdBjfKs0SnCNe6YmVR2/7rRnV16XXZ
L7lcvuRyv9f3faHpwo/3ABaLJXCcV/epk6+CgdH/xkP0fwzwh6yAaV8lA1f+
4ae9Gw9wWNy4RlrFwF9kW67uTgJYeHbFxEwZA8uqy4vbsgDev3Wkfa+UgT8n
y3hfSQBO9vsk/rVcBgpFA22GUoB5EdooXQYDj2Zm1zYoAT4fE8Gft4WBYTqu
b80ZgEtOxe1X8xjYrXpe2NEJsOJsahrgMDDfOxlorwPs6dsVv9SDgRcGG8vu
/wrw6o4losQZK+Rm3Wb3jgMcu+0hq2PACm/xUk2fTwFsvqEWf6m2QhG0f615
BPBGqVQwp8IKYxY2BXY/BVjXklIgElrhQN/jeL4N4PGm2QD3zVboc6wof/ss
wLnhauQZYYWTfJ59+gXAgyL/FT3zrFCjuHfP9hLgUU3/1b1TFlj5Qhlc6MAq
jvcoH1tgcKimSWoH+Ind/Uh9nQWyE95d5fYXwOIMtyF1ngWePm8qn2sB+FDz
+/KeFAv023eIq5wB2Gus4KgnzwIPL1Kt7zU4+jetDv+NbYFveSUM1/4OcPvo
O6vWsSzwRmdj4vIhR377Bk6D3gzFYYG1x28CXPdgsNv/thmGTCYYBi8DvGxR
gXbkRzNcSeok/ucAtpT7DM9vNsODU+xSYT3AT7nyO2z3aVi4a6hNMmpDIV2x
E5sMRijE9oqlXTYkcFNUd/cZYU1gilaqtKETBTtkzReMkMuXnNSIbWhNDnk7
8rQRWneqQyKTbKi06vXqgwojTA7KiXoWbUPZ6V5ZleVGmBItu/ipz3+4tT9P
0DLDuN6fmazQevYzrv88GhMnhtsYVz7dpZJMXinjqidbr4o6ksW46q2AIGc8
gUGufhqWJZWEM4j2G3NAfn9tsR5FOufBEZYGfb9Jj+i8isUTmT+8qUd0npz0
mqq+BwSdc87bwC3o3XiRoBPOfTTdnGr/5hhBdF+LW/cZp3cTRPfZuTUitWE9
QXTfh9duxsZIgigfyqdil/wdQFCLky/FeX/mPp9P0IiTT11zvy166UYQ5duT
74pkbBZBlI8S4rtg2xyCdE6+Xr5jfKPey4GdfL6m22AyBBNE+b4ciRXe7xFE
9bAGLNA8/oggqpexhSWJggMEUT3tyrglf6QkiOottjNfK9UQRPXofb3WesVM
ENWr12eLZ+PC9ajdqeeMhh0/NafpEdU7yEyqlNbpEfWDdR9c277nrh5Rv3im
nPEZCzIg6idaVY8+Oc2AqN9MmC55fNFqQNSPQnd2XJGbDOgf9u+AQQ==
         "]], {-0.1, 0}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TemplateBox[{"\"00\""},
           "Ket"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1.129626135594409, -1.5}], {{{0, 
         1}, {-1, 0}}, Center}]},
      TemplateBox[{"\"00\""}, "Ket"]],
     Annotation[#, 
      Ket[{"00"}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Y\"\>"], "(", 
           RowBox[{"2", " ", "\[Theta]1"}], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Y\""], "[", 
        RowBox[{"2", " ", "\[Theta]1"}], "]"}]],
     Annotation[#, 
      Subscript["R", "Y"][2 $CellContext`\[Theta]1], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Y\"\>"], "(", 
           RowBox[{"2", " ", "\[Theta]2"}], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Y\""], "[", 
        RowBox[{"2", " ", "\[Theta]2"}], "]"}]],
     Annotation[#, 
      Subscript["R", "Y"][2 $CellContext`\[Theta]2], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{2.625, -2.}, {2.85, -2.}}], 
           LineBox[{{3.15, -2.}, {3.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{3., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{2.85, -2.}, {3.15, -2.}}], 
             LineBox[{{3., -2.15}, {3., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{3., -1.09375}, {3., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{2.625, -1.}, {2.90625, -1.}}], 
          LineBox[{{3.09375, -1.}, {3.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{3., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"096c013e-57e4-7f4d-a810-ab7063b97bb7"]
}, Open  ]],

Cell["\<\
As we observe, the possible states generated by this ansatz are limited to \
those determined by the sine and cosine functions. Therefore, even with an \
excellent optimizer, there will be certain values that this ansatz will never \
be able to reach:\
\>", "Text",
 CellChangeTimes->{{3.954848207092062*^9, 
  3.954848211022066*^9}},ExpressionUUID->"b95afef2-2aeb-9244-bfd9-\
4febdb321e8a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ansatz", "[", "\"\<Table\>\"", "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"15c5e79c-ebee-c642-ba17-3bd02a937d07"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       InterpretationBox[
        StyleBox["\[ScriptOne]",
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
         False]],
       HoldForm]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]2", "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]1", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"Sin", "[", "\[Theta]1", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]2", "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]2", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]1", "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]}, {
       Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
        False]}}, TableAlignments -> Center]]]], "Output",
 CellLabel->
  "Out[16]//TableForm=",ExpressionUUID->"c1ad2e4d-6c30-b244-abf9-\
c8bd9ed1e8a1"]
}, Open  ]],

Cell[TextData[StyleBox["How good is an ansatz?",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{
  3.9548482355475597`*^9},ExpressionUUID->"986de6df-c63a-b646-a61f-\
f76e26f43a75"],

Cell[CellGroupData[{

Cell["Expressibility", "Item",
 CellChangeTimes->{3.9548482367115536`*^9, 
  3.954848275428604*^9},ExpressionUUID->"b33da37b-d81a-944f-9dd1-\
f156f8549026"],

Cell["\<\
 This measures the range of functions that the quantum circuit can represent. \
Higher expressibility is generally linked to more entanglement and a greater \
number of parameters. The more expressive an ansatz is, the more problems it \
can potentially solve.\
\>", "Subitem",
 CellChangeTimes->{{3.954848279656397*^9, 
  3.954848298342865*^9}},ExpressionUUID->"d9b406b1-e549-6649-933c-\
6a795bd54a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Trainability", "Item",
 CellChangeTimes->{{3.9548482887505226`*^9, 
  3.9548482887520275`*^9}},ExpressionUUID->"f14fccd8-82ff-9a4a-b217-\
f26b561467bb"],

Cell["\<\
This refers to how easy it is to find the right parameters for the circuit. \
Larger, highly expressive circuits are harder to optimize because the \
optimizer must explore a vast parameter space. The difficulty of training \
also depends on the cost function and the classical optimizer used.\
\>", "Subitem",
 CellChangeTimes->{{3.9548482893424397`*^9, 
  3.954848290762184*^9}},ExpressionUUID->"21f28fb2-6de2-da47-9cba-\
9c20751c16df"]
}, Open  ]],

Cell["\<\
There is a natural trade-off between expressibility and trainability. Highly \
expressive circuits are powerful but harder to train, while simpler circuits \
may be easier to optimize but might not capture the necessary complexity of \
the problem.\
\>", "Text",
 CellChangeTimes->{{3.9548484336886883`*^9, 
  3.9548484395254574`*^9}},ExpressionUUID->"2b986f5a-ae8f-1e42-9f0c-\
8176233f80b3"],

Cell["\<\
The goal is to find an ansatz in the \[OpenCurlyDoubleQuote]sweet spot\
\[CloseCurlyDoubleQuote]\[LongDash]one that is expressive enough to solve the \
problem but still trainable within a reasonable amount of time.\
\>", "Text",
 CellChangeTimes->{{3.95484844083749*^9, 
  3.9548484433931465`*^9}},ExpressionUUID->"c9d26839-6bba-7c44-9e23-\
bc182fe7b96f"],

Cell["Now, let\[CloseCurlyQuote]s explore this concept further with an \
exercise!", "Text",
 CellChangeTimes->{
  3.9548484446274624`*^9},ExpressionUUID->"86b949de-0454-3a46-a06c-\
8d74afb17b28"],

Cell["Exercise 1:", "Item",ExpressionUUID->"0c2bfadc-f959-7d4e-9706-ea723f7396f2"],

Cell["\<\
Express the collection of parametrized states generated by the following \
ansatz:\
\>", "Text",ExpressionUUID->"f7566203-4126-464a-9f23-200743beee59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<RX\>\"", "[", "\[Theta]", "]"}], ",", "\"\<CNOT\>\""}], 
     "}"}], "]"}], "[", 
   RowBox[{"\"\<Diagram\>\"", ",", 
    RowBox[{"ImageSize", "->", "Small"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"27b1fbbd-9143-7c45-95e1-951e1d618f22"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.85, -2.}}], 
           LineBox[{{2.15, -2.}, {2.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{2., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{1.85, -2.}, {2.15, -2.}}], 
             LineBox[{{2., -2.15}, {2., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
          LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{2., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Small]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"20c181f7-539c-3246-90f6-2d9eb9bda8c4"]
}, Open  ]],

Cell["Step by step:", "Text",ExpressionUUID->"1062001f-2f78-bc4c-9ec1-df6bf7d0f274"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<RX\>\"", "[", "\[Theta]", "]"}], "]"}], "@", 
   RowBox[{"QuantumState", "[", "\"\<00\>\"", "]"}]}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.9548484950579586`*^9, 3.9548484970704327`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"51bfeae9-a77a-894c-9cef-93e85d14c3ae"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{"cos", "(", 
       FractionBox["\[Theta]", "2"], ")"}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["0", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
       TraditionalForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"sin", "(", 
        FractionBox["\[Theta]", "2"], ")"}]}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["0", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
       TraditionalForm]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {3}}}, {
       Cos[Rational[1, 2] $CellContext`\[Theta]], Complex[0, -1] 
       Sin[Rational[1, 2] $CellContext`\[Theta]]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]]],
   TraditionalForm]], "Output",
 CellChangeTimes->{{3.9548485043393955`*^9, 3.9548485570199223`*^9}},
 CellLabel->
  "Out[12]//TraditionalForm=",ExpressionUUID->"0bbb45c2-d18d-4947-8563-\
dbbe59680e10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "=", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", "\"\<CNOT\>\"", "]"}], "@", 
   "%"}]}]], "Input",
 CellChangeTimes->{{3.9548484999273033`*^9, 3.9548485546476383`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d2b210c8-42b9-964d-82a9-8486d1d76f64"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe2Hl1K1NO9/bHzhfGMn97o392sanPBvfvbK32R57
ZILtW/s+x7ydhyZetFdSFa5xlj+PU1xKrekn86T39g+WJMfF/n5lf+bfFcH7
Zs9JNmewicfflmbi2fbe3uDrRYFFq97Yd89zv1rrQHr4KFz3blBsfG/fZrKD
dargG/v3ETO9zTqf2gMAEvaz/g==
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
              Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
              Identity, Frame -> False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQe2Hl1K1NO9/bHzhfGMn97o392sanPBvfvbK32R57
ZILtW/s+x7ydhyZetFdSFa5xlj+PU1xKrekn86T39g+WJMfF/n5lf+bfFcH7
Zs9JNmewicfflmbi2fbe3uDrRYFFq97Yd89zv1rrQHr4KFz3blBsfG/fZrKD
dargG/v3ETO9zTqf2gMAEvaz/g==
              "], {{0, 0}, {4, 4}}, {0, 1}], {
             DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
              Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
              Identity, Frame -> False, FrameLabel -> {None, None}, 
              FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
              Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> True}], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {
      Cos[Rational[1, 2] $CellContext`\[Theta]], Complex[0, -1] 
      Sin[Rational[1, 2] $CellContext`\[Theta]]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.954848490519726*^9, 3.954848557766714*^9}},
 CellLabel->"Out[13]=",ExpressionUUID->"6c82bea1-df0d-434c-b435-b5ce53bd1e58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"04a0bb7b-e90a-f64a-b803-dbefd2cf0f76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   FractionBox["\[Theta]", "2"], "]"}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]]}]], "Output",
 CellChangeTimes->{{3.954848513467388*^9, 3.954848559477825*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"41974ade-9621-0f45-92f3-e0eebe59380e"]
}, Open  ]],

Cell["Exercise 2:", "Item",ExpressionUUID->"85de87b6-cccd-5843-beea-ca266d6ee965"],

Cell["\<\
Express the collection of parametrized states generated by the following \
ansatz:\
\>", "Text",ExpressionUUID->"c11f7c1b-88db-5f4c-86c6-961cc457914e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<RX\>\"", "[", "\[Theta]1", "]"}], ",", 
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]2", "]"}], "->", 
       RowBox[{"{", "2", "}"}]}], ",", "\"\<CNOT\>\""}], "}"}], "]"}], "[", 
   RowBox[{"\"\<Diagram\>\"", ",", 
    RowBox[{"ImageSize", "->", "Small"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[21]:=",ExpressionUUID->"1cda7fcc-14e3-b14b-b2c2-c9dad86f0384"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -2}, {0.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]1", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]1", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]1], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]2", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]2", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]2], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.85, -2.}}], 
           LineBox[{{2.15, -2.}, {2.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{2., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{1.85, -2.}, {2.15, -2.}}], 
             LineBox[{{2., -2.15}, {2., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
          LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{2., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Small]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"d925f1fc-fb17-b24c-af44-3de7990b64d7"]
}, Open  ]],

Cell["Following the same steps:", "Text",ExpressionUUID->"44e498ed-8aef-a349-8f5d-8df01fb6453b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]1", "]"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]2", "]"}], "->", "2"}]}], "}"}], 
    ",", 
    RowBox[{"\"\<Parameters\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}]}]}], "]"}], "@", 
  RowBox[{"QuantumState", "[", "\"\<00\>\"", "]"}]}]], "Input",
 CellLabel->"In[22]:=",ExpressionUUID->"2dd83ce6-ea41-d240-b7d8-d128eb22bce2"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]1", "2"], ")"}], " ", 
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]2", "2"], ")"}]}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["0", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
       TraditionalForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]1", "2"], ")"}], " ", 
       RowBox[{"sin", "(", 
        FractionBox["\[Theta]2", "2"], ")"}]}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["1", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
       TraditionalForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"sin", "(", 
        FractionBox["\[Theta]1", "2"], ")"}], " ", 
       RowBox[{"cos", "(", 
        FractionBox["\[Theta]2", "2"], ")"}]}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["0", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
       TraditionalForm], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]1", "2"], ")"}]}], " ", 
       RowBox[{"sin", "(", 
        FractionBox["\[Theta]2", "2"], ")"}]}], 
      FormBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{
             FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
             FormBox["1", TraditionalForm]}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
       TraditionalForm]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
      Cos[Rational[1, 2] $CellContext`\[Theta]1] 
       Cos[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
       Cos[Rational[1, 2] $CellContext`\[Theta]1] 
       Sin[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
       Cos[Rational[1, 2] $CellContext`\[Theta]2] 
       Sin[Rational[1, 2] $CellContext`\[Theta]1], (-
        Sin[Rational[1, 2] $CellContext`\[Theta]1]) 
       Sin[Rational[1, 2] $CellContext`\[Theta]2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, 
      "ParameterSpec" -> {{$CellContext`\[Theta]1, 0, 
         1}, {$CellContext`\[Theta]2, 0, 1}}|>]]], TraditionalForm]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"0e9f1f7e-ab52-e949-8cb1-1c932511c410"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result2", "=", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", "\"\<CNOT\>\"", "]"}], "@", 
   "%"}]}]], "Input",
 CellLabel->"In[23]:=",ExpressionUUID->"dc56a37f-7888-394e-9da4-3fec19d9bdd4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                10.869015724668278`, {0., 10.869015724668278`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAAUu00qi2+4/pFSqCO+k7j8S
Ye+wFe3oP1mJSeI2Y+8/NUHiyFiB6j8k9NBqcGjpPwp/sRUpsO8/YkOPkWGO
6z/uuZ7p4CTmP1a3CRMWye8/q9/qhgN77T/n4P4L+bXpP3JKkSZNHO4/BAAs
zRgW7j9b0Z/vNg3lP/ibvYz2qu8/Tx5218r97T8WyInjCljqP2RZpBISMu8/
CY6nQXye6D8XkxjEnMrmP/b2uYLatO8/fTY6e/pz7D91/eNZFobpP6qO87tV
bu8/Ya6eiTIk6j/TCMXrzE3nP5LznchxdO0/PuKGhpCz6z/sjxo6cZbaP4jQ
PNXgc+8/ADOYhvUM6j9h2R4UE4DmP/T7y4jaBu0/eFa/hjBf7j+cPiNpna7m
P9PuzRPLNew/5sCwEwia7T8XgubiYRXiP4xs7/DEyO4/gk5ebQHI7D9w+Y+S
g2nkP1oBn8HNre8/JKC9RXGP6z+hWaQ9sHzmP9KI0r+rZe8/0a7qtaRq7j9F
tus1TkjqPxOlzkY=
              "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
             RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
             False, FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
             PlotRangeClipping -> True], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAAUu00qi2+4/pFSqCO+k7j8S
Ye+wFe3oP1mJSeI2Y+8/NUHiyFiB6j8k9NBqcGjpPwp/sRUpsO8/YkOPkWGO
6z/uuZ7p4CTmP1a3CRMWye8/q9/qhgN77T/n4P4L+bXpP3JKkSZNHO4/BAAs
zRgW7j9b0Z/vNg3lP/ibvYz2qu8/Tx5218r97T8WyInjCljqP2RZpBISMu8/
CY6nQXye6D8XkxjEnMrmP/b2uYLatO8/fTY6e/pz7D91/eNZFobpP6qO87tV
bu8/Ya6eiTIk6j/TCMXrzE3nP5LznchxdO0/PuKGhpCz6z/sjxo6cZbaP4jQ
PNXgc+8/ADOYhvUM6j9h2R4UE4DmP/T7y4jaBu0/eFa/hjBf7j+cPiNpna7m
P9PuzRPLNew/5sCwEwia7T8XgubiYRXiP4xs7/DEyO4/gk5ebQHI7D9w+Y+S
g2nkP1oBn8HNre8/JKC9RXGP6z+hWaQ9sHzmP9KI0r+rZe8/0a7qtaRq7j9F
tus1TkjqPxOlzkY=
              "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
             RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
             False, FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
             Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], 
             Method -> {
              "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic,
                "DefaultGraphicsInteraction" -> {
                "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                 "Effects" -> {
                  "Highlight" -> {"ratio" -> 2}, 
                   "HighlightPoint" -> {"ratio" -> 2}, 
                   "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
               "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
             PlotRangeClipping -> True], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity"], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "}"}], 
                  "SummaryItem"]}], ""}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {4}, 0, {
    1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
     Cos[Rational[1, 2] $CellContext`\[Theta]1] 
      Cos[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
      Cos[Rational[1, 2] $CellContext`\[Theta]1] 
      Sin[Rational[1, 2] $CellContext`\[Theta]2], (-
       Sin[Rational[1, 2] $CellContext`\[Theta]1]) 
      Sin[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
      Cos[Rational[1, 2] $CellContext`\[Theta]2] 
      Sin[Rational[1, 2] $CellContext`\[Theta]1]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schrodinger", "Label" -> None, 
     "ParameterSpec" -> {{$CellContext`\[Theta]1, 0, 
        1}, {$CellContext`\[Theta]2, 0, 1}}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"50e2e760-8c41-544f-8695-b14d3364303a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result2", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"603f27d6-1104-fc45-a8d7-c8ce7d634b99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", 
    FractionBox["\[Theta]1", "2"], "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox["\[Theta]2", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox["\[Theta]1", "2"], "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]2", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "1"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]2", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox["\[Theta]2", "2"], "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]1", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]]}]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"1ddbdda1-895b-a543-987c-8491797fd544"]
}, Open  ]],

Cell["\<\
We can verify that the second ansatz has more expressibility by the simple \
fact that:\
\>", "Text",ExpressionUUID->"8c773441-df20-5c44-92ad-dfe3e7b0cea8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"result2", "[", 
   RowBox[{"\[Theta]", ",", "0"}], "]"}], "[", "\"\<Formula\>\"", 
  "]"}]], "Input",
 CellLabel->"In[38]:=",ExpressionUUID->"56fe621c-6ace-c442-bf25-893d75195d8c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   FractionBox["\[Theta]", "2"], "]"}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]]}]], "Output",
 CellLabel->"Out[38]=",ExpressionUUID->"2e79c185-79c5-2749-8973-2b11d5d7f7d2"]
}, Open  ]],

Cell["The first ansatz is a specific case of the second ansatz:", "Text",ExpressionUUID->"80f7d50c-7bcc-2a4c-ac79-de38a86f0aec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result1", "[", "\"\<Formula\>\"", "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"e0aa8e3c-ecdb-814a-9684-f8b87dc7cdb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Cos", "[", 
   FractionBox["\[Theta]", "2"], "]"}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox["\[Theta]", "2"], "]"}]}], 
  InterpretationBox[
   StyleBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1"}]},
     "Ket"],
    FontWeight->"Plain"],
   Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]]}]], "Output",
 CellLabel->"Out[39]=",ExpressionUUID->"6d100d7d-f0bf-284b-a500-1d1887c3d740"]
}, Open  ]],

Cell["What happens if we have no idea about the problem solution? ", "Text",ExpressionUUID->"e197bcbd-0d54-164b-a77b-7a209490a316"],

Cell["\<\
Layered gate architectures, where the ansatz is repeated multiple times, have \
been shown to offer a good balance between expressibility and relatively low \
circuit depth, making them effective for tackling a broad range of problems.\
\>", "Text",
 CellChangeTimes->{{3.9548485968391075`*^9, 
  3.9548486033578835`*^9}},ExpressionUUID->"88fe85e1-9c45-dd43-be81-\
b3667a3de26f"],

Cell["\<\
If the problem we are trying to solve doesn\[CloseCurlyQuote]t require a \
large number of parameters, a good option might be to use an ansatz called \
the Basic Entangler. This ansatz is often favored for its simplicity and \
efficiency in cases where the problem doesn\[CloseCurlyQuote]t demand an \
overly complex parameterized quantum circuit. This layers consist of \
one-parameter single-qubit rotations on each qubit, followed by a closed \
chain or ring of CNOT gates.\
\>", "Text",
 CellChangeTimes->{
  3.954848604723818*^9},ExpressionUUID->"7f1270f5-98b0-204f-82b4-\
c51096530ff7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"basicentanglement", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<000\>\"", ",", 
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]1", "]"}], "->", "1"}], ",", 
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]2", "]"}], "->", "2"}], ",", 
      RowBox[{
       RowBox[{"\"\<RX\>\"", "[", "\[Theta]3", "]"}], "->", "3"}], ",", 
      RowBox[{"\"\<CNOT\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"\"\<CNOT\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"\"\<CNOT\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"3", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"basicentanglement", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellLabel->"In[25]:=",ExpressionUUID->"f5858424-2a6a-9c4c-a0d8-7292220d3a94"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -3}, {1.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -2}, {3.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -3}, {3.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -3}, {4.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -1}, {4.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -1}, {5.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -2}, {5.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -3}, {5.625, -3}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[Hue[0.62, 0.45, 0.87]], FaceForm[{Hue[0.62, 0.45, 0.87], 
       Opacity[0.3]}], GeometricTransformationBox[PolygonBox[CompressedData["
1:eJxVVA9Q01Uc/zHtrntsDYwC3CQUGSR5gJNMgl6htqY0nElYGFMWtZOcS4Fd
5BLkQNFjxb/i380sORmG9ldFdr4nokLXApN/MlGu3kZjWCi/bULUr1m+7vre
vXv3vfd9732/n+/n812cvWtTDo9hmA2+dX9vqL9vXij9x8bR/32AB0OVHL/O
C49+nDr611qAI74pittR7YU3wuMCW14FeFFmXtS5w144XvRmI18DcFj0liv+
xV64dbXGCt4DeGJIjfbs8cKCd1zni8sB7tv5QzZf7YWDw+UVynqA5YU9+e40
X7ypvCGzBeCkSwFTryR6Yc8zUZf3nwZ4yV74nXKJF75v++P4iYsAN5d1rFn0
sBcSd0CXpRfgR0NbX3e6PFAYkmgxjQB8Zsz8yaTVA0XN6YYkAnB8qFCw/aQH
1n0l1pRMAvz8Vu3VkgoPnPeQNF89DXDadFp5Ta4HyjXxm3vv+eI7p1z9L3kg
P1Jbapnz1V/ArTkY6YH7rii1ERzAgbrU23f9PPDkxQAN5/N1pzV9r910w6WF
bd0Kn38oe+WoX4cbJi+Ldyz4E+BxW1ZpbJ0b1tU8FrRxxoeP3rZKUuCG2zaS
BgEL8MHwDTej0t3wCF/cmn4b4DpPxht5CW44J9CvTbAD3M+bDZEHu2G2qF1i
sQE83FZjGJtlYd6xBPNcH8CuqGvGd8dYqJDIm/wvASy7FWaI7Wbh0QYQzpwF
OG7zBynyr1lYwO3XT5sB7kxpkjlNLGS/vDDENAIcqjgemGBk4WfKp6TrDgO8
cpV5JrWIhVlynd+tQl99+g7J551OGPN48o8nZAw2NFpTxV84oXTIvzblaQYf
e8Ew8UujE4Zsv5e/YymDz6EyiajKCbsP6JyyBQweGEhgBo1OyPxr/53rpsKW
62wcovd7k4VBMWc4RN+vV/46UFjNIfp/67VSdYuOQzS/AyPPzZYEORDNX9+u
kLp+siNaX2zSzKdz1XZE64/msYtXbLEjio+hdmAf94QdUfwuv2UzXnURRPFd
rn0yU2AhiOKvrxLlCCsJov0Rdkf8tiyXINq/YuuHGeb1BNH+Fp3X1vTEEkT7
b2ozn0ILCaL8ABnPvv2tP0GUP9rg9aNdPIIov2R3LCoeQxDlH+/nsy/unkcQ
5WdvrmxCICCI8vdGVuKpTjFBlN+sSxqze4Uv/gH/TasrVHdfJojqozrXDB7Z
RRDVT9eRYGFpLUFUX9poy+/8CwRR/QVVBWxT3iGI6nNErB5nI+2I6vejsuu1
lVl2RPVtbhruaW+wI+cD/UsUm+bPXLcjOh8qF6q+7xc5EJ0fOXM7q6wqB6Lz
xbgXdqiaHYjOn8Jm66H5kw70N5+/ag8=
         "]], {-0.1, 0}], GeometricTransformationBox[InsetBox[
         StyleBox[
          TemplateBox[{"\"000\""},
           "Ket"],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1.129626135594409, -2.}], {{{0, 
         1}, {-1, 0}}, Center}]},
      TemplateBox[{"\"000\""}, "Ket"]],
     Annotation[#, 
      Ket[{"000"}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]1", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]1", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]1], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]2", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]2", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]2], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{1.625, -3.375}, {2.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]3", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]3", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]3], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{2.625, -2.}, {2.85, -2.}}], 
           LineBox[{{3.15, -2.}, {3.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{3., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{2.85, -2.}, {3.15, -2.}}], 
             LineBox[{{3., -2.15}, {3., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{3., -1.09375}, {3., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{2.625, -1.}, {2.90625, -1.}}], 
          LineBox[{{3.09375, -1.}, {3.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{3., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{3.625, -3.}, {3.85, -3.}}], 
           LineBox[{{4.15, -3.}, {4.375, -3.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{4., -3.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{3.85, -3.}, {4.15, -3.}}], 
             LineBox[{{4., -3.15}, {4., -2.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{4., -2.09375}, {4., -2.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{3.625, -2.}, {3.90625, -2.}}], 
          LineBox[{{4.09375, -2.}, {4.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{4., -2.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{2}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{4.625, -1.}, {4.85, -1.}}], 
           LineBox[{{5.15, -1.}, {5.375, -1.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{5., -1.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{4.85, -1.}, {5.15, -1.}}], 
             LineBox[{{5., -1.15}, {5., -0.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{5., -1.15}, {5., -2.90625}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{4.625, -3.}, {4.90625, -3.}}], 
          LineBox[{{5.09375, -3.}, {5.375, -3.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{5., -3.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "3", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{3}, {}], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"474b9de2-d722-a54b-a78e-4585a21f790f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"basicentanglement", "[", "\"\<Table\>\"", "]"}]], "Input",
 CellLabel->"In[42]:=",ExpressionUUID->"5b0df801-9a3f-f943-8d82-dce7500f4987"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       InterpretationBox[
        StyleBox["\[ScriptOne]",
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
         False]],
       HoldForm]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]2", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]3", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{"\[ImaginaryI]", " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]2", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]3", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]1", "2"], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]2", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]3", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]2", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]3", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]3", "2"], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]2", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]2", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]3", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", 
         FractionBox["\[Theta]2", "2"], "]"}]}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]3", "2"], "]"}]}]},
     {
      TagBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]],
       HoldForm], 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]1", "2"], "]"}], " ", 
       RowBox[{"Cos", "[", 
        FractionBox["\[Theta]3", "2"], "]"}], " ", 
       RowBox[{"Sin", "[", 
        FractionBox["\[Theta]2", "2"], "]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {{
       Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False], 
       Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]}, {
       Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
        False]}}, TableAlignments -> Center]]]], "Output",
 CellLabel->
  "Out[42]//TableForm=",ExpressionUUID->"47accf5b-6a8a-6940-9ab4-\
b2a58707520f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cost functions and optimization", "Section",ExpressionUUID->"d91163da-bc92-6844-8951-53a54bf0c94a"],

Cell["\<\
Once we have the ansatz circuit, the next step is to determine the parameters \
that we need to input in order to perform the task at hand. So, how do we do \
this? This is accomplished by defining a cost function, which measures how \
close the output of the circuit is to the desired result.\
\>", "Text",
 CellChangeTimes->{
  3.954848823927019*^9},ExpressionUUID->"feb2f208-aa76-0448-bc0e-\
8bf05ab30663"],

Cell["\<\
The goal most of the time is to minimize a cost function. This is the essence \
of many variational algorithms, we adjust the parameters iteratively to find \
the minimum value of the cost function, which indicates the best solution, \
even when the exact answer is not known in advance.\
\>", "Text",
 CellChangeTimes->{{3.9548488277463417`*^9, 
  3.9548488376123753`*^9}},ExpressionUUID->"3a73d24b-9d98-094b-a082-\
26f2b9a421e1"],

Cell["\<\
In variational quantum algorithms, we usually define the cost function as the \
expectation value of a given observable \[ScriptCapitalH]:\
\>", "Text",
 CellChangeTimes->{{3.954848848021122*^9, 3.9548488544978046`*^9}, 
   3.954848920290554*^9},ExpressionUUID->"2112751e-01e8-1343-9195-\
c14b286b8b20"],

Cell[TextData[Cell[BoxData[
 FormBox[GridBox[{
    {
     RowBox[{
      RowBox[{"\[ScriptF]", "(", "\[Theta]", ")"}], "=", 
      RowBox[{
       RowBox[{
        TemplateBox[{"0"},
         "Bra"], 
        RowBox[{
         SuperscriptBox["U", "\[Dagger]"], "(", 
         OverscriptBox["\[Theta]", "->"], ")"}], " ", "\[ScriptCapitalH]", 
        " ", 
        RowBox[{"U", "(", 
         OverscriptBox["\[Theta]", "->"], ")"}], 
        TemplateBox[{"0"},
         "Ket"]}], "=", 
       RowBox[{
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "->"], ")"}]},
         "Bra"], "\[ScriptCapitalH]", " ", 
        TemplateBox[{
          RowBox[{"\[Psi]", "(", 
            OverscriptBox["\[Theta]", "->"], ")"}]},
         "Ket"]}]}]}]}
   },
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.96]}}}], 
  TraditionalForm]],ExpressionUUID->"b4ee70c6-16e0-114f-aced-64372cbc1d34"]], \
"Text",ExpressionUUID->"52416ce5-bae7-8e43-9056-fef62afe77b6"],

Cell["\<\
Let\[CloseCurlyQuote]s test this simple example of a Hamiltonian conformed by \
Pauli operators in two qubits.:\
\>", "Text",
 CellChangeTimes->{
  3.9548488700448895`*^9},ExpressionUUID->"012c6044-4b83-d540-8a60-\
455ccf9733d0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"h1", "=", 
  RowBox[{"QuantumOperator", "[", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], "\"\<IY\>\""}], "+", 
    RowBox[{
     FractionBox["4", "5"], "\"\<ZI\>\""}], "-", 
    RowBox[{
     FractionBox["1", "5"], "\"\<XI\>\""}]}], "]"}]}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"ad82e1de-06ee-1d47-a4ef-3e05e6cd51c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.771662737098522, {0., 9.771662737098522}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vH1RZde3
izoP7W+ZnvW9p/7a/pnxx9l1Em/sHz1kCjRLfGN/qeqsnkXMO/vlzkqMobee
2e9PtrXa8vmVfYq2iPjOyHf25xk8Zq5Y/Q6nObjsxWVO1dFu2Qez3tjbnb7a
9LX5hb1N2odqzu3vcLrnrPNh04zS9/a/WDjsuIpe218/d6lhtv1rnPbicicu
c3C5h1T/AgBk5sIg
                "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
               RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
               False, FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
               PlotRangeClipping -> True], 
              RowBox[{
                FractionBox[
                 RowBox[{"\"I\"", "\[CircleTimes]", "\"Y\""}], "2"], "-", 
                FractionBox[
                 RowBox[{"\"X\"", "\[CircleTimes]", "\"I\""}], "5"], "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"I\""}]}], "5"]}]], 
             Annotation[#, Rational[1, 2] CircleTimes["I", "Y"] + 
              Rational[-1, 5] CircleTimes["X", "I"] + 
              Rational[4, 5] CircleTimes["Z", "I"], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"], 
                "SummaryItem"], ""}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"4", "\"\[RightArrow]\"", "4"}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vH1RZde3
izoP7W+ZnvW9p/7a/pnxx9l1Em/sHz1kCjRLfGN/qeqsnkXMO/vlzkqMobee
2e9PtrXa8vmVfYq2iPjOyHf25xk8Zq5Y/Q6nObjsxWVO1dFu2Qez3tjbnb7a
9LX5hb1N2odqzu3vcLrnrPNh04zS9/a/WDjsuIpe218/d6lhtv1rnPbicicu
c3C5h1T/AgBk5sIg
                "], {{0, 0}, {4, 4}}, {0, 1}], Background -> 
               RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
               False, FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                 Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
               PlotRangeClipping -> True], 
              RowBox[{
                FractionBox[
                 RowBox[{"\"I\"", "\[CircleTimes]", "\"Y\""}], "2"], "-", 
                FractionBox[
                 RowBox[{"\"X\"", "\[CircleTimes]", "\"I\""}], "5"], "+", 
                FractionBox[
                 RowBox[{"4", " ", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"I\""}]}], "5"]}]], 
             Annotation[#, Rational[1, 2] CircleTimes["I", "Y"] + 
              Rational[-1, 5] CircleTimes["X", "I"] + 
              Rational[4, 5] CircleTimes["Z", "I"], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"map\""}, "RowDefault"], 
                "SummaryItem"], ""}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"4", "\"\[RightArrow]\"", "4"}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Hermitian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"2", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unitary: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumOperator[
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {16}, 0, {
     1, {{0, 12}, {{3}, {8}, {9}, {14}, {1}, {6}, {11}, {16}, {2}, {5}, {
       12}, {15}}}, {
       Rational[-1, 5], 
       Rational[-1, 5], 
       Rational[-1, 5], 
       Rational[-1, 5], 
       Rational[4, 5], 
       Rational[4, 5], 
       Rational[-4, 5], 
       Rational[-4, 5], 
       Complex[0, 
        Rational[-1, 2]], 
       Complex[0, 
        Rational[1, 2]], 
       Complex[0, 
        Rational[-1, 2]], 
       Complex[0, 
        Rational[1, 2]]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> 
      Rational[1, 2] CircleTimes["I", "Y"] + 
       Rational[-1, 5] CircleTimes["X", "I"] + 
       Rational[4, 5] CircleTimes["Z", "I"], "ParameterSpec" -> {}|>]], {{1, 
   2}, {1, 2}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"82389168-be85-ab4a-9ed5-e2ec45aa4729"]
}, Open  ]],

Cell[TextData[{
 "Once we have the Hamiltonian \[ScriptCapitalH], the next step is to \
construct the variational state or ansatz ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"\[Psi]", "(", 
       OverscriptBox["\[Theta]", "->"], ")"}]},
    "Ket"], TraditionalForm]],ExpressionUUID->
  "fb2f7640-0ecd-7b4e-b6e1-c34c681c5585"],
 ". In this case, we\[CloseCurlyQuote]ll use a layer of rotations followed by \
a CNOT gate. "
}], "Text",
 CellChangeTimes->{{3.954848913074047*^9, 
  3.9548489425772305`*^9}},ExpressionUUID->"f9a1ff9d-7a64-cc40-8ded-\
2b61fb2928b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ansatz1", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<RX\>\"", "[", "\[Theta]1", "]"}], ",", 
      RowBox[{
       RowBox[{"\"\<RY\>\"", "[", "\[Theta]2", "]"}], "->", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"\"\<CNOT\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ansatz1", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"ImageSize", "->", "Small"}]}], "]"}]}], "Input",
 CellLabel->"In[70]:=",ExpressionUUID->"3ed390f2-3ec9-8942-9499-51d7b1f28fd4"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -2}, {0.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {2.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}}, {
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"X\"\>"], "(", "\[Theta]1", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"X\""], "[", "\[Theta]1", "]"}]],
     Annotation[#, 
      Subscript["R", "X"][$CellContext`\[Theta]1], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Y\"\>"], "(", "\[Theta]2", ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Y\""], "[", "\[Theta]2", "]"}]],
     Annotation[#, 
      Subscript["R", "Y"][$CellContext`\[Theta]2], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.85, -2.}}], 
           LineBox[{{2.15, -2.}, {2.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{2., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{1.85, -2.}, {2.15, -2.}}], 
             LineBox[{{2., -2.15}, {2., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
          LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{2., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ]}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Small]], "Output",
 CellChangeTimes->{3.9548489736907005`*^9, 3.9548492426141224`*^9, 
  3.9548494917317944`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"ab3bdd09-9d3f-7a47-b8c9-c017c45049f1"]
}, Open  ]],

Cell["\<\
After constructing the ansatz, we compute it to obtain the resultant quantum \
state, which we can represent as the \[OpenCurlyDoubleQuote]StateVector.\
\[CloseCurlyDoubleQuote] From here, we define the corresponding ket and bra \
states.\
\>", "Text",
 CellChangeTimes->{
  3.954848938075405*^9},ExpressionUUID->"dd9bfc9c-41af-5a49-8c59-\
bf65bb67a84b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\[Psi]"},
   "Ket"], "=", 
  RowBox[{"ansatz1", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.954848979625746*^9, 3.954849003478201*^9}, 
   3.9548491000878067`*^9},
 CellLabel->"In[80]:=",ExpressionUUID->"8b0f47ec-d656-3041-9e3a-45ed3666083f"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", 
         FractionBox["\[Theta]1", "2"], ")"}], " ", 
        RowBox[{"cos", "(", 
         FractionBox["\[Theta]2", "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["0", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
        TraditionalForm]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", 
         FractionBox["\[Theta]1", "2"], ")"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]2", "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["1", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
        TraditionalForm], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]1", "2"], ")"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]2", "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["0", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
        TraditionalForm], 
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox["\[Theta]1", "2"], ")"}], " ", 
        RowBox[{"cos", "(", 
         FractionBox["\[Theta]2", "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["1", TraditionalForm]}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
        TraditionalForm]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
      Cos[Rational[1, 2] $CellContext`\[Theta]1] 
       Cos[Rational[1, 2] $CellContext`\[Theta]2], 
       Cos[Rational[1, 2] $CellContext`\[Theta]1] 
       Sin[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
       Sin[Rational[1, 2] $CellContext`\[Theta]1] 
       Sin[Rational[1, 2] $CellContext`\[Theta]2], Complex[0, -1] 
       Cos[Rational[1, 2] $CellContext`\[Theta]2] 
       Sin[Rational[1, 2] $CellContext`\[Theta]1]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schrodinger", "Label" -> None, "ParameterSpec" -> {}|>]]],
   TraditionalForm]], "Output",
 CellChangeTimes->{{3.954848986443924*^9, 3.9548490047208652`*^9}, {
  3.9548491005768585`*^9, 3.95484910164522*^9}, {3.954849245737894*^9, 
  3.954849247829609*^9}, {3.954849493865368*^9, 3.954849494913828*^9}, {
  3.9548500630302086`*^9, 3.9548500645531025`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"12659fa9-18a0-b347-8602-496608bc2dd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TemplateBox[{"\[Psi]"},
   "Bra"], "=", 
  SuperscriptBox[
   TemplateBox[{"\[Psi]"},
    "Ket"], "\[Dagger]"]}]], "Input",
 CellChangeTimes->{{3.9548490147543106`*^9, 3.954849104410532*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"91112cf8-e896-ca43-9c76-cfe9b6c5e2a4"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]1"},
           "Conjugate"], "2"], ")"}], " ", 
        RowBox[{"cos", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]2"},
           "Conjugate"], "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["0", TraditionalForm]}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> True]],
        TraditionalForm]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"cos", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]1"},
           "Conjugate"], "2"], ")"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]2"},
           "Conjugate"], "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["1", TraditionalForm]}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> True]],
        TraditionalForm]}], "+", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"sin", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]1"},
           "Conjugate"], "2"], ")"}], " ", 
        RowBox[{"sin", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]2"},
           "Conjugate"], "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["0", TraditionalForm]}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> True]],
        TraditionalForm]}], "+", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", 
        RowBox[{"sin", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]1"},
           "Conjugate"], "2"], ")"}], " ", 
        RowBox[{"cos", "(", 
         FractionBox[
          TemplateBox[{"\[Theta]2"},
           "Conjugate"], "2"], ")"}]}], 
       FormBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{
              FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
              FormBox["1", TraditionalForm]}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> True]],
        TraditionalForm]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", 
            RowBox[{"{", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
      Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] 
       Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]], 
       Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]], Complex[0, 1] 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]], Complex[0, 1] 
       Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]] 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Picture" -> "Schrodinger", "Label" -> None, 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.9548490415421257`*^9, 3.95484910599263*^9}, {
  3.9548492496458282`*^9, 3.9548492509720993`*^9}, {3.954849496551399*^9, 
  3.9548494977839184`*^9}, {3.9548500665763874`*^9, 3.954850067620203*^9}},
 CellLabel->"Out[81]=",ExpressionUUID->"7b47115a-1db8-834f-b825-357ef3bb81e0"]
}, Open  ]],

Cell["\<\
To build the cost function, we calculate the expectation value by applying \
the Hamiltonian H to the bra and ket states that we computed. \
\>", "Text",
 CellChangeTimes->{{3.954850156823633*^9, 
  3.954850165004244*^9}},ExpressionUUID->"792c81bf-b2a5-2e43-a4d2-\
465692276fb4"],

Cell[TextData[{
 "Compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[ScriptF]", 
    RowBox[{"(", "\[Theta]", ")"}]}], TraditionalForm]],ExpressionUUID->
  "34aaaeba-1387-ca43-9ff6-fe840c8debfe"],
 ": "
}], "Text",ExpressionUUID->"12c1dad9-9884-7549-837f-d438901e99c4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   TemplateBox[{"\[Psi]"},
    "Bra"], "@", 
   RowBox[{"h1", "@", 
    TemplateBox[{"\[Psi]"},
     "Ket"]}]}]}]], "Input",
 CellChangeTimes->{{3.9548491130770016`*^9, 3.954849145709608*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"54441151-ed1d-e741-b53b-adaea152d30c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9470859355997578, 0.9672816549330779, 
                0.8105138987075476}}}, {{0, 0}, {1, 1}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{"None", "@*", "None"}]], Annotation[#, 
              Composition[None, None], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Pure\"", "\" \"", "\"scalar\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9470859355997578, 0.9672816549330779, 
                0.8105138987075476}}}, {{0, 0}, {1, 1}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{"None", "@*", "None"}]], Annotation[#, 
              Composition[None, None], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Pure\"", "\" \"", "\"scalar\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"0", "\"\[RightArrow]\"", "0"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", "}"}]}, "RowDefault"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {1}, 0, {
    1, {{0, 1}, {{1}}}, {
     Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] 
       Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]] (
        Rational[4, 5] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Cos[Rational[1, 2] $CellContext`\[Theta]2] + Complex[0, 
           Rational[-1, 2]] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2] + Complex[0, 
           Rational[1, 5]] Sin[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2]) + 
      Complex[0, 1] 
       Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]] (Complex[0, 
           Rational[4, 5]] Cos[Rational[1, 2] $CellContext`\[Theta]2] 
         Sin[Rational[1, 2] $CellContext`\[Theta]1] + 
        Rational[-1, 5] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2] + 
        Rational[1, 2] Sin[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2]) 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] + 
      Cos[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] (Complex[0, 
           Rational[1, 2]] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Cos[Rational[1, 2] $CellContext`\[Theta]2] + Complex[0, 
           Rational[1, 5]] Cos[Rational[1, 2] $CellContext`\[Theta]2] 
         Sin[Rational[1, 2] $CellContext`\[Theta]1] + 
        Rational[4, 5] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2]) 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]] + 
      Complex[0, 1] (
        Rational[-1, 5] Cos[Rational[1, 2] $CellContext`\[Theta]1] 
         Cos[Rational[1, 2] $CellContext`\[Theta]2] + 
        Rational[-1, 2] Cos[Rational[1, 2] $CellContext`\[Theta]2] 
         Sin[Rational[1, 2] $CellContext`\[Theta]1] + Complex[0, 
           Rational[4, 5]] Sin[Rational[1, 2] $CellContext`\[Theta]1] 
         Sin[Rational[1, 2] $CellContext`\[Theta]2]) 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]1]] 
       Sin[Rational[1, 2] Conjugate[$CellContext`\[Theta]2]]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Picture" -> "Schrodinger", "Label" -> 
     Composition[None, None], "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9548491271134815`*^9, 3.9548491461834393`*^9}, 
   3.954849222027506*^9, 3.9548492536082153`*^9, 3.954849350239708*^9, {
   3.9548493963792744`*^9, 3.9548493973581085`*^9}, {3.9548495030831985`*^9, 
   3.954849532690119*^9}, 3.9548500703184776`*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"5ee4cb16-fc0f-2b44-b9ea-050d80d2de63"]
}, Open  ]],

Cell["\<\
Since our result is symbolic, we can visualize how the cost function behaves \
across a range of values for the parameters.\
\>", "Text",
 CellChangeTimes->{
  3.954850168664465*^9},ExpressionUUID->"3124af28-415f-bc42-b6b2-\
57b9083f4c89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"energy", "[", 
   RowBox[{"\[Theta]1_", ",", "\[Theta]2_"}], "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "\"\<Scalar\>\"", "]"}], "//", "ComplexExpand"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.9548491476063766`*^9, 3.9548491983120384`*^9}, 
   3.954849257700447*^9, {3.95485007615411*^9, 3.954850078636194*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"d05af405-0f84-8549-ba43-aec479ca7015"],

Cell[BoxData[
 FractionBox[
  RowBox[{"4", " ", 
   RowBox[{"Cos", "[", "\[Theta]1", "]"}]}], "5"]], "Output",
 CellChangeTimes->{{3.9548491985622864`*^9, 3.9548492224526463`*^9}, 
   3.954849258076233*^9, 3.954849508651865*^9, {3.9548500721115017`*^9, 
   3.954850078915386*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"50226b57-4086-c84e-ba67-34ecc23879ee"]
}, Open  ]],

Cell["\<\
This visualization gives us insight into the behavior of the function, \
showing us a spectrum of values. Among these, we can identify the minimal \
values. \
\>", "Text",
 CellChangeTimes->{
  3.954850189635887*^9},ExpressionUUID->"90450048-371c-6a44-97a8-\
4376572d596c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"energy", "[", 
    RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]1", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]2", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotTheme", "->", "\"\<Classic\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.954849178341362*^9, 3.954849210532255*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"b3f7bf04-4a62-9546-884b-5b2caefe4445"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nXvQXVV5h+PHTQJqvbfKTYnYAqNOqwiMZW+rtQTEer9jUSDxQuSqo8hF
iyKOoBKR69RaFQWDKKDxc/zkhABpp14GIgImFsMBQuIHIgdMEdG05rzPYr7n
PW/+OZMnK2v/3t9ee+13rb3X2s9619GvPXJq3rx5F243b95W///7rP855KrN
m5+wgt9NR+03mP7BusGiE759wfIlOzT+pN//8Lpzztow+MYOT/7okrXbNn7L
Y7vn9Us3DH7z5Q8sWrBwqvHH/dUP9+j+a93gyC31/GEA/+qa01ftvfCHUX7U
+MtOXXXYcd3PuzEfNv6n0w/+/lFn3NXNiz/wCy/485+NlO9cPurvXH/o6Sbr
meqtP+LtHW/409uf+HtvP/k7vtpnfu0z3D7D7TPcPsPtM9w+w+2zy+Oz68fn
yXqmeuvHZ8eLz/YHn+0nPuOffYbbZ37tM9w+w+0z3D7D7TPcPrs8Prt+fJ6s
Z6q3fnx2vPhsf/DZfuIzPtlnuH2G22d+7TPcPsPtM9w+w+2zy+Oz68fnyXqm
euvHZ8eLz/YHn+0nPuOHfYbbZ7h9httnfu0z3D7D7TPcPrs8Prt+fJ6sZ6q3
fnx2vPhsf/DZfs5tz6PkM3xyex4ln+GT2/Mo+czv5PY8Sj7DJ7fnUfLZ9c9t
z9ZDex4lnx3v3PY8Sj7bz7k+Dwufh4XPw8LnYeHzsPB5WPg8LHweFj4PC5+H
hc/Wg8/Dwudh4fOw8HmYfCYO+wy3z3D7DLfPcPsMt89w+8wf++zy+Oz68Xmy
nqne+vHZ8eKz/cFn+6n23BXtuSvac1e0565oz13RnruiPXdFe+6K9twV7bkr
2nNXtOeuaM9d0Z67oj13Rf9c+DwqfB4VPo8Kn0eFz6PC51Hh86jweVT4PCp8
tp7WPxc+jwqfR4XPo+Qzxy/yjeQzvMg3ks/wIt9IPsOLfCP57PLKN5LPk/W0
fCP57HiVbySf7afy577In/sif+6L/Lkv8ue+yJ/7In/ui/y5L/Lnvsif+yJ/
7ov8uS/y577In/sif+6L8WDyGV6MB5PP8GI8mHyGF+PB5DO8GA8mn12/xoPJ
Z+vXeDD5bH80Hkw+8/+K+Y3kM7yY30g+w4v5jeQzvJjfSD67PD67fs1vJJ+t
X/MbyWf7o/mN5DP/XszXJZ/hxXxd8hlezNcln+HFfF3y2eXx2fVrvi75bP2a
r0s+2x/N1zU/r/vrU/dYu/xxK/i985R/vPi3p901eOyK23dcumD7xh+++sP/
cP4FG9t5gVMP5fl3yr/yTS9/4MClW7fyx734L89cf+ZdjVMePvZhtun61wPO
+9kj16wL31Y3fuM7v7ty9rMbGqce8a4o37l8HLfzcUNnb/0Rb29/4PYhyvX2
GU55OOfJPvN3/Pb54tf+w+0z3D7D7Zs5vrkefPNx8cc68cFxES9xOF644+XX
8cIdL9zxmhOv6yFeH5d4rZN4HRfx7rbl/G8eOF6444U7XrjjhTtec+J1PcTr
4xKvdRKv4yLecX+2KcULd7xwxwt3vHDHa068rod4fVzitU7idVzEi17HC3e8
cMfLr+OFO15z4nU9xOvjEq91Eq/jIl50OV6444U7Xrjj5dfxmhOv6yFeH5d4
rZN4HZfi7Yp4uyLeroi3K+Ltini7It6uiLcr4u2KeLuiPad44UV7TvHCi/ac
4jVXe07x+rhqzylex6X+KsULL/qrFC+86K9SvObqr1K8Pq76qxSv49L9KMUL
L+5HKV54cT9K8ZrrfpTi9XF1P0rxOi7lG32Rb/RFvtEX+UZf5Bt9kW/0Rb7R
F/lGX+QbfZFv9I6X/1fkkyleeJFPpnjhRT6Z4nU9yidTvNapfDLFy78X4x3X
08aPys9befJzjXess9VjP+HFOCj5CS/GO+ZtPFGMd1x/5/IaByX/7RvlHZfG
Qfa/tz8aB3nc2vu86Hy1vJp5A/7d8wbwufMGw1afx/twj/ddXj60cQHjdx+X
8bt1op92ZP1w64dbP9z6XR6drh+d1oNO2rV1wq0Tbp1w63R5dLp+dFoPOhmP
WCfcOuHWCbdOl0en60en9cydv92UdMKtEz553nVT0unyc+dLNyWd1jP3ucls
8Z7GbNIJn/y8Y7Z4v2I26XT9c59TzCad9IuTnzusTjrhk58XrC6em69OOl3/
3Hn+1ZXO4nnf6q7QWTynW108p3u0vHQWz9ce1aPzXjwvm0064cV5L55zzSad
rl/nPekkvy2uo6QTXlxHSafL6zpKOq1H/VLSCS/6paQTXvRLSafrV7+UdHJ/
K/r5vujn0/w5vOjn+6KfT/Pe1qP7ZtIJL+6bSSe8uG8mna5f982kk7ymyE+S
TniRnySdLq88JOm0ntG/rj9qydrHr+B3wcs/8MEXv/YOeF9wyvdF+cbJk/h/
5HuU499dP3mg6mn1q54Vrkfl03uJRT29j3vys+6c2bz50fecP7v4cS9/y+fv
HvziyBNXbd68XePrr7vtdU89e8PgRd/4ixs2b96q8YdXn/WpzVfdMXh25AHt
eeODZw2OOPamxtvzxuBrttT/v6386+/Zc89fPXtZB6c8fMGWcve18vd+ef/n
/PiqNY1THv7cLfxXrfyVf7z4I688aH3jlH/Nwje8Yen89dEOp2fgF0Q7fOa4
fHtf+rVRfpfxcdtzmQfjuHDKw28Zx9XKfyniglMevmv0X5Q/NHyDUx7+wvF5
ae3t1qOvuXLmbXc2TvmH4nzdOj6/rfyGw9++7z1P3di4z/tJ43bSyp+x5lcz
e/3o7sYpf3a0H9oV/YHbFdztCu521Z5Lq/3A3U7gbg9wn3e4zzvc5x3u8wv3
eYT7fMF9XuwPPsPtM8+N7TPcPsPtc3vOL5/h9hlun+H2GW6f4fYZbp/h9hlu
n+H22f7gM9w+8xzePsPtM9w+t/cm5DPcPsPtM9w+w+0z3D7D7TPcPsPtM9w+
2x98hk9uz6PkM3xyex4ln9t7KBPb8yj5DJ/cnkfJZ/jk9jxKPsMnt+dR8hk+
uT2Pks/2Z257HhU+Dwufh4XPw8LnYeHzsPB5WPg8LHweFj4PC5+Hhc/Dwudh
4fOw8HlY+DxMPpPn2me4fYbbZ7h9httnuH2G22e4fYbbZ7h9httnuH2G22f7
g8/woj13RXvuivbcFe25K9pzV7TnrmjPXdGeu6I9d0V77or23BXtuSvac1e0
565oz13RPxc+jwqfR4XPo8LnUeHzqPB5VPg8KnweFT6PCp9Hhc+jwudR4fOo
8HmUfOY9uyLfSD7Di3wj+Qwv8o3kM7zIN5LP8CLfSD7Di3wj+Qwv8o3kM7zI
n/sif+6L/Lkv8ue+yJ/7In/ui/y5L/Lnvsif+yJ/7ov8uS/y577In/sif+6L
/LkvxoPJZ3gxHkw+t/d2J48Hk8/wYjyYfIYX48HkM7wYDyaf4cV4MPlsfzQe
TD4zH1bM5ySf4fa5vQctn+H2GW6f4cV8S/IZbp/h9hlun+H2GW6f7Y/mN5LP
zKd9MuZD8BnOvAo+w9fE/IzmzZLP8GIerPmMn36vGz/h34l5MM1fJT/hxXxU
8xMf+LUPX/jp09cduHTHFfbhmx85eKulCx63wj7wHNk+/PLnVy5csPDxbf6B
eBfHvJPjPSX0ON5zQ89zT3l4q+XvXNviRY/jRY/jvWb6FV9ZvmS7FC+/jvf+
J12+8cClj03xbh/Pox3vbkue+oK1y7dP8S6L+R/HuzL0ON41ocfxosfxosfx
bvPqSz+1ZO1UinfnP/7ysuVLtkrx8ut4D4nn2o73iK0/9LSlC7ZJ8d4X8zCO
d9vQ43h3CT2OFz2OFz2O9/Nb2skjA8e7ckt7+OPA8Y7n1/80cLytH1W8l1y0
5pEDl85L8S6K+RDH+4XQ43ivCz2O94HQ43jR43h32uLbAyne8fOpB1O8J12x
bL+1y3+X4l0Wz9kdL7+O97cxL+F4dwk9jveQ0ON40eN40eN4D9pSz50p3vH9
dH2Kd3xdbEzxvjue1zveVVvOy70p3vtjfsDxvir0ON7LQo/jnR96HC96HO9t
W457ZYp3nKetTPEu2VLPj1K8D8Zzf8f77S06b07x8ut4t/7KWI/jfSj0ON5j
Qo/jRY/jXRDHcbzj/H9t53i/NtbfOd4N8f6A433zWE/neGdjvOx4+XW8h4Ue
x/vV0ON40eN4Vxz4+N2WLrg/xbtbHMfxXjNunyned8V7CI5363F7S/HeE+NW
x3t16En9c/w63hWhx/Gix/G++BkLX7dg4cMp3vFz6t+neG+N4zjeS+J9Bsf7
4XF/kuI9IsaPjvdFocfxbht6HC+/jhc9jveW3730ZWuXPyblmYMtPj8m5Zlf
H99fUp7Z8mLF+9vx/SLFe2+M4xzvzaHH8V4dehwvehwvv+n++45fvX3Bwm1T
vB/Zcl62SfEePs4fUrwHx/sVjpdxgOO9VOt8iXdp6HG8J4Yex4sex4sex/vP
/3nSB5esnZ/iHbfz+SneXcf5YYp3u3hPI53fcb6X4j0yxjXpfhR6HO8+ocfx
osfxosfxzn/BMz63fEkeN/GeguNdO87/U7zXxvsejnfZOJ9P8e5WjI+2Dz2O
Fz2Od03ocbzoKeJN+TPvbxCvxo8prw4fWl6tcWXjjBMfiPp3Df3wc2IcBGec
vkPo5H0J+dbycMoTn8t7P0D53PJ2jU9TPo8/+M91y3jQ7zlcFuM4OOP6B+Uz
/ByNTxnv44Pfc4jfxnX9pvMb1286j3G9pPO1b5T3+Qq96XxxXPt/pMbFlGfc
eqX8j+s9+R/Xe/Kf8an9j34m+b+vfIATl/1/deix/ytCv/2P+0XyP+4Xyf/o
n5P/J0V5+79TjCvtP8e1/5dqnE55xtH2P+4vyf+4vyT/GS/b/xeS78j/k+QD
fCeN3/H5nNBj/7cO/fY/8pPkf+Qnyf/IB5L/K6K8/b8mxrn2n+Pa/3s1b0D5
pTGOtv+RzyT/I59J/jN+T+0/xt32f4V8aFzzCfh8a+ix/2eHfvsf+XAa30U+
nMZ3tzIul//bR3n7f1CMu+3/vnFc+3+E5jEo/8wY19v/yJ/TeDDy54H95z5v
/0+MeQD7P18+wA/S/AY+7xd67P8zQr/9j/FX8j/GX8n/GH8l//m1/1+LeQD7
f00c1/7fo3kVyh8Y8wz2P8Zryf/4Tf5fH/rt/zYxL2H/F8gH+Nc034LPK0OP
/X9F6Lf/Md5P/sd4P/kf4/3k/1FR3v6vi3kJ+8+v/Z/VPA/lbop5GPsfv8n/
mB9I/l8e+u3/oTFPYv+XyAf4bZr/wee9Q4/9vzr02/+YX0rj8ZhfSuPxmF/q
7H/43Nn/OC+d/Q8/O/sfvy+x//Hb2f+Yj0rj95iP6ux/+NzZ/zgvnf2/TT7o
vHT2P3zu7H+cl87+x3xm8j/mM5P/MZ+Z/I/rMfkfv8n/6E+S//drHkz9VfI/
5j+T/zH/mfyPfib5H/1S8v9r8kH9UvI/+pnkf/RLyf+YP0/+x/x58j/mq5P/
cT9K/sd9Ofkf99Pk/281L6f7dfI/5tuT/zHfnvyP+2zyP+7Lyf+D5IPuy8n/
uM8m/+O+nPyP5zXJ/3hek/yP5zXJ/8gzk/+Rv/X2P/LJ5P8izRMqX+3tfzzf
Sf7H853kP/N19j/y0j7ln/JBeWlv/yPPTP5HXtrb/xjXpPmceD6Y5nNeRHuR
/zEe6e1/jF+S/xzX/t+neUuN15L/8Twxzf/E88Te/vNr/2NclvzfST5oXJb8
j3FWb/9jXJb8j3F98j9+k//x/Df5jy77H+P35D/Htf/LNI+q+Yrkfzy/Tv7H
8+vkP/OZ9j/mJZL/t8oHzUsk/2OeIfkf8xLJ//hN/sf7D8n/eN8g+R/zUcn/
mMdL/nNc+79Y87qa30v+x/sSzX+tn2rl9R5FOi8x/5bOS8zXpfNyjvzRfF3j
Wt/U6tG8XDpfxAvXuqd03uE+v8xPflKc90N83uHUj59wny/vz8B5gXNe0O/6
0Q+3fvY9mDw/sH3SCbdO78OATrh1un50wq2TfQ8m51FbJ51w6/Q+DOiEW6fr
RyfcOtn3YPJ4f/PAOuGT59U3p/cB4Nbp+tEJt072PZg8LtiUdMKt0/swzH0f
clPS6frnvq+4Kelk34PJ4/fZpBM+ed57NumEW6frn/ue8GzSyb4Hk8e5q5NO
uHV6H4a57/GuTjpd/9z3bFdXOovx+Oqu0JnyWO/DIJ1doTPl8/DivBfvacwm
nfDivCed8OK8J53w4joqxtebkk54cR0lnfDiOko64UW/VLwHsjnphBf9UtIJ
L/qlpBNe9PMpX4IX/XzKc7wPg/r5vujn030fXtw3k054cd9MOr0Pg+6bSafr
130z6WTfgyIPSTrhRR6SdMKLPCTphKOT/Am97EvAOlu497uGe79r+Nz9rked
Oes9Jtcz1fu46MQ/64RbJ9w64dZpjs7J9Uz1Pi55qnWin3GG9cOtH279cOs3
R//keqZ6Hxf91sk+Arzfof3AG6c86+Hh3kcd7njhjhfufdTh3rcE7n1LXB7f
XD++TdYz1Vs/6z0cL+sTCt96+4bPPEezz3D7DLfPcPsMt89w+wy3z3D77PL4
7PrxebKeqd768dnx4nPhW2/f8JlxvH2G22e4fYbbZ7h9httnuH2G22eXx2fX
j8+T9Uz11o/PjhefC996+4bP3N/sM3zyd7imZ+x/m6+V/3D0w6nH54Xy+ACn
vM8X5dXftvI+j5T3eYT7PLo857E4bufjcn6LuLrJcU31hW+9faM92H/aQ3F+
++L8tvp93slrfH+E+zzCfb7g9s0cfybXM9X7uOi3TvQzD2f9cOuHWz/c+s3R
P7meqd7HRb91tu/1xnMi64dbf3svXvrh1m+O/sn1TPU+bvtOiXTSz/C+p/sZ
uPsTuPsTuOOFO164+wG4+wG4+wGXxzfXj2+T9Uz11s/163i5fgvfevuGz8z7
2me4fYbbZ7h9httnuH2G22e4fXZ5fHb9+DxZz1Rv/fjsePG58K23b/jMeM4+
w+0z3D7D7TPcPsPtM9w+w+2zy+Oz68fnyXqmeuvHZ8eLz4VvvX3DZ8bH3i8R
bj/h9hNuP+H2E24/4fbT5fHT9ePnZD1TvfXjp+PFT/uDn3D85D1mxu//svyQ
v3vaTRva+7Xwi9c9ed57fn/7gPWc8L3O3G/P3V94/YB1j/AzPvThy/f/5o0d
6wPh6064bXDDG+/sdo/7MfyqmA9h/RX826cc9rfnvPrWjnVK8ONOvfjhi+Zd
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
1A93/cTt8+t1kdQD9/n1ur//A1l9OYg=
    "], {{
      {GrayLevel[1], EdgeForm[None], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1: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
5d7ahZWKxNjl1P6uvz+i762I//9YHT7wKGPGRnZ+kRj37XXijXKDW+vEG+Uk
99SJuclnRmXs2UXiC4/U4TDGou+tE7+SI71cJ873qnymTizzNfAk2qIifNF4
28VF+NwubdaePE278UqR/TBtE700Heena6KvZmgTvzynSGxiE/dfkT1jPuHO
Ipzj6Tp8zPjtM3U4m/He8Th/URFOuSD9XUV4zAb0LxR5Xm/ViQuaC9iuDUc9
QM5WJ3fwaZNYmzG3HfWJ6sT2P9Y2teHGu4C3asPf9pSH1OFaXzfJ9/gM5M7G
DeWx8lnjhsYPd2XMFNzLlUVi6+aKvF+5sLG9q4pwZWOLxhh3aBJ3v6nIsZzM
/2kf5LMju7nIvRp3v7XI771dJw76DmPm1j4X+e0d2/gOg5rE9P39u5Ft3YaX
7tWEx8hn5KQ7tfEvBiOfrIn+nxzZFE309pTgWZvo/Dm1EW3svu9xwSr2/zLW
5/Rt+I/veqEquvHyMj6cek/9N08VHnG+XLuJrnu6jS+onlRfyl3UV+qteau+
Dizj318FPqWMf381+FTwAlU416Xy+ipxo1vAi+tnu/7LxIzUS+qnxapwxuvA
m7SJ7xmzmr9N3Gk++mUY8wzy27RHHG9ehE8uWsUvuVbfokq86lbwlHXWr7p/
/za2Rp2zXxs7pS1enjkeKcIvt6J/vcj/P0+T+/d35ZLPFnle8zZ5tgsgXwvZ
M0We0exNnuFcbWJFbxfRLws2uQfvZZEm97mY99zk/10CvB1j3ypiw6Zow818
13u0sQX6ktqHB4vw+/Ga2HTt71hN+Ll2dowmvF3OsJr/R5H3oa14oIj/MH4T
DqB9XxTZvUXW3N5tbP1xnN+9jZ06sklO8p4iPoO55YeLcPd/+ueMUcjPnUtf
WQ4hl/i6Sg7PmP9J8u46+bKhcvg6cXLj5eYI1XnmTczzyTnPNkZTJ15q3NSc
sfnBo9vk/9RP5laMmS6qfmuTR1TXmlN4vU4u4Cjky5eJ7V9dxZdWP8hvv6pi
o7XVxqLMgx+qfeZ/Gc15mKNp+3l2ZO/WyXcc08ZPVr8aa128TB7hoip5YvNi
RzLm2Tp+7uHg5+rkiY5o42+rc8yJLNdmjazA/KuVyTvcVMXve5r+d/of6+RH
jgffRXsI+Y/0t7XJk3zTJk+m/TGvZB5R/3RYm1zd4t5zFdv4Xd+++j9+2Iut
v6NOrNhY+K1cczdjv6b/Avkmroc2+XXzvMeCVy+ju8yD6FeaLzb2pV+pHlR3
6ZOaZzQWZ3xEPaYvajxCna+/+kAbv/CfNnlb857G8YxTqIPN0dzTJvf4E/29
bfKEP7fxAV8C/+37pb3I+BWZ45QmHEYuc0YdHjmda43jielPN77YRgfKExds
szfdozO12cczad/7umIS8AR9XTFxE647nHFu5pmkTc590iacTG52DPe+UBsb
u1Bfd03K+DMYP3cbGzg38lna6JKZ9du4x4mL2L9/+mt1Ofqr2+Sdr+b6S4rU
HmzY1w/DIzvZOGuZd7Qs/SNtdLL8dDbwzeBZmujJcRl/mnHHOjGc8egvaOLH
rO2aasMb5Y/ai9E4fyrjF/Ec8oXd63VyWBvJXZv4W6tz/jzwQGNAjL+iTaz4
Qsae38RnWgvZ2XW416xyhzb6VTtzahPuJwdcto3+Wx7Zs230/DLgpcAzc92Z
XXjlt0Xi1+c08b30HU9r4heuDJ66jc6bpgn3lQOfrO+DfBTmOYV5xgb/w7kT
jPvKn7RTro86cfFp6RevE+PYqkrMcBv6PczDNvE79YOvbBP/v4SxT7axa4s1
iYl+UyRvZw7i6yJ5CJ/P+nLlNnlDc8HGP81nyb2MA1tbIN8zR2s+yzyyMeRp
+7Em8z3GwuRg5orMH51JPwL39mTfZ1dnPt7noMa0rVFQ957gnHV0srr3nj7v
NBZ9fZ282Bbgv4vkIjer8r/5Pxr3Nufhezc/uGyT/MvlbWJt8lXzUr4z391l
bdaB68FY9Ihl8oP7VclV+O7MA15QJz9o7PriOnU1xtutvZAbm1s13yrPNm58
Vx2dtn2TmIn221zAKE3itMZs9C31MX+q4lu6l/+L6ZTZy8ZojLFoz8wpyF3k
MH9V8XW1g8aSjClZW2VuYuwmNsJYnfzGNWYM9q8i68H6H9+9a+ASdUCZPNqM
8qY6sdAtm+Rv3BfmcM3ruAfND45RJm84WJvSJHZ0qXqibyvNK97Zt4nqautX
9CPMj1oPoX9h/tKcn/r8KPDNdepStma+H+rU8OwGvqpOPnRj8D9FctC7Vtlb
7rGXevGjtBkH9O2G+INeYv2ub2PoO/fHu2eMT+onmJuwlsC4iTF/Y9bGhdw/
7pctjJW02RfmCPn7b68456i95As9p31y33zcH+Pvf9W/B/NeA/q6yKZeMubv
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
/B8QH6fc
            "]], Polygon3DBox[CompressedData["
1:eJwtmwf8V9Mbx7/3nnvOT0VURkNJqAiVaEmpVJJVCEm0aaCUkaIo0UC2ImVn
R7JHwywrm/yN7L33+H/ePvf16vY9n/Oce773e+45z/g8z2/bISf2OyGvVCpv
hEql0Oc0/fdUVqlcqvZP6tspViqPqb2X2idWVSp1ha8R/lv4OOFzNX6Nxt+h
vtbqO0zyBmrnmvStVKkcKly/Qkel8qbwifqcIdhV93yo8Ueo70K199M8p2q+
09TXWPKL1NdHfdN1Pav2LerbRbLDNf4C4d7qP0Xjz9bn08KXSf6L5AslX6L2
Jfqe7SU/XX3bCs/TmP01drLknwvvrXYnyQ8Vni1ZT+GJwufo8xnhmzVmZ917
uuTXqt1c7aGSn6DPrYTnaEwvjT1J33OucDfhjySbqb61at+pvt2ET9JVV+25
6ttXsqM038VqH6D2aZrvZOHHhScJzxL+TOPP1/gV6pusvn66rlC7s/o+0Xdd
n/w+lqi9s8afInyV8Ha67xjhV9RfPfcaXq21v4H51b5VfbtIPk6fM4W7a85P
eIfCZ/F+hd8RnqjxVwo3UXuQxjfSHNcLF3qO0cL/k3wT3bOd+m5R3+caN0vt
lbp/ivC7km8seRP13Sx8pq5Vkl0g/LXGniH8ROY14/sXafzdai/QPU01/zXC
i4RnM4dwA33/XcJtNPZ44fGSXyTcSPho4VNzz91Lc34ZvI6sJ3uM9/GT5B11
HSz8LHtM1yOZf/O7kl+bPP98jdmB/Se8ULiZZEOE1wvXyL2HrtGzjGO/qt1Q
8oGST9VnM+FLNedBmvsBXVeqfQh7TfKBkm8k+fTMe+4gzbE5Z0v4Fd6l+hao
3Z+14v1LvqPww7qvgfB76h+h8UF4c+FbdM8Lwg/qmToI3yz8vPADwu2FbxR+
Wnip8G7CuwsvF14k3Ez4OM1TS/h8fcc+nB3JnxC+TfJdeb/6/u0ku0fjthDe
TmOOF35JYx7SmMPUr3+Vs9mTkn2r8buqvZpzpvFbq2+48HMac6/G76H571d7
sdrNJf9G43eRfCXnXPgmyZ+R/B7J2wgfo/5qwjM0pqvmOjT8pzoq04T3Et5B
1yi1X1bfwxLsqfsfZS+q3UL3b5+sKy5mjwoHzqfGf6O+IZrrQl3d1b5KfYdq
roN1XaZ2C96RZKs0/hThCbxP4bckP1ayf9RfS/NdJvy2ZGvV11PyN4WPQR9K
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
4GKPK/fYvcHc28hyzP8BR+FyMw==
            "]], Polygon3DBox[CompressedData["
1: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
VDBPN+tpqf9/KmTNfg==
            "]], Polygon3DBox[CompressedData["
1:eJwtz7ErhGEcwPFfjncRp7jRK9NZWBnOP+FPsJ1yVyYWysLCoFAKE1mYOLmz
YGIxikUmVxTKjSefN4ZvfZ/v83uep2d4ujpV6YiIPBLMdUV05yKucCF8dkZ8
4R1vONMa9i5R47PmE17HqfWrmSZa+EZdu7Z3gwYfQJuveHQVP7ygbaCfz2hl
3POWuzf1Qb6gzeOZt/VHHPOSNokT/qQVzfd4d0vbRi8f0caze/iBdoiUT2i3
zuw6O6qNYY/faTWs8VQbwjo/1xadebDuQx5VfV9f1l/+Z7MzS/qRvqMXc39/
zf78wRPtF0YUMzs=
            "]]},
          Annotation[#, "Charting`Private`Tag$41679#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.312, 0.188, 0.4]}, {"Directional", 
           RGBColor[0.8, 0, 0], 
           ImageScaled[{2, 0, 2}]}, {"Directional", 
           RGBColor[0, 0.8, 0], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0, 0, 0.8], 
           ImageScaled[{0, 2, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0j0snVEYB/BzXVzfKnbUrmKStBis7mQQqUTE1g6VGkQj2k7VtQuJxcTG
1BuT71t210VRVIiP1kcq0o+k0d+bDs/7+z/3nPc9T3Luw96+9hexEMIH9V2I
8pnHMSdyQ3jAKVZzho84y2auMsksu3jME/Vc/sNXzMkL4T2LOMZKTrGWKTYw
zdb8EPqce6Uy+gtGg83lhLChfynPy1m5X16QN+VFbnGJ21zm5+i7zh+wb0W/
ox+U0/Ku/Il70fz8wjXus9E7Q/YdyI/lYflQfiK/ka/VV/03vlZJs6/rW7jC
en5kDSdZwVEWcoQxDvK37/1Sz+QjPmWGbUyziSnWcZpVHPfuLS+dW85z/mDC
7GW8UXlyKd9Zi8sl0Zks5r3fiviXheyJu28WqG75IprLWoI/6TrCHR0bbmmM
0GnfKRE6PE6i+1VNFt/G/v9//gGzwlD+
        "]]}, 
      {GrayLevel[0], 
       Line3DBox[{1183, 1428, 712, 1611, 1429, 1745, 1357, 1612, 1430, 1746, 
        1358, 1184, 1747, 1359, 1185, 1748, 1360, 1186, 1705, 1749, 1361, 
        1613, 861, 1660, 1852, 1614, 1431, 1750, 1362, 1615, 1432, 1751, 1363,
         1187, 1752, 1364, 1188, 1753, 1365, 1189, 1706, 1754, 1366, 1616, 
        1707, 1755, 1367, 1617, 1908, 1433, 1368, 1434}], 
       Line3DBox[{1190, 1435, 1661, 1853, 1618, 1436, 723, 1619, 1437, 1756, 
        1369, 1191, 1757, 1370, 1192, 1758, 1371, 1193, 1854, 1438, 1372, 
        1620, 1909, 1439, 1662, 1855, 1621, 1440, 1663, 1856, 1622, 1441, 
        1759, 1373, 1194, 1760, 1374, 1195, 1761, 1375, 1196, 1708, 1762, 
        1376, 1623, 1910, 1442, 1377, 1624, 1911, 1443, 1378, 1197}], 
       Line3DBox[{1198, 1444, 1664, 1857, 1625, 1445, 1665, 1858, 1626, 1446, 
        734, 1199, 1763, 1379, 1200, 1764, 1380, 1201, 1859, 1447, 1381, 1627,
         1912, 1448, 1666, 1860, 1628, 1449, 1667, 1861, 1629, 1450, 1668, 
        1862, 1202, 740, 1203, 1765, 1382, 1204, 1863, 1451, 1383, 1630, 1913,
         1452, 1384, 1631, 1914, 1453, 1385, 1205}], 
       Line3DBox[{1207, 1454, 1455, 1915, 1206, 1456, 1457, 1916, 1208, 1458, 
        1459, 1864, 1209, 745, 1210, 1766, 1386, 1211, 1865, 1460, 1461, 1212,
         1866, 1462, 1463, 1917, 1213, 1464, 1465, 1918, 1214, 1466, 1467, 
        1867, 1215, 1669, 1801, 1216, 751, 1217, 1868, 1468, 1469, 1218, 1869,
         1470, 1471, 1219, 1870, 1472, 1473, 1220}], 
       Line3DBox[{1222, 1474, 1475, 1919, 1221, 1476, 1477, 1920, 1223, 1478, 
        1802, 1709, 1224, 1670, 1803, 1225, 756, 1226, 1871, 1479, 1480, 1227,
         1872, 1481, 1482, 1921, 1228, 1483, 1484, 1922, 1229, 1485, 1486, 
        1873, 1230, 1671, 1804, 1231, 1672, 1805, 1232, 930, 1487, 1233, 1874,
         1488, 1489, 1234, 1875, 1490, 1491, 1235}], 
       Line3DBox[{1237, 1492, 1493, 1923, 1236, 1494, 1806, 1710, 1238, 1495, 
        1807, 1711, 1239, 1673, 1808, 1240, 1674, 1809, 1241, 939, 1496, 1242,
         1876, 1497, 1498, 1924, 1243, 1499, 1500, 1925, 1244, 1501, 1810, 
        1712, 1245, 1675, 1811, 1246, 1676, 1812, 1247, 1713, 1813, 1502, 
        1248, 948, 1503, 1249, 1877, 1504, 1505, 1250}], 
       Line3DBox[{1253, 1507, 1767, 1387, 1632, 1509, 1768, 1388, 1633, 1511, 
        1769, 1389, 1256, 1770, 1390, 1258, 1771, 1391, 1260, 1718, 1772, 
        1392, 1634, 1719, 1773, 777, 1635, 1515, 1774, 1393, 1636, 1517, 1775,
         1394, 1265, 1776, 1395, 1267, 1777, 1396, 1269, 1723, 1778, 1397, 
        1637, 1725, 1779, 1398, 1638, 1726, 1780, 1399, 1273}], 
       Line3DBox[{1272, 1521, 1520, 1878, 1271, 1519, 1825, 1724, 1270, 1518, 
        1824, 1722, 1268, 1823, 1680, 1266, 1822, 1679, 1264, 1721, 1821, 
        1516, 1263, 1720, 1820, 1514, 1262, 1926, 1513, 957, 1261, 1512, 1819,
         1717, 1259, 1818, 1678, 1257, 1817, 1677, 1255, 1716, 1816, 1510, 
        1254, 1715, 1815, 1508, 1251, 1714, 1814, 1506, 1252}], 
       Line3DBox[{1274, 1522, 1681, 1879, 1639, 1523, 1781, 1400, 1640, 1524, 
        1782, 1401, 1275, 1783, 1402, 1276, 1784, 1403, 1277, 1727, 1785, 
        1404, 1641, 1927, 1525, 1682, 1880, 1642, 1526, 788, 1643, 1527, 1786,
         1405, 1278, 1787, 1406, 1279, 1788, 1407, 1280, 1728, 1789, 1408, 
        1644, 1729, 1790, 1409, 1645, 1928, 1528, 1410, 1281}], 
       Line3DBox[{1282, 1529, 1683, 1881, 1646, 1530, 1684, 1882, 1647, 1531, 
        1791, 1411, 1283, 1792, 1412, 1284, 1793, 1413, 1285, 1883, 1532, 
        1414, 1648, 1929, 1533, 1685, 1884, 1649, 1534, 1686, 1885, 1650, 
        1535, 799, 1286, 1794, 1415, 1287, 1795, 1416, 1288, 1730, 1796, 1417,
         1651, 1930, 1536, 1418, 1652, 1931, 1537, 1419, 1289}], 
       Line3DBox[{1290, 1538, 1687, 1886, 1653, 1539, 1688, 1887, 1654, 1540, 
        1689, 1888, 1291, 1797, 1420, 1292, 1798, 1421, 1293, 1889, 1541, 
        1422, 1655, 1932, 1542, 1690, 1890, 1656, 1543, 1691, 1891, 1657, 
        1544, 1692, 1892, 1294, 810, 1295, 1799, 1423, 1296, 1893, 1545, 1424,
         1658, 1933, 1546, 1425, 1659, 1934, 1547, 1426, 1297}], 
       Line3DBox[{1299, 1548, 1549, 1935, 1298, 1550, 1551, 1936, 1300, 1552, 
        1553, 1894, 1301, 815, 1302, 1800, 1427, 1303, 1895, 1554, 1555, 1304,
         1896, 1556, 1557, 1937, 1305, 1558, 1559, 1938, 1306, 1560, 1561, 
        1897, 1307, 1693, 1826, 1308, 821, 1309, 1898, 1562, 1563, 1310, 1899,
         1564, 1565, 1311, 1900, 1566, 1567, 1312}], 
       Line3DBox[{1314, 1568, 1569, 1939, 1313, 1570, 1571, 1940, 1315, 1572, 
        1827, 1731, 1316, 1694, 1828, 1317, 826, 1318, 1901, 1573, 1574, 1319,
         1902, 1575, 1576, 1941, 1320, 1577, 1578, 1942, 1321, 1579, 1580, 
        1903, 1322, 1695, 1829, 1323, 1696, 1830, 1324, 1042, 1581, 1325, 
        1904, 1582, 1583, 1326, 1905, 1584, 1585, 1327}], 
       Line3DBox[{1329, 1586, 1587, 1943, 1328, 1588, 1831, 1732, 1330, 1589, 
        1832, 1733, 1331, 1697, 1833, 1332, 1698, 1834, 1333, 1051, 1590, 
        1334, 1906, 1591, 1592, 1944, 1335, 1593, 1594, 1945, 1336, 1595, 
        1835, 1734, 1337, 1699, 1836, 1338, 1700, 1837, 1339, 1735, 1838, 
        1596, 1340, 1060, 1597, 1341, 1907, 1598, 1599, 1342}], 
       Line3DBox[{1356, 1610, 1080, 1355, 1609, 1851, 1744, 1354, 1608, 1850, 
        1743, 1353, 1849, 1704, 1352, 1848, 1703, 1351, 1742, 1847, 1607, 
        1350, 1741, 1846, 1606, 1349, 1946, 1605, 1845, 1740, 1348, 1604, 
        1844, 1739, 1347, 1843, 1702, 1346, 1842, 1701, 1345, 1738, 1841, 
        1603, 1344, 1737, 1840, 1601, 1343, 1736, 1839, 1600, 1602}]}, 
      {GrayLevel[0], 
       Line3DBox[{499, 715, 1747, 500, 725, 1757, 524, 735, 1763, 539, 745, 
        554, 1803, 755, 569, 1808, 765, 584, 1817, 775, 1770, 599, 785, 1783, 
        614, 795, 1792, 629, 805, 1797, 644, 815, 659, 1828, 825, 674, 1833, 
        835, 689, 1842, 845, 704}], 
       Line3DBox[{501, 716, 1748, 502, 726, 1758, 525, 736, 1764, 540, 746, 
        1766, 555, 756, 570, 1809, 766, 585, 1818, 776, 1771, 600, 786, 1784, 
        615, 796, 1793, 630, 806, 1798, 645, 816, 1800, 660, 826, 675, 1834, 
        836, 690, 1843, 846, 705}], 
       Line3DBox[{503, 857, 858, 1749, 504, 875, 1854, 876, 526, 891, 1859, 
        892, 541, 907, 1865, 908, 556, 923, 1871, 924, 571, 939, 940, 586, 
        1819, 955, 956, 1772, 601, 971, 972, 1785, 616, 987, 1883, 988, 631, 
        1003, 1889, 1004, 646, 1019, 1895, 1020, 661, 1035, 1901, 1036, 676, 
        1051, 1052, 691, 1844, 1067, 1068, 706}], 
       Line3DBox[{505, 859, 1087, 861, 506, 877, 1094, 1909, 879, 527, 893, 
        1101, 1912, 895, 542, 909, 1866, 1108, 911, 557, 925, 1872, 1115, 927,
         572, 941, 1876, 1122, 943, 587, 957, 1129, 959, 1773, 602, 973, 1136,
         1927, 975, 617, 989, 1143, 1929, 991, 632, 1005, 1150, 1932, 1007, 
        647, 1021, 1896, 1157, 1023, 662, 1037, 1902, 1164, 1039, 677, 1053, 
        1906, 1171, 1055, 692, 1845, 1069, 1178, 1071, 1073}], 
       Line3DBox[{509, 865, 719, 1751, 510, 881, 729, 1759, 530, 897, 1862, 
        739, 545, 913, 1867, 749, 560, 929, 1873, 759, 575, 1810, 945, 769, 
        590, 1821, 961, 779, 1775, 605, 977, 789, 1786, 620, 993, 799, 635, 
        1009, 1892, 809, 650, 1025, 1897, 819, 665, 1041, 1903, 829, 680, 
        1835, 1057, 839, 695, 1847, 1074, 849, 709}], 
       Line3DBox[{511, 720, 1752, 512, 730, 1760, 531, 740, 546, 1801, 750, 
        561, 1804, 760, 576, 1811, 770, 591, 1822, 780, 1776, 606, 790, 1787, 
        621, 800, 1794, 636, 810, 651, 1826, 820, 666, 1829, 830, 681, 1836, 
        840, 696, 1848, 850, 710}], 
       Line3DBox[{513, 721, 1753, 514, 731, 1761, 532, 741, 1765, 547, 751, 
        562, 1805, 761, 577, 1812, 771, 592, 1823, 781, 1777, 607, 791, 1788, 
        622, 801, 1795, 637, 811, 1799, 652, 821, 667, 1830, 831, 682, 1837, 
        841, 697, 1849, 851, 711}], 
       Line3DBox[{515, 866, 867, 1754, 516, 882, 883, 1762, 533, 898, 1863, 
        899, 548, 914, 1868, 915, 563, 930, 931, 578, 1813, 946, 947, 593, 
        1824, 962, 963, 1778, 608, 978, 979, 1789, 623, 994, 995, 1796, 638, 
        1010, 1893, 1011, 653, 1026, 1898, 1027, 668, 1042, 1043, 683, 1838, 
        1058, 1059, 698, 1850, 1075, 1076, 1079}], 
       Line3DBox[{517, 868, 1090, 869, 1755, 518, 884, 1097, 1910, 885, 534, 
        900, 1104, 1913, 901, 549, 916, 1869, 1111, 917, 564, 932, 1874, 1118,
         933, 579, 948, 1125, 949, 594, 1825, 964, 1132, 965, 1779, 609, 980, 
        1139, 981, 1790, 624, 996, 1146, 1930, 997, 639, 1012, 1153, 1933, 
        1013, 654, 1028, 1899, 1160, 1029, 669, 1044, 1904, 1167, 1045, 684, 
        1060, 1174, 1061, 699, 1851, 1077, 1181, 1078, 1082}], 
       Line3DBox[{519, 870, 1091, 1908, 871, 520, 886, 1098, 1911, 887, 535, 
        902, 1105, 1914, 903, 550, 918, 1870, 1112, 919, 565, 934, 1875, 1119,
         935, 580, 950, 1877, 1126, 951, 595, 966, 1878, 1133, 967, 1780, 610,
         982, 1140, 1928, 983, 625, 998, 1147, 1931, 999, 640, 1014, 1154, 
        1934, 1015, 655, 1030, 1900, 1161, 1031, 670, 1046, 1905, 1168, 1047, 
        685, 1062, 1907, 1175, 1063, 700, 1080, 1182, 1081, 1083}], 
       Line3DBox[{701, 842, 1176, 1064, 1839, 686, 832, 1169, 1943, 1048, 671,
         822, 1162, 1939, 1032, 656, 812, 1155, 1935, 1016, 641, 802, 1886, 
        1148, 1000, 626, 792, 1881, 1141, 984, 611, 782, 1879, 1134, 968, 596,
         1767, 772, 1127, 952, 1814, 581, 762, 1120, 1923, 936, 566, 752, 
        1113, 1919, 920, 551, 742, 1106, 1915, 904, 536, 732, 1857, 1099, 888,
         521, 722, 1853, 1092, 872, 496, 712, 1085, 852, 1084}], 
       Line3DBox[{702, 843, 1177, 1065, 1840, 687, 833, 1170, 1049, 1831, 672,
         823, 1163, 1940, 1033, 657, 813, 1156, 1936, 1017, 642, 803, 1887, 
        1149, 1001, 627, 793, 1882, 1142, 985, 612, 1781, 783, 1135, 969, 597,
         1768, 773, 1128, 953, 1815, 582, 763, 1121, 937, 1806, 567, 753, 
        1114, 1920, 921, 552, 743, 1107, 1916, 905, 537, 733, 1858, 1100, 889,
         522, 723, 1093, 873, 497, 1745, 713, 1086, 853, 854}], 
       Line3DBox[{703, 844, 1066, 1841, 688, 834, 1050, 1832, 673, 824, 1034, 
        1827, 658, 814, 1894, 1018, 643, 804, 1888, 1002, 628, 1791, 794, 986,
         613, 1782, 784, 970, 598, 1769, 774, 954, 1816, 583, 764, 938, 1807, 
        568, 754, 922, 1802, 553, 744, 1864, 906, 538, 734, 890, 523, 1756, 
        724, 874, 498, 1746, 714, 855, 856}], 
       Line3DBox[{707, 847, 1179, 1946, 1070, 693, 837, 1172, 1944, 1054, 678,
         827, 1165, 1941, 1038, 663, 817, 1158, 1937, 1022, 648, 807, 1890, 
        1151, 1006, 633, 797, 1884, 1144, 990, 618, 787, 1880, 1137, 974, 603,
         777, 1130, 1926, 958, 588, 767, 1123, 1924, 942, 573, 757, 1116, 
        1921, 926, 558, 747, 1109, 1917, 910, 543, 737, 1860, 1102, 894, 528, 
        727, 1855, 1095, 878, 507, 717, 1852, 1088, 860, 862}], 
       Line3DBox[{708, 848, 1180, 1072, 1846, 694, 838, 1173, 1945, 1056, 679,
         828, 1166, 1942, 1040, 664, 818, 1159, 1938, 1024, 649, 808, 1891, 
        1152, 1008, 634, 798, 1885, 1145, 992, 619, 788, 1138, 976, 604, 1774,
         778, 1131, 960, 1820, 589, 768, 1124, 1925, 944, 574, 758, 1117, 
        1922, 928, 559, 748, 1110, 1918, 912, 544, 738, 1861, 1103, 896, 529, 
        728, 1856, 1096, 880, 508, 1750, 718, 1089, 863, 864}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJztXXlcTtkbv5aMbBVS1kpNw8wgO4Xb8GqGsaSFrKWGPkiyVUORqKhREtkG
YbSQJclWUZpMpUUiRoss86u37S27JvzuNec9dzq/njHX523iN6d/+Hw/53Pu
83yf5Tz3PPc9R8d2idm8pgzD7P6EYZpx/zrXnJucuLWIZf7480iZd/xatHUZ
6+M/o0WxJB3jsyLeWJ8dLGOPXpkxuUg5/ZIcT5AF6LUeLmMdis1uPfUrwvj+
nZFZWXZlbJKnx8KRBQ8wHupenrm5k5S9qeYam3vjPsZD3My7mN2VsnEbZp17
vuBXjMfFpvzuNKcCyWE8So7/8U+VfDxLjg/YNyWemx/j47NqNPn52+wPX8DJ
g/Eli3dk8fJMMM7N5uTHeIsvX13n5b+pG9ua0xfjOwNn9uL1NQz+xoLjB8uZ
KwmeyfNT6fpqBscnxg2a5KfyfFKeKc+UZ8oz5ZnyTHmmPFOeKc+UZ8oz5Zny
THmmPFOeKc+U5w+H54xNGUNjVwhyGh1eO77brAq2dfWOXdMCTTGet96z4vUb
GWgXaHz/ybaL+lkLvDksyfBNtqkA8QEnlINnBQhy/j7C2z1xbhlr80Wcvf1n
gl5srvTZ3KEyEPfcHOzM4VieDR4d/hJXyWqzh3uuIL/hmlX8c0dPLjbl5MT4
8Q5eW3g572lqp7gHmuLnRmx1f6svhFu8vGjJ8YzxKZpNJTzPEK4oeymK54bm
DeKB6kv1pfpSfam+VF+qL9WX6kv1/Sf1hcZD70EQP43FJzQe4hmaRyz/0HjI
LtA80HuQWPuK3TdQ1Ps+xIPY9/fGkp/KSeWkclI5qZxUTionlXPXMZWovPgC
PN5GPbJ1tGU529yrcwqH4/F3F4Qo8bjY8VBdLXZ+qG4UO16sPHayVKvE3dfk
45ldXtvT3Ior2V0v7lmdXBonH8/4PbCNNcmQsY987j0NGn0H4+uCCgaH9q1g
DxiomRWPxH0opo2fr+uO8aUgvn7+yMNtVuN+FrOltGmEhp0UxDMyj3XqO/ce
xifdT+++prAUxA+np9yfGJaLce9uKgtDKyrYvOzPW+5zEnBjX/051c/f+mHV
mzes3A/RXxU79IVMmRuP+Zl9Jns2P35VipYm91yMfxpU0I1/LoQbdrTj9cL4
M+Y/4bxeEJ5b8moSxxvGo1IiV/G8QXhkZLtTLtPzMN7v89s+FpXlbP61lPuc
vTBuZd3bkLeXifKiNuUd4zDeNPHRqi2ZMnbpSpW0E0sFvCJvbjxv92U9Blr1
V8rGvC2pHh3w5nYlW6CS6s75D8ZPT92bzPtPQ/uVWD9paLuLtSNkF4h/yjPl
mfJMeaY8U54pz5RnyjPlmfJMeaY8U54pz/88z3uMnQb2V8rG4y+rWG7j90Ni
fhy8t7yjwPPsRY9d+X2VT/d6p7hMz8P4tNSNnvz+jKJ45v5bXh+ffTw2P5wY
JvBpsOz8An4fTFF8NhYPYvV1dippO+yMoO+SI1FT40KpvlRfqi/Vl+pL9aX6
Un2pvlRfqi/Vt/H0FcsDhHfT2NCKkx/jxy89suLlh3DoewmIN7HjIZ7F8g99
5wDh0HcOEA595wDhivLnxrIX5Z/yT/mn/FP+Kf+Uf8o/5Z/yT/mn/FP+Kf+U
f8o/5f/fyT80vrHsAs0j1l5i7Q7ZV6zdFbVfqij5qZxUTionlZPKSeWkclI5
G1pO4lwCRn4uweK6510zIfWfd80A510z8vOuiXOqGeCcagY4p5qRn1P9schJ
nP/AAOc/fHTyb6x7rggzG50rAukVWfe8ESYRnTeiKH2Jc0sY4NwS9Pc/55Yw
wDnq780bcf4JA5x/wgDnqFOeKc+U57/Ik2L5F2sXsfZqLDuKta9Yuze0P/y/
ro9Uflqf/Flfms8pz5Tnj5dnyuf78an91OGWc/tkjOeZpu8w3CJjt+aucq4d
chfjms+SqrfIytguJSfWS1wE3o723tXl9TwpO8Wp/zqLZ3/ireVj82tXpGyk
v4qOkZ3Qp6u0tTVXKi9nBxD7If3QfsjZxK0Ld5gI/KSdNenvLyllNxw3PHEo
TuDnp0E3VxgZSFltg9BCtRqBHwP9EcWdtcvY7npFR3+SCr/ft9RPUU/Nr2TN
XuvbdbAU9L1b6ubnuFnG5qxNe9jua0HfphFS9fZlZezqy6VVkgn4vEemAzvW
dvjycjY5unkcoyrwMPvWN1d/jZayXmM2torWEHDrUO0zPY9L2SfdqlR2Wgrz
dB5ebnndqZx1hfqArMYPJXsEfW+v6VNycZyU9Q43u6RvL4xvpeEyP+ROKetd
cmq9TkoOxodlnp2U71jJOu4KsajYKuxfdR18yTcrXcYa33I4bjFHkGf7k7R+
gY7lbGbEtZ1eYYIdi28+P6rGlLJ9frt1rHqYoNdAw+Ox47Zz+nZe5DqZFXib
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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  AxesStyle->Directive[
    GrayLevel[0], 
    AbsoluteThickness[0.2]],
  BaseStyle->Automatic,
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{421.7254258354283, 347.4118030967972},
  ImageSizeRaw->Automatic,
  LabelStyle->{FontFamily -> "Times"},
  Lighting->{{"Ambient", 
     RGBColor[0.312, 0.188, 0.4]}, {"Directional", 
     RGBColor[0.8, 0, 0], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     RGBColor[0, 0.8, 0], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     RGBColor[0, 0, 0.8], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{{-4, 4}, {-4, 4}, {-0.7999993608809455, 0.8}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.686786393455483, -2.0338568302024735`, 2.1138065325597335`},
  ViewVertical->{-0.39878443325132834`, 0.4808376724483194, 
   0.7808752195779425}]], "Output",
 CellChangeTimes->{{3.9548491717619267`*^9, 3.9548492108224125`*^9}, 
   3.9548500828527203`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"53f306c4-67d0-2f4b-93e6-28a3e9b3c487"]
}, Open  ]],

Cell[TextData[{
 "To pinpoint the precise parameters that correspond to the minimum, we use \
the ",
 StyleBox["FindMinimum",
  FontWeight->"Bold"],
 " function. This will give us the exact pair of parameters that achieve the \
minimum value."
}], "Text",
 CellChangeTimes->{{3.954850194449913*^9, 
  3.954850195506361*^9}},ExpressionUUID->"66809a04-ac0d-d745-bc58-\
cf6cbd946be1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindMinimum", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]1", ",", 
       RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]2", ",", "2"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[67]:=",ExpressionUUID->"147fc28f-1b72-f640-8e7a-a87bd4a9ad8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8`"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Theta]1", "\[Rule]", "3.1415926535879097`"}], ",", 
     RowBox[{"\[Theta]2", "\[Rule]", "2.`"}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[67]=",ExpressionUUID->"74cbdc5e-5fda-9146-a0ac-e51e1a94e844"]
}, Open  ]],

Cell["\<\
The result is logical: when \[Theta]1\:200b is either \[Pi] or \[Minus]\[Pi], \
we consistently observe the minimum value of approximately \[Minus]0.8-This \
is in line with our expectations, confirming that the optimization process is \
working correctly.
\
\>", "Text",
 CellChangeTimes->{
  3.954850202965084*^9},ExpressionUUID->"b0eeda12-bb86-414e-a446-\
c3cc9c93198d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 735.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"de3db6e3-b042-4a45-9e98-cb02e0247402"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 118, 0, 88, "Title",ExpressionUUID->"c8ac950e-57ee-b141-ac03-3c0bbff9b2c1"],
Cell[CellGroupData[{
Cell[723, 26, 156, 3, 59, "Section",ExpressionUUID->"5379e0dc-e58a-b045-88c2-16113a507603"],
Cell[882, 31, 475, 9, 52, "Text",ExpressionUUID->"f868ee82-930d-8c48-9019-1d37c4ebe90a"],
Cell[1360, 42, 819, 13, 72, "Text",ExpressionUUID->"74444705-7f77-3244-9ab0-86c43fe6eacb"],
Cell[2182, 57, 678, 11, 72, "Text",ExpressionUUID->"41b69610-d4ab-ec49-a771-2b5bd4da3ebb"],
Cell[CellGroupData[{
Cell[2885, 72, 160, 3, 48, "Subsection",ExpressionUUID->"9e8b7de8-a529-a248-9076-0eef90d5fa47"],
Cell[3048, 77, 554, 11, 72, "Text",ExpressionUUID->"13d473a0-ab1f-8c42-9571-c83359487859"],
Cell[3605, 90, 112753, 1853, 370, "Input",ExpressionUUID->"df0f0ebb-9c9c-7247-ae49-936585198b97"],
Cell[116361, 1945, 232, 5, 25, "Text",ExpressionUUID->"d5113e8b-096b-df42-9cbb-97f38aa0dc53"],
Cell[116596, 1952, 445, 9, 52, "Text",ExpressionUUID->"563c93a0-73ac-f845-af8f-a0d91a612ba5"],
Cell[117044, 1963, 754, 13, 52, "Text",ExpressionUUID->"48cc1b2c-57c0-b348-8ae9-e247c30af415"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117835, 1981, 158, 3, 48, "Subsection",ExpressionUUID->"e5683458-d511-1842-bc74-1cc4b92960f3"],
Cell[117996, 1986, 555, 10, 52, "Text",ExpressionUUID->"1be36ef1-0d34-a644-a33e-ae1c8c89cb30"],
Cell[CellGroupData[{
Cell[118576, 2000, 1645, 44, 118, "Input",ExpressionUUID->"f3f92e19-82f3-854a-9606-93ba22d84bde"],
Cell[120224, 2046, 3318, 82, 544, "Output",ExpressionUUID->"e2a33b42-1d63-bb41-bf00-5eb3054f4711"]
}, {2}]],
Cell[123554, 2131, 431, 8, 52, "Text",ExpressionUUID->"6ba4dcec-b6a3-114f-b086-ba9ebc8e9a8c"],
Cell[123988, 2141, 188506, 3095, 169, "Input",ExpressionUUID->"b85ed7f3-7c6a-ec45-a3f4-c876b324279b"],
Cell[312497, 5238, 232, 5, 25, "Text",ExpressionUUID->"419123e1-92f4-4c4e-8a1e-11876317fa0c"],
Cell[312732, 5245, 222, 6, 31, "Text",ExpressionUUID->"d6d9ca1e-7814-0c49-a691-b9d8cee1b7f3"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[313003, 5257, 104, 0, 59, "Section",ExpressionUUID->"9fae4869-62db-214f-b9ae-43268b281003"],
Cell[313110, 5259, 261, 6, 31, "Text",ExpressionUUID->"aa66aa90-ca13-b645-a986-992a2fbf90ba"],
Cell[CellGroupData[{
Cell[313396, 5269, 287, 5, 25, "Input",ExpressionUUID->"5c813704-d304-6147-907d-777847637b3c"],
Cell[313686, 5276, 24525, 431, 57, "Output",ExpressionUUID->"b2dccaf7-3b80-ec4b-a779-3908a165fb58"]
}, Open  ]],
Cell[338226, 5710, 656, 10, 30, "Code",ExpressionUUID->"7168c911-eecf-ce4c-ae54-3b5ece12f4eb",
 InitializationCell->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[338919, 5725, 192, 2, 59, "Section",ExpressionUUID->"4a719380-b8d4-dd45-ab0e-25baba065e4a",
 CellID->35461336],
Cell[339114, 5729, 914, 24, 57, "Text",ExpressionUUID->"1792628e-b171-af41-bbd5-e08e1bfb9369",
 CellID->583691851],
Cell[340031, 5755, 629, 18, 36, "Text",ExpressionUUID->"55bbb9c0-d9ab-cf4a-b8a3-38b6a4967e72",
 CellID->97490106],
Cell[340663, 5775, 428, 13, 28, "DisplayFormula",ExpressionUUID->"83542243-cca6-0549-b4ea-9e983745fa25",
 CellID->501984331],
Cell[341094, 5790, 406, 8, 31, "Text",ExpressionUUID->"a290770f-8aba-9240-ab28-418acb2b1a59"],
Cell[341503, 5800, 419, 7, 31, "Text",ExpressionUUID->"e0de7d11-19b8-df40-b741-b791d662216b",
 CellID->658387201],
Cell[341925, 5809, 435, 10, 52, "Text",ExpressionUUID->"21f401fd-3c16-0f4c-a722-2c236a6da190"],
Cell[342363, 5821, 396, 10, 31, "Text",ExpressionUUID->"c277dea8-a95d-e242-96da-01a6797a2857",
 CellID->171417182],
Cell[342762, 5833, 709, 18, 25, "Input",ExpressionUUID->"c72b3054-0535-ce4b-9646-6c1eef53704a",
 CellID->131182610],
Cell[CellGroupData[{
Cell[343496, 5855, 170, 3, 25, "Input",ExpressionUUID->"953e1371-b9cc-9a43-9854-2d24d15cf958",
 CellID->589235324],
Cell[343669, 5860, 41341, 611, 136, "Output",ExpressionUUID->"06ad06b7-a2fc-8a4d-a133-71b0def93a6d",
 CellID->103571544]
}, Open  ]],
Cell[385025, 6474, 560, 14, 78, "Text",ExpressionUUID->"80577f78-2b1a-4744-9063-6cd04534d892",
 CellID->244802441],
Cell[CellGroupData[{
Cell[385610, 6492, 184, 4, 25, "Input",ExpressionUUID->"745e3a75-d188-d942-9a73-24dca0ab7a71",
 CellID->288251955],
Cell[385797, 6498, 11237, 231, 57, "Output",ExpressionUUID->"3570a6ea-f607-2d40-b140-e9b4b817f519",
 CellID->43886257]
}, Open  ]],
Cell[397049, 6732, 143, 1, 31, "Text",ExpressionUUID->"94f8c3b9-8142-a846-a6da-aeb4ebff95e6",
 CellID->442250687],
Cell[CellGroupData[{
Cell[397217, 6737, 171, 3, 25, "Input",ExpressionUUID->"28793778-f80a-0b4e-b454-ba8a8cabb019",
 CellID->314916099],
Cell[397391, 6742, 187, 4, 28, "Output",ExpressionUUID->"808cf7d1-509e-a549-8c18-67a2c8f20474",
 CellID->265705957]
}, Open  ]],
Cell[397593, 6749, 250, 4, 72, "Text",ExpressionUUID->"8fd63fd2-cacb-9247-8f17-df91084bb0a5",
 CellID->27661618],
Cell[CellGroupData[{
Cell[397868, 6757, 167, 3, 25, "Input",ExpressionUUID->"166221d7-e45b-ad47-9471-ea050a0362cb",
 CellID->51246933],
Cell[398038, 6762, 1730, 56, 77, "Output",ExpressionUUID->"3f303f91-414e-344a-bb28-3c12be462eac",
 CellID->141224996]
}, Open  ]],
Cell[399783, 6821, 125, 1, 31, "Text",ExpressionUUID->"0c843512-e98c-5140-87d3-44f9b8cca96e",
 CellID->13228737],
Cell[CellGroupData[{
Cell[399933, 6826, 297, 7, 25, "Input",ExpressionUUID->"59cefe9b-2da9-4046-8747-cafd3e98ac68",
 CellID->273488666],
Cell[400233, 6835, 728, 24, 44, "Output",ExpressionUUID->"37f50b33-0fe4-a24f-805d-ed6e6fc4bfa0",
 CellID->346118142]
}, Open  ]],
Cell[400976, 6862, 219, 4, 52, "Text",ExpressionUUID->"ebd3d8f7-3d89-c844-8e68-e38c549acf39",
 CellID->19311713],
Cell[CellGroupData[{
Cell[401220, 6870, 168, 3, 25, "Input",ExpressionUUID->"cc2b009f-2f68-ef42-805a-45d3c34488d7",
 CellID->79153954],
Cell[401391, 6875, 1730, 56, 77, "Output",ExpressionUUID->"a20c5fb9-f208-5b45-b6ca-1eead9fd4b0c",
 CellID->43572769]
}, Open  ]],
Cell[CellGroupData[{
Cell[403158, 6936, 363, 9, 25, "Input",ExpressionUUID->"b1c25668-b903-ac4f-ad40-7b0f098734f8",
 CellID->241601869],
Cell[403524, 6947, 318, 9, 34, "Output",ExpressionUUID->"70e71718-f281-0547-bf77-0746212f0995",
 CellID->54608874]
}, Open  ]],
Cell[403857, 6959, 198, 4, 52, "Text",ExpressionUUID->"af740633-1f03-c24e-9e92-925216e615e9",
 CellID->395982017],
Cell[CellGroupData[{
Cell[404080, 6967, 220, 5, 25, "Input",ExpressionUUID->"036d2fbe-9a48-7f4a-ac4d-00705948f141",
 CellID->66592513],
Cell[404303, 6974, 320, 9, 34, "Output",ExpressionUUID->"d1de4232-4f28-2f47-8eeb-e464308069a4",
 CellID->440269759]
}, Open  ]],
Cell[CellGroupData[{
Cell[404660, 6988, 221, 5, 25, "Input",ExpressionUUID->"09afcde9-efa1-954f-901d-2eaf85175596",
 CellID->208188513],
Cell[404884, 6995, 1667, 56, 79, "Output",ExpressionUUID->"38d92a77-3f6d-1941-b9e4-3e03a5388706",
 CellID->117803623]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[406600, 7057, 164, 3, 59, "Section",ExpressionUUID->"577a03f4-0535-7040-be6c-3e5c805f5e01"],
Cell[CellGroupData[{
Cell[406789, 7064, 171, 2, 48, "Subsection",ExpressionUUID->"b273a3a2-3012-d044-a060-473be4195779"],
Cell[406963, 7068, 563, 13, 93, "Text",ExpressionUUID->"882f61e6-ca69-c547-83e3-725a139c4a49"],
Cell[407529, 7083, 451, 15, 36, "Text",ExpressionUUID->"5f39d741-99d1-a045-948d-61ccd951a94b"],
Cell[407983, 7100, 274, 6, 52, "Text",ExpressionUUID->"0fabb7eb-e1af-af44-84fb-65ad7abcd91c"],
Cell[408260, 7108, 276, 6, 52, "Text",ExpressionUUID->"44cfed5e-c02a-864a-a2f6-adada590a18d"],
Cell[408539, 7116, 578, 18, 37, "Text",ExpressionUUID->"600bd1dc-7085-d545-b3cf-e02b94038edf"],
Cell[409120, 7136, 335, 7, 72, "Text",ExpressionUUID->"ef9d9cf6-c969-dc40-95b8-e75cf00133b9"],
Cell[409458, 7145, 263, 6, 52, "Text",ExpressionUUID->"2f772bb8-3a6c-bc4b-905a-d768133886be"],
Cell[CellGroupData[{
Cell[409746, 7155, 817, 23, 77, "Input",ExpressionUUID->"33a39aa6-162d-b14a-9860-90411cf07dec"],
Cell[410566, 7180, 7430, 151, 120, "Output",ExpressionUUID->"0a0ecc8e-a7c3-5f48-9fb0-258afc504648"]
}, Open  ]],
Cell[418011, 7334, 178, 3, 31, "Text",ExpressionUUID->"72af5dc8-5ab2-7f45-9464-8f7fb319daf3"],
Cell[CellGroupData[{
Cell[418214, 7341, 171, 3, 25, "Input",ExpressionUUID->"b7f902ba-decc-1148-9173-8537bf459221"],
Cell[418388, 7346, 657, 23, 47, "Output",ExpressionUUID->"4d8d0870-104b-594d-902d-e0494cef8a67"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[419094, 7375, 165, 3, 48, "Subsection",ExpressionUUID->"739ee633-4958-c740-b07a-afd0e2269319"],
Cell[419262, 7380, 485, 9, 93, "Text",ExpressionUUID->"b9f1ae47-4b5a-a744-9196-ce3a86fae07e"],
Cell[419750, 7391, 304, 7, 72, "Text",ExpressionUUID->"5e8d2630-cfd9-ed49-b29f-c5165dec2f72"],
Cell[420057, 7400, 165, 3, 31, "Text",ExpressionUUID->"3dc96890-19e5-ec4a-adc4-4c397675e367"],
Cell[420225, 7405, 599, 19, 43, "Text",ExpressionUUID->"fa2338eb-6149-7245-9a89-47b50aadf4d9"],
Cell[420827, 7426, 211, 4, 31, "Text",ExpressionUUID->"00e0b498-0f0e-634d-abdc-6eb111652df5"],
Cell[CellGroupData[{
Cell[421063, 7434, 167, 3, 28, "Item",ExpressionUUID->"3743edc2-5c53-5240-91be-9d11bd805643"],
Cell[421233, 7439, 484, 9, 95, "Subitem",ExpressionUUID->"cfedbd43-0c90-fb41-8143-87836183800b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421754, 7453, 165, 3, 28, "Item",ExpressionUUID->"95f57baa-d895-e745-9a9c-688531431319"],
Cell[421922, 7458, 517, 9, 113, "Subitem",ExpressionUUID->"78d6f286-8ccf-a243-9899-4505c93e055e"]
}, Open  ]],
Cell[422454, 7470, 306, 6, 72, "Text",ExpressionUUID->"6c70b821-6efb-e345-ab6a-4f1093e5db16"],
Cell[CellGroupData[{
Cell[422785, 7480, 573, 14, 60, "Input",ExpressionUUID->"81c6bdf2-6db1-934e-9773-d453cb024c67"],
Cell[423361, 7496, 7035, 154, 190, "Output",ExpressionUUID->"096c013e-57e4-7f4d-a810-ab7063b97bb7"]
}, Open  ]],
Cell[430411, 7653, 401, 8, 93, "Text",ExpressionUUID->"b95afef2-2aeb-9244-bfd9-4febdb321e8a"],
Cell[CellGroupData[{
Cell[430837, 7665, 150, 2, 25, "Input",ExpressionUUID->"15c5e79c-ebee-c642-ba17-3bd02a937d07"],
Cell[430990, 7669, 2989, 88, 128, "Output",ExpressionUUID->"c1ad2e4d-6c30-b244-abf9-c8bd9ed1e8a1"]
}, Open  ]],
Cell[433994, 7760, 183, 4, 31, "Text",ExpressionUUID->"986de6df-c63a-b646-a61f-f76e26f43a75"],
Cell[CellGroupData[{
Cell[434202, 7768, 156, 3, 28, "Item",ExpressionUUID->"b33da37b-d81a-944f-9dd1-f156f8549026"],
Cell[434361, 7773, 413, 8, 77, "Subitem",ExpressionUUID->"d9b406b1-e549-6649-933c-6a795bd54a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434811, 7786, 158, 3, 28, "Item",ExpressionUUID->"f14fccd8-82ff-9a4a-b217-f26b561467bb"],
Cell[434972, 7791, 448, 8, 77, "Subitem",ExpressionUUID->"21f28fb2-6de2-da47-9cba-9c20751c16df"]
}, Open  ]],
Cell[435435, 7802, 402, 8, 93, "Text",ExpressionUUID->"2b986f5a-ae8f-1e42-9f0c-8176233f80b3"],
Cell[435840, 7812, 366, 7, 72, "Text",ExpressionUUID->"c9d26839-6bba-7c44-9e23-bc182fe7b96f"],
Cell[436209, 7821, 196, 4, 31, "Text",ExpressionUUID->"86b949de-0454-3a46-a06c-8d74afb17b28"],
Cell[436408, 7827, 82, 0, 28, "Item",ExpressionUUID->"0c2bfadc-f959-7d4e-9706-ea723f7396f2"],
Cell[436493, 7829, 161, 3, 52, "Text",ExpressionUUID->"f7566203-4126-464a-9f23-200743beee59"],
Cell[CellGroupData[{
Cell[436679, 7836, 414, 11, 60, "Input",ExpressionUUID->"27b1fbbd-9143-7c45-95e1-951e1d618f22"],
Cell[437096, 7849, 3921, 88, 121, "Output",ExpressionUUID->"20c181f7-539c-3246-90f6-2d9eb9bda8c4"]
}, Open  ]],
Cell[441032, 7940, 84, 0, 31, "Text",ExpressionUUID->"1062001f-2f78-bc4c-9ec1-df6bf7d0f274"],
Cell[CellGroupData[{
Cell[441141, 7944, 377, 8, 25, "Input",ExpressionUUID->"51bfeae9-a77a-894c-9cef-93e85d14c3ae"],
Cell[441521, 7954, 2846, 69, 56, "Output",ExpressionUUID->"0bbb45c2-d18d-4947-8563-dbbe59680e10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444404, 8028, 285, 6, 25, "Input",ExpressionUUID->"d2b210c8-42b9-964d-82a9-8486d1d76f64"],
Cell[444692, 8036, 10030, 203, 57, "Output",ExpressionUUID->"6c82bea1-df0d-434c-b435-b5ce53bd1e58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[454759, 8244, 153, 2, 25, "Input",ExpressionUUID->"04a0bb7b-e90a-f64a-b803-dbefd2cf0f76"],
Cell[454915, 8248, 774, 23, 43, "Output",ExpressionUUID->"41974ade-9621-0f45-92f3-e0eebe59380e"]
}, Open  ]],
Cell[455704, 8274, 82, 0, 28, "Item",ExpressionUUID->"85de87b6-cccd-5843-beea-ca266d6ee965"],
Cell[455789, 8276, 161, 3, 52, "Text",ExpressionUUID->"c11f7c1b-88db-5f4c-86c6-961cc457914e"],
Cell[CellGroupData[{
Cell[455975, 8283, 525, 13, 60, "Input",ExpressionUUID->"1cda7fcc-14e3-b14b-b2c2-c9dad86f0384"],
Cell[456503, 8298, 4866, 110, 136, "Output",ExpressionUUID->"d925f1fc-fb17-b24c-af44-3de7990b64d7"]
}, Open  ]],
Cell[461384, 8411, 96, 0, 31, "Text",ExpressionUUID->"44e498ed-8aef-a349-8f5d-8df01fb6453b"],
Cell[CellGroupData[{
Cell[461505, 8415, 566, 15, 43, "Input",ExpressionUUID->"2dd83ce6-ea41-d240-b7d8-d128eb22bce2"],
Cell[462074, 8432, 4494, 114, 78, "Output",ExpressionUUID->"0e9f1f7e-ab52-e949-8cb1-1c932511c410"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466605, 8551, 215, 5, 25, "Input",ExpressionUUID->"dc56a37f-7888-394e-9da4-3fec19d9bdd4"],
Cell[466823, 8558, 11108, 229, 57, "Output",ExpressionUUID->"50e2e760-8c41-544f-8695-b14d3364303a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[477968, 8792, 153, 2, 25, "Input",ExpressionUUID->"603f27d6-1104-fc45-a8d7-c8ce7d634b99"],
Cell[478124, 8796, 1645, 53, 77, "Output",ExpressionUUID->"1ddbdda1-895b-a543-987c-8491797fd544"]
}, Open  ]],
Cell[479784, 8852, 166, 3, 52, "Text",ExpressionUUID->"8c773441-df20-5c44-92ad-dfe3e7b0cea8"],
Cell[CellGroupData[{
Cell[479975, 8859, 215, 5, 25, "Input",ExpressionUUID->"56fe621c-6ace-c442-bf25-893d75195d8c"],
Cell[480193, 8866, 708, 22, 43, "Output",ExpressionUUID->"2e79c185-79c5-2749-8973-2b11d5d7f7d2"]
}, Open  ]],
Cell[480916, 8891, 128, 0, 31, "Text",ExpressionUUID->"80f7d50c-7bcc-2a4c-ac79-de38a86f0aec"],
Cell[CellGroupData[{
Cell[481069, 8895, 153, 2, 25, "Input",ExpressionUUID->"e0aa8e3c-ecdb-814a-9684-f8b87dc7cdb0"],
Cell[481225, 8899, 708, 22, 43, "Output",ExpressionUUID->"6d100d7d-f0bf-284b-a500-1d1887c3d740"]
}, Open  ]],
Cell[481948, 8924, 131, 0, 31, "Text",ExpressionUUID->"e197bcbd-0d54-164b-a77b-7a209490a316"],
Cell[482082, 8926, 389, 7, 93, "Text",ExpressionUUID->"88fe85e1-9c45-dd43-be81-b3667a3de26f"],
Cell[482474, 8935, 602, 11, 155, "Text",ExpressionUUID->"7f1270f5-98b0-204f-82b4-c51096530ff7"],
Cell[CellGroupData[{
Cell[483101, 8950, 935, 23, 77, "Input",ExpressionUUID->"f5858424-2a6a-9c4c-a0d8-7292220d3a94"],
Cell[484039, 8975, 12168, 268, 187, "Output",ExpressionUUID->"474b9de2-d722-a54b-a78e-4585a21f790f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496244, 9248, 161, 2, 25, "Input",ExpressionUUID->"5b0df801-9a3f-f943-8d82-dce7500f4987"],
Cell[496408, 9252, 6413, 182, 238, "Output",ExpressionUUID->"47accf5b-6a8a-6940-9ab4-b2a58707520f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502882, 9441, 105, 0, 59, "Section",ExpressionUUID->"d91163da-bc92-6844-8951-53a54bf0c94a"],
Cell[502990, 9443, 419, 8, 93, "Text",ExpressionUUID->"feb2f208-aa76-0448-bc0e-8bf05ab30663"],
Cell[503412, 9453, 441, 8, 93, "Text",ExpressionUUID->"3a73d24b-9d98-094b-a082-26f2b9a421e1"],
Cell[503856, 9463, 313, 6, 52, "Text",ExpressionUUID->"2112751e-01e8-1343-9195-c14b286b8b20"],
Cell[504172, 9471, 999, 30, 43, "Text",ExpressionUUID->"52416ce5-bae7-8e43-9056-fef62afe77b6"],
Cell[505174, 9503, 239, 6, 52, "Text",ExpressionUUID->"012c6044-4b83-d540-8a60-455ccf9733d0"],
Cell[CellGroupData[{
Cell[505438, 9513, 364, 10, 40, "Input",ExpressionUUID->"ad82e1de-06ee-1d47-a4ef-3e05e6cd51c6"],
Cell[505805, 9525, 12604, 268, 57, "Output",ExpressionUUID->"82389168-be85-ab4a-9ed5-e2ec45aa4729"]
}, Open  ]],
Cell[518424, 9796, 577, 15, 84, "Text",ExpressionUUID->"f9a1ff9d-7a64-cc40-8ded-2b61fb2928b2"],
Cell[CellGroupData[{
Cell[519026, 9815, 654, 17, 60, "Input",ExpressionUUID->"3ed390f2-3ec9-8942-9499-51d7b1f28fd4"],
Cell[519683, 9834, 4961, 112, 136, "Output",ExpressionUUID->"ab3bdd09-9d3f-7a47-b8c9-c017c45049f1"]
}, Open  ]],
Cell[524659, 9949, 364, 8, 72, "Text",ExpressionUUID->"dd9bfc9c-41af-5a49-8c59-bf65bb67a84b"],
Cell[CellGroupData[{
Cell[525048, 9961, 284, 7, 30, "Input",ExpressionUUID->"8b0f47ec-d656-3041-9e3a-45ed3666083f"],
Cell[525335, 9970, 4760, 118, 78, "Output",ExpressionUUID->"12659fa9-18a0-b347-8602-496608bc2dd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[530132, 10093, 296, 8, 30, "Input",ExpressionUUID->"91112cf8-e896-ca43-9c76-cfe9b6c5e2a4"],
Cell[530431, 10103, 5184, 132, 78, "Output",ExpressionUUID->"7b47115a-1db8-834f-b825-357ef3bb81e0"]
}, Open  ]],
Cell[535630, 10238, 289, 6, 52, "Text",ExpressionUUID->"792c81bf-b2a5-2e43-a4d2-465692276fb4"],
Cell[535922, 10246, 269, 8, 31, "Text",ExpressionUUID->"12c1dad9-9884-7549-837f-d438901e99c4"],
Cell[CellGroupData[{
Cell[536216, 10258, 316, 9, 30, "Input",ExpressionUUID->"54441151-ed1d-e741-b53b-adaea152d30c"],
Cell[536535, 10269, 11901, 239, 57, "Output",ExpressionUUID->"5ee4cb16-fc0f-2b44-b9ea-050d80d2de63"]
}, Open  ]],
Cell[548451, 10511, 249, 6, 52, "Text",ExpressionUUID->"3124af28-415f-bc42-b6b2-57b9083f4c89"],
Cell[CellGroupData[{
Cell[548725, 10521, 463, 10, 25, "Input",ExpressionUUID->"d05af405-0f84-8549-ba43-aec479ca7015"],
Cell[549191, 10533, 359, 7, 44, "Output",ExpressionUUID->"50226b57-4086-c84e-ba67-34ecc23879ee"]
}, Open  ]],
Cell[549565, 10543, 283, 7, 52, "Text",ExpressionUUID->"90450048-371c-6a44-97a8-4376572d596c"],
Cell[CellGroupData[{
Cell[549873, 10554, 545, 13, 43, "Input",ExpressionUUID->"b3f7bf04-4a62-9546-884b-5b2caefe4445"],
Cell[550421, 10569, 55859, 913, 327, "Output",ExpressionUUID->"53f306c4-67d0-2f4b-93e6-28a3e9b3c487"]
}, Open  ]],
Cell[606295, 11485, 381, 10, 72, "Text",ExpressionUUID->"66809a04-ac0d-d745-bc58-cf6cbd946be1"],
Cell[CellGroupData[{
Cell[606701, 11499, 439, 12, 25, "Input",ExpressionUUID->"147fc28f-1b72-f640-8e7a-a87bd4a9ad8f"],
Cell[607143, 11513, 323, 8, 28, "Output",ExpressionUUID->"74cbdc5e-5fda-9146-a0ac-e51e1a94e844"]
}, Open  ]],
Cell[607481, 11524, 383, 9, 93, "Text",ExpressionUUID->"b0eeda12-bb86-414e-a446-c3cc9c93198d"]
}, Open  ]]
}, Open  ]]
}
]
*)

