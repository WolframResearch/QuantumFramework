(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1111219,      22449]
NotebookOptionsPosition[   1096661,      22210]
NotebookOutlinePosition[   1097053,      22226]
CellTagsIndexPosition[   1097010,      22223]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Error Correction and Magic State Distillation", "Title",
 CellChangeTimes->{{3.876514791475091*^9, 3.876514796669154*^9}, {
  3.8770484218787603`*^9, 
  3.877048426998528*^9}},ExpressionUUID->"bcf5368f-dba5-41cd-991d-\
6270cf33853a"],

Cell["By: William Munizzi", "Author",
 CellChangeTimes->{{3.876514805372138*^9, 
  3.876514809108264*^9}},ExpressionUUID->"5cab2992-d4ce-421a-bba7-\
70a9cc553603"],

Cell[CellGroupData[{

Cell["Paclet Installation", "Subsection",
 CellChangeTimes->{{3.8765149706500463`*^9, 
  3.876514975178384*^9}},ExpressionUUID->"729758b4-613f-4c8b-9a02-\
cbc988c0594e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletInstall", "[", 
  RowBox[{
   RowBox[{"CloudObject", "[", "\"\<https://wolfr.am/DevWQCF\>\"", "]"}], ",",
    " ", 
   RowBox[{"ForceVersionInstall", " ", "->", " ", "True"}]}], "]"}], "\n", 
 RowBox[{"<<", " ", "Wolfram`QuantumFramework`"}]}], "Input",
 CellChangeTimes->{{3.876514976859099*^9, 3.876514983194426*^9}, {
   3.876515909156494*^9, 3.876515922354311*^9}, 3.877053145492975*^9},
 CellLabel->"In[5]:=",ExpressionUUID->"b16058e1-df1b-41c7-bb67-0cf89f33fafa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.25\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.0.25\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/wmunizzi/Library/Mathematica/Paclets/Repository/\
Wolfram__QuantumFramework-1.0.25\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.0.25", 
    "WolframVersion" -> "13.1+", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {
        "Wolfram`QuantumFrameworkLoader`", {
         "Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumChannel"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}}, 
    "Location" -> 
    "/Users/wmunizzi/Library/Mathematica/Paclets/Repository/Wolfram__\
QuantumFramework-1.0.25"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.876514986419211*^9, {3.8765159103605537`*^9, 3.87651592258062*^9}, 
   3.8765165457179403`*^9, 3.87705315393963*^9, 3.877557768022101*^9, 
   3.877557835837538*^9, 3.877557924342445*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"efb18012-227f-43e6-bd9e-6bd30a5aa1f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Testing", "Section",
 CellChangeTimes->{{3.877037591953841*^9, 
  3.8770375954334173`*^9}},ExpressionUUID->"0573a1d1-8b5e-4850-8aae-\
9f9d8670adce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KroneckerProduct", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"b802b5ca-a1b7-4d60-bb51-81cdba840169"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0"},
     {"1", "0", "0", "0"},
     {"0", "0", "0", "1"},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.87703760906022*^9},
 CellLabel->
  "Out[31]//MatrixForm=",ExpressionUUID->"8ae22341-08d8-40b8-a123-\
3a29f6e11649"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumTensorProduct", "[", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<Identity\>\"", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<PauliX\>\"", ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}], "[", "\"\<Matrix\>\"", 
   "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[32]:=",ExpressionUUID->"4d20c1ad-e33f-461b-9dd5-622d2e9b4c9d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "1", "0", "0"},
     {"1", "0", "0", "0"},
     {"0", "0", "0", "1"},
     {"0", "0", "1", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 1, 2, 3, 4}, {{2}, {1}, {4}, {3}}}, {1, 1, 1, 1}}]]]]], "Output",\

 CellChangeTimes->{3.877037612258398*^9},
 CellLabel->
  "Out[32]//MatrixForm=",ExpressionUUID->"7b63ce6a-0f37-4e85-b34e-\
2f069f93c316"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testState", "=", 
   RowBox[{
    InterpretationBox[
     FrameBox[
      TagBox[
       TooltipBox[
        PaneBox[GridBox[{
           {
            ItemBox[
             GraphicsBox[
              {Thickness[0.0025], 
               {FaceForm[{RGBColor[
                0.9607843137254902, 0.5058823529411764, 0.19607843137254902`],
                 Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                  0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
                  1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{205., 
                  22.863691329956055`}, {205., 212.31669425964355`}, {
                  246.01799774169922`, 235.99870109558105`}, {
                  369.0710144042969, 307.0436840057373}, {369.0710144042969, 
                  117.59068870544434`}, {205., 22.863691329956055`}}, {{
                  30.928985595703125`, 307.0436840057373}, {
                  153.98200225830078`, 235.99870109558105`}, {195., 
                  212.31669425964355`}, {195., 22.863691329956055`}, {
                  30.928985595703125`, 117.59068870544434`}, {
                  30.928985595703125`, 307.0436840057373}}, {{200., 
                  410.42970085144043`}, {364.0710144042969, 
                  315.7036876678467}, {241.01799774169922`, 
                  244.65868949890137`}, {200., 220.97669792175293`}, {
                  158.98200225830078`, 244.65868949890137`}, {
                  35.928985595703125`, 315.7036876678467}, {200., 
                  410.42970085144043`}}, CompressedData["
1:eJxTTMoPSmViYGCQAWIQDQQPlDrLHYA0XxdDiQNYJCATwveoAtG/6uTA/HWX
w8B8tsaHGch8BoYNGcjqGS7lmqOYd/qhKYj2c/hUDJF/awKiz129jsL3c9qN
wo/gXBuDzK/YbRWDbF6F4MVoZPtmvJoejeyehpD9yiA6e88JMD+h/JYS2J6k
J2C+gleGEkQ9QyYyf9NcaWR+w1Rn80xk/bDwgZkPCz+Y/QGPF5Yju++B0sZy
ZPfD+DD/wfgw/8P4sPCBmQcLP5T4AgBuZHHc
                  "]}]}, 
               {FaceForm[{RGBColor[
                0.5529411764705883, 0.6745098039215687, 0.8117647058823529], 
                Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{44.92900085449219, 282.59088134765625`}, {
                 181.00001525878906`, 204.0298843383789}, {
                 181.00001525878906`, 46.90887451171875}, {44.92900085449219, 
                 125.46986389160156`}, {44.92900085449219, 
                 282.59088134765625`}}}]}, 
               {FaceForm[{RGBColor[
                0.6627450980392157, 0.803921568627451, 0.5686274509803921], 
                Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{355.0710144042969, 282.59088134765625`}, {
                 355.0710144042969, 125.46986389160156`}, {219., 
                 46.90887451171875}, {219., 204.0298843383789}, {
                 355.0710144042969, 282.59088134765625`}}}]}, 
               {FaceForm[{RGBColor[
                0.6901960784313725, 0.5882352941176471, 0.8117647058823529], 
                Opacity[1.]}], 
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{200., 394.0606994628906}, {336.0710144042969, 
                 315.4997024536133}, {200., 236.93968200683594`}, {
                 63.928985595703125`, 315.4997024536133}, {200., 
                 394.0606994628906}}}]}},
              BoxID -> 
              "{\"data\":\"{\\\"jsonData\\\":\\\"{\\\\\\\"type\\\\\\\": \
\\\\\\\"Graphics\\\\\\\",\\\\n\\\\\\\"version\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\
\\n\\\\\\\"height\\\\\\\": 11.433641,\\\\n\\\\\\\"width\\\\\\\": 10.000000,\\\
\\n\\\\\\\"offset\\\\\\\": [-66.000000, \
-5.000000],\\\\n\\\\\\\"UserCoords\\\\\\\": [13.467693, 428.589520, \
386.532307, 2.040850],\\\\n\\\\\\\"AxesOrigin\\\\\\\": [50.000000, \
100.000000],\\\\n\\\\\\\"primitives\\\\\\\": [\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Clip\\\\\\\", \\\\\\\"transform\\\\\\\": [1.000000, 0.000000, \
0.000000, 1.000000, 0.000000, 0.000000], \\\\\\\"path\\\\\\\": [[66,5], \
[66,17], [76,17], [76,5]]},\\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [245, 129, 50], \\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" \
: \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": [[71.134,15.8755], \
[71.134,10.7972], [72.2335,10.1624], [75.5319,8.25804], [75.5319,13.3363], \
[71.134,15.8755], [71.134,15.8755], [66.4681,8.25804], [69.7665,10.1624], \
[70.866,10.7972], [70.866,15.8755], [66.4681,13.3363], [66.4681,8.25804], \
[66.4681,8.25804], [71,5.48677], [75.3979,8.02591], [72.0995,9.93027], \
[71,10.5651], [69.9005,9.93027], [66.6021,8.02591], [71,5.48677], \
[71,5.48677], [75.733,7.90984], [71.067,5.21594], [71.0411,5.20445], \
[71.0139,5.1987], [70.9861,5.1987], [70.9589,5.20445], [70.933,5.21594], \
[66.267,7.90984], [66.2441,7.92651], [66.2255,7.94725], [66.2116,7.97126], \
[66.203,7.99775], [66.2,8.02591], [66.2,13.4137], [66.203,13.4419], \
[66.2116,13.4684], [66.2255,13.4924], [66.2441,13.5131], [66.267,13.5298], \
[70.933,16.2237], [70.9457,16.2301], [70.9589,16.2352], [70.9724,16.2388], \
[70.9861,16.2409], [71,16.2416], [71.0139,16.2409], [71.0276,16.2388], \
[71.0411,16.2352], [71.0543,16.2301], [71.067,16.2237], [75.733,13.5298], \
[75.7559,13.5131], [75.7745,13.4924], [75.7884,13.4684], [75.797,13.4419], \
[75.8,13.4137], [75.8,8.02591], [75.797,7.99775], [75.7884,7.97126], \
[75.7745,7.94725], [75.7559,7.92651], [75.733,7.90984], [75.733,7.90984], \
[75.733,7.90984], [71,5.48677], [66.4681,8.25804]]}, \\\\n{\\\\\\\"type\\\\\\\
\": \\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \
\\\\\\\"edgeForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1, \\\\\\\"thickness\\\\\\\": {}, \
\\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": \
{\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\
\\\\\"dashing\\\\\\\": [], \\\\\\\"dashingOffset\\\\\\\": 0}, \
\\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\\\\\": [141, 172, 207], \
\\\\\\\"opacity\\\\\\\": 1}, \\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\
\" , \\\\\\\"points\\\\\\\": [[66.8433,8.91349], [70.4907,11.0193], \
[70.4907,15.231], [66.8433,13.1251], [66.8433,8.91349], [66.8433,8.91349]]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Polygon\\\\\\\", \
\\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\\\\\\\": \
{\\\\\\\"color\\\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1, \
\\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \
\\\\\\\"Square\\\\\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\
\\\"Miter\\\\\\\", \\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [169, 205, 145], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[75.1567,8.91349], [75.1567,13.1251], [71.5093,15.231], [71.5093,11.0193], \
[75.1567,8.91349], [75.1567,8.91349]]}, \\\\n{\\\\\\\"type\\\\\\\": \
\\\\\\\"Polygon\\\\\\\", \\\\\\\"antialiased\\\\\\\" : true, \\\\\\\"edgeForm\
\\\\\\\": {\\\\\\\"color\\\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": \
1, \\\\\\\"thickness\\\\\\\": {}, \\\\\\\"capForm\\\\\\\": \\\\\\\"Square\\\\\
\\\", \\\\\\\"joinForm\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"Miter\\\\\\\", \
\\\\\\\"d\\\\\\\": 3.23931}, \\\\\\\"dashing\\\\\\\": [], \
\\\\\\\"dashingOffset\\\\\\\": 0}, \\\\\\\"faceForm\\\\\\\": {\\\\\\\"color\\\
\\\\\": [176, 150, 207], \\\\\\\"opacity\\\\\\\": 1}, \
\\\\\\\"fillrule\\\\\\\" : \\\\\\\"EvenOdd\\\\\\\" , \\\\\\\"points\\\\\\\": \
[[71,5.92555], [74.6474,8.03137], [71,10.1372], [67.3526,8.03137], \
[71,5.92555], [71,5.92555]]}, \\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\
\", \\\\\\\"name\\\\\\\": \
\\\\\\\"Frame\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": {\\\\\\\"left\\\\\\\": \
13.4677, \\\\\\\"top\\\\\\\": 428.59, \\\\\\\"right\\\\\\\": 386.532, \
\\\\\\\"bottom\\\\\\\": 2.04085},\\\\n\\\\\\\"primitives\\\\\\\":[]}, \
\\\\n{\\\\\\\"type\\\\\\\": \\\\\\\"Group\\\\\\\", \\\\\\\"name\\\\\\\": \\\\\
\\\"Axes\\\\\\\",\\\\n\\\\\\\"metadata\\\\\\\": \\\\\\\"TBD\\\\\\\",\\\\n\\\\\
\\\"primitives\\\\\\\":[]}],\\\\n\\\\\\\"PlotRange\\\\\\\": {\\\\\\\"left\\\\\
\\\": -0.000000, \\\\\\\"top\\\\\\\": -9.433641, \\\\\\\"right\\\\\\\": \
10.000000, \\\\\\\"bottom\\\\\\\": \
2.000000}\\\\n}\\\\n\\\",\\\"requestedImageSize\\\":10}\"}",
              BaselinePosition->Scaled[0.15],
              ImageSize->10]], 
            ItemBox[
             StyleBox[
              RowBox[{"QuantumState", " "}],
              ShowAutoStyles->False,
              ShowStringCharacters->False,
              FontSize->0.9 Inherited,
              FontColor->GrayLevel[0.1]]]}
          },
          GridBoxSpacings->{"Columns" -> {{0.25}}}],
         Alignment->{Left, Baseline},
         BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
         BaselinePosition->Baseline,
         FrameMargins->{{3, 0}, {0, 0}}],
        RowBox[{"PacletSymbol", "[", 
          RowBox[{"\"Wolfram/QuantumFramework\"", ",", "\"QuantumState\""}], 
          "]"}],
        TooltipStyle->{ShowAutoStyles -> True, ShowStringCharacters -> True}],
       
       Annotation[#, 
        Style[
         Defer[
          PacletSymbol["Wolfram/QuantumFramework", "QuantumState"]], 
         ShowStringCharacters -> True], "Tooltip"]& ],
      Background->RGBColor[0.968, 0.976, 0.984],
      BaselinePosition->Baseline,
      DefaultBaseStyle->{},
      FrameMargins->{{0, 0}, {1, 1}},
      FrameStyle->RGBColor[0.831, 0.847, 0.85],
      RoundingRadius->4],
     PacletSymbol["Wolfram/QuantumFramework", "QuantumState"],
     TaggingRules -> {
      "Paclet" -> "Wolfram/QuantumFramework", "Symbol" -> "QuantumState"},
     BoxID -> "PacletSymbolBox",
     SelectWithContents->True,
     Selectable->False], "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1"}], "}"}], ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testState", "[", "\"\<Matrix\>\"", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.877039192977672*^9, 3.877039212468624*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"a271fca4-8ee9-4cf8-8124-f75de943e24c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1"},
     {"1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 1}, 0, {1, {{0, 1, 2}, {{1}, {1}}}, {1, 1}}]]]]], "Output",\

 CellChangeTimes->{{3.877039199612317*^9, 3.8770392127755632`*^9}},
 CellLabel->
  "Out[83]//MatrixForm=",ExpressionUUID->"21bc087c-6830-4831-a12c-\
8e97f8608eb8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testQC", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<PauliZ\>\"", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<PauliX\>\"", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"testQC", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.877039249264757*^9, 3.8770392726204348`*^9}, {
  3.877039432408*^9, 3.877039551961516*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"2aeb8c11-10d5-4f87-9446-27b17dfabd51"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
     RectangleBox[{0.625, -1.375}, {1.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"Z\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
     RectangleBox[{1.625, -1.375}, {2.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"X\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.877039253688814*^9, 3.877039273212289*^9}, {
  3.877039454744219*^9, 3.877039463593244*^9}, {3.8770395066305933`*^9, 
  3.877039552422678*^9}},
 CellLabel->"Out[97]=",ExpressionUUID->"3c807e26-d635-4124-9732-fa97c43cf460"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"testQC", "[", "testState", "]"}], "[", "\"\<Matrix\>\"", "]"}], "//",
   "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.877039561105589*^9, 3.877039572874649*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"4b970064-76ca-4c45-ba2a-f77d47d79820"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "1"}]},
     {"1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 1}, 0, {1, {{0, 1, 2}, {{1}, {1}}}, {-1, 1}}]]]]], "Output",\

 CellChangeTimes->{{3.877039566768181*^9, 3.877039573289687*^9}},
 CellLabel->
  "Out[99]//MatrixForm=",ExpressionUUID->"f08de6e8-29f2-450d-9f27-\
80a4998cf512"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"\[ImaginaryI]", " ", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"0", ",", 
    RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]", ",", 
    RowBox[{"3", 
     RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.877053613473857*^9, 3.87705365027116*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"2a1a0d77-9576-4dad-a9c6-25dd7417c706"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "\[ImaginaryI]", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877053639415085*^9, 3.877053650636324*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"58e820ba-fc4a-4d28-8652-514c79f42015"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -2}, {0.625, -2}}], 
    LineBox[{{0.375, -3}, {0.625, -3}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{0.375, -5}, {0.625, -5}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{1.375, -2}, {1.625, -2}}], LineBox[{{1.375, -3}, {1.625, -3}}], 
    LineBox[{{1.375, -4}, {1.625, -4}}], LineBox[{{1.375, -5}, {1.625, -5}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{2.375, -2}, {2.625, -2}}], 
    LineBox[{{2.375, -3}, {2.625, -3}}], LineBox[{{2.375, -4}, {2.625, -4}}], 
    LineBox[{{2.375, -5}, {2.625, -5}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -2}, {3.625, -2}}], LineBox[{{3.375, -3}, {3.625, -3}}], 
    LineBox[{{3.375, -4}, {3.625, -4}}], LineBox[{{3.375, -5}, {3.625, -5}}], 
    LineBox[{{4.375, -1}, {4.625, -1}}], LineBox[{{4.375, -2}, {4.625, -2}}], 
    LineBox[{{4.375, -3}, {4.625, -3}}], LineBox[{{4.375, -4}, {4.625, -4}}], 
    LineBox[{{4.375, -5}, {4.625, -5}}]}, {
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{0.625, -5.375}, {1.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         FractionBox["1", "16"], " ", 
         RowBox[{"(", 
          RowBox[{
           
           RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
            "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
            "\[CircleTimes]", "\<\"I\"\>"}], "+", "\<\"I\"\>"}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {1., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{1.625, -5.375}, {2.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
          "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
          "\[CircleTimes]", "\<\"X\"\>"}], "+", "\<\"I\"\>"}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{2.625, -5.375}, {3.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
          "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
          "\[CircleTimes]", "\<\"Z\"\>"}], "+", "\<\"I\"\>"}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {3., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{3.625, -5.375}, {4.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
          "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
          "\[CircleTimes]", "\<\"Z\"\>"}], "+", "\<\"I\"\>"}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {4., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Input",ExpressionUUID->"8068ea0e-55f6-4cc4-9859-\
854cc40657ee"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"encodingQC", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumMeasurementOperator", "[", 
       RowBox[{"{", 
        RowBox[{"4", ",", "5"}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"encodingQC", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8770369434307747`*^9, 3.877036953006323*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0b76e6ba-092f-4804-bf9a-81b376f780fd"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{0.375, -2}, {1.625, -2}}], LineBox[{{1.375, -4}, {1.625, -4}}], 
    LineBox[{{2.375, -2}, {2.625, -2}}], LineBox[{{0.375, -5}, {2.625, -5}}], 
    LineBox[{{0.375, -3}, {3.625, -3}}], LineBox[{{3.375, -5}, {3.625, -5}}], 
    LineBox[{{2.375, -4}, {4.625, -4}}], LineBox[{{4.375, -5}, {4.625, -5}}], 
    LineBox[{{1.375, -1}, {5.625, -1}}], LineBox[{{3.375, -2}, {5.625, -2}}], 
    LineBox[{{4.375, -3}, {5.625, -3}}], LineBox[{{5.375, -4}, {5.625, -4}}], 
    LineBox[{{5.375, -5}, {5.625, -5}}]}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {{{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -4.}, {0.85, -4.}}], 
       LineBox[{{1.15, -4.}, {1.375, -4.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{1., -4.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{0.85, -4.}, {1.15, -4.}}], 
         LineBox[{{1., -4.15}, {1., -3.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{1., -1.09375}, {1., -3.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
      LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{1.625, -4.}, {1.85, -4.}}], 
       LineBox[{{2.15, -4.}, {2.375, -4.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{2., -4.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{1.85, -4.}, {2.15, -4.}}], 
         LineBox[{{2., -4.15}, {2., -3.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{2., -2.09375}, {2., -3.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{1.625, -2.}, {1.90625, -2.}}], 
      LineBox[{{2.09375, -2.}, {2.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{2., -2.}, 0.09375]}}, {}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{2.625, -5.}, {2.85, -5.}}], 
       LineBox[{{3.15, -5.}, {3.375, -5.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{3., -5.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{2.85, -5.}, {3.15, -5.}}], 
         LineBox[{{3., -5.15}, {3., -4.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{3., -2.09375}, {3., -4.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
      LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{3., -2.}, 0.09375]}}, {}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{3.625, -5.}, {3.85, -5.}}], 
       LineBox[{{4.15, -5.}, {4.375, -5.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{4., -5.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{3.85, -5.}, {4.15, -5.}}], 
         LineBox[{{4., -5.15}, {4., -4.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{4., -3.09375}, {4., -4.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{3.625, -3.}, {3.90625, -3.}}], 
      LineBox[{{4.09375, -3.}, {4.375, -3.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{4., -3.}, 0.09375]}}, {}}, 
    {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
     0.7367, 0.358, 0.503], Opacity[0.15]}], 
     RectangleBox[{4.625, -5.375}, {5.375, -3.625},
      RoundingRadius->0.1], 
     {Thickness[Small], 
      LineBox[{{5.151690686445303, -4.5772902651951615`}, {
       5.212366961023424, -4.533206371273226}}], 
      LineBox[{{5.116904337848513, -4.540906597037244}, {
       5.163666072987917, -4.482269235852142}}], 
      LineBox[{{5.073692193435111, -4.515088542646603}, {
       5.103169070809155, -4.446123959705244}}], 
      LineBox[{{5.0251687373408105`, -4.501696919668512}, {
       5.035236232277135, -4.427375687535918}}], 
      LineBox[{{4.9748312626591895`, -4.501696919668512}, {
       4.964763767722865, -4.427375687535918}}], 
      LineBox[{{4.926307806564889, -4.515088542646603}, {
       4.896830929190845, -4.446123959705244}}], 
      LineBox[{{4.883095662151487, -4.540906597037244}, {
       4.836333927012083, -4.482269235852142}}], 
      LineBox[{{4.848309313554697, -4.5772902651951615`}, {
       4.787633038976576, -4.533206371273225}}]}, 
     {Thickness[Medium], 
      LineBox[{{5., -4.6875}, {5.17024643740233, -4.353372553429362}}], 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -3.625}, {5., -0.2109375}}], 
       {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
        FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
        PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
         5., -0.0234375}}]}}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->{213.05743408203125`, Automatic}]], "Output",
 CellChangeTimes->{3.877054551124846*^9, 3.877557954675227*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"72b1edb2-0da6-45ca-8667-2950782fd736"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Why", " ", "is", " ", "it", " ", "projecting", " ", "onto", " ", "2", " ",
     "qubits", " ", "upon", " ", 
    RowBox[{"measurement", "?", " ", "Options"}], " ", "should", " ", "only", 
    " ", "be", " ", "0", " ", "and", " ", "1."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FaultyTState", "[", ".3", "]"}], "[", "\"\<Amplitudes\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.877391923700224*^9, 3.877391962090515*^9}, {
  3.877392999524375*^9, 3.87739300004165*^9}, {3.877393092479368*^9, 
  3.877393098944956*^9}, {3.87739478625379*^9, 3.877394786346541*^9}, {
  3.8773948838399057`*^9, 3.877394890095274*^9}, {3.877563632031604*^9, 
  3.877563632577157*^9}},ExpressionUUID->"ba101466-12a9-45f3-a10d-\
bb63fdadafbe"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], "\[Rule]", 
    "0.6154700538379252`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"0.11547005383792518`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.11547005383792514`", " ", "\[ImaginaryI]"}]}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"0.11547005383792518`", "\[VeryThinSpace]", "+", 
     RowBox[{"0.11547005383792514`", " ", "\[ImaginaryI]"}]}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], "\[Rule]", 
    "0.3845299461620748`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8773919106435003`*^9, 3.877391964298317*^9}, 
   3.8773930003824377`*^9, {3.877393094669571*^9, 3.877393099386094*^9}, 
   3.87739478676507*^9, {3.877394888021847*^9, 3.877394890242111*^9}, 
   3.877395374784252*^9, 3.877395412183844*^9},
 CellLabel->
  "Out[669]=",ExpressionUUID->"ff355bca-fa78-489a-8e94-f27ad93ec3b5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"test\[Rho]", " ", "=", " ", 
   RowBox[{"QuantumState", "[", "\"\<RandomMixed\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"test\[Sigma]", " ", "=", " ", 
   RowBox[{"QuantumState", "[", "\"\<RandomMixed\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.879379144598543*^9, 3.879379450024536*^9}, {
  3.8793795001573544`*^9, 3.8793795186894207`*^9}, {3.879379807601088*^9, 
  3.879379840997607*^9}},ExpressionUUID->"65e5447d-885f-4016-8540-\
ae6d7a439922"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FullTFidelityFunction", "[", 
     RowBox[{"\[Rho]_", ",", "\[Sigma]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trP", " ", "=", " ", 
         RowBox[{"Tr", "[", 
          RowBox[{"N", "[", "\[Rho]", "]"}], "]"}]}], ",", 
        RowBox[{"trS", "=", 
         RowBox[{"Tr", "[", 
          RowBox[{"N", "[", "\[Sigma]", "]"}], "]"}]}], ",", "trace"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"trace", " ", "=", " ", 
        RowBox[{"Tr", "[", 
         RowBox[{"MatrixPower", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"MatrixPower", "[", 
             RowBox[{
              RowBox[{"\[Rho]", "/", "trP"}], ",", ".5"}], "]"}], ".", 
            RowBox[{"(", 
             RowBox[{"\[Sigma]", "/", "trS"}], ")"}], ".", 
            RowBox[{"MatrixPower", "[", 
             RowBox[{
              RowBox[{"\[Rho]", "/", "trP"}], ",", ".5"}], "]"}]}], ",", 
           ".5"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"trace", "^", "2"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullTFidelityFunction", "[", 
   RowBox[{
    RowBox[{"test\[Rho]", "[", "\"\<DensityMatrix\>\"", "]"}], ",", 
    RowBox[{"test\[Sigma]", "[", "\"\<DensityMatrix\>\"", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"QuantumDistance", "[", 
  RowBox[{
   RowBox[{"test\[Rho]", "[", "\"\<Normalized\>\"", "]"}], ",", 
   RowBox[{"test\[Sigma]", "[", "\"\<Normalized\>\"", "]"}], ",", 
   "\"\<Fidelity\>\""}], "]"}]}], "Input",
 CellChangeTimes->{{3.8793795263771267`*^9, 3.8793795683452463`*^9}, {
  3.879379719122608*^9, 3.879379722930934*^9}, {3.8793798229650183`*^9, 
  3.879379833056789*^9}},ExpressionUUID->"442f2278-9cde-464e-bbde-\
d3981ddd315d"],

Cell[BoxData[
 RowBox[{"0.3366658240074603`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.3696202169104372`*^-18", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.879379570114085*^9, 3.8793797231679897`*^9},
 CellLabel->
  "Out[795]=",ExpressionUUID->"f1cbee4d-52d0-47f8-b682-329078f131dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumDistance", "[", 
  RowBox[{
   RowBox[{"test\[Rho]", "[", "\"\<Normalized\>\"", "]"}], ",", 
   RowBox[{"test\[Sigma]", "[", "\"\<Normalized\>\"", "]"}], ",", 
   "\"\<Fidelity\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.879379409369195*^9, 3.879379412586261*^9}, {
  3.879379579240679*^9, 3.879379585811276*^9}, {3.87937961970352*^9, 
  3.879379630097982*^9}, {3.87937976790131*^9, 3.879379773840643*^9}},
 CellLabel->
  "In[797]:=",ExpressionUUID->"48f226cc-a261-4512-9b4f-a367b28e7bef"],

Cell[BoxData["0.3366658240074611`"], "Output",
 CellChangeTimes->{
  3.879379586317088*^9, {3.8793796207652073`*^9, 3.879379630441601*^9}, {
   3.879379768474037*^9, 3.8793797742630463`*^9}},
 CellLabel->
  "Out[797]=",ExpressionUUID->"60f111eb-85e6-4260-ae1f-fccf8153aa25"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullTFidelity", "[", 
    RowBox[{"\[Rho]_", ",", "LocalAction_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"CliffordSet", " ", "=", " ", "LocalAction"}], "}"}], ",", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "/@", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"QuantumDistance", "[", 
          RowBox[{
           RowBox[{"\[Rho]", "[", "\"\<Normalized\>\"", "]"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"QuantumOperator", "[", "]"}], "[", "stateT0", "]"}], 
            "[", "\"\<Normalized\>\"", "]"}], ",", "\"\<Fidelity\>\""}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", 
           RowBox[{"Length", "[", "CliffordSet", "]"}]}], "}"}]}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8793798664627237`*^9, 3.879379907985984*^9}, {
  3.879379961024585*^9, 
  3.87937997998125*^9}},ExpressionUUID->"650feef7-d1f5-41f9-b7bc-\
55060a95448d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Error-Correcting Codes", "Chapter",
 CellChangeTimes->{{3.8781646819568853`*^9, 
  3.8781646860064507`*^9}},ExpressionUUID->"f7241072-86ee-4694-b72b-\
482bf2df8183"],

Cell["\<\
Here we present a collection of error-correcting protocols and associated \
applications for quantum computing.\
\>", "Text",
 CellChangeTimes->{{3.878566933388219*^9, 3.8785669533958483`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f5f4be5d-2230-4452-9533-4aa1ee65c64d"],

Cell[CellGroupData[{

Cell["5-Qubit Code", "Section",
 CellChangeTimes->{{3.878164705641304*^9, 
  3.878164707469708*^9}},ExpressionUUID->"878fb098-a440-4b86-9c25-\
4da02b82ecae"],

Cell[CellGroupData[{

Cell["Definition", "Subsection",
 CellChangeTimes->{{3.878567881911063*^9, 
  3.878567882799026*^9}},ExpressionUUID->"920b7748-d3f1-4780-ac3b-\
89a5d457ce74"],

Cell["\<\
We begin with the 5-qubit error-correcting code, the smallest code that can \
protect against arbitrary single-qubit error. In this scheme, one logical \
qubit is encoded into five physical qubits. We define the following set of \
four stabilizer operations that generating the 5-qubit code.\
\>", "Text",
 CellChangeTimes->{{3.877037637512607*^9, 3.8770376482868147`*^9}, {
  3.877562019047614*^9, 3.877562040031126*^9}, {3.8775621091724577`*^9, 
  3.877562127845045*^9}, {3.8775623644171352`*^9, 3.8775623920636683`*^9}, {
  3.878566996803109*^9, 3.8785670164641657`*^9}, {3.8785670526557293`*^9, 
  3.878567183152391*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"790b0937-076a-4485-be76-9c31a42a6922"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s1", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<XZZXI\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s2", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<IXZZX\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<XIXZZ\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s4", " ", "=", " ", 
    RowBox[{"QuantumOperator", "[", "\"\<ZXIXZ\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stabilizers", "=", 
    RowBox[{"{", 
     RowBox[{"s1", ",", "s2", ",", "s3", ",", "s4"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", "stabilizers", "]"}], "[", 
  "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.877037475218955*^9, 3.877037528685462*^9}, {
  3.877037758727644*^9, 3.87703776645208*^9}, {3.877037868466723*^9, 
  3.877037899974842*^9}, {3.877037939525754*^9, 3.877038042900175*^9}, {
  3.877038646244185*^9, 3.877038674474381*^9}, {3.877038776077416*^9, 
  3.8770387909136763`*^9}, {3.877562070562056*^9, 3.877562099025997*^9}, {
  3.8775621909970913`*^9, 3.877562325197481*^9}, {3.877563011366364*^9, 
  3.877563035191474*^9}, {3.877563195448945*^9, 3.877563228574349*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"b2309b7d-7977-4ebb-8a88-4e61e51f85d0"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -2}, {0.625, -2}}], 
    LineBox[{{0.375, -3}, {0.625, -3}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{0.375, -5}, {0.625, -5}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{1.375, -2}, {1.625, -2}}], LineBox[{{1.375, -3}, {1.625, -3}}], 
    LineBox[{{1.375, -4}, {1.625, -4}}], LineBox[{{1.375, -5}, {1.625, -5}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{2.375, -2}, {2.625, -2}}], 
    LineBox[{{2.375, -3}, {2.625, -3}}], LineBox[{{2.375, -4}, {2.625, -4}}], 
    LineBox[{{2.375, -5}, {2.625, -5}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -2}, {3.625, -2}}], LineBox[{{3.375, -3}, {3.625, -3}}], 
    LineBox[{{3.375, -4}, {3.625, -4}}], LineBox[{{3.375, -5}, {3.625, -5}}], 
    LineBox[{{4.375, -1}, {4.625, -1}}], LineBox[{{4.375, -2}, {4.625, -2}}], 
    LineBox[{{4.375, -3}, {4.625, -3}}], LineBox[{{4.375, -4}, {4.625, -4}}], 
    LineBox[{{4.375, -5}, {4.625, -5}}]}, {{{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -3.375}, {1.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -4.375}, {1.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{0.625, -5.375}, {1.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -1.375}, {1., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -2.375}, {1., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -3.375}, {1., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -4.375}, {1., -4.625}}]}}}, {{
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -3.375}, {2.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -4.375}, {2.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -5.375}, {2.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -1.375}, {2., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -2.375}, {2., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -3.375}, {2., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -4.375}, {2., -4.625}}]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -1.375}, {3.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -2.375}, {3.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -3.375}, {3.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -4.375}, {3.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -5.375}, {3.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -1.375}, {3., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -2.375}, {3., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -3.375}, {3., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -4.375}, {3., -4.625}}]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -1.375}, {4.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -2.375}, {4.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{3.625, -3.375}, {4.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -4.375}, {4.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -5.375}, {4.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -1.375}, {4., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -2.375}, {4., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -3.375}, {4., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -4.375}, {4., -4.625}}]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.877563225365581*^9, 3.877563229234372*^9}},
 CellLabel->
  "Out[219]=",ExpressionUUID->"21f30813-31e2-4166-9c3c-2d91cbb727b6"]
}, Open  ]],

Cell[TextData[{
 "Here we define a circuit to project a 5-qubit system into the code subspace \
for this error-correcting scheme. This code subspace is the two-dimensional \
Hilbert space containing states upon which the above stabilizing operations \
act trivially (",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SubscriptBox[
          StyleBox["s", "TI"], 
          StyleBox["i", "TI"]], "\[CapitalPsi]", "\[LongEqual]", 
         "\[CapitalPsi]", ",", "\[ForAll]\[CapitalPsi]", "\[Element]", 
         StyleBox["C", "TI"]}], TraditionalForm], "errors" -> {}, "input" -> 
     "s_i\\ket{\\Psi} = \\ket{\\Psi},  \\forall \\ket{\\Psi} \\in \
\\mathcal{C}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "89f43a81-cd20-49e0-a0fd-3cc798d3654e"],
 "). We therefore can define the projecting operation as below."
}], "Text",
 CellChangeTimes->{{3.87756240259225*^9, 3.877562428702126*^9}, {
   3.878217116395383*^9, 3.878217265629056*^9}, {3.878217529771487*^9, 
   3.878217535094368*^9}, {3.87821760153233*^9, 3.878217629956459*^9}, {
   3.878217664353298*^9, 3.878217824796113*^9}, {3.8785675947217283`*^9, 
   3.878567606998476*^9}, {3.878567845234911*^9, 3.878567852382413*^9}, 
   3.879000443284546*^9},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"b9b4bdb7-42a2-453c-9537-e5efd836f80c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"subspaceProjectorFiveQCode", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<I\>\"", "->", 
           RowBox[{"Range", "[", "5", "]"}]}], ")"}], "+", "\"\<XZZXI\>\""}], 
        ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<I\>\"", "->", 
           RowBox[{"Range", "[", "5", "]"}]}], ")"}], "+", "\"\<IXZZX\>\""}], 
        ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<I\>\"", "->", 
           RowBox[{"Range", "[", "5", "]"}]}], ")"}], "+", "\"\<XIXZZ\>\""}], 
        ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\"\<I\>\"", "->", 
           RowBox[{"Range", "[", "5", "]"}]}], ")"}], "+", "\"\<ZXIXZ\>\""}], 
        ")"}]}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"subspaceProjectorFiveQCode", "[", "\"\<Diagram\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.877562776168606*^9, 3.877562791076437*^9}, {
  3.87756297113032*^9, 3.877562976085568*^9}, {3.878567705278055*^9, 
  3.878567749079795*^9}, {3.878567794668235*^9, 3.87856779598316*^9}},
 CellLabel->
  "In[633]:=",ExpressionUUID->"11050043-7e2f-4cf1-80a2-ddb6d0586337"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -2}, {0.625, -2}}], 
    LineBox[{{0.375, -3}, {0.625, -3}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{0.375, -5}, {0.625, -5}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{1.375, -2}, {1.625, -2}}], LineBox[{{1.375, -3}, {1.625, -3}}], 
    LineBox[{{1.375, -4}, {1.625, -4}}], LineBox[{{1.375, -5}, {1.625, -5}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{2.375, -2}, {2.625, -2}}], 
    LineBox[{{2.375, -3}, {2.625, -3}}], LineBox[{{2.375, -4}, {2.625, -4}}], 
    LineBox[{{2.375, -5}, {2.625, -5}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -2}, {3.625, -2}}], LineBox[{{3.375, -3}, {3.625, -3}}], 
    LineBox[{{3.375, -4}, {3.625, -4}}], LineBox[{{3.375, -5}, {3.625, -5}}], 
    LineBox[{{4.375, -1}, {4.625, -1}}], LineBox[{{4.375, -2}, {4.625, -2}}], 
    LineBox[{{4.375, -3}, {4.625, -3}}], LineBox[{{4.375, -4}, {4.625, -4}}], 
    LineBox[{{4.375, -5}, {4.625, -5}}]}, {
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{0.625, -5.375}, {1.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"\"I\"", 
             RowBox[{"\[CircleTimes]", "5"}]},
            "Superscript"], "+", 
           
           RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
            "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
            "\[CircleTimes]", "\<\"I\"\>"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {1., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{1.625, -5.375}, {2.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"\"I\"", 
             RowBox[{"\[CircleTimes]", "5"}]},
            "Superscript"], "+", 
           
           RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
            "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
            "\[CircleTimes]", "\<\"X\"\>"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{2.625, -5.375}, {3.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"\"I\"", 
             RowBox[{"\[CircleTimes]", "5"}]},
            "Superscript"], "+", 
           
           RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
            "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
            "\[CircleTimes]", "\<\"Z\"\>"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {3., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
     0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
     RectangleBox[{3.625, -5.375}, {4.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           TemplateBox[{"\"I\"", 
             RowBox[{"\[CircleTimes]", "5"}]},
            "Superscript"], "+", 
           
           RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
            "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
            "\[CircleTimes]", "\<\"Z\"\>"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {4., -3.}], {{{0, -1}, {1, 0}}, 
       Center}]}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.877562976984956*^9, 3.878567715921921*^9, 
  3.878567753194189*^9, 3.87856781200292*^9},
 CellLabel->
  "Out[634]=",ExpressionUUID->"94e5fbc5-8940-4247-9965-c1e1da6250b7"]
}, Open  ]],

Cell["\<\
Note: Operations on the logical stored information, such as Pauli-X and \
Pauli-Z operations,  are defined as below.\
\>", "Text",
 CellChangeTimes->{{3.87756310581679*^9, 3.877563161758078*^9}, {
  3.878217294540894*^9, 3.8782172968576403`*^9}, {3.878217852799399*^9, 
  3.8782178744020433`*^9}, {3.878567573686202*^9, 3.878567577638487*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"716934d3-4840-4565-b303-e1c30d8c16c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"logicalX", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<X\>\"", "->", 
     RowBox[{"Range", "[", "5", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logicalZ", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<Z\>\"", "->", 
     RowBox[{"Range", "[", "5", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877038426334424*^9, 3.877038504387837*^9}, {
  3.8775631708133163`*^9, 3.877563186382183*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"94ef36d3-e87d-43b9-a1ad-0ecf9fa712a4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["7-Qubit Code (Steane Code)", "Section",
 CellChangeTimes->{{3.8781647153029003`*^9, 3.878164718430418*^9}, {
  3.878165786328916*^9, 
  3.878165789208975*^9}},ExpressionUUID->"9ca6c8a6-a639-443a-9fe8-\
98964614a42b"],

Cell[CellGroupData[{

Cell["Definition", "Subsection",
 CellChangeTimes->{{3.8781657554558563`*^9, 
  3.878165757129176*^9}},ExpressionUUID->"007458d2-2ff8-458c-9b5e-\
de3936c39920"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SteaneCodeS1", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<IIIXXXX\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteaneCodeS2", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<IXXIIXX\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteaneCodeS3", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<XIXIXIX\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteaneCodeS4", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<IIIZZZZ\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteaneCodeS5", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<IZZIIZZ\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SteaneCodeS6", " ", "=", " ", 
    RowBox[{"QuantumOperator", "[", "\"\<ZIZIZIZ\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SteaneStabilizers", "=", 
    RowBox[{"{", 
     RowBox[{
     "SteaneCodeS1", ",", "SteaneCodeS2", ",", "SteaneCodeS3", ",", 
      "SteaneCodeS4", ",", "SteaneCodeS5", ",", "SteaneCodeS6"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", "SteaneStabilizers", "]"}], "[", 
  "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8781649854781713`*^9, 3.87816518834342*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"5e3b4d87-fbc1-4ae8-9128-de90de3d52f0"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -2}, {0.625, -2}}], 
    LineBox[{{0.375, -3}, {0.625, -3}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{0.375, -5}, {0.625, -5}}], LineBox[{{0.375, -6}, {0.625, -6}}], 
    LineBox[{{0.375, -7}, {0.625, -7}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{1.375, -2}, {1.625, -2}}], LineBox[{{1.375, -3}, {1.625, -3}}], 
    LineBox[{{1.375, -4}, {1.625, -4}}], LineBox[{{1.375, -5}, {1.625, -5}}], 
    LineBox[{{1.375, -6}, {1.625, -6}}], LineBox[{{1.375, -7}, {1.625, -7}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{2.375, -2}, {2.625, -2}}], 
    LineBox[{{2.375, -3}, {2.625, -3}}], LineBox[{{2.375, -4}, {2.625, -4}}], 
    LineBox[{{2.375, -5}, {2.625, -5}}], LineBox[{{2.375, -6}, {2.625, -6}}], 
    LineBox[{{2.375, -7}, {2.625, -7}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -2}, {3.625, -2}}], LineBox[{{3.375, -3}, {3.625, -3}}], 
    LineBox[{{3.375, -4}, {3.625, -4}}], LineBox[{{3.375, -5}, {3.625, -5}}], 
    LineBox[{{3.375, -6}, {3.625, -6}}], LineBox[{{3.375, -7}, {3.625, -7}}], 
    LineBox[{{4.375, -1}, {4.625, -1}}], LineBox[{{4.375, -2}, {4.625, -2}}], 
    LineBox[{{4.375, -3}, {4.625, -3}}], LineBox[{{4.375, -4}, {4.625, -4}}], 
    LineBox[{{4.375, -5}, {4.625, -5}}], LineBox[{{4.375, -6}, {4.625, -6}}], 
    LineBox[{{4.375, -7}, {4.625, -7}}], LineBox[{{5.375, -1}, {5.625, -1}}], 
    LineBox[{{5.375, -2}, {5.625, -2}}], LineBox[{{5.375, -3}, {5.625, -3}}], 
    LineBox[{{5.375, -4}, {5.625, -4}}], LineBox[{{5.375, -5}, {5.625, -5}}], 
    LineBox[{{5.375, -6}, {5.625, -6}}], LineBox[{{5.375, -7}, {5.625, -7}}], 
    LineBox[{{6.375, -1}, {6.625, -1}}], LineBox[{{6.375, -2}, {6.625, -2}}], 
    LineBox[{{6.375, -3}, {6.625, -3}}], LineBox[{{6.375, -4}, {6.625, -4}}], 
    LineBox[{{6.375, -5}, {6.625, -5}}], LineBox[{{6.375, -6}, {6.625, -6}}], 
    LineBox[{{6.375, -7}, {6.625, -7}}]}, {{{
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{0.625, -3.375}, {1.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -4.375}, {1.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -5.375}, {1.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -6.375}, {1.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{0.625, -7.375}, {1.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -1.375}, {1., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -2.375}, {1., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -3.375}, {1., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -4.375}, {1., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -5.375}, {1., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{1., -6.375}, {1., -6.625}}]}}}, {{
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{1.625, -1.375}, {2.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -3.375}, {2.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{1.625, -4.375}, {2.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{1.625, -5.375}, {2.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -6.375}, {2.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -7.375}, {2.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -1.375}, {2., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -2.375}, {2., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -3.375}, {2., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -4.375}, {2., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -5.375}, {2., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{2., -6.375}, {2., -6.625}}]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -1.375}, {3.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -2.375}, {3.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -3.375}, {3.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -4.375}, {3.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -5.375}, {3.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -6.375}, {3.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -7.375}, {3.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -1.375}, {3., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -2.375}, {3., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -3.375}, {3., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -4.375}, {3., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -5.375}, {3., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -6.375}, {3., -6.625}}]}}}, {{
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{3.625, -1.375}, {4.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{3.625, -2.375}, {4.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{3.625, -3.375}, {4.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -4.375}, {4.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -5.375}, {4.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -6.375}, {4.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{3.625, -7.375}, {4.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -1.375}, {4., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -2.375}, {4., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -3.375}, {4., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -4.375}, {4., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -5.375}, {4., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -6.375}, {4., -6.625}}]}}}, {{
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{4.625, -1.375}, {5.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{4.625, -2.375}, {5.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{4.625, -3.375}, {5.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{4.625, -4.375}, {5.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{4.625, -5.375}, {5.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{4.625, -6.375}, {5.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{4.625, -7.375}, {5.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -1.375}, {5., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -2.375}, {5., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -3.375}, {5., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -4.375}, {5., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -5.375}, {5., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -6.375}, {5., -6.625}}]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{5.625, -1.375}, {6.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{5.625, -2.375}, {6.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{5.625, -3.375}, {6.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{5.625, -4.375}, {6.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{5.625, -5.375}, {6.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{5.625, -6.375}, {6.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{5.625, -7.375}, {6.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -1.375}, {6., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -2.375}, {6., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -3.375}, {6., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -4.375}, {6., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -5.375}, {6., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -6.375}, {6., -6.625}}]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["6",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -6}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["7",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -7}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.878165190245352*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"dd7d9891-a9ad-4b95-8133-969525b12f82"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SteaneLogicalX", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<XXXXXXX\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SteaneLogicalZ", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<ZZZZZZZ\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[239]:=",ExpressionUUID->"c34c158a-67f4-41d0-922e-7fa1ac52b6d7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SteaneLogical0", " ", "=", "  ", 
    RowBox[{"Total", "[", 
     RowBox[{"QuantumState", "/@", 
      RowBox[{"{", 
       RowBox[{
       "\"\<0000000\>\"", ",", "\"\<0001111\>\"", ",", "\"\<0110011\>\"", 
        ",", "\"\<0111100\>\"", ",", "\"\<1010101\>\"", ",", 
        "\"\<1011010\>\"", ",", "\"\<1100110\>\"", ",", "\"\<1101001\>\""}], 
       "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SteaneLogical1", " ", "=", " ", 
    RowBox[{"SteaneLogicalX", "[", "SteaneLogical0", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]7", "[", 
    RowBox[{"C1_", ",", "C2_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"C1", "*", "SteaneLogical0"}], "+", 
    RowBox[{"C2", "*", "SteaneLogical1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.878165204091468*^9, 3.8781652342304497`*^9}, {
   3.878165311203246*^9, 3.878165542101655*^9}, {3.878165680952324*^9, 
   3.878165681169118*^9}, 
   3.878987177464205*^9},ExpressionUUID->"d9256ea7-ea48-4d84-b959-\
ca61d2797dcb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"test7State", " ", "=", " ", 
   RowBox[{"\[Psi]7", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", "SteaneStabilizers", "]"}], "[", 
  "test7State", "]"}]}], "Input",
 CellChangeTimes->{{3.8781655653903303`*^9, 3.878165732037348*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"f763d344-7211-42df-ac71-2f439f35ad79"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJzt3TGKk0EABeAFU4S0HkAUPEI6zSC5gb2NIKRSCKSzyAlE6xxksTW2iZgm
h/iR9KlEsFtsJD/Mm/mKheVr5r1XzBTLJk/ffnj97tHd3d3278+f3w/L/Xy1
uZTrZLqYrYdyPp62uzKUF/dvvn9++at8evX+67cvP8uz548/Lp/84P/pKTvf
KmdK3/SdU87Vq+1eKTn1cv/U7L29vyk5093OnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzlvyw3I/
X20u5TqZLmbroZyPp+2uDNXlTPeUnW+VM6Vv+s4p5+rVdq+UnHq5f2r23t7f
lJzpbmfOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnvB73uUB2HiNnSt/0nVPO1avtXik59XL/1Oy9vb8pOdPdzpxzzjnnnHPO
Oeecc855P+7vAnYeI2dK3/SdU87Vq+1eKTn1cv/U7L29vyk5093OnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecP/TDcj9fbS7lOpkuZuuh
nI+n7a4M1eVM95Sdb5UzpW/6zinn6tV2r5Scerl/avbe3t+UnOluZ84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOec81/1fgJ3HyJnSN33nlHP1artXSk69
3D81e2/vb0rOdLcz55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeeccz6e+14AO4+RM6Vv+s4p5+rVdq+U
nHq5f2r23t7flJzpbmfOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnfDz3vQB2HiNnSt/0nVPO1avt
Xik59XL/1Oy9vb8pOdPdzpxzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc855Pe5zgew8Rs6Uvuk7p5yrV9u9UnLq5f6p2Xt7f1Ny
prudOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnPPx3PcC2HmMnCl903dOOVevtnul5NTL/VOz9/b+
puRMdztzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc8455+O57wWw8xg5U/qm75xyrl5t90rJqZf7p2bv
7f1NyZnuduacc84555xzzjnnnHPOOeecc84555xzzjnnnHPOc93/Bdh5jJwp
fdN3TjlXr7Z7peTUy/1Ts/f2/qbkTHc7c84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xz/tAPy/18tbmU62S6mK2Hcj6etrsyVJcz3VN2vlXO
lL7pO6ecq1fbvVJy6uX+qdl7e39Tcqa7nTnnnHPOOeecc84555zzftzfBew8
Rs6Uvuk7p5yrV9u9UnLq5f6p2Xt7f1NyprudOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnPN63OcC2XmMnCl903dOOVevtnul
5NTL/VOz9/b+puRMdztzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc845b8kPy/18tbmU62S6mK2Hcj6e
trsyVJcz3VN2vlXOlL7pO6ecq1fbvVJy6uX+qdl7e39Tcqb7v3b+DUjUdsQ=

                "], {{0, 0}, {128, 128}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"X\"", 
                    RowBox[{"\[CircleTimes]", "7"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "@*", 
                    TemplateBox[{"None", 
                    RowBox[{"\[CircleTimes]", "7"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}], ")"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"I\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", "\"X\"", 
                    "\[CircleTimes]", "\"X\"", "\[CircleTimes]", "\"X\"", 
                    "\[CircleTimes]", "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"I\"", "\[CircleTimes]", "\"X\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"X\"", "\[CircleTimes]", 
                    "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"I\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", "\"Z\"", 
                    "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", "\"Z\"", 
                    "\[CircleTimes]", "\"Z\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"I\"", "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", 
                    "\"Z\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\""}], ")"}]}]], Annotation[#, 
              RightComposition[
               Composition[
                Superscript["X", 
                 CircleTimes[7]], 
                Superscript[None, 
                 CircleTimes[7]]], 
               CircleTimes[
                Superscript["I", 
                 CircleTimes[3]], "X", "X", "X", "X"], 
               CircleTimes["I", "X", "X", "I", "I", "X", "X"], 
               CircleTimes["X", "I", "X", "I", "X", "I", "X"], 
               CircleTimes[
                Superscript["I", 
                 CircleTimes[3]], "Z", "Z", "Z", "Z"], 
               CircleTimes["I", "Z", "Z", "I", "I", "Z", "Z"], 
               CircleTimes["Z", "I", "Z", "I", "Z", "I", "Z"]], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["128", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJzt3TGKk0EABeAFU4S0HkAUPEI6zSC5gb2NIKRSCKSzyAlE6xxksTW2iZgm
h/iR9KlEsFtsJD/Mm/mKheVr5r1XzBTLJk/ffnj97tHd3d3278+f3w/L/Xy1
uZTrZLqYrYdyPp62uzKUF/dvvn9++at8evX+67cvP8uz548/Lp/84P/pKTvf
KmdK3/SdU87Vq+1eKTn1cv/U7L29vyk5093OnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzlvyw3I/
X20u5TqZLmbroZyPp+2uDNXlTPeUnW+VM6Vv+s4p5+rVdq+UnHq5f2r23t7f
lJzpbmfOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnvB73uUB2HiNnSt/0nVPO1avtXik59XL/1Oy9vb8pOdPdzpxzzjnnnHPO
Oeecc855P+7vAnYeI2dK3/SdU87Vq+1eKTn1cv/U7L29vyk5093OnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecP/TDcj9fbS7lOpkuZuuh
nI+n7a4M1eVM95Sdb5UzpW/6zinn6tV2r5Scerl/avbe3t+UnOluZ84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOec81/1fgJ3HyJnSN33nlHP1artXSk69
3D81e2/vb0rOdLcz55xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeeccz6e+14AO4+RM6Vv+s4p5+rVdq+U
nHq5f2r23t7flJzpbmfOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPO
Oeecc84555xzzjnnnHPOOeecc84555xzzjnnfDz3vQB2HiNnSt/0nVPO1avt
Xik59XL/1Oy9vb8pOdPdzpxzzjnnnHPOOeecc84555xzzjnnnHPOOeecc845
55xzzjnnnHPOOeecc855Pe5zgew8Rs6Uvuk7p5yrV9u9UnLq5f6p2Xt7f1Ny
prudOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnn
nHPOOeecc84555xzzjnnnPPx3PcC2HmMnCl903dOOVevtnul5NTL/VOz9/b+
puRMdztzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc8455+O57wWw8xg5U/qm75xyrl5t90rJqZf7p2bv
7f1NyZnuduacc84555xzzjnnnHPOOeecc84555xzzjnnnHPOc93/Bdh5jJwp
fdN3TjlXr7Z7peTUy/1Ts/f2/qbkTHc7c84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xz/tAPy/18tbmU62S6mK2Hcj6etrsyVJcz3VN2vlXO
lL7pO6ecq1fbvVJy6uX+qdl7e39Tcqa7nTnnnHPOOeecc84555zzftzfBew8
Rs6Uvuk7p5yrV9u9UnLq5f6p2Xt7f1NyprudOeecc84555xzzjnnnHPOOeec
c84555xzzjnnnHPOOeecc84555xzzjnnnPN63OcC2XmMnCl903dOOVevtnul
5NTL/VOz9/b+puRMdztzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xzzjnnnHPOOeecc84555xz
zjnnnHPOOeecc84555xzzjnnnHPOOeecc845b8kPy/18tbmU62S6mK2Hcj6e
trsyVJcz3VN2vlXOlL7pO6ecq1fbvVJy6uX+qdl7e39Tcqb7v3b+DUjUdsQ=

                "], {{0, 0}, {128, 128}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"X\"", 
                    RowBox[{"\[CircleTimes]", "7"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "@*", 
                    TemplateBox[{"None", 
                    RowBox[{"\[CircleTimes]", "7"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}], ")"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"I\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", "\"X\"", 
                    "\[CircleTimes]", "\"X\"", "\[CircleTimes]", "\"X\"", 
                    "\[CircleTimes]", "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"I\"", "\[CircleTimes]", "\"X\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"X\"", "\[CircleTimes]", 
                    "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"X\""}], ")"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    TemplateBox[{"\"I\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", "\"Z\"", 
                    "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", "\"Z\"", 
                    "\[CircleTimes]", "\"Z\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"I\"", "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"Z\"", "\[CircleTimes]", 
                    "\"Z\""}], ")"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"Z\""}], ")"}]}]], Annotation[#, 
              RightComposition[
               Composition[
                Superscript["X", 
                 CircleTimes[7]], 
                Superscript[None, 
                 CircleTimes[7]]], 
               CircleTimes[
                Superscript["I", 
                 CircleTimes[3]], "X", "X", "X", "X"], 
               CircleTimes["I", "X", "X", "I", "I", "X", "X"], 
               CircleTimes["X", "I", "X", "I", "X", "I", "X"], 
               CircleTimes[
                Superscript["I", 
                 CircleTimes[3]], "Z", "Z", "Z", "Z"], 
               CircleTimes["I", "Z", "Z", "I", "I", "Z", "Z"], 
               CircleTimes["Z", "I", "Z", "I", "Z", "I", "Z"]], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["128", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
                    ",", "2"}], "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {128}, 0, {
    1, {{0, 16}, {{1}, {16}, {23}, {26}, {38}, {43}, {52}, {61}, {68}, {77}, {
      86}, {91}, {103}, {106}, {113}, {128}}}, {
     2^Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
      Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
      Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
      Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
      Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
      Rational[-1, 2]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 6} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 6} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 7} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 7} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> RightComposition[
       Composition[
        Superscript["X", 
         CircleTimes[7]], 
        Superscript[None, 
         CircleTimes[7]]], 
       CircleTimes[
        Superscript["I", 
         CircleTimes[3]], "X", "X", "X", "X"], 
       CircleTimes["I", "X", "X", "I", "I", "X", "X"], 
       CircleTimes["X", "I", "X", "I", "X", "I", "X"], 
       CircleTimes[
        Superscript["I", 
         CircleTimes[3]], "Z", "Z", "Z", "Z"], 
       CircleTimes["I", "Z", "Z", "I", "I", "Z", "Z"], 
       CircleTimes["Z", "I", "Z", "I", "Z", "I", "Z"]], 
     "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.878165696718191*^9, 3.8781657326543283`*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"67be2f9d-17dc-47d2-9e15-413d0bfee7d3"]
}, Open  ]]
}, Open  ]],

Cell["Fault-Tolerance", "Subsection",
 CellChangeTimes->{{3.878165762983556*^9, 
  3.8781657653533688`*^9}},ExpressionUUID->"c1702a7b-267c-40ca-8fe8-\
11ca2a516deb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["9-Qubit Code (Shor Code)", "Section",
 CellChangeTimes->{{3.8781647153029003`*^9, 3.878164718430418*^9}, {
  3.87816577561616*^9, 
  3.878165785216874*^9}},ExpressionUUID->"e4d3502a-25a1-4984-ab86-\
9f5d9e76acd7"],

Cell[CellGroupData[{

Cell["Definition", "Subsection",
 CellChangeTimes->{{3.8781657554558563`*^9, 
  3.878165757129176*^9}},ExpressionUUID->"484ff213-a036-4bf7-9029-\
12f35c329b02"],

Cell["\<\
The famous 9-qubit Shor Code encodes a single logical qubit into nine \
physical qubits to correct arbitrary single-qubit error. We simulate the \
arbitrary corruption of a single qubit by applying a unitary transform, \
defined as some linear combination of Pauli operations, that acts on a random \
qubit of the system.\
\>", "Text",
 CellChangeTimes->{{3.878567970576778*^9, 3.87856805686808*^9}, {
  3.878568135495549*^9, 3.8785682085975647`*^9}, {3.87856825040982*^9, 
  3.878568304990011*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"72e5c4a1-1684-43d5-ad8e-e223c0d19aa2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SingleBitUnitaryError", "[", 
     RowBox[{"{", 
      RowBox[{"c1_", ",", "c2_", ",", "c3_", ",", "c4_"}], "}"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"c1", "*", " ", 
      RowBox[{"QuantumOperator", "[", "\"\<I\>\"", "]"}]}], "+", 
     RowBox[{"c2", "*", " ", 
      RowBox[{"QuantumOperator", "[", "\"\<X\>\"", "]"}]}], "+", 
     RowBox[{"c3", "*", " ", 
      RowBox[{"QuantumOperator", "[", "\"\<Y\>\"", "]"}]}], "+", 
     RowBox[{"c4", "*", " ", 
      RowBox[{"QuantumOperator", "[", "\"\<Z\>\"", "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NoisyChannel", " ", "=", " ", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"SingleBitUnitaryError", "[", 
      RowBox[{"RandomSample", "[", 
       RowBox[{".01", "*", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"IntegerPartitions", "[", 
          RowBox[{"100", ",", 
           RowBox[{"{", "4", "}"}]}], "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NC", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"NoisyChannel", ",", 
     RowBox[{"{", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}], "]"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8781701070663347`*^9, 3.878170147084413*^9}, {
  3.878170422656986*^9, 3.878170593544375*^9}, {3.878170856505516*^9, 
  3.878170887856381*^9}, {3.878170943517293*^9, 3.8781709534331913`*^9}, {
  3.878171051809205*^9, 3.8781710561161127`*^9}, {3.878171388512701*^9, 
  3.878171393190052*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"d702a9f8-f29a-4b53-a020-6cf481407c3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NoisyChannel", "[", "\"\<Matrix\>\"", "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.87817120651642*^9, 3.878171211292438*^9}},
 CellLabel->
  "In[471]:=",ExpressionUUID->"60920650-9128-4790-8025-4710debcc050"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.9299999999999999`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.04`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.03`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.04`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, Complex[0., 0.], {
     1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {Complex[0.9299999999999999, 0.], 
      Complex[0.03, -0.04], Complex[0.03, 0.04], Complex[0.07, 
      0.]}}]]]]], "Output",
 CellChangeTimes->{3.878171018387841*^9, 3.878171059336382*^9, 
  3.87817121179325*^9},
 CellLabel->
  "Out[471]//MatrixForm=",ExpressionUUID->"a57c95e6-1eda-40cf-b550-\
308209e81e5e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ShorCodeS1", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShorCodeS2", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<CNOT\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "7"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShorCodeS3", " ", "=", " ", 
   RowBox[{"QuantumOperator", "[", "\"\<HIIHIIHII\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShorCodeS4", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "8"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShorCodeS5", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "6"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"7", ",", "9"}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShorCodeS6", " ", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<X\>\"", "->", 
          RowBox[{"{", "1", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<X\>\"", "->", 
          RowBox[{"{", "4", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "6"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<X\>\"", "->", 
          RowBox[{"{", "7", "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "9"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShorCodeS7", " ", "=", " ", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<C\>\"", ",", 
       RowBox[{"\"\<X\>\"", "->", 
        RowBox[{"{", "1", "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "7"}], "}"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShorStabilizers", "=", 
    RowBox[{"{", 
     RowBox[{
     "ShorCodeS1", ",", "ShorCodeS2", ",", "ShorCodeS3", ",", "ShorCodeS4", 
      ",", "ShorCodeS5", ",", "NC", ",", "ShorCodeS4", ",", "ShorCodeS5", ",",
       "ShorCodeS6", ",", "ShorCodeS3", ",", "ShorCodeS1", ",", "ShorCodeS2", 
      ",", "ShorCodeS7"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", "ShorStabilizers", "]"}], "[", 
  "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8781649854781713`*^9, 3.87816518834342*^9}, {
   3.8781657977225237`*^9, 3.87816583783036*^9}, 3.87816629761823*^9, {
   3.87816632907517*^9, 3.878166401308627*^9}, {3.878166438552867*^9, 
   3.8781664439098673`*^9}, {3.878169517585287*^9, 3.8781695378561697`*^9}, {
   3.878169623076919*^9, 3.8781696402022047`*^9}, {3.8781697745515013`*^9, 
   3.8781697967433367`*^9}, {3.878169837689213*^9, 3.878169887785452*^9}, {
   3.878170916651949*^9, 3.878170919217166*^9}, {3.8781709653013773`*^9, 
   3.878170965723151*^9}, {3.878171263180029*^9, 3.878171292891521*^9}, 
   3.878171400322632*^9, {3.878171501749724*^9, 3.87817156646063*^9}, {
   3.878216360963389*^9, 3.878216361953741*^9}, {3.878605363356018*^9, 
   3.878605376278092*^9}, {3.8786054348185177`*^9, 3.8786054731051617`*^9}, {
   3.878605526451337*^9, 3.878605694502941*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"cc8e7c23-2a04-4d6b-ae7b-7631419cb4fb"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -4}, {0.625, -4}}], 
    LineBox[{{1.375, -1}, {1.625, -1}}], LineBox[{{0.375, -7}, {1.625, -7}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{0.375, -2}, {2.625, -2}}], 
    LineBox[{{0.375, -3}, {2.625, -3}}], LineBox[{{1.375, -4}, {2.625, -4}}], 
    LineBox[{{0.375, -5}, {2.625, -5}}], LineBox[{{0.375, -6}, {2.625, -6}}], 
    LineBox[{{2.375, -7}, {2.625, -7}}], LineBox[{{0.375, -8}, {2.625, -8}}], 
    LineBox[{{0.375, -9}, {2.625, -9}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -2}, {3.625, -2}}], LineBox[{{3.375, -4}, {3.625, -4}}], 
    LineBox[{{3.375, -5}, {3.625, -5}}], LineBox[{{3.375, -7}, {3.625, -7}}], 
    LineBox[{{3.375, -8}, {3.625, -8}}], LineBox[{{4.375, -1}, {4.625, -1}}], 
    LineBox[{{3.375, -3}, {4.625, -3}}], LineBox[{{4.375, -4}, {4.625, -4}}], 
    LineBox[{{3.375, -6}, {4.625, -6}}], LineBox[{{4.375, -7}, {4.625, -7}}], 
    LineBox[{{3.375, -9}, {4.625, -9}}], LineBox[{{5.375, -4}, {5.625, -4}}], 
    LineBox[{{5.375, -1}, {6.625, -1}}], LineBox[{{4.375, -2}, {6.625, -2}}], 
    LineBox[{{6.375, -4}, {6.625, -4}}], LineBox[{{4.375, -5}, {6.625, -5}}], 
    LineBox[{{5.375, -7}, {6.625, -7}}], LineBox[{{4.375, -8}, {6.625, -8}}], 
    LineBox[{{7.375, -1}, {7.625, -1}}], LineBox[{{5.375, -3}, {7.625, -3}}], 
    LineBox[{{7.375, -4}, {7.625, -4}}], LineBox[{{5.375, -6}, {7.625, -6}}], 
    LineBox[{{7.375, -7}, {7.625, -7}}], LineBox[{{5.375, -9}, {7.625, -9}}], 
    LineBox[{{8.375, -1}, {8.625, -1}}], LineBox[{{7.375, -2}, {8.625, -2}}], 
    LineBox[{{8.375, -3}, {8.625, -3}}], LineBox[{{8.375, -4}, {8.625, -4}}], 
    LineBox[{{7.375, -5}, {8.625, -5}}], LineBox[{{8.375, -6}, {8.625, -6}}], 
    LineBox[{{8.375, -7}, {8.625, -7}}], LineBox[{{7.375, -8}, {8.625, -8}}], 
    LineBox[{{8.375, -9}, {8.625, -9}}], LineBox[{{9.375, -1}, {9.625, -1}}], 
    LineBox[{{9.375, -2}, {9.625, -2}}], LineBox[{{9.375, -3}, {9.625, -3}}], 
    LineBox[{{9.375, -4}, {9.625, -4}}], LineBox[{{9.375, -5}, {9.625, -5}}], 
    LineBox[{{9.375, -6}, {9.625, -6}}], LineBox[{{9.375, -7}, {9.625, -7}}], 
    LineBox[{{9.375, -8}, {9.625, -8}}], LineBox[{{9.375, -9}, {9.625, -9}}], 
    LineBox[{{10.375, -1}, {10.625, -1}}], 
    LineBox[{{10.375, -4}, {10.625, -4}}], 
    LineBox[{{11.375, -1}, {11.625, -1}}], 
    LineBox[{{10.375, -7}, {11.625, -7}}], 
    LineBox[{{11.375, -4}, {12.625, -4}}], 
    LineBox[{{12.375, -7}, {12.625, -7}}], 
    LineBox[{{12.375, -1}, {12.625, -1}}], 
    LineBox[{{13.375, -1}, {13.625, -1}}], 
    LineBox[{{10.375, -2}, {13.625, -2}}], 
    LineBox[{{10.375, -3}, {13.625, -3}}], 
    LineBox[{{13.375, -4}, {13.625, -4}}], 
    LineBox[{{10.375, -5}, {13.625, -5}}], 
    LineBox[{{10.375, -6}, {13.625, -6}}], 
    LineBox[{{13.375, -7}, {13.625, -7}}], 
    LineBox[{{10.375, -8}, {13.625, -8}}], 
    LineBox[{{10.375, -9}, {13.625, -9}}]}, {{{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -4.}, {0.85, -4.}}], 
       LineBox[{{1.15, -4.}, {1.375, -4.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{1., -4.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{0.85, -4.}, {1.15, -4.}}], 
         LineBox[{{1., -4.15}, {1., -3.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{1., -1.09375}, {1., -3.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
      LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{1.625, -7.}, {1.85, -7.}}], 
       LineBox[{{2.15, -7.}, {2.375, -7.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{2., -7.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{1.85, -7.}, {2.15, -7.}}], 
         LineBox[{{2., -7.15}, {2., -6.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{2., -1.09375}, {2., -6.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
      LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{2., -1.}, 0.09375]}}, {}}, {{
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{2.625, -1.375}, {3.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -2.375}, {3.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -3.375}, {3.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{2.625, -4.375}, {3.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -5.375}, {3.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -6.375}, {3.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{2.625, -7.375}, {3.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -8.375}, {3.375, -7.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -8.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{2.625, -9.375}, {3.375, -8.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -9.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -1.375}, {3., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -2.375}, {3., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -3.375}, {3., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -4.375}, {3., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -5.375}, {3., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -6.375}, {3., -6.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -7.375}, {3., -7.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{3., -8.375}, {3., -8.625}}]}}}, GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
        NCache[{1.46875, Rational[-17, 2]}, {1.46875, -8.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -1}, {0.625, -1}}], 
       LineBox[{{0.625, -2}, {0.625, -2}}], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{0.625, -5}, {0.625, -5}}], 
       LineBox[{{0.625, -7}, {0.625, -7}}], 
       LineBox[{{0.625, -8}, {0.625, -8}}], 
       LineBox[{{1.375, -1}, {1.375, -1}}], 
       LineBox[{{1.375, -2}, {1.375, -2}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}], 
       LineBox[{{1.375, -5}, {1.375, -5}}], 
       LineBox[{{1.375, -7}, {1.375, -7}}], 
       LineBox[{{1.375, -8}, {1.375, -8}}]}, {{{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -2.}, {0.85, -2.}}], 
          LineBox[{{1.15, -2.}, {1.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -2.}, {1.15, -2.}}], 
            LineBox[{{1., -2.15}, {1., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -1.09375}, {1., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
         LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -5.}, {0.85, -5.}}], 
          LineBox[{{1.15, -5.}, {1.375, -5.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -5.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -5.}, {1.15, -5.}}], 
            LineBox[{{1., -5.15}, {1., -4.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -4.09375}, {1., -4.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -4.}, {0.90625, -4.}}], 
         LineBox[{{1.09375, -4.}, {1.375, -4.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -4.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -8.}, {0.85, -8.}}], 
          LineBox[{{1.15, -8.}, {1.375, -8.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -8.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -8.}, {1.15, -8.}}], 
            LineBox[{{1., -8.15}, {1., -7.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -7.09375}, {1., -7.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -7.}, {0.90625, -7.}}], 
         LineBox[{{1.09375, -7.}, {1.375, -7.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -7.}, 0.09375]}}, {}}}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "4", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-1, 2]}, {1, -0.5}]]}, {3, 0}], 
    GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
        NCache[{1.46875, Rational[-19, 2]}, {1.46875, -9.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -1}, {0.625, -1}}], 
       LineBox[{{0.625, -3}, {0.625, -3}}], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{0.625, -6}, {0.625, -6}}], 
       LineBox[{{0.625, -7}, {0.625, -7}}], 
       LineBox[{{0.625, -9}, {0.625, -9}}], 
       LineBox[{{1.375, -1}, {1.375, -1}}], 
       LineBox[{{1.375, -3}, {1.375, -3}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}], 
       LineBox[{{1.375, -6}, {1.375, -6}}], 
       LineBox[{{1.375, -7}, {1.375, -7}}], 
       LineBox[{{1.375, -9}, {1.375, -9}}]}, {{{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -3.}, {0.85, -3.}}], 
          LineBox[{{1.15, -3.}, {1.375, -3.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -3.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -3.}, {1.15, -3.}}], 
            LineBox[{{1., -3.15}, {1., -2.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -1.09375}, {1., -2.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
         LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -6.}, {0.85, -6.}}], 
          LineBox[{{1.15, -6.}, {1.375, -6.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -6.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -6.}, {1.15, -6.}}], 
            LineBox[{{1., -6.15}, {1., -5.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -4.09375}, {1., -5.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -4.}, {0.90625, -4.}}], 
         LineBox[{{1.09375, -4.}, {1.375, -4.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -4.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -9.}, {0.85, -9.}}], 
          LineBox[{{1.15, -9.}, {1.375, -9.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -9.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -9.}, {1.15, -9.}}], 
            LineBox[{{1., -9.15}, {1., -8.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -7.09375}, {1., -8.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -7.}, {0.90625, -7.}}], 
         LineBox[{{1.09375, -7.}, {1.375, -7.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -7.}, 0.09375]}}, {}}}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "4", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-1, 2]}, {1, -0.5}]]}, {4, 0}], 
    GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-7, 2]}, {0.53125, -3.5}], 
        NCache[{1.46875, Rational[-9, 2]}, {1.46875, -4.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{0.625, -4.375}, {1.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           RowBox[{"0.22`", " ", "\<\"I\"\>"}], "+", 
           RowBox[{"0.33`", " ", "\<\"X\"\>"}], "+", 
           RowBox[{"0.12`", " ", "\<\"Y\"\>"}], "+", 
           RowBox[{"0.33`", " ", "\<\"Z\"\>"}]}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{"0.22`", " ", "\<\"I\"\>"}], "+", 
         RowBox[{"0.33`", " ", "\<\"X\"\>"}], "+", 
         RowBox[{"0.12`", " ", "\<\"Y\"\>"}], "+", 
         RowBox[{"0.33`", " ", "\<\"Z\"\>"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-7, 2]}, {1, -3.5}]]}, {5, 0}], 
    GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
        NCache[{1.46875, Rational[-17, 2]}, {1.46875, -8.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -1}, {0.625, -1}}], 
       LineBox[{{0.625, -2}, {0.625, -2}}], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{0.625, -5}, {0.625, -5}}], 
       LineBox[{{0.625, -7}, {0.625, -7}}], 
       LineBox[{{0.625, -8}, {0.625, -8}}], 
       LineBox[{{1.375, -1}, {1.375, -1}}], 
       LineBox[{{1.375, -2}, {1.375, -2}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}], 
       LineBox[{{1.375, -5}, {1.375, -5}}], 
       LineBox[{{1.375, -7}, {1.375, -7}}], 
       LineBox[{{1.375, -8}, {1.375, -8}}]}, {{{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -2.}, {0.85, -2.}}], 
          LineBox[{{1.15, -2.}, {1.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -2.}, {1.15, -2.}}], 
            LineBox[{{1., -2.15}, {1., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -1.09375}, {1., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
         LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -5.}, {0.85, -5.}}], 
          LineBox[{{1.15, -5.}, {1.375, -5.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -5.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -5.}, {1.15, -5.}}], 
            LineBox[{{1., -5.15}, {1., -4.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -4.09375}, {1., -4.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -4.}, {0.90625, -4.}}], 
         LineBox[{{1.09375, -4.}, {1.375, -4.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -4.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -8.}, {0.85, -8.}}], 
          LineBox[{{1.15, -8.}, {1.375, -8.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -8.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -8.}, {1.15, -8.}}], 
            LineBox[{{1., -8.15}, {1., -7.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -7.09375}, {1., -7.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -7.}, {0.90625, -7.}}], 
         LineBox[{{1.09375, -7.}, {1.375, -7.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -7.}, 0.09375]}}, {}}}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "4", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-1, 2]}, {1, -0.5}]]}, {6, 0}], 
    GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
        NCache[{1.46875, Rational[-19, 2]}, {1.46875, -9.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -1}, {0.625, -1}}], 
       LineBox[{{0.625, -3}, {0.625, -3}}], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{0.625, -6}, {0.625, -6}}], 
       LineBox[{{0.625, -7}, {0.625, -7}}], 
       LineBox[{{0.625, -9}, {0.625, -9}}], 
       LineBox[{{1.375, -1}, {1.375, -1}}], 
       LineBox[{{1.375, -3}, {1.375, -3}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}], 
       LineBox[{{1.375, -6}, {1.375, -6}}], 
       LineBox[{{1.375, -7}, {1.375, -7}}], 
       LineBox[{{1.375, -9}, {1.375, -9}}]}, {{{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -3.}, {0.85, -3.}}], 
          LineBox[{{1.15, -3.}, {1.375, -3.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -3.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -3.}, {1.15, -3.}}], 
            LineBox[{{1., -3.15}, {1., -2.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -1.09375}, {1., -2.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
         LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -1.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -6.}, {0.85, -6.}}], 
          LineBox[{{1.15, -6.}, {1.375, -6.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -6.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -6.}, {1.15, -6.}}], 
            LineBox[{{1., -6.15}, {1., -5.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -4.09375}, {1., -5.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -4.}, {0.90625, -4.}}], 
         LineBox[{{1.09375, -4.}, {1.375, -4.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -4.}, 0.09375]}}, {}}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -9.}, {0.85, -9.}}], 
          LineBox[{{1.15, -9.}, {1.375, -9.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{1., -9.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{0.85, -9.}, {1.15, -9.}}], 
            LineBox[{{1., -9.15}, {1., -8.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{1., -7.09375}, {1., -8.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{0.625, -7.}, {0.90625, -7.}}], 
         LineBox[{{1.09375, -7.}, {1.375, -7.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{1., -7.}, 0.09375]}}, {}}}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "4", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
          RowBox[{
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-1, 2]}, {1, -0.5}]]}, {7, 0}], 
    GeometricTransformationBox[{
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8], 
       Dashing[{Tiny, Tiny}]}], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.3]}], 
       RectangleBox[NCache[{0.53125, Rational[-1, 2]}, {0.53125, -0.5}], 
        NCache[{1.46875, Rational[-19, 2]}, {1.46875, -9.5}],
        RoundingRadius->0.1]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.625, -2}, {0.625, -2}}], 
       LineBox[{{0.625, -3}, {0.625, -3}}], 
       LineBox[{{0.625, -1}, {0.625, -1}}], 
       LineBox[{{0.625, -5}, {0.625, -5}}], 
       LineBox[{{0.625, -6}, {0.625, -6}}], 
       LineBox[{{0.625, -4}, {0.625, -4}}], 
       LineBox[{{0.625, -8}, {0.625, -8}}], 
       LineBox[{{0.625, -9}, {0.625, -9}}], 
       LineBox[{{0.625, -7}, {0.625, -7}}], 
       LineBox[{{1.375, -1}, {1.375, -1}}], 
       LineBox[{{1.375, -2}, {1.375, -2}}], 
       LineBox[{{1.375, -3}, {1.375, -3}}], 
       LineBox[{{1.375, -4}, {1.375, -4}}], 
       LineBox[{{1.375, -5}, {1.375, -5}}], 
       LineBox[{{1.375, -6}, {1.375, -6}}], 
       LineBox[{{1.375, -7}, {1.375, -7}}], 
       LineBox[{{1.375, -8}, {1.375, -8}}], 
       LineBox[{{1.375, -9}, {1.375, -9}}]}, {{{
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
          RectangleBox[{0.625, -1.375}, {1.375, -0.625},
           RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"X\"\>",
             StripOnInput->False,
             FontFamily->"Roboto",
             FontSize->11,
             FontColor->GrayLevel[0],
             Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
            Center}]}, {
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -1.375}, {1., -1.90625}}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -2.09375}, {1., -2.90625}}]}}}, {
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -2.}, {0.90625, -2.}}], 
          LineBox[{{1.09375, -2.}, {1.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -2.}, 0.09375]}}, 
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -3.}, {0.90625, -3.}}], 
          LineBox[{{1.09375, -3.}, {1.375, -3.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -3.}, 0.09375]}}}, {}}, {{
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
          RectangleBox[{0.625, -4.375}, {1.375, -3.625},
           RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"X\"\>",
             StripOnInput->False,
             FontFamily->"Roboto",
             FontSize->11,
             FontColor->GrayLevel[0],
             Background->GrayLevel[0, 0]], {1., -4.}], {{{1, 0}, {0, 1}}, 
            Center}]}, {
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -4.375}, {1., -4.90625}}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -5.09375}, {1., -5.90625}}]}}}, {
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -5.}, {0.90625, -5.}}], 
          LineBox[{{1.09375, -5.}, {1.375, -5.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -5.}, 0.09375]}}, 
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -6.}, {0.90625, -6.}}], 
          LineBox[{{1.09375, -6.}, {1.375, -6.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -6.}, 0.09375]}}}, {}}, {{
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
          RectangleBox[{0.625, -7.375}, {1.375, -6.625},
           RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"X\"\>",
             StripOnInput->False,
             FontFamily->"Roboto",
             FontSize->11,
             FontColor->GrayLevel[0],
             Background->GrayLevel[0, 0]], {1., -7.}], {{{1, 0}, {0, 1}}, 
            Center}]}, {
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -7.375}, {1., -7.90625}}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], 
           LineBox[{{1., -8.09375}, {1., -8.90625}}]}}}, {
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -8.}, {0.90625, -8.}}], 
          LineBox[{{1.09375, -8.}, {1.375, -8.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -8.}, 0.09375]}}, 
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{0.625, -9.}, {0.90625, -9.}}], 
          LineBox[{{1.09375, -9.}, {1.375, -9.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
           DiskBox[{1., -9.}, 0.09375]}}}, {}}}, {}, InsetBox[
       StyleBox[
        RowBox[{
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"X\"\>"], "(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "3"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"X\"\>"], "(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"5", ",", "6"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}], "/*", 
         RowBox[{
          SubscriptBox["\<\"C\"\>", "\<\"X\"\>"], "(", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"8", ",", "9"}], "}"}], ",", 
           RowBox[{"{", "}"}]}], ")"}]}],
        StripOnInput->False,
        FontFamily->"Times",
        Background->GrayLevel[0, 0]], 
       NCache[{1, Rational[-1, 2]}, {1, -0.5}]]}, {8, 0}], {{
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{9.625, -1.375}, {10.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -2.375}, {10.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -3.375}, {10.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{9.625, -4.375}, {10.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -5.375}, {10.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -6.375}, {10.375, -5.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -6.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{9.625, -7.375}, {10.375, -6.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -7.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -8.375}, {10.375, -7.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -8.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.537254, 0.537254, 0.537254]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.5]}], 
       RectangleBox[{9.625, -9.375}, {10.375, -8.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"I\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {10., -9.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -1.375}, {10., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -2.375}, {10., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -3.375}, {10., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -4.375}, {10., -4.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -5.375}, {10., -5.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -6.375}, {10., -6.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -7.375}, {10., -7.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{10., -8.375}, {10., -8.625}}]}}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{10.625, -4.}, {10.85, -4.}}], 
       LineBox[{{11.15, -4.}, {11.375, -4.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{11., -4.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{10.85, -4.}, {11.15, -4.}}], 
         LineBox[{{11., -4.15}, {11., -3.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{11., -1.09375}, {11., -3.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{10.625, -1.}, {10.90625, -1.}}], 
      LineBox[{{11.09375, -1.}, {11.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{11., -1.}, 0.09375]}}, {}}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{11.625, -7.}, {11.85, -7.}}], 
       LineBox[{{12.15, -7.}, {12.375, -7.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        DiskBox[{12., -7.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{11.85, -7.}, {12.15, -7.}}], 
         LineBox[{{12., -7.15}, {12., -6.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{12., -1.09375}, {12., -6.85}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{11.625, -1.}, {11.90625, -1.}}], 
      LineBox[{{12.09375, -1.}, {12.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{12., -1.}, 0.09375]}}, {}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{12.625, -1.375}, {13.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {13., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{13., -1.375}, {13., -3.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{13., -4.09375}, {13., -6.90625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{12.625, -4.}, {12.90625, -4.}}], 
       LineBox[{{13.09375, -4.}, {13.375, -4.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
        DiskBox[{13., -4.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{12.625, -7.}, {12.90625, -7.}}], 
       LineBox[{{13.09375, -7.}, {13.375, -7.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
        DiskBox[{13., -7.}, 0.09375]}}}, {}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["6",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -6}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["7",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -7}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["8",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -8}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["9",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -9}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->{752.661376953125, Automatic}]], "Output",
 CellChangeTimes->{
  3.878165190245352*^9, 3.878166309987969*^9, 3.878166361110083*^9, {
   3.878166396506274*^9, 3.87816640400587*^9}, 3.8781664462945967`*^9, 
   3.878169539801322*^9, {3.87816963641289*^9, 3.878169641586027*^9}, {
   3.8781708988045397`*^9, 3.878170922751822*^9}, {3.878170957338282*^9, 
   3.878170967289*^9}, {3.878171283664465*^9, 3.878171305064608*^9}, 
   3.8781714070149508`*^9, 3.878171517738286*^9, 3.878171568109332*^9, 
   3.878605379780151*^9, {3.878605455430373*^9, 3.878605475407215*^9}, 
   3.878605553372746*^9, 3.8786055911901093`*^9, {3.878605637995929*^9, 
   3.8786056959198637`*^9}},
 CellLabel->
  "Out[750]=",ExpressionUUID->"e8933060-006a-4898-8e57-9c9db71547af"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ShorLogical0", " ", "=", "  ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "8", "]"}]}], ")"}], "*", 
     RowBox[{"QuantumTensorProduct", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "+", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}], ",", 
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "+", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}], ",", 
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "+", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ShorLogical1", " ", "=", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "8", "]"}]}], ")"}], "*", 
     RowBox[{"QuantumTensorProduct", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "-", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}], ",", 
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "-", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}], ",", 
       RowBox[{
        RowBox[{"QuantumState", "[", "\"\<000\>\"", "]"}], "-", 
        RowBox[{"QuantumState", "[", "\"\<111\>\"", "]"}]}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Psi]Shor", "[", 
    RowBox[{"C1_", ",", "C2_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"C1", "*", "ShorLogical0"}], "+", 
    RowBox[{"C2", "*", "ShorLogical1"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.878165204091468*^9, 3.8781652342304497`*^9}, {
   3.878165311203246*^9, 3.878165542101655*^9}, {3.878165680952324*^9, 
   3.878165681169118*^9}, {3.878568366098874*^9, 3.87856853500217*^9}, {
   3.878605711605309*^9, 3.878605718235773*^9}, 3.879386579119535*^9, {
   3.8793869283924923`*^9, 3.879386954919529*^9}},
 CellLabel->
  "In[1152]:=",ExpressionUUID->"ada7f083-15d3-4ff3-bbfe-43172a4fedc9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"testShorState", " ", "=", " ", 
   RowBox[{"\[Psi]Shor", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", "ShorStabilizers", "]"}], "[", 
  "testShorState", "]"}]}], "Input",
 CellChangeTimes->{{3.8781655653903303`*^9, 3.878165732037348*^9}, {
  3.878605723419848*^9, 3.878605737102386*^9}},
 CellLabel->
  "In[756]:=",ExpressionUUID->"65d8c9b5-0628-4998-9a7b-0ff099b92153"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
               Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              RowBox[{
                TemplateBox[{"None", 
                  RowBox[{"\[CircleTimes]", "9"}]}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"H\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\""}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"0.22`", " ", "\"I\""}], "+", 
                    RowBox[{"0.33`", " ", "\"X\""}], "+", 
                    RowBox[{"0.12`", " ", "\"Y\""}], "+", 
                    RowBox[{"0.33`", " ", "\"Z\""}]}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5", ",", "6"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"8", ",", "9"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"H\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\""}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "7"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]], Annotation[#, 
              RightComposition[
               Superscript[None, 
                CircleTimes[9]], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 0.22 "I" + 0.33 "X" + 0.12 "Y" + 
               0.33 "Z", 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "X"][{2, 3}, {}], 
               Subscript["C", "X"][{5, 6}, {}], 
               Subscript["C", "X"][{8, 9}, {}], 
               CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "X"][{4, 7}, {}]], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["512", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], AspectRatio -> 1, Axes -> False, 
               Frame -> False, FrameLabel -> {None, None}, FrameStyle -> 
               Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], FrameTicks -> None, 
               ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              RowBox[{
                TemplateBox[{"None", 
                  RowBox[{"\[CircleTimes]", "9"}]}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"H\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\""}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  RowBox[{
                    RowBox[{"0.22`", " ", "\"I\""}], "+", 
                    RowBox[{"0.33`", " ", "\"X\""}], "+", 
                    RowBox[{"0.12`", " ", "\"Y\""}], "+", 
                    RowBox[{"0.33`", " ", "\"Z\""}]}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "7", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"5", ",", "6"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"8", ",", "9"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  
                  RowBox[{
                   "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"H\"", "\[CircleTimes]", 
                    "\"I\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"H\"", "\[CircleTimes]", "\"I\"", "\[CircleTimes]", 
                    "\"I\""}], ")"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "7"}], "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}]}]], Annotation[#, 
              RightComposition[
               Superscript[None, 
                CircleTimes[9]], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 0.22 "I" + 0.33 "X" + 0.12 "Y" + 
               0.33 "Z", 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{4}, {}], 
               Subscript["C", "NOT"][{7}, {}], 
               Subscript["C", "X"][{2, 3}, {}], 
               Subscript["C", "X"][{5, 6}, {}], 
               Subscript["C", "X"][{8, 9}, {}], 
               CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "X"][{4, 7}, {}]], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["512", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["$Aborted", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox["$Aborted", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", 
                    ",", "2", ",", "2", ",", "2"}], "}"}], "SummaryItem"]}], 
               ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {512}, 
    Complex[0., 0.], {
    1, {{0, 64}, {{1}, {4}, {5}, {8}, {25}, {28}, {29}, {32}, {33}, {36}, {
      37}, {40}, {57}, {60}, {61}, {64}, {193}, {196}, {197}, {200}, {217}, {
      220}, {221}, {224}, {225}, {228}, {229}, {232}, {249}, {252}, {253}, {
      256}, {257}, {260}, {261}, {264}, {281}, {284}, {285}, {288}, {289}, {
      292}, {293}, {296}, {313}, {316}, {317}, {320}, {449}, {452}, {453}, {
      456}, {473}, {476}, {477}, {480}, {481}, {484}, {485}, {488}, {505}, {
      508}, {509}, {512}}}, CompressedData["
1:eJxTTMoPSnNgYGAoZgESPpnFJWlMIB47kHDOzy3ISa0o0orpP/RVY499EQMU
YCqByVBJyQ651teBO9btx1QiD5KQO0p7t0At2k9YCR3Dhfigsx8MbhlVMjBK
iEi79Hcu7jw9mIJuRCoZTAUZKZUNrcs6qFsGRR1AfH00KLI9EUFHI7cAAIwB
bgk=
     "]}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 6} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 6} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 7} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 7} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 8} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 8} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 9} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 9} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> RightComposition[
       Superscript[None, 
        CircleTimes[9]], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{1}, {}], 
       CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{4}, {}], 
       Subscript["C", "NOT"][{7}, {}], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{4}, {}], 
       Subscript["C", "NOT"][{7}, {}], 0.22 "I" + 0.33 "X" + 0.12 "Y" + 
       0.33 "Z", 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{4}, {}], 
       Subscript["C", "NOT"][{7}, {}], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{4}, {}], 
       Subscript["C", "NOT"][{7}, {}], 
       Subscript["C", "X"][{2, 3}, {}], 
       Subscript["C", "X"][{5, 6}, {}], 
       Subscript["C", "X"][{8, 9}, {}], 
       CircleTimes["H", "I", "I", "H", "I", "I", "H", "I", "I"], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "NOT"][{1}, {}], 
       Subscript["C", "X"][{4, 7}, {}]], "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.878165696718191*^9, 3.8781657326543283`*^9, {3.878605738360651*^9, 
   3.878605742058514*^9}},
 CellLabel->
  "Out[757]=",ExpressionUUID->"df0ee856-afea-4a3d-9abc-cdb834a8c549"]
}, Open  ]]
}, Open  ]],

Cell["Fault-Tolerance", "Subsection",
 CellChangeTimes->{{3.878165762983556*^9, 
  3.8781657653533688`*^9}},ExpressionUUID->"5732dd87-93f4-4887-9404-\
4e4d49cf612b"]
}, Open  ]],

Cell["Bosonic Codes", "Section",
 CellChangeTimes->{{3.8781648613382187`*^9, 
  3.878164865051084*^9}},ExpressionUUID->"130f4d90-ec93-41d8-a31c-\
0888ec139c48"],

Cell["Toric Code", "Section",
 CellChangeTimes->{{3.878164774415716*^9, 
  3.87816477581707*^9}},ExpressionUUID->"4d00f0da-63c7-45ae-8d33-\
91efade18148"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Magic State Distillation", "Chapter",
 CellChangeTimes->{{3.878164668805608*^9, 
  3.878164693797483*^9}},ExpressionUUID->"5e8076e8-f823-48f4-9e2a-\
264782b67762"],

Cell[CellGroupData[{

Cell["Magic State Distillation", "Section",
 CellChangeTimes->{{3.8765148318356743`*^9, 
  3.876514835842465*^9}},ExpressionUUID->"a0836cae-1398-4cef-b716-\
41b65c0c7153"],

Cell["\<\
Magic states are a valuable resource for realizable universal quantum \
computation. It is famously known that the set of Clifford gates (Hadamard, \
phase, CNOT gates) are not themselves a universal set, however access to \
Clifford gates and one additional non-Clifford operation does provide a \
universal gate set. For this reason, much interest surrounds the acquisition \
of non-Clifford resources by simplest means available. In 2004 Sergey Bravyi \
and Alexei Kitaev demonstrated that stabilizer circuits, those circuits \
composed only of Clifford gates, could be used to imperfectly \
(probabilistically) access non-stabilizer states (those states not directly \
reachable from measurement basis using only Clifford operations). As a \
protocol, so-called \[OpenCurlyDoubleQuote]Magic States\
\[CloseCurlyDoubleQuote] of a given qubit-number are distilled from \
higher-qubit systems constructed in a noise-assumptive manner.  Using an \
error-correcting scheme, higher-fidelity magic states can be extracted from \
the larger, faulty composite system. Once one has produced a magic state of \
sufficiently-high fidelity for computational viability, the state may be \
implemented as a non-Clifford resource in the appropriate quantum circuit, \
thus offering universal computation capabilities.\
\>", "Text",
 CellChangeTimes->{{3.878987246832281*^9, 3.878987428426393*^9}, {
  3.8789874651861963`*^9, 3.878987585835018*^9}, {3.878987949024086*^9, 
  3.878988148244948*^9}, {3.878988192582552*^9, 3.878988192984522*^9}, {
  3.87898823080961*^9, 3.8789883878371153`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"94360b47-350c-47ce-a95e-c92f8160fe2f"],

Cell[CellGroupData[{

Cell["Distilling T-Type Magic", "Subsection",
 CellChangeTimes->{{3.876515474980954*^9, 
  3.8765154815808496`*^9}},ExpressionUUID->"8fcc8827-a114-4915-9895-\
8ef9e988b3c7"],

Cell["Define T-operator and associated eigenstates.", "Text",
 CellChangeTimes->{{3.876516017142761*^9, 3.876516074329163*^9}, {
  3.8770470948967333`*^9, 3.8770470989189663`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"efd2a914-8949-47a9-8f2d-c0be1ee58dc6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"operatorT", " ", "=", " ", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"I", "*", 
          RowBox[{"Pi", "/", "4"}]}], "]"}], "/", 
        RowBox[{"Sqrt", "[", "2", "]"}]}], "*", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"I", ",", 
           RowBox[{"-", "I"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"{", "1", "}"}], ",", "\"\<Z\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"ArcCos", "[", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", "3", "]"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateT0", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "*", 
     RowBox[{"QuantumState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "2"}], "]"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", 
       RowBox[{"Pi", "/", "4"}]}], "]"}], "*", 
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "*", 
     RowBox[{"QuantumState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateT1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "\[Beta]", "]"}], "*", 
     RowBox[{"QuantumState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", "2"}], "]"}]}], " ", "-", " ", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", 
       RowBox[{"Pi", "/", "4"}]}], "]"}], "*", 
     RowBox[{"Cos", "[", "\[Beta]", "]"}], "*", 
     RowBox[{"QuantumState", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.876516095938223*^9, 3.876516102166171*^9}, {
   3.876516273848523*^9, 3.87651628707943*^9}, {3.876516658815936*^9, 
   3.87651669065199*^9}, {3.8765167555966053`*^9, 3.876516775916625*^9}, {
   3.876517021358482*^9, 3.87651703892572*^9}, {3.876517132199192*^9, 
   3.876517132548553*^9}, {3.877047315095302*^9, 3.877047316376013*^9}, {
   3.87704762652321*^9, 3.87704763965517*^9}, 3.877054641822238*^9, {
   3.8773952392044687`*^9, 3.8773952631066628`*^9}, 3.877395392509768*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"8d097af3-23c7-4154-bd09-5ac7c87adc90"],

Cell["\<\
Applying projection operation on the 5-fold tensor product of T0, encodes a \
logical T0 state into 5 physical qubits. Accordingly, with T1. This \
corresponds to an orthogonal projection into the code subspace.\
\>", "Text",
 CellChangeTimes->{{3.877050772839347*^9, 3.877050795424172*^9}, {
  3.877563284194569*^9, 3.8775633279290857`*^9}, {3.877563416308402*^9, 
  3.877563422580759*^9}, {3.879602266432*^9, 3.879602285702285*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"55088e93-12a2-4d4b-8f58-1ddfebcc17e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"logicalT0", " ", "=", " ", 
   RowBox[{"subspaceProjectorFiveQCode", "[", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
     "stateT0", ",", "stateT0", ",", "stateT0", ",", "stateT0", ",", 
      "stateT0"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logicalT1", " ", "=", " ", 
   RowBox[{"subspaceProjectorFiveQCode", "[", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
     "stateT1", ",", "stateT1", ",", "stateT1", ",", "stateT1", ",", 
      "stateT1"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.877563330669054*^9, 3.877563342218211*^9}, {
  3.8775634043949947`*^9, 3.877563442029158*^9}, {3.878567797917471*^9, 
  3.878567798600512*^9}},ExpressionUUID->"04a8e120-b8d3-4abe-bea8-\
5c3ab0084711"],

Cell["\<\
Define a function for producing a faulty version of a T-state based on some \
initial dephasing operation. An arbitrary input error is assumed and applied \
at the state-preparation stage, for example, with \[Epsilon] = 0.3 below.\
\>", "Text",
 CellChangeTimes->{{3.8775634889455748`*^9, 3.877563493019685*^9}, {
  3.877563661357699*^9, 3.8775637047305527`*^9}, {3.879602290676717*^9, 
  3.879602344421378*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f3201f83-6166-4dc9-a1cc-3af344ad73a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FaultyTState", "[", "inputError_", "]"}], ":=", 
    RowBox[{"QuantumState", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "inputError"}], ")"}], "*", 
       RowBox[{"stateT0", "[", "\"\<DensityMatrix\>\"", "]"}]}], "+", " ", 
      RowBox[{"inputError", "*", 
       RowBox[{"stateT1", "[", "\"\<DensityMatrix\>\"", "]"}]}]}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FaultyTState", "[", ".3", "]"}], "[", "\"\<DensityMatrix\>\"", 
   "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"c32ee6e5-f940-4965-ac3b-968c4eb11503"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6154700538379252`", 
      RowBox[{"0.11547005383792518`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.11547005383792514`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.11547005383792518`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.11547005383792514`", " ", "\[ImaginaryI]"}]}], 
      "0.3845299461620748`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0., {
     1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
      0.6154700538379252, Complex[
       0.11547005383792518`, -0.11547005383792514`], Complex[
       0.11547005383792518`, 0.11547005383792514`], 
       0.3845299461620748}}]]]]], "Output",
 CellChangeTimes->{{3.877563687803708*^9, 3.87756370730968*^9}},
 CellLabel->
  "Out[230]//MatrixForm=",ExpressionUUID->"5b81895b-1b63-4d70-a692-\
14b3cd33bb8a"]
}, Open  ]],

Cell["\<\
Define a decoding circuit for purifying a single-qubit T-state from 5-qubit \
product state. This procedure extracts a single output state from the \
multi-qubit input. The fidelity of the final output state can then be \
analyzed.\
\>", "Text",
 CellChangeTimes->{{3.877048188503009*^9, 3.877048206086341*^9}, {
  3.8770507509776773`*^9, 3.877050757592642*^9}, {3.877562864642123*^9, 
  3.8775628757931843`*^9}, {3.8775637289463882`*^9, 3.877563733978771*^9}, {
  3.879602348013422*^9, 3.879602392683671*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"3fb7ffee-6d41-4ec2-b0ae-b72a43484cf2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"decodingQC", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "1", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<X\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "3", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<H\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", "5", "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"decodingQC", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.87756045386061*^9, 3.8775605126884937`*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"b7c59e32-c7e5-4021-b065-765948e9805e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -5}, {0.625, -5}}], LineBox[{{0.375, -1}, {0.625, -1}}], 
    LineBox[{{0.375, -2}, {0.625, -2}}], LineBox[{{0.375, -3}, {0.625, -3}}], 
    LineBox[{{0.375, -4}, {1.625, -4}}], LineBox[{{1.375, -2}, {1.625, -2}}], 
    LineBox[{{1.375, -3}, {1.625, -3}}], LineBox[{{1.375, -5}, {1.625, -5}}], 
    LineBox[{{2.375, -3}, {2.625, -3}}], LineBox[{{1.375, -1}, {2.625, -1}}], 
    LineBox[{{2.375, -4}, {2.625, -4}}], LineBox[{{2.375, -5}, {2.625, -5}}], 
    LineBox[{{2.375, -2}, {3.625, -2}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{3.375, -5}, {3.625, -5}}], LineBox[{{4.375, -1}, {4.625, -1}}], 
    LineBox[{{3.375, -3}, {4.625, -3}}], LineBox[{{4.375, -5}, {4.625, -5}}], 
    LineBox[{{5.375, -5}, {5.625, -5}}], LineBox[{{5.375, -1}, {5.625, -1}}], 
    LineBox[{{4.375, -2}, {5.625, -2}}], LineBox[{{5.375, -3}, {5.625, -3}}], 
    LineBox[{{3.375, -4}, {5.625, -4}}], LineBox[{{6.375, -1}, {6.625, -1}}], 
    LineBox[{{6.375, -2}, {6.625, -2}}], LineBox[{{6.375, -3}, {6.625, -3}}], 
    LineBox[{{6.375, -4}, {6.625, -4}}], 
    LineBox[{{6.375, -5}, {6.625, -5}}]}, {{{{
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{0.625, -2.375}, {1.375, -1.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{0.625, -3.375}, {1.375, -2.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{1., -1.375}, {1., -1.625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{1., -2.375}, {1., -2.625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{1., -3.375}, {1., -4.90625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{0.625, -5.}, {0.90625, -5.}}], 
      LineBox[{{1.09375, -5.}, {1.375, -5.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{1., -5.}, 0.09375]}}, {}}, {{{
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{1.625, -2.375}, {2.375, -1.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{1.625, -3.375}, {2.375, -2.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -3.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{1.625, -5.375}, {2.375, -4.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Y\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -5.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -2.375}, {2., -2.625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -3.375}, {2., -3.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -4.09375}, {2., -4.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{1.625, -4.}, {1.90625, -4.}}], 
      LineBox[{{2.09375, -4.}, {2.375, -4.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.8]}], 
       DiskBox[{2., -4.}, 0.09375]}}, {}}, {{{
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{2.625, -4.375}, {3.375, -3.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -4.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{2.625, -5.375}, {3.375, -4.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Y\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -5.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{3., -1.375}, {3., -2.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{3., -3.09375}, {3., -3.625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{3., -4.375}, {3., -4.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{2.625, -3.}, {2.90625, -3.}}], 
      LineBox[{{3.09375, -3.}, {3.375, -3.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.898039, 0.898039, 0.898039], Opacity[0.8]}], 
       DiskBox[{3., -3.}, 0.09375]}}, {}}, {{{
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{3.625, -5.375}, {4.375, -4.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Y\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -5.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{4., -1.375}, {4., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{4., -2.09375}, {4., -4.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{3.625, -2.}, {3.90625, -2.}}], 
      LineBox[{{4.09375, -2.}, {4.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{4., -2.}, 0.09375]}}, {}}, {{{
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{4.625, -3.375}, {5.375, -2.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {5., -3.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{4.625, -5.375}, {5.375, -4.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"X\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {5., -5.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{5., -1.09375}, {5., -2.625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{5., -3.375}, {5., -4.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{4.625, -1.}, {4.90625, -1.}}], 
      LineBox[{{5.09375, -1.}, {5.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{5., -1.}, 0.09375]}}, {}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{5.625, -5.375}, {6.375, -4.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -5.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{5.625, -1.375}, {6.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{5.625, -2.375}, {6.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{5.625, -3.375}, {6.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{5.625, -4.375}, {6.375, -3.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {6., -4.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -1.375}, {6., -1.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -2.375}, {6., -2.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -3.375}, {6., -3.625}}]}, 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -4.375}, {6., -4.625}}]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["4",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -4}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["5",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -5}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{
  3.877560415129079*^9, {3.877560464762375*^9, 3.877560513307723*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"8a5f21e7-c35d-4dd0-8f6c-249bab15107b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results and Fault-Tolerance Threshold", "Subsection",
 CellChangeTimes->{{3.877052123135384*^9, 3.877052134142105*^9}, {
  3.877561102085532*^9, 
  3.87756110333209*^9}},ExpressionUUID->"fe549be0-d9a3-4b7a-9829-\
4a1201b881d6"],

Cell["\<\
Here we establish the fault-tolerant threshold for this distillation \
protocol, the characteristic error-threshold below which quantum \
error-correction is effective and logical errors can be suppressed. \
Successful distillation of magic T-states corresponds to detection of the \
trivial syndrome upon measurement, i.e. no logical operation was performed on \
the stored information. The probability of detecting this trivial syndrome \
can be computed by projecting a faulty T-state, with some initial input \
error, into the code subspace and subsequently tracing out over the four \
ancillary qubits. The plot below considers this calculation for a range of \
input errors.\
\>", "Text",
 CellChangeTimes->{{3.877561005025797*^9, 3.877561031160589*^9}, {
  3.8782179421508627`*^9, 3.8782183392508507`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"cd069f61-1643-409a-97ff-c17ed110782e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Epsilon]input", " ", "=", " ", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", ".5", ",", 
     RowBox[{".5", "/", "100"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.877273489070269*^9, 3.877273739207902*^9}, {
   3.877274470502898*^9, 3.87727449268618*^9}, {3.877274526722393*^9, 
   3.877274546823432*^9}, {3.8772746318965673`*^9, 3.8772746343401527`*^9}, {
   3.877274704499735*^9, 3.877274710157853*^9}, {3.877274742110497*^9, 
   3.877274746028812*^9}, {3.877274791012025*^9, 3.877274793834585*^9}, 
   3.8772748572463837`*^9, {3.877274888837172*^9, 3.8772749297318077`*^9}, {
   3.8772750100574007`*^9, 3.877275101963317*^9}, {3.877275194503251*^9, 
   3.8772751959102716`*^9}, {3.8772752912325983`*^9, 3.877275292838859*^9}, {
   3.877275348080764*^9, 3.877275359147745*^9}, {3.877393979643608*^9, 
   3.877394003387311*^9}, {3.87755915782411*^9, 3.8775591585674686`*^9}, {
   3.877560728919754*^9, 3.87756072945383*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"2cdd4d50-201d-4dee-9a8e-0cebfe4024b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"syndromeProb", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Tr", "[", 
       RowBox[{"QuantumPartialTrace", "[", 
        RowBox[{
         RowBox[{"subspaceProjectorFiveQCode", "[", 
          RowBox[{"QuantumTensorProduct", "[", 
           RowBox[{
            RowBox[{"FaultyTState", "[", 
             RowBox[{"\[Epsilon]input", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"FaultyTState", "[", 
             RowBox[{"\[Epsilon]input", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"FaultyTState", "[", 
             RowBox[{"\[Epsilon]input", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"FaultyTState", "[", 
             RowBox[{"\[Epsilon]input", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
            RowBox[{"FaultyTState", "[", 
             RowBox[{"\[Epsilon]input", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "\[Epsilon]input", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]input", ",", "syndromeProb"}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "->", " ", "All"}], ",", 
     RowBox[{"PlotLabel", "->", " ", 
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<Probability of Detecting Trivial Syndrome\>\"", ",", " ", 
        "Large"}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(input\)]\)\>\"", ",", 
          "Medium"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(p\), \(trivial\)]\)\>\"", ",", "Medium"}], 
         "]"}]}], "}"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8775607376800337`*^9, 3.87756085300327*^9}, {
   3.87756093747377*^9, 3.877560995522304*^9}, 3.8775626707132273`*^9, 
   3.877562720952896*^9, 3.877562822617033*^9, 
   3.878567799669313*^9},ExpressionUUID->"0b465715-edcb-4b24-9ddb-\
3bc2d30cdafc"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw1lHtQVGUYxo+CE0JAjEDTNkGNDAETDbSaMxL7NKmwjha3sUJRUBEQNaHh
jySVnBHHtNC8FRtqBII0uPPthatcdrkKAsGysFwXKJpKViQuTlhGfMf3vDM7
Z3b3nPd9n+f3fOe1fUejD6wUBOHA8odfpdohVjM+d1eHT2RmIOmPJ7l9XU30
/TT08+y72O1NqPTKnoqqzEFQ29aSjs5G+v8KZnPDY2UxjVDlioUdX4wcenOk
ge6/gQeZDwbnUxpgi+K/5CPtiJ0pdtFIzxdi8tWDlVu/NsLRUpAW6liMTzY5
v67xMVK/EqSnfPPweL0B/nEXGhb8SnHWIdxNtdtA/dVwtYtXTT2tR+Hy05YC
ht43/l77T1g9zdOg1fry84prdZCLpcOvcpvjxalamq/HTrepTZ1htWhc8Fue
UIYZ3ydbTMU1tE8F7kzvdDruUoPoZwPhd0e9WJx5l/arQlT64wm5rRoTmbxh
Nc66Xxb+21dN+9bgxsYtTyetVUjn66XVojoqcKo1vor2r8OpS/eVZ36rxDMa
Bvy7tFxHK0mPAbeSHZM8liqgFAcYsXfvuZDiSxWkz4jDEVml1wIqwKctj8Tp
PcrI5pZy0tuI9uxCf4/kcohyLI0wndEWpTiVk/4mZD+c+eFHXRm8+Tpezdj+
gmJ3UXwZ+dGMWdeB8x+5liE5iVcL9JY4papBT/60Yv0r7S/FHNODd3NXt+Jk
wonZJLme/LqH1TZ50N0ZHR7zdgv3oDc75q3X6Mi/NgwtnkytydBBITZsR+Cq
IyFvh+jIz3b0pbrJztnrIK6XfR+7DjqcuNmtJX87ULf6g7A9N7Xo7BALid6K
RnWalvzuhI/ySumxzVp4iAt2IcB2yPe2TEv+d8FX8a5h7ZwGYru4n+ETYsvo
79QQj27c/omXhvR041svT/n5LzXEpxuKOb9t+1M1pK8bcRGh33u9ryFePZD5
OG8oCdaQ3h64BGqvP3pRQ/x6EDxzq8q6xEi/CbZa4/j+PxnxNGGNRmE+bGbk
hwlT6jLD7wZGfHvhmcwFM/KnF6Ux5ojp64x498K36qvEj3MY+WVGZlHCh39l
MeJvxvx8a2rJp4z8MyNBqYpOT2KUhz70u7gGbNzFyM8+CKdqP1uIZJSPPnTn
5wVfDWfkbz/qFXY6JzDKSz/yHhW3bNvAyO9+qD3z85VBjPJjQd544uSCPyP/
Lcja3KYK92GUJwt+sbN/5y1vRjwGIOKQMeIxgHUXtOuKPBnxGMB7prTLsjWM
eAxAfD24MuIxCPG4OzPiMQjx+Doy4jEI8Tg6SDyGEMmP13MMF0UeQ5jmx2WV
xGMIXjz+9hKPYYhxtpN4DMOJx3OlxGMYoTxuKyQeI5jn8Vkh8RiBGAdB4jGC
FI5XkHiMYo7jEiQeoyjg9gsSj1FYuZ2CxMOKHG6PIPGwYp7LFSQeVojrCxKP
MfjzdQSJxxjE9oLEYwwyfrsg8RinK8P/o8sHZg==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(input\\)]\\)\"", Medium, 
       StripOnInput -> False], HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[\\(p\\), \\(trivial\\)]\\)\"", Medium, 
       StripOnInput -> False], HoldForm], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{660.3843383789062, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox[
    "\"Probability of Detecting Trivial Syndrome\"", Large, StripOnInput -> 
     False], TraditionalForm],
  PlotRange->{{0, 0.5}, {0, 0.16666666666666666`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.877560972900931*^9, 3.877561002598254*^9}, 
   3.8775627294995327`*^9, 3.8775628295185013`*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"7280ec8b-afb5-4f97-9826-c3def0918bd4"]
}, Open  ]],

Cell["\<\
Similarly the error in the distilled state can be computed as a function of \
input error, thereby observing the production of a higher-fidelity T-state \
from the tensor product of multiple lower-fidelity copies. A fidelity \
calculation allows for a comparison of the output error with the input error. \
Note: The decoding operation actually produces the state T1, which can be \
transformed back into T0 by a Hadamard gate followed by a Pauli-Y gate.\
\>", "Text",
 CellChangeTimes->{{3.877561047503902*^9, 3.877561071878367*^9}, {
  3.878218360599729*^9, 3.878218548652123*^9}, {3.878262402825808*^9, 
  3.878262428257325*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"fe6da2cf-8db4-4c5c-968c-e69317554c88"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Epsilon]output", " ", "=", " ", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"1", "-", 
        RowBox[{
         RowBox[{"First", "@", 
          RowBox[{
           RowBox[{
            RowBox[{"stateT0", "[", "\"\<Conjugate\>\"", "]"}], "[", 
            "\"\<Transpose\>\"", "]"}], "[", "\"\<Matrix\>\"", "]"}]}], ".", 
         RowBox[{
          RowBox[{
           RowBox[{"QuantumOperator", "[", 
            RowBox[{"{", "\"\<Y\>\"", "}"}], "]"}], "[", 
           RowBox[{
            RowBox[{"QuantumOperator", "[", 
             RowBox[{"{", "\"\<H\>\"", "}"}], "]"}], "[", 
            RowBox[{"QuantumPartialTrace", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"decodingQC", "[", 
                RowBox[{"subspaceProjectorFiveQCode", "[", 
                 RowBox[{"QuantumTensorProduct", "[", 
                  RowBox[{
                   RowBox[{"FaultyTState", "[", 
                    RowBox[{"\[Epsilon]input", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"FaultyTState", "[", 
                    RowBox[{"\[Epsilon]input", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"FaultyTState", "[", 
                    RowBox[{"\[Epsilon]input", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"FaultyTState", "[", 
                    RowBox[{"\[Epsilon]input", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                   RowBox[{"FaultyTState", "[", 
                    RowBox[{"\[Epsilon]input", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], 
                "]"}], "[", "\"\<Normalized\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
            "]"}], "]"}], "[", "\"\<DensityMatrix\>\"", "]"}], ".", 
         RowBox[{"stateT0", "[", "\"\<Matrix\>\"", "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "\[Epsilon]input", "]"}]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]input", ",", "\[Epsilon]input"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]input", ",", "\[Epsilon]output"}], "}"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PlotRange", "->", " ", "All"}], ",", 
     RowBox[{"PlotLabel", "->", " ", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Output Error v.s. Input Error\>\"", ",", " ", "Large"}], 
       "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(input\)]\)\>\"", ",", 
          "Medium"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(output\)]\)\>\"", ",", 
          "Medium"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "->", " ", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Without Error Correction\>\"", ",", 
        "\"\<With Error Correction\>\""}], "}"}]}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.877561574394312*^9, 3.877561575199671*^9}, 
   3.877561646839068*^9, {3.877561827823325*^9, 3.877561892950837*^9}, 
   3.8775627358509827`*^9, {3.877562839008533*^9, 3.877562842193962*^9}, 
   3.878567800570403*^9},ExpressionUUID->"56c3d145-641c-4f7e-aace-\
26785dfd659c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxd0jssA1AUxvHGaK61YmM2Y2RlNkkwIjHVyorBwiCRSkQiDUGUIN7P1pt6
05m1Zr33n3xfuEnzE2nPPed8t66rr6O7KpFIdFc+wf9nKJltLaUHW/46LHOp
ka/23Kjk/xNyajIeyfem5Xd7+GtG8rtZWV3M9DdVz0nqzMuGzrG9cv2CpG5W
zlZ+VcwsSu5Zko3xLEvuXZH75fpK5VVJH2uyg4skfa3LUjoU2pD0uSkHQlv9
W5Iy25IUdiRz2LZYeFcylw23VK6SzLkv4xhFy9wHsja0kTqU7MH29oRzJNnL
sQxVklnLnk7kTyhTtuztVDbHQmeSPdrY1si5ZK95WcjHI9lzQdbExi4ke7ex
TOelJIcryRyWXCxzWXK6lsxpyc0y940kR8seLLneSvZiydmypztJ7pa9Wd7B
vWSPlndh2euD5J1Y9mx5N0XJ3i3vyJLDoyQHSw6WHCw5PElysORgyeFZjscc
LDlYcniR5GAZ05LDqyQHSw6WHN4kOVhysOTwLsnBkoMlhw9JDpYcLDl8yl92
qQ7c
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxVkgtMU3cUxu9gkMEM8YE6HEKdE2GowzkHmcKHGgZiNFDRAUGHrKCCUQwI
2rkBBpAhU1h84CaEZ4QNAQcdOFAvAlKB4uXVd3thMVYYbqau+MgCa8vJkp3k
5ubc//2fc77vd1bEHRPG2zAME29+LO//R2P7V871wePiVDCcoc2+QIC5PBvM
y6Wu2ySBaHXL+SO89TyYSfHOhldCOr8IZsA2ccbuAH64ag0w4U9XquSJ9H8p
mKSymwnfpGAq3PKlHEzw+KtN98R0vwqBXpKjotIsOCoqk/0dryMz+6mp+VQu
1asFm3BZlmY6B6+YC/dMnnVg64Wnxh2KqH49mFV2aeuSLqLKfFtR2QiWjRjY
415M/W5izIl7R+VxDRus0YRn4vfDbLaUUf9mBNazjmnFFeg0eZo7SBDbvr6l
yaWa5mlB2Ymls2e7rkM41xDJF9wnSot/ovluITPvfMOZSzcwLrYU/A1MenTc
zn2NNG87uMepOZdsf8Fxy3jJt8Euqavwut1E899B8bqtX579VoI5DiwKN6X4
LDvUQnpYCGxrd22KvIUQa4MOZB6bv/yjqDbS1wEuo0T8ceJtWLqZW4KzWxB+
MP8u6e3Eac+3Ko9pWVjlKDoRGzUpDXvdQfq74LNq49dCt064W8Zx6wY7ZTw5
EdxFfnQj8rEkMTutGwcTLHEfAv+11QW198mfHohWbtQkjPXAUs25vgeCnCJD
yrIH5JcUh8bCShd83otpSzmTFGzyz9U/Xuoj/x7gWcKiiCOj/QiwFuyFp/eS
It3iAfKzFzVe1b9u3/sQ1vFy+iDd9aGf/Q6O/O1HnUNA35ZJDrJ+a0AatPCN
vLxB8luGa/5Za86tGsJi64ADqGl2NsyyQ+T/AGLXBiWVRA/DWi7mIQZcWw3L
jcPEg0OYj7434OwI6eFQN3nUvsNllPhwyH0eG3q4dpT0cXAsF/gyn8iJ1yCy
+wy5wrty0jsIxvvTdeuDFMRvEBfvXE853qMg/UMQ5S2cnQpSEs8hxMplY1ms
kvwwny+yLVroqyK+wwjIUBtyalXkzzDOu5icepaqifcwzmRwR7qz1OTXCLgC
SX6qQU38RyCPV5j6QjTk3wjqvgh17anW0D6Mwi/0lEf8jIb8HMUTv3ZZjVBL
+zGK4ph6n+IKLfkrx/eequrNf2ppX+RQem39rmKjjvyWw3Nm/wrVSR3tjwJ/
2z0JNrboyH8F+h1fxNk819E+KdAsGn5P8IGeeCghPNQRKdqnJx5KRIS4900U
6ImHEsYtTm/LWvXEQ4leB+2ONeN64qGCj8vezavteeKhwptSj9/1q3nioYLQ
dXf6ic944qHG/b8M253ieBRaeajxKENXIhPzxEONycb1RcpCnnhoEOe7wWZP
FU88NDCeNqYflvDEQwPRfuk8/y6eeGiR26uPfsHxxEOL9u7KRFbDEw8toqPm
VbKPeOKhw/Tx/DbBFE88zPmVyw0ORp546NAoqWuqmuaJhx7LWq96v/uaJx56
ZLZOl1/+hyceesw/fYMNnOGJB4+XogOh22Z54sGjP+mKs9Scz/HgEbo73eaV
OZ/jMfbf+19P4xKF
        "]]}}, {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox[
        StyleBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(input\\)]\\)\"", Medium,
          StripOnInput -> False], HoldForm], TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox[
        "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(output\\)]\\)\"", 
         Medium, StripOnInput -> False], HoldForm], TraditionalForm]}, 
    AxesOrigin -> {0, 0}, DisplayFunction -> Identity, 
    Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {430.2904052734375, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> FormBox[
      StyleBox[
      "\"Output Error v.s. Input Error\"", Large, StripOnInput -> False], 
      TraditionalForm], 
    PlotRange -> {{0, 0.5}, {-2.220446049250313*^-16, 0.5}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Without Error Correction\"", "\"With Error Correction\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.877561591062972*^9, 3.87756166025764*^9, 3.8775618329235697`*^9, {
   3.877561890783462*^9, 3.8775619121797447`*^9}, 3.8775627522817917`*^9, 
   3.877562857334496*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"45793c34-6085-41f5-8e28-eccb514a78b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distilling H-Type Magic", "Subsection",
 CellChangeTimes->{{3.876515474980954*^9, 3.8765154815808496`*^9}, {
  3.877977497705112*^9, 
  3.8779774995379953`*^9}},ExpressionUUID->"c5fb5cd8-695b-4177-8313-\
b7fae749aeb3"],

Cell["Define A-operator and associated eigenstates.", "Text",
 CellChangeTimes->{{3.876516017142761*^9, 3.876516074329163*^9}, {
  3.8770470948967333`*^9, 3.8770470989189663`*^9}, {3.878412786661439*^9, 
  3.8784127870129623`*^9}, {3.8784129463230963`*^9, 3.8784129467166348`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"de58a042-c317-4d65-a781-9542555be64c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"operatorA", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", "\"\<X\>\"", "]"}], "+", 
      RowBox[{"QuantumOperator", "[", "\"\<Y\>\"", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"operatorA", "[", "\"\<Matrix\>\"", "]"}], "//", "MatrixForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateA0", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Sqrt", "[", "2", "]"}]}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"QuantumState", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", "2"}], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"I", "*", 
         RowBox[{"Pi", "/", "4"}]}], "]"}], "*", 
       RowBox[{"QuantumState", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", "2"}], "]"}]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stateA1", " ", "=", " ", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<Z\>\"", "]"}], "[", "stateA0", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.876516095938223*^9, 3.876516102166171*^9}, {
   3.876516273848523*^9, 3.87651628707943*^9}, {3.876516658815936*^9, 
   3.87651669065199*^9}, {3.8765167555966053`*^9, 3.876516775916625*^9}, {
   3.876517021358482*^9, 3.87651703892572*^9}, {3.876517132199192*^9, 
   3.876517132548553*^9}, {3.877047315095302*^9, 3.877047316376013*^9}, {
   3.87704762652321*^9, 3.87704763965517*^9}, 3.877054641822238*^9, {
   3.8773952392044687`*^9, 3.8773952631066628`*^9}, 3.877395392509768*^9, {
   3.878412763371992*^9, 3.87841279887859*^9}, {3.8784128336670923`*^9, 
   3.878412890585513*^9}, {3.878412952506631*^9, 3.878413003168181*^9}, {
   3.8784130387414227`*^9, 3.87841306103605*^9}},
 CellLabel->
  "In[610]:=",ExpressionUUID->"429bd5af-9968-4a49-876a-aaa28f20975f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox[
       RowBox[{"1", "-", "\[ImaginaryI]"}], 
       SqrtBox["2"]]},
     {
      FractionBox[
       RowBox[{"1", "+", "\[ImaginaryI]"}], 
       SqrtBox["2"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 1, 2}, {{2}, {1}}}, {
      Complex[1, -1] 2^Rational[-1, 2], Complex[1, 1] 
       2^Rational[-1, 2]}}]]]]], "Output",
 CellChangeTimes->{{3.878413042889682*^9, 3.878413062111002*^9}},
 CellLabel->
  "Out[611]//MatrixForm=",ExpressionUUID->"ea848ad3-1529-4c3c-8b57-\
1670c2971161"]
}, Open  ]],

Cell["\<\
The maximum fidelity of an arbitrary state with A_0 can be computed as,\
\>", "Text",
 CellChangeTimes->{{3.878417309171899*^9, 3.878417395612906*^9}, {
  3.878417467813108*^9, 3.878417473140333*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"994c2703-fddc-459f-ae55-542981231c4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MaxAFidelity", "[", "\[Rho]_", "]"}], ":=", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"First", "[", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"stateA0", "[", "\"\<Conjugate\>\"", "]"}], "[", 
          "\"\<Transpose\>\"", "]"}], "[", "\"\<Matrix\>\"", "]"}], ".", 
        RowBox[{"\[Rho]", "[", "\"\<DensityMatrix\>\"", "]"}], ".", 
        RowBox[{"stateA0", "[", "\"\<Matrix\>\"", "]"}]}], "]"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MaxAFidelity", "[", 
  RowBox[{"QuantumState", "[", "\"\<RandomMixed\>\"", "]"}], "]"}]}], "Input",\

 CellChangeTimes->{{3.8784174860558434`*^9, 3.8784175424941807`*^9}, {
  3.878417677272902*^9, 3.8784178149418173`*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"fa211bd9-773b-4a2b-bdb9-03a99d7e92fa"],

Cell[BoxData[
 RowBox[{"1.3486669238859934`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.878417755888506*^9, 3.8784178152795563`*^9}},
 CellLabel->
  "Out[628]=",ExpressionUUID->"b6231795-8df9-4b7e-be7b-13ac87757976"]
}, Open  ]],

Cell["\<\
A faulty H-state can be prepared similarly to the faulty T-state production \
above,\
\>", "Text",
 CellChangeTimes->{{3.878417886669941*^9, 
  3.878417928668659*^9}},ExpressionUUID->"5c451022-0108-46dc-9f9a-\
6ac631135c8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FaultyHState", "[", "inputError_", "]"}], ":=", 
   RowBox[{"QuantumState", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "inputError"}], ")"}], "*", 
      RowBox[{"stateA0", "[", "\"\<DensityMatrix\>\"", "]"}]}], "+", " ", 
     RowBox[{"inputError", "*", 
      RowBox[{"stateA1", "[", "\"\<DensityMatrix\>\"", "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.878417944814929*^9, 3.878417957520056*^9}},
 CellLabel->
  "In[758]:=",ExpressionUUID->"df5f3291-2061-44b0-9fc8-36591fd22772"],

Cell["\<\
Applying projection operation on the 15-fold tensor product of A0, \
\>", "Text",
 CellChangeTimes->{{3.877050772839347*^9, 3.877050795424172*^9}, {
  3.877563284194569*^9, 3.8775633279290857`*^9}, {3.877563416308402*^9, 
  3.877563422580759*^9}, {3.878418278837304*^9, 3.87841828843124*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"004e62fc-ab46-4ae7-b23e-b5970dbe7aaf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Below", " ", "in", " ", 
   RowBox[{"progress", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.878605798447612*^9, 
  3.8786058044542027`*^9}},ExpressionUUID->"79044c46-9fca-41e9-94ce-\
7b119b1b8a6b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"subspaceProjectorA", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "1", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<X\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "3", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<H\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", "5", "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"subspaceProjectorZ", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"2", ",", "3"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Y\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "1", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<C\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<X\>\"", "->", 
            RowBox[{"{", "5", "}"}]}], ",", 
           RowBox[{"\"\<Z\>\"", "->", 
            RowBox[{"{", "3", "}"}]}]}], "}"}], ",", 
         RowBox[{"{", "1", "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<H\>\"", "->", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], ",", 
         RowBox[{"\"\<Z\>\"", "->", 
          RowBox[{"{", "5", "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HStateSubspaceProjector", " ", "=", " ", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"subspaceProjectorA", ",", "subspaceProjectorZ"}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8784182934999933`*^9, 3.87841829860048*^9}, {
  3.879602470981123*^9, 
  3.879602526172957*^9}},ExpressionUUID->"02efba42-ab07-4a67-b0f9-\
c8bab68897b5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumCircuitOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Directive[
                  RGBColor[0.537254, 0.537254, 0.537254], 
                  Opacity[0.3]], {{
                   LineBox[{{0.375, -5}, {0.625, -5}}]}, {
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   LineBox[{{0.375, -2}, {0.625, -2}}]}, {
                   LineBox[{{0.375, -3}, {0.625, -3}}]}, {
                   LineBox[{{0.375, -4}, {1.625, -4}}]}, {
                   LineBox[{{1.375, -2}, {1.625, -2}}]}, {
                   LineBox[{{1.375, -3}, {1.625, -3}}]}, {
                   LineBox[{{1.375, -5}, {1.625, -5}}]}, {
                   LineBox[{{2.375, -3}, {2.625, -3}}]}, {
                   LineBox[{{1.375, -1}, {2.625, -1}}]}, {
                   LineBox[{{2.375, -4}, {2.625, -4}}]}, {
                   LineBox[{{2.375, -5}, {2.625, -5}}]}, {
                   LineBox[{{2.375, -2}, {3.625, -2}}]}, {
                   LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                   LineBox[{{3.375, -5}, {3.625, -5}}]}, {
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   LineBox[{{3.375, -3}, {4.625, -3}}]}, {
                   LineBox[{{4.375, -5}, {4.625, -5}}]}, {
                   LineBox[{{5.375, -5}, {5.625, -5}}]}, {
                   LineBox[{{5.375, -1}, {5.625, -1}}]}, {
                   LineBox[{{4.375, -2}, {5.625, -2}}]}, {
                   LineBox[{{5.375, -3}, {5.625, -3}}]}, {
                   LineBox[{{3.375, -4}, {5.625, -4}}]}, {
                   LineBox[{{6.375, -1}, {6.625, -1}}]}, {
                   LineBox[{{6.375, -2}, {6.625, -2}}]}, {
                   LineBox[{{6.375, -3}, {6.625, -3}}]}, {
                   LineBox[{{6.375, -4}, {6.625, -4}}]}, {
                   LineBox[{{6.375, -5}, {6.625, -5}}]}}}, {{{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -2.375}, {1.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -3.375}, {1.375, -2.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -1.375}, {1., -1.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -2.375}, {1., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -3.375}, {1., -4.90625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{0.625, -5.}, {0.90625, -5.}}], 
                    LineBox[{{1.09375, -5.}, {1.375, -5.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{1., -5.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -2.375}, {2.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -3.375}, {2.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -5.375}, {2.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -2.375}, {2., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -3.375}, {2., -3.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -4.09375}, {2., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{1.625, -4.}, {1.90625, -4.}}], 
                    LineBox[{{2.09375, -4.}, {2.375, -4.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.898039, 0.898039, 0.898039], 
                    Opacity[0.5]], 
                    Opacity[0.8]]], 
                    DiskBox[{2., -4.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -4.375}, {3.375, -3.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -5.375}, {3.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -1.375}, {3., -2.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -3.09375}, {3., -3.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -4.375}, {3., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{2.625, -3.}, {2.90625, -3.}}], 
                    LineBox[{{3.09375, -3.}, {3.375, -3.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.898039, 0.898039, 0.898039], 
                    Opacity[0.5]], 
                    Opacity[0.8]]], 
                    DiskBox[{3., -3.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -5.375}, {4.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{4., -1.375}, {4., -1.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{4., -2.09375}, {4., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{3.625, -2.}, {3.90625, -2.}}], 
                    LineBox[{{4.09375, -2.}, {4.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{4., -2.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -3.375}, {5.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -5.375}, {5.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{5., -1.09375}, {5., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{5., -3.375}, {5., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{4.625, -1.}, {4.90625, -1.}}], 
                    LineBox[{{5.09375, -1.}, {5.375, -1.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{5., -1.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -5.375}, {6.375, -4.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -1.375}, {6.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -2.375}, {6.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -3.375}, {6.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -4.375}, {6.375, -3.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -1.375}, {6., -1.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -2.375}, {6., -2.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -3.375}, {6., -3.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -4.375}, {6., -4.625}}]}}}}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{
                RowBox[{
                  SubscriptBox["\"C\"", 
                   TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]], "[", 
                  RowBox[{
                    RowBox[{"{", "5", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{
                    TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", 
                    "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{
                    TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", 
                    "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"X\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  RowBox[{"\"Z\"", "\[CircleTimes]", 
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "4"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}], ")"}]}]], Annotation[#, 
              RightComposition[
               Subscript["C", 
                Superscript["Z", 
                 CircleTimes[3]]][{5}, {}], 
               Subscript["C", 
                CircleTimes[
                 Superscript["Z", 
                  CircleTimes[2]], "Y"]][{4}, {}], 
               Subscript["C", 
                CircleTimes[
                 Superscript["Z", 
                  CircleTimes[2]], "Y"]][{3}, {}], 
               Subscript["C", 
                CircleTimes["Z", "Y"]][{2}, {}], 
               Subscript["C", 
                CircleTimes["Z", "X"]][{1}, {}], 
               CircleTimes["Z", 
                Superscript["H", 
                 CircleTimes[4]]]], "Tooltip"]& ], 
            InterpretationBox[
             TagBox[
              
              GridBox[{{""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
             
             Grid[{{}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              Alignment -> {Left, Automatic}, Spacings -> {2, Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Directive[
                  RGBColor[0.537254, 0.537254, 0.537254], 
                  Opacity[0.3]], {{
                   LineBox[{{0.375, -5}, {0.625, -5}}]}, {
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   LineBox[{{0.375, -2}, {0.625, -2}}]}, {
                   LineBox[{{0.375, -3}, {0.625, -3}}]}, {
                   LineBox[{{0.375, -4}, {1.625, -4}}]}, {
                   LineBox[{{1.375, -2}, {1.625, -2}}]}, {
                   LineBox[{{1.375, -3}, {1.625, -3}}]}, {
                   LineBox[{{1.375, -5}, {1.625, -5}}]}, {
                   LineBox[{{2.375, -3}, {2.625, -3}}]}, {
                   LineBox[{{1.375, -1}, {2.625, -1}}]}, {
                   LineBox[{{2.375, -4}, {2.625, -4}}]}, {
                   LineBox[{{2.375, -5}, {2.625, -5}}]}, {
                   LineBox[{{2.375, -2}, {3.625, -2}}]}, {
                   LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                   LineBox[{{3.375, -5}, {3.625, -5}}]}, {
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   LineBox[{{3.375, -3}, {4.625, -3}}]}, {
                   LineBox[{{4.375, -5}, {4.625, -5}}]}, {
                   LineBox[{{5.375, -5}, {5.625, -5}}]}, {
                   LineBox[{{5.375, -1}, {5.625, -1}}]}, {
                   LineBox[{{4.375, -2}, {5.625, -2}}]}, {
                   LineBox[{{5.375, -3}, {5.625, -3}}]}, {
                   LineBox[{{3.375, -4}, {5.625, -4}}]}, {
                   LineBox[{{6.375, -1}, {6.625, -1}}]}, {
                   LineBox[{{6.375, -2}, {6.625, -2}}]}, {
                   LineBox[{{6.375, -3}, {6.625, -3}}]}, {
                   LineBox[{{6.375, -4}, {6.625, -4}}]}, {
                   LineBox[{{6.375, -5}, {6.625, -5}}]}}}, {{{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -2.375}, {1.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -3.375}, {1.375, -2.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -1.375}, {1., -1.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -2.375}, {1., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{1., -3.375}, {1., -4.90625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{0.625, -5.}, {0.90625, -5.}}], 
                    LineBox[{{1.09375, -5.}, {1.375, -5.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{1., -5.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -2.375}, {2.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -3.375}, {2.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -5.375}, {2.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -2.375}, {2., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -3.375}, {2., -3.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -4.09375}, {2., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{1.625, -4.}, {1.90625, -4.}}], 
                    LineBox[{{2.09375, -4.}, {2.375, -4.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.898039, 0.898039, 0.898039], 
                    Opacity[0.5]], 
                    Opacity[0.8]]], 
                    DiskBox[{2., -4.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -4.375}, {3.375, -3.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -5.375}, {3.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -1.375}, {3., -2.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -3.09375}, {3., -3.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -4.375}, {3., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{2.625, -3.}, {2.90625, -3.}}], 
                    LineBox[{{3.09375, -3.}, {3.375, -3.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.898039, 0.898039, 0.898039], 
                    Opacity[0.5]], 
                    Opacity[0.8]]], 
                    DiskBox[{3., -3.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -5.375}, {4.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{4., -1.375}, {4., -1.90625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{4., -2.09375}, {4., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{3.625, -2.}, {3.90625, -2.}}], 
                    LineBox[{{4.09375, -2.}, {4.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{4., -2.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -3.375}, {5.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -5.375}, {5.375, -4.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{5., -1.09375}, {5., -2.625}}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{5., -3.375}, {5., -4.625}}]}}}, {{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    LineBox[{{4.625, -1.}, {4.90625, -1.}}], 
                    LineBox[{{5.09375, -1.}, {5.375, -1.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{5., -1.}, 0.09375]}}, {}}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -5.375}, {6.375, -4.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -1.375}, {6.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -2.375}, {6.375, -1.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{5.625, -3.375}, {6.375, -2.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    RectangleBox[{5.625, -4.375}, {6.375, -3.625}, {
                    RoundingRadius -> 0.1}]}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -1.375}, {6., -1.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -2.375}, {6., -2.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -3.375}, {6., -3.625}}]}, {
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    LineBox[{{6., -4.375}, {6., -4.625}}]}}}}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{
                RowBox[{
                  SubscriptBox["\"C\"", 
                   TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]], "[", 
                  RowBox[{
                    RowBox[{"{", "5", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{
                    TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", 
                    "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{
                    TemplateBox[{"\"Z\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], "\[CircleTimes]", 
                    "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"Y\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", 
                   RowBox[{"\"Z\"", "\[CircleTimes]", "\"X\""}]], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{"(", 
                  RowBox[{"\"Z\"", "\[CircleTimes]", 
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "4"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox]}], ")"}]}]], Annotation[#, 
              RightComposition[
               Subscript["C", 
                Superscript["Z", 
                 CircleTimes[3]]][{5}, {}], 
               Subscript["C", 
                CircleTimes[
                 Superscript["Z", 
                  CircleTimes[2]], "Y"]][{4}, {}], 
               Subscript["C", 
                CircleTimes[
                 Superscript["Z", 
                  CircleTimes[2]], "Y"]][{3}, {}], 
               Subscript["C", 
                CircleTimes["Z", "Y"]][{2}, {}], 
               Subscript["C", 
                CircleTimes["Z", "X"]][{1}, {}], 
               CircleTimes["Z", 
                Superscript["H", 
                 CircleTimes[4]]]], "Tooltip"]& ], 
            GridBox[{{""}, {
               RowBox[{
                 TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["32", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {256}, 0, {
         1, {{0, 16}, {{1}, {18}, {35}, {52}, {69}, {86}, {103}, {120}, {
           137}, {154}, {171}, {188}, {205}, {222}, {239}, {256}}}, {1, 1, 1, 
          1, 1, 1, 1, 1, 1, -1, -1, 1, -1, 1, 1, -1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Subscript["C", 
            Superscript["Z", 
             CircleTimes[3]]][{5}, {}], "ParameterSpec" -> {}|>]], {{5, 1, 2, 
       3}, {5, 1, 2, 3}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {256}, 0, {
         1, {{0, 16}, {{1}, {18}, {35}, {52}, {69}, {86}, {103}, {120}, {
           138}, {153}, {172}, {187}, {206}, {221}, {240}, {255}}}, {
          1, 1, 1, 1, 1, 1, 1, 1, 
           Complex[0, -1], 
           Complex[0, 1], 
           Complex[0, 1], 
           Complex[0, -1], 
           Complex[0, 1], 
           Complex[0, -1], 
           Complex[0, -1], 
           Complex[0, 1]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Subscript["C", 
            CircleTimes[
             Superscript["Z", 
              CircleTimes[2]], "Y"]][{4}, {}], "ParameterSpec" -> {}|>]], {{4,
        2, 3, 5}, {4, 2, 3, 5}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {256}, 0, {
         1, {{0, 16}, {{1}, {18}, {35}, {52}, {69}, {86}, {103}, {120}, {
           138}, {153}, {172}, {187}, {206}, {221}, {240}, {255}}}, {
          1, 1, 1, 1, 1, 1, 1, 1, 
           Complex[0, -1], 
           Complex[0, 1], 
           Complex[0, 1], 
           Complex[0, -1], 
           Complex[0, 1], 
           Complex[0, -1], 
           Complex[0, -1], 
           Complex[0, 1]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Subscript["C", 
            CircleTimes[
             Superscript["Z", 
              CircleTimes[2]], "Y"]][{3}, {}], "ParameterSpec" -> {}|>]], {{3,
        1, 4, 5}, {3, 1, 4, 5}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {64}, 0, {
         1, {{0, 8}, {{1}, {10}, {19}, {28}, {38}, {45}, {56}, {63}}}, {
          1, 1, 1, 1, 
           Complex[0, -1], 
           Complex[0, 1], 
           Complex[0, 1], 
           Complex[0, -1]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Subscript["C", 
            CircleTimes["Z", "Y"]][{2}, {}], "ParameterSpec" -> {}|>]], {{2, 
       1, 5}, {2, 1, 5}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {64}, 0, {
         1, {{0, 8}, {{1}, {10}, {19}, {28}, {38}, {45}, {56}, {63}}}, {1, 1, 
          1, 1, 1, 1, -1, -1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Subscript["C", 
            CircleTimes["Z", "X"]][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
       3, 5}, {1, 3, 5}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {1024}, 0, {1, {{0, 512}, CompressedData["
1:eJwl1VMMGAYQANCutm3btt2uXm3btm1rtbvatm3btrXX9JJ3yX2fEtRvU6F1
wABC+ivAH7/rQAQmCEEJRnBCEJJQhCYMYQlHeBKQkEQkJglJSUZyUpCSVKQm
DWlJR3oKUJBCFKYIRSlGcUpQklKU5m/KUJZy1KM+DWhIIxrThKY0ozktaEkr
WtOGtvSjPwMYyCAGM4ShDGM4IxjJKEYzhrHMZR7zWcBCFrGYJSxlGcv5jxWs
ZBWr2cNe9rGfAxzkEIc5wlGOcZwTnOQUp7nDXe5xnwc85BGPecJTnvGcF7zk
Fa9/998ABCQQgQlCUIIRnBCEJBShCUNYwhGeBCQkEYlJQlKSkZwUpCQVqUlD
WtKRngIUpBCFKUJRilGcEpSkFKX5mzKUpRz1qE8DGtKIxjShKc1oTgta0orW
tKEt/ejPAAYyiMEMYSjDGM4IRjKK0YxhLHOZx3wWsJBFLGYJS1nGcv5jBStZ
xWr2sJd97OcABznEYY5wlGMc5wQnOcVp7nCXe9znAQ95xGOe8JRnPOcFL3nF
ayJY/ohEIjJRiEo0ohODmMQiNnGISzzik4GMZCIzWchKNrKTg5zkIjd5yEs+
8lOeClSkEv9QmSpUpRrVqUFNalGbOtSlHe3pQEc60ZkudKUb3elBT3rRmz70
ZRzjmcBEJjGZKUxlGtOZwUz+ZRazmcMa1rKO9WxgI5vYzBa2so3t7GAnu9jN
Gc5yjvNc4CKXuMwVrnKN69zgJre4zRve8o73fOAjn/jMF77yje/84Ce/Av45
+hGISCQiE4WoRCM6MYhJLGITh7jEIz4ZyEgmMpOFrGQjOznISS5yk4e85CM/
5alARSrxD5WpQlWqUZ0a1KQWtalDXdrRng50pBOd6UJXutGdHvSkF73pQ1/G
MZ4JTGQSk5nCVKYxnRnM5F9mMZs5rGEt61jPBjayic1sYSvb2M4OdrKL3Zzh
LOc4zwUuconLXOEq17jODW5yi9u84S3veM8HPvKJz3zhK9/4zg9+8ivQn4f/
P2TBA8k=
           "]}, {
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[-1, 4], 
           Rational[1, 4], 
           Rational[1, 4], 
           Rational[-1, 4]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 4} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 5} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Z", 
            Superscript["H", 
             CircleTimes[4]]], "ParameterSpec" -> {}|>]], {{5, 1, 2, 3, 4}, {
       5, 1, 2, 3, 4}}]}, "Label" -> RightComposition[
      Subscript["C", 
       Superscript["Z", 
        CircleTimes[3]]][{5}, {}], 
      Subscript["C", 
       CircleTimes[
        Superscript["Z", 
         CircleTimes[2]], "Y"]][{4}, {}], 
      Subscript["C", 
       CircleTimes[
        Superscript["Z", 
         CircleTimes[2]], "Y"]][{3}, {}], 
      Subscript["C", 
       CircleTimes["Z", "Y"]][{2}, {}], 
      Subscript["C", 
       CircleTimes["Z", "X"]][{1}, {}], 
      CircleTimes["Z", 
       Superscript["H", 
        CircleTimes[4]]]]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.87860577253224*^9},
 CellLabel->
  "Out[759]=",ExpressionUUID->"8531eaa9-269b-4b75-a9bb-1dfa5adc450b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"logicalA0", " ", "=", " ", 
   RowBox[{"HStateSubspaceProjector", "[", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
     "stateA0", ",", "stateA0", ",", "stateA0", ",", "stateA0", ",", 
      "stateA0", ",", "stateA0", ",", "stateA0", ",", "stateA0", ",", 
      "stateA0", ",", "stateA0", ",", "stateA0", ",", "stateA0", ",", 
      "stateA0", ",", "stateA0", ",", "stateA0"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"logicalA1", " ", "=", " ", 
   RowBox[{"HStateSubspaceProjector", "[", 
    RowBox[{"QuantumTensorProduct", "[", 
     RowBox[{
     "stateA1", ",", "stateA1", ",", "stateA1", ",", "stateA1", ",", 
      "stateA1", ",", "stateA1", ",", "stateA1", ",", "stateA1", ",", 
      "stateA1", ",", "stateA1", ",", "stateA1", ",", "stateA1", ",", 
      "stateA1", ",", "stateA1", ",", "stateA1"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.877563330669054*^9, 3.877563342218211*^9}, {
  3.8775634043949947`*^9, 3.877563442029158*^9}, {3.87841830462694*^9, 
  3.8784183418926277`*^9}, {3.87860578759487*^9, 3.878605788431004*^9}, {
  3.879602529173555*^9, 
  3.879602530773871*^9}},ExpressionUUID->"227a6dce-2601-40d1-a7ff-\
e6d9b9c378fd"],

Cell[BoxData[
 TemplateBox[{
  "QuantumCircuitOperator", "dim", 
   "\"Circuit expecting dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}]\\), but the state has \
dimensions \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"5\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\).\"", 2, 762, 28, 
   23357293456047264527, "Local", 
   "Wolfram`QuantumFramework`QuantumCircuitOperator"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.8786057755260153`*^9, 3.878605789228161*^9}},
 CellLabel->
  "During evaluation of \
In[762]:=",ExpressionUUID->"c2c7682d-8bba-43b4-878e-7880879c5419"],

Cell[BoxData[
 TemplateBox[{
  "QuantumCircuitOperator", "dim", 
   "\"Circuit expecting dimensions \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\"}], \\\"}\\\"}]\\), but the state has \
dimensions \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \
\\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", \
\\\"2\\\", \\\",\\\", \\\"2\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"5\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\).\"", 2, 763, 29, 
   23357293456047264527, "Local", 
   "Wolfram`QuantumFramework`QuantumCircuitOperator"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{{3.8786057755260153`*^9, 3.878605789632132*^9}},
 CellLabel->
  "During evaluation of \
In[762]:=",ExpressionUUID->"2a24c49c-2cad-4712-893e-3c36efad6016"]
}, Open  ]]
}, Open  ]],

Cell["Fault-Tolerance Threshold", "Subsection",
 CellChangeTimes->{{3.877052123135384*^9, 
  3.877052134142105*^9}},ExpressionUUID->"d70bffd7-b0ac-4f74-99cf-\
24f81cd2d227"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-Local Magic Distillation", "Section",
 CellChangeTimes->{{3.878412069683173*^9, 
  3.878412105509934*^9}},ExpressionUUID->"9ce4f5ee-869d-48f1-9534-\
acecd9410ba7"],

Cell[TextData[{
 "It was shown in [arXiv: 2106.12591] that one can distill non-locally store \
magic from many-body entangled states. Using the Bravyi-Kitaev distillation \
protocol outlined above, one can demonstrate successful T-type magic \
distillation from non-product input states. Two example states are the \
standard GHZ state with relative phase, defined ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|", 
         StyleBox["P", "TI"], 
         StyleBox["G", "TI"], "\[RightAngleBracket]", "\[Congruent]", 
         "\[Alpha]", "|", "0", 
         SuperscriptBox["\[RightAngleBracket]", 
          RowBox[{"\[CircleTimes]", 
            StyleBox["n", "TI"]}]], "+", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Phi]"}]], "\[Beta]", "|", "1", 
         SuperscriptBox["\[RightAngleBracket]", 
          RowBox[{"\[CircleTimes]", 
            StyleBox["n", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\mid PG \\rangle \\equiv \\alpha \\mid 0\\rangle^{\\otimes n} + \
e^{i\\phi}\\beta \\mid 1\\rangle^{\\otimes n}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "0f18fe96-96e7-4ea9-ac63-e74005f48505"],
 ", and a GHZ-like state in the T-basis defined, ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{"|", 
         StyleBox["G", "TI"], 
         StyleBox["T", "TI"], "\[RightAngleBracket]", "\[Congruent]", 
         "\[Alpha]", "|", 
         SubscriptBox[
          StyleBox["T", "TI"], "0"], 
         SuperscriptBox["\[RightAngleBracket]", 
          RowBox[{"\[CircleTimes]", 
            StyleBox["n", "TI"]}]], "+", 
         SuperscriptBox[
          StyleBox["e", "TI"], 
          RowBox[{
            StyleBox["i", "TI"], "\[Phi]"}]], "\[Beta]", "|", 
         SubscriptBox[
          StyleBox["T", "TI"], "1"], 
         SuperscriptBox["\[RightAngleBracket]", 
          RowBox[{"\[CircleTimes]", 
            StyleBox["n", "TI"]}]]}], TraditionalForm], "errors" -> {}, 
     "input" -> 
     "\\mid GT \\rangle \\equiv \\alpha \\mid T_0\\rangle ^{\\otimes n} + \
e^{i\\phi}\\beta \\mid T_1\\rangle^{\\otimes n}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "98411829-1ecc-4b81-a9e6-5bc46ae04b15"],
 " ."
}], "Text",
 CellChangeTimes->{{3.878412118655778*^9, 3.8784121267326393`*^9}, {
  3.87841227675546*^9, 3.8784122898040333`*^9}, {3.879376968509502*^9, 
  3.879377012395628*^9}, {3.879377054607511*^9, 3.879377056805917*^9}, {
  3.87937709026138*^9, 3.8793771450176067`*^9}, {3.879377250620614*^9, 
  3.879377281843872*^9}, {3.8793774211415367`*^9, 3.879377427571829*^9}, {
  3.879377478761478*^9, 3.879377512521451*^9}, {3.87937754556706*^9, 
  3.879377697839077*^9}, {3.87937772839074*^9, 3.879377887547443*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"d55d7f11-676f-4624-8772-b9947442ade2"],

Cell["\<\
Begin first by defining functions to construct the Phase-GHZ and GHZ-T states \
of desired dimension, weighting, and relative phase.\
\>", "Text",
 CellChangeTimes->{{3.879377899898534*^9, 3.879377937939954*^9}, {
  3.879377972307432*^9, 3.879377978441716*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"e4731407-db42-44cf-9a10-33574fd70fac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"statePG", "[", 
     RowBox[{"\[Alpha]_", ",", "\[Phi]_", ",", "n_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"\[Alpha]", "*", 
      RowBox[{"QuantumTensorProduct", "@", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}], ",", "n"}], 
        "]"}]}]}], "+", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"I", "*", "\[Phi]"}], "]"}], "*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{"\[Alpha]", "^", "2"}]}], "]"}], "*", 
      RowBox[{"QuantumTensorProduct", "@", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{
         RowBox[{"QuantumState", "[", "\"\<1\>\"", "]"}], ",", "n"}], 
        "]"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stateGT", "[", 
    RowBox[{"\[Alpha]_", ",", "\[Phi]_", ",", "n_"}], "]"}], ":=", " ", 
   RowBox[{
    RowBox[{"\[Alpha]", "*", 
     RowBox[{"QuantumTensorProduct", "@", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"stateT0", ",", "n"}], "]"}]}]}], "+", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"I", "*", "\[Phi]"}], "]"}], "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "-", 
       RowBox[{"\[Alpha]", "^", "2"}]}], "]"}], "*", 
     RowBox[{"QuantumTensorProduct", "@", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"stateT1", ",", "n"}], "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.879377050642385*^9, 3.87937705241613*^9}, {
   3.879377178497931*^9, 3.8793771859279337`*^9}, {3.8793772382228003`*^9, 
   3.879377240725789*^9}, {3.879377949540407*^9, 3.87937806453424*^9}, {
   3.879378304612526*^9, 3.879378388853603*^9}, 3.879378544555048*^9, {
   3.879378589923045*^9, 3.8793785914441233`*^9}},
 CellLabel->
  "In[776]:=",ExpressionUUID->"b6097332-0919-4e9c-a4ab-df5229cbe0a1"],

Cell["\<\
Define a function that computes T-fidelity of a given state, i.e. a \
measurement of fidelity between a chosen state and any state reachable from \
T0 through only local transformations. The user inputs a test state and set \
of unitary operations. For completeness, a full set of local transformations \
should be provided. \
\>", "Text",
 CellChangeTimes->{{3.879383376733704*^9, 3.879383430053781*^9}, {
  3.879383466099959*^9, 3.879383548960988*^9}, {3.879383620869796*^9, 
  3.8793836911948767`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a8b9410e-66c7-4959-a980-a1afd152851d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullTFidelity", "[", 
    RowBox[{"\[Rho]_", ",", "UnitaryCircuit_"}], "]"}], ":=", 
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "/@", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"QuantumDistance", "[", 
        RowBox[{
         RowBox[{"\[Rho]", "[", "\"\<Normalized\>\"", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"UnitaryCircuit", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "[", "stateT0", "]"}], "[", 
          "\"\<Normalized\>\"", "]"}], ",", "\"\<Fidelity\>\""}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"Length", "[", "UnitaryCircuit", "]"}]}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}]], "Input",ExpressionUUID->"84639ec9-36f7-4f1e-8d39-\
123a2de05792"],

Cell[TextData[{
 "We can now analyze the viability of distilling high-fidelity T-type magic \
from these states as a function of parameter \[Alpha]. These values will be \
compared to the distilled fidelity from 5 copies of a faulty-T product state \
as explored in the last section. All distilled states distilled with fidelity \
above the BK threshold are considered successful and viable for \
fault-tolerant application. Note that ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       RowBox[{
         SuperscriptBox["\[Alpha]", "2"], "\[TildeTilde]", "1", "-", 
         "\[Epsilon]"}], TraditionalForm], "errors" -> {}, "input" -> 
     "\\alpha^2 \\approx 1- \\epsilon", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "3c6fbaa1-4a98-4f8f-9d96-f7289d7363e0"],
 "."
}], "Text",
 CellChangeTimes->{{3.8793786333847857`*^9, 3.879378726924347*^9}, {
   3.879378780960306*^9, 3.879378802147068*^9}, 3.879378882176915*^9, {
   3.87938332871378*^9, 3.879383363457382*^9}, {3.879383818092943*^9, 
   3.879383850644128*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"1580900b-8c27-47b1-9d77-2931418b1133"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]Squared", " ", "=", " ", 
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", "1.", ",", 
      RowBox[{"1.", "/", "50"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotGT", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FullTFidelity", "[", 
       RowBox[{
        RowBox[{"QuantumPartialTrace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"decodingQC", "[", 
            RowBox[{"subspaceProjectorFiveQCode", "[", 
             RowBox[{"stateGT", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "0.", ",", "5"}],
               "]"}], "]"}], "]"}], "[", "\"\<Normalized\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
        "phaseRemovedCircuits"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "\[Alpha]Squared", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotPG", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FullTFidelity", "[", 
       RowBox[{
        RowBox[{"QuantumPartialTrace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"decodingQC", "[", 
            RowBox[{"subspaceProjectorFiveQCode", "[", 
             RowBox[{"statePG", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Pi", "/", "4"}], ",", "5"}], "]"}], "]"}], "]"}], 
           "[", "\"\<Normalized\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
        "phaseRemovedCircuits"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "\[Alpha]Squared", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotProduct", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"QuantumDistance", "[", 
       RowBox[{
        RowBox[{"QuantumPartialTrace", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"decodingQC", "[", 
            RowBox[{"subspaceProjectorFiveQCode", "[", 
             RowBox[{"QuantumTensorProduct", "[", 
              RowBox[{
               RowBox[{"FaultyTState", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FaultyTState", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FaultyTState", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FaultyTState", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"FaultyTState", "[", 
                RowBox[{"\[Alpha]Squared", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], "]"}], "]"}],
            "[", "\"\<Normalized\>\"", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], ",", 
        "stateT0", ",", "\"\<Fidelity\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "\[Alpha]Squared", "]"}]}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"thresholdLine", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0.8267137522242428", ",", 
      RowBox[{"Length", "[", "\[Alpha]Squared", "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]Squared", ",", "plotGT"}], "}"}], "]"}], ",", 
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]Squared", ",", "plotPG"}], "}"}], "]"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Reverse", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", "\[Alpha]Squared"}], ",", "plotProduct"}], 
           "}"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "25"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]Squared", ",", "plotProduct"}], "}"}], "]"}], "[", 
        
        RowBox[{"[", 
         RowBox[{"26", ";;", "50"}], "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Thread", "[", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]Squared", ",", "thresholdLine"}], "}"}], "]"}], ",",
        "Dashed"}], "]"}]}], "}"}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "1.0"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<T-Fidelity v.s. Error\>\"", ",", "Large"}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{
       "\"\<\!\(\*SuperscriptBox[\(\[Alpha]\), \(2\)]\)\>\"", ",", "Medium"}],
        "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<T-Fidelity\>\"", ",", "Medium"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Ket", "[", "\"\<GT(\[Alpha])\>\"", "]"}], ",", 
      RowBox[{"Ket", "[", "\"\<PG(\[Alpha])\>\"", "]"}], ",", 
      SuperscriptBox[
       RowBox[{"Ket", "[", "\"\<T(\[Alpha])\>\"", "]"}], "5"], ",", 
      "\"\<BK-Threshold\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8793789008625307`*^9, 3.8793789962143307`*^9}, {
   3.879381841379266*^9, 3.879381861818521*^9}, {3.879381913460842*^9, 
   3.87938198374028*^9}, {3.879382020927269*^9, 3.879382080769075*^9}, {
   3.879382117801374*^9, 3.879382246210808*^9}, {3.879382276648041*^9, 
   3.8793822795132113`*^9}, {3.879382374421582*^9, 3.879382475035763*^9}, 
   3.87938252988593*^9, {3.879382560354748*^9, 3.879382649001501*^9}, {
   3.8793826987152987`*^9, 3.879382929279305*^9}, {3.879383217723485*^9, 
   3.8793832735194607`*^9}, {3.879383312392672*^9, 3.879383317599431*^9}, {
   3.879383762355831*^9, 3.879383773978582*^9}, {3.87938386012868*^9, 
   3.879383867557785*^9}, {3.879383899612905*^9, 3.8793839101877117`*^9}, {
   3.8793859597635517`*^9, 3.879385961075554*^9}, {3.8793860960143337`*^9, 
   3.8793860978030863`*^9}},
 CellLabel->
  "In[1135]:=",ExpressionUUID->"d76aa55d-a5ca-4ca1-a15d-3174d7f1394f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{}, {}, {
       RGBColor[0.368417, 0.506779, 0.709798], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxVU21IU1EYXiVE+xXkMlSMwMrhn3I//JM9YIaaKG1FHzohjOpHDLWgYGpC
KYGZFmy0RRHVoEG5CvxYgyaaMDQtpUSdy7aczW1390S20D60nbv3/uiFy3vu
ufc87/s873N21NTqzqxXKBSaxMOzHL/WeDA0pDqKA0YTTncOxnP08rsN9qzW
qNYpwillBzL4dqpI37txuUA59bguhrtWHq8wPspDoP/dyNVzQAGClu8MoCMq
Lej8ELxGvoiAoxQoPZDgCiKEN4ybUg5DLeGMwn7o1Mmpq2HCf4dsb8c1a2YE
tjp+chym4YF2w7MI1ZtAY21bV5omCo0UH3C927g1/6Vc/yPa8wOr5bsFvEmw
7hycRGFhqN5jFqifKaRMpN/6/UeATio4jQyr3pVXLfOdwcaymqUnvTEEJB5e
RM3ep22bROrXB3OxP1NxTES9ROwTymbOl2bfk/Wcg6lksk/pE5Gchh+5TWui
W8WIjx8pYbu7qJShJFkA6vQtxy2XGPELIJpTtddxn0EaW+cXPExTey64GfGd
xy5Di2pkmiFJZx5DVbr5DkGebxA/NMH+2ysM23k7WQuwHWyx30n4IanHAo7M
avedWGU4d5bHV7iW3ZUNcUb6hLDn6KNlc5BBsoUjBFdF19zOt4z0WsSLtXLf
DTvDTw4XX4Rr85JzQyMj/cKwjOT1W4oY9tPcez73raSuY6RnBJXNfWOh5yJa
yTdpD+rf/62Q9RXw+kpzT9NsDGPku974AcNhbYz0juEiZRX5dhtl53++FqEn
31dTTs7jG77T/fgHwTqrOw==
        "]]}, {
       RGBColor[0.880722, 0.611041, 0.142051], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJw9U19IU3EYHUE++DRomgnpQkTzQYJFSJRnrMBGUU2Ugo2iMu1BcRUEXiHD
MBIiexhRPSRMxUF0gxKaiVkzUHFGYW6tVrps6tzu/QUySfq73/19dx9cLvf+
7ne+c8537o6zrbXnNxkMBkvm4ne97myb9M7uS6DdJNfEJA9qYq1W340UPfdD
spqOuh4q8Bd1JR1+GYXzWzd316t0PoTDHRsXjBEVD+7zGkbxTfdo+15G37+E
b/DP70gnQ8rB37zGZ7l5xvOcUf8b2MbObOyJMuSG+9z7cydwrvB2XtUaI7wp
eF/YnQ1/GXa6egLp8iCuBb3D+f90/Le4ZC7pda4z9Ge6w33v8OrusZ85cX3e
exyxhJ4FphksWs2ibLRNLnikz/8AQ/Xlx23XGcbT5ZkJc3hSca/BVq/zCePq
WrJ0zMxQqw38iLrKRG/lkq43gpNVTmV8QEVM4oCfMHIrWuI7rRLfKIa65zt+
bVFxkdNzf4Hk8B4IBXQ/v8K6O3TC3qxAbGMBZfk5/lNGhfQswEbnh8SAbL/Q
F8NTwufTXD3fMEDzhd5FHCR+Qs4imoi/0P8dEukr5nSK4hgh/cKPOIzkT1Mj
ryWUkn/Cn+WsvxzNJC8jSP4Lv1ZwhfazzuHSK+ik/Qn/EvDQfqs1wFW00P6F
3FXsonxo9LqSmKP8CH9T2XzNBHmlsJ3yJ/xWcJzymacRVGGm/Ar/VbRQvjU4
F4Od8i/28QP6//EfbHWf0Q==
        "]]}, {
       RGBColor[0.560181, 0.691569, 0.194885], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQDQNf/oPAe/sGkXXuD6um2Kv/mcr46x2Mv8Q+Wts1
r23ne/sNcq2vA3ess799zb9nWcx7+wqw/BZ7ia/B8yuuvbOfMRMEdtpXibNf
Xa72zn4HWP0+e5Vd04XP+721fxMIEjlozxSwpmBn0Bv7GrD+I/Zbtm1KyLZ4
bc9xfXGBLddxe+XtRp7P2F9BzTtp76j2+9WSUy/sNWL6D33VOGOv9TtB6n7X
c6j55+x9MmO9NgY9s18C1H198QV7q7bzUd7aT6H2XbTfraDj5i7zxN7IGAQu
20cdEOKx1X5sXwW2/4q9pK8I66zoR/ZAw4E2XLVfcXHF883rHtpzgd1z3Z7p
L/cdNpWH9kFgC2/YX4sukOre+cB+Fth9N+3/zX7TJ5DzwP4R2MBb9t3q6dsn
mz+AuveO/eZZE4JaxB/Yg51XcNeeb4uJxm+2B1D337P/5bhy/n2GB/ad/0Dx
cN8eEisP7AFlCM7b
        "]], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBGIQvYcBBB7YM0DpJQW2XNcXP7D/5bhy/n0g3+Nhlcg6
94f2fFtMNH6zPbB/E7hDrvX1Q/vNsyYEtYg/sO8/9FUjpv+Rfbd6+vbJ5g/s
jcHgsf2/2W/6BHIe2F9fDDLwsf216AKp7p0P7KtBplU9sWf6y32HTeWhvXzr
a6CJT+1XXFzxfPO6h/aHQcYdemov6SvCOiv6kX16Ggg8s486IMRjq/3Yngts
4HP73Qo6bu4yT+xBpomse25v1XY+ylv7qX0QyHmBL+x9MmO9NgY9s/8GMu7r
C3ut3wlS97ue28+aCQIv7R3Vfr9acuqFvR3YwFf2ytuNPJ+xv7KHePeV/ZZt
mxKyLV7bg53X+tqeKWBNwc6gN/aaIOM03tir7JoufN7vrf3ZMyDwxr5KnP3q
crV39oWg4Ct4ay/xNXh+xbV39qJgB76zv33Nv2dZzHt7sPN2vLOP1nbNa9v5
3h5sHFBc/c9Uxl/v3tsDAJSnxYU=
        "]]}, {
       RGBColor[0.922526, 0.385626, 0.209179], 
       PointSize[
        NCache[
         Rational[1, 72], 0.013888888888888888`]], 
       AbsoluteThickness[1.6], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBmIQDQOWc+TSCkpe2VeLrHN/WDXFHpW/BM7fIdf6OnDH
OjT5LXD+rJkgsBNN/T44/00gSOQgmv4jcD7X9cUFtlzH0cw7CedrxvQf+qpx
Bs38c3D+EqDu64svoNl3Ec43BoPLaPZfgfMPf9UA2nAVzT3X4fwgsIU30Nx3
E85/WAUy8Baae+/A+YUg5xXcRXP/PTgfEhsP0PyD4HtALEDzH4IPsi2m/xGa
fx/D+RDvPEbz/xM4Xx7kHLmnaOGB4KengcAztPB5DueDTBNZ9xwtvF7A+d9A
xn19gRZ+L+F8O7CBr9DCE8EHO6/1NVr4voHzz54BgTdo4f0WzhcFO/AdWvgj
+GDjYt6jxccHOB8A2nh10w==
        "]]}}, {{}, {}}}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {
      FormBox[
       TagBox[
        StyleBox[
        "\"\\!\\(\\*SuperscriptBox[\\(\[Alpha]\\), \\(2\\)]\\)\"", Medium, 
         StripOnInput -> False], HoldForm], TraditionalForm], 
      FormBox[
       TagBox[
        StyleBox["\"T-Fidelity\"", Medium, StripOnInput -> False], HoldForm], 
       TraditionalForm]}, AxesOrigin -> {0, 0.5000000000000011}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImageSize -> {572.5907592773438, Automatic}, 
    Method -> {
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}}, PlotLabel -> FormBox[
      StyleBox["\"T-Fidelity v.s. Error\"", Large, StripOnInput -> False], 
      TraditionalForm], PlotRange -> {{0, 1.}, {0.5, 1.}}, PlotRangeClipping -> 
    True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
       TemplateBox[{"\"GT(\[Alpha])\""}, "Ket"], 
       TemplateBox[{"\"PG(\[Alpha])\""}, "Ket"], 
       SuperscriptBox[
        TemplateBox[{"\"T(\[Alpha])\""}, "Ket"], "5"], "\"BK-Threshold\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.879382384911871*^9, 3.8793824112463093`*^9}, 
   3.8793825396355133`*^9, {3.879382572314762*^9, 3.879382658884571*^9}, 
   3.8793829405838623`*^9, 3.879383284627717*^9, 3.879383798695813*^9, 
   3.879383889633171*^9, 3.8793839456189547`*^9, 3.879385965850877*^9, 
   3.8793860217109213`*^9, 3.879386140960504*^9},
 CellLabel->
  "Out[1140]=",ExpressionUUID->"e6f954a8-f8f1-4db7-bcf7-0b135a867b9f"]
}, Open  ]],

Cell[TextData[{
 "Important to note, stabilizer measurement is only defined up to global \
phase of ",
 Cell[BoxData[
  FormBox[
   TemplateBox[<|"boxes" -> FormBox[
       SuperscriptBox[
        StyleBox["e", "TI"], 
        RowBox[{
          StyleBox["i", "TI"], "\[Pi]", "/", "4"}]], TraditionalForm], 
     "errors" -> {}, "input" -> "e^{i\\pi/4}", "state" -> "Boxes"|>,
    "TeXAssistantTemplate"], TraditionalForm]],ExpressionUUID->
  "d3ecb18f-3f71-438c-a383-7b93751fd7ec"],
 ", therefore we mod out by this overall phase when considering quantum \
circuits that produce the same measurable output state."
}], "Text",
 CellChangeTimes->{{3.879386189677022*^9, 3.879386268528912*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"7f100df8-bc67-444a-94cd-33f711d4d187"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Omega]", " ", "=", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"2", "*", "Pi", "*", 
     RowBox[{"I", "/", "8"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GlobalPhaseCongruence", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"Or", "[", 
       RowBox[{
        RowBox[{"x", "==", 
         RowBox[{"\[Omega]", "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "2"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "3"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "4"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "5"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "6"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "7"}], "*", "y"}]}], ",", 
        RowBox[{"x", "==", 
         RowBox[{
          RowBox[{
           RowBox[{"(", "\[Omega]", ")"}], "^", "8"}], "*", "y"}]}]}], "]"}], 
      ",", "True", ",", " ", "False"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GlobalPhaseCongruence", "[", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
   RowBox[{"I", "*", 
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GlobalPhaseCongruence", "[", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
    RowBox[{
     RowBox[{"-", "2"}], "*", 
     RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GlobalPhaseCongruence", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuitOperator", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
       RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}]}], "}"}], "]"}], 
    "[", "\"\<Matrix\>\"", "]"}], ",", 
   RowBox[{"I", "*", 
    RowBox[{
     RowBox[{"QuantumCircuitOperator", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
        RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}]}], "}"}], "]"}], 
     "[", "\"\<Matrix\>\"", "]"}]}]}], "]"}]}], "Input",ExpressionUUID->\
"893a834b-48be-4aa3-a6b4-b4f77bb648d3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}]}], "}"}], "]"}], "[", 
  "\"\<Diagram\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], "}"}], "]"}], "[", 
  "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.879380508785399*^9, 3.879380533694913*^9}, {
  3.879380575871559*^9, 3.879380614679948*^9}},
 CellLabel->
  "In[809]:=",ExpressionUUID->"9e2eb3fd-ab39-4549-97d9-f54dae6c7741"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}], LineBox[{{3.375, -1}, {3.625, -1}}], 
    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
    {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
     0.922526, 0.385626, 0.209179], Opacity[0.15]}], 
     RectangleBox[{0.625, -1.375}, {1.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"S\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
     0.922526, 0.385626, 0.209179], Opacity[0.15]}], 
     RectangleBox[{1.625, -1.375}, {2.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"S\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
     0.922526, 0.385626, 0.209179], Opacity[0.15]}], 
     RectangleBox[{2.625, -1.375}, {3.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"S\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
     0.922526, 0.385626, 0.209179], Opacity[0.15]}], 
     RectangleBox[{3.625, -1.375}, {4.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"S\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.879380510305954*^9, 3.879380533975627*^9}, {
  3.879380581168583*^9, 3.879380615518608*^9}},
 CellLabel->
  "Out[809]=",ExpressionUUID->"96c9f10a-5c52-4019-901d-06771c39b92c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
    {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
     RectangleBox[{0.625, -1.375}, {1.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"H\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
     RectangleBox[{1.625, -1.375}, {2.375, -0.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"H\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
       Center}]}}, InsetBox[
    StyleBox["1",
     StripOnInput->False,
     FontSize->10,
     FontSlant->Italic,
     FontColor->RGBColor[0.537254, 0.537254, 0.537254],
     Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
    ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.879380510305954*^9, 3.879380533975627*^9}, {
  3.879380581168583*^9, 3.879380615566567*^9}},
 CellLabel->
  "Out[810]=",ExpressionUUID->"8e5a533d-1a39-4608-be6b-375845a39b50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}]}], "}"}], "]"}], "==", 
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
     RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.87938062082226*^9, 3.879380632314741*^9}},
 CellLabel->
  "In[813]:=",ExpressionUUID->"fcbe8ec4-dcdc-40ed-ad97-9a77cab2ed92"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.879380624510398*^9, 3.8793806355954857`*^9}},
 CellLabel->
  "Out[813]=",ExpressionUUID->"4508bb66-25a2-4c59-a975-e8b7916c3eed"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gates", " ", "=", " ", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"QuantumOperator", "[", "\"\<S\>\"", "]"}], ",", 
            RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], "}"}], ",", 
          "k"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "5"}], "}"}]}], "]"}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "gates", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"circuits", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"QuantumCircuitOperator", "[", 
      RowBox[{"gates", "[", 
       RowBox[{"[", "l", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", 
       RowBox[{"Length", "[", "gates", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"phaseRemovedCircuits", " ", "=", " ", 
   RowBox[{"First", "/@", 
    RowBox[{"Gather", "[", 
     RowBox[{"circuits", ",", 
      RowBox[{
       RowBox[{"GlobalPhaseCongruence", "[", 
        RowBox[{
         RowBox[{"#1", "[", "\"\<Matrix\>\"", "]"}], ",", 
         RowBox[{"#2", "[", "\"\<Matrix\>\"", "]"}]}], "]"}], "&"}]}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "phaseRemovedCircuits", "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Why", " ", "does", " ", "this", " ", "not", " ", "delete", " ", 
    "equivalent", " ", "circuits", " ", "when", " ", "it", " ", "clearly", 
    " ", "recognizes", " ", "them", " ", "as", " ", 
    RowBox[{"equal", "?"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.879380695664274*^9, 3.879380760026341*^9}, {
  3.8793807917473917`*^9, 3.879381000559413*^9}, {3.879381036322157*^9, 
  3.8793810711575403`*^9}, {3.8793811831547537`*^9, 3.879381183623541*^9}, {
  3.879381221799494*^9, 3.8793812269895782`*^9}, {3.879381355120997*^9, 
  3.879381370400581*^9}, {3.87938155030021*^9, 3.879381642510499*^9}, {
  3.879381740171248*^9, 3.8793817407534733`*^9}, {3.879384205857191*^9, 
  3.87938421389284*^9}, {3.879385278840221*^9, 3.879385300803657*^9}, {
  3.8793853633869247`*^9, 3.879385392376643*^9}, {3.879385826577182*^9, 
  3.879385953350672*^9}},
 CellLabel->
  "In[1117]:=",ExpressionUUID->"51fc2ba6-e6c3-4cce-9c4e-9b50a7a046bf"],

Cell[BoxData["62"], "Output",
 CellChangeTimes->{
  3.879380709558075*^9, {3.879380753262517*^9, 3.879380760634183*^9}, {
   3.879380825860941*^9, 3.879380859828269*^9}, {3.8793809301455793`*^9, 
   3.8793810008715963`*^9}, {3.879381038962904*^9, 3.879381071853426*^9}, 
   3.879381184367311*^9, 3.879381227485118*^9, 3.8793813609237843`*^9, {
   3.879381550608342*^9, 3.879381608770275*^9}, 3.879381642752083*^9, 
   3.879381741994978*^9, {3.879384210528297*^9, 3.87938421435921*^9}, {
   3.8793852928383904`*^9, 3.879385301624638*^9}, 3.879385392866269*^9, {
   3.87938582779351*^9, 3.879385905303835*^9}, 3.8793859537159*^9},
 CellLabel->
  "Out[1118]=",ExpressionUUID->"e31d02f1-db94-4ad5-9635-d758337c45ce"],

Cell[BoxData[
 TemplateBox[{
  "Gather", "smtst", 
   "\"Application of the SameTest function yielded \
\\!\\(\\*RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GlobalPhaseCongruence\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \
\\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"#2\\\", \
\\\"[\\\", \\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \
RowBox[{InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 2], List[List[1], List[4]]], List[1, Complex[0, 1]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"S\\\", \\\
\"H\\\", \\\"S\\\", \\\"H\\\"]]]], Rule[Selectable, False], Rule[Editable, \
False], Rule[SelectWithContents, True]], \\\",\\\", \
InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"H\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"H\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 4], List[List[1], List[2], List[3], List[4]]], List[Power[2, \
Rational[-1, 2]], Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"H\\\", \\\
\"S\\\", \\\"S\\\", \\\"S\\\"]]]], Rule[Selectable, False], Rule[Editable, \
False], Rule[SelectWithContents, True]]}], \\\"]\\\"}]\\), which evaluates to \
\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.772061`, 0.92462`, 0.998703`]]], List[List[0, 0], List[2, 2]], List[0, \
1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], \
Rule[FrameLabel, List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.772061`, 0.92462`, 0.998703`]]], List[List[0, 0], List[2, 2]], List[0, \
1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], \
Rule[FrameLabel, List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[FractionBox[\\\"1\\\", \\\"2\
\\\"], \\\"+\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"1\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \
\\\"+\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \
\\\"-\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"]]], \\\"+\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Complex[Rational[1, 2], \
Rational[1, 2]], Complex[Rational[1, 2], Rational[1, 2]], Complex[Rational[1, \
2], Rational[-1, 2]], Complex[Rational[-1, 2], Rational[1, 2]]]]], \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]], \\\"\[Equal]\\\", \
InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \\\"SummaryHead\\\"], \
\\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.772061`, 0.92462`, 0.998703`]]], List[List[0, 0], List[2, 2]], List[0, \
1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], \
Rule[FrameLabel, List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.772061`, 0.92462`, 0.998703`]]], List[List[0, 0], List[2, 2]], List[0, \
1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], \
Rule[FrameLabel, List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], \
Thickness[Tiny], RGBColor[0.368417`, 0.506779`, 0.709798`]]], \
Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", \
StyleBox[PaneBox[FractionBox[SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]], SqrtBox[\\\"2\\\"]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"1\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", \
StyleBox[PaneBox[FractionBox[SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]], SqrtBox[\\\"2\\\"]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]], SqrtBox[\\\"2\\\"]]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\
\", \\\" \\\", SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]], SqrtBox[\\\"2\\\"]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Times[Power[2, \
Rational[-1, 2]], Power[E, Times[Complex[0, Rational[1, 4]], Pi]]], \
Times[Power[2, Rational[-1, 2]], Power[E, Times[Complex[0, Rational[1, 4]], \
Pi]]], Times[Complex[0, -1], Power[2, Rational[-1, 2]], Power[E, \
Times[Complex[0, Rational[1, 4]], Pi]]], Times[Complex[0, 1], Power[2, \
Rational[-1, 2]], Power[E, Times[Complex[0, Rational[1, 4]], Pi]]]]]], \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]]}], \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]\\). The SameTest function must evaluate to True or False at every \
pair of elements.\"", 2, 1120, 88, 23357293456047264527, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.879385877154826*^9, 3.8793859055830603`*^9}, 
   3.87938595399496*^9},
 CellLabel->
  "During evaluation of \
In[1117]:=",ExpressionUUID->"73e42727-ca42-4f7d-960c-2ae1e01aa360"],

Cell[BoxData[
 TemplateBox[{
  "Gather", "smtst", 
   "\"Application of the SameTest function yielded \
\\!\\(\\*RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GlobalPhaseCongruence\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \
\\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"#2\\\", \
\\\"[\\\", \\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \
RowBox[{InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"S\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 2], List[List[1], List[4]]], List[1, Complex[0, 1]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"S\\\", \\\
\"S\\\", \\\"S\\\", \\\"H\\\"]]]], Rule[Selectable, False], Rule[Editable, \
False], Rule[SelectWithContents, True]], \\\",\\\", \
InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"H\\\", \\\"S\\\", \\\"H\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]]], List[]], \
List[Rule[ImageSize, Tiny]]], RowBox[List[\\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\
\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"H\\\", \\\"S\\\", \\\"H\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 4], List[List[1], List[2], List[3], List[4]]], List[Power[2, \
Rational[-1, 2]], Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"H\\\", \\\
\"S\\\", \\\"H\\\", \\\"S\\\"]]]], Rule[Selectable, False], Rule[Editable, \
False], Rule[SelectWithContents, True]]}], \\\"]\\\"}]\\), which evaluates to \
\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.772061`, 0.92462`, \
0.998703`], List[0.235431`, 0.32765`, 0.833291`]]], List[List[0, 0], List[2, \
2]], List[0, 1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, \
False], Rule[FrameLabel, List[None, None]], Rule[FrameStyle, \
Directive[Opacity[0.5`], Thickness[Tiny], RGBColor[0.368417`, 0.506779`, \
0.709798`]]], Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.772061`, 0.92462`, \
0.998703`], List[0.235431`, 0.32765`, 0.833291`]]], List[List[0, 0], List[2, \
2]], List[0, 1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, \
False], Rule[FrameLabel, List[None, None]], Rule[FrameStyle, \
Directive[Opacity[0.5`], Thickness[Tiny], RGBColor[0.368417`, 0.506779`, \
0.709798`]]], Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[FractionBox[\\\"1\\\", \
SqrtBox[\\\"2\\\"]], Rule[ContentPadding, False], Rule[FrameMargins, 0], \
Rule[StripOnInput, True], Rule[BaselinePosition, Baseline], Rule[ImageSize, \
List[List[1, 300], Automatic]]], Rule[LineBreakWithin, False]]]]], \
List[RowBox[List[RowBox[List[\\\"{\\\", RowBox[List[\\\"1\\\", \\\",\\\", \
\\\"2\\\"]], \\\"}\\\"]], \\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[\\\
\"-\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", SqrtBox[\\\"2\\\"]]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[FractionBox[\\\"1\\\", SqrtBox[\\\"2\\\"]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[FractionBox[\\\"\\\\[ImaginaryI]\\\", SqrtBox[\
\\\"2\\\"]], Rule[ContentPadding, False], Rule[FrameMargins, 0], \
Rule[StripOnInput, True], Rule[BaselinePosition, Baseline], Rule[ImageSize, \
List[List[1, 300], Automatic]]], Rule[LineBreakWithin, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[DefaultBaseStyle, \\\"Column\\\"], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]]], \\\"Column\\\"], \\\"SummaryItem\\\"]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Power[2, Rational[-1, \
2]], Times[Complex[0, -1], Power[2, Rational[-1, 2]]], Power[2, Rational[-1, \
2]], Times[Complex[0, 1], Power[2, Rational[-1, 2]]]]]], Rule[Selectable, \
False], Rule[Editable, False], Rule[SelectWithContents, True]], \
\\\"\[Equal]\\\", InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.772061`, 0.92462`, \
0.998703`], List[0.235431`, 0.32765`, 0.833291`]]], List[List[0, 0], List[2, \
2]], List[0, 1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, \
False], Rule[FrameLabel, List[None, None]], Rule[FrameStyle, \
Directive[Opacity[0.5`], Thickness[Tiny], RGBColor[0.368417`, 0.506779`, \
0.709798`]]], Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.235431`, 0.32765`, 0.833291`]], List[List[0.772061`, 0.92462`, \
0.998703`], List[0.235431`, 0.32765`, 0.833291`]]], List[List[0, 0], List[2, \
2]], List[0, 1]], Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, \
False], Rule[FrameLabel, List[None, None]], Rule[FrameStyle, \
Directive[Opacity[0.5`], Thickness[Tiny], RGBColor[0.368417`, 0.506779`, \
0.709798`]]], Rule[FrameTicks, List[List[None, None], List[None, None]]], \
Rule[GridLinesStyle, Directive[GrayLevel[0.5`, 0.4`]]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \\\"+\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \\\")\\\"]], \\\" \\\", \
SuperscriptBox[\\\"\\\\[ExponentialE]\\\", RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]]]], Rule[ContentPadding, False], \
Rule[FrameMargins, 0], Rule[StripOnInput, True], Rule[BaselinePosition, \
Baseline], Rule[ImageSize, List[List[1, 300], Automatic]]], \
Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \\\"-\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \\\")\\\"]], \\\" \\\", \
SuperscriptBox[\\\"\\\\[ExponentialE]\\\", RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]]]], Rule[ContentPadding, False], \
Rule[FrameMargins, 0], Rule[StripOnInput, True], Rule[BaselinePosition, \
Baseline], Rule[ImageSize, List[List[1, 300], Automatic]]], \
Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \\\"+\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \\\")\\\"]], \\\" \\\", \
SuperscriptBox[\\\"\\\\[ExponentialE]\\\", RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]]]], Rule[ContentPadding, False], \
Rule[FrameMargins, 0], Rule[StripOnInput, True], Rule[BaselinePosition, \
Baseline], Rule[ImageSize, List[List[1, 300], Automatic]]], \
Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"(\\\", \
RowBox[List[RowBox[List[\\\"-\\\", FractionBox[\\\"1\\\", \\\"2\\\"]]], \\\"+\
\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \\\")\\\"]], \\\" \
\\\", SuperscriptBox[\\\"\\\\[ExponentialE]\\\", RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]]]], Rule[ContentPadding, False], \
Rule[FrameMargins, 0], Rule[StripOnInput, True], Rule[BaselinePosition, \
Baseline], Rule[ImageSize, List[List[1, 300], Automatic]]], \
Rule[LineBreakWithin, False]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Times[Complex[Rational[1, \
2], Rational[1, 2]], Power[E, Times[Complex[0, Rational[-1, 4]], Pi]]], \
Times[Complex[Rational[1, 2], Rational[-1, 2]], Power[E, Times[Complex[0, \
Rational[-1, 4]], Pi]]], Times[Complex[Rational[1, 2], Rational[1, 2]], \
Power[E, Times[Complex[0, Rational[-1, 4]], Pi]]], Times[Complex[Rational[-1, \
2], Rational[1, 2]], Power[E, Times[Complex[0, Rational[-1, 4]], Pi]]]]]], \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]]}], \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]\\). The SameTest function must evaluate to True or False at every \
pair of elements.\"", 2, 1120, 89, 23357293456047264527, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.879385877154826*^9, 3.8793859055830603`*^9}, 
   3.879385954102552*^9},
 CellLabel->
  "During evaluation of \
In[1117]:=",ExpressionUUID->"878cbebf-150e-49a0-9904-92bcffb711b2"],

Cell[BoxData[
 TemplateBox[{
  "Gather", "smtst", 
   "\"Application of the SameTest function yielded \
\\!\\(\\*RowBox[{RowBox[{\\\"(\\\", RowBox[{RowBox[{\\\"GlobalPhaseCongruence\
\\\", \\\"[\\\", RowBox[{RowBox[{\\\"#1\\\", \\\"[\\\", \
\\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}], \\\",\\\", RowBox[{\\\"#2\\\", \
\\\"[\\\", \\\"\\\\\\\"Matrix\\\\\\\"\\\", \\\"]\\\"}]}], \\\"]\\\"}], \
\\\"&\\\"}], \\\")\\\"}], \\\"[\\\", \
RowBox[{InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]], \
List[LineBox[List[List[5.375`, -1], List[5.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[4.625`, -1.375`], List[5.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]]], List[]], List[Rule[ImageSize, Tiny]]], \
RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]], \
List[LineBox[List[List[5.375`, -1], List[5.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.368417`, 0.506779`, 0.709798`]], \
FaceForm[Directive[RGBColor[0.368417`, 0.506779`, 0.709798`], \
Opacity[0.15`]]], RectangleBox[List[4.625`, -1.375`], List[5.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]]], List[]], List[Rule[ImageSize, Tiny]]], \
RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"H\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"5\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 2], List[List[1], List[4]]], List[1, Complex[0, 1]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"S\\\", \\\
\"S\\\", \\\"H\\\", \\\"S\\\", \\\"H\\\"]]]], Rule[Selectable, False], \
Rule[Editable, False], Rule[SelectWithContents, True]], \\\",\\\", \
InterpretationBox[RowBox[{TagBox[\\\"QuantumCircuitOperator\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]], \
List[LineBox[List[List[5.375`, -1], List[5.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[4.625`, -1.375`], List[5.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]]], List[]], List[Rule[ImageSize, Tiny]]], \
RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], InterpretationBox[TagBox[GridBox[List[List[\\\"\\\"]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]], \\\"Grid\\\
\"], Grid[List[List[]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
False], Rule[NumberMarks, False], Rule[PrintPrecision, 3], \
Rule[ShowSyntaxStyles, False]]], Rule[Alignment, List[Left, Automatic]], \
Rule[Spacings, List[2, Automatic]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Top]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\
\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[BaselinePosition, List[1, 1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
TagBox[TooltipBox[GraphicsBox[List[List[Directive[RGBColor[0.537254`, \
0.537254`, 0.537254`], Opacity[0.3`]], List[List[LineBox[List[List[0.375`, \
-1], List[0.625`, -1]]]], List[LineBox[List[List[1.375`, -1], List[1.625`, \
-1]]]], List[LineBox[List[List[2.375`, -1], List[2.625`, -1]]]], \
List[LineBox[List[List[3.375`, -1], List[3.625`, -1]]]], \
List[LineBox[List[List[4.375`, -1], List[4.625`, -1]]]], \
List[LineBox[List[List[5.375`, -1], List[5.625`, -1]]]]]], \
List[List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[0.625`, -1.375`], List[1.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.368417`, \
0.506779`, 0.709798`]], FaceForm[Directive[RGBColor[0.368417`, 0.506779`, \
0.709798`], Opacity[0.15`]]], RectangleBox[List[1.625`, -1.375`], \
List[2.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[2.625`, -1.375`], List[3.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]], List[EdgeForm[RGBColor[0.922526`, \
0.385626`, 0.209179`]], FaceForm[Directive[RGBColor[0.922526`, 0.385626`, \
0.209179`], Opacity[0.15`]]], RectangleBox[List[3.625`, -1.375`], \
List[4.375`, -0.625`], List[Rule[RoundingRadius, 0.1`]]]], \
List[EdgeForm[RGBColor[0.922526`, 0.385626`, 0.209179`]], \
FaceForm[Directive[RGBColor[0.922526`, 0.385626`, 0.209179`], \
Opacity[0.15`]]], RectangleBox[List[4.625`, -1.375`], List[5.375`, -0.625`], \
List[Rule[RoundingRadius, 0.1`]]]]], List[]], List[Rule[ImageSize, Tiny]]], \
RowBox[List[\\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"H\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\", \
\\\"/*\\\", \\\"\\\\\\\"S\\\\\\\"\\\"]]], Function[Annotation[Slot[1], \
RightComposition[\\\"S\\\", \\\"H\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"], \
\\\"Tooltip\\\"]]], GridBox[List[List[\\\"\\\"], List[RowBox[List[TagBox[\\\"\
\\\\\\\"Gates: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"5\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimension: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"2\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Order: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[RowBox[List[\\\"{\\\", \\\"1\\\", \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Target: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", \\\"}\\\"]], \\\"SummaryItem\\\"]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\
\\\"Columns\\\", List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, False], Rule[NumberMarks, \
False], Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], QuantumCircuitOperator[Association[Rule[\\\"Elements\\\", \
List[QuantumOperator[QuantumState[SparseArray[Automatic, List[4], 0, List[1, \
List[List[0, 2], List[List[1], List[4]]], List[1, Complex[0, 1]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 4], List[List[1], List[2], List[3], \
List[4]]], List[Power[2, Rational[-1, 2]], Power[2, Rational[-1, 2]], \
Power[2, Rational[-1, 2]], Times[-1, Power[2, Rational[-1, 2]]]]]], \
QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"H\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]], QuantumOperator[QuantumState[SparseArray[Automatic, \
List[4], 0, List[1, List[List[0, 2], List[List[1], List[4]]], List[1, \
Complex[0, 1]]]], QuantumBasis[Association[Rule[\\\"Input\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", True]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Output\\\", \
QuditBasis[Association[Rule[List[QuditName[0, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[1]]], \
List[1]]]], Rule[List[QuditName[1, Rule[\\\"Dual\\\", False]], 1], \
SparseArray[Automatic, List[2], 0, List[1, List[List[0, 1], List[List[2]]], \
List[1]]]]]]], Rule[\\\"Picture\\\", \\\"Schr\\\\[ODoubleDot]dinger\\\"], \
Rule[\\\"Label\\\", \\\"S\\\"], Rule[\\\"ParameterSpec\\\", List[]]]]], \
List[List[1], List[1]]]]], Rule[\\\"Label\\\", RightComposition[\\\"S\\\", \\\
\"H\\\", \\\"S\\\", \\\"S\\\", \\\"S\\\"]]]], Rule[Selectable, False], \
Rule[Editable, False], Rule[SelectWithContents, True]]}], \\\"]\\\"}]\\), \
which evaluates to \\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{RowBox[{InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \
\\\"SummaryHead\\\"], \\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]]], List[List[0, 0], List[2, 2]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]]], List[List[0, 0], List[2, 2]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[FractionBox[\\\"1\\\", \\\"2\
\\\"], \\\"+\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"1\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"]]], \\\"+\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[FractionBox[\\\"1\\\", \\\"2\\\"], \
\\\"-\\\", FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[RowBox[List[\\\"-\\\", \
FractionBox[\\\"1\\\", \\\"2\\\"]]], \\\"-\\\", \
FractionBox[\\\"\\\\[ImaginaryI]\\\", \\\"2\\\"]]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Complex[Rational[1, 2], \
Rational[1, 2]], Complex[Rational[-1, 2], Rational[1, 2]], \
Complex[Rational[1, 2], Rational[-1, 2]], Complex[Rational[-1, 2], \
Rational[-1, 2]]]]], Rule[Selectable, False], Rule[Editable, False], \
Rule[SelectWithContents, True]], \\\"\[Equal]\\\", \
InterpretationBox[RowBox[{TagBox[\\\"SparseArray\\\", \\\"SummaryHead\\\"], \
\\\"[\\\", DynamicModuleBox[{Typeset`open$$ = False, \
Set[Typeset`embedState$$, \\\"Ready\\\"]}, \
TemplateBox[List[PaneSelectorBox[List[Rule[False, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxOpener\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, True]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]]], List[List[0, 0], List[2, 2]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]], Rule[True, \
GridBox[List[List[PaneBox[ButtonBox[DynamicBox[FEPrivate`FrontEndResource[\\\"\
FEBitmaps\\\", \\\"SummaryBoxCloser\\\"]], RuleDelayed[ButtonFunction, \
Set[Typeset`open$$, False]], Rule[Appearance, None], Rule[BaseStyle, List[]], \
Rule[Evaluator, Automatic], Rule[Method, \\\"Preemptive\\\"]], \
Rule[Alignment, List[Center, Center]], Rule[ImageSize, \
Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]]], \
GraphicsBox[RasterBox[List[List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]], List[List[0.772061`, 0.92462`, 0.998703`], \
List[0.16791`, 0.`, 0.301671`]]], List[List[0, 0], List[2, 2]], List[0, 1]], \
Rule[AspectRatio, 1], Rule[Axes, False], Rule[Frame, False], Rule[FrameLabel, \
List[None, None]], Rule[FrameStyle, Directive[Opacity[0.5`], Thickness[Tiny], \
RGBColor[0.368417`, 0.506779`, 0.709798`]]], Rule[FrameTicks, List[List[None, \
None], List[None, None]]], Rule[GridLinesStyle, Directive[GrayLevel[0.5`, \
0.4`]]], Rule[ImageSize, Dynamic[List[Automatic, Times[3.5`, \
Times[CurrentValue[\\\"FontCapHeight\\\"], \
Power[AbsoluteCurrentValue[Magnification], -1]]]]]], Rule[Method, \
List[Rule[\\\"AxisPadding\\\", Scaled[0.02`]], \
Rule[\\\"DefaultBoundaryStyle\\\", Automatic], \
Rule[\\\"DefaultGraphicsInteraction\\\", List[Rule[\\\"Version\\\", 1.2`], \
Rule[\\\"TrackMousePosition\\\", List[True, False]], Rule[\\\"Effects\\\", \
List[Rule[\\\"Highlight\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"HighlightPoint\\\", List[Rule[\\\"ratio\\\", 2]]], \
Rule[\\\"Droplines\\\", List[Rule[\\\"freeformCursorMode\\\", True], \
Rule[\\\"placement\\\", List[Rule[\\\"x\\\", \\\"All\\\"], Rule[\\\"y\\\", \\\
\"None\\\"]]]]]]]]], Rule[\\\"DefaultPlotStyle\\\", Automatic], \
Rule[\\\"DomainPadding\\\", Scaled[0.02`]], Rule[\\\"RangePadding\\\", \
Scaled[0.05`]]]]], GridBox[List[List[RowBox[List[TagBox[\\\"\\\\\\\"Specified \
elements: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"4\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Dimensions: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[RowBox[List[\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \
\\\"}\\\"]], \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Default: \\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", \
TagBox[\\\"0\\\", \\\"SummaryItem\\\"]]]], List[RowBox[List[TagBox[\\\"\\\\\\\
\"Density: \\\\\\\"\\\", \\\"SummaryItemAnnotation\\\"], \
\\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"1.`\\\", \\\"SummaryItem\\\"]]]], \
List[RowBox[List[TagBox[\\\"\\\\\\\"Elements:\\\\\\\"\\\", \
\\\"SummaryItemAnnotation\\\"], \\\"\\\\[InvisibleSpace]\\\", TagBox[\\\"\\\\\
\\\"\\\\\\\"\\\", \\\"SummaryItem\\\"]]]], \
List[TagBox[TagBox[GridBox[List[List[RowBox[List[RowBox[List[\\\"{\\\", \
RowBox[List[\\\"1\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \
\\\"\\\\[Rule]\\\", \
StyleBox[PaneBox[FractionBox[SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]], SqrtBox[\\\"2\\\"]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"1\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\
\", \\\" \\\", SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]], SqrtBox[\\\"2\\\"]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"1\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[\\\"-\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]]]], SqrtBox[\\\"2\\\"]]]], \
Rule[ContentPadding, False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]], List[RowBox[List[RowBox[List[\
\\\"{\\\", RowBox[List[\\\"2\\\", \\\",\\\", \\\"2\\\"]], \\\"}\\\"]], \\\"\\\
\\[Rule]\\\", StyleBox[PaneBox[RowBox[List[\\\"-\\\", \
FractionBox[SuperscriptBox[\\\"\\\\[ExponentialE]\\\", \
FractionBox[RowBox[List[\\\"\\\\[ImaginaryI]\\\", \\\" \\\", \
\\\"\\\\[Pi]\\\"]], \\\"4\\\"]], SqrtBox[\\\"2\\\"]]]], Rule[ContentPadding, \
False], Rule[FrameMargins, 0], Rule[StripOnInput, True], \
Rule[BaselinePosition, Baseline], Rule[ImageSize, List[List[1, 300], \
Automatic]]], Rule[LineBreakWithin, False]]]]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[DefaultBaseStyle, \
\\\"Column\\\"], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]]], \
\\\"Column\\\"], \\\"SummaryItem\\\"]]], Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, False], Rule[NumberMarks, False], \
Rule[PrintPrecision, 3], Rule[ShowSyntaxStyles, False]]]]]], \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]], \
Rule[\\\"Rows\\\", List[List[Top]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[BaselinePosition, List[1, \
1]]]]], Dynamic[Typeset`open$$], Rule[ImageSize, Automatic]]], \
\\\"SummaryPanel\\\"], RuleDelayed[DynamicModuleValues, List[]]], \
\\\"]\\\"}], SparseArray[Automatic, List[2, 2], 0, List[1, List[List[0, 2, \
4], List[List[1], List[2], List[1], List[2]]], List[Times[Power[2, \
Rational[-1, 2]], Power[E, Times[Complex[0, Rational[1, 4]], Pi]]], \
Times[Complex[0, 1], Power[2, Rational[-1, 2]], Power[E, Times[Complex[0, \
Rational[1, 4]], Pi]]], Times[Complex[0, -1], Power[2, Rational[-1, 2]], \
Power[E, Times[Complex[0, Rational[1, 4]], Pi]]], Times[-1, Power[2, \
Rational[-1, 2]], Power[E, Times[Complex[0, Rational[1, 4]], Pi]]]]]], \
Rule[Selectable, False], Rule[Editable, False], Rule[SelectWithContents, \
True]]}], \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\"}], \
\\\"]\\\"}]\\). The SameTest function must evaluate to True or False at every \
pair of elements.\"", 2, 1120, 90, 23357293456047264527, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.879385877154826*^9, 3.8793859055830603`*^9}, 
   3.8793859543654737`*^9},
 CellLabel->
  "During evaluation of \
In[1117]:=",ExpressionUUID->"1274361c-3414-4dcc-bcc1-f71852e05538"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Gather\\\", \\\"::\\\", \
\\\"smtst\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 1120, 91, 23357293456047264527, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.879385877154826*^9, 3.8793859055830603`*^9}, 
   3.8793859544583*^9},
 CellLabel->
  "During evaluation of \
In[1117]:=",ExpressionUUID->"cb0dbb01-81ee-46ff-9c56-9d2de776c61d"],

Cell[BoxData["28"], "Output",
 CellChangeTimes->{
  3.879380709558075*^9, {3.879380753262517*^9, 3.879380760634183*^9}, {
   3.879380825860941*^9, 3.879380859828269*^9}, {3.8793809301455793`*^9, 
   3.8793810008715963`*^9}, {3.879381038962904*^9, 3.879381071853426*^9}, 
   3.879381184367311*^9, 3.879381227485118*^9, 3.8793813609237843`*^9, {
   3.879381550608342*^9, 3.879381608770275*^9}, 3.879381642752083*^9, 
   3.879381741994978*^9, {3.879384210528297*^9, 3.87938421435921*^9}, {
   3.8793852928383904`*^9, 3.879385301624638*^9}, 3.879385392866269*^9, {
   3.87938582779351*^9, 3.879385905303835*^9}, 3.8793859547579*^9},
 CellLabel->
  "Out[1121]=",ExpressionUUID->"22334e22-7988-45dd-a1d8-231c5f07cf2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["phaseRemovedCircuits"], "Input",
 CellLabel->
  "In[1128]:=",ExpressionUUID->"78bafd6d-bfb1-43aa-b983-54af14c2dd98"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                "\"S\"", LabelStyle -> "TextStyling"], 
               Annotation[#, "S", "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                "\"S\"", LabelStyle -> "TextStyling"], 
               Annotation[#, "S", "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> "S"|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                "\"H\"", LabelStyle -> "TextStyling"], 
               Annotation[#, "H", "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                "\"H\"", LabelStyle -> "TextStyling"], 
               Annotation[#, "H", "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> "H"|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\""}]], Annotation[#, 
                RightComposition["S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\""}]], Annotation[#, 
                RightComposition["S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"H\""}]], Annotation[#, 
                RightComposition["S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"H\""}]], Annotation[#, 
                RightComposition["S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\""}]], Annotation[#, 
                RightComposition["H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\""}]], Annotation[#, 
                RightComposition["H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"H\""}]], Annotation[#, 
                RightComposition["H", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"H\""}]], Annotation[#, 
                RightComposition["H", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["S", "H", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
               Annotation[#, 
                RightComposition["H", "S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "S", "S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "S", "S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "S", "H", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "S", "H", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "H", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["S", "S", "H", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["S", "S", "H", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "S", "H", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["S", "H", "S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["S", "H", "S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["H", "S", "S", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["H", "S", "S", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "S", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["H", "S", "S", "H", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["H", "S", "S", "H", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "S", "H", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["H", "S", "H", "S", "S"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"S\""}]], Annotation[#, 
                RightComposition["H", "S", "H", "S", "S"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "H", "S", "S"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumCircuitOperator",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["H", "S", "H", "S", "H"], "Tooltip"]& ], 
              InterpretationBox[
               TagBox[
                
                GridBox[{{""}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
               
               
               Grid[{{}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                Alignment -> {Left, Automatic}, 
                Spacings -> {2, Automatic}]]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[{{
                   Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                    LineBox[{{5.375, -1}, {5.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{4.625, -1.375}, {5.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                
                RowBox[{
                 "\"H\"", "/*", "\"S\"", "/*", "\"H\"", "/*", "\"S\"", "/*", 
                  "\"H\""}]], Annotation[#, 
                RightComposition["H", "S", "H", "S", "H"], "Tooltip"]& ], 
              GridBox[{{""}, {
                 RowBox[{
                   TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["5", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
             Complex[0, 1]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], 
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {4}, 0, {
           1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
            "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
      RightComposition["H", "S", "H", "S", "H"]|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.879385972413867*^9},
 CellLabel->
  "Out[1128]=",ExpressionUUID->"d42d76fb-ca20-468c-a0d5-b86dba462c3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gather", "[", 
  RowBox[{
   RowBox[{"circuits", "[", 
    RowBox[{"[", 
     RowBox[{";;", "15"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{"GlobalPhaseCongruence", "[", 
     RowBox[{
      RowBox[{"#1", "[", "\"\<Matrix\>\"", "]"}], ",", 
      RowBox[{"#2", "[", "\"\<Matrix\>\"", "]"}]}], "]"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8793854095304117`*^9, 3.879385412039824*^9}, {
  3.879385481321857*^9, 3.8793855103325644`*^9}, {3.879385557606678*^9, 
  3.879385590715372*^9}, {3.8793856544328003`*^9, 3.879385656407288*^9}, {
  3.8793857972581472`*^9, 3.8793858046047792`*^9}},
 CellLabel->
  "In[1088]:=",ExpressionUUID->"d121b8d5-70b7-4386-9981-d8a123b58bed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  "\"S\"", LabelStyle -> "TextStyling"], 
                 Annotation[#, "S", "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  "\"S\"", LabelStyle -> "TextStyling"], 
                 Annotation[#, "S", "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> "S"|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"H\""}]], 
                 Annotation[#, 
                  RightComposition["S", "H", "H"], "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"H\""}]], 
                 Annotation[#, 
                  RightComposition["S", "H", "H"], "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
        RightComposition["S", "H", "H"]|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\"", "/*", "\"S\""}]], 
                 Annotation[#, 
                  RightComposition["H", "H", "S"], "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\"", "/*", "\"S\""}]], 
                 Annotation[#, 
                  RightComposition["H", "H", "S"], "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
        RightComposition["H", "H", "S"]|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  "\"H\"", LabelStyle -> "TextStyling"], 
                 Annotation[#, "H", "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  "\"H\"", LabelStyle -> "TextStyling"], 
                 Annotation[#, "H", "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> "H"|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\"", "/*", "\"H\""}]], 
                 Annotation[#, 
                  RightComposition["H", "H", "H"], "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\"", "/*", "\"H\""}]], 
                 Annotation[#, 
                  RightComposition["H", "H", "H"], "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
        RightComposition["H", "H", "H"]|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\""}]], Annotation[#, 
                 RightComposition["S", "S"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\""}]], Annotation[#, 
                 RightComposition["S", "S"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["S", "S"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"H\""}]], Annotation[#, 
                 RightComposition["S", "H"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"H\""}]], Annotation[#, 
                 RightComposition["S", "H"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["S", "H"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\""}]], Annotation[#, 
                 RightComposition["H", "S"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\""}]], Annotation[#, 
                 RightComposition["H", "S"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["H", "S"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\""}]], Annotation[#, 
                  RightComposition["H", "H"], "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  RowBox[{"\"H\"", "/*", "\"H\""}]], Annotation[#, 
                  RightComposition["H", "H"], "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[
            Automatic, {4}, 0, {
             1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
        RightComposition["H", "H"]|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], ",", 
     InterpretationBox[
      RowBox[{
       TagBox["QuantumCircuitOperator",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxOpener"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  
                  RowBox[{
                   "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                 Annotation[#, 
                  RightComposition["S", "S", "S", "S"], "Tooltip"]& ], 
                InterpretationBox[
                 TagBox[
                  
                  GridBox[{{""}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                 
                 Grid[{{}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                  Alignment -> {Left, Automatic}, 
                  Spacings -> {2, Automatic}]]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SummaryBoxCloser"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                  "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                TagBox[
                 TooltipBox[
                  GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                    LineBox[{{4.375, -1}, {4.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{3.625, -1.375}, {4.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                  
                  RowBox[{
                   "\"S\"", "/*", "\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                 Annotation[#, 
                  RightComposition["S", "S", "S", "S"], "Tooltip"]& ], 
                GridBox[{{""}, {
                   RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["4", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}], 
          Wolfram`QuantumFramework`QuantumOperator[
           Wolfram`QuantumFramework`QuantumState[
            SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
               Complex[0, 1]}}], 
            
            Wolfram`QuantumFramework`QuantumBasis[<|
             "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                   Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                   Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                 SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>],
               "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
              "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
        RightComposition["S", "S", "S", "S"]|>],
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["S", "S", "S"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["S", "S", "S"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["S", "S", "S"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
                Annotation[#, 
                 RightComposition["S", "S", "H"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\""}]], 
                Annotation[#, 
                 RightComposition["S", "S", "H"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["S", "S", "H"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["S", "H", "S"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"S\"", "/*", "\"H\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["S", "H", "S"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["S", "H", "S"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["H", "S", "S"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"S\""}]], 
                Annotation[#, 
                 RightComposition["H", "S", "S"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["H", "S", "S"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}], ",", 
   RowBox[{"{", 
    InterpretationBox[
     RowBox[{
      TagBox["QuantumCircuitOperator",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
                Annotation[#, 
                 RightComposition["H", "S", "H"], "Tooltip"]& ], 
               InterpretationBox[
                TagBox[
                 
                 GridBox[{{""}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                  BaseStyle -> {
                   ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
                
                Grid[{{}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                 Alignment -> {Left, Automatic}, 
                 Spacings -> {2, Automatic}]]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               TagBox[
                TooltipBox[
                 GraphicsBox[{{
                    Directive[
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], {{
                    LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                    LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                    LineBox[{{2.375, -1}, {2.625, -1}}]}, {
                    LineBox[{{3.375, -1}, {3.625, -1}}]}}}, {{
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.922526, 0.385626, 0.209179]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{1.625, -1.375}, {2.375, -0.625}, {
                    RoundingRadius -> 0.1}]}, {
                    EdgeForm[
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, {
                    RoundingRadius -> 0.1}]}}, {}}, {ImageSize -> Tiny}], 
                 RowBox[{"\"H\"", "/*", "\"S\"", "/*", "\"H\""}]], 
                Annotation[#, 
                 RightComposition["H", "S", "H"], "Tooltip"]& ], 
               GridBox[{{""}, {
                  RowBox[{
                    TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["2", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
              Complex[0, 1]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}], 
         Wolfram`QuantumFramework`QuantumOperator[
          Wolfram`QuantumFramework`QuantumState[
           SparseArray[
           Automatic, {4}, 0, {
            1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2], 2^
              Rational[-1, 2], -2^Rational[-1, 2]}}], 
           
           Wolfram`QuantumFramework`QuantumBasis[<|
            "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                  Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                  Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
                SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
             "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
             "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
       RightComposition["H", "S", "H"]|>],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.879385589607099*^9, 3.879385591244533*^9}, 
   3.879385666413465*^9, 3.879385805654904*^9},
 CellLabel->
  "Out[1088]=",ExpressionUUID->"f10fa81f-3c75-403c-9d39-632fceaeabcc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1410, 774},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f3ab296d-e3ec-4154-a36d-7c433205e799"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 247, 4, 98, "Title",ExpressionUUID->"bcf5368f-dba5-41cd-991d-6270cf33853a"],
Cell[830, 28, 163, 3, 31, "Author",ExpressionUUID->"5cab2992-d4ce-421a-bba7-70a9cc553603"],
Cell[CellGroupData[{
Cell[1018, 35, 169, 3, 54, "Subsection",ExpressionUUID->"729758b4-613f-4c8b-9a02-cbc988c0594e"],
Cell[CellGroupData[{
Cell[1212, 42, 500, 9, 52, "Input",ExpressionUUID->"b16058e1-df1b-41c7-bb67-0cf89f33fafa"],
Cell[1715, 53, 23808, 421, 61, "Output",ExpressionUUID->"efb18012-227f-43e6-bd9e-6bd30a5aa1f7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25572, 480, 159, 3, 67, "Section",ExpressionUUID->"0573a1d1-8b5e-4850-8aae-9f9d8670adce"],
Cell[CellGroupData[{
Cell[25756, 487, 530, 17, 30, "Input",ExpressionUUID->"b802b5ca-a1b7-4d60-bb51-81cdba840169"],
Cell[26289, 506, 693, 21, 97, "Output",ExpressionUUID->"8ae22341-08d8-40b8-a123-3a29f6e11649"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27019, 532, 484, 12, 30, "Input",ExpressionUUID->"4d20c1ad-e33f-461b-9dd5-622d2e9b4c9d"],
Cell[27506, 546, 794, 25, 97, "Output",ExpressionUUID->"7b63ce6a-0f37-4e85-b34e-2f069f93c316"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28337, 576, 10962, 190, 58, "Input",ExpressionUUID->"a271fca4-8ee9-4cf8-8124-f75de943e24c"],
Cell[39302, 768, 708, 22, 63, "Output",ExpressionUUID->"21bc087c-6830-4831-a12c-8e97f8608eb8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40047, 795, 687, 16, 52, "Input",ExpressionUUID->"2aeb8c11-10d5-4f87-9446-27b17dfabd51"],
Cell[40737, 813, 1719, 38, 142, "Output",ExpressionUUID->"3c807e26-d635-4124-9732-fa97c43cf460"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42493, 856, 290, 6, 30, "Input",ExpressionUUID->"4b970064-76ca-4c45-ba2a-f77d47d79820"],
Cell[42786, 864, 729, 23, 63, "Output",ExpressionUUID->"f08de6e8-29f2-450d-9f27-80a4998cf512"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43552, 892, 430, 11, 30, "Input",ExpressionUUID->"2a1a0d77-9576-4dad-a9c6-25dd7417c706"],
Cell[43985, 905, 300, 6, 34, "Output",ExpressionUUID->"58e820ba-fc4a-4d28-8652-514c79f42015"]
}, Open  ]],
Cell[44300, 914, 5408, 116, 405, "Input",ExpressionUUID->"8068ea0e-55f6-4cc4-9859-854cc40657ee"],
Cell[CellGroupData[{
Cell[49733, 1034, 1127, 28, 73, "Input",ExpressionUUID->"0b76e6ba-092f-4804-bf9a-81b376f780fd"],
Cell[50863, 1064, 8026, 155, 232, "Output",ExpressionUUID->"72b1edb2-0da6-45ca-8667-2950782fd736"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58926, 1224, 800, 17, 52, "Input",ExpressionUUID->"ba101466-12a9-45f3-a10d-bb63fdadafbe"],
Cell[59729, 1243, 1746, 48, 38, "Output",ExpressionUUID->"ff355bca-fa78-489a-8e94-f27ad93ec3b5"]
}, Open  ]],
Cell[61490, 1294, 524, 12, 52, "Input",ExpressionUUID->"65e5447d-885f-4016-8540-ae6d7a439922"],
Cell[CellGroupData[{
Cell[62039, 1310, 1921, 48, 157, "Input",ExpressionUUID->"442f2278-9cde-464e-bbde-d3981ddd315d"],
Cell[63963, 1360, 295, 5, 34, "Output",ExpressionUUID->"f1cbee4d-52d0-47f8-b682-329078f131dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64295, 1370, 523, 10, 30, "Input",ExpressionUUID->"48f226cc-a261-4512-9b4f-a367b28e7bef"],
Cell[64821, 1382, 274, 5, 34, "Output",ExpressionUUID->"60f111eb-85e6-4260-ae1f-fccf8153aa25"]
}, Open  ]],
Cell[65110, 1390, 1051, 28, 73, "Input",ExpressionUUID->"650feef7-d1f5-41f9-b7bc-55060a95448d"]
}, Closed]],
Cell[CellGroupData[{
Cell[66198, 1423, 171, 3, 58, "Chapter",ExpressionUUID->"f7241072-86ee-4694-b72b-482bf2df8183"],
Cell[66372, 1428, 299, 6, 51, "Text",ExpressionUUID->"f5f4be5d-2230-4452-9533-4aa1ee65c64d"],
Cell[CellGroupData[{
Cell[66696, 1438, 157, 3, 67, "Section",ExpressionUUID->"878fb098-a440-4b86-9c25-4da02b82ecae"],
Cell[CellGroupData[{
Cell[66878, 1445, 158, 3, 54, "Subsection",ExpressionUUID->"920b7748-d3f1-4780-ac3b-89a5d457ce74"],
Cell[67039, 1450, 731, 12, 74, "Text",ExpressionUUID->"790b0937-076a-4485-be76-9c31a42a6922"],
Cell[CellGroupData[{
Cell[67795, 1466, 1495, 35, 178, "Input",ExpressionUUID->"b2309b7d-7977-4ebb-8a88-4e61e51f85d0"],
Cell[69293, 1503, 14225, 306, 409, "Output",ExpressionUUID->"21f30813-31e2-4166-9c3c-2d91cbb727b6"]
}, Open  ]],
Cell[83533, 1812, 1388, 27, 76, "Text",ExpressionUUID->"b9b4bdb7-42a2-453c-9537-e5efd836f80c"],
Cell[CellGroupData[{
Cell[84946, 1843, 1551, 44, 92, "Input",ExpressionUUID->"11050043-7e2f-4cf1-80a2-ddb6d0586337"],
Cell[86500, 1889, 6253, 143, 409, "Output",ExpressionUUID->"94e5fbc5-8940-4247-9965-c1e1da6250b7"]
}, Open  ]],
Cell[92768, 2035, 449, 8, 51, "Text",ExpressionUUID->"716934d3-4840-4565-b303-e1c30d8c16c4"],
Cell[93220, 2045, 598, 15, 52, "Input",ExpressionUUID->"94ef36d3-e87d-43b9-a1ad-0ecf9fa712a4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93867, 2066, 222, 4, 67, "Section",ExpressionUUID->"9ca6c8a6-a639-443a-9fe8-98964614a42b"],
Cell[CellGroupData[{
Cell[94114, 2074, 160, 3, 54, "Subsection",ExpressionUUID->"007458d2-2ff8-458c-9b5e-de3936c39920"],
Cell[CellGroupData[{
Cell[94299, 2081, 1515, 39, 220, "Input",ExpressionUUID->"5e3b4d87-fbc1-4ae8-9128-de90de3d52f0"],
Cell[95817, 2122, 28629, 614, 398, "Output",ExpressionUUID->"dd7d9891-a9ad-4b95-8133-969525b12f82"]
}, Open  ]],
Cell[124461, 2739, 386, 10, 52, "Input",ExpressionUUID->"c34c158a-67f4-41d0-922e-7fa1ac52b6d7"],
Cell[124850, 2751, 1144, 29, 115, "Input",ExpressionUUID->"d9256ea7-ea48-4d84-b959-ca61d2797dcb"],
Cell[CellGroupData[{
Cell[126019, 2784, 556, 15, 52, "Input",ExpressionUUID->"f763d344-7211-42df-ac71-2f439f35ad79"],
Cell[126578, 2801, 23274, 456, 74, "Output",ExpressionUUID->"67be2f9d-17dc-47d2-9e15-413d0bfee7d3"]
}, Open  ]]
}, Open  ]],
Cell[149879, 3261, 165, 3, 54, "Subsection",ExpressionUUID->"c1702a7b-267c-40ca-8fe8-11ca2a516deb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150081, 3269, 219, 4, 67, "Section",ExpressionUUID->"e4d3502a-25a1-4984-ab86-9f5d9e76acd7"],
Cell[CellGroupData[{
Cell[150325, 3277, 160, 3, 54, "Subsection",ExpressionUUID->"484ff213-a036-4bf7-9029-12f35c329b02"],
Cell[150488, 3282, 605, 11, 74, "Text",ExpressionUUID->"72e5c4a1-1684-43d5-ad8e-e223c0d19aa2"],
Cell[151096, 3295, 1781, 44, 115, "Input",ExpressionUUID->"d702a9f8-f29a-4b53-a020-6cf481407c3f"],
Cell[CellGroupData[{
Cell[152902, 3343, 262, 6, 30, "Input",ExpressionUUID->"60920650-9128-4790-8025-4710debcc050"],
Cell[153167, 3351, 1260, 33, 63, "Output",ExpressionUUID->"a57c95e6-1eda-40cf-b550-308209e81e5e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154464, 3389, 4672, 117, 283, "Input",ExpressionUUID->"cc8e7c23-2a04-4d6b-ae7b-7631419cb4fb"],
Cell[159139, 3508, 48894, 981, 534, "Output",ExpressionUUID->"e8933060-006a-4898-8e57-9c9db71547af"]
}, Open  ]],
Cell[208048, 4492, 2152, 52, 157, "Input",ExpressionUUID->"ada7f083-15d3-4ff3-bbfe-43172a4fedc9"],
Cell[CellGroupData[{
Cell[210225, 4548, 612, 16, 52, "Input",ExpressionUUID->"65d8c9b5-0628-4998-9a7b-0ff099b92153"],
Cell[210840, 4566, 27049, 569, 74, "Output",ExpressionUUID->"df0ee856-afea-4a3d-9abc-cdb834a8c549"]
}, Open  ]]
}, Open  ]],
Cell[237916, 5139, 165, 3, 54, "Subsection",ExpressionUUID->"5732dd87-93f4-4887-9404-4e4d49cf612b"]
}, Open  ]],
Cell[238096, 5145, 160, 3, 67, "Section",ExpressionUUID->"130f4d90-ec93-41d8-a31c-0888ec139c48"],
Cell[238259, 5150, 154, 3, 53, "Section",ExpressionUUID->"4d00f0da-63c7-45ae-8d33-91efade18148"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238450, 5158, 169, 3, 69, "Chapter",ExpressionUUID->"5e8076e8-f823-48f4-9e2a-264782b67762"],
Cell[CellGroupData[{
Cell[238644, 5165, 171, 3, 67, "Section",ExpressionUUID->"a0836cae-1398-4cef-b716-41b65c0c7153"],
Cell[238818, 5170, 1687, 25, 189, "Text",ExpressionUUID->"94360b47-350c-47ce-a95e-c92f8160fe2f"],
Cell[CellGroupData[{
Cell[240530, 5199, 173, 3, 54, "Subsection",ExpressionUUID->"8fcc8827-a114-4915-9895-8ef9e988b3c7"],
Cell[240706, 5204, 276, 4, 51, "Text",ExpressionUUID->"efd2a914-8949-47a9-8f2d-c0be1ee58dc6"],
Cell[240985, 5210, 2694, 75, 136, "Input",ExpressionUUID->"8d097af3-23c7-4154-bd09-5ac7c87adc90"],
Cell[243682, 5287, 540, 9, 74, "Text",ExpressionUUID->"55088e93-12a2-4d4b-8f58-1ddfebcc17e6"],
Cell[244225, 5298, 800, 18, 52, "Input",ExpressionUUID->"04a8e120-b8d3-4abe-bea8-5c3ab0084711"],
Cell[245028, 5318, 518, 9, 74, "Text",ExpressionUUID->"f3201f83-6166-4dc9-a1cc-3af344ad73a3"],
Cell[CellGroupData[{
Cell[245571, 5331, 699, 19, 52, "Input",ExpressionUUID->"c32ee6e5-f940-4965-ac3b-968c4eb11503"],
Cell[246273, 5352, 1196, 31, 63, "Output",ExpressionUUID->"5b81895b-1b63-4d70-a692-14b3cd33bb8a"]
}, Open  ]],
Cell[247484, 5386, 616, 11, 74, "Text",ExpressionUUID->"3fb7ffee-6d41-4ec2-b0ae-b72a43484cf2"],
Cell[CellGroupData[{
Cell[248125, 5401, 2522, 66, 94, "Input",ExpressionUUID->"b7c59e32-c7e5-4021-b065-765948e9805e"],
Cell[250650, 5469, 15338, 319, 290, "Output",ExpressionUUID->"8a5f21e7-c35d-4dd0-8f6c-249bab15107b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[266037, 5794, 233, 4, 54, "Subsection",ExpressionUUID->"fe549be0-d9a3-4b7a-9829-4a1201b881d6"],
Cell[266273, 5800, 919, 15, 120, "Text",ExpressionUUID->"cd069f61-1643-409a-97ff-c17ed110782e"],
Cell[267195, 5817, 1058, 18, 30, "Input",ExpressionUUID->"2cdd4d50-201d-4dee-9a8e-0cebfe4024b9"],
Cell[CellGroupData[{
Cell[268278, 5839, 2494, 62, 161, "Input",ExpressionUUID->"0b465715-edcb-4b24-9ddb-3bc2d30cdafc"],
Cell[270775, 5903, 3438, 80, 455, "Output",ExpressionUUID->"7280ec8b-afb5-4f97-9826-c3def0918bd4"]
}, Open  ]],
Cell[274228, 5986, 738, 12, 97, "Text",ExpressionUUID->"fe6da2cf-8db4-4c5c-968c-e69317554c88"],
Cell[CellGroupData[{
Cell[274991, 6002, 3804, 91, 268, "Input",ExpressionUUID->"56c3d145-641c-4f7e-aace-26785dfd659c"],
Cell[278798, 6095, 10189, 226, 336, "Output",ExpressionUUID->"45793c34-6085-41f5-8e28-eccb514a78b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289036, 6327, 224, 4, 54, "Subsection",ExpressionUUID->"c5fb5cd8-695b-4177-8313-b7fae749aeb3"],
Cell[289263, 6333, 377, 5, 51, "Text",ExpressionUUID->"de58a042-c317-4d65-a781-9542555be64c"],
Cell[CellGroupData[{
Cell[289665, 6342, 2112, 53, 115, "Input",ExpressionUUID->"429bd5af-9968-4a49-876a-aaa28f20975f"],
Cell[291780, 6397, 961, 30, 83, "Output",ExpressionUUID->"ea848ad3-1529-4c3c-8b57-1670c2971161"]
}, Open  ]],
Cell[292756, 6430, 306, 6, 51, "Text",ExpressionUUID->"994c2703-fddc-459f-ae55-542981231c4f"],
Cell[CellGroupData[{
Cell[293087, 6440, 912, 22, 73, "Input",ExpressionUUID->"fa211bd9-773b-4a2b-bdb9-03a99d7e92fa"],
Cell[294002, 6464, 276, 5, 34, "Output",ExpressionUUID->"b6231795-8df9-4b7e-be7b-13ac87757976"]
}, Open  ]],
Cell[294293, 6472, 234, 6, 35, "Text",ExpressionUUID->"5c451022-0108-46dc-9f9a-6ac631135c8d"],
Cell[294530, 6480, 581, 15, 30, "Input",ExpressionUUID->"df5f3291-2061-44b0-9fc8-36591fd22772"],
Cell[295114, 6497, 398, 7, 51, "Text",ExpressionUUID->"004e62fc-ab46-4ae7-b23e-b5970dbe7aaf"],
Cell[295515, 6506, 243, 6, 30, "Input",ExpressionUUID->"79044c46-9fca-41e9-94ce-7b119b1b8a6b"],
Cell[CellGroupData[{
Cell[295783, 6516, 5063, 136, 241, "Input",ExpressionUUID->"02efba42-ab07-4a67-b0f9-c8bab68897b5"],
Cell[300849, 6654, 74561, 1691, 112, "Output",ExpressionUUID->"8531eaa9-269b-4b75-a9bb-1dfa5adc450b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[375447, 8350, 1246, 26, 94, "Input",ExpressionUUID->"227a6dce-2601-40d1-a7ff-e6d9b9c378fd"],
Cell[376696, 8378, 964, 17, 28, "Message",ExpressionUUID->"c2c7682d-8bba-43b4-878e-7880879c5419"],
Cell[377663, 8397, 964, 17, 28, "Message",ExpressionUUID->"2a24c49c-2cad-4712-893e-3c36efad6016"]
}, Open  ]]
}, Open  ]],
Cell[378654, 8418, 173, 3, 54, "Subsection",ExpressionUUID->"d70bffd7-b0ac-4f74-99cf-24f81cd2d227"]
}, Open  ]],
Cell[CellGroupData[{
Cell[378864, 8426, 173, 3, 67, "Section",ExpressionUUID->"9ce4f5ee-869d-48f1-9534-acecd9410ba7"],
Cell[379040, 8431, 2984, 65, 103, "Text",ExpressionUUID->"d55d7f11-676f-4624-8772-b9947442ade2"],
Cell[382027, 8498, 367, 7, 51, "Text",ExpressionUUID->"e4731407-db42-44cf-9a10-33574fd70fac"],
Cell[382397, 8507, 1906, 49, 94, "Input",ExpressionUUID->"b6097332-0919-4e9c-a4ab-df5229cbe0a1"],
Cell[384306, 8558, 611, 11, 74, "Text",ExpressionUUID->"a8b9410e-66c7-4959-a980-a1afd152851d"],
Cell[384920, 8571, 801, 22, 52, "Input",ExpressionUUID->"84639ec9-36f7-4f1e-8d39-123a2de05792"],
Cell[385724, 8595, 1178, 23, 76, "Text",ExpressionUUID->"1580900b-8c27-47b1-9d77-2931418b1133"],
Cell[CellGroupData[{
Cell[386927, 8622, 7073, 175, 499, "Input",ExpressionUUID->"d76aa55d-a5ca-4ca1-a15d-3174d7f1394f"],
Cell[394003, 8799, 14935, 328, 429, "Output",ExpressionUUID->"e6f954a8-f8f1-4db7-bcf7-0b135a867b9f"]
}, Open  ]],
Cell[408953, 9130, 788, 18, 76, "Text",ExpressionUUID->"7f100df8-bc67-444a-94cd-33f711d4d187"],
Cell[409744, 9150, 2775, 78, 178, "Input",ExpressionUUID->"893a834b-48be-4aa3-a6b4-b4f77bb648d3"],
Cell[CellGroupData[{
Cell[412544, 9232, 877, 20, 52, "Input",ExpressionUUID->"9e2eb3fd-ab39-4549-97d9-f54dae6c7741"],
Cell[413424, 9254, 2707, 61, 91, "Output",ExpressionUUID->"96c9f10a-5c52-4019-901d-06771c39b92c"],
Cell[416134, 9317, 1672, 38, 142, "Output",ExpressionUUID->"8e5a533d-1a39-4608-be6b-375845a39b50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417843, 9360, 736, 17, 52, "Input",ExpressionUUID->"fcbe8ec4-dcdc-40ed-ad97-9a77cab2ed92"],
Cell[418582, 9379, 182, 3, 34, "Output",ExpressionUUID->"4508bb66-25a2-4c59-a975-e8b7916c3eed"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418801, 9387, 2460, 60, 136, "Input",ExpressionUUID->"51fc2ba6-e6c3-4cce-9c4e-9b50a7a046bf"],
Cell[421264, 9449, 712, 11, 48, "Output",ExpressionUUID->"e31d02f1-db94-4ad5-9635-d758337c45ce"],
Cell[421979, 9462, 45059, 662, 97, "Message",ExpressionUUID->"73e42727-ca42-4f7d-960c-2ae1e01aa360"],
Cell[467041, 10126, 45422, 664, 97, "Message",ExpressionUUID->"878cbebf-150e-49a0-9904-92bcffb711b2"],
Cell[512466, 10792, 48534, 707, 97, "Message",ExpressionUUID->"1274361c-3414-4dcc-bcc1-f71852e05538"],
Cell[561003, 11501, 506, 11, 28, "Message",ExpressionUUID->"cb0dbb01-81ee-46ff-9c56-9d2de776c61d"],
Cell[561512, 11514, 712, 11, 48, "Output",ExpressionUUID->"22334e22-7988-45dd-a1d8-231c5f07cf2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[562261, 11530, 130, 2, 30, "Input",ExpressionUUID->"78bafd6d-bfb1-43aa-b983-54af14c2dd98"],
Cell[562394, 11534, 368495, 7359, 619, "Output",ExpressionUUID->"d42d76fb-ca20-468c-a0d5-b86dba462c3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930926, 18898, 709, 17, 30, "Input",ExpressionUUID->"d121b8d5-70b7-4386-9981-d8a123b58bed"],
Cell[931638, 18917, 164971, 3287, 452, "Output",ExpressionUUID->"f10fa81f-3c75-403c-9d39-632fceaeabcc"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

