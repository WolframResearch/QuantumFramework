(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1220010,      20634]
NotebookOptionsPosition[   1212463,      20506]
NotebookOutlinePosition[   1213079,      20527]
CellTagsIndexPosition[   1213036,      20524]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"aws", "=", 
   RowBox[{"ServiceConnect", "[", "\"\<AWS\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865707508988884*^9, 3.865707512759605*^9}, {
   3.8657075677375603`*^9, 3.865707568471541*^9}, 3.8657743894267387`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"24cd2505-9c69-47a2-95b9-a54be1d9b3b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s3", "=", 
   RowBox[{"ServiceExecute", "[", 
    RowBox[{"aws", ",", "\"\<GetService\>\"", ",", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<S3\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.865774367881744*^9, 3.865774386332152*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3720ef1f-0383-4187-a73c-3aa4d36f1cb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"braket", "=", 
   RowBox[{"ServiceExecute", "[", 
    RowBox[{"aws", ",", "\"\<GetService\>\"", ",", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<Braket\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.865707602545459*^9, 3.8657076088478947`*^9}, 
   3.865774397961965*^9},
 CellLabel->"In[59]:=",ExpressionUUID->"ba50003f-3838-4db1-9b6d-3198bdde6ba5"],

Cell[CellGroupData[{

Cell[BoxData["braket"], "Input",
 CellChangeTimes->{{3.8668911228296127`*^9, 3.8668911233573437`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"4e11eb65-6fe6-47c3-a901-64350714e30a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-cd89a1e9a50b8068478e013661cdcbef"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-cd89a1e9a50b8068478e013661cdcbef"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-Braket", "ID" -> "connection-cd89a1e9a50b8068478e013661cdcbef"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8668911235787888`*^9, {3.8765720823205843`*^9, 3.876572098711583*^9}, 
   3.884239751076754*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"6d575556-5008-4614-9bae-e5afe1a8d205"]
}, Open  ]],

Cell["Fetch available devices:", "Text",
 CellChangeTimes->{{3.865787306578583*^9, 
  3.865787310755556*^9}},ExpressionUUID->"35e2bf04-539e-4fcc-9e69-\
ca98d359719c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devices", "=", 
  RowBox[{"braket", "[", 
   RowBox[{"\"\<SearchDevices\>\"", ",", 
    RowBox[{"\"\<Filters\>\"", "->", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8657078214334373`*^9, 3.865707869026066*^9}, {
  3.8657081592162046`*^9, 3.8657082057942142`*^9}, {3.8657082560959597`*^9, 
  3.865708285748803*^9}, {3.865708326790202*^9, 3.865708328970191*^9}, {
  3.865774806162451*^9, 3.865774807117334*^9}, {3.865790070016543*^9, 
  3.865790098683729*^9}, {3.884239764133172*^9, 3.884239764772173*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"7a8f0265-6eec-45c0-a953-d66a2fc42fa4"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Devices" -> {<|
         "DeviceArn" -> "arn:aws:braket:::device/qpu/ionq/ionQdevice", 
          "DeviceName" -> "IonQ Device", "ProviderName" -> "IonQ", 
          "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2023-01-31T12:00:04.665000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}, \
\"braket.ir.openqasm.compiled_program\": {\"version\": [\"1\"], \
\"actionType\": \"braket.ir.openqasm.compiled_program\"}}, \"deviceParameters\
\": {\"title\": \"IonqDeviceParameters\", \"description\": \"This defines the \
parameters common to all the IonQ devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    ...        \\\
\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"paradigmParameters\
\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    ... \
}\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9985}, \"2Q\": {\"mean\": 0.9785}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}"|>, <|
         "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
          "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
          "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-01-31T15:30:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": \
1e-07}, \"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": \
0.02}}}}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
          "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": false, \
\"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\": \
true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
          "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
          "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", 
          "DeviceType" -> "QPU", "DeviceStatus" -> "OFFLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-01-27T14:51:39.232143+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.401, 0.547, -0.249], \"schmidtNumber\": 1.14, \
\"commonEfficiency\": 0.357, \"squeezingParametersMean\": {\"low\": 0.704, \
\"high\": 1.188, \"medium\": 1.016}, \"relativeChannelEfficiencies\": [0.932, \
0.94, 0.911, 1.0, 0.975, 0.923, 0.903, 0.963, 0.952, 0.956, 0.965, 1.0, \
0.937, 0.967, 0.957, 0.904], \"loopEfficiencies\": [0.883, 0.845, \
0.722]}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
          "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}"|>}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> 
               TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 6, {All, All}]], 6, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["OFFLINE", "ONLINE"]], 
          TypeSystem`Atom[String]}], 6], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> 
               TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 6, {All, All}]], 6, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["OFFLINE", "ONLINE"]], 
          TypeSystem`Atom[String]}], 6], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceCapabilities"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Devices", 
                  Style[
                  "Devices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Devices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/ionq/ionQdevice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ Device", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2023-01-31T12:00:04.665000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}, \
\"braket.ir.openqasm.compiled_program\": {\"version\": [\"1\"], \
\"actionType\": \"braket.ir.openqasm.compiled_program\"}}, \"deviceParameters\
\": {\"title\": \"IonqDeviceParameters\", \"description\": \"This defines the \
parameters common to all the IonQ devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    ...        \\\
\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"paradigmParameters\
\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    ... \
}\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9985}, \"2Q\": {\"mean\": 0.9785}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QuEra", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-01-31T15:30:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": \
1e-07}, \"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": \
0.02}}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": false, \
\"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\": \
true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-01-27T14:51:39.232143+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.401, 0.547, -0.249], \"schmidtNumber\": 1.14, \
\"commonEfficiency\": 0.357, \"squeezingParametersMean\": {\"low\": 0.704, \
\"high\": 1.188, \"medium\": 1.016}, \"relativeChannelEfficiencies\": [0.932, \
0.94, 0.911, 1.0, 0.975, 0.923, 0.903, 0.963, 0.952, 0.956, 0.965, 1.0, \
0.937, 0.967, 0.957, 0.904], \"loopEfficiencies\": [0.883, 0.845, 0.722]}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2446., {101.134033203125, 106.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2446., {101.134033203125, 106.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866897396302846*^9, 3.876572104538581*^9, 3.876572144723648*^9, {
   3.884239757210425*^9, 3.88423976711418*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"eeb1811c-7002-48b1-949c-93dbf9262f79"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<SearchDevices\>\"", ",", 
   RowBox[{"\"\<Filters\>\"", "->", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.866891137903206*^9, 3.8668911394062*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"61124e95-0297-4d59-b534-3a7f8b1c07f5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Devices" -> {<|
         "DeviceArn" -> "arn:aws:braket:::device/qpu/ionq/ionQdevice", 
          "DeviceName" -> "IonQ Device", "ProviderName" -> "IonQ", 
          "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2022-07-15T11:00:04.455000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\", \"i\"], \"supportedResultTypes\": \
[{\"name\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\", \"i\"], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": false, \
\"supportsPartialVerbatimBox\": false, \"supportsUnassignedMeasurements\": \
true, \"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\
\"name\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    \
...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\
\", \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": \
{\"title\": \"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": []}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9986}, \"2Q\": {\"mean\": 0.9579}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
          "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
          "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
          "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", 
          "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shots\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2022-07-15T14:42:39.423715+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.371, 1.617, -2.066], \"schmidtNumber\": 1.176, \
\"commonEfficiency\": 0.418, \"squeezingParametersMean\": {\"low\": 0.651, \
\"high\": 1.134, \"medium\": 0.957}, \"relativeChannelEfficiencies\": [0.957, \
0.998, 0.984, 0.959, 0.942, 0.895, 0.919, 0.988, 0.988, 1.0, 0.916, 0.929, \
0.932, 0.919, 0.962, 0.899], \"loopEfficiencies\": [0.894, 0.874, \
0.839]}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
          "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}"|>}|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> 
               TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[63.], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 6, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Amazon Braket", "IonQ", "Xanadu"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["ONLINE"]], 
          TypeSystem`Atom[String]}], 5], 1], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[1]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> 
               TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[63.], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`AtomShape[560.]|>], 
             DirectedInfinity[1], 6, {All, All}]], 5, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Amazon Braket", "IonQ", "Xanadu"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["ONLINE"]], 
          TypeSystem`Atom[String]}], 5], 1], "Path" -> {}, 
     "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 6, "DataRowCount" -> 
     1, "DataColumnCount" -> 6, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceCapabilities"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Devices", 
                  Style[
                  "Devices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Devices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/ionq/ionQdevice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ Device", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2022-07-15T11:00:04.455000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\", \"i\"], \"supportedResultTypes\": \
[{\"name\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\", \"i\"], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": false, \
\"supportsPartialVerbatimBox\": false, \"supportsUnassignedMeasurements\": \
true, \"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\
\"name\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    \
...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\
\", \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": \
{\"title\": \"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": []}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9986}, \"2Q\": {\"mean\": 0.9579}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shots\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2022-07-15T14:42:39.423715+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.371, 1.617, -2.066], \"schmidtNumber\": 1.176, \
\"commonEfficiency\": 0.418, \"squeezingParametersMean\": {\"low\": 0.651, \
\"high\": 1.134, \"medium\": 0.957}, \"relativeChannelEfficiencies\": [0.957, \
0.998, 0.984, 0.959, 0.942, 0.895, 0.919, 0.988, 0.988, 1.0, 0.916, 0.929, \
0.932, 0.919, 0.962, 0.899], \"loopEfficiencies\": [0.894, 0.874, 0.839]}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2446., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2446., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866891140912244*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"44c3ca11-9806-45bf-983d-aff667fe64e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<SearchDevices\>\"", ",", 
   RowBox[{"\"\<Filters\>\"", "->", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-west-2\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8668911924442797`*^9, 3.866891195734087*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"64b33517-ede0-4587-bb6b-f34f12edb526"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Devices" -> {<|
         "DeviceArn" -> 
          "arn:aws:braket:::device/qpu/d-wave/Advantage_system3", 
          "DeviceName" -> "Advantage_system3.2", "ProviderName" -> 
          "D-Wave Systems", "DeviceType" -> "QPU", "DeviceStatus" -> 
          "RETIRED", "DeviceCapabilities" -> Null|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
          "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
          "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
          "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", 
          "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}"|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:us-west-2::device/qpu/d-wave/Advantage_system6", 
          "DeviceName" -> "Advantage_system6.1", "ProviderName" -> 
          "D-Wave Systems", "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE",
           "DeviceCapabilities" -> ""|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/qpu/d-wave/Advantage_system4", 
          "DeviceName" -> "Advantage_system4.1", "ProviderName" -> 
          "D-Wave Systems", "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE",
           "DeviceCapabilities" -> ""|>, <|
         "DeviceArn" -> 
          "arn:aws:braket:::device/qpu/d-wave/Advantage_system1", 
          "DeviceName" -> "Advantage_system1.1", "ProviderName" -> 
          "D-Wave Systems", "DeviceType" -> "QPU", "DeviceStatus" -> 
          "RETIRED", "DeviceCapabilities" -> Null|>, <|
         "DeviceArn" -> "arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6", 
          "DeviceName" -> "DW_2000Q_6", "ProviderName" -> "D-Wave Systems", 
          "DeviceType" -> "QPU", "DeviceStatus" -> "ONLINE", 
          "DeviceCapabilities" -> 
          "{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.dwave.dwave_device_capabilities\", \"version\": \
\"1\"}, \"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.00019, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/d-wave-systems_logo_201804131305387.\
246f4e3fec1d3f961478a6176ae70031851bcb13.png\", \"summary\": \"Quantum \
Annealer based on superconducting qubits\", \"externalDocumentationUrl\": \
\"https://docs.dwavesys.com/docs/latest/doc_physical_properties.html\"}, \
\"deviceLocation\": \"British Columbia, Canada\", \"updatedAt\": \
\"2022-07-15T16:25:19.895957\"}, \"action\": \
{\"braket.ir.annealing.problem\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.annealing.problem\"}}, \"deviceParameters\": {\"title\": \
\"Dwave2000QDeviceParameters\", \"description\": \"This is the description of \
the D-Wave parameters\\n\\nAttributes:\\n    deviceLevelParameters: \
Parameters that are specific to this D-Wave device.\", \"type\": \"object\", \
\"properties\": {\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \
\"const\": {\"name\": \
\"braket.device_schema.dwave.dwave_2000Q_device_parameters\", \"version\": \
\"1\"}}, \"deviceLevelParameters\": {\"$ref\": \
\"#/definitions/Dwave2000QDeviceLevelParameters\"}}, \"required\": \
[\"deviceLevelParameters\"], \"definitions\": {\"PostProcessingType\": \
{\"title\": \"PostProcessingType\", \"description\": \"The type of processing \
for D-Wave.\", \"enum\": [\"SAMPLING\", \"OPTIMIZATION\"], \"type\": \"string\
\"}, \"ResultFormat\": {\"title\": \"ResultFormat\", \"description\": \"The \
type of results format for D-Wave.\", \"enum\": [\"RAW\", \"HISTOGRAM\"], \
\"type\": \"string\"}, \"Dwave2000QDeviceLevelParameters\": {\"title\": \
\"Dwave2000QDeviceLevelParameters\", \"description\": \"This is the \
description of the D-Wave parameters\\n\\nAttributes:\\n    annealingOffsets \
(Optional[List[float]]): Provides offsets to annealing paths, per qubit.\\n   \
 annealingSchedule (Optional[List[List[float]]]): Introduces variations to \
the global anneal\\n        schedule.\\n    annealingDuration (Optional[int] \
= Field(gt=1)): Sets the duration (in microseconds) of\\n        quantum \
annealing time, per read.\\n    autoScale (Optional[bool]): Indicates whether \
h and J values are rescaled.\\n    beta (Optional[float]): Provides a value \
for the Boltzmann distribution parameter.\\n        Used when sampling \
postprocessing is enabled on D-Wave 2000Q and earlier systems.\\n    chains \
(Optional[List[List[int]]]): Defines which qubits represent the same \
logical\\n        variable. Used only when postprocessing is enabled on \
D-Wave 2000Q and earlier systems.\\n        Ensures that all qubits in the \
same chain have the same value within each sample.\\n    compensateFluxDrift \
(Optional[bool]): Boolean flag indicating whether the D-Wave system\\n        \
compensates for flux drift.\\n    fluxBiases (Optional[List[float]]): List of \
flux-bias offset values with which to calibrate\\n        a chain. Often \
required when using the extended J range to create a strongly coupled\\n      \
  chain for certain embeddings.\\n    initialState (Optional[List[int]]): \
When using the reverse annealing feature,\\n        you must supply the \
initial state to which the system is set.\\n    maxResults (Optional[int] = \
Field(gt=1)): Specifies the maximum number of\\n        answers returned from \
the solver.\\n    postprocessingType (Optional[Union[PostProcessingType, \
str]]): Defines what type\\n        of postprocessing the system runs online \
on raw solutions.\\n    programmingThermalizationDuration (Optional[int]): \
Gives the time (in microseconds) to wait\\n        after programming the QPU \
for it to cool back to base temperature (i.e.,\\n        post-programming \
thermalization time).\\n    readoutThermalizationDuration (Optional[int]): \
Gives the time (in microseconds) to wait\\n        after each state is read \
from the QPU for it to cool back to base temperature\\n        (i.e., \
post-readout thermalization time).\\n    reduceIntersampleCorrelation \
(Optional[bool]): Reduces sample-to-sample correlations caused\\n        by \
the spin-bath polarization effect by adding a delay between reads.\\n    \
reinitializeState (Optional[bool]): When using the reverse annealing feature,\
\\n        you must supply the initial state to which the system is set.\\n   \
 resultFormat (Optional[ResultFormat]): Type of the result format returned by \
the QPU.\\n    spinReversalTransformCount (Optional[int] = Field(gt=0)): \
Specifies the number of\\n        spin-reversal transforms to \
perform.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.dwave.dwave_2000Q_device_level_parameters\\\",\\n    \
...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"beta\\\": 1\\n    ... }\\n    >>> \
Dwave2000QDeviceLevelParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.dwave.dwave_2000Q_device_level_parameters\", \"version\
\": \"1\"}}, \"annealingOffsets\": {\"title\": \"Annealingoffsets\", \
\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \
\"annealingSchedule\": {\"title\": \"Annealingschedule\", \"type\": \
\"array\", \"items\": {\"type\": \"array\", \"items\": {\"type\": \
\"number\"}}}, \"annealingDuration\": {\"title\": \"Annealingduration\", \
\"exclusiveMinimum\": 0, \"type\": \"number\"}, \"autoScale\": {\"title\": \
\"Autoscale\", \"type\": \"boolean\"}, \"beta\": {\"title\": \"Beta\", \"type\
\": \"number\"}, \"chains\": {\"title\": \"Chains\", \"type\": \"array\", \
\"items\": {\"type\": \"array\", \"items\": {\"type\": \"integer\"}}}, \
\"compensateFluxDrift\": {\"title\": \"Compensatefluxdrift\", \"type\": \
\"boolean\"}, \"fluxBiases\": {\"title\": \"Fluxbiases\", \"type\": \
\"array\", \"items\": {\"type\": \"number\"}}, \"initialState\": {\"title\": \
\"Initialstate\", \"type\": \"array\", \"items\": {\"type\": \"integer\"}}, \
\"maxResults\": {\"title\": \"Maxresults\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}, \"postprocessingType\": {\"title\": \
\"Postprocessingtype\", \"anyOf\": [{\"$ref\": \
\"#/definitions/PostProcessingType\"}, {\"type\": \"string\"}]}, \
\"programmingThermalizationDuration\": {\"title\": \
\"Programmingthermalizationduration\", \"type\": \"integer\"}, \
\"readoutThermalizationDuration\": {\"title\": \
\"Readoutthermalizationduration\", \"type\": \"integer\"}, \
\"reduceIntersampleCorrelation\": {\"title\": \
\"Reduceintersamplecorrelation\", \"type\": \"boolean\"}, \"reinitializeState\
\": {\"title\": \"Reinitializestate\", \"type\": \"boolean\"}, \"resultFormat\
\": {\"$ref\": \"#/definitions/ResultFormat\"}, \
\"spinReversalTransformCount\": {\"title\": \"Spinreversaltransformcount\", \
\"exclusiveMinimum\": 0, \"type\": \"integer\"}}}}}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.dwave.dwave_provider_properties\", \"version\": \
\"1\"}, \"annealingOffsetStep\": 0.003078008946238068, \
\"annealingOffsetStepPhi0\": 0.00027992071513567937, \
\"annealingOffsetRanges\": [[-0.13600744081137645, 0.009789701817991983], \
[-0.13875149009394658, 0.009566264844367785], [-0.1369361147194918, \
0.016674382560332858], [-0.13712184366968314, 0.010881002839541706], \
[-0.1377032158503334, 0.00946709608971043], [-0.13872305384406092, \
0.04043260838420777], [-0.13909250135306245, 0.005854381648747083], \
[-0.1382777601013771, 0.01847304451354332], [-0.1364904696886467, \
0.012162847030360378], [-0.1367290964420125, 0.07186591783064109], \
[-0.13821824935590943, 0.061702319423903286], [-0.14069315224866294, \
0.022632413780080886], [-0.16088665434299665, 0.07059332060773936], \
[-0.1356846278805038, 0.05018972578422699], [-0.13435188095977782, \
0.04489030639053271], [-0.1377299749529736, 0.0], [-0.13873124505919143, \
0.05176075459760881], [-0.13875435304389996, 2.2173946380719925e-17], \
[-0.138008850463023, 0.021477616323694094], [-0.13643654069058, \
0.09176743269110996], [-0.13657857957995184, 0.028097488643265885], \
[-0.13245132448205077, 0.013245132448205072], [-0.13629061334320677, \
0.02234225735582313], [-0.13716931091379606, 0.006545752384678561], \
[-0.1347686670126842, 0.06881235352669121], [-0.13885279274092097, \
0.10141221167245178], [-0.13947139805537043, 0.11276507691998996], \
[-0.13401185389350845, 0.0873929546585785], [-0.13654914962820394, \
0.08560400683947215], [-0.13490165254466266, 0.058927819739019685], \
[-0.13873285631169757, 0.06847959761135375], [-0.1362078919307897, \
0.07678006217983094], [-0.13947371969566197, 0.07270433308406912], \
[-0.1362768033071029, 0.0817856558211193], [-0.138915673854754, \
0.12672444481230927], [-0.08881602625150695, 0.13512364128737195], \
[-0.13980007321018623, 0.08443633199765001], [-0.13669902563228492, \
0.06072657440470316], [-0.12061301638628391, 0.13358484278255137], \
[-0.13704238890162754, 0.12174082008697999], [-0.13856557400628688, \
0.04985978211241406], [-0.13929555217387232, 0.05621768235019539], \
[-0.13441854243651416, 0.0], [0.0, 0.0], [-0.13841942975482804, \
0.07635405810751948], [-0.13597765597550618, 0.12268567970119962], [0.0, \
0.0], [-0.13843471345614358, 0.04307981273755458], [-0.1370464490938258, \
0.05751729472826941], [-0.13790382893483671, 0.07562635070673539], \
[-0.13534114035674735, 0.1271631962559657], [-0.08591320308102517, \
0.13715192889397734], [-0.1409591104346439, 0.048913895795344185], \
[-0.13554272083218177, 0.05033179206769358], [-0.07686954612403618, \
0.13827383305979568], [-0.16776587375963914, 0.12107279839174732], \
[-0.1392934481364792, 0.10544090984894085], [-0.13671571095962423, \
0.11094461715478397], [-0.13861987219511784, 0.014515378198523434], \
[-0.1379117234876769, 0.1286040282876618], [-0.13880028169568864, \
0.09307004468515416], [-0.13485940386214035, 0.050304776452903516], \
[-0.13818832708679882, 0.07693830065295656], [-0.1370427008185769, \
0.13778698479380244], [-0.1396412235004023, 0.06431367482773942], \
[-0.13883163608801669, 0.0], [-0.1381053045417773, 0.07702833255151419], \
[-0.13857548222221233, 0.03688428381861727], [-0.13322328199746378, \
0.10027133424358284], [-0.1383594241461319, 0.052797695668114805], \
[-0.13569014063387866, 0.013283085463800278], [-0.13981352017739107, \
0.08763097531870702], [-0.13568419876256516, 0.08982045027846253], \
[-0.13898043543390148, 0.1069527654361482], [-0.10493678577184207, \
0.13631010646247893], [-0.13169926347969363, 0.13737654087674475], \
[-0.13860428080134019, 0.13831302623378777], [-0.13562457047032947, \
0.08952137528209025], [-0.1381350289715789, 0.07331122530533465], \
[-0.13718245807516824, 0.09539814868080548], [-0.1377721868832498, \
0.12329985805733883], [-0.13653846835796185, 0.035644867015071684], \
[-0.13986125945876143, 0.01941977542524973], [-0.1349454740789745, \
0.052088746886410395], [-0.13642044317374474, 0.11906170529591058], \
[-0.13870827595449664, 0.10513711431811647], [-0.13413180037208058, \
0.06445192389029504], [-0.13776255758830402, 0.10625808716792755], \
[-0.13842899924120255, 0.10344566231008581], [-0.14070617072351055, \
0.02244502014481013], [-0.13864991261227966, 0.04555770154661206], \
[-0.17014533535200888, 0.055951423735591185], [-0.13512543320933673, \
0.06695151180134469], [-0.13475908904432649, 0.08796859019745325], \
[-0.1378060543401529, 0.06376777374029244], [-0.13916941783853293, \
0.07461134006302081], [-0.14020257289102772, 0.06083506392751736], \
[-0.1381176549585559, 0.05835608576873845], [-0.1381664558761851, \
0.05179039945646378], [-0.13727237859847705, 0.032958114828334655], \
[-0.13598011068012272, 0.08818669125568965], [-0.13781042882636027, \
0.08905458215201732], [-0.13450528079145355, 0.0881985684895078], \
[-0.13688826445477062, 0.05272133268990841], [-0.14095213466931603, \
0.1373402059588776], [-0.13804137692858995, 0.05495504982478498], \
[-0.13747487703370065, 0.05777686565803153], [-0.13675973211030787, \
0.03418993302757696], [-0.13775753569960514, 0.08335942448547536], \
[-0.13682393564027168, 0.059829719705128], [-0.13708552992652115, \
0.08446145060129287], [-0.13702441045086844, 0.07267575773076296], \
[-0.1396607555031175, 0.01941722750063344], [-0.13914585908878951, \
0.02621715981793089], [-0.1368405877419257, 0.052567448169775634], \
[-0.13900240096415534, 0.00981093606414487], [-0.1370888518016061, 0.0], \
[-0.13801450171554688, 0.04801070596351762], [-0.13972185990836963, \
0.06237530352016266], [-0.13799781866999905, 0.017249727333749885], \
[-0.13690015860991528, 0.05932105199957007], [-0.13192873540780076, \
0.03322882404252905], [-0.13804682827699738, 0.07081694116627471], \
[-0.13553418502295433, 0.04041387152076107], [-0.13324094973349684, \
0.012724535096695501], [-0.13917567722665486, 0.003479391930666369], \
[-0.13820843040212663, 0.01596685284821447], [-0.13472731821555492, \
0.02055046542546908], [-0.13468181863939638, 0.01829501183557071], \
[-0.1396882355114743, 0.05061696223194325], [-0.13636786308020177, \
0.004261495721256334], [-0.13488696899461614, 0.008142285909159828], \
[-0.13482480327735352, 0.020760254742926487], [-0.1335927193425781, \
0.020971708627265155], [-0.1360935015906236, 0.04944153520285709], \
[-0.13736921878123412, 0.00944413379120983], [-0.13760360139364428, 0.0], \
[-0.13704730967645976, 0.011157584096518588], [-0.1343877314238277, \
0.05849730724368937], [-0.13849300084710656, 0.06029267911645019], \
[-0.13601469078859232, 0.03388845543434289], [-0.1352274356893982, \
0.0908226965996173], [-0.13861973862040672, 0.0069309869310203364], \
[-0.1386294428960248, 0.01403462515980996], [-0.13558476511954207, \
0.01694809563994275], [-0.13760132427884544, 0.04371919008162351], \
[-0.13776163830946278, 0.06726538331748265], [-0.13385833253868806, \
0.07905667797213141], [-0.1374076005924179, 0.12341048385952942], \
[-0.13911545077840404, 0.07390608941179147], [-0.1378399388193961, \
0.04939538456394315], [-0.13507458388031107, 0.10070202178492911], \
[-0.1364284243235121, 0.07681654471505829], [-0.13695173795059915, \
0.09401913466530983], [-0.13834180226801238, 0.12920394053059925], \
[-0.136832355885445, 0.10214559094475827], [-0.13281480185008748, \
0.039248313945774674], [-0.13690092584570684, 0.050183972212252334], \
[-0.13801995412699763, 0.10150221967901027], [-0.13924044576847214, \
0.08139757399196826], [-0.1374830335922615, 0.09222890640612479], \
[-0.13753928847624347, 0.1306999752718953], [-0.11339541414043573, \
0.13908739784281504], [-0.1195346402898249, 0.13534170172318863], \
[-0.13719589082703437, 0.08119367815114398], [-0.08867355225195345, \
0.13623524169511134], [-0.11403750622335913, 0.13333031021943814], \
[-0.137625175016514, 0.13839056954879556], [-0.13008554965186409, \
0.13889213810888992], [-0.13422866855610602, 0.10634769075916804], \
[-0.13773390058467003, 0.11668331612864108], [-0.13438042342482054, \
0.04963396542781568], [-0.13410952416503547, 0.13684091719857985], \
[-0.13619122205104842, 0.08755520392811417], [-0.1261409842740174, \
0.1361948845117042], [-0.13908708855401034, 0.1263123761388836], \
[-0.13756539718150354, 0.09567797583527818], [-0.13428467838729113, \
0.13503460639370496], [-0.11349821412088748, 0.13836899199191363], \
[-0.08059879316694293, 0.13882648906948866], [-0.13836925967052519, \
0.09951205127282248], [-0.12123715385456976, 0.13254293349881796], \
[-0.13778972980898743, 0.10840253326634239], [-0.10774640748195444, \
0.13864638997600928], [-0.13744407275245116, 0.09209917060471386], \
[-0.13371834527270451, 0.11207649262237014], [-0.13780613411045048, \
0.09585135561845758], [-0.13808846088678142, 0.13257988883872157], \
[-0.13505999393695353, 0.09642610224822322], [-0.13420744714822946, \
0.1335880757550917], [-0.1391127718615882, 0.1353354305025384], \
[-0.13836137450194988, 0.10783900770078854], [-0.13604607120783369, \
0.07946425466346334], [-0.13969743657139058, 0.1310844457167058], \
[-0.13875095107230642, 0.10386078273801244], [-0.1389658888676373, \
0.08313134361285693], [-0.13773895172934533, 0.04956743877009452], \
[-0.1346534805581149, 0.09363052793250244], [-0.13482598733209003, \
0.12050949234981646], [-0.14066681945527373, 0.12905605576576124], \
[-0.13814205337012933, 0.12111425750995955], [-0.13855833531875866, \
0.10498319100904585], [-0.1354287232122151, 0.0944891586286322], \
[-0.10785509685739834, 0.13618331693096733], [-0.13983821537739574, \
0.12672092105742552], [-0.13672325128717797, 0.12697505773703496], \
[-0.12838279244800585, 0.13969291330980246], [-0.08822200683771757, \
0.13828225032475563], [-0.09764795960482499, 0.13436706196471332], \
[-0.13743719905481272, 0.08621458710904081], [-0.13732441505807275, \
0.06775789454596134], [-0.13657789807996792, 0.08446296272962803], \
[-0.13835831999010093, 0.1010208109666091], [-0.0650581746554359, \
0.13243947526365957], [-0.11322778238985891, 0.13841566182537124], \
[-0.10349476152711973, 0.13430749442818846], [-0.1382921650135154, \
0.07373579339637194], [-0.1375215319141205, 0.05056220365757446], \
[-0.13908999118053345, 0.09538377760718103], [-0.1365859607131479, \
0.1033325670677685], [-0.09976360037304499, 0.13414018152727517], \
[-0.12000940824002979, 0.13862619608670504], [-0.07220920737065367, \
0.13589128978205456], [-0.13881297231549047, 0.1092788535720095], \
[-0.1408464480198924, 0.08587791894490826], [-0.13461787933013056, \
0.029003930608379365], [-0.13868737417786478, 0.0632190960734045], \
[-0.11471333531380701, 0.13688322471161773], [-0.12919274258355418, \
0.13711442888014339], [-0.08534996068163204, 0.13824153295156055], \
[-0.13121132651464337, 0.13773339428413878], [-0.13508107935542557, \
0.10748727541396959], [-0.138039900622648, 0.07143353663309294], \
[-0.1348870144679024, 0.10412173560965475], [-0.1380460220871471, \
0.07580084022737124], [-0.1370681061730049, 0.12188466734424962], \
[-0.13704088222574856, 0.13382117639234517], [-0.13844891239147203, \
0.11908954190561041], [-0.13501576417333852, 0.12318924286230735], \
[-0.1416089302062525, 0.09967264339254114], [-0.13577938252048505, \
0.06473332174547125], [-0.137625377557257, 0.0650965508283276], \
[-0.13798825675885792, 0.006899412837942907], [-0.1376169807237792, \
0.01195351859352371], [-0.13770218229850978, 0.0866576351154855], \
[-0.13787993267205542, 0.07071907289398939], [-0.13548655199502746, \
0.11303661702433697], [-0.13870490674100397, 0.08516799889673825], \
[-0.13833130259207496, 0.04725694460180886], [-0.1344757103527011, \
0.07573868587802947], [-0.1383464331798769, 0.04898575477388748], \
[-0.14019742484455164, 0.03855429183225166], [-0.13651879243820486, \
0.06884134585893589], [-0.13545732350907402, 2.2173946380719925e-17], \
[-0.13755071447825573, 0.03783313989483242], [-0.1381743808047873, \
0.042800849812346234], [-0.13994464097543652, 0.008083516765791587], \
[-0.13742551074238638, 0.07457576182890249], [-0.13810118745113462, \
2.2173946380719925e-17], [-0.13478464478035332, 0.08344756802932601], \
[-0.13913462134425195, 0.052175483004094574], [-0.13862025907676012, \
0.006659952983734765], [-0.1346408256016643, 0.0], [-0.13812286067274746, \
0.02725667047746544], [-0.1383532957045039, 0.06964162903803202], \
[-0.13590847112337015, 0.0427852064306142], [-0.13911593471435896, \
0.07169874330156817], [-0.13775880329440776, 0.09157677371201628], \
[-0.13903936241485995, 0.07855316948351801], [-0.13718185289566967, \
0.03380957708003747], [-0.13282013085027047, 0.11115206727991657], \
[-0.13402555670648558, 0.12891946298336535], [-0.13762158531240368, \
0.07744103516935226], [-0.13285108232386142, 0.13912860407940777], \
[-0.13737099710331246, 0.12469765730369162], [-0.14152696989924213, \
0.10921913592288392], [-0.1368495751160639, 0.010779585930604603], \
[-0.1341619897454812, 0.04321631945200666], [-0.13813956348183457, \
0.10854236026260126], [-0.13836320045282088, 0.1141402040580109], \
[-0.1358082540894177, 0.1212545311097998], [-0.097946628349835, \
0.13662454636534543], [-0.10750347732341566, 0.1326530929142899], \
[-0.08371805647520948, 0.134458659807537], [-0.13834320030296168, \
0.12986151325904083], [-0.13516583094265283, 0.10940411536269412], \
[-0.1041708731408608, 0.13749759554313679], [-0.13807051002827736, \
0.09369205421975964], [-0.13417818490090885, 0.11916501949758501], \
[-0.11202055017023174, 0.13472095647590168], [-0.07016643866334223, \
0.13529505391474142], [-0.07772591106954088, 0.13797113212389628], \
[-0.1274953634644136, 0.13493367423755281], [-0.13455709103236854, \
0.094670708517525], [-0.13530023808038438, 0.1379337174935098], \
[-0.11211808057057875, 0.13583431601601761], [-0.10907888033534623, \
0.13389306418855235], [-0.08923032517064965, 0.137428962471867], \
[-0.0857381638046666, 0.13749237391032143], [-0.13680027554182844, \
0.10520217816901066], [-0.13502023088844856, 0.10571607567490772], \
[-0.13514384771234345, 0.1166469033697946], [-0.0958929113216996, \
0.13903448380373942], [-0.11899452212971677, 0.13865200305080766], \
[-0.10096356732919146, 0.13626433635592475], [-0.10324052965817025, \
0.13750334345275084], [-0.1380656064033795, 0.13759193929607325], \
[-0.13744228135836248, 0.1051268332207715], [-0.08726614352126437, \
0.13819550264086558], [-0.08193959080562307, 0.13472186871161515], \
[-0.06657886749280457, 0.13958281470604347], [-0.11004449631323199, \
0.13702867026604712], [-0.13936554892078729, 0.12259220269748024], \
[-0.10709976584343807, 0.13806287697813321], [-0.13931788450386337, \
0.10861508795412059], [-0.13422668720089473, 0.13796025936724965], \
[-0.13675735588960833, 0.14019859299215115], [-0.13867462860719915, \
0.12424612996534379], [-0.13431537888035, 0.13538694788427474], \
[-0.13061595357565767, 0.1356104487187686], [-0.134416665821065, \
0.10412064932422666], [-0.13946141924236907, 0.09069053215482795], \
[-0.09830194055085122, 0.13769989929288537], [-0.13749600287890132, \
0.1385695902213884], [-0.10275142157410998, 0.1343459174636828], \
[-0.08682356905717521, 0.13675174652195798], [-0.09055526201694683, \
0.13734244949028754], [-0.10317996489050894, 0.13357048664204832], \
[-0.1363657507577556, 0.13751705313649723], [-0.13865143822075632, \
0.07357020441480952], [-0.11509270791719282, 0.1376786359975265], \
[-0.13555047446564292, 0.13921359994569418], [-0.07431732308780452, \
0.13754795022899632], [-0.05450381038920769, 0.13957336801499853], \
[-0.0959076608782933, 0.1378925954077129], [-0.05524932843636395, \
0.13918047936354472], [-0.10729592501683094, 0.1377998906192889], \
[-0.13662403142273505, 0.10088919029384749], [-0.11478923281539838, \
0.13928903828239778], [-0.10649053222757737, 0.13638689071574725], \
[-0.09059064961930755, 0.13372863466718315], [-0.11293079052909881, \
0.1340316073930852], [-0.12149395899235357, 0.13854196683111902], \
[-0.0857795097112657, 0.13783150433476563], [-0.10906444070874942, \
0.13789593344914017], [-0.13705297227975666, 0.0982158869087806], \
[-0.13763851363789775, 0.1011081120905319], [-0.11530021469636219, \
0.13832694298024598], [-0.1351952868954525, 0.11417448025642948], \
[-0.10360188208795161, 0.13541591700307115], [-0.1072320077292942, \
0.13595026966760865], [-0.11791825802293665, 0.1338966513596703], \
[-0.09967248054024622, 0.13377412419285947], [-0.09816273052359892, \
0.1370399298940471], [-0.1384612976478303, 0.11434126637377658], \
[-0.12753779131927487, 0.13712500243484216], [-0.13911055356833107, \
0.1015836122894357], [-0.13416972768334523, 0.10754755232541194], \
[-0.11607969520842629, 0.13719260066698993], [-0.039057065509277684, \
0.1375573542557545], [-0.13735219327845308, 0.12204269725536084], \
[-0.12351893345354803, 0.1365580993905671], [-0.1304875215650646, \
0.13500155106402595], [-0.13661020455299747, 0.1075220959423104], \
[-0.13881070920339067, 0.08082670909385074], [-0.10523043371766752, \
0.13868140242642607], [-0.1343116584011779, 0.10635854703215784], \
[-0.13986686988188374, 0.09093956337002916], [-0.125271946993574, \
0.13487658617685774], [-0.13894751620297346, 0.11019413809021511], \
[-0.13612283414026016, 0.10773409551205168], [-0.13516422933021432, \
0.13801445263786116], [-0.13664332338518673, 0.11276083678083257], \
[-0.13944746871221206, 0.053678273231423206], [-0.13868671842972036, \
0.10502157861043622], [-0.13927669914294658, 0.041233543775026416], \
[-0.13851604240629986, 0.08612978525524836], [-0.14015183559636735, \
0.0703263028847392], [-0.13386854695451314, 0.05800892497104294], \
[-0.13622654407664464, 0.058420794440319584], [-0.16567015825402584, \
0.08422630576952106], [-0.13838982065131247, 0.05232508847362512], \
[-0.13675020996483897, 0.02735004199296777], [-0.13776962943389787, \
0.013776962943389778], [-0.13942447519739304, 0.043229766238707376], \
[-0.1389347421214511, 0.022643128905685747], [-0.13408457891049302, \
0.010278944769993845], [-0.1375265076311077, 0.08512483474138542], \
[-0.1375189730152405, 0.09112732189475974], [-0.13882585740481052, \
0.02169154021950166], [-0.13832483285210323, 0.07546008078448267], \
[-0.13819725199990418, 0.015547190849989203], [-0.13911719495270583, \
0.1364644870912605], [-0.11570904715157437, 0.13829753197156994], \
[-0.13396131060182478, 0.12944497914689188], [-0.1407989633426428, \
0.08262044738666857], [-0.13487451020175292, 0.0584040066185039], \
[-0.13592720540880204, 0.06770250352079978], [-0.1370842586298872, \
0.1323687755837864], [-0.13526033198906423, 0.1345286506048136], \
[-0.1344609434905215, 0.1395707800134659], [-0.13734233802088183, \
0.10369688145412051], [-0.12443869099615854, 0.13504645311947222], \
[-0.13939528392054754, 0.03957408572348826], [-0.14048805036924145, \
0.08559922954867233], [-0.11466019718392492, 0.13372214272827812], \
[-0.13058823935824107, 0.13803211749975658], [-0.13815858679970733, \
0.12549713949950303], [-0.10365566750506315, 0.13522733053663247], \
[-0.1149146712324062, 0.13812701871548783], [-0.13182013925570257, \
0.13675795870190569], [-0.13790699809337972, 0.11719029243704565], \
[-0.13866858367876722, 0.08922224172848235], [-0.13805548439309312, \
0.09908379345960541], [-0.10680639783753157, 0.1371630985623242], \
[-0.13985565043783893, 0.09582663561496739], [-0.11349834562379506, \
0.13777655196429425], [-0.10274410362161841, 0.13721702726078058], \
[-0.0697064055189444, 0.1340790827035482], [-0.1385042248014908, \
0.1369993307444416], [-0.13517162247842668, 0.1283809177503104], \
[-0.12441123372426198, 0.13855820849735745], [-0.1376473702517661, \
0.110348795724072], [-0.09303494414125701, 0.13814661636645453], \
[-0.13839062433960955, 0.13956179260635262], [-0.0793514874293025, \
0.14047013363462177], [-0.0936037510661053, 0.14009022460247794], \
[-0.08700762370695037, 0.1394953696882509], [-0.12604759431850318, \
0.13891071881110223], [-0.1381461601158311, 0.09502656308642161], \
[-0.0969725325459451, 0.13967823306077354], [-0.06534544144863604, \
0.13855751855949805], [-0.13918820923827444, 0.11238223931906564], \
[-0.13822171041266815, 0.11147924596190117], [-0.10097440187322375, \
0.13803798363004174], [-0.07936568004109565, 0.13787136249143228], \
[-0.0844244931475015, 0.13808937709651756], [-0.10995178929985842, \
0.13755052702131837], [-0.07092076782555508, 0.1389535657082624], \
[-0.10583859188256613, 0.13876446246452245], [-0.08466340341225846, \
0.1336961141339761], [-0.08774015368719063, 0.1392374952127316], \
[-0.12076837562058096, 0.1379021119064657], [-0.09638131361047776, \
0.1389690825480083], [-0.10354910483214394, 0.14072013224016666], \
[-0.12236607736065858, 0.13772808048427954], [-0.11678296235171334, \
0.13793991170515943], [-0.05392416311733852, 0.13793677339715102], \
[-0.038364906975300046, 0.13419165127875143], [-0.09978932730119011, \
0.13940913919573208], [-0.12640745037797693, 0.13876879126825886], \
[-0.09200687905621378, 0.14103322129484458], [-0.11908397319906115, \
0.13952905733121193], [-0.11698103253400455, 0.13881981848655212], \
[-0.10724640281374286, 0.13777489793113298], [-0.10818358716238903, \
0.13896153059616786], [-0.11425778177186782, 0.1390689508364298], \
[-0.12738772925198694, 0.13625779564299603], [-0.08184036158720419, \
0.1394169076977804], [-0.10963497158424268, 0.1395466653196125], \
[-0.10600754891535079, 0.13878976425078968], [-0.07786604468200943, \
0.13599257737830578], [-0.13912404714604357, 0.09827248313882347], \
[-0.07330494062482792, 0.13831235032023617], [-0.07165672528523596, \
0.14004663005235626], [-0.10029195678086694, 0.13758003140268407], \
[-0.1199985994276968, 0.13920196709298946], [-0.13650403144680667, \
0.1293965568558358], [-0.13179508776817794, 0.13896290224308197], \
[-0.047540371169126905, 0.13746971216631373], [-0.07063458309531218, \
0.133992830665773], [-0.08718536478979437, 0.13982456221382883], \
[-0.10139504336520604, 0.138958617566719], [-0.1318659685138969, \
0.13488520331266385], [-0.13913327263887063, 0.13663990688312275], \
[-0.1331114924029333, 0.13925357466631064], [-0.07572733207768992, \
0.1405205176392449], [-0.032494752130229385, 0.13549616347185722], \
[-0.13865689067580766, 0.08243591853566665], [-0.10753181117422113, \
0.13883144574887613], [-0.13650612260813014, 0.1273087356418484], \
[-0.12038965317211436, 0.13739053133752868], [-0.13650919918761434, \
0.13941875532005252], [-0.13207071161891468, 0.13462625745486312], \
[-0.13241009401822326, 0.133991617576015], [-0.08760646269753983, \
0.13938412102167286], [-0.09362193167877786, 0.13324218470103824], \
[-0.09406601463224372, 0.13791633575300527], [-0.13910466387994733, \
0.12635531265270109], [-0.09058394161514674, 0.1363495398311814], \
[-0.1384033504582282, 0.13849816777960203], [-0.1347171608933362, \
0.141178042041095], [-0.1382486663768749, 0.0893838412588704], \
[-0.12546562527781097, 0.13856200532373147], [-0.138549953103959, \
0.09542696267698624], [-0.13714231723777692, 0.11673422316979373], \
[-0.13456298713332246, 0.11228122556956863], [-0.13567887273880694, \
0.13263933783655107], [-0.13175008265164756, 0.06965778905164778], \
[-0.12965651730978509, 0.13947011976615964], [-0.13880241443857758, \
0.0711392915844217], [-0.13900564247083277, 0.12090740062157647], \
[-0.13813419895999837, 0.0886905270605459], [-0.12799454566149762, \
0.1398236081078763], [-0.13843947329979622, 0.09910257235459383], \
[-0.13527742250930339, 0.0755995633304248], [-0.13678194655123016, \
0.011006672261544285], [-0.13660754035769146, 0.0564623449417947], \
[-0.1377543880934538, 0.022295351029314098], [-0.1382323668839976, \
0.08211270575849217], [-0.13777957798809215, 0.08278122357804346], \
[-0.13810045153861752, 0.0], [-0.13964040231408423, 0.10345748886222587], \
[-0.13741231946884508, 0.0715691429066744], [-0.13735605448077934, \
0.09480603652605106], [-0.1354869179544745, 0.08694940739528649], \
[-0.13786751948238987, 0.007755047970884416], [-0.1346447136475236, \
0.0509226419585424], [-0.13378470750157148, 0.0], [-0.13472383993404938, \
0.05067817154677356], [-0.1355437819099047, 0.13438493702295976], \
[-0.1372166369990951, 0.06931960040759855], [-0.13374332750133497, \
0.122909402550127], [-0.1406306393818178, 0.07077699217213554], [0.0, 0.0], \
[-0.13655614426500276, 0.08307258910529233], [-0.13712632500209357, \
0.05626965891780173], [-0.13765376100551785, 0.1171040186139388], \
[-0.13785349145202655, 0.11305498290664423], [-0.13846743778197965, \
0.08957486735480845], [-0.11731658937604407, 0.13582908632876378], \
[-0.06784178123786258, 0.13537396692676298], [-0.14010512584021065, \
0.12947319917843791], [-0.09865595104635115, 0.13632753531490643], \
[-0.13822909507956246, 0.11936979968242081], [-0.13869453224749984, \
0.1350274588467], [-0.10574879923120291, 0.13673716216531057], \
[-0.10895963246333328, 0.1356156724076301], [-0.13066768208485918, \
0.1375420946745377], [-0.11736142245392897, 0.13677953487501995], \
[-0.13285169904387117, 0.13585155163628687], [-0.14022636029476954, \
0.13017442861538422], [-0.08989763311038863, 0.13872008415444476], \
[-0.07351669703657424, 0.13522058050483846], [-0.08667319586549779, \
0.13738244286001017], [-0.10434389561574196, 0.1390840471929296], \
[-0.04724198804749661, 0.13660126741340461], [-0.08688356702137719, \
0.1364505821079181], [0.0, 0.0], [-0.10663323120415756, 0.1368939796501782], \
[-0.058009695799991746, 0.13830000092353065], [-0.07706047818076214, \
0.13645261114203228], [-0.09403480816377655, 0.13623421358265367], \
[-0.041492493323748894, 0.13731293160871463], [-0.09218701281453254, \
0.13858880285619202], [-0.12379696313296379, 0.13810931197560194], \
[-0.09979670805579988, 0.13969199066549473], [-0.07485973403146698, \
0.14019799251674073], [-0.03106835575639864, 0.1391837042893501], \
[-0.07925425839079224, 0.14002860722631635], [-0.1062931563350048, \
0.13708044159385854], [-0.03670200348258593, 0.13558930937477578], \
[-0.06560536959103022, 0.13775464114097902], [-0.09529557007501312, \
0.13686750071933232], [-0.11487556633391025, 0.13961659398631074], \
[-0.05372457567302987, 0.13875623013826222], [-0.10154950918686889, \
0.13805217284641275], [-0.06401337826915544, 0.13527354458104682], \
[-0.092884864553495, 0.1623053227640973], [-0.10076698951033973, \
0.13767350022539346], [-0.0874868861524035, 0.13642617146931044], \
[-0.05600766527877904, 0.135068115077932], [-0.042480995469690336, \
0.1387516590212188], [-0.11925386786762975, 0.13867580027418286], \
[-0.032996573287501725, 0.14107198474783736], [-0.046735810889094655, \
0.13666752938106666], [-0.02430931919091589, 0.13608109817561415], \
[-0.0807350387998766, 0.13602773572588958], [-0.09150337028225664, \
0.13617245632643113], [-0.05780555776404986, 0.1371915977983751], \
[-0.1049104141787022, 0.139305635113427], [-0.1023337167485908, \
0.13589558801057836], [-0.08404796355828419, 0.1388695051656148], \
[-0.11311986975683928, 0.1389860213472627], [-0.13796876866896524, \
0.1201313160262521], [-0.11463221383920048, 0.1380046253886247], \
[-0.06500048638649922, 0.13805767520118278], [-0.0034092536212745623, \
0.13637014485098317], [-0.06239637466892087, 0.14079390558556962], \
[-0.10172568913227228, 0.13999496900033256], [-0.06660003841132432, \
0.1371433219808534], [-0.07154355466350326, 0.13891918655501623], \
[-0.04566082053203522, 0.13681051274381753], [-0.11263192102388178, \
0.13681302825382047], [-0.08142036530047267, 0.13908548434493356], \
[-0.12219127800657854, 0.13930646951955883], [-0.09979797974986337, \
0.1410518474691279], [-0.05082358986756806, 0.13732634993623147], \
[-0.09307173067959083, 0.13859013960594116], [-0.06615008226337162, \
0.13873459163107799], [-0.08267147781241722, 0.1364410897577926], \
[-0.12616307766820375, 0.1374101913235324], [-0.13852576119293294, \
0.11109586127684438], [-0.06776793541453555, 0.13652394549524974], \
[-0.11536631001638428, 0.13751935901630574], [-0.1227554487516993, \
0.13972136240192942], [-0.04529406768110778, 0.13915277215567137], \
[-0.06410747921627344, 0.13959229599703804], [-0.13396904139186425, \
0.10848927822401351], [-0.13998015033449263, 0.11792958129741819], \
[-0.1121078806607332, 0.13268459010942074], [-0.05732142764043823, \
0.13632423464666052], [-0.13018133895378617, 0.13907565385149617], \
[-0.1159379692577206, 0.1371138860716091], [-0.0976736221816189, \
0.13431606343114824], [-0.07789311248719612, 0.13837251450070925], \
[-0.06143560847774527, 0.138918638271914], [-0.10871276421664555, \
0.13651309846584242], [-0.08391840105522543, 0.13641975487500657], \
[-0.09890317702611806, 0.1384657175914252], [-0.13217234473412123, \
0.1356891399395247], [-0.11447875101946438, 0.13565081871525833], \
[-0.11823868574678878, 0.1352434047349676], [-0.10114985456357993, \
0.138405627263005], [-0.13568491680818115, 0.12264321157803262], \
[-0.13548246721906546, 0.12230592117515698], [-0.13982685629387245, \
0.09178356517120848], [-0.13915506910163913, 0.012176068546393422], \
[-0.13548346820982868, 0.03320898869733307], [-0.13692640592645303, \
0.12995918340198848], [-0.13359644991171524, 0.12227523027509724], \
[-0.12118971360239655, 0.13659576120962635], [-0.1387990858058411, \
0.03371995392012685], [-0.14106669846721454, 0.06290488101414825], \
[-0.14031198542858503, 0.1260795449094098], [-0.13456061796788313, \
0.08169668317824497], [-0.13688299835771434, 0.0026639832863721495], \
[-0.1384441768708455, 0.10971708796919168], [-0.13800615819423492, \
0.03420836659035639], [-0.1394848651902112, 0.13589404619131876], \
[-0.13690722988913168, 0.07062927038298815], [-0.1375062580524323, \
0.02466884588571558], [-0.13673306966742538, 0.08314393838626269], \
[-0.1350849785035329, 2.2173946380719925e-17], [-0.13850377584233362, \
0.026759831883134504], [-0.13738581657945412, 0.006875999120797878], \
[-0.1381470296836245, 0.07378694922605719], [-0.13843813284416875, \
0.09400345826688424], [-0.13705002097158067, 0.07821295747953165], \
[-0.13393982658832826, 0.09691261289518205], [-0.1343048808896814, \
0.031871599389166796], [-0.13680567909229938, 0.07862595257985434], \
[-0.1385779096300286, 0.07379027285225712], [-0.13596189825249996, \
0.0625561329768034], [-0.13755976776784248, 0.07882183692839392], \
[-0.13498803097898499, 0.06838401527098015], [-0.1245521763436495, \
0.13637743129608149], [-0.13746474503084538, 0.12461742759946393], \
[-0.13627763230339296, 0.13993417626629417], [-0.03303484873419747, \
0.1375907880551771], [-0.13856155176283338, 0.06649657403094913], \
[-0.1381159220971722, 0.12827328376459862], [-0.1375572669817788, \
0.13651447306554151], [-0.06622737348162552, 0.13890181960897632], \
[-0.1346661437128758, 0.11836749043559766], [-0.13716227278189713, \
0.13486281900544625], [-0.05487540453478964, 0.13561900771331142], \
[-0.08780925251117706, 0.1355667536994783], [-0.1255523662625499, \
0.13857308605902396], [-0.050391265729263036, 0.13764332519381114], \
[-0.10936942805049181, 0.13801098806722759], [-0.08318784103200995, \
0.1350643568088619], [-0.1114555442954108, 0.13752509458231585], \
[-0.10408509798243507, 0.13705271695878202], [-0.12308340856749009, \
0.13844902376236584], [-0.06944568344517559, 0.13802383644922084], \
[-0.1388446712250058, 0.1397025504453002], [-0.11923818362538106, \
0.13905377069167563], [-0.12946758431534106, 0.1351090247963748], \
[-0.10393262612142665, 0.1390642856823785], [-0.13559420212439668, \
0.1164401604312713], [-0.08208371515608462, 0.13857418729831936], \
[-0.11121618175907076, 0.137638983076576], [-0.08798700627180774, \
0.1385874798082208], [-0.07665341788467392, 0.1390181991923327], \
[-0.11974099153544444, 0.13878336803363198], [-0.12623849225671616, \
0.13414418381497806], [-0.019291756875239575, 0.13782078934289493], \
[-0.03635417630968777, 0.13703537396725488], [-0.09834417833705218, \
0.13986536304317845], [-0.13680340800818597, 0.13863063436432793], \
[-0.07350087672007308, 0.13839859937063026], [-0.031811449653200694, \
0.13625858537110977], [-0.1028341961140661, 0.13911075046221497], \
[-0.021934769226021306, 0.13768090394158689], [-0.04334364810027314, \
0.1353384034876133], [-0.13637232779843078, 0.13648963021137825], \
[-0.0697616502784785, 0.13413998153838064], [-0.08285736405154899, \
0.13795531392083998], [-0.061321367129709745, 0.13885991670413764], \
[-0.12239260151279217, 0.14040826142598267], [-0.07149004911155225, \
0.1390959632423319], [-0.1056546434245711, 0.13921336498911566], \
[-0.09430524276674247, 0.1349576833559893], [-0.09082499577188077, \
0.13880408803759833], [-0.0584574722441013, 0.13766713480679177], \
[-0.08311581576861003, 0.1401801389697393], [-0.12395470396771847, \
0.1390346486563463], [-0.055759984562904236, 0.1393287938596716], \
[-0.05116440653168831, 0.13711554209207347], [-0.0927900540703459, \
0.13605344546956186], [-0.1392222682582582, 0.13683805072843155], \
[-0.11159820158565525, 0.1382697857178907], [-0.12112629705476373, \
0.13671571227654047], [-0.11813789000287807, 0.13671303095163892], \
[-0.07398895969533488, 0.1369263989430986], [-0.10654156403918416, \
0.13956517271603405], [-0.011476946631691713, 0.1347825859960679], \
[-0.08641271724832528, 0.13825233251208396], [-0.0961367578642796, \
0.13931591735864243], [-0.10928454741981616, 0.1349092745102114], \
[-0.06055386970357794, 0.13749254418964343], [-0.0863976937822063, \
0.13816886198291717], [-0.12213339460658278, 0.13601976315006897], \
[-0.03413989591442383, 0.13825998738142542], [-0.07391074424941002, \
0.1386350059489275], [-0.07658989894881432, 0.1400581688586874], \
[-0.043069654568139534, 0.1346646402341416], [-0.1318818484751441, \
0.13760063519863788], [-0.12156101260961628, 0.13639938833391443], \
[-0.12724585318622722, 0.1376372530675222], [-0.07679552969880217, \
0.1418324414143136], [-0.10531858255384345, 0.1399424033956722], \
[-0.06400990712973142, 0.13993743357107333], [-0.05328774625147348, \
0.1386514499614115], [-2.2173946380719925e-17, 0.13933520014228087], \
[-0.1200096549295148, 0.135230063187496], [-0.1319854995945366, \
0.13846416271048778], [-0.13711650958451685, 0.12088527647118208], \
[-0.10360430763099365, 0.1379227802805209], [-0.11136555488413455, \
0.13562542696953483], [-0.09947983364054638, 0.13683756923063783], \
[-0.060232958842209944, 0.13749508029992671], [-0.0185923028845284, \
0.1386349967254919], [-0.13922097613653603, 0.0967061869895098], \
[-0.136931948154262, 0.10437740280762745], [-0.10659801330499757, \
0.13558796208174326], [-0.08885645930681213, 0.13443576866737286], \
[-0.1391160445335756, 0.13987075518766295], [-0.13950794914675976, \
0.12707650428876266], [-0.1277586256167856, 0.13462282971444356], \
[-0.09687391730107121, 0.13923825644468105], [-0.13755984228898127, \
0.09285584684754863], [-0.13988317845428963, 0.06513286676011149], \
[-0.16514881585388602, 0.14830959463367235], [-0.1652976676333247, \
0.16010942779249798], [-0.1317947102632899, 0.13845276620176566], \
[-0.09555254231091011, 0.13445040113067142], [-0.09537010199883371, \
0.13368603603604953], [-0.1355690205968504, 0.13470949414118935], \
[-0.16460580202571296, 0.006172717575964219], [-0.13448995609308098, \
0.013567939757065686], [-0.16658019317987882, 0.011606930452523753], \
[-0.1649329125765656, 0.03995470438470241], [-0.137430422320444, \
0.04793115634494746], [-0.1397369157241732, 0.030115594220010825], \
[-0.13865892035750205, 0.05543934347737184], [-0.1373031139158757, \
0.10170698323796079], [-0.13437751594876704, 0.10433556143176471], \
[-0.13702595400957054, 0.07496201474544939], [-0.13288808618928544, \
0.08172676996146984], [-0.13710456118440748, 0.09172946048888654], \
[-0.13870468113162274, 0.0972406356257904], [-0.13699789825260134, \
0.033111087695068674], [-0.13400169384116312, 0.1282766171501396], \
[-0.13729301440913716, 0.08704040818864295], [-0.16431816262331542, \
0.16137890031909843], [-0.16432875252967222, 0.16714799067895833], \
[-0.16645314320622318, 0.1148927674751133], [-0.13710647571725443, \
0.09691108566621774], [-0.1205454265654448, 0.13922564598255285], \
[-0.11635120463764322, 0.13607155750802155], [-0.13654458308533815, \
0.13465092665550701], [-0.12053293335542602, 0.13834822077829148], \
[-0.16875966533003323, 0.12312142246621802], [-0.1675551625729616, \
0.14932159001486794], [-0.1277873985361627, 0.166748269521248], \
[-0.11075851793911103, 0.1691133219910695], [-0.13577475442656953, \
0.11050967159296834], [-0.13953931754251672, 0.10044975855604074], \
[-0.11979498394697782, 0.13784095410199332], [-0.111870189357754, \
0.14068356607066473], [-0.0913781392367451, 0.13629153350970538], \
[-0.06924483729036472, 0.16733101688645638], [-0.07819549932974584, \
0.17107534040691277], [-0.07303102791502071, 0.16819539828441393], \
[-0.13069944295740935, 0.14095986982558664], [-0.1383851936711623, \
0.1332185233536043], [-0.061725115202059366, 0.13804120763843328], \
[-0.10722376735614442, 0.13922921436940647], [-0.13069627990329613, \
0.13630420853128578], [-0.08492601073529615, 0.13917888436524356], \
[-0.08698405309978212, 0.1389153902533622], [-0.013697587182518475, \
0.1369758718251848], [-0.0341492907056371, 0.1394329904111771], \
[-0.1053780581173772, 0.1380962852417306], [-0.0518314016403564, \
0.1391762472569265], [-0.12278766841618911, 0.13728913292912148], \
[-0.07224714610406766, 0.13979471168048255], [-0.058996147370008044, \
0.14009514051603741], [-0.0982649161960617, 0.13815694794647912], \
[-0.04516871523087527, 0.13770761706780588], [-0.10357958255183225, \
0.1384418611076175], [-0.13036912063673398, 0.13882991335210104], \
[-0.13776099038752895, 0.12086692354255843], [-0.08565831038833141, \
0.13853438592127015], [-0.09165771686542963, 0.13742554693008285], \
[-0.04477900254085072, 0.1360814847050922], [0.0, 0.13824290132113445], \
[-0.06947908965300524, 0.13374181135086033], [-0.11048800563914273, \
0.13858290830010378], [-0.061690748758046435, 0.1374681965188896], \
[-0.12853648871630352, 0.13780425273073277], [-0.11453827703100522, \
0.13890587551140451], [-0.09782376273160316, 0.13742430729991223], \
[-0.028537412904213962, 0.1351521088301914], [-0.07092851277996762, \
0.137658549509273], [-0.1382914777679559, 0.13772032670701453], \
[-0.04155192676434555, 0.14136193853626092], [-0.1388540904551459, \
0.1261497491141313], [-0.1027887752102867, 0.13803808241695442], \
[-0.0819620176865803, 0.13981637801451052], [-0.04077501683968348, \
0.13374952253817565], [-0.06764707918385623, 0.13820360150905586], \
[-0.025270110052489792, 0.13931650624654632], [-0.12463997241053039, \
0.1376692493469685], [-0.08445637952555266, 0.13447440559415755], \
[-0.08231337883456259, 0.13904702623230317], [-0.022724764360479575, \
0.03559300442002826], [-0.033836514182512795, 0.13879581768102828], \
[-0.09868836272405597, 0.1359221709532476], [-0.08221440944055632, \
0.13716570416663204], [-0.07007904809916908, 0.13562688443792056], \
[-0.09213645174689221, 0.13798581386486697], [-0.12388705034255502, \
0.13647339393247568], [-0.07081171945787651, 0.13822657515001213], \
[-0.11216705841038176, 0.13957111023217475], [-0.08816077270420347, \
0.13949967834172156], [-0.11976733406758246, 0.13855812611212642], \
[-0.04637685344142178, 0.13456396581240918], [-0.024094563436503267, \
0.13671312304438243], [-0.010227302744254856, 0.13636403659006477], \
[-0.07957344833177106, 0.13488268607998793], [-0.07124803008140584, \
0.13668473253978494], [-0.031806713213354966, 0.13885782411661057], \
[-0.08194007197997008, 0.13754438713631256], [-0.0406735569151346, \
0.1355785230504486], [-0.0690992702010579, 0.13676285451004253], \
[-0.061803002566246754, 0.13513585183590568], [-0.08717037009171127, \
0.13877178653666317], [-0.10592289223548543, 0.1398455660313021], \
[-0.03748105353277611, 0.13886074522323086], [-0.0953809767459712, \
0.13794788542574715], [-0.0034174852978467525, 0.13669941191387042], \
[-0.09413630058247319, 0.13923540577385848], [-0.10394266862951253, \
0.13699931876798443], [-0.138880017297348, 0.09617613044633452], \
[-0.12312590202093364, 0.13806557498226732], [-2.2173946380719925e-17, \
0.13680640432139135], [-0.07376323046994114, 0.1349795865140614], \
[-0.06986974853848978, 0.13882821395662207], [-0.013938991967606677, \
0.13429897950667738], [-0.11029968857142279, 0.13657292618090672], \
[-0.10727483550574303, 0.13597831546110267], [-0.11264258005925121, \
0.1353013028552841], [-0.13541091921086756, 0.1335573975264698], \
[-0.010083778510923918, 0.13796732635731], [-0.11815108697869894, \
0.13558247055062503], [-0.12408841281764972, 0.13959030751143675], \
[-0.1391823172060172, 0.11737254402659883], [-0.12799014055490457, \
0.13736161640448882], [-0.13597623906436113, 0.0908793533047081], \
[-0.13578752307445793, 0.09267812227601628], [-0.13559074388204534, \
0.06598759791488382], [-0.13918945587604475, 0.08312447443140539], \
[-0.10120303795000442, 0.13925569892853634], [-0.1388955611770195, \
0.1391547858400625], [-0.13792724726717295, 0.13397852171440658], \
[-0.13246259576901934, 0.025408577690217028], [-0.16352473016290706, \
0.06838059240739945], [-0.13718603199925747, 0.010151632397210668], \
[-0.14172591871213144, 0.012549260927901755], [-0.14077737273853916, \
0.141440752222684], [-0.13617530718646093, 0.015259832056336834], \
[-0.13872374444656885, 0.05829717459564824], [-0.13504299483084253, \
0.016143318891804696], [-0.13831875206599462, 0.054375102612302405], \
[-0.13737802278304342, 0.09970363631485171], [-0.1346531192897852, \
0.10006576724252073], [-0.13813431080086505, 0.01065878868908504], \
[-0.1390827118562676, 0.07885713446640549], [-0.1403054315686258, \
0.06306302396366632], [-0.13758270765178474, 0.009171267958768457], \
[-0.13540087029468745, 0.02416983202067143], [-0.1327998901534477, \
0.13625341532378463], [-0.13754313329033796, 0.08670590787630696], \
[-0.1372612751088666, 0.09085384964389363], [-0.17024390726295993, \
0.10721863068092546], [-0.13669485179257682, 0.07345107723972716], \
[-0.1287534857571226, 0.13482335364832942], [-0.1349895288688647, \
0.05830384049429343], [-0.12446842277090407, 0.1384137123833024], \
[-0.13319261694757875, 0.11913860044198206], [-0.07822938728477388, \
0.13769051577574318], [-0.13852127224567898, 0.13148427711393862], \
[-0.057057510546715644, 0.13640286834367446], [-0.08547715198503918, \
0.13316542460973743], [-0.09310316034273415, 0.1367512498268321], \
[-0.10547006621088638, 0.13787541563688316], [-0.09854223431954337, \
0.13537491854659575], [-0.10922876644089345, 0.16685797266754682], \
[-0.04523660694000428, 0.13646403229802898], [-0.07008944583329105, \
0.13722931828325854], [-0.08745448101502865, 0.13603995509850897], \
[-0.08327760518872568, 0.13793771367613983], [-0.09275991912349477, \
0.13737892980585237], [-0.08736782971740421, 0.13925503527340907], \
[-0.13912327749334796, 0.09309521437342227], [-0.09189577775045481, \
0.13768063816473752], [-0.10345676663044465, 0.13938619995942578], \
[-0.06326553793879021, 0.13826793089470354], [-0.1122755946197061, \
0.1377938427845873], [-0.031309963677471166, 0.1385279684271294], \
[-0.06852301561718456, 0.13894343000782167], [-0.06398682406957913, \
0.13155425786480762], [-0.09756303864948888, 0.1367133053029414], \
[-0.07841870201641701, 0.13860347631383899], [-0.0645073308838914, \
0.13828561902552866], [-0.04894806946532528, 0.13472418516936355], \
[-0.07784579188880786, 0.13871042932926977], [-0.06721883131112848, \
0.1396794855894278], [-0.12059006492191986, 0.13664872537662423], \
[-0.10112074293708193, 0.13708853570123117], [-0.041187953418424864, \
0.1397477889865923], [-0.07486390979830966, 0.13684161850947146], \
[-0.0412627058271158, 0.13666183129255025], [-0.11514062485606766, \
0.1383682185811042], [-0.04414707680902661, 0.13891848892283643], \
[-0.0453699021537065, 0.13745203445164908], [-0.09004479686515286, \
0.13818570105781647], [-0.08425851679102224, 0.14239685418292053], \
[-0.07760916078970237, 0.13852601108807466], [-0.07049783372497673, \
0.1371241216619472], [-0.050001912262379974, 0.13840476366540727], \
[-0.1395458502411524, 0.12345772064209472], [-0.05720128699438503, \
0.13532076760621534], [-0.06842140053613778, 0.13647779209130925], \
[-0.09622380288312209, 0.13993876687165252], [-0.10644660941261214, \
0.13707089633171815], [-0.032795699430481245, 0.1364012628542061], \
[-0.03336424138297401, 0.13857403579004418], [-0.09413356042666958, \
0.13797577668722727], [-0.024782716993039976, 0.13975010848247188], \
[-0.06895060879100483, 0.14067609283860477], [-0.009375913791682894, \
0.1369605666573934], [-0.10698909776839217, 0.13533459419535263], \
[-0.12362677808666668, 0.12920279171212534], [-0.03248313316722582, \
0.1384653602064039], [-0.08278776729097632, 0.13716166399303195], \
[-0.08529190217151228, 0.13692992901667445], [-0.0831096544431725, \
0.13802033336398875], [-0.06100392727697483, 0.13648237257292284], \
[-0.07321423057130219, 0.13899032882389345], [-0.05535005147050795, \
0.13577247833484718], [-0.017657066540173662, 0.13760149267228197], \
[-0.0814735911694462, 0.13971497843842928], [-0.11037542873816204, \
0.13835879860399428], [-0.07750534532132353, 0.13963183195399811], \
[-0.06314035671258522, 0.13903010203348917], [-0.011079430419753126, \
0.13815651951979102], [-0.01087352969366094, 0.1380385418033273], \
[-0.0678494200681875, 0.1376232175113667], [-0.09682179890893394, \
0.1386747362444406], [-0.03402364719617711, 0.1376487885063214], \
[-0.10009579811531696, 0.13688749054116092], [-0.02356201848161172, \
0.1372331771801812], [-0.09052115573376643, 0.1392190189566137], \
[-0.0983137053435781, 0.13714474742706573], [-0.04600794580510258, \
0.13792472424185284], [-0.08404707236218063, 0.13941272600560026], \
[-0.04888008634764169, 0.13799715235496768], [-0.02707670007238105, \
0.13781469748149036], [-0.12115315336962744, 0.13683400575103785], \
[-0.13781700543509706, 0.1188543179134774], [-0.09182110983509849, \
0.13582673368103673], [-0.08424725723477093, 0.13434146987909035], \
[-0.0930430262008201, 0.1376167320018464], [-0.12909253637905332, \
0.1392503002156167], [-0.018369764617690312, 0.1357433806134937], \
[-0.05820540327298011, 0.13788257055944342], [-0.09771681632332287, \
0.13803884117300325], [-0.13830413874380862, 0.13698635189355382], \
[-0.054997820625238905, 0.13736506473295246], [-0.11050646868667378, \
0.13853823551561611], [-0.1388678302572034, 0.1375576191744628], \
[-0.10027753713125612, 0.14091896887916708], [-0.12299684478871961, \
0.1369544823118745], [-0.08560324199323624, 0.13715803726577702], \
[-0.1388561482418587, 0.05763899702966178], [-0.13842525953885723, \
0.13262597251006306], [-0.13903010473457264, 0.11191591756715978], \
[-0.1382657116806944, 0.045049086524579764], [-0.12557429967937078, \
0.13487092861558594], [-0.13668039214199543, 0.10854348655847487], \
[-0.10875511334108541, 0.13757961746559016], [-0.1377437986508155, \
0.11846450651610096], [-0.13787255999318623, 0.060602328902715615], \
[-0.13761614761957264, 0.08140182646213405], [-0.13682009631784073, \
0.025740041684754307], [-0.135782848609008, 0.029618257889414898], \
[-0.1375236387898343, 0.08326341619675902], [-0.1392386774069528, \
0.022132544012504286], [-0.13684192299177603, 0.056587074899814654], \
[-0.13860751204885932, 0.08161718564111488], [-0.137771790757928, \
0.0640521277167148], [-0.1373589760529315, 0.035852613784107375], \
[-0.1380403519683013, 0.06531852668131907], [-0.132709880224766, \
0.10538268997048597], [-0.13868766845981334, 0.05861239271517785], \
[-0.13526622096415616, 0.04193441317842042], [-0.1402160722057074, \
0.03401627583426361], [-0.13304515223088798, 0.06515017763788922], \
[-0.11506418319577294, 0.13539143431576817], [-0.13684900214996043, \
0.05705047661319388], [-0.11829440480884405, 0.13438525446678257], \
[-0.1383323247404768, 0.12235516512903438], [-0.13854489281821966, \
0.09914269268999706], [-0.11742516229398692, 0.13818419057361073], \
[-0.12320640983094984, 0.13757360146345338], [-0.1379181148620113, \
0.07353694922143886], [-0.13534783532933384, 0.06927245187717432], \
[-0.12160451811950246, 0.13783622258759143], [-0.1382330867808341, \
0.10719059369314993], [-0.13722172077973804, 0.12169919622383989], \
[-0.09000118579089796, 0.1381175725622662], [-0.039263636894842656, \
0.13757641103047472], [-0.09823574882921857, 0.16918665042506287], \
[-0.1652882913961631, 0.10581185671504463], [-0.132943582785049, \
0.13834987639815233], [-0.05220016571964279, 0.13528804508363507], \
[-0.13627112635053715, 0.1380754169875533], [-0.06981834041162342, \
0.13647364439988316], [-0.1333740359138212, 0.13849556096622181], \
[-0.13878161002479164, 0.13745534781496738], [-0.08359407876178715, \
0.1387297141611201], [-0.08731468426376486, 0.1396637995731895], \
[-0.13814789437257877, 0.11688725131809066], [-0.10618442125158589, \
0.1401371842291532], [-0.13906044978993365, 0.1372591265248918], \
[-0.11210091190887773, 0.1379050618462499], [-0.09234751346683524, \
0.13497726171875743], [-0.07811336857605718, 0.13948538007725433], \
[-0.08867685137691728, 0.13762679028218527], [-0.09059497395416553, \
0.13859536400748423], [-0.06937762714832113, 0.13840718814075628], \
[-0.10526976038589843, 0.1381682167085349], [-0.04810398354421631, \
0.13517094682341485], [-0.03129724568212339, 0.13909886969832616], \
[-0.016749612388574062, 0.13734287121838337], [-0.08831273883485483, \
0.13837373153082627], [-0.07477930107829392, 0.13847894285013296], \
[-0.08140453694777475, 0.13863580357996966], [-0.10761238120665832, \
0.13702647474530197], [-0.10936783293172413, 0.13705460842840728], \
[-0.08492170505609009, 0.13805360517090812], [-0.004814059607899291, \
0.13921727976483753], [-0.03989637874140418, 0.1394570432326215], \
[-0.03167453686798233, 0.13891155757497317], [0.0, 0.13823887291810016], \
[-0.12477623992923013, 0.1372901429766987], [-0.039454510304669184, \
0.1391106105826211], [-0.13677553997651717, 0.13360307332666355], \
[-0.09165565061079076, 0.1368816105723387], [-0.12115469796529757, \
0.13386269378325336], [-0.11134515148998499, 0.1393119303652915], \
[-0.021838032112826464, 0.13442985822735132], [-0.07106563587703592, \
0.13979696612886347], [-0.08442875294523863, 0.1376257667831651], \
[-0.0967200530004024, 0.1397163442612069], [-0.030451379321824342, \
0.1349561268962518], [-0.13510007625166412, 0.13597722957356215], \
[-0.08723038033010846, 0.13871879813659746], [-0.0796134825235766, \
0.13850753490078796], [-0.04514553335862869, 0.13438058717356172], \
[-0.09624614749573054, 0.13921539449675607], [-0.05202855644182254, \
0.1375088363462278], [-0.09725448202263336, 0.13689617159963846], \
[-0.05159827494407909, 0.13767135187881382], [-0.11398212400306794, \
0.13463675863949387], [-0.06791591488538881, 0.13489627596482898], \
[-0.09086378534562674, 0.13768473243888354], [-0.05655198079920687, \
0.13586552160703547], [-0.017558834233139347, 0.1348607703781981], \
[-0.058969199318836485, 0.13849618390255286], [-0.020707039353629844, \
0.138046929024199], [-0.04056720712975793, 0.13601496021892384], \
[-0.0798126051301683, 0.13947279826665124], [-0.07605081285812137, \
0.1395455649862168], [-0.041062542344467226, 0.1390057686831728], \
[-0.09734945403903868, 0.13754999918507776], [-0.08502193480141784, \
0.1384636920204658], [-0.018762802460758964, 0.1384858194179824], \
[-0.0803211182876903, 0.1390355278829538], [-0.13691807078641202, \
0.1136661547167448], [-0.12498505781782905, 0.1366966640183378], \
[-0.0736476888132358, 0.13725209068523725], [-0.13431256512124876, \
0.13856461054188485], [-0.09737576595176003, 0.13835525152006953], \
[-0.061656967167338476, 0.13810789075528865], [-0.03397063749360768, \
0.13773738271693137], [-0.061533262543471155, 0.13835232035729764], \
[-0.1351895179851354, 0.13041087951244046], [-0.13343431904873243, \
0.07743068852789252], [-0.09351773048742212, 0.13842839431136658], \
[-0.040490915291348704, 0.137391864607076], [-0.07342398337716675, \
0.1353829524796823], [-0.08446272635465359, 0.13706849672982294], \
[-0.09181209901598886, 0.13738155372708713], [-0.07027054132900408, \
0.137146875791531], [-0.13857371681351732, 0.04955731920328169], \
[-0.13672309378001163, 0.12981610301186358], [-0.12901436589808432, \
0.1378921780976224], [-0.1368943569752891, 0.13728386343080004], \
[-0.1058824027469435, 0.13896146086904987], [-0.1387464365200759, \
0.11835679744371035], [-0.15727907144813683, 0.1664295697926756], \
[-0.13715292316592734, 0.12021325287422517], [-0.135417821334161, \
0.046722179604507266], [-0.1379278318626799, 0.07255014574359063], \
[-0.14010182834464505, 0.045969589894141835], [-0.13842160012614244, \
0.1181941342797167], [-0.13839201561473297, 0.12371387350550299], \
[-0.12279698226368765, 0.1383551818661234], [-0.1288601679595495, \
0.13410325428384334], [-0.13530569569230438, 0.053972037393511245], \
[-0.13666777165967578, 0.06039995553660603], [-0.14079967849736472, \
0.02445917402378154], [-0.13663001588546725, 0.10398084227184448], \
[-0.13925660843137402, 0.0317713153471402], [-0.13727812404013848, \
0.1291424618930821], [-0.1332159623564106, 0.0], [-0.137019454076314, \
0.014640000553799173], [-0.13307189983857254, 0.12827781193373783], \
[-0.1371544812824253, 0.024131021438296322], [-0.13777984138819965, \
0.06365796649002159], [-0.13774774309049598, 0.13036918329639718], \
[-0.13610317528588828, 0.13180450818222356], [-0.1373100579613799, \
0.08116221520127294], [-0.13811696315417002, 0.036359399123280955], \
[-0.13707230268057877, 0.0635875562370631], [-0.13775800324863557, \
0.09260953673144069], [-0.13922812925849898, 0.11406101229873046], \
[-0.12644662674082935, 0.13770699317173848], [-0.13626074824267978, \
0.09307004136760046], [-0.12859020447543013, 0.13788469754451277], \
[-0.11311261553394382, 0.13804749604913255], [-0.13615723205058633, \
0.12364487868274932], [-0.12961167515201028, 0.13288152118342456], \
[-0.07440604976720126, 0.13880588693365267], [-0.10830485653598544, \
0.13786207514406085], [-0.04997627023099833, 0.13964024219047946], \
[-0.12040219935365651, 0.13857638978967962], [-0.12439946531274441, \
0.16321014237316783], [-0.13894726847325306, 0.12628941399989854], \
[-0.16831340873428532, 0.1116114131493023], [-0.12404687104571897, \
0.16764718233054818], [-0.055358566764660645, 0.13916096748511483], \
[-0.06272791460603422, 0.16608263340682317], [-0.1355643403497425, \
0.16859678950952223], [-0.16829836844874907, 0.14304831077034763], \
[-0.12628252649751942, 0.1397061288383196], [-0.12689761482210005, \
0.13890908799207705], [-0.13242739529325892, 0.13990291029076019], \
[-0.11177589769944672, 0.1406805647301038], [-0.045524085980688245, \
0.1384101500105963], [-0.11259248870093395, 0.16893499062572964], \
[-0.12626016274877, 0.16926239398917503], [-0.07313067720972913, \
0.16833163355626876], [-0.13678703377081072, 0.11935764065200236], \
[-0.0766183675252579, 0.13864569297754104], [-0.04644606317754861, \
0.13970056232648256], [-0.016107626316834933, 0.13892065058407255], \
[-0.07917434455831886, 0.13586615053838827], [-0.05172526090611843, \
0.13855837601474466], [-0.06504145973228743, 0.1380014204795938], \
[-0.1208687898737281, 0.13508553520222502], [-0.09769530630372912, \
0.13794537148772656], [-0.07010379314211831, 0.13861165941004303], \
[-0.07950998488480807, 0.1392987503612556], [-0.05427176975783181, \
0.1392640974593155], [-0.054852042119737786, 0.13871741051228284], \
[-0.13819925654030454, 0.12527236695969543], [-0.09415360903876539, \
0.13917051872924233], [-0.07347055956310085, 0.1383146245181106], \
[-0.053290695535872096, 0.13797081469191708], [-0.0693456872519253, \
0.1384191161732737], [-0.10483721644408225, 0.13857281152652878], \
[-0.08553762839082252, 0.13768432445995477], [-0.11916284095670004, \
0.1341539298570775], [-0.029998040424387425, 0.13798394711372136], \
[-0.03915120259042753, 0.14107344708489977], [-0.020129405501083917, \
0.13419603667389274], [-0.08725332040829614, 0.13825224383319354], \
[-0.0929865940281218, 0.14197234963277514], [-0.11091544509577578, \
0.13904447588147525], [-0.02637387187788778, 0.1386125139417301], \
[-0.08830602765735583, 0.13823438276819827], [-0.07610738206281241, \
0.13841732403699109], [-0.06667312294140909, 0.13647609405421549], \
[-0.05910321634573905, 0.13892419195162165], [-0.03836375615284783, \
0.13788650490477247], [-0.034094318151680285, 0.1375194887706669], \
[-0.08870385642298384, 0.13808666178496523], [-0.07057660424996237, \
0.13800402187586905], [-0.06086335373756548, 0.13873240873857695], \
[-0.061034699560773335, 0.13684577208404708], [-0.09452070953950553, \
0.13892111244363195], [-0.0858960748980418, 0.13844900237509492], \
[-0.021434414135941875, 0.13714783671431888], [-0.06149711437250542, \
0.13909871358383707], [-0.08675024172419768, 0.13970105829478305], \
[-0.07869416293635541, 0.14057161135273388], [-0.13127992324606258, \
0.13421466283182754], [-0.06449062056359485, 0.13925431583200434], \
[-0.0950821781687275, 0.13964963843299374], [-0.07030726484375566, \
0.13981633630168733], [-0.10057202751473074, 0.13549112648667502], \
[-0.030538292632030447, 0.1378971383572937], [-0.08408752790850427, \
0.13948434839560547], [-0.08489856039717943, 0.13925298430016952], \
[-0.12360989558528458, 0.13496197006345662], [-0.09106597833377149, \
0.13551888738795684], [-0.10702304470948543, 0.1382856998909506], \
[-0.12922994656820377, 0.13924796103598666], [-0.04142896627912658, \
0.14066817612464658], [-0.003438499425265051, 0.13753997701060305], \
[-0.08833252740443596, 0.13614196861050196], [-0.07351165588674108, \
0.13546118852743042], [-0.08577430740252384, 0.13722268707078245], \
[-0.07205468122658686, 0.13354242562037597], [-0.13345056291246377, \
0.13827651223072343], [-0.07512183754329134, 0.13921433255825794], \
[-0.07960222207772731, 0.13636840966732974], [-0.138594616350203, \
0.12854152857709003], [-0.09878830109607438, 0.13939599580154105], \
[-0.08822515144878379, 0.1375097135010916], [-0.13707247889377866, \
0.11047138578222657], [-0.12973266824453755, 0.13991434779468068], \
[-0.13480838008789395, 0.1151902488126715], [-0.13386473084954076, \
0.12552155453499672], [-0.15607768865225852, 0.1680285244522067], \
[-0.1573618578257503, 0.16363238470205055], [-0.1150146601752284, \
0.1343619783237564], [-0.10753926590761546, 0.16665567865353156], \
[-0.1387052285806825, 0.1258975297987923], [-0.1374438734561597, \
0.042196577435135114], [-0.14134146085832802, 0.09004738887205872], \
[-0.138855794417661, 0.06104787848477937], [-0.13959236993329616, \
0.1368959121207441], [-0.13776391903494783, 0.13229913102947302], \
[-0.13820790888770926, 0.11360139216311811], [-0.13315625336314432, \
0.13805683472492108], [-0.13543785406870437, 0.05908886717715044], \
[-0.1376481155467682, 0.03419347247558591], [-0.1365505998194968, \
0.07982465146128456], [-0.13788763771274998, 0.04689966090008332], \
[-0.1375600791867516, 0.05270951134649592], [-0.13819735284247756, \
0.10110018196350877], [-0.13482156336991202, 0.0], [-0.13841503843839162, \
0.013309268283437595], [-0.13342708428782346, 0.10839509302510666], \
[-0.1331380675015352, 0.10680738671316585], [-0.13266781589690904, \
0.046682184517825354], [-0.13917566871587841, 0.13392307594476005], \
[-0.13805187903059357, 0.070796223893255], [-0.13999240349656106, \
0.04109069489527975], [-0.13836164465086873, 0.11023052640561039], \
[-0.13668813656805925, 0.03422191136683542], [-0.13685879323103844, \
0.13732481724876675], [-0.13672479909986054, 0.1138773157407], \
[-0.13698882877307292, 0.06487488229984355], [-0.12035519519047425, \
0.1329488717396521], [-0.08726996014285933, 0.13589062099626914], \
[-0.1387404038299348, 0.08898042592338577], [-0.13711918482281427, \
0.10835836944128525], [-0.13798715920907323, 0.09606856368713808], \
[-0.13501207111338567, 0.13992546489173097], [-0.13909409919608315, \
0.12901238114028493], [-0.1288673975414184, 0.13957692719743064], \
[-0.1382709832372712, 0.11877899700103356], [-0.16955404570314325, \
0.050901221189258425], [-0.14984222974213454, 0.1672069851617635], \
[-0.1060997225770424, 0.1334932987646656], [-0.07721125739727194, \
0.13730084807254553], [-0.05725069965840952, 0.16861905990175705], \
[-0.07522825937115932, 0.1685876298612844], [-0.16853443906690943, \
0.13461482110638837], [-0.08657917052138635, 0.13772438932621398], \
[-0.13831141168428968, 0.11321304334531299], [-0.05572019251870334, \
0.13888028273953032], [-0.13850362896452492, 0.11996847962776784], \
[-0.06700651051635936, 0.13727465508370348], [-0.1585401094574546, \
0.16938471306599473], [-0.11742375387038051, 0.17112431706210507], \
[-0.15958755416725917, 0.16911117513069215], [-0.13827932430165102, \
0.13903755319168098], [-0.11385465480097574, 0.13773149364507964], \
[-0.009652008260618808, 0.13476377328300662], [-0.07788556844589116, \
0.13448363981979639], [-0.07070924754500534, 0.13610030418559754], \
[-0.13543008630748, 0.12508914203375848], [-0.13326194568794025, \
0.12126375987444904], [-0.08997966762045105, 0.1393304175792486], \
[-0.12335544562572427, 0.13773783472905143], [-0.06864567191830984, \
0.1393063653022135], [-0.07664562313761607, 0.13942182692620383], \
[-0.13516545514575437, 0.1325517071758356], [-0.10548320024832689, \
0.1397128305085908], [-0.09448208251094367, 0.13828691021182274], \
[-0.1081294529363522, 0.13798541964638528], [-0.06594159653651398, \
0.13962195521274415], [-0.07810604033580143, 0.13919801017385275], \
[-0.07746491619706655, 0.13909051253063198], [-0.12253512822757598, \
0.14134505889623492], [-0.08532551062854887, 0.13799780852946295], \
[-0.0512577514840504, 0.1388567509970974], [-0.09802643087119653, \
0.13860728894882993], [-0.055154165231092206, 0.13989479612605776], \
[-0.07919953604380428, 0.1390402745528939], [-0.1222704975663625, \
0.13690849444145012], [-0.13905988625730295, 0.1399477187818889], \
[-0.07417725805205952, 0.13866770200163658], [-0.12771325857626825, \
0.13993992862507798], [-0.1011088234336278, 0.13660302991302548], \
[-0.09315745518024912, 0.13765743522140428], [-0.0870205504286332, \
0.13825664834937865], [-0.12264019831078807, 0.1360935954800797], \
[-0.09792941962836442, 0.13922432455076672], [-0.06186142642592744, \
0.14108877377606477], [-0.057898731737232485, 0.13840453440865716], \
[-0.11966706753427002, 0.13917134100560047], [-0.06153089469037331, \
0.13887849338024996], [-0.04166102955843476, 0.13995532974617333], \
[-0.07820219269409849, 0.1385379270598494], [-0.08134929839430437, \
0.13480628868028205], [-0.10971711994663441, 0.13662458326258198], \
[-0.061700234250189986, 0.138114355424551], [-0.018353419493368557, \
0.13658358692739386], [-0.07468431770505173, 0.13937602850414088], \
[-0.02311042848020618, 0.14006172609671735], [-0.05077225804655175, \
0.1389057997105029], [-0.05593867537253314, 0.13892475857726908], \
[-0.12210504246627218, 0.13802257313462557], [-0.1388996581326998, \
0.12603753292411618], [-0.0429620255435861, 0.13686576677532455], \
[-0.08223941300371819, 0.13899180145908613], [-0.056547064317361645, \
0.1361113357672197], [-0.11877663542059233, 0.13836817658680378], \
[-0.07113904602714684, 0.136620112062627], [-0.13839343649755745, \
0.13258069270436243], [-0.08709872655004151, 0.13842347473450953], \
[-0.0834706205388484, 0.13804312844735803], [-0.1210194386535932, \
0.13751094478565945], [-0.07755317276130769, 0.13959206057835066], \
[-0.12454220060648316, 0.13850391361672337], [-0.08984063505033166, \
0.13930876624662583], [-0.11970169304284381, 0.13897728031878956], \
[-0.12718053551547864, 0.13848624576979035], [-0.12270137057354914, \
0.13782230464567602], [-0.07292966334801938, 0.13787085026712959], \
[-0.1279560509057756, 0.13993506760967966], [-0.08068435057305824, \
0.1393464558141205], [-0.11426321065742254, 0.1379829494994627], \
[-0.08982298129149534, 0.1385619299707297], [-0.12548328798977038, \
0.1356456132005224], [-0.03354061153531267, 0.13666572060709994], \
[-0.138956893862849, 0.07314853564928397], [-0.13821029082268638, \
0.08832575234386378], [-0.16360544903741514, 0.15753195805704914], \
[-0.16791577792124412, 0.07750576247360327], [-0.16647597411299317, \
0.12206603532637791], [-0.10177874258612866, 0.13921443928596416], \
[-0.1394773716793285, 0.09813125734595195], [-0.13402933214655408, \
0.040622331126291364], [-0.1383115792498609, 0.02488729486709698], \
[-0.13933832236405602, 0.05266489125605465], [-0.1394312113998218, \
0.0705599596116261], [-0.1354895882841825, 0.1385019110692294], \
[-0.13894513384910767, 0.07383279379376337], [-0.10352888135132142, \
0.13561074433908946], [-0.1390104771395385, 0.009174920629544909], \
[-0.13394832320996583, 0.06712817155959745], [-0.1390357695390804, 0.0], \
[-0.13577411196538547, 0.01357741119653855], [-0.1379394800086017, \
0.13925146030534177], [-0.14009530667764905, 0.10080875289209273], \
[-0.13808511876285673, 0.01763821634197423], [-0.1387069954401828, \
0.021620606753638638], [-0.13889189512791106, 0.0770351335910323], \
[-0.13851904904319587, 0.084531073144648], [-0.13469049976700057, \
0.10593434834380143], [-0.1389297301067587, 0.06622009190291434], \
[-0.13935727317359273, 0.0034839318293398195], [-0.13811468519001854, \
0.12988520532848882], [-0.13997332763154488, 0.09313439117938413], \
[-0.13418996978254297, 0.10688134662995093], [-0.1374861094467818, \
0.09294107173539776], [-0.1356467864237239, 0.11897516620133355], \
[-0.11522769534423487, 0.13847653502064913], [-0.13862146949583853, \
0.11229755037306594], [-0.1387029291110799, 0.12403783449416113], \
[-0.14050068616868214, 0.08331843000706035], [-0.12543641220672427, \
0.13858329363515023], [-0.12157260300159074, 0.13438420204672236], \
[-0.11070018721557673, 0.1380148883330292], [-0.13886509635533079, \
0.08948976416457946], [-0.133609898792801, 0.13867691586328626], \
[-0.07976625009706738, 0.13978670918203637], [-0.13466378001473187, \
0.13587431874964218], [-0.10424462999747133, 0.13928819937463985], \
[-0.11220985300642561, 0.13599885994446043], [-0.07080401944935305, \
0.13937199761958624], [-0.12689611551070173, 0.13875490085762865], \
[-0.1382098414479202, 0.1136895342376006], [-0.04023188075223548, \
0.1341062691741185], [-0.16809212952829733, 0.16938366668635071], \
[-0.08276053809914426, 0.13797771762598138], [-0.08651242253344016, \
0.13833859793699163], [-0.1384883438605142, 0.13167322312776034], \
[-0.1362323636054098, 0.13381852902414426], [-0.09969859788821182, \
0.13890985927606725], [-0.11177925065001214, 0.13695849948925173], \
[-0.13986017249582483, 0.13322536961709355], [-0.10011571403221255, \
0.1348870565555506], [-0.10352140596703979, 0.13725650383480992], \
[-0.12559254081623145, 0.14042944044169253], [0.0, 0.1392936635057811], \
[-0.10616284571630037, 0.14013035773398005], [-0.09599905903865985, \
0.1402931420027435], [-0.13978529571009082, 0.11634626731602342], \
[-0.10091746991486064, 0.13498703988826552], [-0.024917615659758235, \
0.13925128256619687], [-0.04262759081129977, 0.13920152315216194], \
[-0.09379757593218457, 0.13935066962051326], [-0.13699960896903018, \
0.14126756489238038], [-0.08987804268699032, 0.13917752244347142], \
[-0.13952261741449176, 0.1342715812158474], [-0.1151226891778243, \
0.13843347628726826], [-0.13930093099486843, 0.13091416622389548], \
[-0.08155993752094177, 0.13443285809509645], [-0.08437375502304564, \
0.13948870942870675], [-0.03990891231077073, 0.13977414448593395], \
[-0.1400806590544612, 0.13605981055036637], [-0.09085628285791242, \
0.14140114586625396], [-0.12600678788259612, 0.13960821421566913], \
[-0.11997485798869235, 0.14074270301133052], [-0.13507062129720118, \
0.13798163837715016], [-0.13680324556935042, 0.14012256078776775], \
[-0.1405310529021086, 0.13219574485469243], [-0.04360727124142613, \
0.14005762496368834], [-0.10318044211453789, 0.1418837474560197], \
[-0.13941321741707963, 0.13699198199216864], [-0.07258457234161095, \
0.14030136733553467], [-0.12998052968554202, 0.14023510093908675], \
[-0.08239043917354578, 0.14066679798747048], [-0.13984531805101771, \
0.1340428322874305], [-0.06539528253597662, 0.1384481274085165], \
[-0.10033817615914435, 0.1354706047669386], [-0.07727597535890018, \
0.1398185402829002], [-0.04597175495481508, 0.13883030298409735], \
[-0.12202444538325385, 0.1379248857220698], [-0.07725861309976594, \
0.13558699292813936], [-0.1151370268154339, 0.13911073535221058], \
[-0.12081736487322502, 0.13938312357661384], [-0.029553964736552963, \
0.14117887850298247], [-0.06194699007861464, 0.1405666672729252], \
[-0.09333306264892892, 0.14089605318597387], [-0.09063626482567747, \
0.140049624659816], [-0.10443169201302772, 0.13730705087310704], \
[-0.061592881070133144, 0.13645443126875373], [-0.13534940516186225, \
0.12574529430359427], [-0.14022545427464436, 0.1315852628611829], \
[-0.06620314280702864, 0.1393776331710442], [-0.1385479372501288, \
0.12388149093881713], [-0.1347844786920918, 0.13065246359473126], \
[-0.09840973927571396, 0.13900321432908525], [-0.053823141381116026, \
0.139894588468815], [-0.1390205045285512, 0.07901837981813693], \
[-0.13533695710568536, 0.08614656997208252], [-0.13234030251438791, \
0.13808512307652263], [-0.12444632588248902, 0.1394354357011612], \
[-0.12349352598163907, 0.13864596477664823], [-0.10106748923492424, \
0.13806871705660662], [-0.1301769531783966, 0.1393619045192812], \
[-0.11102152499849405, 0.13956338051455303], [-0.14031485145617348, \
0.10915868460159593], [-0.11569082388787773, 0.1364688092324143], \
[-0.13599042555647026, 0.11376036404397169], [-0.10995893165748408, \
0.1357475674912447], [-0.06077983050180524, 0.13867243813705535], \
[-0.1376026688203848, 0.13987188412610205], [-0.11677793921185504, \
0.1397676384808899], [-0.12911029901558177, 0.13918149813495131], \
[-0.13796043994715929, 0.11571982561609778], [-0.135652123120382, \
0.12540398461980212], [-0.10628755870324781, 0.13742979440622186], \
[-0.14130230531934185, 0.06533634506980422], [-0.06340189507687095, \
0.1387189679467302], [-0.12353246592578702, 0.13809313930054412], \
[-0.13943476763711027, 0.07654874222106782], [-0.13937371462344106, \
0.05471949729108447], [-0.13946643103612447, 0.07091409771129964], \
[-0.14079605615506463, 0.03184694542255883], [-0.1396635479175241, \
0.11587288834272218], [-0.13597751920624376, 0.10935060835895909], \
[-0.13652764874021, 0.10131174506714173], [-0.14097476515892787, \
0.1387363051897433], [-0.13347227334914902, 0.13965448610992637], \
[-0.13834311661820126, 0.0], [-0.13416680180330268, 0.0042324816216098874], \
[-0.1348966706361477, 0.011502494309821214], [-0.14029627088680657, \
0.01595872641808114], [-0.13847092113932874, 0.0026494987212954623], \
[-0.13733985139624455, 0.04761127395346477], [-0.13893909363263063, \
0.016270633103454286], [-0.1403678650167973, 0.010527589876259773], \
[-0.1344784238010534, 0.12522816406667475], [-0.13898396475638206, \
0.0681493949199279], [-0.1350621137437498, 0.05010652564873582], \
[-0.13632591281076775, 0.12375246270113603], [-0.13879132061892313, \
0.04979549287742832], [-0.13812203626842243, 0.1336384215302183], \
[-0.1380355207575391, 0.025625554461664205], [-0.13874420769350257, \
0.06359566248274331], [-0.13557856485972392, 0.08302137744889891], \
[-0.13950118561300914, 0.10158495082638266], [-0.13941747769379978, \
0.1001331054883247], [-0.13719906199671944, 0.13914956810012494], \
[-0.06800384756372817, 0.13626021406512073], [-0.1159529288182204, \
0.13813315638870555], [-0.13540816694991087, 0.10948222366355938], \
[-0.13775334127208055, 0.09716891194634915], [-0.13831584458590127, \
0.09642464006394282], [-0.12047676775630278, 0.13771994430696594], \
[-0.13769475026047534, 0.12185787767547873], [-0.1279204806081403, \
0.13878570692647338], [-0.13739851376027865, 0.1052644684196437], \
[-0.1004420750982, 0.1371917518570465], [-0.10880574279153521, \
0.1378234650964938], [-0.13752346118776057, 0.07746993984563888], \
[-0.1394085982608201, 0.06936381293750664], [-0.11858814848249154, \
0.13978693102845585], [-0.1318639731283384, 0.13699533454281482], \
[-0.04163970648898751, 0.13902149614166445], [-0.13407807299494587, \
0.1368916157143769], [-0.06836747072145753, 0.1383720190704064], \
[-0.12300661978014503, 0.13802354685669704], [-0.1177379079547142, \
0.13805022358408606], [-0.13170700945840325, 0.1392780857362852], \
[-0.11153280966965817, 0.13997570235738896], [-0.04356483205452772, \
0.1398696754603763], [-0.06494568073969795, 0.1395179436096078], \
[-0.06103624729712263, 0.1358057973880492], [-0.07085419607800304, \
0.13909640274489343], [-0.063548777458215, 0.1398958990204369], \
[-0.07037361938409556, 0.13419077850066385], [-0.13740916876150586, \
0.10082315995041326], [-0.0905906621245675, 0.13845877490374112], \
[-0.024521031355506755, 0.1401201791743242], [-0.1199070920504991, \
0.13974491586592536], [-0.0928143274615606, 0.13870772332191803], \
[-0.10640123278482605, 0.1384009740775122], [-0.06580910031694832, \
0.13978117164273252], [-0.13815232607709102, 0.10898818678638826], \
[-0.04432634115069835, 0.14095990738028827], [-0.10166127954575384, \
0.13932072444972185], [-0.07852682795771335, 0.13601290566397728], \
[-0.03722881540635261, 0.1410529544680684], [-0.04840174554903916, \
0.14120581088471318], [-0.12343742605027579, 0.13994206049675736], \
[-0.0980914501741568, 0.1382801298390375], [-0.14111436032901492, \
0.13760536272530288], [-0.06591274015608292, 0.13844869242305577], \
[-0.139400087732412, 0.12676361661876995], [-0.11863960997218556, \
0.13759637570728267], [-0.06007919281756517, 0.1409206573642473], \
[-0.021513308032577606, 0.14063948717766733], [-0.07095531117653664, \
0.13848984699681707], [-0.1401109394936916, 0.12265620805521667], \
[-0.11562145092989912, 0.13968080965800123], [-0.08449616166047884, \
0.13923868482889976], [-0.11434867184006546, 0.13520496219109696], \
[-0.13609093443314915, 0.09140964644590002], [-0.11963922324231993, \
0.13816967165731456], [-0.087968017282082, 0.13929614374650856], \
[-0.09018272811488624, 0.1401164594624381], [-0.13880656607202616, \
0.13239953295198637], [-0.11437726958697145, 0.14051264576886904], \
[-0.11877269486479201, 0.13804153593892657], [-0.136757835827561, \
0.13799130636777213], [-0.08084246941659268, 0.13706465933583714], \
[-0.08518107827908246, 0.1364519186582364], [-0.007124368309650051, \
0.14248736619300084], [-0.11674428424351127, 0.14044002121086036], \
[-0.01578764261019236, 0.14092791951690528], [-0.12086680526213273, \
0.13992553544918293], [-0.09045755462231087, 0.1403378651410725], \
[-0.13901297579303362, 0.13098893370993822], [-0.1291123626930472, \
0.13766802236834547], [-0.14006729877529944, 0.11353890995842614], \
[-0.10199935275054248, 0.1382854334463865], [-0.09892767461627366, \
0.1388960624832278], [-0.08015752330988651, 0.14161250349647567], \
[-0.09335912381917995, 0.1402155437055445], [-0.1375920115947308, \
0.1243931914318548], [-0.08801928726791196, 0.13940250372164312], \
[-0.08214864142247219, 0.13900972994159735], [-0.13775114052960014, \
0.07933341867343706], [-0.12331871240168352, 0.13785769741401607], \
[-0.11365181980838011, 0.14029783311667143], [-0.1402168324188044, \
0.14011737337474794], [-0.0809488298843462, 0.1393487640506632], \
[-0.1403133799835587, 0.10817592634387223], [-0.13927573006177738, \
0.08146511992834836], [-0.13999553942123993, 0.08925088949885793], \
[-0.03440632199497639, 0.13576063892698673], [-0.08739574906833605, \
0.13671041032876055], [-0.11712307785613266, 0.13928978100309408], \
[-0.136797604096673, 0.13860463952413649], [-0.09270462613502599, \
0.1371257631823308], [-0.13817727486431544, 0.06676341151329186], \
[-0.13840760654365206, 0.13744442307226734], [-0.13626683336466244, \
0.12770439147921395], [-0.13896115298168044, 0.08222726059360658], \
[-0.13824658690481922, 0.09902205396559251], [-0.13900666459811942, \
0.12254135203234093], [-0.13995974671924089, 0.14023433994801174], \
[-0.14114571575834836, 0.05286472815777432], [-0.1399250921344155, \
0.022375885124790457], [-0.14026478518648317, 0.08529782010076926], \
[-0.13963462556325523, 0.13005425201182844], [-0.14050447046660122, \
0.03126093241646121], [-0.11144610563948049, 0.13912621063432729], \
[-0.139847818921355, 0.13062829412500088], [-0.14067510155300247, \
0.06602458026321154], [-0.14036538157925554, 0.11301405982588428], \
[-0.13526473431110445, 0.06418331961351571], [-0.13771737425279318, \
0.05181511292671185], [-0.13585923817117404, 0.006848813262141368], \
[-0.13952198255093756, 0.015169327243617628], [-0.1364448615594292, \
0.05590612301906262], [-0.13620086189888325, 0.11888898022422742], \
[-0.1359651946519723, 0.046910566271218576], [-0.13749887340766992, 0.0], \
[-0.13923242737116623, 0.08383422330084209], [-0.13922013859923169, \
0.0239426630751433], [-0.13767153200263935, 0.10530713164836211], \
[-0.1402360072314047, 0.055867141921346064], [-0.13722150697974184, \
0.02500196272869373], [-0.13596302134730603, 0.058821758845628146], \
[-0.1381176498729724, 0.05562259535411932], [-0.14075895619356485, \
0.020887034564074338], [-0.1385968082631941, 0.04159837943946043], \
[-0.13805150874541458, 0.07331588179465136], [-0.13937626576223391, \
0.07131662645850997], [-0.12419701639445356, 0.13532800792682198], \
[-0.1393328707601728, 0.08741997238214609], [-0.13603996401471583, \
0.06373780003674735], [-0.13908847914608086, 0.041759427039539936], \
[-0.1402806542691043, 0.11059878859322973], [-0.13866145027736695, \
0.13611334312358372], [-0.13129600333746289, 0.13584287303128637], \
[-0.10253700433339438, 0.13749505291326566], [-0.13895229417518598, \
0.08116201816615218], [-0.09851547694069761, 0.13766667485798376], \
[-0.13873246584577104, 0.09827976310854786], [-0.10961026931005616, \
0.13689328096658784], [-0.13806164652464353, 0.13869548931586856], \
[-0.12436654546984444, 0.13722800136739446], [-0.13872009785954714, \
0.11371983833377455], [-0.12604087491639393, 0.1401034130015596], \
[-0.13103508387364562, 0.13830373358198772], [-0.12952212024350118, \
0.1382012390461951], [-0.13577240359696754, 0.11433509124764582], \
[-0.08058637197803202, 0.13755024621229014], [-0.1394974925880768, \
0.0996939732167161], [-0.11548310188790338, 0.14025658639421718], \
[-0.10418394421774488, 0.13830812743179505], [-0.07942614477845597, \
0.1400643693274673], [-0.02957694997781734, 0.13752697597715402], \
[-0.14000934467963858, 0.08503323412687126], [-0.03461444221434142, \
0.13939524904519934], [-0.08744170815062385, 0.13851119242658094], \
[-0.12603775430864703, 0.13994208457896562], [-0.11283333180904463, \
0.13918013714168842], [-0.08130034818045782, 0.14007214821824873], \
[-0.031875810841981475, 0.1365546287018821], [-0.11989684613022458, \
0.14004800926838126], [-0.13918777354767156, 0.12428153118158637], \
[-0.12008442206777774, 0.13662721343703121], [-0.06953310329129128, \
0.14107346193738293], [-0.13619729173536685, 0.13677461256868576], \
[-0.13800316938943433, 0.13728244804370618], [-0.05329917145704319, \
0.14010429361008464], [-0.12163011524533396, 0.13638914697193602], \
[-0.05100139589076551, 0.1407390908121287], [-0.13180360183723802, \
0.1404225375964771], [-0.13920452130786193, 0.11787051705323996], \
[-0.09525109986715118, 0.1399407368509709], [-0.0818911887359892, \
0.14098534823680556], [-0.06718118732540643, 0.13422167939740104], \
[-0.12596830317981422, 0.1409591519814934], [-0.13915382873193938, \
0.12999508574829988], [0.0, 0.0], [-0.09099525665059688, \
0.13870647411155526], [-0.07206541302582964, 0.13735904155816525], \
[-0.13768734137585414, 0.1362214192369758], [-0.11189173099757074, \
0.13740892349028908], [-0.05227716949914606, 0.1395733445219022], \
[-0.05944098202203478, 0.13929324712094474], [-0.08049622345575368, \
0.13933997242191232], [-0.12076643165285626, 0.13671256958737465], \
[-0.10278461895871921, 0.13878606225145487], [-0.10634828217899661, \
0.1392756705294467], [-0.06890988201561715, 0.1404614257061458], [0.0, 0.0], \
[-0.1185647642823017, 0.13785215116053082], [-0.07232662026995493, \
0.13959803501851756], [-0.1390412394472707, 0.13601647474302467], \
[-0.10377939094052224, 0.13842128291792205], [-0.11755264129831516, \
0.1395689193091883], [-0.11296322598076068, 0.1344216403440207], \
[-0.06796931359566821, 0.140483061333955], [-0.11093684789681649, \
0.14076612297997262], [-0.12131614142705635, 0.13945160431725348], \
[-0.13043419102389972, 0.1371338541117998], [-0.13729500569427225, \
0.13989192249768428], [-0.13767568451679954, 0.10303619815474567], \
[-0.12468904287479796, 0.140453254914721], [-0.11177569086050056, \
0.14027944479009305], [-0.10319961666641225, 0.13869309942641428], \
[-0.1411613062711576, 0.12879591523952566], [-0.10140669546569453, \
0.13931479739798314], [-0.13865063845138265, 0.13074260811633892], \
[-0.13914087398879, 0.13663731116790126], [-0.1256130303741783, \
0.13973136820154028], [-0.10795802462373445, 0.13959385530466073], \
[-0.08787154314943646, 0.13993009627628067], [-0.11299687445935098, \
0.13916520876227534], [-0.13336214603410487, 0.1387744660499468], \
[-0.1035112575322872, 0.14011605892880385], [-0.13997146671341879, \
0.0764389223969193], [-0.11691120401597963, 0.13586771738429174], \
[-0.14175402177342028, 0.13670882229309111], [-0.140026747934553, \
0.10235700117149363], [-0.1417990597530697, 0.06891959640539685], \
[-0.07847760455241051, 0.13797232368267395], [-0.13873408797858547, \
0.12635474014787768], [-0.1370385084674026, 0.12912327248438438], \
[-0.1382746176972486, 0.033674154147155994], [-0.1388969636076318, \
0.12265657526569287], [-0.13888869588309327, 0.1378912523689334], \
[-0.13727209949703698, 0.010772580429951837], [-0.10969644140010185, \
0.1407256633919517], [-0.07262501282087291, 0.14102527521698763], \
[-0.14011299683606257, 0.045747502679824574], [-0.1382868607648938, \
0.0646180429164977], [-0.1406805614774258, 0.07933119563696159], \
[-0.1367918312128546, 0.03387780219461479], [-0.13971473761132205, \
0.12467340623538184], [-0.1396654079940694, 0.08262980009067634], \
[-0.14090771917984216, 0.08075353470093123], [-0.14042947788243335, \
0.04564702483315305], [-0.13897412635312367, 0.11920019978132824], \
[-0.13891920305676364, 0.08885349766275054], [-0.14099635584345765, \
0.003524908896086437], [-0.13864597793680125, 0.049764481049166046], \
[-0.13997395520933287, 0.01224772108081664], [-0.14142822781946712, \
0.07341499076530841], [-0.1391948972726038, 0.09394797271895025], \
[-0.13821654842186926, 0.0484774710172034], [-0.1400399102484537, \
0.11516501191698156], [-0.1372548609614373, 0.04142247071389845], \
[-0.13616902320398136, 0.11920260649789129], [-0.13652153015207083, \
0.11151773132030011], [-0.1353721766975908, 0.0304413359290894], \
[-0.14077086993654078, 0.04288943263450945], [-0.13974513482192089, \
0.02737627615909222], [-0.13941072614792102, 0.006970536307396055], \
[-0.13871032084280427, 0.10491025827837135], [-0.13574589493538203, \
0.05567536437249084], [-0.13529515336990935, 0.11669742455165935], \
[-0.1378431146333255, 0.12292762659446692], [-0.12420883749612983, \
0.1383871445319554], [0.0, 0.0], [-0.13520481192770886, 0.10733837031604815], \
[-0.14072192829953606, 0.11210707070852118], [-0.13913609690741882, \
0.07339650743191835], [-0.10313509278489662, 0.139287035278453], \
[-0.13803292675651938, 0.13967615096951597], [-0.13136711884135055, \
0.1394622536575263], [-0.13417941313604761, 0.11005384098517748], \
[-0.13814248985351138, 0.05168322144193379], [-0.13728195048411895, \
0.0782896829407281], [-0.13877539574777756, 0.08037660828801967], \
[-0.13844323709262066, 0.12787000060878512], [-0.13882072572003015, \
0.0725418732330471], [-0.13986327959880557, 0.11309725224301484], \
[-0.07150751881891126, 0.13927622637432038], [-0.11337710847636613, \
0.14003001068434798], [-0.11260011057393803, 0.13721135446970462], \
[-0.13662302226286197, 0.10503284179388019], [-0.1394378526480304, \
0.131973842078461], [-0.13889464003397958, 0.08946084378882223], \
[-0.1335737330743058, 0.13857982451005116], [-0.11154299740123233, \
0.1378049504816], [-0.13879080180988618, 0.04019377534282319], \
[-0.1399211000197308, 0.11171521194619169], [-0.06997654314385314, \
0.13754255332686532], [-0.09163924375036164, 0.1396286239212564], \
[-0.12152551440416051, 0.13630082604483149], [-0.0849947773003216, \
0.13676443935469385], [-0.13982857103515153, 0.13920940693436795], \
[-0.11460811034655188, 0.1397031960339651], [-0.1397412226032423, \
0.1148381572495263], [-0.13644887826377922, 0.13075179271598789], \
[-0.053416985690691754, 0.14005728291671984], [-0.1394136812851695, \
0.10865905553010007], [-0.13414354782371518, 0.14040589495309008], \
[-0.13646666820706702, 0.1157736104794058], [-0.1363752441966189, \
0.14132018322184536], [-0.10315909959640657, 0.13963601418871457], \
[-0.06684521446308142, 0.13747639177550372], [-0.09448286818644432, \
0.14111596337124785], [-0.13089731545850278, 0.13908082010364153], \
[-0.08625095401235464, 0.13732426241275583], [-0.05626955741476247, \
0.13963794422686712], [-0.1018042802836639, 0.13993707722156032], \
[-0.10228015070494369, 0.13938810043001149], [-0.11482514161521788, \
0.13994559539250487], [-0.138918414245137, 0.13876940031798196], \
[-0.08352661426343827, 0.1410130380611557], [-0.12471958792980684, \
0.1423268258939918], [-0.09425066923658984, 0.1388163697556969], \
[-0.12079627789221765, 0.13657416697215327], [-0.10926408822384728, \
0.14090466881546823], [-0.08441058261748643, 0.13943590978541454], \
[-0.12945456327431537, 0.13880608627720759], [-0.10418810299106425, \
0.13920406404588426], [-0.13898785731449265, 0.09614796486119008], \
[-0.07691276683791409, 0.14222102301146655], [-0.08147750083880818, \
0.13478713382760588], [-0.0945109732579587, 0.13913472876436886], \
[-0.13000379144858612, 0.13873545075549334], [-0.08711682738327979, \
0.13935194425823433], [-0.08442255101562761, 0.14064003116642523], \
[-0.14089257238601652, 0.1043540842665183], [-0.09254120651840593, \
0.13577644228702093], [-0.1411528196993706, 0.14066507572453613], \
[-0.12630255108657948, 0.13951825372263132], [-0.13888373347099817, \
0.09354510187981635], [-0.09094461946002466, 0.13990097178554406], \
[-0.09834686620917889, 0.13890919079109135], [-0.09731447409621101, \
0.13998941888942745], [-0.14006405969867683, 0.13671557942535356], \
[-0.0743898677771938, 0.13825047522117498], [-0.10295682117173567, \
0.13996500531710845], [-0.14048076627468006, 0.1254179531877794], \
[-0.13549238192532845, 0.13963034045072006], [-0.10130032360658482, \
0.1394981805315245], [-0.13795438391118253, 0.10117029261748238], \
[-0.12149477969838844, 0.1379743200540152], [-0.06700888505030296, \
0.13409054114936994], [-0.13208931738533886, 0.13814739374368126], \
[-0.1672614444278282, 0.15052513768586043], [-0.17167935037406248, \
0.16307023204202603], [-0.16781663726237817, 0.11783300453642238], \
[-0.1378234114333891, 0.0891519128897722], [-0.1670102853768399, \
0.1302923567552996], [-0.16744576433422587, 0.15155521732772226], \
[-0.16886276633259467, 0.14247395740676305], [-0.1372861477223526, \
0.10814487177430432], [-0.13997580879221785, 0.11554204954096864], \
[-0.11443427810282429, 0.1377395169025335], [-0.10610849148731716, \
0.138611006479584], [-0.12442451697246888, 0.1402330664371512], \
[-0.16548420862954794, 0.12527288859352118], [-0.168230841227249, \
0.14394454804579682], [-0.16760776127169355, 0.12071586995592491], \
[-0.13873280378703318, 0.08966213110301355], [-0.1407498911739786, \
0.08467885775107052], [-0.1401133537609994, 0.07486579928336794], \
[-0.13932286206793754, 0.1124147469211463], [-0.11052390642333791, \
0.1400044887821785], [-0.13296104247700588, 0.0838652410226053], \
[-0.1399589763951502, 0.08412088857000526], [-0.14211640787700197, \
0.04686382440727843], [-0.1390404372286319, 0.048827150026856364], \
[-0.14009984326224934, 0.10076216560071999], [-0.13889961177785498, \
0.07748668694032174], [-0.13961936913195322, 0.05439121821077307], \
[-0.13476405773868672, 0.07253177611748743], [-0.13420934853669444, \
0.05360050272220177], [-0.1399483391413561, 0.014737113618199594], \
[-0.14401478508102922, 0.020150424273894713], [-0.1392928532280244, \
0.01218812465745212], [-0.13509127142027055, 0.009709685133331935], \
[-0.13680290725667277, 0.0348528579082562], [-0.13865464457276588, \
0.006932732228638282], [-0.14006079200861762, 0.010457231365392141], \
[-0.1385871999045349, 0.027894508178419083], [-0.13942808963457595, \
0.012199957843025418], [-0.14049394489939024, 0.042268089655958206], \
[-0.13920368225028257, 0.027099403972406868], [-0.14043439460473173, \
0.05521404238367473], [-0.13998233905182808, 0.0391684366032363], \
[-0.13741624509904765, 0.013741624509904755], [-0.1391243324479589, \
0.003478108311198958], [-0.13527652614698274, 0.10882347054750104], \
[-0.13757993345219954, 0.018131974788788155], [-0.1371243085502136, \
0.09369676774239778], [-0.1349088791750395, 0.07965749649168226], \
[-0.13943487318022116, 0.10006856941796184], [-0.13629622905957112, \
0.10081695023017163], [-0.13844610422925968, 0.12322718501163354], \
[-0.13918255953565253, 0.07103334165532808], [-0.13885046477450014, \
0.0183070774633278], [-0.13928847100083158, 0.13632915882763175], \
[-0.1367505324359456, 0.1034670410654883], [-0.13633692677737305, \
0.046978528595866], [-0.14021306815611562, 0.07488497257126966], \
[-0.1354552116971379, 0.11856924027359982], [-0.13819625198631055, \
0.06721552252650448], [-0.13656422569542248, 0.11742824319763129], \
[-0.13829407996029183, 0.1064671805434051], [-0.13884107850013885, \
0.06999016524125456], [-0.12025134973358267, 0.13519053929775535], \
[-0.09796280301179458, 0.13843501517243906], [-0.13634149284032335, \
0.09814989170543126], [-0.13949246193401157, 0.13710791733827887], \
[-0.1343166585441611, 0.1367941149538255], [-0.1365168125530198, \
0.08096282211698845], [-0.13733731273791608, 0.12200959832450356], \
[-0.13293465411921293, 0.1396353158368965], [-0.13800134775531006, \
0.10101907868641528], [-0.13674788763449422, 0.08671816774942864], \
[-0.1405799559129488, 0.09272527451864661], [-0.13266789827296996, \
0.1374610309946847], [-0.11948188571680149, 0.137379278879036], \
[-0.14043332168638145, 0.13420271102583545], [-0.1262629470166833, \
0.136461012648716], [-0.10522054058248212, 0.13692442094353446], \
[-0.07477509390797589, 0.13943988160720452], [-0.12308179626096785, \
0.1384033815490398], [-0.13767289421230064, 0.09278550525586944], \
[-0.13787546130642928, 0.13116457362247155], [-0.13922540118181653, \
0.04897101270964158], [-0.14095887953465264, 0.12184478660461957], \
[-0.1359713346403517, 0.06910578349256054], [-0.13899587636782948, \
0.07962534948238238], [-0.13981172435631248, 0.09096588207860652], \
[-0.13918276520131995, 0.09299393842676157], [-0.13916022012468396, \
0.11850155216283341], [-0.139461490798373, 0.12888662414778027], \
[-0.13981051379346293, 0.1105711850380244], [-0.13180663450926036, \
0.13750386126269826], [-0.13771760457306864, 0.1417177535828725], \
[-0.09840193087799586, 0.13641662446819122], [-0.12914860450417107, \
0.139748075693354], [-0.13885017306236244, 0.09499625993423748], \
[-0.14022266597133667, 0.10295179085922615], [-0.13639463507511376, \
0.10741090228936762], [-0.13908339401432598, 0.12876392304184275], \
[-0.13830484600676843, 0.07164366257476194], [-0.13726577844331203, \
0.1389824636780773], [-0.13971574647353027, 0.09293999697499614], \
[-0.12281210129838946, 0.13917377532506622], [-0.14074257513778432, \
0.09127090416542177], [-0.14021328652299375, 0.1252377712536934], \
[-0.125991198606777, 0.13575685058565234], [-0.1401248060380175, \
0.0966420722656032], [-0.13967745939504117, 0.10833728882419064], \
[-0.13918052114126706, 0.0884443170829382], [-0.11357440810959715, \
0.13872378218529677], [-0.1387101831119977, 0.14083377824422127], \
[-0.13157211446180908, 0.14044348259214684], [-0.1355778393743783, \
0.1158831255526241], [-0.10638471422943105, 0.13882804226704468], \
[-0.137307891257536, 0.1345828794667038], [-0.12148545610872732, \
0.13827279640962112], [-0.14043257465174186, 0.10730841341529267], \
[-0.14268456566498627, 0.08312304654346428], [-0.13840728571444486, \
0.12831023054822221], [-0.13479166589114666, 0.09215698474590972], \
[-0.13672844958888664, 0.1150689912410967], [-0.13973387269661777, \
0.12200328573643791], [-0.09053169320039343, 0.1388733980867914], \
[-0.1399771460151576, 0.07961956746159267], [-0.13520812863918336, \
0.13953221316774353], [-0.13794037974512652, 0.09719078206275429], \
[-0.13990234008145616, 0.12312051042313149], [-0.13911202333545022, \
0.11655613815738254], [-0.1616179206846847, 0.1051664808024017], \
[-0.16995437179730952, 0.13375578636012025], [-0.17206764065675306, \
0.13375742482392433], [-0.17295049666196807, 0.1044888648577612], \
[-0.09730301943436506, 0.13840909527355777], [-0.1371309340683023, \
0.11289885845755818], [-0.1384596530186633, 0.120404423763864], \
[-0.16812787913546426, 0.03648262364399411], [-0.13766878098675234, \
0.0968321556729906], [-0.1405990451329524, 0.04545413510586927], \
[-0.1350957495839176, 0.1002832378138187], [-0.13979148445971024, \
0.13553442856341105], [-0.13821523083719542, 0.06101934945768933], \
[-0.14012539346439842, 0.06682583256389772], [-0.13985380096596803, \
0.03453682319208306], [-0.14047588563309193, 0.09008677231474811], \
[-0.14168016337056455, 0.08752022826893298], [-0.13720990000506184, \
0.1359729788077888], [-0.13955664680082258, 0.024782115615450632], \
[-0.1387491827140732, 0.11138133535293318], [-0.13950409879300568, \
0.039138713511765566], [-0.13942513197386963, 0.06768472478357818], \
[-0.1354641647266781, 0.021766519792675812], [-0.13972807354402256, \
0.0661574251384586], [-0.1385980675541535, 0.043028194167364656], \
[-0.1394220500222182, 0.11568301690263712], [-0.13920905065741718, \
0.024726670408686764], [-0.1412966911267321, 0.03582020994008807], \
[-0.13716140618799066, 0.00942314934113783], [-0.14019711595592985, \
0.0778588402574971], [-0.1348054253466314, 0.016850678168328928], \
[-0.13803129362917815, 0.003282287109248514], [-0.13998193851282772, \
0.007873984041346559], [-0.14030128247142185, 0.03507532061785546], \
[-0.1375240760667475, 0.04937062122926084], [-0.1393953325695629, \
0.006969766628478154]], \"annealingDurationRange\": [1.0, 2000.0], \"couplers\
\": [[0, 4], [1, 4], [2, 4], [3, 4], [0, 5], [1, 5], [2, 5], [3, 5], [0, 6], \
[1, 6], [2, 6], [3, 6], [0, 7], [1, 7], [2, 7], [3, 7], [4, 12], [8, 12], [9, \
12], [10, 12], [11, 12], [5, 13], [8, 13], [9, 13], [10, 13], [11, 13], [6, \
14], [8, 14], [9, 14], [10, 14], [11, 14], [7, 15], [8, 15], [9, 15], [10, \
15], [11, 15], [12, 20], [16, 20], [17, 20], [18, 20], [19, 20], [13, 21], \
[16, 21], [17, 21], [18, 21], [19, 21], [16, 22], [17, 22], [18, 22], [19, \
22], [15, 23], [16, 23], [17, 23], [18, 23], [19, 23], [20, 28], [24, 28], \
[25, 28], [26, 28], [27, 28], [21, 29], [24, 29], [25, 29], [26, 29], [27, \
29], [22, 30], [24, 30], [25, 30], [26, 30], [27, 30], [23, 31], [24, 31], \
[25, 31], [26, 31], [27, 31], [28, 36], [32, 36], [33, 36], [34, 36], [35, \
36], [29, 37], [32, 37], [33, 37], [34, 37], [35, 37], [30, 38], [32, 38], \
[33, 38], [34, 38], [35, 38], [31, 39], [32, 39], [33, 39], [34, 39], [35, \
39], [36, 44], [40, 44], [41, 44], [42, 44], [37, 45], [40, 45], [41, 45], \
[42, 45], [39, 47], [40, 47], [41, 47], [42, 47], [44, 52], [48, 52], [49, \
52], [50, 52], [51, 52], [45, 53], [48, 53], [49, 53], [50, 53], [51, 53], \
[48, 54], [49, 54], [50, 54], [51, 54], [47, 55], [48, 55], [49, 55], [50, \
55], [51, 55], [52, 60], [56, 60], [57, 60], [58, 60], [59, 60], [53, 61], \
[56, 61], [57, 61], [58, 61], [59, 61], [54, 62], [56, 62], [57, 62], [58, \
62], [59, 62], [55, 63], [56, 63], [57, 63], [58, 63], [59, 63], [60, 68], \
[64, 68], [65, 68], [66, 68], [67, 68], [61, 69], [64, 69], [65, 69], [66, \
69], [67, 69], [62, 70], [64, 70], [65, 70], [66, 70], [67, 70], [63, 71], \
[64, 71], [65, 71], [66, 71], [67, 71], [68, 76], [72, 76], [73, 76], [74, \
76], [75, 76], [69, 77], [72, 77], [73, 77], [74, 77], [75, 77], [70, 78], \
[72, 78], [73, 78], [74, 78], [75, 78], [71, 79], [72, 79], [73, 79], [74, \
79], [75, 79], [76, 84], [80, 84], [81, 84], [82, 84], [83, 84], [77, 85], \
[80, 85], [81, 85], [82, 85], [83, 85], [78, 86], [80, 86], [81, 86], [82, \
86], [83, 86], [79, 87], [80, 87], [81, 87], [82, 87], [83, 87], [84, 92], \
[88, 92], [89, 92], [90, 92], [91, 92], [85, 93], [88, 93], [89, 93], [90, \
93], [91, 93], [86, 94], [88, 94], [89, 94], [90, 94], [91, 94], [87, 95], \
[88, 95], [89, 95], [90, 95], [91, 95], [92, 100], [96, 100], [97, 100], [98, \
100], [99, 100], [93, 101], [96, 101], [97, 101], [98, 101], [99, 101], [94, \
102], [96, 102], [97, 102], [98, 102], [99, 102], [95, 103], [96, 103], [97, \
103], [98, 103], [99, 103], [100, 108], [104, 108], [105, 108], [106, 108], \
[107, 108], [101, 109], [104, 109], [105, 109], [106, 109], [107, 109], [102, \
110], [104, 110], [105, 110], [106, 110], [107, 110], [103, 111], [104, 111], \
[105, 111], [106, 111], [107, 111], [108, 116], [112, 116], [113, 116], [114, \
116], [115, 116], [109, 117], [112, 117], [113, 117], [114, 117], [115, 117], \
[110, 118], [112, 118], [113, 118], [114, 118], [115, 118], [111, 119], [112, \
119], [113, 119], [114, 119], [115, 119], [116, 124], [120, 124], [121, 124], \
[122, 124], [123, 124], [117, 125], [120, 125], [121, 125], [122, 125], [123, \
125], [118, 126], [120, 126], [121, 126], [122, 126], [123, 126], [119, 127], \
[120, 127], [121, 127], [122, 127], [123, 127], [0, 128], [1, 129], [2, 130], \
[3, 131], [128, 132], [129, 132], [130, 132], [131, 132], [128, 133], [129, \
133], [130, 133], [131, 133], [128, 134], [129, 134], [130, 134], [131, 134], \
[128, 135], [129, 135], [130, 135], [131, 135], [8, 136], [9, 137], [10, \
138], [11, 139], [132, 140], [136, 140], [137, 140], [138, 140], [139, 140], \
[133, 141], [136, 141], [137, 141], [138, 141], [139, 141], [134, 142], [136, \
142], [137, 142], [138, 142], [139, 142], [135, 143], [136, 143], [137, 143], \
[138, 143], [139, 143], [16, 144], [17, 145], [18, 146], [19, 147], [140, \
148], [144, 148], [145, 148], [146, 148], [147, 148], [141, 149], [144, 149], \
[145, 149], [146, 149], [147, 149], [142, 150], [144, 150], [145, 150], [146, \
150], [147, 150], [143, 151], [144, 151], [145, 151], [146, 151], [147, 151], \
[24, 152], [25, 153], [26, 154], [27, 155], [148, 156], [152, 156], [153, \
156], [154, 156], [155, 156], [149, 157], [152, 157], [153, 157], [154, 157], \
[155, 157], [150, 158], [152, 158], [153, 158], [154, 158], [155, 158], [151, \
159], [152, 159], [153, 159], [154, 159], [155, 159], [32, 160], [33, 161], \
[34, 162], [35, 163], [156, 164], [160, 164], [161, 164], [162, 164], [163, \
164], [157, 165], [160, 165], [161, 165], [162, 165], [163, 165], [158, 166], \
[160, 166], [161, 166], [162, 166], [163, 166], [159, 167], [160, 167], [161, \
167], [162, 167], [163, 167], [40, 168], [41, 169], [42, 170], [164, 172], \
[168, 172], [169, 172], [170, 172], [171, 172], [165, 173], [168, 173], [169, \
173], [170, 173], [171, 173], [166, 174], [168, 174], [169, 174], [170, 174], \
[171, 174], [167, 175], [168, 175], [169, 175], [170, 175], [171, 175], [48, \
176], [49, 177], [50, 178], [51, 179], [172, 180], [176, 180], [177, 180], \
[178, 180], [179, 180], [173, 181], [176, 181], [177, 181], [178, 181], [179, \
181], [174, 182], [176, 182], [177, 182], [178, 182], [179, 182], [175, 183], \
[176, 183], [177, 183], [178, 183], [179, 183], [56, 184], [57, 185], [58, \
186], [59, 187], [180, 188], [184, 188], [185, 188], [186, 188], [187, 188], \
[181, 189], [184, 189], [185, 189], [186, 189], [187, 189], [182, 190], [184, \
190], [185, 190], [186, 190], [187, 190], [183, 191], [184, 191], [185, 191], \
[186, 191], [187, 191], [64, 192], [65, 193], [66, 194], [67, 195], [188, \
196], [192, 196], [193, 196], [194, 196], [195, 196], [189, 197], [192, 197], \
[193, 197], [194, 197], [195, 197], [190, 198], [192, 198], [193, 198], [194, \
198], [195, 198], [191, 199], [192, 199], [193, 199], [194, 199], [195, 199], \
[72, 200], [73, 201], [74, 202], [75, 203], [196, 204], [200, 204], [201, \
204], [202, 204], [203, 204], [197, 205], [200, 205], [201, 205], [202, 205], \
[203, 205], [198, 206], [200, 206], [201, 206], [202, 206], [203, 206], [199, \
207], [200, 207], [201, 207], [202, 207], [203, 207], [80, 208], [81, 209], \
[82, 210], [83, 211], [204, 212], [208, 212], [209, 212], [210, 212], [211, \
212], [205, 213], [208, 213], [209, 213], [210, 213], [211, 213], [206, 214], \
[208, 214], [209, 214], [210, 214], [211, 214], [207, 215], [208, 215], [209, \
215], [210, 215], [211, 215], [88, 216], [89, 217], [90, 218], [91, 219], \
[212, 220], [216, 220], [217, 220], [218, 220], [219, 220], [213, 221], [216, \
221], [217, 221], [218, 221], [219, 221], [214, 222], [216, 222], [217, 222], \
[218, 222], [219, 222], [215, 223], [216, 223], [217, 223], [218, 223], [219, \
223], [96, 224], [97, 225], [98, 226], [99, 227], [220, 228], [224, 228], \
[225, 228], [226, 228], [227, 228], [221, 229], [224, 229], [225, 229], [226, \
229], [227, 229], [222, 230], [224, 230], [225, 230], [226, 230], [227, 230], \
[223, 231], [224, 231], [225, 231], [226, 231], [227, 231], [104, 232], [105, \
233], [106, 234], [107, 235], [228, 236], [232, 236], [233, 236], [234, 236], \
[235, 236], [229, 237], [232, 237], [233, 237], [234, 237], [235, 237], [230, \
238], [232, 238], [233, 238], [234, 238], [235, 238], [231, 239], [232, 239], \
[233, 239], [234, 239], [235, 239], [112, 240], [113, 241], [114, 242], [115, \
243], [236, 244], [240, 244], [241, 244], [242, 244], [243, 244], [237, 245], \
[240, 245], [241, 245], [242, 245], [243, 245], [238, 246], [240, 246], [241, \
246], [242, 246], [243, 246], [239, 247], [240, 247], [241, 247], [242, 247], \
[243, 247], [120, 248], [121, 249], [122, 250], [123, 251], [244, 252], [248, \
252], [249, 252], [250, 252], [251, 252], [245, 253], [248, 253], [249, 253], \
[250, 253], [251, 253], [246, 254], [248, 254], [249, 254], [250, 254], [251, \
254], [247, 255], [248, 255], [249, 255], [250, 255], [251, 255], [128, 256], \
[129, 257], [130, 258], [131, 259], [256, 260], [257, 260], [258, 260], [259, \
260], [256, 261], [257, 261], [258, 261], [259, 261], [256, 262], [257, 262], \
[258, 262], [259, 262], [256, 263], [257, 263], [258, 263], [259, 263], [136, \
264], [137, 265], [138, 266], [139, 267], [260, 268], [264, 268], [265, 268], \
[266, 268], [267, 268], [261, 269], [264, 269], [265, 269], [266, 269], [267, \
269], [262, 270], [264, 270], [265, 270], [266, 270], [267, 270], [263, 271], \
[264, 271], [265, 271], [266, 271], [267, 271], [144, 272], [145, 273], [146, \
274], [147, 275], [268, 276], [272, 276], [273, 276], [274, 276], [275, 276], \
[269, 277], [272, 277], [273, 277], [274, 277], [275, 277], [270, 278], [272, \
278], [273, 278], [274, 278], [275, 278], [271, 279], [272, 279], [273, 279], \
[274, 279], [275, 279], [152, 280], [153, 281], [154, 282], [155, 283], [276, \
284], [280, 284], [281, 284], [282, 284], [283, 284], [277, 285], [280, 285], \
[281, 285], [282, 285], [283, 285], [278, 286], [280, 286], [281, 286], [282, \
286], [283, 286], [279, 287], [280, 287], [281, 287], [282, 287], [283, 287], \
[160, 288], [161, 289], [162, 290], [163, 291], [284, 292], [288, 292], [289, \
292], [290, 292], [291, 292], [285, 293], [288, 293], [289, 293], [290, 293], \
[291, 293], [286, 294], [288, 294], [289, 294], [290, 294], [291, 294], [287, \
295], [288, 295], [289, 295], [290, 295], [291, 295], [168, 296], [169, 297], \
[170, 298], [171, 299], [292, 300], [296, 300], [297, 300], [298, 300], [299, \
300], [293, 301], [296, 301], [297, 301], [298, 301], [299, 301], [294, 302], \
[296, 302], [297, 302], [298, 302], [299, 302], [295, 303], [296, 303], [297, \
303], [298, 303], [299, 303], [176, 304], [177, 305], [178, 306], [179, 307], \
[300, 308], [304, 308], [305, 308], [306, 308], [307, 308], [301, 309], [304, \
309], [305, 309], [306, 309], [307, 309], [302, 310], [304, 310], [305, 310], \
[306, 310], [307, 310], [303, 311], [304, 311], [305, 311], [306, 311], [307, \
311], [184, 312], [185, 313], [186, 314], [187, 315], [308, 316], [312, 316], \
[313, 316], [314, 316], [315, 316], [309, 317], [312, 317], [313, 317], [314, \
317], [315, 317], [310, 318], [312, 318], [313, 318], [314, 318], [315, 318], \
[311, 319], [312, 319], [313, 319], [314, 319], [315, 319], [192, 320], [193, \
321], [194, 322], [195, 323], [316, 324], [320, 324], [321, 324], [322, 324], \
[323, 324], [317, 325], [320, 325], [321, 325], [322, 325], [323, 325], [318, \
326], [320, 326], [321, 326], [322, 326], [323, 326], [319, 327], [320, 327], \
[321, 327], [322, 327], [323, 327], [200, 328], [201, 329], [202, 330], [203, \
331], [324, 332], [328, 332], [329, 332], [330, 332], [331, 332], [325, 333], \
[328, 333], [329, 333], [330, 333], [331, 333], [326, 334], [328, 334], [329, \
334], [330, 334], [331, 334], [327, 335], [328, 335], [329, 335], [330, 335], \
[331, 335], [208, 336], [209, 337], [210, 338], [211, 339], [332, 340], [336, \
340], [337, 340], [338, 340], [339, 340], [333, 341], [336, 341], [337, 341], \
[338, 341], [339, 341], [334, 342], [336, 342], [337, 342], [338, 342], [339, \
342], [335, 343], [336, 343], [337, 343], [338, 343], [339, 343], [216, 344], \
[217, 345], [218, 346], [219, 347], [340, 348], [344, 348], [345, 348], [346, \
348], [347, 348], [341, 349], [344, 349], [345, 349], [346, 349], [347, 349], \
[342, 350], [344, 350], [345, 350], [346, 350], [347, 350], [343, 351], [344, \
351], [345, 351], [346, 351], [347, 351], [224, 352], [225, 353], [226, 354], \
[227, 355], [348, 356], [352, 356], [353, 356], [354, 356], [355, 356], [349, \
357], [352, 357], [353, 357], [354, 357], [355, 357], [350, 358], [352, 358], \
[353, 358], [354, 358], [355, 358], [351, 359], [352, 359], [353, 359], [354, \
359], [355, 359], [232, 360], [233, 361], [234, 362], [235, 363], [356, 364], \
[360, 364], [361, 364], [362, 364], [363, 364], [357, 365], [360, 365], [361, \
365], [362, 365], [363, 365], [358, 366], [360, 366], [361, 366], [362, 366], \
[363, 366], [359, 367], [360, 367], [361, 367], [362, 367], [363, 367], [240, \
368], [241, 369], [242, 370], [243, 371], [364, 372], [368, 372], [369, 372], \
[370, 372], [371, 372], [365, 373], [368, 373], [369, 373], [370, 373], [371, \
373], [366, 374], [368, 374], [369, 374], [370, 374], [371, 374], [367, 375], \
[368, 375], [369, 375], [370, 375], [371, 375], [248, 376], [249, 377], [250, \
378], [251, 379], [372, 380], [376, 380], [377, 380], [378, 380], [379, 380], \
[373, 381], [376, 381], [377, 381], [378, 381], [379, 381], [374, 382], [376, \
382], [377, 382], [378, 382], [379, 382], [375, 383], [376, 383], [377, 383], \
[378, 383], [379, 383], [256, 384], [257, 385], [258, 386], [259, 387], [384, \
388], [385, 388], [386, 388], [387, 388], [384, 389], [385, 389], [386, 389], \
[387, 389], [384, 390], [385, 390], [386, 390], [387, 390], [384, 391], [385, \
391], [386, 391], [387, 391], [264, 392], [265, 393], [266, 394], [267, 395], \
[388, 396], [392, 396], [393, 396], [394, 396], [395, 396], [389, 397], [392, \
397], [393, 397], [394, 397], [395, 397], [390, 398], [392, 398], [393, 398], \
[394, 398], [395, 398], [391, 399], [392, 399], [393, 399], [394, 399], [395, \
399], [272, 400], [273, 401], [274, 402], [275, 403], [396, 404], [400, 404], \
[401, 404], [402, 404], [403, 404], [397, 405], [400, 405], [401, 405], [402, \
405], [403, 405], [398, 406], [400, 406], [401, 406], [402, 406], [403, 406], \
[399, 407], [400, 407], [401, 407], [402, 407], [403, 407], [280, 408], [281, \
409], [282, 410], [283, 411], [404, 412], [408, 412], [409, 412], [410, 412], \
[411, 412], [405, 413], [408, 413], [409, 413], [410, 413], [411, 413], [406, \
414], [408, 414], [409, 414], [410, 414], [411, 414], [407, 415], [408, 415], \
[409, 415], [410, 415], [411, 415], [288, 416], [289, 417], [290, 418], [291, \
419], [412, 420], [416, 420], [417, 420], [418, 420], [419, 420], [413, 421], \
[416, 421], [417, 421], [418, 421], [419, 421], [414, 422], [416, 422], [417, \
422], [418, 422], [419, 422], [415, 423], [416, 423], [417, 423], [418, 423], \
[419, 423], [296, 424], [297, 425], [298, 426], [299, 427], [420, 428], [424, \
428], [425, 428], [426, 428], [427, 428], [421, 429], [424, 429], [425, 429], \
[426, 429], [427, 429], [422, 430], [424, 430], [425, 430], [426, 430], [427, \
430], [423, 431], [424, 431], [425, 431], [426, 431], [427, 431], [304, 432], \
[305, 433], [306, 434], [307, 435], [428, 436], [432, 436], [433, 436], [434, \
436], [435, 436], [429, 437], [432, 437], [433, 437], [434, 437], [435, 437], \
[430, 438], [432, 438], [433, 438], [434, 438], [435, 438], [431, 439], [432, \
439], [433, 439], [434, 439], [435, 439], [312, 440], [313, 441], [314, 442], \
[315, 443], [436, 444], [440, 444], [441, 444], [442, 444], [443, 444], [437, \
445], [440, 445], [441, 445], [442, 445], [443, 445], [438, 446], [440, 446], \
[441, 446], [442, 446], [443, 446], [439, 447], [440, 447], [441, 447], [442, \
447], [443, 447], [320, 448], [321, 449], [322, 450], [323, 451], [444, 452], \
[448, 452], [449, 452], [450, 452], [451, 452], [445, 453], [448, 453], [449, \
453], [450, 453], [451, 453], [446, 454], [448, 454], [449, 454], [450, 454], \
[451, 454], [447, 455], [448, 455], [449, 455], [450, 455], [451, 455], [328, \
456], [329, 457], [330, 458], [331, 459], [452, 460], [456, 460], [457, 460], \
[458, 460], [459, 460], [453, 461], [456, 461], [457, 461], [458, 461], [459, \
461], [454, 462], [456, 462], [457, 462], [458, 462], [459, 462], [455, 463], \
[456, 463], [457, 463], [458, 463], [459, 463], [336, 464], [337, 465], [338, \
466], [339, 467], [460, 468], [464, 468], [465, 468], [466, 468], [467, 468], \
[461, 469], [464, 469], [465, 469], [466, 469], [467, 469], [462, 470], [464, \
470], [465, 470], [466, 470], [467, 470], [463, 471], [464, 471], [465, 471], \
[466, 471], [467, 471], [344, 472], [345, 473], [346, 474], [347, 475], [468, \
476], [472, 476], [473, 476], [474, 476], [475, 476], [469, 477], [472, 477], \
[473, 477], [474, 477], [475, 477], [470, 478], [472, 478], [473, 478], [474, \
478], [475, 478], [471, 479], [472, 479], [473, 479], [474, 479], [475, 479], \
[352, 480], [353, 481], [354, 482], [355, 483], [476, 484], [480, 484], [481, \
484], [482, 484], [483, 484], [477, 485], [480, 485], [481, 485], [482, 485], \
[483, 485], [478, 486], [480, 486], [481, 486], [482, 486], [483, 486], [479, \
487], [480, 487], [481, 487], [482, 487], [483, 487], [360, 488], [361, 489], \
[362, 490], [363, 491], [484, 492], [488, 492], [489, 492], [490, 492], [491, \
492], [485, 493], [488, 493], [489, 493], [490, 493], [491, 493], [486, 494], \
[488, 494], [489, 494], [490, 494], [491, 494], [487, 495], [488, 495], [489, \
495], [490, 495], [491, 495], [368, 496], [369, 497], [370, 498], [371, 499], \
[492, 500], [496, 500], [497, 500], [498, 500], [499, 500], [493, 501], [496, \
501], [497, 501], [498, 501], [499, 501], [494, 502], [496, 502], [497, 502], \
[498, 502], [499, 502], [495, 503], [496, 503], [497, 503], [498, 503], [499, \
503], [376, 504], [377, 505], [378, 506], [379, 507], [500, 508], [504, 508], \
[505, 508], [506, 508], [507, 508], [501, 509], [504, 509], [505, 509], [506, \
509], [507, 509], [502, 510], [504, 510], [505, 510], [506, 510], [507, 510], \
[503, 511], [504, 511], [505, 511], [506, 511], [507, 511], [384, 512], [385, \
513], [386, 514], [387, 515], [512, 516], [513, 516], [514, 516], [515, 516], \
[512, 517], [513, 517], [514, 517], [515, 517], [512, 518], [513, 518], [514, \
518], [515, 518], [512, 519], [513, 519], [514, 519], [515, 519], [392, 520], \
[393, 521], [394, 522], [395, 523], [517, 525], [520, 525], [521, 525], [522, \
525], [523, 525], [518, 526], [520, 526], [521, 526], [522, 526], [523, 526], \
[519, 527], [520, 527], [521, 527], [522, 527], [523, 527], [400, 528], [401, \
529], [402, 530], [403, 531], [528, 532], [529, 532], [530, 532], [531, 532], \
[525, 533], [528, 533], [529, 533], [530, 533], [531, 533], [526, 534], [528, \
534], [529, 534], [530, 534], [531, 534], [527, 535], [528, 535], [529, 535], \
[530, 535], [531, 535], [408, 536], [409, 537], [410, 538], [411, 539], [532, \
540], [536, 540], [537, 540], [538, 540], [539, 540], [533, 541], [536, 541], \
[537, 541], [538, 541], [539, 541], [534, 542], [536, 542], [537, 542], [538, \
542], [539, 542], [535, 543], [536, 543], [537, 543], [538, 543], [539, 543], \
[416, 544], [417, 545], [418, 546], [419, 547], [541, 549], [544, 549], [545, \
549], [546, 549], [547, 549], [542, 550], [544, 550], [545, 550], [546, 550], \
[547, 550], [543, 551], [544, 551], [545, 551], [546, 551], [547, 551], [424, \
552], [425, 553], [426, 554], [427, 555], [552, 556], [553, 556], [555, 556], \
[549, 557], [552, 557], [553, 557], [554, 557], [555, 557], [550, 558], [552, \
558], [553, 558], [554, 558], [555, 558], [551, 559], [552, 559], [553, 559], \
[554, 559], [555, 559], [432, 560], [433, 561], [434, 562], [435, 563], [556, \
564], [560, 564], [561, 564], [562, 564], [563, 564], [557, 565], [560, 565], \
[561, 565], [562, 565], [563, 565], [558, 566], [560, 566], [561, 566], [562, \
566], [563, 566], [559, 567], [560, 567], [561, 567], [562, 567], [563, 567], \
[440, 568], [441, 569], [442, 570], [443, 571], [564, 572], [568, 572], [569, \
572], [570, 572], [571, 572], [565, 573], [568, 573], [569, 573], [570, 573], \
[571, 573], [566, 574], [568, 574], [569, 574], [570, 574], [571, 574], [567, \
575], [568, 575], [569, 575], [570, 575], [571, 575], [448, 576], [449, 577], \
[450, 578], [451, 579], [572, 580], [576, 580], [577, 580], [578, 580], [579, \
580], [573, 581], [576, 581], [577, 581], [578, 581], [579, 581], [574, 582], \
[576, 582], [577, 582], [578, 582], [579, 582], [575, 583], [576, 583], [577, \
583], [578, 583], [579, 583], [456, 584], [457, 585], [458, 586], [459, 587], \
[580, 588], [584, 588], [585, 588], [586, 588], [587, 588], [581, 589], [584, \
589], [585, 589], [586, 589], [587, 589], [582, 590], [584, 590], [585, 590], \
[586, 590], [587, 590], [583, 591], [584, 591], [585, 591], [586, 591], [587, \
591], [464, 592], [465, 593], [466, 594], [467, 595], [588, 596], [592, 596], \
[593, 596], [594, 596], [595, 596], [589, 597], [592, 597], [593, 597], [594, \
597], [595, 597], [590, 598], [592, 598], [593, 598], [594, 598], [595, 598], \
[591, 599], [592, 599], [593, 599], [594, 599], [595, 599], [472, 600], [473, \
601], [474, 602], [475, 603], [596, 604], [600, 604], [601, 604], [602, 604], \
[603, 604], [597, 605], [600, 605], [601, 605], [602, 605], [603, 605], [598, \
606], [600, 606], [601, 606], [602, 606], [603, 606], [599, 607], [600, 607], \
[601, 607], [602, 607], [603, 607], [480, 608], [481, 609], [482, 610], [483, \
611], [604, 612], [608, 612], [609, 612], [610, 612], [611, 612], [605, 613], \
[608, 613], [609, 613], [610, 613], [611, 613], [606, 614], [608, 614], [609, \
614], [610, 614], [611, 614], [607, 615], [608, 615], [609, 615], [610, 615], \
[611, 615], [488, 616], [489, 617], [490, 618], [491, 619], [612, 620], [616, \
620], [617, 620], [618, 620], [619, 620], [613, 621], [616, 621], [617, 621], \
[618, 621], [619, 621], [614, 622], [616, 622], [617, 622], [618, 622], [619, \
622], [615, 623], [616, 623], [617, 623], [618, 623], [619, 623], [496, 624], \
[497, 625], [498, 626], [499, 627], [620, 628], [624, 628], [625, 628], [626, \
628], [627, 628], [621, 629], [624, 629], [625, 629], [626, 629], [627, 629], \
[622, 630], [624, 630], [625, 630], [626, 630], [627, 630], [623, 631], [624, \
631], [625, 631], [626, 631], [627, 631], [504, 632], [505, 633], [506, 634], \
[507, 635], [628, 636], [632, 636], [633, 636], [634, 636], [635, 636], [629, \
637], [632, 637], [633, 637], [634, 637], [635, 637], [630, 638], [632, 638], \
[633, 638], [634, 638], [635, 638], [631, 639], [632, 639], [633, 639], [634, \
639], [635, 639], [512, 640], [513, 641], [514, 642], [515, 643], [640, 644], \
[641, 644], [642, 644], [643, 644], [640, 645], [641, 645], [642, 645], [643, \
645], [640, 646], [641, 646], [642, 646], [643, 646], [640, 647], [641, 647], \
[642, 647], [643, 647], [520, 648], [521, 649], [522, 650], [523, 651], [644, \
652], [648, 652], [649, 652], [650, 652], [651, 652], [645, 653], [648, 653], \
[649, 653], [650, 653], [651, 653], [646, 654], [648, 654], [649, 654], [650, \
654], [651, 654], [647, 655], [648, 655], [649, 655], [650, 655], [651, 655], \
[528, 656], [529, 657], [530, 658], [531, 659], [652, 660], [656, 660], [657, \
660], [658, 660], [659, 660], [653, 661], [656, 661], [657, 661], [658, 661], \
[659, 661], [654, 662], [656, 662], [657, 662], [658, 662], [659, 662], [655, \
663], [656, 663], [657, 663], [658, 663], [659, 663], [536, 664], [537, 665], \
[538, 666], [539, 667], [660, 668], [664, 668], [665, 668], [666, 668], [667, \
668], [661, 669], [664, 669], [665, 669], [666, 669], [667, 669], [662, 670], \
[664, 670], [665, 670], [666, 670], [667, 670], [663, 671], [664, 671], [665, \
671], [666, 671], [667, 671], [544, 672], [545, 673], [546, 674], [547, 675], \
[668, 676], [672, 676], [673, 676], [674, 676], [675, 676], [669, 677], [672, \
677], [673, 677], [674, 677], [675, 677], [670, 678], [672, 678], [673, 678], \
[674, 678], [675, 678], [671, 679], [672, 679], [673, 679], [674, 679], [675, \
679], [552, 680], [553, 681], [554, 682], [555, 683], [676, 684], [680, 684], \
[681, 684], [682, 684], [683, 684], [677, 685], [680, 685], [681, 685], [682, \
685], [683, 685], [678, 686], [680, 686], [681, 686], [682, 686], [683, 686], \
[679, 687], [680, 687], [681, 687], [682, 687], [683, 687], [560, 688], [561, \
689], [562, 690], [563, 691], [684, 692], [688, 692], [689, 692], [690, 692], \
[691, 692], [685, 693], [688, 693], [689, 693], [690, 693], [691, 693], [686, \
694], [688, 694], [689, 694], [690, 694], [691, 694], [687, 695], [688, 695], \
[689, 695], [690, 695], [691, 695], [568, 696], [569, 697], [570, 698], [571, \
699], [692, 700], [696, 700], [697, 700], [698, 700], [699, 700], [693, 701], \
[696, 701], [697, 701], [698, 701], [699, 701], [694, 702], [696, 702], [697, \
702], [698, 702], [699, 702], [695, 703], [696, 703], [697, 703], [698, 703], \
[699, 703], [576, 704], [577, 705], [578, 706], [579, 707], [700, 708], [704, \
708], [705, 708], [706, 708], [707, 708], [701, 709], [704, 709], [705, 709], \
[706, 709], [707, 709], [702, 710], [704, 710], [705, 710], [706, 710], [707, \
710], [703, 711], [704, 711], [705, 711], [706, 711], [707, 711], [584, 712], \
[585, 713], [586, 714], [587, 715], [708, 716], [712, 716], [713, 716], [714, \
716], [715, 716], [709, 717], [712, 717], [713, 717], [714, 717], [715, 717], \
[710, 718], [712, 718], [713, 718], [714, 718], [715, 718], [711, 719], [712, \
719], [713, 719], [714, 719], [715, 719], [592, 720], [593, 721], [594, 722], \
[595, 723], [716, 724], [720, 724], [721, 724], [722, 724], [723, 724], [717, \
725], [720, 725], [721, 725], [722, 725], [723, 725], [718, 726], [720, 726], \
[721, 726], [722, 726], [723, 726], [719, 727], [720, 727], [721, 727], [722, \
727], [723, 727], [600, 728], [601, 729], [602, 730], [603, 731], [724, 732], \
[728, 732], [729, 732], [730, 732], [731, 732], [725, 733], [728, 733], [729, \
733], [730, 733], [731, 733], [726, 734], [728, 734], [729, 734], [730, 734], \
[731, 734], [727, 735], [728, 735], [729, 735], [730, 735], [731, 735], [608, \
736], [609, 737], [610, 738], [611, 739], [732, 740], [736, 740], [737, 740], \
[738, 740], [739, 740], [733, 741], [736, 741], [737, 741], [738, 741], [739, \
741], [734, 742], [736, 742], [737, 742], [738, 742], [739, 742], [735, 743], \
[736, 743], [737, 743], [738, 743], [739, 743], [616, 744], [617, 745], [618, \
746], [619, 747], [740, 748], [744, 748], [745, 748], [746, 748], [747, 748], \
[741, 749], [744, 749], [745, 749], [746, 749], [747, 749], [742, 750], [744, \
750], [745, 750], [746, 750], [747, 750], [743, 751], [744, 751], [745, 751], \
[746, 751], [747, 751], [624, 752], [625, 753], [626, 754], [627, 755], [748, \
756], [752, 756], [753, 756], [754, 756], [755, 756], [749, 757], [752, 757], \
[753, 757], [754, 757], [755, 757], [750, 758], [752, 758], [753, 758], [754, \
758], [755, 758], [751, 759], [752, 759], [753, 759], [754, 759], [755, 759], \
[632, 760], [633, 761], [634, 762], [635, 763], [756, 764], [760, 764], [761, \
764], [762, 764], [763, 764], [757, 765], [760, 765], [761, 765], [762, 765], \
[763, 765], [758, 766], [760, 766], [761, 766], [762, 766], [763, 766], [759, \
767], [760, 767], [761, 767], [762, 767], [763, 767], [640, 768], [641, 769], \
[642, 770], [643, 771], [768, 772], [769, 772], [770, 772], [771, 772], [768, \
773], [769, 773], [770, 773], [771, 773], [768, 774], [769, 774], [770, 774], \
[771, 774], [768, 775], [769, 775], [770, 775], [771, 775], [648, 776], [649, \
777], [650, 778], [651, 779], [772, 780], [776, 780], [777, 780], [778, 780], \
[779, 780], [773, 781], [776, 781], [777, 781], [778, 781], [779, 781], [774, \
782], [776, 782], [777, 782], [778, 782], [779, 782], [775, 783], [776, 783], \
[777, 783], [778, 783], [779, 783], [656, 784], [657, 785], [658, 786], [659, \
787], [780, 788], [784, 788], [785, 788], [786, 788], [787, 788], [781, 789], \
[784, 789], [785, 789], [786, 789], [787, 789], [782, 790], [784, 790], [785, \
790], [786, 790], [787, 790], [783, 791], [784, 791], [785, 791], [786, 791], \
[787, 791], [664, 792], [665, 793], [666, 794], [667, 795], [788, 796], [792, \
796], [793, 796], [794, 796], [795, 796], [789, 797], [792, 797], [793, 797], \
[794, 797], [795, 797], [790, 798], [792, 798], [793, 798], [794, 798], [795, \
798], [791, 799], [792, 799], [793, 799], [794, 799], [795, 799], [672, 800], \
[673, 801], [674, 802], [675, 803], [796, 804], [800, 804], [801, 804], [802, \
804], [803, 804], [797, 805], [800, 805], [801, 805], [802, 805], [803, 805], \
[798, 806], [800, 806], [801, 806], [802, 806], [803, 806], [799, 807], [800, \
807], [801, 807], [802, 807], [803, 807], [680, 808], [681, 809], [682, 810], \
[683, 811], [804, 812], [808, 812], [809, 812], [810, 812], [811, 812], [805, \
813], [808, 813], [809, 813], [810, 813], [811, 813], [806, 814], [808, 814], \
[809, 814], [810, 814], [811, 814], [807, 815], [808, 815], [809, 815], [810, \
815], [811, 815], [688, 816], [689, 817], [690, 818], [691, 819], [812, 820], \
[816, 820], [817, 820], [818, 820], [819, 820], [813, 821], [816, 821], [817, \
821], [818, 821], [819, 821], [814, 822], [816, 822], [817, 822], [818, 822], \
[819, 822], [815, 823], [816, 823], [817, 823], [818, 823], [819, 823], [696, \
824], [697, 825], [698, 826], [699, 827], [820, 828], [824, 828], [825, 828], \
[826, 828], [827, 828], [821, 829], [824, 829], [825, 829], [826, 829], [827, \
829], [822, 830], [824, 830], [825, 830], [826, 830], [827, 830], [823, 831], \
[824, 831], [825, 831], [826, 831], [827, 831], [704, 832], [705, 833], [706, \
834], [707, 835], [828, 836], [832, 836], [833, 836], [834, 836], [835, 836], \
[829, 837], [832, 837], [833, 837], [834, 837], [835, 837], [830, 838], [832, \
838], [833, 838], [834, 838], [835, 838], [831, 839], [832, 839], [833, 839], \
[834, 839], [835, 839], [712, 840], [713, 841], [714, 842], [715, 843], [836, \
844], [840, 844], [841, 844], [842, 844], [843, 844], [837, 845], [840, 845], \
[841, 845], [842, 845], [843, 845], [838, 846], [840, 846], [841, 846], [842, \
846], [843, 846], [839, 847], [840, 847], [841, 847], [842, 847], [843, 847], \
[720, 848], [721, 849], [722, 850], [723, 851], [844, 852], [848, 852], [849, \
852], [850, 852], [851, 852], [845, 853], [848, 853], [849, 853], [850, 853], \
[851, 853], [846, 854], [848, 854], [849, 854], [850, 854], [851, 854], [847, \
855], [848, 855], [849, 855], [850, 855], [851, 855], [728, 856], [729, 857], \
[730, 858], [731, 859], [852, 860], [856, 860], [857, 860], [858, 860], [859, \
860], [853, 861], [856, 861], [857, 861], [858, 861], [859, 861], [854, 862], \
[856, 862], [857, 862], [858, 862], [859, 862], [855, 863], [856, 863], [857, \
863], [858, 863], [859, 863], [736, 864], [737, 865], [738, 866], [739, 867], \
[860, 868], [864, 868], [865, 868], [866, 868], [867, 868], [861, 869], [864, \
869], [865, 869], [866, 869], [867, 869], [862, 870], [864, 870], [865, 870], \
[866, 870], [867, 870], [863, 871], [864, 871], [865, 871], [866, 871], [867, \
871], [744, 872], [745, 873], [746, 874], [747, 875], [868, 876], [872, 876], \
[873, 876], [874, 876], [875, 876], [869, 877], [872, 877], [873, 877], [874, \
877], [875, 877], [870, 878], [872, 878], [873, 878], [874, 878], [875, 878], \
[871, 879], [872, 879], [873, 879], [874, 879], [875, 879], [752, 880], [753, \
881], [754, 882], [755, 883], [876, 884], [880, 884], [881, 884], [882, 884], \
[883, 884], [877, 885], [880, 885], [881, 885], [882, 885], [883, 885], [878, \
886], [880, 886], [881, 886], [882, 886], [883, 886], [879, 887], [880, 887], \
[881, 887], [882, 887], [883, 887], [760, 888], [761, 889], [762, 890], [763, \
891], [884, 892], [888, 892], [889, 892], [890, 892], [891, 892], [885, 893], \
[888, 893], [889, 893], [890, 893], [891, 893], [886, 894], [888, 894], [889, \
894], [890, 894], [891, 894], [887, 895], [888, 895], [889, 895], [890, 895], \
[891, 895], [768, 896], [769, 897], [770, 898], [771, 899], [896, 900], [897, \
900], [898, 900], [899, 900], [896, 901], [897, 901], [898, 901], [899, 901], \
[896, 902], [897, 902], [898, 902], [899, 902], [896, 903], [897, 903], [898, \
903], [899, 903], [776, 904], [777, 905], [778, 906], [779, 907], [900, 908], \
[904, 908], [905, 908], [906, 908], [907, 908], [901, 909], [904, 909], [905, \
909], [906, 909], [907, 909], [902, 910], [904, 910], [905, 910], [906, 910], \
[907, 910], [903, 911], [904, 911], [905, 911], [906, 911], [907, 911], [784, \
912], [785, 913], [786, 914], [787, 915], [908, 916], [912, 916], [913, 916], \
[914, 916], [915, 916], [909, 917], [912, 917], [913, 917], [914, 917], [915, \
917], [910, 918], [912, 918], [913, 918], [914, 918], [915, 918], [911, 919], \
[912, 919], [913, 919], [914, 919], [915, 919], [792, 920], [793, 921], [794, \
922], [795, 923], [916, 924], [920, 924], [921, 924], [922, 924], [923, 924], \
[917, 925], [920, 925], [921, 925], [922, 925], [923, 925], [918, 926], [920, \
926], [921, 926], [922, 926], [923, 926], [919, 927], [920, 927], [921, 927], \
[922, 927], [923, 927], [800, 928], [801, 929], [802, 930], [803, 931], [924, \
932], [928, 932], [929, 932], [930, 932], [931, 932], [925, 933], [928, 933], \
[929, 933], [930, 933], [931, 933], [926, 934], [928, 934], [929, 934], [930, \
934], [931, 934], [927, 935], [928, 935], [929, 935], [930, 935], [931, 935], \
[808, 936], [809, 937], [810, 938], [811, 939], [932, 940], [936, 940], [937, \
940], [938, 940], [939, 940], [933, 941], [936, 941], [937, 941], [938, 941], \
[939, 941], [934, 942], [936, 942], [937, 942], [938, 942], [939, 942], [935, \
943], [936, 943], [937, 943], [938, 943], [939, 943], [816, 944], [817, 945], \
[818, 946], [819, 947], [940, 948], [944, 948], [945, 948], [946, 948], [947, \
948], [941, 949], [944, 949], [945, 949], [946, 949], [947, 949], [942, 950], \
[944, 950], [945, 950], [946, 950], [947, 950], [943, 951], [944, 951], [945, \
951], [946, 951], [947, 951], [824, 952], [825, 953], [826, 954], [827, 955], \
[948, 956], [952, 956], [953, 956], [954, 956], [955, 956], [949, 957], [952, \
957], [953, 957], [954, 957], [955, 957], [950, 958], [952, 958], [953, 958], \
[954, 958], [955, 958], [951, 959], [952, 959], [953, 959], [954, 959], [955, \
959], [832, 960], [833, 961], [834, 962], [835, 963], [956, 964], [960, 964], \
[961, 964], [962, 964], [963, 964], [957, 965], [960, 965], [961, 965], [962, \
965], [963, 965], [958, 966], [960, 966], [961, 966], [962, 966], [963, 966], \
[959, 967], [960, 967], [961, 967], [962, 967], [963, 967], [840, 968], [841, \
969], [842, 970], [843, 971], [964, 972], [968, 972], [969, 972], [970, 972], \
[971, 972], [965, 973], [968, 973], [969, 973], [970, 973], [971, 973], [966, \
974], [968, 974], [969, 974], [970, 974], [971, 974], [967, 975], [968, 975], \
[969, 975], [970, 975], [971, 975], [848, 976], [849, 977], [850, 978], [851, \
979], [972, 980], [976, 980], [977, 980], [978, 980], [979, 980], [973, 981], \
[976, 981], [977, 981], [978, 981], [979, 981], [974, 982], [976, 982], [977, \
982], [978, 982], [979, 982], [975, 983], [976, 983], [977, 983], [978, 983], \
[979, 983], [856, 984], [857, 985], [858, 986], [859, 987], [980, 988], [984, \
988], [985, 988], [986, 988], [987, 988], [981, 989], [984, 989], [985, 989], \
[986, 989], [987, 989], [982, 990], [984, 990], [985, 990], [986, 990], [987, \
990], [983, 991], [984, 991], [985, 991], [986, 991], [987, 991], [864, 992], \
[865, 993], [866, 994], [867, 995], [988, 996], [992, 996], [993, 996], [994, \
996], [995, 996], [989, 997], [992, 997], [993, 997], [994, 997], [995, 997], \
[990, 998], [992, 998], [993, 998], [994, 998], [995, 998], [991, 999], [992, \
999], [993, 999], [994, 999], [995, 999], [872, 1000], [873, 1001], [874, \
1002], [875, 1003], [996, 1004], [1000, 1004], [1001, 1004], [1002, 1004], \
[1003, 1004], [997, 1005], [1000, 1005], [1001, 1005], [1002, 1005], [1003, \
1005], [998, 1006], [1000, 1006], [1001, 1006], [1002, 1006], [1003, 1006], \
[999, 1007], [1000, 1007], [1001, 1007], [1002, 1007], [1003, 1007], [880, \
1008], [881, 1009], [882, 1010], [883, 1011], [1004, 1012], [1008, 1012], \
[1009, 1012], [1010, 1012], [1011, 1012], [1005, 1013], [1008, 1013], [1009, \
1013], [1010, 1013], [1011, 1013], [1006, 1014], [1008, 1014], [1009, 1014], \
[1010, 1014], [1011, 1014], [1007, 1015], [1008, 1015], [1009, 1015], [1010, \
1015], [1011, 1015], [888, 1016], [889, 1017], [890, 1018], [891, 1019], \
[1012, 1020], [1016, 1020], [1017, 1020], [1018, 1020], [1019, 1020], [1013, \
1021], [1016, 1021], [1017, 1021], [1018, 1021], [1019, 1021], [1014, 1022], \
[1016, 1022], [1017, 1022], [1018, 1022], [1019, 1022], [1015, 1023], [1016, \
1023], [1017, 1023], [1018, 1023], [1019, 1023], [896, 1024], [897, 1025], \
[898, 1026], [899, 1027], [1024, 1028], [1025, 1028], [1026, 1028], [1027, \
1028], [1024, 1029], [1025, 1029], [1026, 1029], [1027, 1029], [1024, 1030], \
[1025, 1030], [1026, 1030], [1027, 1030], [1024, 1031], [1025, 1031], [1026, \
1031], [1027, 1031], [904, 1032], [905, 1033], [906, 1034], [907, 1035], \
[1028, 1036], [1032, 1036], [1033, 1036], [1034, 1036], [1035, 1036], [1029, \
1037], [1032, 1037], [1033, 1037], [1034, 1037], [1035, 1037], [1030, 1038], \
[1032, 1038], [1033, 1038], [1034, 1038], [1035, 1038], [1031, 1039], [1032, \
1039], [1033, 1039], [1034, 1039], [1035, 1039], [912, 1040], [913, 1041], \
[914, 1042], [915, 1043], [1036, 1044], [1040, 1044], [1041, 1044], [1042, \
1044], [1043, 1044], [1037, 1045], [1040, 1045], [1041, 1045], [1042, 1045], \
[1043, 1045], [1038, 1046], [1040, 1046], [1041, 1046], [1042, 1046], [1043, \
1046], [1039, 1047], [1040, 1047], [1041, 1047], [1042, 1047], [1043, 1047], \
[920, 1048], [921, 1049], [922, 1050], [923, 1051], [1044, 1052], [1048, \
1052], [1049, 1052], [1050, 1052], [1051, 1052], [1045, 1053], [1048, 1053], \
[1049, 1053], [1050, 1053], [1051, 1053], [1046, 1054], [1048, 1054], [1049, \
1054], [1050, 1054], [1051, 1054], [1047, 1055], [1048, 1055], [1049, 1055], \
[1050, 1055], [1051, 1055], [928, 1056], [929, 1057], [930, 1058], [931, \
1059], [1052, 1060], [1056, 1060], [1057, 1060], [1058, 1060], [1059, 1060], \
[1053, 1061], [1056, 1061], [1057, 1061], [1058, 1061], [1059, 1061], [1054, \
1062], [1056, 1062], [1057, 1062], [1058, 1062], [1059, 1062], [1055, 1063], \
[1056, 1063], [1057, 1063], [1058, 1063], [1059, 1063], [936, 1064], [937, \
1065], [938, 1066], [939, 1067], [1060, 1068], [1064, 1068], [1065, 1068], \
[1066, 1068], [1067, 1068], [1061, 1069], [1064, 1069], [1065, 1069], [1066, \
1069], [1067, 1069], [1062, 1070], [1064, 1070], [1065, 1070], [1066, 1070], \
[1067, 1070], [1063, 1071], [1064, 1071], [1065, 1071], [1066, 1071], [1067, \
1071], [944, 1072], [945, 1073], [946, 1074], [947, 1075], [1068, 1076], \
[1072, 1076], [1073, 1076], [1074, 1076], [1075, 1076], [1069, 1077], [1072, \
1077], [1073, 1077], [1074, 1077], [1075, 1077], [1070, 1078], [1072, 1078], \
[1073, 1078], [1074, 1078], [1075, 1078], [1071, 1079], [1072, 1079], [1073, \
1079], [1074, 1079], [1075, 1079], [952, 1080], [953, 1081], [954, 1082], \
[955, 1083], [1076, 1084], [1080, 1084], [1081, 1084], [1082, 1084], [1083, \
1084], [1077, 1085], [1080, 1085], [1081, 1085], [1082, 1085], [1083, 1085], \
[1078, 1086], [1080, 1086], [1081, 1086], [1082, 1086], [1083, 1086], [1079, \
1087], [1080, 1087], [1081, 1087], [1082, 1087], [1083, 1087], [960, 1088], \
[961, 1089], [962, 1090], [963, 1091], [1084, 1092], [1088, 1092], [1089, \
1092], [1090, 1092], [1091, 1092], [1085, 1093], [1088, 1093], [1089, 1093], \
[1090, 1093], [1091, 1093], [1086, 1094], [1088, 1094], [1089, 1094], [1090, \
1094], [1091, 1094], [1087, 1095], [1088, 1095], [1089, 1095], [1090, 1095], \
[1091, 1095], [968, 1096], [969, 1097], [970, 1098], [971, 1099], [1092, \
1100], [1096, 1100], [1097, 1100], [1098, 1100], [1099, 1100], [1093, 1101], \
[1096, 1101], [1097, 1101], [1098, 1101], [1099, 1101], [1094, 1102], [1096, \
1102], [1097, 1102], [1098, 1102], [1099, 1102], [1095, 1103], [1096, 1103], \
[1097, 1103], [1098, 1103], [1099, 1103], [976, 1104], [977, 1105], [978, \
1106], [979, 1107], [1100, 1108], [1104, 1108], [1105, 1108], [1106, 1108], \
[1107, 1108], [1101, 1109], [1104, 1109], [1105, 1109], [1106, 1109], [1107, \
1109], [1102, 1110], [1104, 1110], [1105, 1110], [1106, 1110], [1107, 1110], \
[1103, 1111], [1104, 1111], [1105, 1111], [1106, 1111], [1107, 1111], [984, \
1112], [985, 1113], [986, 1114], [987, 1115], [1108, 1116], [1112, 1116], \
[1113, 1116], [1114, 1116], [1115, 1116], [1109, 1117], [1112, 1117], [1113, \
1117], [1114, 1117], [1115, 1117], [1110, 1118], [1112, 1118], [1113, 1118], \
[1114, 1118], [1115, 1118], [1111, 1119], [1112, 1119], [1113, 1119], [1114, \
1119], [1115, 1119], [992, 1120], [993, 1121], [994, 1122], [995, 1123], \
[1116, 1124], [1120, 1124], [1121, 1124], [1122, 1124], [1123, 1124], [1117, \
1125], [1120, 1125], [1121, 1125], [1122, 1125], [1123, 1125], [1118, 1126], \
[1120, 1126], [1121, 1126], [1122, 1126], [1123, 1126], [1119, 1127], [1120, \
1127], [1121, 1127], [1122, 1127], [1123, 1127], [1000, 1128], [1001, 1129], \
[1002, 1130], [1003, 1131], [1124, 1132], [1128, 1132], [1129, 1132], [1130, \
1132], [1131, 1132], [1125, 1133], [1128, 1133], [1129, 1133], [1130, 1133], \
[1131, 1133], [1126, 1134], [1128, 1134], [1129, 1134], [1130, 1134], [1131, \
1134], [1127, 1135], [1128, 1135], [1129, 1135], [1130, 1135], [1131, 1135], \
[1008, 1136], [1009, 1137], [1010, 1138], [1011, 1139], [1132, 1140], [1136, \
1140], [1137, 1140], [1138, 1140], [1139, 1140], [1133, 1141], [1136, 1141], \
[1137, 1141], [1138, 1141], [1139, 1141], [1134, 1142], [1136, 1142], [1137, \
1142], [1138, 1142], [1139, 1142], [1135, 1143], [1136, 1143], [1137, 1143], \
[1138, 1143], [1139, 1143], [1016, 1144], [1017, 1145], [1018, 1146], [1019, \
1147], [1140, 1148], [1144, 1148], [1145, 1148], [1146, 1148], [1147, 1148], \
[1141, 1149], [1144, 1149], [1145, 1149], [1146, 1149], [1147, 1149], [1142, \
1150], [1144, 1150], [1145, 1150], [1146, 1150], [1147, 1150], [1143, 1151], \
[1144, 1151], [1145, 1151], [1146, 1151], [1147, 1151], [1024, 1152], [1025, \
1153], [1026, 1154], [1027, 1155], [1152, 1156], [1153, 1156], [1154, 1156], \
[1155, 1156], [1152, 1157], [1153, 1157], [1154, 1157], [1155, 1157], [1152, \
1158], [1153, 1158], [1154, 1158], [1155, 1158], [1152, 1159], [1153, 1159], \
[1154, 1159], [1155, 1159], [1032, 1160], [1033, 1161], [1034, 1162], [1035, \
1163], [1156, 1164], [1160, 1164], [1161, 1164], [1162, 1164], [1163, 1164], \
[1157, 1165], [1160, 1165], [1161, 1165], [1162, 1165], [1163, 1165], [1158, \
1166], [1160, 1166], [1161, 1166], [1162, 1166], [1163, 1166], [1159, 1167], \
[1160, 1167], [1161, 1167], [1162, 1167], [1163, 1167], [1040, 1168], [1041, \
1169], [1042, 1170], [1043, 1171], [1164, 1172], [1168, 1172], [1169, 1172], \
[1170, 1172], [1171, 1172], [1165, 1173], [1168, 1173], [1169, 1173], [1170, \
1173], [1171, 1173], [1166, 1174], [1168, 1174], [1169, 1174], [1170, 1174], \
[1171, 1174], [1167, 1175], [1168, 1175], [1169, 1175], [1170, 1175], [1171, \
1175], [1048, 1176], [1049, 1177], [1050, 1178], [1051, 1179], [1172, 1180], \
[1176, 1180], [1177, 1180], [1178, 1180], [1179, 1180], [1173, 1181], [1176, \
1181], [1177, 1181], [1178, 1181], [1179, 1181], [1174, 1182], [1176, 1182], \
[1177, 1182], [1178, 1182], [1179, 1182], [1175, 1183], [1176, 1183], [1177, \
1183], [1178, 1183], [1179, 1183], [1056, 1184], [1057, 1185], [1058, 1186], \
[1059, 1187], [1180, 1188], [1184, 1188], [1185, 1188], [1186, 1188], [1187, \
1188], [1181, 1189], [1184, 1189], [1185, 1189], [1186, 1189], [1187, 1189], \
[1182, 1190], [1184, 1190], [1185, 1190], [1186, 1190], [1187, 1190], [1183, \
1191], [1184, 1191], [1185, 1191], [1186, 1191], [1187, 1191], [1064, 1192], \
[1065, 1193], [1066, 1194], [1067, 1195], [1188, 1196], [1192, 1196], [1193, \
1196], [1194, 1196], [1195, 1196], [1189, 1197], [1192, 1197], [1193, 1197], \
[1194, 1197], [1195, 1197], [1190, 1198], [1192, 1198], [1193, 1198], [1194, \
1198], [1195, 1198], [1191, 1199], [1192, 1199], [1193, 1199], [1194, 1199], \
[1195, 1199], [1072, 1200], [1073, 1201], [1074, 1202], [1075, 1203], [1196, \
1204], [1200, 1204], [1201, 1204], [1202, 1204], [1203, 1204], [1197, 1205], \
[1200, 1205], [1201, 1205], [1202, 1205], [1203, 1205], [1198, 1206], [1200, \
1206], [1201, 1206], [1202, 1206], [1203, 1206], [1199, 1207], [1200, 1207], \
[1201, 1207], [1202, 1207], [1203, 1207], [1080, 1208], [1081, 1209], [1082, \
1210], [1083, 1211], [1204, 1212], [1208, 1212], [1209, 1212], [1210, 1212], \
[1211, 1212], [1205, 1213], [1208, 1213], [1209, 1213], [1210, 1213], [1211, \
1213], [1206, 1214], [1208, 1214], [1209, 1214], [1210, 1214], [1211, 1214], \
[1207, 1215], [1208, 1215], [1209, 1215], [1210, 1215], [1211, 1215], [1088, \
1216], [1089, 1217], [1090, 1218], [1091, 1219], [1212, 1220], [1216, 1220], \
[1217, 1220], [1218, 1220], [1219, 1220], [1213, 1221], [1216, 1221], [1217, \
1221], [1218, 1221], [1219, 1221], [1214, 1222], [1216, 1222], [1217, 1222], \
[1218, 1222], [1219, 1222], [1215, 1223], [1216, 1223], [1217, 1223], [1218, \
1223], [1219, 1223], [1096, 1224], [1097, 1225], [1098, 1226], [1099, 1227], \
[1220, 1228], [1224, 1228], [1225, 1228], [1226, 1228], [1227, 1228], [1221, \
1229], [1224, 1229], [1225, 1229], [1226, 1229], [1227, 1229], [1222, 1230], \
[1224, 1230], [1225, 1230], [1226, 1230], [1227, 1230], [1223, 1231], [1224, \
1231], [1225, 1231], [1226, 1231], [1227, 1231], [1104, 1232], [1105, 1233], \
[1106, 1234], [1107, 1235], [1228, 1236], [1232, 1236], [1233, 1236], [1234, \
1236], [1235, 1236], [1229, 1237], [1232, 1237], [1233, 1237], [1234, 1237], \
[1235, 1237], [1230, 1238], [1232, 1238], [1233, 1238], [1234, 1238], [1235, \
1238], [1231, 1239], [1232, 1239], [1233, 1239], [1234, 1239], [1235, 1239], \
[1112, 1240], [1113, 1241], [1114, 1242], [1115, 1243], [1236, 1244], [1240, \
1244], [1241, 1244], [1242, 1244], [1243, 1244], [1237, 1245], [1240, 1245], \
[1241, 1245], [1242, 1245], [1243, 1245], [1238, 1246], [1240, 1246], [1241, \
1246], [1242, 1246], [1243, 1246], [1239, 1247], [1240, 1247], [1241, 1247], \
[1242, 1247], [1243, 1247], [1120, 1248], [1121, 1249], [1122, 1250], [1123, \
1251], [1244, 1252], [1248, 1252], [1249, 1252], [1250, 1252], [1251, 1252], \
[1245, 1253], [1248, 1253], [1249, 1253], [1250, 1253], [1251, 1253], [1246, \
1254], [1248, 1254], [1249, 1254], [1250, 1254], [1251, 1254], [1247, 1255], \
[1248, 1255], [1249, 1255], [1250, 1255], [1251, 1255], [1128, 1256], [1129, \
1257], [1130, 1258], [1131, 1259], [1252, 1260], [1256, 1260], [1257, 1260], \
[1258, 1260], [1259, 1260], [1253, 1261], [1256, 1261], [1257, 1261], [1258, \
1261], [1259, 1261], [1254, 1262], [1256, 1262], [1257, 1262], [1258, 1262], \
[1259, 1262], [1255, 1263], [1256, 1263], [1257, 1263], [1258, 1263], [1259, \
1263], [1136, 1264], [1137, 1265], [1138, 1266], [1139, 1267], [1260, 1268], \
[1264, 1268], [1265, 1268], [1266, 1268], [1267, 1268], [1261, 1269], [1264, \
1269], [1265, 1269], [1266, 1269], [1267, 1269], [1262, 1270], [1264, 1270], \
[1265, 1270], [1266, 1270], [1267, 1270], [1263, 1271], [1264, 1271], [1265, \
1271], [1266, 1271], [1267, 1271], [1144, 1272], [1145, 1273], [1146, 1274], \
[1147, 1275], [1268, 1276], [1272, 1276], [1273, 1276], [1274, 1276], [1275, \
1276], [1269, 1277], [1272, 1277], [1273, 1277], [1274, 1277], [1275, 1277], \
[1270, 1278], [1272, 1278], [1273, 1278], [1274, 1278], [1275, 1278], [1271, \
1279], [1272, 1279], [1273, 1279], [1274, 1279], [1275, 1279], [1152, 1280], \
[1153, 1281], [1154, 1282], [1155, 1283], [1280, 1284], [1281, 1284], [1282, \
1284], [1283, 1284], [1280, 1285], [1281, 1285], [1282, 1285], [1283, 1285], \
[1280, 1286], [1281, 1286], [1282, 1286], [1283, 1286], [1280, 1287], [1281, \
1287], [1282, 1287], [1283, 1287], [1160, 1288], [1161, 1289], [1162, 1290], \
[1163, 1291], [1284, 1292], [1288, 1292], [1289, 1292], [1290, 1292], [1291, \
1292], [1285, 1293], [1288, 1293], [1289, 1293], [1290, 1293], [1291, 1293], \
[1286, 1294], [1288, 1294], [1289, 1294], [1290, 1294], [1291, 1294], [1287, \
1295], [1288, 1295], [1289, 1295], [1290, 1295], [1291, 1295], [1168, 1296], \
[1169, 1297], [1170, 1298], [1171, 1299], [1292, 1300], [1296, 1300], [1297, \
1300], [1298, 1300], [1299, 1300], [1293, 1301], [1296, 1301], [1297, 1301], \
[1298, 1301], [1299, 1301], [1294, 1302], [1296, 1302], [1297, 1302], [1298, \
1302], [1299, 1302], [1295, 1303], [1296, 1303], [1297, 1303], [1298, 1303], \
[1299, 1303], [1176, 1304], [1177, 1305], [1178, 1306], [1179, 1307], [1300, \
1308], [1304, 1308], [1305, 1308], [1306, 1308], [1307, 1308], [1301, 1309], \
[1304, 1309], [1305, 1309], [1306, 1309], [1307, 1309], [1302, 1310], [1304, \
1310], [1305, 1310], [1306, 1310], [1307, 1310], [1303, 1311], [1304, 1311], \
[1305, 1311], [1306, 1311], [1307, 1311], [1184, 1312], [1185, 1313], [1186, \
1314], [1187, 1315], [1308, 1316], [1312, 1316], [1313, 1316], [1314, 1316], \
[1315, 1316], [1309, 1317], [1312, 1317], [1313, 1317], [1314, 1317], [1315, \
1317], [1310, 1318], [1312, 1318], [1313, 1318], [1314, 1318], [1315, 1318], \
[1311, 1319], [1312, 1319], [1313, 1319], [1314, 1319], [1315, 1319], [1192, \
1320], [1193, 1321], [1194, 1322], [1195, 1323], [1316, 1324], [1320, 1324], \
[1321, 1324], [1322, 1324], [1323, 1324], [1317, 1325], [1320, 1325], [1321, \
1325], [1322, 1325], [1323, 1325], [1318, 1326], [1320, 1326], [1321, 1326], \
[1322, 1326], [1323, 1326], [1319, 1327], [1320, 1327], [1321, 1327], [1322, \
1327], [1323, 1327], [1200, 1328], [1201, 1329], [1202, 1330], [1203, 1331], \
[1324, 1332], [1328, 1332], [1329, 1332], [1330, 1332], [1331, 1332], [1325, \
1333], [1328, 1333], [1329, 1333], [1330, 1333], [1331, 1333], [1326, 1334], \
[1328, 1334], [1329, 1334], [1330, 1334], [1331, 1334], [1327, 1335], [1328, \
1335], [1329, 1335], [1330, 1335], [1331, 1335], [1208, 1336], [1209, 1337], \
[1210, 1338], [1211, 1339], [1332, 1340], [1336, 1340], [1337, 1340], [1338, \
1340], [1339, 1340], [1333, 1341], [1336, 1341], [1337, 1341], [1338, 1341], \
[1339, 1341], [1334, 1342], [1336, 1342], [1337, 1342], [1338, 1342], [1339, \
1342], [1335, 1343], [1336, 1343], [1337, 1343], [1338, 1343], [1339, 1343], \
[1216, 1344], [1217, 1345], [1218, 1346], [1219, 1347], [1340, 1348], [1344, \
1348], [1345, 1348], [1346, 1348], [1347, 1348], [1341, 1349], [1344, 1349], \
[1345, 1349], [1346, 1349], [1347, 1349], [1342, 1350], [1344, 1350], [1345, \
1350], [1346, 1350], [1347, 1350], [1343, 1351], [1344, 1351], [1345, 1351], \
[1346, 1351], [1347, 1351], [1224, 1352], [1225, 1353], [1226, 1354], [1227, \
1355], [1348, 1356], [1352, 1356], [1353, 1356], [1354, 1356], [1355, 1356], \
[1349, 1357], [1352, 1357], [1353, 1357], [1354, 1357], [1355, 1357], [1350, \
1358], [1352, 1358], [1353, 1358], [1354, 1358], [1355, 1358], [1351, 1359], \
[1352, 1359], [1353, 1359], [1354, 1359], [1355, 1359], [1232, 1360], [1233, \
1361], [1234, 1362], [1235, 1363], [1356, 1364], [1360, 1364], [1361, 1364], \
[1362, 1364], [1363, 1364], [1357, 1365], [1360, 1365], [1361, 1365], [1362, \
1365], [1363, 1365], [1358, 1366], [1360, 1366], [1361, 1366], [1362, 1366], \
[1363, 1366], [1359, 1367], [1360, 1367], [1361, 1367], [1362, 1367], [1363, \
1367], [1240, 1368], [1241, 1369], [1242, 1370], [1243, 1371], [1364, 1372], \
[1368, 1372], [1369, 1372], [1370, 1372], [1371, 1372], [1365, 1373], [1368, \
1373], [1369, 1373], [1370, 1373], [1371, 1373], [1366, 1374], [1368, 1374], \
[1369, 1374], [1370, 1374], [1371, 1374], [1367, 1375], [1368, 1375], [1369, \
1375], [1370, 1375], [1371, 1375], [1248, 1376], [1249, 1377], [1250, 1378], \
[1251, 1379], [1372, 1380], [1376, 1380], [1377, 1380], [1378, 1380], [1379, \
1380], [1373, 1381], [1376, 1381], [1377, 1381], [1378, 1381], [1379, 1381], \
[1374, 1382], [1376, 1382], [1377, 1382], [1378, 1382], [1379, 1382], [1375, \
1383], [1376, 1383], [1377, 1383], [1378, 1383], [1379, 1383], [1256, 1384], \
[1257, 1385], [1258, 1386], [1259, 1387], [1380, 1388], [1384, 1388], [1385, \
1388], [1386, 1388], [1387, 1388], [1381, 1389], [1384, 1389], [1385, 1389], \
[1386, 1389], [1387, 1389], [1382, 1390], [1384, 1390], [1385, 1390], [1386, \
1390], [1387, 1390], [1383, 1391], [1384, 1391], [1385, 1391], [1386, 1391], \
[1387, 1391], [1264, 1392], [1265, 1393], [1266, 1394], [1267, 1395], [1388, \
1396], [1392, 1396], [1393, 1396], [1394, 1396], [1395, 1396], [1389, 1397], \
[1392, 1397], [1393, 1397], [1394, 1397], [1395, 1397], [1390, 1398], [1392, \
1398], [1393, 1398], [1394, 1398], [1395, 1398], [1391, 1399], [1392, 1399], \
[1393, 1399], [1394, 1399], [1395, 1399], [1272, 1400], [1273, 1401], [1274, \
1402], [1275, 1403], [1396, 1404], [1400, 1404], [1401, 1404], [1402, 1404], \
[1403, 1404], [1397, 1405], [1400, 1405], [1401, 1405], [1402, 1405], [1403, \
1405], [1398, 1406], [1400, 1406], [1401, 1406], [1402, 1406], [1403, 1406], \
[1399, 1407], [1400, 1407], [1401, 1407], [1402, 1407], [1403, 1407], [1280, \
1408], [1281, 1409], [1282, 1410], [1283, 1411], [1408, 1412], [1409, 1412], \
[1410, 1412], [1411, 1412], [1408, 1413], [1409, 1413], [1410, 1413], [1411, \
1413], [1408, 1414], [1409, 1414], [1410, 1414], [1411, 1414], [1408, 1415], \
[1409, 1415], [1410, 1415], [1411, 1415], [1288, 1416], [1289, 1417], [1290, \
1418], [1291, 1419], [1412, 1420], [1416, 1420], [1417, 1420], [1418, 1420], \
[1419, 1420], [1413, 1421], [1416, 1421], [1417, 1421], [1418, 1421], [1419, \
1421], [1414, 1422], [1416, 1422], [1417, 1422], [1418, 1422], [1419, 1422], \
[1415, 1423], [1416, 1423], [1417, 1423], [1418, 1423], [1419, 1423], [1296, \
1424], [1297, 1425], [1298, 1426], [1299, 1427], [1420, 1428], [1424, 1428], \
[1425, 1428], [1426, 1428], [1427, 1428], [1421, 1429], [1424, 1429], [1425, \
1429], [1426, 1429], [1427, 1429], [1422, 1430], [1424, 1430], [1425, 1430], \
[1426, 1430], [1427, 1430], [1423, 1431], [1424, 1431], [1425, 1431], [1426, \
1431], [1427, 1431], [1304, 1432], [1305, 1433], [1306, 1434], [1307, 1435], \
[1428, 1436], [1432, 1436], [1433, 1436], [1434, 1436], [1435, 1436], [1429, \
1437], [1432, 1437], [1433, 1437], [1434, 1437], [1435, 1437], [1430, 1438], \
[1432, 1438], [1433, 1438], [1434, 1438], [1435, 1438], [1431, 1439], [1432, \
1439], [1433, 1439], [1434, 1439], [1435, 1439], [1312, 1440], [1313, 1441], \
[1314, 1442], [1315, 1443], [1436, 1444], [1440, 1444], [1441, 1444], [1442, \
1444], [1443, 1444], [1437, 1445], [1440, 1445], [1441, 1445], [1442, 1445], \
[1443, 1445], [1438, 1446], [1440, 1446], [1441, 1446], [1442, 1446], [1443, \
1446], [1439, 1447], [1440, 1447], [1441, 1447], [1442, 1447], [1443, 1447], \
[1320, 1448], [1321, 1449], [1322, 1450], [1323, 1451], [1444, 1452], [1448, \
1452], [1449, 1452], [1450, 1452], [1451, 1452], [1445, 1453], [1448, 1453], \
[1449, 1453], [1450, 1453], [1451, 1453], [1446, 1454], [1448, 1454], [1449, \
1454], [1450, 1454], [1451, 1454], [1447, 1455], [1448, 1455], [1449, 1455], \
[1450, 1455], [1451, 1455], [1328, 1456], [1329, 1457], [1330, 1458], [1331, \
1459], [1452, 1460], [1456, 1460], [1457, 1460], [1458, 1460], [1459, 1460], \
[1453, 1461], [1456, 1461], [1457, 1461], [1458, 1461], [1459, 1461], [1454, \
1462], [1456, 1462], [1457, 1462], [1458, 1462], [1459, 1462], [1455, 1463], \
[1456, 1463], [1457, 1463], [1458, 1463], [1459, 1463], [1336, 1464], [1337, \
1465], [1338, 1466], [1339, 1467], [1460, 1468], [1464, 1468], [1465, 1468], \
[1466, 1468], [1467, 1468], [1461, 1469], [1464, 1469], [1465, 1469], [1466, \
1469], [1467, 1469], [1462, 1470], [1464, 1470], [1465, 1470], [1466, 1470], \
[1467, 1470], [1463, 1471], [1464, 1471], [1465, 1471], [1466, 1471], [1467, \
1471], [1344, 1472], [1345, 1473], [1346, 1474], [1347, 1475], [1468, 1476], \
[1472, 1476], [1473, 1476], [1474, 1476], [1475, 1476], [1469, 1477], [1472, \
1477], [1473, 1477], [1474, 1477], [1475, 1477], [1470, 1478], [1472, 1478], \
[1473, 1478], [1474, 1478], [1475, 1478], [1471, 1479], [1472, 1479], [1473, \
1479], [1474, 1479], [1475, 1479], [1352, 1480], [1353, 1481], [1354, 1482], \
[1355, 1483], [1476, 1484], [1480, 1484], [1481, 1484], [1482, 1484], [1483, \
1484], [1477, 1485], [1480, 1485], [1481, 1485], [1482, 1485], [1483, 1485], \
[1478, 1486], [1480, 1486], [1481, 1486], [1482, 1486], [1483, 1486], [1479, \
1487], [1480, 1487], [1481, 1487], [1482, 1487], [1483, 1487], [1360, 1488], \
[1361, 1489], [1362, 1490], [1363, 1491], [1484, 1492], [1488, 1492], [1489, \
1492], [1490, 1492], [1491, 1492], [1485, 1493], [1488, 1493], [1489, 1493], \
[1490, 1493], [1491, 1493], [1486, 1494], [1488, 1494], [1489, 1494], [1490, \
1494], [1491, 1494], [1487, 1495], [1488, 1495], [1489, 1495], [1490, 1495], \
[1491, 1495], [1368, 1496], [1369, 1497], [1370, 1498], [1371, 1499], [1492, \
1500], [1496, 1500], [1497, 1500], [1498, 1500], [1499, 1500], [1493, 1501], \
[1496, 1501], [1497, 1501], [1498, 1501], [1499, 1501], [1494, 1502], [1496, \
1502], [1497, 1502], [1498, 1502], [1499, 1502], [1495, 1503], [1496, 1503], \
[1497, 1503], [1498, 1503], [1499, 1503], [1376, 1504], [1377, 1505], [1378, \
1506], [1379, 1507], [1500, 1508], [1504, 1508], [1505, 1508], [1506, 1508], \
[1507, 1508], [1501, 1509], [1504, 1509], [1505, 1509], [1506, 1509], [1507, \
1509], [1502, 1510], [1504, 1510], [1505, 1510], [1506, 1510], [1507, 1510], \
[1503, 1511], [1504, 1511], [1505, 1511], [1506, 1511], [1507, 1511], [1384, \
1512], [1385, 1513], [1386, 1514], [1387, 1515], [1508, 1516], [1512, 1516], \
[1513, 1516], [1514, 1516], [1515, 1516], [1509, 1517], [1512, 1517], [1513, \
1517], [1514, 1517], [1515, 1517], [1510, 1518], [1512, 1518], [1513, 1518], \
[1514, 1518], [1515, 1518], [1511, 1519], [1512, 1519], [1513, 1519], [1514, \
1519], [1515, 1519], [1392, 1520], [1393, 1521], [1394, 1522], [1395, 1523], \
[1516, 1524], [1520, 1524], [1521, 1524], [1522, 1524], [1523, 1524], [1517, \
1525], [1520, 1525], [1521, 1525], [1522, 1525], [1523, 1525], [1518, 1526], \
[1520, 1526], [1521, 1526], [1522, 1526], [1523, 1526], [1519, 1527], [1520, \
1527], [1521, 1527], [1522, 1527], [1523, 1527], [1400, 1528], [1401, 1529], \
[1402, 1530], [1403, 1531], [1524, 1532], [1528, 1532], [1529, 1532], [1530, \
1532], [1531, 1532], [1525, 1533], [1528, 1533], [1529, 1533], [1530, 1533], \
[1531, 1533], [1526, 1534], [1528, 1534], [1529, 1534], [1530, 1534], [1531, \
1534], [1527, 1535], [1528, 1535], [1529, 1535], [1530, 1535], [1531, 1535], \
[1408, 1536], [1409, 1537], [1410, 1538], [1411, 1539], [1536, 1540], [1537, \
1540], [1538, 1540], [1539, 1540], [1536, 1541], [1537, 1541], [1538, 1541], \
[1539, 1541], [1536, 1542], [1537, 1542], [1538, 1542], [1539, 1542], [1536, \
1543], [1537, 1543], [1538, 1543], [1539, 1543], [1416, 1544], [1417, 1545], \
[1418, 1546], [1419, 1547], [1540, 1548], [1544, 1548], [1545, 1548], [1546, \
1548], [1547, 1548], [1541, 1549], [1544, 1549], [1545, 1549], [1546, 1549], \
[1547, 1549], [1542, 1550], [1544, 1550], [1545, 1550], [1546, 1550], [1547, \
1550], [1543, 1551], [1544, 1551], [1545, 1551], [1546, 1551], [1547, 1551], \
[1424, 1552], [1425, 1553], [1426, 1554], [1427, 1555], [1548, 1556], [1552, \
1556], [1553, 1556], [1554, 1556], [1555, 1556], [1549, 1557], [1552, 1557], \
[1553, 1557], [1554, 1557], [1555, 1557], [1550, 1558], [1552, 1558], [1553, \
1558], [1554, 1558], [1555, 1558], [1551, 1559], [1552, 1559], [1553, 1559], \
[1554, 1559], [1555, 1559], [1432, 1560], [1433, 1561], [1434, 1562], [1435, \
1563], [1556, 1564], [1560, 1564], [1561, 1564], [1562, 1564], [1563, 1564], \
[1557, 1565], [1560, 1565], [1561, 1565], [1562, 1565], [1563, 1565], [1558, \
1566], [1560, 1566], [1561, 1566], [1562, 1566], [1563, 1566], [1559, 1567], \
[1560, 1567], [1561, 1567], [1562, 1567], [1563, 1567], [1440, 1568], [1441, \
1569], [1442, 1570], [1443, 1571], [1564, 1572], [1568, 1572], [1569, 1572], \
[1570, 1572], [1571, 1572], [1565, 1573], [1568, 1573], [1569, 1573], [1570, \
1573], [1571, 1573], [1566, 1574], [1568, 1574], [1569, 1574], [1570, 1574], \
[1571, 1574], [1567, 1575], [1568, 1575], [1569, 1575], [1570, 1575], [1571, \
1575], [1448, 1576], [1449, 1577], [1450, 1578], [1451, 1579], [1572, 1580], \
[1576, 1580], [1577, 1580], [1578, 1580], [1579, 1580], [1573, 1581], [1576, \
1581], [1577, 1581], [1578, 1581], [1579, 1581], [1574, 1582], [1576, 1582], \
[1577, 1582], [1578, 1582], [1579, 1582], [1575, 1583], [1576, 1583], [1577, \
1583], [1578, 1583], [1579, 1583], [1456, 1584], [1457, 1585], [1458, 1586], \
[1459, 1587], [1580, 1588], [1584, 1588], [1585, 1588], [1586, 1588], [1587, \
1588], [1581, 1589], [1584, 1589], [1585, 1589], [1586, 1589], [1587, 1589], \
[1582, 1590], [1584, 1590], [1585, 1590], [1586, 1590], [1587, 1590], [1583, \
1591], [1584, 1591], [1585, 1591], [1586, 1591], [1587, 1591], [1464, 1592], \
[1465, 1593], [1466, 1594], [1467, 1595], [1588, 1596], [1592, 1596], [1593, \
1596], [1594, 1596], [1595, 1596], [1589, 1597], [1592, 1597], [1593, 1597], \
[1594, 1597], [1595, 1597], [1590, 1598], [1592, 1598], [1593, 1598], [1594, \
1598], [1595, 1598], [1591, 1599], [1592, 1599], [1593, 1599], [1594, 1599], \
[1595, 1599], [1472, 1600], [1473, 1601], [1474, 1602], [1475, 1603], [1596, \
1604], [1600, 1604], [1601, 1604], [1602, 1604], [1603, 1604], [1597, 1605], \
[1600, 1605], [1601, 1605], [1602, 1605], [1603, 1605], [1598, 1606], [1600, \
1606], [1601, 1606], [1602, 1606], [1603, 1606], [1599, 1607], [1600, 1607], \
[1601, 1607], [1602, 1607], [1603, 1607], [1480, 1608], [1481, 1609], [1482, \
1610], [1483, 1611], [1604, 1612], [1608, 1612], [1609, 1612], [1610, 1612], \
[1611, 1612], [1605, 1613], [1608, 1613], [1609, 1613], [1610, 1613], [1611, \
1613], [1606, 1614], [1608, 1614], [1609, 1614], [1610, 1614], [1611, 1614], \
[1607, 1615], [1608, 1615], [1609, 1615], [1610, 1615], [1611, 1615], [1488, \
1616], [1489, 1617], [1490, 1618], [1491, 1619], [1612, 1620], [1616, 1620], \
[1617, 1620], [1618, 1620], [1619, 1620], [1613, 1621], [1616, 1621], [1617, \
1621], [1618, 1621], [1619, 1621], [1614, 1622], [1616, 1622], [1617, 1622], \
[1618, 1622], [1619, 1622], [1615, 1623], [1616, 1623], [1617, 1623], [1618, \
1623], [1619, 1623], [1496, 1624], [1497, 1625], [1498, 1626], [1499, 1627], \
[1620, 1628], [1624, 1628], [1625, 1628], [1626, 1628], [1627, 1628], [1621, \
1629], [1624, 1629], [1625, 1629], [1626, 1629], [1627, 1629], [1622, 1630], \
[1624, 1630], [1625, 1630], [1626, 1630], [1627, 1630], [1623, 1631], [1624, \
1631], [1625, 1631], [1626, 1631], [1627, 1631], [1504, 1632], [1505, 1633], \
[1506, 1634], [1507, 1635], [1628, 1636], [1632, 1636], [1633, 1636], [1634, \
1636], [1635, 1636], [1629, 1637], [1632, 1637], [1633, 1637], [1634, 1637], \
[1635, 1637], [1630, 1638], [1632, 1638], [1633, 1638], [1634, 1638], [1635, \
1638], [1631, 1639], [1632, 1639], [1633, 1639], [1634, 1639], [1635, 1639], \
[1512, 1640], [1513, 1641], [1514, 1642], [1515, 1643], [1636, 1644], [1640, \
1644], [1641, 1644], [1642, 1644], [1643, 1644], [1637, 1645], [1640, 1645], \
[1641, 1645], [1642, 1645], [1643, 1645], [1638, 1646], [1640, 1646], [1641, \
1646], [1642, 1646], [1643, 1646], [1639, 1647], [1640, 1647], [1641, 1647], \
[1642, 1647], [1643, 1647], [1520, 1648], [1521, 1649], [1522, 1650], [1523, \
1651], [1644, 1652], [1648, 1652], [1649, 1652], [1650, 1652], [1651, 1652], \
[1645, 1653], [1648, 1653], [1649, 1653], [1650, 1653], [1651, 1653], [1646, \
1654], [1648, 1654], [1649, 1654], [1650, 1654], [1651, 1654], [1647, 1655], \
[1648, 1655], [1649, 1655], [1650, 1655], [1651, 1655], [1528, 1656], [1529, \
1657], [1530, 1658], [1531, 1659], [1652, 1660], [1656, 1660], [1657, 1660], \
[1658, 1660], [1659, 1660], [1653, 1661], [1656, 1661], [1657, 1661], [1658, \
1661], [1659, 1661], [1654, 1662], [1656, 1662], [1657, 1662], [1658, 1662], \
[1659, 1662], [1655, 1663], [1656, 1663], [1657, 1663], [1658, 1663], [1659, \
1663], [1536, 1664], [1537, 1665], [1538, 1666], [1539, 1667], [1664, 1668], \
[1665, 1668], [1666, 1668], [1667, 1668], [1664, 1669], [1665, 1669], [1666, \
1669], [1667, 1669], [1664, 1670], [1665, 1670], [1666, 1670], [1667, 1670], \
[1664, 1671], [1665, 1671], [1666, 1671], [1667, 1671], [1544, 1672], [1545, \
1673], [1546, 1674], [1547, 1675], [1668, 1676], [1672, 1676], [1673, 1676], \
[1674, 1676], [1675, 1676], [1669, 1677], [1672, 1677], [1673, 1677], [1674, \
1677], [1675, 1677], [1670, 1678], [1672, 1678], [1673, 1678], [1674, 1678], \
[1675, 1678], [1671, 1679], [1672, 1679], [1673, 1679], [1674, 1679], [1675, \
1679], [1552, 1680], [1553, 1681], [1554, 1682], [1555, 1683], [1676, 1684], \
[1680, 1684], [1681, 1684], [1682, 1684], [1683, 1684], [1677, 1685], [1680, \
1685], [1681, 1685], [1682, 1685], [1683, 1685], [1678, 1686], [1680, 1686], \
[1681, 1686], [1682, 1686], [1683, 1686], [1679, 1687], [1680, 1687], [1681, \
1687], [1682, 1687], [1683, 1687], [1560, 1688], [1561, 1689], [1562, 1690], \
[1563, 1691], [1684, 1692], [1688, 1692], [1689, 1692], [1690, 1692], [1691, \
1692], [1685, 1693], [1688, 1693], [1689, 1693], [1690, 1693], [1691, 1693], \
[1686, 1694], [1688, 1694], [1689, 1694], [1690, 1694], [1691, 1694], [1687, \
1695], [1688, 1695], [1689, 1695], [1690, 1695], [1691, 1695], [1568, 1696], \
[1569, 1697], [1570, 1698], [1571, 1699], [1692, 1700], [1696, 1700], [1697, \
1700], [1698, 1700], [1699, 1700], [1693, 1701], [1696, 1701], [1697, 1701], \
[1698, 1701], [1699, 1701], [1694, 1702], [1696, 1702], [1697, 1702], [1698, \
1702], [1699, 1702], [1695, 1703], [1696, 1703], [1697, 1703], [1698, 1703], \
[1699, 1703], [1576, 1704], [1577, 1705], [1578, 1706], [1579, 1707], [1700, \
1708], [1704, 1708], [1705, 1708], [1706, 1708], [1707, 1708], [1701, 1709], \
[1704, 1709], [1705, 1709], [1706, 1709], [1707, 1709], [1702, 1710], [1704, \
1710], [1705, 1710], [1706, 1710], [1707, 1710], [1703, 1711], [1704, 1711], \
[1705, 1711], [1706, 1711], [1707, 1711], [1584, 1712], [1585, 1713], [1586, \
1714], [1587, 1715], [1708, 1716], [1712, 1716], [1713, 1716], [1714, 1716], \
[1715, 1716], [1709, 1717], [1712, 1717], [1713, 1717], [1714, 1717], [1715, \
1717], [1710, 1718], [1712, 1718], [1713, 1718], [1714, 1718], [1715, 1718], \
[1711, 1719], [1712, 1719], [1713, 1719], [1714, 1719], [1715, 1719], [1592, \
1720], [1593, 1721], [1594, 1722], [1716, 1724], [1720, 1724], [1721, 1724], \
[1722, 1724], [1717, 1725], [1720, 1725], [1721, 1725], [1722, 1725], [1718, \
1726], [1720, 1726], [1721, 1726], [1722, 1726], [1719, 1727], [1720, 1727], \
[1721, 1727], [1722, 1727], [1600, 1728], [1601, 1729], [1602, 1730], [1603, \
1731], [1724, 1732], [1728, 1732], [1729, 1732], [1730, 1732], [1731, 1732], \
[1725, 1733], [1728, 1733], [1729, 1733], [1730, 1733], [1731, 1733], [1726, \
1734], [1728, 1734], [1729, 1734], [1730, 1734], [1731, 1734], [1608, 1736], \
[1609, 1737], [1610, 1738], [1611, 1739], [1732, 1740], [1736, 1740], [1737, \
1740], [1738, 1740], [1739, 1740], [1733, 1741], [1736, 1741], [1737, 1741], \
[1738, 1741], [1739, 1741], [1734, 1742], [1736, 1742], [1737, 1742], [1738, \
1742], [1739, 1742], [1736, 1743], [1737, 1743], [1738, 1743], [1739, 1743], \
[1616, 1744], [1617, 1745], [1618, 1746], [1619, 1747], [1740, 1748], [1744, \
1748], [1745, 1748], [1746, 1748], [1747, 1748], [1741, 1749], [1744, 1749], \
[1745, 1749], [1746, 1749], [1747, 1749], [1742, 1750], [1744, 1750], [1745, \
1750], [1746, 1750], [1747, 1750], [1743, 1751], [1744, 1751], [1745, 1751], \
[1746, 1751], [1747, 1751], [1624, 1752], [1625, 1753], [1626, 1754], [1627, \
1755], [1748, 1756], [1752, 1756], [1753, 1756], [1754, 1756], [1755, 1756], \
[1749, 1757], [1752, 1757], [1753, 1757], [1754, 1757], [1755, 1757], [1750, \
1758], [1752, 1758], [1753, 1758], [1754, 1758], [1755, 1758], [1751, 1759], \
[1752, 1759], [1753, 1759], [1754, 1759], [1755, 1759], [1632, 1760], [1633, \
1761], [1634, 1762], [1635, 1763], [1756, 1764], [1760, 1764], [1761, 1764], \
[1762, 1764], [1763, 1764], [1757, 1765], [1760, 1765], [1761, 1765], [1762, \
1765], [1763, 1765], [1758, 1766], [1760, 1766], [1761, 1766], [1762, 1766], \
[1763, 1766], [1759, 1767], [1760, 1767], [1761, 1767], [1762, 1767], [1763, \
1767], [1640, 1768], [1641, 1769], [1642, 1770], [1643, 1771], [1764, 1772], \
[1768, 1772], [1769, 1772], [1770, 1772], [1771, 1772], [1765, 1773], [1768, \
1773], [1769, 1773], [1770, 1773], [1771, 1773], [1766, 1774], [1768, 1774], \
[1769, 1774], [1770, 1774], [1771, 1774], [1767, 1775], [1768, 1775], [1769, \
1775], [1770, 1775], [1771, 1775], [1648, 1776], [1649, 1777], [1650, 1778], \
[1651, 1779], [1772, 1780], [1776, 1780], [1777, 1780], [1778, 1780], [1779, \
1780], [1773, 1781], [1776, 1781], [1777, 1781], [1778, 1781], [1779, 1781], \
[1774, 1782], [1776, 1782], [1777, 1782], [1778, 1782], [1779, 1782], [1775, \
1783], [1776, 1783], [1777, 1783], [1778, 1783], [1779, 1783], [1656, 1784], \
[1657, 1785], [1658, 1786], [1659, 1787], [1780, 1788], [1784, 1788], [1785, \
1788], [1786, 1788], [1787, 1788], [1781, 1789], [1784, 1789], [1785, 1789], \
[1786, 1789], [1787, 1789], [1782, 1790], [1784, 1790], [1785, 1790], [1786, \
1790], [1787, 1790], [1783, 1791], [1784, 1791], [1785, 1791], [1786, 1791], \
[1787, 1791], [1664, 1792], [1665, 1793], [1666, 1794], [1667, 1795], [1792, \
1796], [1793, 1796], [1794, 1796], [1795, 1796], [1792, 1797], [1793, 1797], \
[1794, 1797], [1795, 1797], [1792, 1798], [1793, 1798], [1794, 1798], [1795, \
1798], [1792, 1799], [1793, 1799], [1794, 1799], [1795, 1799], [1672, 1800], \
[1673, 1801], [1674, 1802], [1675, 1803], [1797, 1805], [1800, 1805], [1801, \
1805], [1802, 1805], [1803, 1805], [1798, 1806], [1800, 1806], [1801, 1806], \
[1802, 1806], [1803, 1806], [1799, 1807], [1800, 1807], [1801, 1807], [1802, \
1807], [1803, 1807], [1680, 1808], [1681, 1809], [1682, 1810], [1683, 1811], \
[1808, 1812], [1809, 1812], [1810, 1812], [1811, 1812], [1805, 1813], [1808, \
1813], [1809, 1813], [1810, 1813], [1811, 1813], [1806, 1814], [1808, 1814], \
[1809, 1814], [1810, 1814], [1811, 1814], [1807, 1815], [1808, 1815], [1809, \
1815], [1810, 1815], [1811, 1815], [1688, 1816], [1689, 1817], [1690, 1818], \
[1691, 1819], [1812, 1820], [1816, 1820], [1817, 1820], [1818, 1820], [1819, \
1820], [1813, 1821], [1816, 1821], [1817, 1821], [1818, 1821], [1819, 1821], \
[1814, 1822], [1816, 1822], [1817, 1822], [1818, 1822], [1819, 1822], [1815, \
1823], [1816, 1823], [1817, 1823], [1818, 1823], [1819, 1823], [1696, 1824], \
[1697, 1825], [1698, 1826], [1699, 1827], [1820, 1828], [1824, 1828], [1825, \
1828], [1826, 1828], [1827, 1828], [1821, 1829], [1824, 1829], [1825, 1829], \
[1826, 1829], [1827, 1829], [1822, 1830], [1824, 1830], [1825, 1830], [1826, \
1830], [1827, 1830], [1823, 1831], [1824, 1831], [1825, 1831], [1826, 1831], \
[1827, 1831], [1704, 1832], [1705, 1833], [1706, 1834], [1707, 1835], [1828, \
1836], [1832, 1836], [1833, 1836], [1834, 1836], [1835, 1836], [1829, 1837], \
[1832, 1837], [1833, 1837], [1834, 1837], [1835, 1837], [1830, 1838], [1832, \
1838], [1833, 1838], [1834, 1838], [1835, 1838], [1831, 1839], [1832, 1839], \
[1833, 1839], [1834, 1839], [1835, 1839], [1712, 1840], [1713, 1841], [1714, \
1842], [1715, 1843], [1836, 1844], [1840, 1844], [1841, 1844], [1842, 1844], \
[1843, 1844], [1837, 1845], [1840, 1845], [1841, 1845], [1842, 1845], [1843, \
1845], [1838, 1846], [1840, 1846], [1841, 1846], [1842, 1846], [1843, 1846], \
[1839, 1847], [1840, 1847], [1841, 1847], [1842, 1847], [1843, 1847], [1720, \
1848], [1721, 1849], [1722, 1850], [1844, 1852], [1848, 1852], [1849, 1852], \
[1850, 1852], [1851, 1852], [1845, 1853], [1848, 1853], [1849, 1853], [1850, \
1853], [1851, 1853], [1846, 1854], [1848, 1854], [1849, 1854], [1850, 1854], \
[1851, 1854], [1847, 1855], [1848, 1855], [1849, 1855], [1850, 1855], [1851, \
1855], [1728, 1856], [1729, 1857], [1730, 1858], [1731, 1859], [1852, 1860], \
[1856, 1860], [1857, 1860], [1858, 1860], [1859, 1860], [1853, 1861], [1856, \
1861], [1857, 1861], [1858, 1861], [1859, 1861], [1854, 1862], [1856, 1862], \
[1857, 1862], [1858, 1862], [1859, 1862], [1855, 1863], [1856, 1863], [1857, \
1863], [1858, 1863], [1859, 1863], [1736, 1864], [1737, 1865], [1738, 1866], \
[1739, 1867], [1860, 1868], [1864, 1868], [1865, 1868], [1866, 1868], [1867, \
1868], [1861, 1869], [1864, 1869], [1865, 1869], [1866, 1869], [1867, 1869], \
[1862, 1870], [1864, 1870], [1865, 1870], [1866, 1870], [1867, 1870], [1863, \
1871], [1864, 1871], [1865, 1871], [1866, 1871], [1867, 1871], [1744, 1872], \
[1745, 1873], [1746, 1874], [1747, 1875], [1868, 1876], [1872, 1876], [1873, \
1876], [1874, 1876], [1875, 1876], [1869, 1877], [1872, 1877], [1873, 1877], \
[1874, 1877], [1875, 1877], [1870, 1878], [1872, 1878], [1873, 1878], [1874, \
1878], [1875, 1878], [1871, 1879], [1872, 1879], [1873, 1879], [1874, 1879], \
[1875, 1879], [1752, 1880], [1753, 1881], [1754, 1882], [1755, 1883], [1876, \
1884], [1880, 1884], [1881, 1884], [1882, 1884], [1883, 1884], [1877, 1885], \
[1880, 1885], [1881, 1885], [1882, 1885], [1883, 1885], [1878, 1886], [1880, \
1886], [1881, 1886], [1882, 1886], [1883, 1886], [1879, 1887], [1880, 1887], \
[1881, 1887], [1882, 1887], [1883, 1887], [1760, 1888], [1761, 1889], [1762, \
1890], [1763, 1891], [1884, 1892], [1888, 1892], [1889, 1892], [1890, 1892], \
[1891, 1892], [1885, 1893], [1888, 1893], [1889, 1893], [1890, 1893], [1891, \
1893], [1886, 1894], [1888, 1894], [1889, 1894], [1890, 1894], [1891, 1894], \
[1887, 1895], [1888, 1895], [1889, 1895], [1890, 1895], [1891, 1895], [1768, \
1896], [1769, 1897], [1770, 1898], [1771, 1899], [1892, 1900], [1896, 1900], \
[1897, 1900], [1898, 1900], [1899, 1900], [1893, 1901], [1896, 1901], [1897, \
1901], [1898, 1901], [1899, 1901], [1894, 1902], [1896, 1902], [1897, 1902], \
[1898, 1902], [1899, 1902], [1895, 1903], [1896, 1903], [1897, 1903], [1898, \
1903], [1899, 1903], [1776, 1904], [1777, 1905], [1778, 1906], [1779, 1907], \
[1900, 1908], [1904, 1908], [1905, 1908], [1906, 1908], [1907, 1908], [1901, \
1909], [1904, 1909], [1905, 1909], [1906, 1909], [1907, 1909], [1902, 1910], \
[1904, 1910], [1905, 1910], [1906, 1910], [1907, 1910], [1903, 1911], [1904, \
1911], [1905, 1911], [1906, 1911], [1907, 1911], [1784, 1912], [1785, 1913], \
[1786, 1914], [1787, 1915], [1908, 1916], [1912, 1916], [1913, 1916], [1914, \
1916], [1915, 1916], [1909, 1917], [1912, 1917], [1913, 1917], [1914, 1917], \
[1915, 1917], [1910, 1918], [1912, 1918], [1913, 1918], [1914, 1918], [1915, \
1918], [1911, 1919], [1912, 1919], [1913, 1919], [1914, 1919], [1915, 1919], \
[1792, 1920], [1793, 1921], [1794, 1922], [1795, 1923], [1920, 1924], [1921, \
1924], [1922, 1924], [1923, 1924], [1920, 1925], [1921, 1925], [1922, 1925], \
[1923, 1925], [1920, 1926], [1921, 1926], [1922, 1926], [1923, 1926], [1920, \
1927], [1921, 1927], [1922, 1927], [1923, 1927], [1800, 1928], [1801, 1929], \
[1802, 1930], [1803, 1931], [1924, 1932], [1928, 1932], [1929, 1932], [1930, \
1932], [1931, 1932], [1925, 1933], [1928, 1933], [1929, 1933], [1930, 1933], \
[1931, 1933], [1926, 1934], [1928, 1934], [1929, 1934], [1930, 1934], [1931, \
1934], [1927, 1935], [1928, 1935], [1929, 1935], [1930, 1935], [1931, 1935], \
[1808, 1936], [1809, 1937], [1810, 1938], [1811, 1939], [1932, 1940], [1936, \
1940], [1937, 1940], [1938, 1940], [1939, 1940], [1933, 1941], [1936, 1941], \
[1937, 1941], [1938, 1941], [1939, 1941], [1934, 1942], [1936, 1942], [1937, \
1942], [1938, 1942], [1939, 1942], [1935, 1943], [1936, 1943], [1937, 1943], \
[1938, 1943], [1939, 1943], [1816, 1944], [1817, 1945], [1818, 1946], [1819, \
1947], [1940, 1948], [1944, 1948], [1945, 1948], [1946, 1948], [1947, 1948], \
[1941, 1949], [1944, 1949], [1945, 1949], [1946, 1949], [1947, 1949], [1942, \
1950], [1944, 1950], [1945, 1950], [1946, 1950], [1947, 1950], [1943, 1951], \
[1944, 1951], [1945, 1951], [1946, 1951], [1947, 1951], [1824, 1952], [1825, \
1953], [1826, 1954], [1827, 1955], [1948, 1956], [1952, 1956], [1953, 1956], \
[1954, 1956], [1955, 1956], [1949, 1957], [1952, 1957], [1953, 1957], [1954, \
1957], [1955, 1957], [1950, 1958], [1952, 1958], [1953, 1958], [1954, 1958], \
[1955, 1958], [1951, 1959], [1952, 1959], [1953, 1959], [1954, 1959], [1955, \
1959], [1832, 1960], [1833, 1961], [1834, 1962], [1835, 1963], [1956, 1964], \
[1960, 1964], [1961, 1964], [1962, 1964], [1963, 1964], [1957, 1965], [1960, \
1965], [1961, 1965], [1962, 1965], [1963, 1965], [1958, 1966], [1960, 1966], \
[1961, 1966], [1962, 1966], [1963, 1966], [1959, 1967], [1960, 1967], [1961, \
1967], [1962, 1967], [1963, 1967], [1840, 1968], [1841, 1969], [1842, 1970], \
[1843, 1971], [1964, 1972], [1968, 1972], [1969, 1972], [1970, 1972], [1971, \
1972], [1965, 1973], [1968, 1973], [1969, 1973], [1970, 1973], [1971, 1973], \
[1966, 1974], [1968, 1974], [1969, 1974], [1970, 1974], [1971, 1974], [1967, \
1975], [1968, 1975], [1969, 1975], [1970, 1975], [1971, 1975], [1848, 1976], \
[1849, 1977], [1850, 1978], [1851, 1979], [1972, 1980], [1976, 1980], [1977, \
1980], [1978, 1980], [1979, 1980], [1973, 1981], [1976, 1981], [1977, 1981], \
[1978, 1981], [1979, 1981], [1974, 1982], [1976, 1982], [1977, 1982], [1978, \
1982], [1979, 1982], [1975, 1983], [1976, 1983], [1977, 1983], [1978, 1983], \
[1979, 1983], [1856, 1984], [1857, 1985], [1858, 1986], [1859, 1987], [1980, \
1988], [1984, 1988], [1985, 1988], [1986, 1988], [1987, 1988], [1981, 1989], \
[1984, 1989], [1985, 1989], [1986, 1989], [1987, 1989], [1982, 1990], [1984, \
1990], [1985, 1990], [1986, 1990], [1987, 1990], [1983, 1991], [1984, 1991], \
[1985, 1991], [1986, 1991], [1987, 1991], [1864, 1992], [1865, 1993], [1866, \
1994], [1867, 1995], [1988, 1996], [1992, 1996], [1993, 1996], [1994, 1996], \
[1995, 1996], [1989, 1997], [1992, 1997], [1993, 1997], [1994, 1997], [1995, \
1997], [1990, 1998], [1992, 1998], [1993, 1998], [1994, 1998], [1995, 1998], \
[1991, 1999], [1992, 1999], [1993, 1999], [1994, 1999], [1995, 1999], [1872, \
2000], [1873, 2001], [1874, 2002], [1875, 2003], [1996, 2004], [2000, 2004], \
[2001, 2004], [2002, 2004], [2003, 2004], [1997, 2005], [2000, 2005], [2001, \
2005], [2002, 2005], [2003, 2005], [1998, 2006], [2000, 2006], [2001, 2006], \
[2002, 2006], [2003, 2006], [1999, 2007], [2000, 2007], [2001, 2007], [2002, \
2007], [2003, 2007], [1880, 2008], [1881, 2009], [1882, 2010], [1883, 2011], \
[2004, 2012], [2008, 2012], [2009, 2012], [2010, 2012], [2011, 2012], [2005, \
2013], [2008, 2013], [2009, 2013], [2010, 2013], [2011, 2013], [2006, 2014], \
[2008, 2014], [2009, 2014], [2010, 2014], [2011, 2014], [2007, 2015], [2008, \
2015], [2009, 2015], [2010, 2015], [2011, 2015], [1888, 2016], [1889, 2017], \
[1890, 2018], [1891, 2019], [2012, 2020], [2016, 2020], [2017, 2020], [2018, \
2020], [2019, 2020], [2013, 2021], [2016, 2021], [2017, 2021], [2018, 2021], \
[2019, 2021], [2014, 2022], [2016, 2022], [2017, 2022], [2018, 2022], [2019, \
2022], [2015, 2023], [2016, 2023], [2017, 2023], [2018, 2023], [2019, 2023], \
[1896, 2024], [1897, 2025], [1898, 2026], [1899, 2027], [2020, 2028], [2024, \
2028], [2025, 2028], [2026, 2028], [2027, 2028], [2021, 2029], [2024, 2029], \
[2025, 2029], [2026, 2029], [2027, 2029], [2022, 2030], [2024, 2030], [2025, \
2030], [2026, 2030], [2027, 2030], [2023, 2031], [2024, 2031], [2025, 2031], \
[2026, 2031], [2027, 2031], [1904, 2032], [1905, 2033], [1906, 2034], [1907, \
2035], [2028, 2036], [2032, 2036], [2033, 2036], [2034, 2036], [2035, 2036], \
[2029, 2037], [2032, 2037], [2033, 2037], [2034, 2037], [2035, 2037], [2030, \
2038], [2032, 2038], [2033, 2038], [2034, 2038], [2035, 2038], [2031, 2039], \
[2032, 2039], [2033, 2039], [2034, 2039], [2035, 2039], [1912, 2040], [1913, \
2041], [1914, 2042], [1915, 2043], [2036, 2044], [2040, 2044], [2041, 2044], \
[2042, 2044], [2043, 2044], [2037, 2045], [2040, 2045], [2041, 2045], [2042, \
2045], [2043, 2045], [2038, 2046], [2040, 2046], [2041, 2046], [2042, 2046], \
[2043, 2046], [2039, 2047], [2040, 2047], [2041, 2047], [2042, 2047], [2043, \
2047]], \"defaultAnnealingDuration\": 20, \
\"defaultProgrammingThermalizationDuration\": 1000, \
\"defaultReadoutThermalizationDuration\": 0, \"extendedJRange\": [-2.0, 1.0], \
\"hGainScheduleRange\": [-5.0, 5.0], \"hRange\": [-2.0, 2.0], \"jRange\": \
[-1.0, 1.0], \"maximumAnnealingSchedulePoints\": 12, \
\"maximumHGainSchedulePoints\": 20, \"perQubitCouplingRange\": [-9.0, 6.0], \
\"programmingThermalizationDurationRange\": [0, 10000], \"qubits\": [0, 1, 2, \
3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, \
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, \
44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, \
64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, \
83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, \
102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, \
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, \
132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, \
147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, \
162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, \
177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, \
192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, \
207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, \
222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, \
237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, \
252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, \
267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, \
282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, \
297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, \
312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, \
327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, \
342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, \
357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, \
372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, \
387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, \
402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, \
417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, \
432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, \
447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, \
462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, \
477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, \
492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, \
507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, \
522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, \
538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, \
554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, \
569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, \
584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, \
599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, \
614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, \
629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, \
644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, \
659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, \
674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, \
689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, \
704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, \
719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, \
734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, \
749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, \
764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, \
779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, \
794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, \
809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, \
824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, \
839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, \
854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, \
869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, \
884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, \
899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, \
914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, \
929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, \
944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, \
959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, \
974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, \
989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, \
1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, \
1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, \
1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, \
1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, \
1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, \
1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, \
1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, \
1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, \
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, \
1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, \
1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, \
1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, \
1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, \
1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, \
1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, \
1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, \
1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, \
1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, \
1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, \
1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, \
1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, \
1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, \
1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, \
1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, \
1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, \
1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, \
1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, \
1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, \
1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, \
1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, \
1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, \
1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, \
1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, \
1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, \
1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, \
1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, \
1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, \
1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, \
1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, \
1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, \
1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, \
1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, \
1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, \
1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, \
1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, \
1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, \
1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, \
1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, \
1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, \
1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, \
1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, \
1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, \
1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, \
1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, \
1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, \
1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, \
1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, \
1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, \
1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, \
1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, \
1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, \
1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, \
1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, \
1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, \
1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, \
1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, \
1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, \
1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, \
1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, \
1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, \
1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, \
1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, \
1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, \
1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, \
1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, \
1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, \
1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, \
2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, \
2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, \
2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, \
2046, 2047], \"qubitCount\": 2048, \"quotaConversionRate\": 1.0, \
\"readoutThermalizationDurationRange\": [0, 10000], \"taskRunDurationRange\": \
[0, 1000000], \"topology\": {\"type\": \"chimera\", \"shape\": [16, 16, \
4]}}}"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> TypeSystem`PackageScope`AtomShape[212.8], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[147.], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 6, {All, All}]], 8, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Amazon Braket", "D-Wave Systems"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["ONLINE", "RETIRED"]], TypeSystem`AnyType}],
         8], 1], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{All, All, 
          TypeSystem`PackageScope`KeyDummy[3]} -> 1, {All, All, "DeviceArn"} -> 
        1, {All, All, "DeviceName"} -> 1, {All, All, "ProviderName"} -> 
        1, {All, All, "DeviceType"} -> 1, {All, All, "DeviceStatus"} -> 
        1, {All, All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`KeyValueShape[
          TypeSystem`PackageScope`AtomShape[78.4], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
               "DeviceName" -> TypeSystem`PackageScope`AtomShape[212.8], 
               "ProviderName" -> TypeSystem`PackageScope`AtomShape[147.], 
               "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
               "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
               "DeviceCapabilities" -> 
               TypeSystem`PackageScope`UnknownShape[False]|>], 
             DirectedInfinity[1], 6, {All, All}]], 8, 
           DirectedInfinity[1], {All}]]], 1, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Struct[{
         "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
          "DeviceStatus", "DeviceCapabilities"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["Amazon Braket", "D-Wave Systems"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
          TypeSystem`Atom[
           TypeSystem`Enumeration["ONLINE", "RETIRED"]], TypeSystem`AnyType}],
         8], 1], "Path" -> {}, "DisplayedRowCount" -> 1, 
     "DisplayedColumnCount" -> 6, "DataRowCount" -> 1, "DataColumnCount" -> 6,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               Mouseover[
                
                Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]], 
                Graphics[{
                  GrayLevel[0.6], 
                  
                  Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
                    Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                 Scaled[-0.15]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, Keys}, "KeyDummy", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, All, "DeviceCapabilities"}, "ColumnHeader", True], 
               "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Devices", 
                  Style[
                  "Devices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Devices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/qpu/d-wave/Advantage_system3", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Advantage_system3.2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D-Wave Systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{58318.40000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63403.200000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedPragmas\": \
[\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 4, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{64982.40000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-2::device/qpu/d-wave/Advantage_system6", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Advantage_system6.1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D-Wave Systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 5, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/qpu/d-wave/Advantage_system4", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Advantage_system4.1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D-Wave Systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 6, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/qpu/d-wave/Advantage_system1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Advantage_system1.1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D-Wave Systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 7, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/d-wave/DW_2000Q_6", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["DW_2000Q_6", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{212.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["D-Wave Systems", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.dwave.dwave_device_capabilities\", \"version\": \
\"1\"}, \"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.00019, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/d-wave-systems_logo_201804131305387.\
246f4e3fec1d3f961478a6176ae70031851bcb13.png\", \"summary\": \"Quantum \
Annealer based on superconducting qubits\", \"externalDocumentationUrl\": \
\"https://docs.dwavesys.com/docs/latest/doc_physical_properties.html\"}, \
\"deviceLocation\": \"British Columbia, Canada\", \"updatedAt\": \
\"2022-07-15T16:25:19.895957\"}, \"action\": \
{\"braket.ir.annealing.problem\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.annealing.problem\"}}, \"deviceParameters\": {\"title\": \
\"Dwave2000QDeviceParameters\", \"description\": \"This is the description of \
the D-Wave parameters\\n\\nAttributes:\\n    deviceLevelParameters: \
Parameters that are specific to this D-Wave device.\", \"type\": \"object\", \
\"properties\": {\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \
\"const\": {\"name\": \
\"braket.device_schema.dwave.dwave_2000Q_device_parameters\", \"version\": \
\"1\"}}, \"deviceLevelParameters\": {\"$ref\": \
\"#/definitions/Dwave2000QDeviceLevelParameters\"}}, \"required\": \
[\"deviceLevelParameters\"], \"definitions\": {\"PostProcessingType\": \
{\"title\": \"PostProcessingType\", \"description\": \"The type of processing \
for D-Wave.\", \"enum\": [\"SAMPLING\", \"OPTIMIZATION\"], \"type\": \"string\
\"}, \"ResultFormat\": {\"title\": \"ResultFormat\", \"description\": \"The \
type of results format for D-Wave.\", \"enum\": [\"RAW\", \"HISTOGRAM\"], \
\"type\": \"string\"}, \"Dwave2000QDeviceLevelParameters\": {\"title\": \
\"Dwave2000QDeviceLevelParameters\", \"description\": \"This is the \
description of the D-Wave parameters\\n\\nAttributes:\\n    annealingOffsets \
(Optional[List[float]]): Provides offsets to annealing paths, per qubit.\\n   \
 annealingSchedule (Optional[List[List[float]]]): Introduces variations to \
the global anneal\\n        schedule.\\n    annealingDuration (Optional[int] \
= Field(gt=1)): Sets the duration (in microseconds) of\\n        quantum \
annealing time, per read.\\n    autoScale (Optional[bool]): Indicates whether \
h and J values are rescaled.\\n    beta (Optional[float]): Provides a value \
for the Boltzmann distribution parameter.\\n        Used when sampling \
postprocessing is enabled on D-Wave 2000Q and earlier systems.\\n    chains \
(Optional[List[List[int]]]): Defines which qubits represent the same \
logical\\n        variable. Used only when postprocessing is enabled on \
D-Wave 2000Q and earlier systems.\\n        Ensures that all qubits in the \
same chain have the same value within each sample.\\n    compensateFluxDrift \
(Optional[bool]): Boolean flag indicating whether the D-Wave system\\n        \
compensates for flux drift.\\n    fluxBiases (Optional[List[float]]): List of \
flux-bias offset values with which to calibrate\\n        a chain. Often \
required when using the extended J range to create a strongly coupled\\n      \
  chain for certain embeddings.\\n    initialState (Optional[List[int]]): \
When using the reverse annealing feature,\\n        you must supply the \
initial state to which the system is set.\\n    maxResults (Optional[int] = \
Field(gt=1)): Specifies the maximum number of\\n        answers returned from \
the solver.\\n    postprocessingType (Optional[Union[PostProcessingType, \
str]]): Defines what type\\n        of postprocessing the system runs online \
on raw solutions.\\n    programmingThermalizationDuration (Optional[int]): \
Gives the time (in microseconds) to wait\\n        after programming the QPU \
for it to cool back to base temperature (i.e.,\\n        post-programming \
thermalization time).\\n    readoutThermalizationDuration (Optional[int]): \
Gives the time (in microseconds) to wait\\n        after each state is read \
from the QPU for it to cool back to base temperature\\n        (i.e., \
post-readout thermalization time).\\n    reduceIntersampleCorrelation \
(Optional[bool]): Reduces sample-to-sample correlations caused\\n        by \
the spin-bath polarization effect by adding a delay between reads.\\n    \
reinitializeState (Optional[bool]): When using the reverse annealing feature,\
\\n        you must supply the initial state to which the system is set.\\n   \
 resultFormat (Optional[ResultFormat]): Type of the result format returned by \
the QPU.\\n    spinReversalTransformCount (Optional[int] = Field(gt=0)): \
Specifies the number of\\n        spin-reversal transforms to \
perform.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.dwave.dwave_2000Q_device_level_parameters\\\",\\n    \
...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"beta\\\": 1\\n    ... }\\n    >>> \
Dwave2000QDeviceLevelParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.dwave.dwave_2000Q_device_level_parameters\", \"version\
\": \"1\"}}, \"annealingOffsets\": {\"title\": \"Annealingoffsets\", \
\"type\": \"array\", \"items\": {\"type\": \"number\"}}, \
\"annealingSchedule\": {\"title\": \"Annealingschedule\", \"type\": \
\"array\", \"items\": {\"type\": \"array\", \"items\": {\"type\": \
\"number\"}}}, \"annealingDuration\": {\"title\": \"Annealingduration\", \
\"exclusiveMinimum\": 0, \"type\": \"number\"}, \"autoScale\": {\"title\": \
\"Autoscale\", \"type\": \"boolean\"}, \"beta\": {\"title\": \"Beta\", \"type\
\": \"number\"}, \"chains\": {\"title\": \"Chains\", \"type\": \"array\", \
\"items\": {\"type\": \"array\", \"items\": {\"type\": \"integer\"}}}, \
\"compensateFluxDrift\": {\"title\": \"Compensatefluxdrift\", \"type\": \
\"boolean\"}, \"fluxBiases\": {\"title\": \"Fluxbiases\", \"type\": \
\"array\", \"items\": {\"type\": \"number\"}}, \"initialState\": {\"title\": \
\"Initialstate\", \"type\": \"array\", \"items\": {\"type\": \"integer\"}}, \
\"maxResults\": {\"title\": \"Maxresults\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}, \"postprocessingType\": {\"title\": \
\"Postprocessingtype\", \"anyOf\": [{\"$ref\": \
\"#/definitions/PostProcessingType\"}, {\"type\": \"string\"}]}, \
\"programmingThermalizationDuration\": {\"title\": \
\"Programmingthermalizationduration\", \"type\": \"integer\"}, \
\"readoutThermalizationDuration\": {\"title\": \
\"Readoutthermalizationduration\", \"type\": \"integer\"}, \
\"reduceIntersampleCorrelation\": {\"title\": \
\"Reduceintersamplecorrelation\", \"type\": \"boolean\"}, \"reinitializeState\
\": {\"title\": \"Reinitializestate\", \"type\": \"boolean\"}, \"resultFormat\
\": {\"$ref\": \"#/definitions/ResultFormat\"}, \
\"spinReversalTransformCount\": {\"title\": \"Spinreversaltransformcount\", \
\"exclusiveMinimum\": 0, \"type\": \"integer\"}}}}}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.dwave.dwave_provider_properties\", \"version\": \
\"1\"}, \"annealingOffsetStep\": 0.003078008946238068, \
\"annealingOffsetStepPhi0\": 0.00027992071513567937, \
\"annealingOffsetRanges\": [[-0.13600744081137645, 0.009789701817991983], \
[-0.13875149009394658, 0.009566264844367785], [-0.1369361147194918, \
0.016674382560332858], [-0.13712184366968314, 0.010881002839541706], \
[-0.1377032158503334, 0.00946709608971043], [-0.13872305384406092, \
0.04043260838420777], [-0.13909250135306245, 0.005854381648747083], \
[-0.1382777601013771, 0.01847304451354332], [-0.1364904696886467, \
0.012162847030360378], [-0.1367290964420125, 0.07186591783064109], \
[-0.13821824935590943, 0.061702319423903286], [-0.14069315224866294, \
0.022632413780080886], [-0.16088665434299665, 0.07059332060773936], \
[-0.1356846278805038, 0.05018972578422699], [-0.13435188095977782, \
0.04489030639053271], [-0.1377299749529736, 0.0], [-0.13873124505919143, \
0.05176075459760881], [-0.13875435304389996, 2.2173946380719925e-17], \
[-0.138008850463023, 0.021477616323694094], [-0.13643654069058, \
0.09176743269110996], [-0.13657857957995184, 0.028097488643265885], \
[-0.13245132448205077, 0.013245132448205072], [-0.13629061334320677, \
0.02234225735582313], [-0.13716931091379606, 0.006545752384678561], \
[-0.1347686670126842, 0.06881235352669121], [-0.13885279274092097, \
0.10141221167245178], [-0.13947139805537043, 0.11276507691998996], \
[-0.13401185389350845, 0.0873929546585785], [-0.13654914962820394, \
0.08560400683947215], [-0.13490165254466266, 0.058927819739019685], \
[-0.13873285631169757, 0.06847959761135375], [-0.1362078919307897, \
0.07678006217983094], [-0.13947371969566197, 0.07270433308406912], \
[-0.1362768033071029, 0.0817856558211193], [-0.138915673854754, \
0.12672444481230927], [-0.08881602625150695, 0.13512364128737195], \
[-0.13980007321018623, 0.08443633199765001], [-0.13669902563228492, \
0.06072657440470316], [-0.12061301638628391, 0.13358484278255137], \
[-0.13704238890162754, 0.12174082008697999], [-0.13856557400628688, \
0.04985978211241406], [-0.13929555217387232, 0.05621768235019539], \
[-0.13441854243651416, 0.0], [0.0, 0.0], [-0.13841942975482804, \
0.07635405810751948], [-0.13597765597550618, 0.12268567970119962], [0.0, \
0.0], [-0.13843471345614358, 0.04307981273755458], [-0.1370464490938258, \
0.05751729472826941], [-0.13790382893483671, 0.07562635070673539], \
[-0.13534114035674735, 0.1271631962559657], [-0.08591320308102517, \
0.13715192889397734], [-0.1409591104346439, 0.048913895795344185], \
[-0.13554272083218177, 0.05033179206769358], [-0.07686954612403618, \
0.13827383305979568], [-0.16776587375963914, 0.12107279839174732], \
[-0.1392934481364792, 0.10544090984894085], [-0.13671571095962423, \
0.11094461715478397], [-0.13861987219511784, 0.014515378198523434], \
[-0.1379117234876769, 0.1286040282876618], [-0.13880028169568864, \
0.09307004468515416], [-0.13485940386214035, 0.050304776452903516], \
[-0.13818832708679882, 0.07693830065295656], [-0.1370427008185769, \
0.13778698479380244], [-0.1396412235004023, 0.06431367482773942], \
[-0.13883163608801669, 0.0], [-0.1381053045417773, 0.07702833255151419], \
[-0.13857548222221233, 0.03688428381861727], [-0.13322328199746378, \
0.10027133424358284], [-0.1383594241461319, 0.052797695668114805], \
[-0.13569014063387866, 0.013283085463800278], [-0.13981352017739107, \
0.08763097531870702], [-0.13568419876256516, 0.08982045027846253], \
[-0.13898043543390148, 0.1069527654361482], [-0.10493678577184207, \
0.13631010646247893], [-0.13169926347969363, 0.13737654087674475], \
[-0.13860428080134019, 0.13831302623378777], [-0.13562457047032947, \
0.08952137528209025], [-0.1381350289715789, 0.07331122530533465], \
[-0.13718245807516824, 0.09539814868080548], [-0.1377721868832498, \
0.12329985805733883], [-0.13653846835796185, 0.035644867015071684], \
[-0.13986125945876143, 0.01941977542524973], [-0.1349454740789745, \
0.052088746886410395], [-0.13642044317374474, 0.11906170529591058], \
[-0.13870827595449664, 0.10513711431811647], [-0.13413180037208058, \
0.06445192389029504], [-0.13776255758830402, 0.10625808716792755], \
[-0.13842899924120255, 0.10344566231008581], [-0.14070617072351055, \
0.02244502014481013], [-0.13864991261227966, 0.04555770154661206], \
[-0.17014533535200888, 0.055951423735591185], [-0.13512543320933673, \
0.06695151180134469], [-0.13475908904432649, 0.08796859019745325], \
[-0.1378060543401529, 0.06376777374029244], [-0.13916941783853293, \
0.07461134006302081], [-0.14020257289102772, 0.06083506392751736], \
[-0.1381176549585559, 0.05835608576873845], [-0.1381664558761851, \
0.05179039945646378], [-0.13727237859847705, 0.032958114828334655], \
[-0.13598011068012272, 0.08818669125568965], [-0.13781042882636027, \
0.08905458215201732], [-0.13450528079145355, 0.0881985684895078], \
[-0.13688826445477062, 0.05272133268990841], [-0.14095213466931603, \
0.1373402059588776], [-0.13804137692858995, 0.05495504982478498], \
[-0.13747487703370065, 0.05777686565803153], [-0.13675973211030787, \
0.03418993302757696], [-0.13775753569960514, 0.08335942448547536], \
[-0.13682393564027168, 0.059829719705128], [-0.13708552992652115, \
0.08446145060129287], [-0.13702441045086844, 0.07267575773076296], \
[-0.1396607555031175, 0.01941722750063344], [-0.13914585908878951, \
0.02621715981793089], [-0.1368405877419257, 0.052567448169775634], \
[-0.13900240096415534, 0.00981093606414487], [-0.1370888518016061, 0.0], \
[-0.13801450171554688, 0.04801070596351762], [-0.13972185990836963, \
0.06237530352016266], [-0.13799781866999905, 0.017249727333749885], \
[-0.13690015860991528, 0.05932105199957007], [-0.13192873540780076, \
0.03322882404252905], [-0.13804682827699738, 0.07081694116627471], \
[-0.13553418502295433, 0.04041387152076107], [-0.13324094973349684, \
0.012724535096695501], [-0.13917567722665486, 0.003479391930666369], \
[-0.13820843040212663, 0.01596685284821447], [-0.13472731821555492, \
0.02055046542546908], [-0.13468181863939638, 0.01829501183557071], \
[-0.1396882355114743, 0.05061696223194325], [-0.13636786308020177, \
0.004261495721256334], [-0.13488696899461614, 0.008142285909159828], \
[-0.13482480327735352, 0.020760254742926487], [-0.1335927193425781, \
0.020971708627265155], [-0.1360935015906236, 0.04944153520285709], \
[-0.13736921878123412, 0.00944413379120983], [-0.13760360139364428, 0.0], \
[-0.13704730967645976, 0.011157584096518588], [-0.1343877314238277, \
0.05849730724368937], [-0.13849300084710656, 0.06029267911645019], \
[-0.13601469078859232, 0.03388845543434289], [-0.1352274356893982, \
0.0908226965996173], [-0.13861973862040672, 0.0069309869310203364], \
[-0.1386294428960248, 0.01403462515980996], [-0.13558476511954207, \
0.01694809563994275], [-0.13760132427884544, 0.04371919008162351], \
[-0.13776163830946278, 0.06726538331748265], [-0.13385833253868806, \
0.07905667797213141], [-0.1374076005924179, 0.12341048385952942], \
[-0.13911545077840404, 0.07390608941179147], [-0.1378399388193961, \
0.04939538456394315], [-0.13507458388031107, 0.10070202178492911], \
[-0.1364284243235121, 0.07681654471505829], [-0.13695173795059915, \
0.09401913466530983], [-0.13834180226801238, 0.12920394053059925], \
[-0.136832355885445, 0.10214559094475827], [-0.13281480185008748, \
0.039248313945774674], [-0.13690092584570684, 0.050183972212252334], \
[-0.13801995412699763, 0.10150221967901027], [-0.13924044576847214, \
0.08139757399196826], [-0.1374830335922615, 0.09222890640612479], \
[-0.13753928847624347, 0.1306999752718953], [-0.11339541414043573, \
0.13908739784281504], [-0.1195346402898249, 0.13534170172318863], \
[-0.13719589082703437, 0.08119367815114398], [-0.08867355225195345, \
0.13623524169511134], [-0.11403750622335913, 0.13333031021943814], \
[-0.137625175016514, 0.13839056954879556], [-0.13008554965186409, \
0.13889213810888992], [-0.13422866855610602, 0.10634769075916804], \
[-0.13773390058467003, 0.11668331612864108], [-0.13438042342482054, \
0.04963396542781568], [-0.13410952416503547, 0.13684091719857985], \
[-0.13619122205104842, 0.08755520392811417], [-0.1261409842740174, \
0.1361948845117042], [-0.13908708855401034, 0.1263123761388836], \
[-0.13756539718150354, 0.09567797583527818], [-0.13428467838729113, \
0.13503460639370496], [-0.11349821412088748, 0.13836899199191363], \
[-0.08059879316694293, 0.13882648906948866], [-0.13836925967052519, \
0.09951205127282248], [-0.12123715385456976, 0.13254293349881796], \
[-0.13778972980898743, 0.10840253326634239], [-0.10774640748195444, \
0.13864638997600928], [-0.13744407275245116, 0.09209917060471386], \
[-0.13371834527270451, 0.11207649262237014], [-0.13780613411045048, \
0.09585135561845758], [-0.13808846088678142, 0.13257988883872157], \
[-0.13505999393695353, 0.09642610224822322], [-0.13420744714822946, \
0.1335880757550917], [-0.1391127718615882, 0.1353354305025384], \
[-0.13836137450194988, 0.10783900770078854], [-0.13604607120783369, \
0.07946425466346334], [-0.13969743657139058, 0.1310844457167058], \
[-0.13875095107230642, 0.10386078273801244], [-0.1389658888676373, \
0.08313134361285693], [-0.13773895172934533, 0.04956743877009452], \
[-0.1346534805581149, 0.09363052793250244], [-0.13482598733209003, \
0.12050949234981646], [-0.14066681945527373, 0.12905605576576124], \
[-0.13814205337012933, 0.12111425750995955], [-0.13855833531875866, \
0.10498319100904585], [-0.1354287232122151, 0.0944891586286322], \
[-0.10785509685739834, 0.13618331693096733], [-0.13983821537739574, \
0.12672092105742552], [-0.13672325128717797, 0.12697505773703496], \
[-0.12838279244800585, 0.13969291330980246], [-0.08822200683771757, \
0.13828225032475563], [-0.09764795960482499, 0.13436706196471332], \
[-0.13743719905481272, 0.08621458710904081], [-0.13732441505807275, \
0.06775789454596134], [-0.13657789807996792, 0.08446296272962803], \
[-0.13835831999010093, 0.1010208109666091], [-0.0650581746554359, \
0.13243947526365957], [-0.11322778238985891, 0.13841566182537124], \
[-0.10349476152711973, 0.13430749442818846], [-0.1382921650135154, \
0.07373579339637194], [-0.1375215319141205, 0.05056220365757446], \
[-0.13908999118053345, 0.09538377760718103], [-0.1365859607131479, \
0.1033325670677685], [-0.09976360037304499, 0.13414018152727517], \
[-0.12000940824002979, 0.13862619608670504], [-0.07220920737065367, \
0.13589128978205456], [-0.13881297231549047, 0.1092788535720095], \
[-0.1408464480198924, 0.08587791894490826], [-0.13461787933013056, \
0.029003930608379365], [-0.13868737417786478, 0.0632190960734045], \
[-0.11471333531380701, 0.13688322471161773], [-0.12919274258355418, \
0.13711442888014339], [-0.08534996068163204, 0.13824153295156055], \
[-0.13121132651464337, 0.13773339428413878], [-0.13508107935542557, \
0.10748727541396959], [-0.138039900622648, 0.07143353663309294], \
[-0.1348870144679024, 0.10412173560965475], [-0.1380460220871471, \
0.07580084022737124], [-0.1370681061730049, 0.12188466734424962], \
[-0.13704088222574856, 0.13382117639234517], [-0.13844891239147203, \
0.11908954190561041], [-0.13501576417333852, 0.12318924286230735], \
[-0.1416089302062525, 0.09967264339254114], [-0.13577938252048505, \
0.06473332174547125], [-0.137625377557257, 0.0650965508283276], \
[-0.13798825675885792, 0.006899412837942907], [-0.1376169807237792, \
0.01195351859352371], [-0.13770218229850978, 0.0866576351154855], \
[-0.13787993267205542, 0.07071907289398939], [-0.13548655199502746, \
0.11303661702433697], [-0.13870490674100397, 0.08516799889673825], \
[-0.13833130259207496, 0.04725694460180886], [-0.1344757103527011, \
0.07573868587802947], [-0.1383464331798769, 0.04898575477388748], \
[-0.14019742484455164, 0.03855429183225166], [-0.13651879243820486, \
0.06884134585893589], [-0.13545732350907402, 2.2173946380719925e-17], \
[-0.13755071447825573, 0.03783313989483242], [-0.1381743808047873, \
0.042800849812346234], [-0.13994464097543652, 0.008083516765791587], \
[-0.13742551074238638, 0.07457576182890249], [-0.13810118745113462, \
2.2173946380719925e-17], [-0.13478464478035332, 0.08344756802932601], \
[-0.13913462134425195, 0.052175483004094574], [-0.13862025907676012, \
0.006659952983734765], [-0.1346408256016643, 0.0], [-0.13812286067274746, \
0.02725667047746544], [-0.1383532957045039, 0.06964162903803202], \
[-0.13590847112337015, 0.0427852064306142], [-0.13911593471435896, \
0.07169874330156817], [-0.13775880329440776, 0.09157677371201628], \
[-0.13903936241485995, 0.07855316948351801], [-0.13718185289566967, \
0.03380957708003747], [-0.13282013085027047, 0.11115206727991657], \
[-0.13402555670648558, 0.12891946298336535], [-0.13762158531240368, \
0.07744103516935226], [-0.13285108232386142, 0.13912860407940777], \
[-0.13737099710331246, 0.12469765730369162], [-0.14152696989924213, \
0.10921913592288392], [-0.1368495751160639, 0.010779585930604603], \
[-0.1341619897454812, 0.04321631945200666], [-0.13813956348183457, \
0.10854236026260126], [-0.13836320045282088, 0.1141402040580109], \
[-0.1358082540894177, 0.1212545311097998], [-0.097946628349835, \
0.13662454636534543], [-0.10750347732341566, 0.1326530929142899], \
[-0.08371805647520948, 0.134458659807537], [-0.13834320030296168, \
0.12986151325904083], [-0.13516583094265283, 0.10940411536269412], \
[-0.1041708731408608, 0.13749759554313679], [-0.13807051002827736, \
0.09369205421975964], [-0.13417818490090885, 0.11916501949758501], \
[-0.11202055017023174, 0.13472095647590168], [-0.07016643866334223, \
0.13529505391474142], [-0.07772591106954088, 0.13797113212389628], \
[-0.1274953634644136, 0.13493367423755281], [-0.13455709103236854, \
0.094670708517525], [-0.13530023808038438, 0.1379337174935098], \
[-0.11211808057057875, 0.13583431601601761], [-0.10907888033534623, \
0.13389306418855235], [-0.08923032517064965, 0.137428962471867], \
[-0.0857381638046666, 0.13749237391032143], [-0.13680027554182844, \
0.10520217816901066], [-0.13502023088844856, 0.10571607567490772], \
[-0.13514384771234345, 0.1166469033697946], [-0.0958929113216996, \
0.13903448380373942], [-0.11899452212971677, 0.13865200305080766], \
[-0.10096356732919146, 0.13626433635592475], [-0.10324052965817025, \
0.13750334345275084], [-0.1380656064033795, 0.13759193929607325], \
[-0.13744228135836248, 0.1051268332207715], [-0.08726614352126437, \
0.13819550264086558], [-0.08193959080562307, 0.13472186871161515], \
[-0.06657886749280457, 0.13958281470604347], [-0.11004449631323199, \
0.13702867026604712], [-0.13936554892078729, 0.12259220269748024], \
[-0.10709976584343807, 0.13806287697813321], [-0.13931788450386337, \
0.10861508795412059], [-0.13422668720089473, 0.13796025936724965], \
[-0.13675735588960833, 0.14019859299215115], [-0.13867462860719915, \
0.12424612996534379], [-0.13431537888035, 0.13538694788427474], \
[-0.13061595357565767, 0.1356104487187686], [-0.134416665821065, \
0.10412064932422666], [-0.13946141924236907, 0.09069053215482795], \
[-0.09830194055085122, 0.13769989929288537], [-0.13749600287890132, \
0.1385695902213884], [-0.10275142157410998, 0.1343459174636828], \
[-0.08682356905717521, 0.13675174652195798], [-0.09055526201694683, \
0.13734244949028754], [-0.10317996489050894, 0.13357048664204832], \
[-0.1363657507577556, 0.13751705313649723], [-0.13865143822075632, \
0.07357020441480952], [-0.11509270791719282, 0.1376786359975265], \
[-0.13555047446564292, 0.13921359994569418], [-0.07431732308780452, \
0.13754795022899632], [-0.05450381038920769, 0.13957336801499853], \
[-0.0959076608782933, 0.1378925954077129], [-0.05524932843636395, \
0.13918047936354472], [-0.10729592501683094, 0.1377998906192889], \
[-0.13662403142273505, 0.10088919029384749], [-0.11478923281539838, \
0.13928903828239778], [-0.10649053222757737, 0.13638689071574725], \
[-0.09059064961930755, 0.13372863466718315], [-0.11293079052909881, \
0.1340316073930852], [-0.12149395899235357, 0.13854196683111902], \
[-0.0857795097112657, 0.13783150433476563], [-0.10906444070874942, \
0.13789593344914017], [-0.13705297227975666, 0.0982158869087806], \
[-0.13763851363789775, 0.1011081120905319], [-0.11530021469636219, \
0.13832694298024598], [-0.1351952868954525, 0.11417448025642948], \
[-0.10360188208795161, 0.13541591700307115], [-0.1072320077292942, \
0.13595026966760865], [-0.11791825802293665, 0.1338966513596703], \
[-0.09967248054024622, 0.13377412419285947], [-0.09816273052359892, \
0.1370399298940471], [-0.1384612976478303, 0.11434126637377658], \
[-0.12753779131927487, 0.13712500243484216], [-0.13911055356833107, \
0.1015836122894357], [-0.13416972768334523, 0.10754755232541194], \
[-0.11607969520842629, 0.13719260066698993], [-0.039057065509277684, \
0.1375573542557545], [-0.13735219327845308, 0.12204269725536084], \
[-0.12351893345354803, 0.1365580993905671], [-0.1304875215650646, \
0.13500155106402595], [-0.13661020455299747, 0.1075220959423104], \
[-0.13881070920339067, 0.08082670909385074], [-0.10523043371766752, \
0.13868140242642607], [-0.1343116584011779, 0.10635854703215784], \
[-0.13986686988188374, 0.09093956337002916], [-0.125271946993574, \
0.13487658617685774], [-0.13894751620297346, 0.11019413809021511], \
[-0.13612283414026016, 0.10773409551205168], [-0.13516422933021432, \
0.13801445263786116], [-0.13664332338518673, 0.11276083678083257], \
[-0.13944746871221206, 0.053678273231423206], [-0.13868671842972036, \
0.10502157861043622], [-0.13927669914294658, 0.041233543775026416], \
[-0.13851604240629986, 0.08612978525524836], [-0.14015183559636735, \
0.0703263028847392], [-0.13386854695451314, 0.05800892497104294], \
[-0.13622654407664464, 0.058420794440319584], [-0.16567015825402584, \
0.08422630576952106], [-0.13838982065131247, 0.05232508847362512], \
[-0.13675020996483897, 0.02735004199296777], [-0.13776962943389787, \
0.013776962943389778], [-0.13942447519739304, 0.043229766238707376], \
[-0.1389347421214511, 0.022643128905685747], [-0.13408457891049302, \
0.010278944769993845], [-0.1375265076311077, 0.08512483474138542], \
[-0.1375189730152405, 0.09112732189475974], [-0.13882585740481052, \
0.02169154021950166], [-0.13832483285210323, 0.07546008078448267], \
[-0.13819725199990418, 0.015547190849989203], [-0.13911719495270583, \
0.1364644870912605], [-0.11570904715157437, 0.13829753197156994], \
[-0.13396131060182478, 0.12944497914689188], [-0.1407989633426428, \
0.08262044738666857], [-0.13487451020175292, 0.0584040066185039], \
[-0.13592720540880204, 0.06770250352079978], [-0.1370842586298872, \
0.1323687755837864], [-0.13526033198906423, 0.1345286506048136], \
[-0.1344609434905215, 0.1395707800134659], [-0.13734233802088183, \
0.10369688145412051], [-0.12443869099615854, 0.13504645311947222], \
[-0.13939528392054754, 0.03957408572348826], [-0.14048805036924145, \
0.08559922954867233], [-0.11466019718392492, 0.13372214272827812], \
[-0.13058823935824107, 0.13803211749975658], [-0.13815858679970733, \
0.12549713949950303], [-0.10365566750506315, 0.13522733053663247], \
[-0.1149146712324062, 0.13812701871548783], [-0.13182013925570257, \
0.13675795870190569], [-0.13790699809337972, 0.11719029243704565], \
[-0.13866858367876722, 0.08922224172848235], [-0.13805548439309312, \
0.09908379345960541], [-0.10680639783753157, 0.1371630985623242], \
[-0.13985565043783893, 0.09582663561496739], [-0.11349834562379506, \
0.13777655196429425], [-0.10274410362161841, 0.13721702726078058], \
[-0.0697064055189444, 0.1340790827035482], [-0.1385042248014908, \
0.1369993307444416], [-0.13517162247842668, 0.1283809177503104], \
[-0.12441123372426198, 0.13855820849735745], [-0.1376473702517661, \
0.110348795724072], [-0.09303494414125701, 0.13814661636645453], \
[-0.13839062433960955, 0.13956179260635262], [-0.0793514874293025, \
0.14047013363462177], [-0.0936037510661053, 0.14009022460247794], \
[-0.08700762370695037, 0.1394953696882509], [-0.12604759431850318, \
0.13891071881110223], [-0.1381461601158311, 0.09502656308642161], \
[-0.0969725325459451, 0.13967823306077354], [-0.06534544144863604, \
0.13855751855949805], [-0.13918820923827444, 0.11238223931906564], \
[-0.13822171041266815, 0.11147924596190117], [-0.10097440187322375, \
0.13803798363004174], [-0.07936568004109565, 0.13787136249143228], \
[-0.0844244931475015, 0.13808937709651756], [-0.10995178929985842, \
0.13755052702131837], [-0.07092076782555508, 0.1389535657082624], \
[-0.10583859188256613, 0.13876446246452245], [-0.08466340341225846, \
0.1336961141339761], [-0.08774015368719063, 0.1392374952127316], \
[-0.12076837562058096, 0.1379021119064657], [-0.09638131361047776, \
0.1389690825480083], [-0.10354910483214394, 0.14072013224016666], \
[-0.12236607736065858, 0.13772808048427954], [-0.11678296235171334, \
0.13793991170515943], [-0.05392416311733852, 0.13793677339715102], \
[-0.038364906975300046, 0.13419165127875143], [-0.09978932730119011, \
0.13940913919573208], [-0.12640745037797693, 0.13876879126825886], \
[-0.09200687905621378, 0.14103322129484458], [-0.11908397319906115, \
0.13952905733121193], [-0.11698103253400455, 0.13881981848655212], \
[-0.10724640281374286, 0.13777489793113298], [-0.10818358716238903, \
0.13896153059616786], [-0.11425778177186782, 0.1390689508364298], \
[-0.12738772925198694, 0.13625779564299603], [-0.08184036158720419, \
0.1394169076977804], [-0.10963497158424268, 0.1395466653196125], \
[-0.10600754891535079, 0.13878976425078968], [-0.07786604468200943, \
0.13599257737830578], [-0.13912404714604357, 0.09827248313882347], \
[-0.07330494062482792, 0.13831235032023617], [-0.07165672528523596, \
0.14004663005235626], [-0.10029195678086694, 0.13758003140268407], \
[-0.1199985994276968, 0.13920196709298946], [-0.13650403144680667, \
0.1293965568558358], [-0.13179508776817794, 0.13896290224308197], \
[-0.047540371169126905, 0.13746971216631373], [-0.07063458309531218, \
0.133992830665773], [-0.08718536478979437, 0.13982456221382883], \
[-0.10139504336520604, 0.138958617566719], [-0.1318659685138969, \
0.13488520331266385], [-0.13913327263887063, 0.13663990688312275], \
[-0.1331114924029333, 0.13925357466631064], [-0.07572733207768992, \
0.1405205176392449], [-0.032494752130229385, 0.13549616347185722], \
[-0.13865689067580766, 0.08243591853566665], [-0.10753181117422113, \
0.13883144574887613], [-0.13650612260813014, 0.1273087356418484], \
[-0.12038965317211436, 0.13739053133752868], [-0.13650919918761434, \
0.13941875532005252], [-0.13207071161891468, 0.13462625745486312], \
[-0.13241009401822326, 0.133991617576015], [-0.08760646269753983, \
0.13938412102167286], [-0.09362193167877786, 0.13324218470103824], \
[-0.09406601463224372, 0.13791633575300527], [-0.13910466387994733, \
0.12635531265270109], [-0.09058394161514674, 0.1363495398311814], \
[-0.1384033504582282, 0.13849816777960203], [-0.1347171608933362, \
0.141178042041095], [-0.1382486663768749, 0.0893838412588704], \
[-0.12546562527781097, 0.13856200532373147], [-0.138549953103959, \
0.09542696267698624], [-0.13714231723777692, 0.11673422316979373], \
[-0.13456298713332246, 0.11228122556956863], [-0.13567887273880694, \
0.13263933783655107], [-0.13175008265164756, 0.06965778905164778], \
[-0.12965651730978509, 0.13947011976615964], [-0.13880241443857758, \
0.0711392915844217], [-0.13900564247083277, 0.12090740062157647], \
[-0.13813419895999837, 0.0886905270605459], [-0.12799454566149762, \
0.1398236081078763], [-0.13843947329979622, 0.09910257235459383], \
[-0.13527742250930339, 0.0755995633304248], [-0.13678194655123016, \
0.011006672261544285], [-0.13660754035769146, 0.0564623449417947], \
[-0.1377543880934538, 0.022295351029314098], [-0.1382323668839976, \
0.08211270575849217], [-0.13777957798809215, 0.08278122357804346], \
[-0.13810045153861752, 0.0], [-0.13964040231408423, 0.10345748886222587], \
[-0.13741231946884508, 0.0715691429066744], [-0.13735605448077934, \
0.09480603652605106], [-0.1354869179544745, 0.08694940739528649], \
[-0.13786751948238987, 0.007755047970884416], [-0.1346447136475236, \
0.0509226419585424], [-0.13378470750157148, 0.0], [-0.13472383993404938, \
0.05067817154677356], [-0.1355437819099047, 0.13438493702295976], \
[-0.1372166369990951, 0.06931960040759855], [-0.13374332750133497, \
0.122909402550127], [-0.1406306393818178, 0.07077699217213554], [0.0, 0.0], \
[-0.13655614426500276, 0.08307258910529233], [-0.13712632500209357, \
0.05626965891780173], [-0.13765376100551785, 0.1171040186139388], \
[-0.13785349145202655, 0.11305498290664423], [-0.13846743778197965, \
0.08957486735480845], [-0.11731658937604407, 0.13582908632876378], \
[-0.06784178123786258, 0.13537396692676298], [-0.14010512584021065, \
0.12947319917843791], [-0.09865595104635115, 0.13632753531490643], \
[-0.13822909507956246, 0.11936979968242081], [-0.13869453224749984, \
0.1350274588467], [-0.10574879923120291, 0.13673716216531057], \
[-0.10895963246333328, 0.1356156724076301], [-0.13066768208485918, \
0.1375420946745377], [-0.11736142245392897, 0.13677953487501995], \
[-0.13285169904387117, 0.13585155163628687], [-0.14022636029476954, \
0.13017442861538422], [-0.08989763311038863, 0.13872008415444476], \
[-0.07351669703657424, 0.13522058050483846], [-0.08667319586549779, \
0.13738244286001017], [-0.10434389561574196, 0.1390840471929296], \
[-0.04724198804749661, 0.13660126741340461], [-0.08688356702137719, \
0.1364505821079181], [0.0, 0.0], [-0.10663323120415756, 0.1368939796501782], \
[-0.058009695799991746, 0.13830000092353065], [-0.07706047818076214, \
0.13645261114203228], [-0.09403480816377655, 0.13623421358265367], \
[-0.041492493323748894, 0.13731293160871463], [-0.09218701281453254, \
0.13858880285619202], [-0.12379696313296379, 0.13810931197560194], \
[-0.09979670805579988, 0.13969199066549473], [-0.07485973403146698, \
0.14019799251674073], [-0.03106835575639864, 0.1391837042893501], \
[-0.07925425839079224, 0.14002860722631635], [-0.1062931563350048, \
0.13708044159385854], [-0.03670200348258593, 0.13558930937477578], \
[-0.06560536959103022, 0.13775464114097902], [-0.09529557007501312, \
0.13686750071933232], [-0.11487556633391025, 0.13961659398631074], \
[-0.05372457567302987, 0.13875623013826222], [-0.10154950918686889, \
0.13805217284641275], [-0.06401337826915544, 0.13527354458104682], \
[-0.092884864553495, 0.1623053227640973], [-0.10076698951033973, \
0.13767350022539346], [-0.0874868861524035, 0.13642617146931044], \
[-0.05600766527877904, 0.135068115077932], [-0.042480995469690336, \
0.1387516590212188], [-0.11925386786762975, 0.13867580027418286], \
[-0.032996573287501725, 0.14107198474783736], [-0.046735810889094655, \
0.13666752938106666], [-0.02430931919091589, 0.13608109817561415], \
[-0.0807350387998766, 0.13602773572588958], [-0.09150337028225664, \
0.13617245632643113], [-0.05780555776404986, 0.1371915977983751], \
[-0.1049104141787022, 0.139305635113427], [-0.1023337167485908, \
0.13589558801057836], [-0.08404796355828419, 0.1388695051656148], \
[-0.11311986975683928, 0.1389860213472627], [-0.13796876866896524, \
0.1201313160262521], [-0.11463221383920048, 0.1380046253886247], \
[-0.06500048638649922, 0.13805767520118278], [-0.0034092536212745623, \
0.13637014485098317], [-0.06239637466892087, 0.14079390558556962], \
[-0.10172568913227228, 0.13999496900033256], [-0.06660003841132432, \
0.1371433219808534], [-0.07154355466350326, 0.13891918655501623], \
[-0.04566082053203522, 0.13681051274381753], [-0.11263192102388178, \
0.13681302825382047], [-0.08142036530047267, 0.13908548434493356], \
[-0.12219127800657854, 0.13930646951955883], [-0.09979797974986337, \
0.1410518474691279], [-0.05082358986756806, 0.13732634993623147], \
[-0.09307173067959083, 0.13859013960594116], [-0.06615008226337162, \
0.13873459163107799], [-0.08267147781241722, 0.1364410897577926], \
[-0.12616307766820375, 0.1374101913235324], [-0.13852576119293294, \
0.11109586127684438], [-0.06776793541453555, 0.13652394549524974], \
[-0.11536631001638428, 0.13751935901630574], [-0.1227554487516993, \
0.13972136240192942], [-0.04529406768110778, 0.13915277215567137], \
[-0.06410747921627344, 0.13959229599703804], [-0.13396904139186425, \
0.10848927822401351], [-0.13998015033449263, 0.11792958129741819], \
[-0.1121078806607332, 0.13268459010942074], [-0.05732142764043823, \
0.13632423464666052], [-0.13018133895378617, 0.13907565385149617], \
[-0.1159379692577206, 0.1371138860716091], [-0.0976736221816189, \
0.13431606343114824], [-0.07789311248719612, 0.13837251450070925], \
[-0.06143560847774527, 0.138918638271914], [-0.10871276421664555, \
0.13651309846584242], [-0.08391840105522543, 0.13641975487500657], \
[-0.09890317702611806, 0.1384657175914252], [-0.13217234473412123, \
0.1356891399395247], [-0.11447875101946438, 0.13565081871525833], \
[-0.11823868574678878, 0.1352434047349676], [-0.10114985456357993, \
0.138405627263005], [-0.13568491680818115, 0.12264321157803262], \
[-0.13548246721906546, 0.12230592117515698], [-0.13982685629387245, \
0.09178356517120848], [-0.13915506910163913, 0.012176068546393422], \
[-0.13548346820982868, 0.03320898869733307], [-0.13692640592645303, \
0.12995918340198848], [-0.13359644991171524, 0.12227523027509724], \
[-0.12118971360239655, 0.13659576120962635], [-0.1387990858058411, \
0.03371995392012685], [-0.14106669846721454, 0.06290488101414825], \
[-0.14031198542858503, 0.1260795449094098], [-0.13456061796788313, \
0.08169668317824497], [-0.13688299835771434, 0.0026639832863721495], \
[-0.1384441768708455, 0.10971708796919168], [-0.13800615819423492, \
0.03420836659035639], [-0.1394848651902112, 0.13589404619131876], \
[-0.13690722988913168, 0.07062927038298815], [-0.1375062580524323, \
0.02466884588571558], [-0.13673306966742538, 0.08314393838626269], \
[-0.1350849785035329, 2.2173946380719925e-17], [-0.13850377584233362, \
0.026759831883134504], [-0.13738581657945412, 0.006875999120797878], \
[-0.1381470296836245, 0.07378694922605719], [-0.13843813284416875, \
0.09400345826688424], [-0.13705002097158067, 0.07821295747953165], \
[-0.13393982658832826, 0.09691261289518205], [-0.1343048808896814, \
0.031871599389166796], [-0.13680567909229938, 0.07862595257985434], \
[-0.1385779096300286, 0.07379027285225712], [-0.13596189825249996, \
0.0625561329768034], [-0.13755976776784248, 0.07882183692839392], \
[-0.13498803097898499, 0.06838401527098015], [-0.1245521763436495, \
0.13637743129608149], [-0.13746474503084538, 0.12461742759946393], \
[-0.13627763230339296, 0.13993417626629417], [-0.03303484873419747, \
0.1375907880551771], [-0.13856155176283338, 0.06649657403094913], \
[-0.1381159220971722, 0.12827328376459862], [-0.1375572669817788, \
0.13651447306554151], [-0.06622737348162552, 0.13890181960897632], \
[-0.1346661437128758, 0.11836749043559766], [-0.13716227278189713, \
0.13486281900544625], [-0.05487540453478964, 0.13561900771331142], \
[-0.08780925251117706, 0.1355667536994783], [-0.1255523662625499, \
0.13857308605902396], [-0.050391265729263036, 0.13764332519381114], \
[-0.10936942805049181, 0.13801098806722759], [-0.08318784103200995, \
0.1350643568088619], [-0.1114555442954108, 0.13752509458231585], \
[-0.10408509798243507, 0.13705271695878202], [-0.12308340856749009, \
0.13844902376236584], [-0.06944568344517559, 0.13802383644922084], \
[-0.1388446712250058, 0.1397025504453002], [-0.11923818362538106, \
0.13905377069167563], [-0.12946758431534106, 0.1351090247963748], \
[-0.10393262612142665, 0.1390642856823785], [-0.13559420212439668, \
0.1164401604312713], [-0.08208371515608462, 0.13857418729831936], \
[-0.11121618175907076, 0.137638983076576], [-0.08798700627180774, \
0.1385874798082208], [-0.07665341788467392, 0.1390181991923327], \
[-0.11974099153544444, 0.13878336803363198], [-0.12623849225671616, \
0.13414418381497806], [-0.019291756875239575, 0.13782078934289493], \
[-0.03635417630968777, 0.13703537396725488], [-0.09834417833705218, \
0.13986536304317845], [-0.13680340800818597, 0.13863063436432793], \
[-0.07350087672007308, 0.13839859937063026], [-0.031811449653200694, \
0.13625858537110977], [-0.1028341961140661, 0.13911075046221497], \
[-0.021934769226021306, 0.13768090394158689], [-0.04334364810027314, \
0.1353384034876133], [-0.13637232779843078, 0.13648963021137825], \
[-0.0697616502784785, 0.13413998153838064], [-0.08285736405154899, \
0.13795531392083998], [-0.061321367129709745, 0.13885991670413764], \
[-0.12239260151279217, 0.14040826142598267], [-0.07149004911155225, \
0.1390959632423319], [-0.1056546434245711, 0.13921336498911566], \
[-0.09430524276674247, 0.1349576833559893], [-0.09082499577188077, \
0.13880408803759833], [-0.0584574722441013, 0.13766713480679177], \
[-0.08311581576861003, 0.1401801389697393], [-0.12395470396771847, \
0.1390346486563463], [-0.055759984562904236, 0.1393287938596716], \
[-0.05116440653168831, 0.13711554209207347], [-0.0927900540703459, \
0.13605344546956186], [-0.1392222682582582, 0.13683805072843155], \
[-0.11159820158565525, 0.1382697857178907], [-0.12112629705476373, \
0.13671571227654047], [-0.11813789000287807, 0.13671303095163892], \
[-0.07398895969533488, 0.1369263989430986], [-0.10654156403918416, \
0.13956517271603405], [-0.011476946631691713, 0.1347825859960679], \
[-0.08641271724832528, 0.13825233251208396], [-0.0961367578642796, \
0.13931591735864243], [-0.10928454741981616, 0.1349092745102114], \
[-0.06055386970357794, 0.13749254418964343], [-0.0863976937822063, \
0.13816886198291717], [-0.12213339460658278, 0.13601976315006897], \
[-0.03413989591442383, 0.13825998738142542], [-0.07391074424941002, \
0.1386350059489275], [-0.07658989894881432, 0.1400581688586874], \
[-0.043069654568139534, 0.1346646402341416], [-0.1318818484751441, \
0.13760063519863788], [-0.12156101260961628, 0.13639938833391443], \
[-0.12724585318622722, 0.1376372530675222], [-0.07679552969880217, \
0.1418324414143136], [-0.10531858255384345, 0.1399424033956722], \
[-0.06400990712973142, 0.13993743357107333], [-0.05328774625147348, \
0.1386514499614115], [-2.2173946380719925e-17, 0.13933520014228087], \
[-0.1200096549295148, 0.135230063187496], [-0.1319854995945366, \
0.13846416271048778], [-0.13711650958451685, 0.12088527647118208], \
[-0.10360430763099365, 0.1379227802805209], [-0.11136555488413455, \
0.13562542696953483], [-0.09947983364054638, 0.13683756923063783], \
[-0.060232958842209944, 0.13749508029992671], [-0.0185923028845284, \
0.1386349967254919], [-0.13922097613653603, 0.0967061869895098], \
[-0.136931948154262, 0.10437740280762745], [-0.10659801330499757, \
0.13558796208174326], [-0.08885645930681213, 0.13443576866737286], \
[-0.1391160445335756, 0.13987075518766295], [-0.13950794914675976, \
0.12707650428876266], [-0.1277586256167856, 0.13462282971444356], \
[-0.09687391730107121, 0.13923825644468105], [-0.13755984228898127, \
0.09285584684754863], [-0.13988317845428963, 0.06513286676011149], \
[-0.16514881585388602, 0.14830959463367235], [-0.1652976676333247, \
0.16010942779249798], [-0.1317947102632899, 0.13845276620176566], \
[-0.09555254231091011, 0.13445040113067142], [-0.09537010199883371, \
0.13368603603604953], [-0.1355690205968504, 0.13470949414118935], \
[-0.16460580202571296, 0.006172717575964219], [-0.13448995609308098, \
0.013567939757065686], [-0.16658019317987882, 0.011606930452523753], \
[-0.1649329125765656, 0.03995470438470241], [-0.137430422320444, \
0.04793115634494746], [-0.1397369157241732, 0.030115594220010825], \
[-0.13865892035750205, 0.05543934347737184], [-0.1373031139158757, \
0.10170698323796079], [-0.13437751594876704, 0.10433556143176471], \
[-0.13702595400957054, 0.07496201474544939], [-0.13288808618928544, \
0.08172676996146984], [-0.13710456118440748, 0.09172946048888654], \
[-0.13870468113162274, 0.0972406356257904], [-0.13699789825260134, \
0.033111087695068674], [-0.13400169384116312, 0.1282766171501396], \
[-0.13729301440913716, 0.08704040818864295], [-0.16431816262331542, \
0.16137890031909843], [-0.16432875252967222, 0.16714799067895833], \
[-0.16645314320622318, 0.1148927674751133], [-0.13710647571725443, \
0.09691108566621774], [-0.1205454265654448, 0.13922564598255285], \
[-0.11635120463764322, 0.13607155750802155], [-0.13654458308533815, \
0.13465092665550701], [-0.12053293335542602, 0.13834822077829148], \
[-0.16875966533003323, 0.12312142246621802], [-0.1675551625729616, \
0.14932159001486794], [-0.1277873985361627, 0.166748269521248], \
[-0.11075851793911103, 0.1691133219910695], [-0.13577475442656953, \
0.11050967159296834], [-0.13953931754251672, 0.10044975855604074], \
[-0.11979498394697782, 0.13784095410199332], [-0.111870189357754, \
0.14068356607066473], [-0.0913781392367451, 0.13629153350970538], \
[-0.06924483729036472, 0.16733101688645638], [-0.07819549932974584, \
0.17107534040691277], [-0.07303102791502071, 0.16819539828441393], \
[-0.13069944295740935, 0.14095986982558664], [-0.1383851936711623, \
0.1332185233536043], [-0.061725115202059366, 0.13804120763843328], \
[-0.10722376735614442, 0.13922921436940647], [-0.13069627990329613, \
0.13630420853128578], [-0.08492601073529615, 0.13917888436524356], \
[-0.08698405309978212, 0.1389153902533622], [-0.013697587182518475, \
0.1369758718251848], [-0.0341492907056371, 0.1394329904111771], \
[-0.1053780581173772, 0.1380962852417306], [-0.0518314016403564, \
0.1391762472569265], [-0.12278766841618911, 0.13728913292912148], \
[-0.07224714610406766, 0.13979471168048255], [-0.058996147370008044, \
0.14009514051603741], [-0.0982649161960617, 0.13815694794647912], \
[-0.04516871523087527, 0.13770761706780588], [-0.10357958255183225, \
0.1384418611076175], [-0.13036912063673398, 0.13882991335210104], \
[-0.13776099038752895, 0.12086692354255843], [-0.08565831038833141, \
0.13853438592127015], [-0.09165771686542963, 0.13742554693008285], \
[-0.04477900254085072, 0.1360814847050922], [0.0, 0.13824290132113445], \
[-0.06947908965300524, 0.13374181135086033], [-0.11048800563914273, \
0.13858290830010378], [-0.061690748758046435, 0.1374681965188896], \
[-0.12853648871630352, 0.13780425273073277], [-0.11453827703100522, \
0.13890587551140451], [-0.09782376273160316, 0.13742430729991223], \
[-0.028537412904213962, 0.1351521088301914], [-0.07092851277996762, \
0.137658549509273], [-0.1382914777679559, 0.13772032670701453], \
[-0.04155192676434555, 0.14136193853626092], [-0.1388540904551459, \
0.1261497491141313], [-0.1027887752102867, 0.13803808241695442], \
[-0.0819620176865803, 0.13981637801451052], [-0.04077501683968348, \
0.13374952253817565], [-0.06764707918385623, 0.13820360150905586], \
[-0.025270110052489792, 0.13931650624654632], [-0.12463997241053039, \
0.1376692493469685], [-0.08445637952555266, 0.13447440559415755], \
[-0.08231337883456259, 0.13904702623230317], [-0.022724764360479575, \
0.03559300442002826], [-0.033836514182512795, 0.13879581768102828], \
[-0.09868836272405597, 0.1359221709532476], [-0.08221440944055632, \
0.13716570416663204], [-0.07007904809916908, 0.13562688443792056], \
[-0.09213645174689221, 0.13798581386486697], [-0.12388705034255502, \
0.13647339393247568], [-0.07081171945787651, 0.13822657515001213], \
[-0.11216705841038176, 0.13957111023217475], [-0.08816077270420347, \
0.13949967834172156], [-0.11976733406758246, 0.13855812611212642], \
[-0.04637685344142178, 0.13456396581240918], [-0.024094563436503267, \
0.13671312304438243], [-0.010227302744254856, 0.13636403659006477], \
[-0.07957344833177106, 0.13488268607998793], [-0.07124803008140584, \
0.13668473253978494], [-0.031806713213354966, 0.13885782411661057], \
[-0.08194007197997008, 0.13754438713631256], [-0.0406735569151346, \
0.1355785230504486], [-0.0690992702010579, 0.13676285451004253], \
[-0.061803002566246754, 0.13513585183590568], [-0.08717037009171127, \
0.13877178653666317], [-0.10592289223548543, 0.1398455660313021], \
[-0.03748105353277611, 0.13886074522323086], [-0.0953809767459712, \
0.13794788542574715], [-0.0034174852978467525, 0.13669941191387042], \
[-0.09413630058247319, 0.13923540577385848], [-0.10394266862951253, \
0.13699931876798443], [-0.138880017297348, 0.09617613044633452], \
[-0.12312590202093364, 0.13806557498226732], [-2.2173946380719925e-17, \
0.13680640432139135], [-0.07376323046994114, 0.1349795865140614], \
[-0.06986974853848978, 0.13882821395662207], [-0.013938991967606677, \
0.13429897950667738], [-0.11029968857142279, 0.13657292618090672], \
[-0.10727483550574303, 0.13597831546110267], [-0.11264258005925121, \
0.1353013028552841], [-0.13541091921086756, 0.1335573975264698], \
[-0.010083778510923918, 0.13796732635731], [-0.11815108697869894, \
0.13558247055062503], [-0.12408841281764972, 0.13959030751143675], \
[-0.1391823172060172, 0.11737254402659883], [-0.12799014055490457, \
0.13736161640448882], [-0.13597623906436113, 0.0908793533047081], \
[-0.13578752307445793, 0.09267812227601628], [-0.13559074388204534, \
0.06598759791488382], [-0.13918945587604475, 0.08312447443140539], \
[-0.10120303795000442, 0.13925569892853634], [-0.1388955611770195, \
0.1391547858400625], [-0.13792724726717295, 0.13397852171440658], \
[-0.13246259576901934, 0.025408577690217028], [-0.16352473016290706, \
0.06838059240739945], [-0.13718603199925747, 0.010151632397210668], \
[-0.14172591871213144, 0.012549260927901755], [-0.14077737273853916, \
0.141440752222684], [-0.13617530718646093, 0.015259832056336834], \
[-0.13872374444656885, 0.05829717459564824], [-0.13504299483084253, \
0.016143318891804696], [-0.13831875206599462, 0.054375102612302405], \
[-0.13737802278304342, 0.09970363631485171], [-0.1346531192897852, \
0.10006576724252073], [-0.13813431080086505, 0.01065878868908504], \
[-0.1390827118562676, 0.07885713446640549], [-0.1403054315686258, \
0.06306302396366632], [-0.13758270765178474, 0.009171267958768457], \
[-0.13540087029468745, 0.02416983202067143], [-0.1327998901534477, \
0.13625341532378463], [-0.13754313329033796, 0.08670590787630696], \
[-0.1372612751088666, 0.09085384964389363], [-0.17024390726295993, \
0.10721863068092546], [-0.13669485179257682, 0.07345107723972716], \
[-0.1287534857571226, 0.13482335364832942], [-0.1349895288688647, \
0.05830384049429343], [-0.12446842277090407, 0.1384137123833024], \
[-0.13319261694757875, 0.11913860044198206], [-0.07822938728477388, \
0.13769051577574318], [-0.13852127224567898, 0.13148427711393862], \
[-0.057057510546715644, 0.13640286834367446], [-0.08547715198503918, \
0.13316542460973743], [-0.09310316034273415, 0.1367512498268321], \
[-0.10547006621088638, 0.13787541563688316], [-0.09854223431954337, \
0.13537491854659575], [-0.10922876644089345, 0.16685797266754682], \
[-0.04523660694000428, 0.13646403229802898], [-0.07008944583329105, \
0.13722931828325854], [-0.08745448101502865, 0.13603995509850897], \
[-0.08327760518872568, 0.13793771367613983], [-0.09275991912349477, \
0.13737892980585237], [-0.08736782971740421, 0.13925503527340907], \
[-0.13912327749334796, 0.09309521437342227], [-0.09189577775045481, \
0.13768063816473752], [-0.10345676663044465, 0.13938619995942578], \
[-0.06326553793879021, 0.13826793089470354], [-0.1122755946197061, \
0.1377938427845873], [-0.031309963677471166, 0.1385279684271294], \
[-0.06852301561718456, 0.13894343000782167], [-0.06398682406957913, \
0.13155425786480762], [-0.09756303864948888, 0.1367133053029414], \
[-0.07841870201641701, 0.13860347631383899], [-0.0645073308838914, \
0.13828561902552866], [-0.04894806946532528, 0.13472418516936355], \
[-0.07784579188880786, 0.13871042932926977], [-0.06721883131112848, \
0.1396794855894278], [-0.12059006492191986, 0.13664872537662423], \
[-0.10112074293708193, 0.13708853570123117], [-0.041187953418424864, \
0.1397477889865923], [-0.07486390979830966, 0.13684161850947146], \
[-0.0412627058271158, 0.13666183129255025], [-0.11514062485606766, \
0.1383682185811042], [-0.04414707680902661, 0.13891848892283643], \
[-0.0453699021537065, 0.13745203445164908], [-0.09004479686515286, \
0.13818570105781647], [-0.08425851679102224, 0.14239685418292053], \
[-0.07760916078970237, 0.13852601108807466], [-0.07049783372497673, \
0.1371241216619472], [-0.050001912262379974, 0.13840476366540727], \
[-0.1395458502411524, 0.12345772064209472], [-0.05720128699438503, \
0.13532076760621534], [-0.06842140053613778, 0.13647779209130925], \
[-0.09622380288312209, 0.13993876687165252], [-0.10644660941261214, \
0.13707089633171815], [-0.032795699430481245, 0.1364012628542061], \
[-0.03336424138297401, 0.13857403579004418], [-0.09413356042666958, \
0.13797577668722727], [-0.024782716993039976, 0.13975010848247188], \
[-0.06895060879100483, 0.14067609283860477], [-0.009375913791682894, \
0.1369605666573934], [-0.10698909776839217, 0.13533459419535263], \
[-0.12362677808666668, 0.12920279171212534], [-0.03248313316722582, \
0.1384653602064039], [-0.08278776729097632, 0.13716166399303195], \
[-0.08529190217151228, 0.13692992901667445], [-0.0831096544431725, \
0.13802033336398875], [-0.06100392727697483, 0.13648237257292284], \
[-0.07321423057130219, 0.13899032882389345], [-0.05535005147050795, \
0.13577247833484718], [-0.017657066540173662, 0.13760149267228197], \
[-0.0814735911694462, 0.13971497843842928], [-0.11037542873816204, \
0.13835879860399428], [-0.07750534532132353, 0.13963183195399811], \
[-0.06314035671258522, 0.13903010203348917], [-0.011079430419753126, \
0.13815651951979102], [-0.01087352969366094, 0.1380385418033273], \
[-0.0678494200681875, 0.1376232175113667], [-0.09682179890893394, \
0.1386747362444406], [-0.03402364719617711, 0.1376487885063214], \
[-0.10009579811531696, 0.13688749054116092], [-0.02356201848161172, \
0.1372331771801812], [-0.09052115573376643, 0.1392190189566137], \
[-0.0983137053435781, 0.13714474742706573], [-0.04600794580510258, \
0.13792472424185284], [-0.08404707236218063, 0.13941272600560026], \
[-0.04888008634764169, 0.13799715235496768], [-0.02707670007238105, \
0.13781469748149036], [-0.12115315336962744, 0.13683400575103785], \
[-0.13781700543509706, 0.1188543179134774], [-0.09182110983509849, \
0.13582673368103673], [-0.08424725723477093, 0.13434146987909035], \
[-0.0930430262008201, 0.1376167320018464], [-0.12909253637905332, \
0.1392503002156167], [-0.018369764617690312, 0.1357433806134937], \
[-0.05820540327298011, 0.13788257055944342], [-0.09771681632332287, \
0.13803884117300325], [-0.13830413874380862, 0.13698635189355382], \
[-0.054997820625238905, 0.13736506473295246], [-0.11050646868667378, \
0.13853823551561611], [-0.1388678302572034, 0.1375576191744628], \
[-0.10027753713125612, 0.14091896887916708], [-0.12299684478871961, \
0.1369544823118745], [-0.08560324199323624, 0.13715803726577702], \
[-0.1388561482418587, 0.05763899702966178], [-0.13842525953885723, \
0.13262597251006306], [-0.13903010473457264, 0.11191591756715978], \
[-0.1382657116806944, 0.045049086524579764], [-0.12557429967937078, \
0.13487092861558594], [-0.13668039214199543, 0.10854348655847487], \
[-0.10875511334108541, 0.13757961746559016], [-0.1377437986508155, \
0.11846450651610096], [-0.13787255999318623, 0.060602328902715615], \
[-0.13761614761957264, 0.08140182646213405], [-0.13682009631784073, \
0.025740041684754307], [-0.135782848609008, 0.029618257889414898], \
[-0.1375236387898343, 0.08326341619675902], [-0.1392386774069528, \
0.022132544012504286], [-0.13684192299177603, 0.056587074899814654], \
[-0.13860751204885932, 0.08161718564111488], [-0.137771790757928, \
0.0640521277167148], [-0.1373589760529315, 0.035852613784107375], \
[-0.1380403519683013, 0.06531852668131907], [-0.132709880224766, \
0.10538268997048597], [-0.13868766845981334, 0.05861239271517785], \
[-0.13526622096415616, 0.04193441317842042], [-0.1402160722057074, \
0.03401627583426361], [-0.13304515223088798, 0.06515017763788922], \
[-0.11506418319577294, 0.13539143431576817], [-0.13684900214996043, \
0.05705047661319388], [-0.11829440480884405, 0.13438525446678257], \
[-0.1383323247404768, 0.12235516512903438], [-0.13854489281821966, \
0.09914269268999706], [-0.11742516229398692, 0.13818419057361073], \
[-0.12320640983094984, 0.13757360146345338], [-0.1379181148620113, \
0.07353694922143886], [-0.13534783532933384, 0.06927245187717432], \
[-0.12160451811950246, 0.13783622258759143], [-0.1382330867808341, \
0.10719059369314993], [-0.13722172077973804, 0.12169919622383989], \
[-0.09000118579089796, 0.1381175725622662], [-0.039263636894842656, \
0.13757641103047472], [-0.09823574882921857, 0.16918665042506287], \
[-0.1652882913961631, 0.10581185671504463], [-0.132943582785049, \
0.13834987639815233], [-0.05220016571964279, 0.13528804508363507], \
[-0.13627112635053715, 0.1380754169875533], [-0.06981834041162342, \
0.13647364439988316], [-0.1333740359138212, 0.13849556096622181], \
[-0.13878161002479164, 0.13745534781496738], [-0.08359407876178715, \
0.1387297141611201], [-0.08731468426376486, 0.1396637995731895], \
[-0.13814789437257877, 0.11688725131809066], [-0.10618442125158589, \
0.1401371842291532], [-0.13906044978993365, 0.1372591265248918], \
[-0.11210091190887773, 0.1379050618462499], [-0.09234751346683524, \
0.13497726171875743], [-0.07811336857605718, 0.13948538007725433], \
[-0.08867685137691728, 0.13762679028218527], [-0.09059497395416553, \
0.13859536400748423], [-0.06937762714832113, 0.13840718814075628], \
[-0.10526976038589843, 0.1381682167085349], [-0.04810398354421631, \
0.13517094682341485], [-0.03129724568212339, 0.13909886969832616], \
[-0.016749612388574062, 0.13734287121838337], [-0.08831273883485483, \
0.13837373153082627], [-0.07477930107829392, 0.13847894285013296], \
[-0.08140453694777475, 0.13863580357996966], [-0.10761238120665832, \
0.13702647474530197], [-0.10936783293172413, 0.13705460842840728], \
[-0.08492170505609009, 0.13805360517090812], [-0.004814059607899291, \
0.13921727976483753], [-0.03989637874140418, 0.1394570432326215], \
[-0.03167453686798233, 0.13891155757497317], [0.0, 0.13823887291810016], \
[-0.12477623992923013, 0.1372901429766987], [-0.039454510304669184, \
0.1391106105826211], [-0.13677553997651717, 0.13360307332666355], \
[-0.09165565061079076, 0.1368816105723387], [-0.12115469796529757, \
0.13386269378325336], [-0.11134515148998499, 0.1393119303652915], \
[-0.021838032112826464, 0.13442985822735132], [-0.07106563587703592, \
0.13979696612886347], [-0.08442875294523863, 0.1376257667831651], \
[-0.0967200530004024, 0.1397163442612069], [-0.030451379321824342, \
0.1349561268962518], [-0.13510007625166412, 0.13597722957356215], \
[-0.08723038033010846, 0.13871879813659746], [-0.0796134825235766, \
0.13850753490078796], [-0.04514553335862869, 0.13438058717356172], \
[-0.09624614749573054, 0.13921539449675607], [-0.05202855644182254, \
0.1375088363462278], [-0.09725448202263336, 0.13689617159963846], \
[-0.05159827494407909, 0.13767135187881382], [-0.11398212400306794, \
0.13463675863949387], [-0.06791591488538881, 0.13489627596482898], \
[-0.09086378534562674, 0.13768473243888354], [-0.05655198079920687, \
0.13586552160703547], [-0.017558834233139347, 0.1348607703781981], \
[-0.058969199318836485, 0.13849618390255286], [-0.020707039353629844, \
0.138046929024199], [-0.04056720712975793, 0.13601496021892384], \
[-0.0798126051301683, 0.13947279826665124], [-0.07605081285812137, \
0.1395455649862168], [-0.041062542344467226, 0.1390057686831728], \
[-0.09734945403903868, 0.13754999918507776], [-0.08502193480141784, \
0.1384636920204658], [-0.018762802460758964, 0.1384858194179824], \
[-0.0803211182876903, 0.1390355278829538], [-0.13691807078641202, \
0.1136661547167448], [-0.12498505781782905, 0.1366966640183378], \
[-0.0736476888132358, 0.13725209068523725], [-0.13431256512124876, \
0.13856461054188485], [-0.09737576595176003, 0.13835525152006953], \
[-0.061656967167338476, 0.13810789075528865], [-0.03397063749360768, \
0.13773738271693137], [-0.061533262543471155, 0.13835232035729764], \
[-0.1351895179851354, 0.13041087951244046], [-0.13343431904873243, \
0.07743068852789252], [-0.09351773048742212, 0.13842839431136658], \
[-0.040490915291348704, 0.137391864607076], [-0.07342398337716675, \
0.1353829524796823], [-0.08446272635465359, 0.13706849672982294], \
[-0.09181209901598886, 0.13738155372708713], [-0.07027054132900408, \
0.137146875791531], [-0.13857371681351732, 0.04955731920328169], \
[-0.13672309378001163, 0.12981610301186358], [-0.12901436589808432, \
0.1378921780976224], [-0.1368943569752891, 0.13728386343080004], \
[-0.1058824027469435, 0.13896146086904987], [-0.1387464365200759, \
0.11835679744371035], [-0.15727907144813683, 0.1664295697926756], \
[-0.13715292316592734, 0.12021325287422517], [-0.135417821334161, \
0.046722179604507266], [-0.1379278318626799, 0.07255014574359063], \
[-0.14010182834464505, 0.045969589894141835], [-0.13842160012614244, \
0.1181941342797167], [-0.13839201561473297, 0.12371387350550299], \
[-0.12279698226368765, 0.1383551818661234], [-0.1288601679595495, \
0.13410325428384334], [-0.13530569569230438, 0.053972037393511245], \
[-0.13666777165967578, 0.06039995553660603], [-0.14079967849736472, \
0.02445917402378154], [-0.13663001588546725, 0.10398084227184448], \
[-0.13925660843137402, 0.0317713153471402], [-0.13727812404013848, \
0.1291424618930821], [-0.1332159623564106, 0.0], [-0.137019454076314, \
0.014640000553799173], [-0.13307189983857254, 0.12827781193373783], \
[-0.1371544812824253, 0.024131021438296322], [-0.13777984138819965, \
0.06365796649002159], [-0.13774774309049598, 0.13036918329639718], \
[-0.13610317528588828, 0.13180450818222356], [-0.1373100579613799, \
0.08116221520127294], [-0.13811696315417002, 0.036359399123280955], \
[-0.13707230268057877, 0.0635875562370631], [-0.13775800324863557, \
0.09260953673144069], [-0.13922812925849898, 0.11406101229873046], \
[-0.12644662674082935, 0.13770699317173848], [-0.13626074824267978, \
0.09307004136760046], [-0.12859020447543013, 0.13788469754451277], \
[-0.11311261553394382, 0.13804749604913255], [-0.13615723205058633, \
0.12364487868274932], [-0.12961167515201028, 0.13288152118342456], \
[-0.07440604976720126, 0.13880588693365267], [-0.10830485653598544, \
0.13786207514406085], [-0.04997627023099833, 0.13964024219047946], \
[-0.12040219935365651, 0.13857638978967962], [-0.12439946531274441, \
0.16321014237316783], [-0.13894726847325306, 0.12628941399989854], \
[-0.16831340873428532, 0.1116114131493023], [-0.12404687104571897, \
0.16764718233054818], [-0.055358566764660645, 0.13916096748511483], \
[-0.06272791460603422, 0.16608263340682317], [-0.1355643403497425, \
0.16859678950952223], [-0.16829836844874907, 0.14304831077034763], \
[-0.12628252649751942, 0.1397061288383196], [-0.12689761482210005, \
0.13890908799207705], [-0.13242739529325892, 0.13990291029076019], \
[-0.11177589769944672, 0.1406805647301038], [-0.045524085980688245, \
0.1384101500105963], [-0.11259248870093395, 0.16893499062572964], \
[-0.12626016274877, 0.16926239398917503], [-0.07313067720972913, \
0.16833163355626876], [-0.13678703377081072, 0.11935764065200236], \
[-0.0766183675252579, 0.13864569297754104], [-0.04644606317754861, \
0.13970056232648256], [-0.016107626316834933, 0.13892065058407255], \
[-0.07917434455831886, 0.13586615053838827], [-0.05172526090611843, \
0.13855837601474466], [-0.06504145973228743, 0.1380014204795938], \
[-0.1208687898737281, 0.13508553520222502], [-0.09769530630372912, \
0.13794537148772656], [-0.07010379314211831, 0.13861165941004303], \
[-0.07950998488480807, 0.1392987503612556], [-0.05427176975783181, \
0.1392640974593155], [-0.054852042119737786, 0.13871741051228284], \
[-0.13819925654030454, 0.12527236695969543], [-0.09415360903876539, \
0.13917051872924233], [-0.07347055956310085, 0.1383146245181106], \
[-0.053290695535872096, 0.13797081469191708], [-0.0693456872519253, \
0.1384191161732737], [-0.10483721644408225, 0.13857281152652878], \
[-0.08553762839082252, 0.13768432445995477], [-0.11916284095670004, \
0.1341539298570775], [-0.029998040424387425, 0.13798394711372136], \
[-0.03915120259042753, 0.14107344708489977], [-0.020129405501083917, \
0.13419603667389274], [-0.08725332040829614, 0.13825224383319354], \
[-0.0929865940281218, 0.14197234963277514], [-0.11091544509577578, \
0.13904447588147525], [-0.02637387187788778, 0.1386125139417301], \
[-0.08830602765735583, 0.13823438276819827], [-0.07610738206281241, \
0.13841732403699109], [-0.06667312294140909, 0.13647609405421549], \
[-0.05910321634573905, 0.13892419195162165], [-0.03836375615284783, \
0.13788650490477247], [-0.034094318151680285, 0.1375194887706669], \
[-0.08870385642298384, 0.13808666178496523], [-0.07057660424996237, \
0.13800402187586905], [-0.06086335373756548, 0.13873240873857695], \
[-0.061034699560773335, 0.13684577208404708], [-0.09452070953950553, \
0.13892111244363195], [-0.0858960748980418, 0.13844900237509492], \
[-0.021434414135941875, 0.13714783671431888], [-0.06149711437250542, \
0.13909871358383707], [-0.08675024172419768, 0.13970105829478305], \
[-0.07869416293635541, 0.14057161135273388], [-0.13127992324606258, \
0.13421466283182754], [-0.06449062056359485, 0.13925431583200434], \
[-0.0950821781687275, 0.13964963843299374], [-0.07030726484375566, \
0.13981633630168733], [-0.10057202751473074, 0.13549112648667502], \
[-0.030538292632030447, 0.1378971383572937], [-0.08408752790850427, \
0.13948434839560547], [-0.08489856039717943, 0.13925298430016952], \
[-0.12360989558528458, 0.13496197006345662], [-0.09106597833377149, \
0.13551888738795684], [-0.10702304470948543, 0.1382856998909506], \
[-0.12922994656820377, 0.13924796103598666], [-0.04142896627912658, \
0.14066817612464658], [-0.003438499425265051, 0.13753997701060305], \
[-0.08833252740443596, 0.13614196861050196], [-0.07351165588674108, \
0.13546118852743042], [-0.08577430740252384, 0.13722268707078245], \
[-0.07205468122658686, 0.13354242562037597], [-0.13345056291246377, \
0.13827651223072343], [-0.07512183754329134, 0.13921433255825794], \
[-0.07960222207772731, 0.13636840966732974], [-0.138594616350203, \
0.12854152857709003], [-0.09878830109607438, 0.13939599580154105], \
[-0.08822515144878379, 0.1375097135010916], [-0.13707247889377866, \
0.11047138578222657], [-0.12973266824453755, 0.13991434779468068], \
[-0.13480838008789395, 0.1151902488126715], [-0.13386473084954076, \
0.12552155453499672], [-0.15607768865225852, 0.1680285244522067], \
[-0.1573618578257503, 0.16363238470205055], [-0.1150146601752284, \
0.1343619783237564], [-0.10753926590761546, 0.16665567865353156], \
[-0.1387052285806825, 0.1258975297987923], [-0.1374438734561597, \
0.042196577435135114], [-0.14134146085832802, 0.09004738887205872], \
[-0.138855794417661, 0.06104787848477937], [-0.13959236993329616, \
0.1368959121207441], [-0.13776391903494783, 0.13229913102947302], \
[-0.13820790888770926, 0.11360139216311811], [-0.13315625336314432, \
0.13805683472492108], [-0.13543785406870437, 0.05908886717715044], \
[-0.1376481155467682, 0.03419347247558591], [-0.1365505998194968, \
0.07982465146128456], [-0.13788763771274998, 0.04689966090008332], \
[-0.1375600791867516, 0.05270951134649592], [-0.13819735284247756, \
0.10110018196350877], [-0.13482156336991202, 0.0], [-0.13841503843839162, \
0.013309268283437595], [-0.13342708428782346, 0.10839509302510666], \
[-0.1331380675015352, 0.10680738671316585], [-0.13266781589690904, \
0.046682184517825354], [-0.13917566871587841, 0.13392307594476005], \
[-0.13805187903059357, 0.070796223893255], [-0.13999240349656106, \
0.04109069489527975], [-0.13836164465086873, 0.11023052640561039], \
[-0.13668813656805925, 0.03422191136683542], [-0.13685879323103844, \
0.13732481724876675], [-0.13672479909986054, 0.1138773157407], \
[-0.13698882877307292, 0.06487488229984355], [-0.12035519519047425, \
0.1329488717396521], [-0.08726996014285933, 0.13589062099626914], \
[-0.1387404038299348, 0.08898042592338577], [-0.13711918482281427, \
0.10835836944128525], [-0.13798715920907323, 0.09606856368713808], \
[-0.13501207111338567, 0.13992546489173097], [-0.13909409919608315, \
0.12901238114028493], [-0.1288673975414184, 0.13957692719743064], \
[-0.1382709832372712, 0.11877899700103356], [-0.16955404570314325, \
0.050901221189258425], [-0.14984222974213454, 0.1672069851617635], \
[-0.1060997225770424, 0.1334932987646656], [-0.07721125739727194, \
0.13730084807254553], [-0.05725069965840952, 0.16861905990175705], \
[-0.07522825937115932, 0.1685876298612844], [-0.16853443906690943, \
0.13461482110638837], [-0.08657917052138635, 0.13772438932621398], \
[-0.13831141168428968, 0.11321304334531299], [-0.05572019251870334, \
0.13888028273953032], [-0.13850362896452492, 0.11996847962776784], \
[-0.06700651051635936, 0.13727465508370348], [-0.1585401094574546, \
0.16938471306599473], [-0.11742375387038051, 0.17112431706210507], \
[-0.15958755416725917, 0.16911117513069215], [-0.13827932430165102, \
0.13903755319168098], [-0.11385465480097574, 0.13773149364507964], \
[-0.009652008260618808, 0.13476377328300662], [-0.07788556844589116, \
0.13448363981979639], [-0.07070924754500534, 0.13610030418559754], \
[-0.13543008630748, 0.12508914203375848], [-0.13326194568794025, \
0.12126375987444904], [-0.08997966762045105, 0.1393304175792486], \
[-0.12335544562572427, 0.13773783472905143], [-0.06864567191830984, \
0.1393063653022135], [-0.07664562313761607, 0.13942182692620383], \
[-0.13516545514575437, 0.1325517071758356], [-0.10548320024832689, \
0.1397128305085908], [-0.09448208251094367, 0.13828691021182274], \
[-0.1081294529363522, 0.13798541964638528], [-0.06594159653651398, \
0.13962195521274415], [-0.07810604033580143, 0.13919801017385275], \
[-0.07746491619706655, 0.13909051253063198], [-0.12253512822757598, \
0.14134505889623492], [-0.08532551062854887, 0.13799780852946295], \
[-0.0512577514840504, 0.1388567509970974], [-0.09802643087119653, \
0.13860728894882993], [-0.055154165231092206, 0.13989479612605776], \
[-0.07919953604380428, 0.1390402745528939], [-0.1222704975663625, \
0.13690849444145012], [-0.13905988625730295, 0.1399477187818889], \
[-0.07417725805205952, 0.13866770200163658], [-0.12771325857626825, \
0.13993992862507798], [-0.1011088234336278, 0.13660302991302548], \
[-0.09315745518024912, 0.13765743522140428], [-0.0870205504286332, \
0.13825664834937865], [-0.12264019831078807, 0.1360935954800797], \
[-0.09792941962836442, 0.13922432455076672], [-0.06186142642592744, \
0.14108877377606477], [-0.057898731737232485, 0.13840453440865716], \
[-0.11966706753427002, 0.13917134100560047], [-0.06153089469037331, \
0.13887849338024996], [-0.04166102955843476, 0.13995532974617333], \
[-0.07820219269409849, 0.1385379270598494], [-0.08134929839430437, \
0.13480628868028205], [-0.10971711994663441, 0.13662458326258198], \
[-0.061700234250189986, 0.138114355424551], [-0.018353419493368557, \
0.13658358692739386], [-0.07468431770505173, 0.13937602850414088], \
[-0.02311042848020618, 0.14006172609671735], [-0.05077225804655175, \
0.1389057997105029], [-0.05593867537253314, 0.13892475857726908], \
[-0.12210504246627218, 0.13802257313462557], [-0.1388996581326998, \
0.12603753292411618], [-0.0429620255435861, 0.13686576677532455], \
[-0.08223941300371819, 0.13899180145908613], [-0.056547064317361645, \
0.1361113357672197], [-0.11877663542059233, 0.13836817658680378], \
[-0.07113904602714684, 0.136620112062627], [-0.13839343649755745, \
0.13258069270436243], [-0.08709872655004151, 0.13842347473450953], \
[-0.0834706205388484, 0.13804312844735803], [-0.1210194386535932, \
0.13751094478565945], [-0.07755317276130769, 0.13959206057835066], \
[-0.12454220060648316, 0.13850391361672337], [-0.08984063505033166, \
0.13930876624662583], [-0.11970169304284381, 0.13897728031878956], \
[-0.12718053551547864, 0.13848624576979035], [-0.12270137057354914, \
0.13782230464567602], [-0.07292966334801938, 0.13787085026712959], \
[-0.1279560509057756, 0.13993506760967966], [-0.08068435057305824, \
0.1393464558141205], [-0.11426321065742254, 0.1379829494994627], \
[-0.08982298129149534, 0.1385619299707297], [-0.12548328798977038, \
0.1356456132005224], [-0.03354061153531267, 0.13666572060709994], \
[-0.138956893862849, 0.07314853564928397], [-0.13821029082268638, \
0.08832575234386378], [-0.16360544903741514, 0.15753195805704914], \
[-0.16791577792124412, 0.07750576247360327], [-0.16647597411299317, \
0.12206603532637791], [-0.10177874258612866, 0.13921443928596416], \
[-0.1394773716793285, 0.09813125734595195], [-0.13402933214655408, \
0.040622331126291364], [-0.1383115792498609, 0.02488729486709698], \
[-0.13933832236405602, 0.05266489125605465], [-0.1394312113998218, \
0.0705599596116261], [-0.1354895882841825, 0.1385019110692294], \
[-0.13894513384910767, 0.07383279379376337], [-0.10352888135132142, \
0.13561074433908946], [-0.1390104771395385, 0.009174920629544909], \
[-0.13394832320996583, 0.06712817155959745], [-0.1390357695390804, 0.0], \
[-0.13577411196538547, 0.01357741119653855], [-0.1379394800086017, \
0.13925146030534177], [-0.14009530667764905, 0.10080875289209273], \
[-0.13808511876285673, 0.01763821634197423], [-0.1387069954401828, \
0.021620606753638638], [-0.13889189512791106, 0.0770351335910323], \
[-0.13851904904319587, 0.084531073144648], [-0.13469049976700057, \
0.10593434834380143], [-0.1389297301067587, 0.06622009190291434], \
[-0.13935727317359273, 0.0034839318293398195], [-0.13811468519001854, \
0.12988520532848882], [-0.13997332763154488, 0.09313439117938413], \
[-0.13418996978254297, 0.10688134662995093], [-0.1374861094467818, \
0.09294107173539776], [-0.1356467864237239, 0.11897516620133355], \
[-0.11522769534423487, 0.13847653502064913], [-0.13862146949583853, \
0.11229755037306594], [-0.1387029291110799, 0.12403783449416113], \
[-0.14050068616868214, 0.08331843000706035], [-0.12543641220672427, \
0.13858329363515023], [-0.12157260300159074, 0.13438420204672236], \
[-0.11070018721557673, 0.1380148883330292], [-0.13886509635533079, \
0.08948976416457946], [-0.133609898792801, 0.13867691586328626], \
[-0.07976625009706738, 0.13978670918203637], [-0.13466378001473187, \
0.13587431874964218], [-0.10424462999747133, 0.13928819937463985], \
[-0.11220985300642561, 0.13599885994446043], [-0.07080401944935305, \
0.13937199761958624], [-0.12689611551070173, 0.13875490085762865], \
[-0.1382098414479202, 0.1136895342376006], [-0.04023188075223548, \
0.1341062691741185], [-0.16809212952829733, 0.16938366668635071], \
[-0.08276053809914426, 0.13797771762598138], [-0.08651242253344016, \
0.13833859793699163], [-0.1384883438605142, 0.13167322312776034], \
[-0.1362323636054098, 0.13381852902414426], [-0.09969859788821182, \
0.13890985927606725], [-0.11177925065001214, 0.13695849948925173], \
[-0.13986017249582483, 0.13322536961709355], [-0.10011571403221255, \
0.1348870565555506], [-0.10352140596703979, 0.13725650383480992], \
[-0.12559254081623145, 0.14042944044169253], [0.0, 0.1392936635057811], \
[-0.10616284571630037, 0.14013035773398005], [-0.09599905903865985, \
0.1402931420027435], [-0.13978529571009082, 0.11634626731602342], \
[-0.10091746991486064, 0.13498703988826552], [-0.024917615659758235, \
0.13925128256619687], [-0.04262759081129977, 0.13920152315216194], \
[-0.09379757593218457, 0.13935066962051326], [-0.13699960896903018, \
0.14126756489238038], [-0.08987804268699032, 0.13917752244347142], \
[-0.13952261741449176, 0.1342715812158474], [-0.1151226891778243, \
0.13843347628726826], [-0.13930093099486843, 0.13091416622389548], \
[-0.08155993752094177, 0.13443285809509645], [-0.08437375502304564, \
0.13948870942870675], [-0.03990891231077073, 0.13977414448593395], \
[-0.1400806590544612, 0.13605981055036637], [-0.09085628285791242, \
0.14140114586625396], [-0.12600678788259612, 0.13960821421566913], \
[-0.11997485798869235, 0.14074270301133052], [-0.13507062129720118, \
0.13798163837715016], [-0.13680324556935042, 0.14012256078776775], \
[-0.1405310529021086, 0.13219574485469243], [-0.04360727124142613, \
0.14005762496368834], [-0.10318044211453789, 0.1418837474560197], \
[-0.13941321741707963, 0.13699198199216864], [-0.07258457234161095, \
0.14030136733553467], [-0.12998052968554202, 0.14023510093908675], \
[-0.08239043917354578, 0.14066679798747048], [-0.13984531805101771, \
0.1340428322874305], [-0.06539528253597662, 0.1384481274085165], \
[-0.10033817615914435, 0.1354706047669386], [-0.07727597535890018, \
0.1398185402829002], [-0.04597175495481508, 0.13883030298409735], \
[-0.12202444538325385, 0.1379248857220698], [-0.07725861309976594, \
0.13558699292813936], [-0.1151370268154339, 0.13911073535221058], \
[-0.12081736487322502, 0.13938312357661384], [-0.029553964736552963, \
0.14117887850298247], [-0.06194699007861464, 0.1405666672729252], \
[-0.09333306264892892, 0.14089605318597387], [-0.09063626482567747, \
0.140049624659816], [-0.10443169201302772, 0.13730705087310704], \
[-0.061592881070133144, 0.13645443126875373], [-0.13534940516186225, \
0.12574529430359427], [-0.14022545427464436, 0.1315852628611829], \
[-0.06620314280702864, 0.1393776331710442], [-0.1385479372501288, \
0.12388149093881713], [-0.1347844786920918, 0.13065246359473126], \
[-0.09840973927571396, 0.13900321432908525], [-0.053823141381116026, \
0.139894588468815], [-0.1390205045285512, 0.07901837981813693], \
[-0.13533695710568536, 0.08614656997208252], [-0.13234030251438791, \
0.13808512307652263], [-0.12444632588248902, 0.1394354357011612], \
[-0.12349352598163907, 0.13864596477664823], [-0.10106748923492424, \
0.13806871705660662], [-0.1301769531783966, 0.1393619045192812], \
[-0.11102152499849405, 0.13956338051455303], [-0.14031485145617348, \
0.10915868460159593], [-0.11569082388787773, 0.1364688092324143], \
[-0.13599042555647026, 0.11376036404397169], [-0.10995893165748408, \
0.1357475674912447], [-0.06077983050180524, 0.13867243813705535], \
[-0.1376026688203848, 0.13987188412610205], [-0.11677793921185504, \
0.1397676384808899], [-0.12911029901558177, 0.13918149813495131], \
[-0.13796043994715929, 0.11571982561609778], [-0.135652123120382, \
0.12540398461980212], [-0.10628755870324781, 0.13742979440622186], \
[-0.14130230531934185, 0.06533634506980422], [-0.06340189507687095, \
0.1387189679467302], [-0.12353246592578702, 0.13809313930054412], \
[-0.13943476763711027, 0.07654874222106782], [-0.13937371462344106, \
0.05471949729108447], [-0.13946643103612447, 0.07091409771129964], \
[-0.14079605615506463, 0.03184694542255883], [-0.1396635479175241, \
0.11587288834272218], [-0.13597751920624376, 0.10935060835895909], \
[-0.13652764874021, 0.10131174506714173], [-0.14097476515892787, \
0.1387363051897433], [-0.13347227334914902, 0.13965448610992637], \
[-0.13834311661820126, 0.0], [-0.13416680180330268, 0.0042324816216098874], \
[-0.1348966706361477, 0.011502494309821214], [-0.14029627088680657, \
0.01595872641808114], [-0.13847092113932874, 0.0026494987212954623], \
[-0.13733985139624455, 0.04761127395346477], [-0.13893909363263063, \
0.016270633103454286], [-0.1403678650167973, 0.010527589876259773], \
[-0.1344784238010534, 0.12522816406667475], [-0.13898396475638206, \
0.0681493949199279], [-0.1350621137437498, 0.05010652564873582], \
[-0.13632591281076775, 0.12375246270113603], [-0.13879132061892313, \
0.04979549287742832], [-0.13812203626842243, 0.1336384215302183], \
[-0.1380355207575391, 0.025625554461664205], [-0.13874420769350257, \
0.06359566248274331], [-0.13557856485972392, 0.08302137744889891], \
[-0.13950118561300914, 0.10158495082638266], [-0.13941747769379978, \
0.1001331054883247], [-0.13719906199671944, 0.13914956810012494], \
[-0.06800384756372817, 0.13626021406512073], [-0.1159529288182204, \
0.13813315638870555], [-0.13540816694991087, 0.10948222366355938], \
[-0.13775334127208055, 0.09716891194634915], [-0.13831584458590127, \
0.09642464006394282], [-0.12047676775630278, 0.13771994430696594], \
[-0.13769475026047534, 0.12185787767547873], [-0.1279204806081403, \
0.13878570692647338], [-0.13739851376027865, 0.1052644684196437], \
[-0.1004420750982, 0.1371917518570465], [-0.10880574279153521, \
0.1378234650964938], [-0.13752346118776057, 0.07746993984563888], \
[-0.1394085982608201, 0.06936381293750664], [-0.11858814848249154, \
0.13978693102845585], [-0.1318639731283384, 0.13699533454281482], \
[-0.04163970648898751, 0.13902149614166445], [-0.13407807299494587, \
0.1368916157143769], [-0.06836747072145753, 0.1383720190704064], \
[-0.12300661978014503, 0.13802354685669704], [-0.1177379079547142, \
0.13805022358408606], [-0.13170700945840325, 0.1392780857362852], \
[-0.11153280966965817, 0.13997570235738896], [-0.04356483205452772, \
0.1398696754603763], [-0.06494568073969795, 0.1395179436096078], \
[-0.06103624729712263, 0.1358057973880492], [-0.07085419607800304, \
0.13909640274489343], [-0.063548777458215, 0.1398958990204369], \
[-0.07037361938409556, 0.13419077850066385], [-0.13740916876150586, \
0.10082315995041326], [-0.0905906621245675, 0.13845877490374112], \
[-0.024521031355506755, 0.1401201791743242], [-0.1199070920504991, \
0.13974491586592536], [-0.0928143274615606, 0.13870772332191803], \
[-0.10640123278482605, 0.1384009740775122], [-0.06580910031694832, \
0.13978117164273252], [-0.13815232607709102, 0.10898818678638826], \
[-0.04432634115069835, 0.14095990738028827], [-0.10166127954575384, \
0.13932072444972185], [-0.07852682795771335, 0.13601290566397728], \
[-0.03722881540635261, 0.1410529544680684], [-0.04840174554903916, \
0.14120581088471318], [-0.12343742605027579, 0.13994206049675736], \
[-0.0980914501741568, 0.1382801298390375], [-0.14111436032901492, \
0.13760536272530288], [-0.06591274015608292, 0.13844869242305577], \
[-0.139400087732412, 0.12676361661876995], [-0.11863960997218556, \
0.13759637570728267], [-0.06007919281756517, 0.1409206573642473], \
[-0.021513308032577606, 0.14063948717766733], [-0.07095531117653664, \
0.13848984699681707], [-0.1401109394936916, 0.12265620805521667], \
[-0.11562145092989912, 0.13968080965800123], [-0.08449616166047884, \
0.13923868482889976], [-0.11434867184006546, 0.13520496219109696], \
[-0.13609093443314915, 0.09140964644590002], [-0.11963922324231993, \
0.13816967165731456], [-0.087968017282082, 0.13929614374650856], \
[-0.09018272811488624, 0.1401164594624381], [-0.13880656607202616, \
0.13239953295198637], [-0.11437726958697145, 0.14051264576886904], \
[-0.11877269486479201, 0.13804153593892657], [-0.136757835827561, \
0.13799130636777213], [-0.08084246941659268, 0.13706465933583714], \
[-0.08518107827908246, 0.1364519186582364], [-0.007124368309650051, \
0.14248736619300084], [-0.11674428424351127, 0.14044002121086036], \
[-0.01578764261019236, 0.14092791951690528], [-0.12086680526213273, \
0.13992553544918293], [-0.09045755462231087, 0.1403378651410725], \
[-0.13901297579303362, 0.13098893370993822], [-0.1291123626930472, \
0.13766802236834547], [-0.14006729877529944, 0.11353890995842614], \
[-0.10199935275054248, 0.1382854334463865], [-0.09892767461627366, \
0.1388960624832278], [-0.08015752330988651, 0.14161250349647567], \
[-0.09335912381917995, 0.1402155437055445], [-0.1375920115947308, \
0.1243931914318548], [-0.08801928726791196, 0.13940250372164312], \
[-0.08214864142247219, 0.13900972994159735], [-0.13775114052960014, \
0.07933341867343706], [-0.12331871240168352, 0.13785769741401607], \
[-0.11365181980838011, 0.14029783311667143], [-0.1402168324188044, \
0.14011737337474794], [-0.0809488298843462, 0.1393487640506632], \
[-0.1403133799835587, 0.10817592634387223], [-0.13927573006177738, \
0.08146511992834836], [-0.13999553942123993, 0.08925088949885793], \
[-0.03440632199497639, 0.13576063892698673], [-0.08739574906833605, \
0.13671041032876055], [-0.11712307785613266, 0.13928978100309408], \
[-0.136797604096673, 0.13860463952413649], [-0.09270462613502599, \
0.1371257631823308], [-0.13817727486431544, 0.06676341151329186], \
[-0.13840760654365206, 0.13744442307226734], [-0.13626683336466244, \
0.12770439147921395], [-0.13896115298168044, 0.08222726059360658], \
[-0.13824658690481922, 0.09902205396559251], [-0.13900666459811942, \
0.12254135203234093], [-0.13995974671924089, 0.14023433994801174], \
[-0.14114571575834836, 0.05286472815777432], [-0.1399250921344155, \
0.022375885124790457], [-0.14026478518648317, 0.08529782010076926], \
[-0.13963462556325523, 0.13005425201182844], [-0.14050447046660122, \
0.03126093241646121], [-0.11144610563948049, 0.13912621063432729], \
[-0.139847818921355, 0.13062829412500088], [-0.14067510155300247, \
0.06602458026321154], [-0.14036538157925554, 0.11301405982588428], \
[-0.13526473431110445, 0.06418331961351571], [-0.13771737425279318, \
0.05181511292671185], [-0.13585923817117404, 0.006848813262141368], \
[-0.13952198255093756, 0.015169327243617628], [-0.1364448615594292, \
0.05590612301906262], [-0.13620086189888325, 0.11888898022422742], \
[-0.1359651946519723, 0.046910566271218576], [-0.13749887340766992, 0.0], \
[-0.13923242737116623, 0.08383422330084209], [-0.13922013859923169, \
0.0239426630751433], [-0.13767153200263935, 0.10530713164836211], \
[-0.1402360072314047, 0.055867141921346064], [-0.13722150697974184, \
0.02500196272869373], [-0.13596302134730603, 0.058821758845628146], \
[-0.1381176498729724, 0.05562259535411932], [-0.14075895619356485, \
0.020887034564074338], [-0.1385968082631941, 0.04159837943946043], \
[-0.13805150874541458, 0.07331588179465136], [-0.13937626576223391, \
0.07131662645850997], [-0.12419701639445356, 0.13532800792682198], \
[-0.1393328707601728, 0.08741997238214609], [-0.13603996401471583, \
0.06373780003674735], [-0.13908847914608086, 0.041759427039539936], \
[-0.1402806542691043, 0.11059878859322973], [-0.13866145027736695, \
0.13611334312358372], [-0.13129600333746289, 0.13584287303128637], \
[-0.10253700433339438, 0.13749505291326566], [-0.13895229417518598, \
0.08116201816615218], [-0.09851547694069761, 0.13766667485798376], \
[-0.13873246584577104, 0.09827976310854786], [-0.10961026931005616, \
0.13689328096658784], [-0.13806164652464353, 0.13869548931586856], \
[-0.12436654546984444, 0.13722800136739446], [-0.13872009785954714, \
0.11371983833377455], [-0.12604087491639393, 0.1401034130015596], \
[-0.13103508387364562, 0.13830373358198772], [-0.12952212024350118, \
0.1382012390461951], [-0.13577240359696754, 0.11433509124764582], \
[-0.08058637197803202, 0.13755024621229014], [-0.1394974925880768, \
0.0996939732167161], [-0.11548310188790338, 0.14025658639421718], \
[-0.10418394421774488, 0.13830812743179505], [-0.07942614477845597, \
0.1400643693274673], [-0.02957694997781734, 0.13752697597715402], \
[-0.14000934467963858, 0.08503323412687126], [-0.03461444221434142, \
0.13939524904519934], [-0.08744170815062385, 0.13851119242658094], \
[-0.12603775430864703, 0.13994208457896562], [-0.11283333180904463, \
0.13918013714168842], [-0.08130034818045782, 0.14007214821824873], \
[-0.031875810841981475, 0.1365546287018821], [-0.11989684613022458, \
0.14004800926838126], [-0.13918777354767156, 0.12428153118158637], \
[-0.12008442206777774, 0.13662721343703121], [-0.06953310329129128, \
0.14107346193738293], [-0.13619729173536685, 0.13677461256868576], \
[-0.13800316938943433, 0.13728244804370618], [-0.05329917145704319, \
0.14010429361008464], [-0.12163011524533396, 0.13638914697193602], \
[-0.05100139589076551, 0.1407390908121287], [-0.13180360183723802, \
0.1404225375964771], [-0.13920452130786193, 0.11787051705323996], \
[-0.09525109986715118, 0.1399407368509709], [-0.0818911887359892, \
0.14098534823680556], [-0.06718118732540643, 0.13422167939740104], \
[-0.12596830317981422, 0.1409591519814934], [-0.13915382873193938, \
0.12999508574829988], [0.0, 0.0], [-0.09099525665059688, \
0.13870647411155526], [-0.07206541302582964, 0.13735904155816525], \
[-0.13768734137585414, 0.1362214192369758], [-0.11189173099757074, \
0.13740892349028908], [-0.05227716949914606, 0.1395733445219022], \
[-0.05944098202203478, 0.13929324712094474], [-0.08049622345575368, \
0.13933997242191232], [-0.12076643165285626, 0.13671256958737465], \
[-0.10278461895871921, 0.13878606225145487], [-0.10634828217899661, \
0.1392756705294467], [-0.06890988201561715, 0.1404614257061458], [0.0, 0.0], \
[-0.1185647642823017, 0.13785215116053082], [-0.07232662026995493, \
0.13959803501851756], [-0.1390412394472707, 0.13601647474302467], \
[-0.10377939094052224, 0.13842128291792205], [-0.11755264129831516, \
0.1395689193091883], [-0.11296322598076068, 0.1344216403440207], \
[-0.06796931359566821, 0.140483061333955], [-0.11093684789681649, \
0.14076612297997262], [-0.12131614142705635, 0.13945160431725348], \
[-0.13043419102389972, 0.1371338541117998], [-0.13729500569427225, \
0.13989192249768428], [-0.13767568451679954, 0.10303619815474567], \
[-0.12468904287479796, 0.140453254914721], [-0.11177569086050056, \
0.14027944479009305], [-0.10319961666641225, 0.13869309942641428], \
[-0.1411613062711576, 0.12879591523952566], [-0.10140669546569453, \
0.13931479739798314], [-0.13865063845138265, 0.13074260811633892], \
[-0.13914087398879, 0.13663731116790126], [-0.1256130303741783, \
0.13973136820154028], [-0.10795802462373445, 0.13959385530466073], \
[-0.08787154314943646, 0.13993009627628067], [-0.11299687445935098, \
0.13916520876227534], [-0.13336214603410487, 0.1387744660499468], \
[-0.1035112575322872, 0.14011605892880385], [-0.13997146671341879, \
0.0764389223969193], [-0.11691120401597963, 0.13586771738429174], \
[-0.14175402177342028, 0.13670882229309111], [-0.140026747934553, \
0.10235700117149363], [-0.1417990597530697, 0.06891959640539685], \
[-0.07847760455241051, 0.13797232368267395], [-0.13873408797858547, \
0.12635474014787768], [-0.1370385084674026, 0.12912327248438438], \
[-0.1382746176972486, 0.033674154147155994], [-0.1388969636076318, \
0.12265657526569287], [-0.13888869588309327, 0.1378912523689334], \
[-0.13727209949703698, 0.010772580429951837], [-0.10969644140010185, \
0.1407256633919517], [-0.07262501282087291, 0.14102527521698763], \
[-0.14011299683606257, 0.045747502679824574], [-0.1382868607648938, \
0.0646180429164977], [-0.1406805614774258, 0.07933119563696159], \
[-0.1367918312128546, 0.03387780219461479], [-0.13971473761132205, \
0.12467340623538184], [-0.1396654079940694, 0.08262980009067634], \
[-0.14090771917984216, 0.08075353470093123], [-0.14042947788243335, \
0.04564702483315305], [-0.13897412635312367, 0.11920019978132824], \
[-0.13891920305676364, 0.08885349766275054], [-0.14099635584345765, \
0.003524908896086437], [-0.13864597793680125, 0.049764481049166046], \
[-0.13997395520933287, 0.01224772108081664], [-0.14142822781946712, \
0.07341499076530841], [-0.1391948972726038, 0.09394797271895025], \
[-0.13821654842186926, 0.0484774710172034], [-0.1400399102484537, \
0.11516501191698156], [-0.1372548609614373, 0.04142247071389845], \
[-0.13616902320398136, 0.11920260649789129], [-0.13652153015207083, \
0.11151773132030011], [-0.1353721766975908, 0.0304413359290894], \
[-0.14077086993654078, 0.04288943263450945], [-0.13974513482192089, \
0.02737627615909222], [-0.13941072614792102, 0.006970536307396055], \
[-0.13871032084280427, 0.10491025827837135], [-0.13574589493538203, \
0.05567536437249084], [-0.13529515336990935, 0.11669742455165935], \
[-0.1378431146333255, 0.12292762659446692], [-0.12420883749612983, \
0.1383871445319554], [0.0, 0.0], [-0.13520481192770886, 0.10733837031604815], \
[-0.14072192829953606, 0.11210707070852118], [-0.13913609690741882, \
0.07339650743191835], [-0.10313509278489662, 0.139287035278453], \
[-0.13803292675651938, 0.13967615096951597], [-0.13136711884135055, \
0.1394622536575263], [-0.13417941313604761, 0.11005384098517748], \
[-0.13814248985351138, 0.05168322144193379], [-0.13728195048411895, \
0.0782896829407281], [-0.13877539574777756, 0.08037660828801967], \
[-0.13844323709262066, 0.12787000060878512], [-0.13882072572003015, \
0.0725418732330471], [-0.13986327959880557, 0.11309725224301484], \
[-0.07150751881891126, 0.13927622637432038], [-0.11337710847636613, \
0.14003001068434798], [-0.11260011057393803, 0.13721135446970462], \
[-0.13662302226286197, 0.10503284179388019], [-0.1394378526480304, \
0.131973842078461], [-0.13889464003397958, 0.08946084378882223], \
[-0.1335737330743058, 0.13857982451005116], [-0.11154299740123233, \
0.1378049504816], [-0.13879080180988618, 0.04019377534282319], \
[-0.1399211000197308, 0.11171521194619169], [-0.06997654314385314, \
0.13754255332686532], [-0.09163924375036164, 0.1396286239212564], \
[-0.12152551440416051, 0.13630082604483149], [-0.0849947773003216, \
0.13676443935469385], [-0.13982857103515153, 0.13920940693436795], \
[-0.11460811034655188, 0.1397031960339651], [-0.1397412226032423, \
0.1148381572495263], [-0.13644887826377922, 0.13075179271598789], \
[-0.053416985690691754, 0.14005728291671984], [-0.1394136812851695, \
0.10865905553010007], [-0.13414354782371518, 0.14040589495309008], \
[-0.13646666820706702, 0.1157736104794058], [-0.1363752441966189, \
0.14132018322184536], [-0.10315909959640657, 0.13963601418871457], \
[-0.06684521446308142, 0.13747639177550372], [-0.09448286818644432, \
0.14111596337124785], [-0.13089731545850278, 0.13908082010364153], \
[-0.08625095401235464, 0.13732426241275583], [-0.05626955741476247, \
0.13963794422686712], [-0.1018042802836639, 0.13993707722156032], \
[-0.10228015070494369, 0.13938810043001149], [-0.11482514161521788, \
0.13994559539250487], [-0.138918414245137, 0.13876940031798196], \
[-0.08352661426343827, 0.1410130380611557], [-0.12471958792980684, \
0.1423268258939918], [-0.09425066923658984, 0.1388163697556969], \
[-0.12079627789221765, 0.13657416697215327], [-0.10926408822384728, \
0.14090466881546823], [-0.08441058261748643, 0.13943590978541454], \
[-0.12945456327431537, 0.13880608627720759], [-0.10418810299106425, \
0.13920406404588426], [-0.13898785731449265, 0.09614796486119008], \
[-0.07691276683791409, 0.14222102301146655], [-0.08147750083880818, \
0.13478713382760588], [-0.0945109732579587, 0.13913472876436886], \
[-0.13000379144858612, 0.13873545075549334], [-0.08711682738327979, \
0.13935194425823433], [-0.08442255101562761, 0.14064003116642523], \
[-0.14089257238601652, 0.1043540842665183], [-0.09254120651840593, \
0.13577644228702093], [-0.1411528196993706, 0.14066507572453613], \
[-0.12630255108657948, 0.13951825372263132], [-0.13888373347099817, \
0.09354510187981635], [-0.09094461946002466, 0.13990097178554406], \
[-0.09834686620917889, 0.13890919079109135], [-0.09731447409621101, \
0.13998941888942745], [-0.14006405969867683, 0.13671557942535356], \
[-0.0743898677771938, 0.13825047522117498], [-0.10295682117173567, \
0.13996500531710845], [-0.14048076627468006, 0.1254179531877794], \
[-0.13549238192532845, 0.13963034045072006], [-0.10130032360658482, \
0.1394981805315245], [-0.13795438391118253, 0.10117029261748238], \
[-0.12149477969838844, 0.1379743200540152], [-0.06700888505030296, \
0.13409054114936994], [-0.13208931738533886, 0.13814739374368126], \
[-0.1672614444278282, 0.15052513768586043], [-0.17167935037406248, \
0.16307023204202603], [-0.16781663726237817, 0.11783300453642238], \
[-0.1378234114333891, 0.0891519128897722], [-0.1670102853768399, \
0.1302923567552996], [-0.16744576433422587, 0.15155521732772226], \
[-0.16886276633259467, 0.14247395740676305], [-0.1372861477223526, \
0.10814487177430432], [-0.13997580879221785, 0.11554204954096864], \
[-0.11443427810282429, 0.1377395169025335], [-0.10610849148731716, \
0.138611006479584], [-0.12442451697246888, 0.1402330664371512], \
[-0.16548420862954794, 0.12527288859352118], [-0.168230841227249, \
0.14394454804579682], [-0.16760776127169355, 0.12071586995592491], \
[-0.13873280378703318, 0.08966213110301355], [-0.1407498911739786, \
0.08467885775107052], [-0.1401133537609994, 0.07486579928336794], \
[-0.13932286206793754, 0.1124147469211463], [-0.11052390642333791, \
0.1400044887821785], [-0.13296104247700588, 0.0838652410226053], \
[-0.1399589763951502, 0.08412088857000526], [-0.14211640787700197, \
0.04686382440727843], [-0.1390404372286319, 0.048827150026856364], \
[-0.14009984326224934, 0.10076216560071999], [-0.13889961177785498, \
0.07748668694032174], [-0.13961936913195322, 0.05439121821077307], \
[-0.13476405773868672, 0.07253177611748743], [-0.13420934853669444, \
0.05360050272220177], [-0.1399483391413561, 0.014737113618199594], \
[-0.14401478508102922, 0.020150424273894713], [-0.1392928532280244, \
0.01218812465745212], [-0.13509127142027055, 0.009709685133331935], \
[-0.13680290725667277, 0.0348528579082562], [-0.13865464457276588, \
0.006932732228638282], [-0.14006079200861762, 0.010457231365392141], \
[-0.1385871999045349, 0.027894508178419083], [-0.13942808963457595, \
0.012199957843025418], [-0.14049394489939024, 0.042268089655958206], \
[-0.13920368225028257, 0.027099403972406868], [-0.14043439460473173, \
0.05521404238367473], [-0.13998233905182808, 0.0391684366032363], \
[-0.13741624509904765, 0.013741624509904755], [-0.1391243324479589, \
0.003478108311198958], [-0.13527652614698274, 0.10882347054750104], \
[-0.13757993345219954, 0.018131974788788155], [-0.1371243085502136, \
0.09369676774239778], [-0.1349088791750395, 0.07965749649168226], \
[-0.13943487318022116, 0.10006856941796184], [-0.13629622905957112, \
0.10081695023017163], [-0.13844610422925968, 0.12322718501163354], \
[-0.13918255953565253, 0.07103334165532808], [-0.13885046477450014, \
0.0183070774633278], [-0.13928847100083158, 0.13632915882763175], \
[-0.1367505324359456, 0.1034670410654883], [-0.13633692677737305, \
0.046978528595866], [-0.14021306815611562, 0.07488497257126966], \
[-0.1354552116971379, 0.11856924027359982], [-0.13819625198631055, \
0.06721552252650448], [-0.13656422569542248, 0.11742824319763129], \
[-0.13829407996029183, 0.1064671805434051], [-0.13884107850013885, \
0.06999016524125456], [-0.12025134973358267, 0.13519053929775535], \
[-0.09796280301179458, 0.13843501517243906], [-0.13634149284032335, \
0.09814989170543126], [-0.13949246193401157, 0.13710791733827887], \
[-0.1343166585441611, 0.1367941149538255], [-0.1365168125530198, \
0.08096282211698845], [-0.13733731273791608, 0.12200959832450356], \
[-0.13293465411921293, 0.1396353158368965], [-0.13800134775531006, \
0.10101907868641528], [-0.13674788763449422, 0.08671816774942864], \
[-0.1405799559129488, 0.09272527451864661], [-0.13266789827296996, \
0.1374610309946847], [-0.11948188571680149, 0.137379278879036], \
[-0.14043332168638145, 0.13420271102583545], [-0.1262629470166833, \
0.136461012648716], [-0.10522054058248212, 0.13692442094353446], \
[-0.07477509390797589, 0.13943988160720452], [-0.12308179626096785, \
0.1384033815490398], [-0.13767289421230064, 0.09278550525586944], \
[-0.13787546130642928, 0.13116457362247155], [-0.13922540118181653, \
0.04897101270964158], [-0.14095887953465264, 0.12184478660461957], \
[-0.1359713346403517, 0.06910578349256054], [-0.13899587636782948, \
0.07962534948238238], [-0.13981172435631248, 0.09096588207860652], \
[-0.13918276520131995, 0.09299393842676157], [-0.13916022012468396, \
0.11850155216283341], [-0.139461490798373, 0.12888662414778027], \
[-0.13981051379346293, 0.1105711850380244], [-0.13180663450926036, \
0.13750386126269826], [-0.13771760457306864, 0.1417177535828725], \
[-0.09840193087799586, 0.13641662446819122], [-0.12914860450417107, \
0.139748075693354], [-0.13885017306236244, 0.09499625993423748], \
[-0.14022266597133667, 0.10295179085922615], [-0.13639463507511376, \
0.10741090228936762], [-0.13908339401432598, 0.12876392304184275], \
[-0.13830484600676843, 0.07164366257476194], [-0.13726577844331203, \
0.1389824636780773], [-0.13971574647353027, 0.09293999697499614], \
[-0.12281210129838946, 0.13917377532506622], [-0.14074257513778432, \
0.09127090416542177], [-0.14021328652299375, 0.1252377712536934], \
[-0.125991198606777, 0.13575685058565234], [-0.1401248060380175, \
0.0966420722656032], [-0.13967745939504117, 0.10833728882419064], \
[-0.13918052114126706, 0.0884443170829382], [-0.11357440810959715, \
0.13872378218529677], [-0.1387101831119977, 0.14083377824422127], \
[-0.13157211446180908, 0.14044348259214684], [-0.1355778393743783, \
0.1158831255526241], [-0.10638471422943105, 0.13882804226704468], \
[-0.137307891257536, 0.1345828794667038], [-0.12148545610872732, \
0.13827279640962112], [-0.14043257465174186, 0.10730841341529267], \
[-0.14268456566498627, 0.08312304654346428], [-0.13840728571444486, \
0.12831023054822221], [-0.13479166589114666, 0.09215698474590972], \
[-0.13672844958888664, 0.1150689912410967], [-0.13973387269661777, \
0.12200328573643791], [-0.09053169320039343, 0.1388733980867914], \
[-0.1399771460151576, 0.07961956746159267], [-0.13520812863918336, \
0.13953221316774353], [-0.13794037974512652, 0.09719078206275429], \
[-0.13990234008145616, 0.12312051042313149], [-0.13911202333545022, \
0.11655613815738254], [-0.1616179206846847, 0.1051664808024017], \
[-0.16995437179730952, 0.13375578636012025], [-0.17206764065675306, \
0.13375742482392433], [-0.17295049666196807, 0.1044888648577612], \
[-0.09730301943436506, 0.13840909527355777], [-0.1371309340683023, \
0.11289885845755818], [-0.1384596530186633, 0.120404423763864], \
[-0.16812787913546426, 0.03648262364399411], [-0.13766878098675234, \
0.0968321556729906], [-0.1405990451329524, 0.04545413510586927], \
[-0.1350957495839176, 0.1002832378138187], [-0.13979148445971024, \
0.13553442856341105], [-0.13821523083719542, 0.06101934945768933], \
[-0.14012539346439842, 0.06682583256389772], [-0.13985380096596803, \
0.03453682319208306], [-0.14047588563309193, 0.09008677231474811], \
[-0.14168016337056455, 0.08752022826893298], [-0.13720990000506184, \
0.1359729788077888], [-0.13955664680082258, 0.024782115615450632], \
[-0.1387491827140732, 0.11138133535293318], [-0.13950409879300568, \
0.039138713511765566], [-0.13942513197386963, 0.06768472478357818], \
[-0.1354641647266781, 0.021766519792675812], [-0.13972807354402256, \
0.0661574251384586], [-0.1385980675541535, 0.043028194167364656], \
[-0.1394220500222182, 0.11568301690263712], [-0.13920905065741718, \
0.024726670408686764], [-0.1412966911267321, 0.03582020994008807], \
[-0.13716140618799066, 0.00942314934113783], [-0.14019711595592985, \
0.0778588402574971], [-0.1348054253466314, 0.016850678168328928], \
[-0.13803129362917815, 0.003282287109248514], [-0.13998193851282772, \
0.007873984041346559], [-0.14030128247142185, 0.03507532061785546], \
[-0.1375240760667475, 0.04937062122926084], [-0.1393953325695629, \
0.006969766628478154]], \"annealingDurationRange\": [1.0, 2000.0], \"couplers\
\": [[0, 4], [1, 4], [2, 4], [3, 4], [0, 5], [1, 5], [2, 5], [3, 5], [0, 6], \
[1, 6], [2, 6], [3, 6], [0, 7], [1, 7], [2, 7], [3, 7], [4, 12], [8, 12], [9, \
12], [10, 12], [11, 12], [5, 13], [8, 13], [9, 13], [10, 13], [11, 13], [6, \
14], [8, 14], [9, 14], [10, 14], [11, 14], [7, 15], [8, 15], [9, 15], [10, \
15], [11, 15], [12, 20], [16, 20], [17, 20], [18, 20], [19, 20], [13, 21], \
[16, 21], [17, 21], [18, 21], [19, 21], [16, 22], [17, 22], [18, 22], [19, \
22], [15, 23], [16, 23], [17, 23], [18, 23], [19, 23], [20, 28], [24, 28], \
[25, 28], [26, 28], [27, 28], [21, 29], [24, 29], [25, 29], [26, 29], [27, \
29], [22, 30], [24, 30], [25, 30], [26, 30], [27, 30], [23, 31], [24, 31], \
[25, 31], [26, 31], [27, 31], [28, 36], [32, 36], [33, 36], [34, 36], [35, \
36], [29, 37], [32, 37], [33, 37], [34, 37], [35, 37], [30, 38], [32, 38], \
[33, 38], [34, 38], [35, 38], [31, 39], [32, 39], [33, 39], [34, 39], [35, \
39], [36, 44], [40, 44], [41, 44], [42, 44], [37, 45], [40, 45], [41, 45], \
[42, 45], [39, 47], [40, 47], [41, 47], [42, 47], [44, 52], [48, 52], [49, \
52], [50, 52], [51, 52], [45, 53], [48, 53], [49, 53], [50, 53], [51, 53], \
[48, 54], [49, 54], [50, 54], [51, 54], [47, 55], [48, 55], [49, 55], [50, \
55], [51, 55], [52, 60], [56, 60], [57, 60], [58, 60], [59, 60], [53, 61], \
[56, 61], [57, 61], [58, 61], [59, 61], [54, 62], [56, 62], [57, 62], [58, \
62], [59, 62], [55, 63], [56, 63], [57, 63], [58, 63], [59, 63], [60, 68], \
[64, 68], [65, 68], [66, 68], [67, 68], [61, 69], [64, 69], [65, 69], [66, \
69], [67, 69], [62, 70], [64, 70], [65, 70], [66, 70], [67, 70], [63, 71], \
[64, 71], [65, 71], [66, 71], [67, 71], [68, 76], [72, 76], [73, 76], [74, \
76], [75, 76], [69, 77], [72, 77], [73, 77], [74, 77], [75, 77], [70, 78], \
[72, 78], [73, 78], [74, 78], [75, 78], [71, 79], [72, 79], [73, 79], [74, \
79], [75, 79], [76, 84], [80, 84], [81, 84], [82, 84], [83, 84], [77, 85], \
[80, 85], [81, 85], [82, 85], [83, 85], [78, 86], [80, 86], [81, 86], [82, \
86], [83, 86], [79, 87], [80, 87], [81, 87], [82, 87], [83, 87], [84, 92], \
[88, 92], [89, 92], [90, 92], [91, 92], [85, 93], [88, 93], [89, 93], [90, \
93], [91, 93], [86, 94], [88, 94], [89, 94], [90, 94], [91, 94], [87, 95], \
[88, 95], [89, 95], [90, 95], [91, 95], [92, 100], [96, 100], [97, 100], [98, \
100], [99, 100], [93, 101], [96, 101], [97, 101], [98, 101], [99, 101], [94, \
102], [96, 102], [97, 102], [98, 102], [99, 102], [95, 103], [96, 103], [97, \
103], [98, 103], [99, 103], [100, 108], [104, 108], [105, 108], [106, 108], \
[107, 108], [101, 109], [104, 109], [105, 109], [106, 109], [107, 109], [102, \
110], [104, 110], [105, 110], [106, 110], [107, 110], [103, 111], [104, 111], \
[105, 111], [106, 111], [107, 111], [108, 116], [112, 116], [113, 116], [114, \
116], [115, 116], [109, 117], [112, 117], [113, 117], [114, 117], [115, 117], \
[110, 118], [112, 118], [113, 118], [114, 118], [115, 118], [111, 119], [112, \
119], [113, 119], [114, 119], [115, 119], [116, 124], [120, 124], [121, 124], \
[122, 124], [123, 124], [117, 125], [120, 125], [121, 125], [122, 125], [123, \
125], [118, 126], [120, 126], [121, 126], [122, 126], [123, 126], [119, 127], \
[120, 127], [121, 127], [122, 127], [123, 127], [0, 128], [1, 129], [2, 130], \
[3, 131], [128, 132], [129, 132], [130, 132], [131, 132], [128, 133], [129, \
133], [130, 133], [131, 133], [128, 134], [129, 134], [130, 134], [131, 134], \
[128, 135], [129, 135], [130, 135], [131, 135], [8, 136], [9, 137], [10, \
138], [11, 139], [132, 140], [136, 140], [137, 140], [138, 140], [139, 140], \
[133, 141], [136, 141], [137, 141], [138, 141], [139, 141], [134, 142], [136, \
142], [137, 142], [138, 142], [139, 142], [135, 143], [136, 143], [137, 143], \
[138, 143], [139, 143], [16, 144], [17, 145], [18, 146], [19, 147], [140, \
148], [144, 148], [145, 148], [146, 148], [147, 148], [141, 149], [144, 149], \
[145, 149], [146, 149], [147, 149], [142, 150], [144, 150], [145, 150], [146, \
150], [147, 150], [143, 151], [144, 151], [145, 151], [146, 151], [147, 151], \
[24, 152], [25, 153], [26, 154], [27, 155], [148, 156], [152, 156], [153, \
156], [154, 156], [155, 156], [149, 157], [152, 157], [153, 157], [154, 157], \
[155, 157], [150, 158], [152, 158], [153, 158], [154, 158], [155, 158], [151, \
159], [152, 159], [153, 159], [154, 159], [155, 159], [32, 160], [33, 161], \
[34, 162], [35, 163], [156, 164], [160, 164], [161, 164], [162, 164], [163, \
164], [157, 165], [160, 165], [161, 165], [162, 165], [163, 165], [158, 166], \
[160, 166], [161, 166], [162, 166], [163, 166], [159, 167], [160, 167], [161, \
167], [162, 167], [163, 167], [40, 168], [41, 169], [42, 170], [164, 172], \
[168, 172], [169, 172], [170, 172], [171, 172], [165, 173], [168, 173], [169, \
173], [170, 173], [171, 173], [166, 174], [168, 174], [169, 174], [170, 174], \
[171, 174], [167, 175], [168, 175], [169, 175], [170, 175], [171, 175], [48, \
176], [49, 177], [50, 178], [51, 179], [172, 180], [176, 180], [177, 180], \
[178, 180], [179, 180], [173, 181], [176, 181], [177, 181], [178, 181], [179, \
181], [174, 182], [176, 182], [177, 182], [178, 182], [179, 182], [175, 183], \
[176, 183], [177, 183], [178, 183], [179, 183], [56, 184], [57, 185], [58, \
186], [59, 187], [180, 188], [184, 188], [185, 188], [186, 188], [187, 188], \
[181, 189], [184, 189], [185, 189], [186, 189], [187, 189], [182, 190], [184, \
190], [185, 190], [186, 190], [187, 190], [183, 191], [184, 191], [185, 191], \
[186, 191], [187, 191], [64, 192], [65, 193], [66, 194], [67, 195], [188, \
196], [192, 196], [193, 196], [194, 196], [195, 196], [189, 197], [192, 197], \
[193, 197], [194, 197], [195, 197], [190, 198], [192, 198], [193, 198], [194, \
198], [195, 198], [191, 199], [192, 199], [193, 199], [194, 199], [195, 199], \
[72, 200], [73, 201], [74, 202], [75, 203], [196, 204], [200, 204], [201, \
204], [202, 204], [203, 204], [197, 205], [200, 205], [201, 205], [202, 205], \
[203, 205], [198, 206], [200, 206], [201, 206], [202, 206], [203, 206], [199, \
207], [200, 207], [201, 207], [202, 207], [203, 207], [80, 208], [81, 209], \
[82, 210], [83, 211], [204, 212], [208, 212], [209, 212], [210, 212], [211, \
212], [205, 213], [208, 213], [209, 213], [210, 213], [211, 213], [206, 214], \
[208, 214], [209, 214], [210, 214], [211, 214], [207, 215], [208, 215], [209, \
215], [210, 215], [211, 215], [88, 216], [89, 217], [90, 218], [91, 219], \
[212, 220], [216, 220], [217, 220], [218, 220], [219, 220], [213, 221], [216, \
221], [217, 221], [218, 221], [219, 221], [214, 222], [216, 222], [217, 222], \
[218, 222], [219, 222], [215, 223], [216, 223], [217, 223], [218, 223], [219, \
223], [96, 224], [97, 225], [98, 226], [99, 227], [220, 228], [224, 228], \
[225, 228], [226, 228], [227, 228], [221, 229], [224, 229], [225, 229], [226, \
229], [227, 229], [222, 230], [224, 230], [225, 230], [226, 230], [227, 230], \
[223, 231], [224, 231], [225, 231], [226, 231], [227, 231], [104, 232], [105, \
233], [106, 234], [107, 235], [228, 236], [232, 236], [233, 236], [234, 236], \
[235, 236], [229, 237], [232, 237], [233, 237], [234, 237], [235, 237], [230, \
238], [232, 238], [233, 238], [234, 238], [235, 238], [231, 239], [232, 239], \
[233, 239], [234, 239], [235, 239], [112, 240], [113, 241], [114, 242], [115, \
243], [236, 244], [240, 244], [241, 244], [242, 244], [243, 244], [237, 245], \
[240, 245], [241, 245], [242, 245], [243, 245], [238, 246], [240, 246], [241, \
246], [242, 246], [243, 246], [239, 247], [240, 247], [241, 247], [242, 247], \
[243, 247], [120, 248], [121, 249], [122, 250], [123, 251], [244, 252], [248, \
252], [249, 252], [250, 252], [251, 252], [245, 253], [248, 253], [249, 253], \
[250, 253], [251, 253], [246, 254], [248, 254], [249, 254], [250, 254], [251, \
254], [247, 255], [248, 255], [249, 255], [250, 255], [251, 255], [128, 256], \
[129, 257], [130, 258], [131, 259], [256, 260], [257, 260], [258, 260], [259, \
260], [256, 261], [257, 261], [258, 261], [259, 261], [256, 262], [257, 262], \
[258, 262], [259, 262], [256, 263], [257, 263], [258, 263], [259, 263], [136, \
264], [137, 265], [138, 266], [139, 267], [260, 268], [264, 268], [265, 268], \
[266, 268], [267, 268], [261, 269], [264, 269], [265, 269], [266, 269], [267, \
269], [262, 270], [264, 270], [265, 270], [266, 270], [267, 270], [263, 271], \
[264, 271], [265, 271], [266, 271], [267, 271], [144, 272], [145, 273], [146, \
274], [147, 275], [268, 276], [272, 276], [273, 276], [274, 276], [275, 276], \
[269, 277], [272, 277], [273, 277], [274, 277], [275, 277], [270, 278], [272, \
278], [273, 278], [274, 278], [275, 278], [271, 279], [272, 279], [273, 279], \
[274, 279], [275, 279], [152, 280], [153, 281], [154, 282], [155, 283], [276, \
284], [280, 284], [281, 284], [282, 284], [283, 284], [277, 285], [280, 285], \
[281, 285], [282, 285], [283, 285], [278, 286], [280, 286], [281, 286], [282, \
286], [283, 286], [279, 287], [280, 287], [281, 287], [282, 287], [283, 287], \
[160, 288], [161, 289], [162, 290], [163, 291], [284, 292], [288, 292], [289, \
292], [290, 292], [291, 292], [285, 293], [288, 293], [289, 293], [290, 293], \
[291, 293], [286, 294], [288, 294], [289, 294], [290, 294], [291, 294], [287, \
295], [288, 295], [289, 295], [290, 295], [291, 295], [168, 296], [169, 297], \
[170, 298], [171, 299], [292, 300], [296, 300], [297, 300], [298, 300], [299, \
300], [293, 301], [296, 301], [297, 301], [298, 301], [299, 301], [294, 302], \
[296, 302], [297, 302], [298, 302], [299, 302], [295, 303], [296, 303], [297, \
303], [298, 303], [299, 303], [176, 304], [177, 305], [178, 306], [179, 307], \
[300, 308], [304, 308], [305, 308], [306, 308], [307, 308], [301, 309], [304, \
309], [305, 309], [306, 309], [307, 309], [302, 310], [304, 310], [305, 310], \
[306, 310], [307, 310], [303, 311], [304, 311], [305, 311], [306, 311], [307, \
311], [184, 312], [185, 313], [186, 314], [187, 315], [308, 316], [312, 316], \
[313, 316], [314, 316], [315, 316], [309, 317], [312, 317], [313, 317], [314, \
317], [315, 317], [310, 318], [312, 318], [313, 318], [314, 318], [315, 318], \
[311, 319], [312, 319], [313, 319], [314, 319], [315, 319], [192, 320], [193, \
321], [194, 322], [195, 323], [316, 324], [320, 324], [321, 324], [322, 324], \
[323, 324], [317, 325], [320, 325], [321, 325], [322, 325], [323, 325], [318, \
326], [320, 326], [321, 326], [322, 326], [323, 326], [319, 327], [320, 327], \
[321, 327], [322, 327], [323, 327], [200, 328], [201, 329], [202, 330], [203, \
331], [324, 332], [328, 332], [329, 332], [330, 332], [331, 332], [325, 333], \
[328, 333], [329, 333], [330, 333], [331, 333], [326, 334], [328, 334], [329, \
334], [330, 334], [331, 334], [327, 335], [328, 335], [329, 335], [330, 335], \
[331, 335], [208, 336], [209, 337], [210, 338], [211, 339], [332, 340], [336, \
340], [337, 340], [338, 340], [339, 340], [333, 341], [336, 341], [337, 341], \
[338, 341], [339, 341], [334, 342], [336, 342], [337, 342], [338, 342], [339, \
342], [335, 343], [336, 343], [337, 343], [338, 343], [339, 343], [216, 344], \
[217, 345], [218, 346], [219, 347], [340, 348], [344, 348], [345, 348], [346, \
348], [347, 348], [341, 349], [344, 349], [345, 349], [346, 349], [347, 349], \
[342, 350], [344, 350], [345, 350], [346, 350], [347, 350], [343, 351], [344, \
351], [345, 351], [346, 351], [347, 351], [224, 352], [225, 353], [226, 354], \
[227, 355], [348, 356], [352, 356], [353, 356], [354, 356], [355, 356], [349, \
357], [352, 357], [353, 357], [354, 357], [355, 357], [350, 358], [352, 358], \
[353, 358], [354, 358], [355, 358], [351, 359], [352, 359], [353, 359], [354, \
359], [355, 359], [232, 360], [233, 361], [234, 362], [235, 363], [356, 364], \
[360, 364], [361, 364], [362, 364], [363, 364], [357, 365], [360, 365], [361, \
365], [362, 365], [363, 365], [358, 366], [360, 366], [361, 366], [362, 366], \
[363, 366], [359, 367], [360, 367], [361, 367], [362, 367], [363, 367], [240, \
368], [241, 369], [242, 370], [243, 371], [364, 372], [368, 372], [369, 372], \
[370, 372], [371, 372], [365, 373], [368, 373], [369, 373], [370, 373], [371, \
373], [366, 374], [368, 374], [369, 374], [370, 374], [371, 374], [367, 375], \
[368, 375], [369, 375], [370, 375], [371, 375], [248, 376], [249, 377], [250, \
378], [251, 379], [372, 380], [376, 380], [377, 380], [378, 380], [379, 380], \
[373, 381], [376, 381], [377, 381], [378, 381], [379, 381], [374, 382], [376, \
382], [377, 382], [378, 382], [379, 382], [375, 383], [376, 383], [377, 383], \
[378, 383], [379, 383], [256, 384], [257, 385], [258, 386], [259, 387], [384, \
388], [385, 388], [386, 388], [387, 388], [384, 389], [385, 389], [386, 389], \
[387, 389], [384, 390], [385, 390], [386, 390], [387, 390], [384, 391], [385, \
391], [386, 391], [387, 391], [264, 392], [265, 393], [266, 394], [267, 395], \
[388, 396], [392, 396], [393, 396], [394, 396], [395, 396], [389, 397], [392, \
397], [393, 397], [394, 397], [395, 397], [390, 398], [392, 398], [393, 398], \
[394, 398], [395, 398], [391, 399], [392, 399], [393, 399], [394, 399], [395, \
399], [272, 400], [273, 401], [274, 402], [275, 403], [396, 404], [400, 404], \
[401, 404], [402, 404], [403, 404], [397, 405], [400, 405], [401, 405], [402, \
405], [403, 405], [398, 406], [400, 406], [401, 406], [402, 406], [403, 406], \
[399, 407], [400, 407], [401, 407], [402, 407], [403, 407], [280, 408], [281, \
409], [282, 410], [283, 411], [404, 412], [408, 412], [409, 412], [410, 412], \
[411, 412], [405, 413], [408, 413], [409, 413], [410, 413], [411, 413], [406, \
414], [408, 414], [409, 414], [410, 414], [411, 414], [407, 415], [408, 415], \
[409, 415], [410, 415], [411, 415], [288, 416], [289, 417], [290, 418], [291, \
419], [412, 420], [416, 420], [417, 420], [418, 420], [419, 420], [413, 421], \
[416, 421], [417, 421], [418, 421], [419, 421], [414, 422], [416, 422], [417, \
422], [418, 422], [419, 422], [415, 423], [416, 423], [417, 423], [418, 423], \
[419, 423], [296, 424], [297, 425], [298, 426], [299, 427], [420, 428], [424, \
428], [425, 428], [426, 428], [427, 428], [421, 429], [424, 429], [425, 429], \
[426, 429], [427, 429], [422, 430], [424, 430], [425, 430], [426, 430], [427, \
430], [423, 431], [424, 431], [425, 431], [426, 431], [427, 431], [304, 432], \
[305, 433], [306, 434], [307, 435], [428, 436], [432, 436], [433, 436], [434, \
436], [435, 436], [429, 437], [432, 437], [433, 437], [434, 437], [435, 437], \
[430, 438], [432, 438], [433, 438], [434, 438], [435, 438], [431, 439], [432, \
439], [433, 439], [434, 439], [435, 439], [312, 440], [313, 441], [314, 442], \
[315, 443], [436, 444], [440, 444], [441, 444], [442, 444], [443, 444], [437, \
445], [440, 445], [441, 445], [442, 445], [443, 445], [438, 446], [440, 446], \
[441, 446], [442, 446], [443, 446], [439, 447], [440, 447], [441, 447], [442, \
447], [443, 447], [320, 448], [321, 449], [322, 450], [323, 451], [444, 452], \
[448, 452], [449, 452], [450, 452], [451, 452], [445, 453], [448, 453], [449, \
453], [450, 453], [451, 453], [446, 454], [448, 454], [449, 454], [450, 454], \
[451, 454], [447, 455], [448, 455], [449, 455], [450, 455], [451, 455], [328, \
456], [329, 457], [330, 458], [331, 459], [452, 460], [456, 460], [457, 460], \
[458, 460], [459, 460], [453, 461], [456, 461], [457, 461], [458, 461], [459, \
461], [454, 462], [456, 462], [457, 462], [458, 462], [459, 462], [455, 463], \
[456, 463], [457, 463], [458, 463], [459, 463], [336, 464], [337, 465], [338, \
466], [339, 467], [460, 468], [464, 468], [465, 468], [466, 468], [467, 468], \
[461, 469], [464, 469], [465, 469], [466, 469], [467, 469], [462, 470], [464, \
470], [465, 470], [466, 470], [467, 470], [463, 471], [464, 471], [465, 471], \
[466, 471], [467, 471], [344, 472], [345, 473], [346, 474], [347, 475], [468, \
476], [472, 476], [473, 476], [474, 476], [475, 476], [469, 477], [472, 477], \
[473, 477], [474, 477], [475, 477], [470, 478], [472, 478], [473, 478], [474, \
478], [475, 478], [471, 479], [472, 479], [473, 479], [474, 479], [475, 479], \
[352, 480], [353, 481], [354, 482], [355, 483], [476, 484], [480, 484], [481, \
484], [482, 484], [483, 484], [477, 485], [480, 485], [481, 485], [482, 485], \
[483, 485], [478, 486], [480, 486], [481, 486], [482, 486], [483, 486], [479, \
487], [480, 487], [481, 487], [482, 487], [483, 487], [360, 488], [361, 489], \
[362, 490], [363, 491], [484, 492], [488, 492], [489, 492], [490, 492], [491, \
492], [485, 493], [488, 493], [489, 493], [490, 493], [491, 493], [486, 494], \
[488, 494], [489, 494], [490, 494], [491, 494], [487, 495], [488, 495], [489, \
495], [490, 495], [491, 495], [368, 496], [369, 497], [370, 498], [371, 499], \
[492, 500], [496, 500], [497, 500], [498, 500], [499, 500], [493, 501], [496, \
501], [497, 501], [498, 501], [499, 501], [494, 502], [496, 502], [497, 502], \
[498, 502], [499, 502], [495, 503], [496, 503], [497, 503], [498, 503], [499, \
503], [376, 504], [377, 505], [378, 506], [379, 507], [500, 508], [504, 508], \
[505, 508], [506, 508], [507, 508], [501, 509], [504, 509], [505, 509], [506, \
509], [507, 509], [502, 510], [504, 510], [505, 510], [506, 510], [507, 510], \
[503, 511], [504, 511], [505, 511], [506, 511], [507, 511], [384, 512], [385, \
513], [386, 514], [387, 515], [512, 516], [513, 516], [514, 516], [515, 516], \
[512, 517], [513, 517], [514, 517], [515, 517], [512, 518], [513, 518], [514, \
518], [515, 518], [512, 519], [513, 519], [514, 519], [515, 519], [392, 520], \
[393, 521], [394, 522], [395, 523], [517, 525], [520, 525], [521, 525], [522, \
525], [523, 525], [518, 526], [520, 526], [521, 526], [522, 526], [523, 526], \
[519, 527], [520, 527], [521, 527], [522, 527], [523, 527], [400, 528], [401, \
529], [402, 530], [403, 531], [528, 532], [529, 532], [530, 532], [531, 532], \
[525, 533], [528, 533], [529, 533], [530, 533], [531, 533], [526, 534], [528, \
534], [529, 534], [530, 534], [531, 534], [527, 535], [528, 535], [529, 535], \
[530, 535], [531, 535], [408, 536], [409, 537], [410, 538], [411, 539], [532, \
540], [536, 540], [537, 540], [538, 540], [539, 540], [533, 541], [536, 541], \
[537, 541], [538, 541], [539, 541], [534, 542], [536, 542], [537, 542], [538, \
542], [539, 542], [535, 543], [536, 543], [537, 543], [538, 543], [539, 543], \
[416, 544], [417, 545], [418, 546], [419, 547], [541, 549], [544, 549], [545, \
549], [546, 549], [547, 549], [542, 550], [544, 550], [545, 550], [546, 550], \
[547, 550], [543, 551], [544, 551], [545, 551], [546, 551], [547, 551], [424, \
552], [425, 553], [426, 554], [427, 555], [552, 556], [553, 556], [555, 556], \
[549, 557], [552, 557], [553, 557], [554, 557], [555, 557], [550, 558], [552, \
558], [553, 558], [554, 558], [555, 558], [551, 559], [552, 559], [553, 559], \
[554, 559], [555, 559], [432, 560], [433, 561], [434, 562], [435, 563], [556, \
564], [560, 564], [561, 564], [562, 564], [563, 564], [557, 565], [560, 565], \
[561, 565], [562, 565], [563, 565], [558, 566], [560, 566], [561, 566], [562, \
566], [563, 566], [559, 567], [560, 567], [561, 567], [562, 567], [563, 567], \
[440, 568], [441, 569], [442, 570], [443, 571], [564, 572], [568, 572], [569, \
572], [570, 572], [571, 572], [565, 573], [568, 573], [569, 573], [570, 573], \
[571, 573], [566, 574], [568, 574], [569, 574], [570, 574], [571, 574], [567, \
575], [568, 575], [569, 575], [570, 575], [571, 575], [448, 576], [449, 577], \
[450, 578], [451, 579], [572, 580], [576, 580], [577, 580], [578, 580], [579, \
580], [573, 581], [576, 581], [577, 581], [578, 581], [579, 581], [574, 582], \
[576, 582], [577, 582], [578, 582], [579, 582], [575, 583], [576, 583], [577, \
583], [578, 583], [579, 583], [456, 584], [457, 585], [458, 586], [459, 587], \
[580, 588], [584, 588], [585, 588], [586, 588], [587, 588], [581, 589], [584, \
589], [585, 589], [586, 589], [587, 589], [582, 590], [584, 590], [585, 590], \
[586, 590], [587, 590], [583, 591], [584, 591], [585, 591], [586, 591], [587, \
591], [464, 592], [465, 593], [466, 594], [467, 595], [588, 596], [592, 596], \
[593, 596], [594, 596], [595, 596], [589, 597], [592, 597], [593, 597], [594, \
597], [595, 597], [590, 598], [592, 598], [593, 598], [594, 598], [595, 598], \
[591, 599], [592, 599], [593, 599], [594, 599], [595, 599], [472, 600], [473, \
601], [474, 602], [475, 603], [596, 604], [600, 604], [601, 604], [602, 604], \
[603, 604], [597, 605], [600, 605], [601, 605], [602, 605], [603, 605], [598, \
606], [600, 606], [601, 606], [602, 606], [603, 606], [599, 607], [600, 607], \
[601, 607], [602, 607], [603, 607], [480, 608], [481, 609], [482, 610], [483, \
611], [604, 612], [608, 612], [609, 612], [610, 612], [611, 612], [605, 613], \
[608, 613], [609, 613], [610, 613], [611, 613], [606, 614], [608, 614], [609, \
614], [610, 614], [611, 614], [607, 615], [608, 615], [609, 615], [610, 615], \
[611, 615], [488, 616], [489, 617], [490, 618], [491, 619], [612, 620], [616, \
620], [617, 620], [618, 620], [619, 620], [613, 621], [616, 621], [617, 621], \
[618, 621], [619, 621], [614, 622], [616, 622], [617, 622], [618, 622], [619, \
622], [615, 623], [616, 623], [617, 623], [618, 623], [619, 623], [496, 624], \
[497, 625], [498, 626], [499, 627], [620, 628], [624, 628], [625, 628], [626, \
628], [627, 628], [621, 629], [624, 629], [625, 629], [626, 629], [627, 629], \
[622, 630], [624, 630], [625, 630], [626, 630], [627, 630], [623, 631], [624, \
631], [625, 631], [626, 631], [627, 631], [504, 632], [505, 633], [506, 634], \
[507, 635], [628, 636], [632, 636], [633, 636], [634, 636], [635, 636], [629, \
637], [632, 637], [633, 637], [634, 637], [635, 637], [630, 638], [632, 638], \
[633, 638], [634, 638], [635, 638], [631, 639], [632, 639], [633, 639], [634, \
639], [635, 639], [512, 640], [513, 641], [514, 642], [515, 643], [640, 644], \
[641, 644], [642, 644], [643, 644], [640, 645], [641, 645], [642, 645], [643, \
645], [640, 646], [641, 646], [642, 646], [643, 646], [640, 647], [641, 647], \
[642, 647], [643, 647], [520, 648], [521, 649], [522, 650], [523, 651], [644, \
652], [648, 652], [649, 652], [650, 652], [651, 652], [645, 653], [648, 653], \
[649, 653], [650, 653], [651, 653], [646, 654], [648, 654], [649, 654], [650, \
654], [651, 654], [647, 655], [648, 655], [649, 655], [650, 655], [651, 655], \
[528, 656], [529, 657], [530, 658], [531, 659], [652, 660], [656, 660], [657, \
660], [658, 660], [659, 660], [653, 661], [656, 661], [657, 661], [658, 661], \
[659, 661], [654, 662], [656, 662], [657, 662], [658, 662], [659, 662], [655, \
663], [656, 663], [657, 663], [658, 663], [659, 663], [536, 664], [537, 665], \
[538, 666], [539, 667], [660, 668], [664, 668], [665, 668], [666, 668], [667, \
668], [661, 669], [664, 669], [665, 669], [666, 669], [667, 669], [662, 670], \
[664, 670], [665, 670], [666, 670], [667, 670], [663, 671], [664, 671], [665, \
671], [666, 671], [667, 671], [544, 672], [545, 673], [546, 674], [547, 675], \
[668, 676], [672, 676], [673, 676], [674, 676], [675, 676], [669, 677], [672, \
677], [673, 677], [674, 677], [675, 677], [670, 678], [672, 678], [673, 678], \
[674, 678], [675, 678], [671, 679], [672, 679], [673, 679], [674, 679], [675, \
679], [552, 680], [553, 681], [554, 682], [555, 683], [676, 684], [680, 684], \
[681, 684], [682, 684], [683, 684], [677, 685], [680, 685], [681, 685], [682, \
685], [683, 685], [678, 686], [680, 686], [681, 686], [682, 686], [683, 686], \
[679, 687], [680, 687], [681, 687], [682, 687], [683, 687], [560, 688], [561, \
689], [562, 690], [563, 691], [684, 692], [688, 692], [689, 692], [690, 692], \
[691, 692], [685, 693], [688, 693], [689, 693], [690, 693], [691, 693], [686, \
694], [688, 694], [689, 694], [690, 694], [691, 694], [687, 695], [688, 695], \
[689, 695], [690, 695], [691, 695], [568, 696], [569, 697], [570, 698], [571, \
699], [692, 700], [696, 700], [697, 700], [698, 700], [699, 700], [693, 701], \
[696, 701], [697, 701], [698, 701], [699, 701], [694, 702], [696, 702], [697, \
702], [698, 702], [699, 702], [695, 703], [696, 703], [697, 703], [698, 703], \
[699, 703], [576, 704], [577, 705], [578, 706], [579, 707], [700, 708], [704, \
708], [705, 708], [706, 708], [707, 708], [701, 709], [704, 709], [705, 709], \
[706, 709], [707, 709], [702, 710], [704, 710], [705, 710], [706, 710], [707, \
710], [703, 711], [704, 711], [705, 711], [706, 711], [707, 711], [584, 712], \
[585, 713], [586, 714], [587, 715], [708, 716], [712, 716], [713, 716], [714, \
716], [715, 716], [709, 717], [712, 717], [713, 717], [714, 717], [715, 717], \
[710, 718], [712, 718], [713, 718], [714, 718], [715, 718], [711, 719], [712, \
719], [713, 719], [714, 719], [715, 719], [592, 720], [593, 721], [594, 722], \
[595, 723], [716, 724], [720, 724], [721, 724], [722, 724], [723, 724], [717, \
725], [720, 725], [721, 725], [722, 725], [723, 725], [718, 726], [720, 726], \
[721, 726], [722, 726], [723, 726], [719, 727], [720, 727], [721, 727], [722, \
727], [723, 727], [600, 728], [601, 729], [602, 730], [603, 731], [724, 732], \
[728, 732], [729, 732], [730, 732], [731, 732], [725, 733], [728, 733], [729, \
733], [730, 733], [731, 733], [726, 734], [728, 734], [729, 734], [730, 734], \
[731, 734], [727, 735], [728, 735], [729, 735], [730, 735], [731, 735], [608, \
736], [609, 737], [610, 738], [611, 739], [732, 740], [736, 740], [737, 740], \
[738, 740], [739, 740], [733, 741], [736, 741], [737, 741], [738, 741], [739, \
741], [734, 742], [736, 742], [737, 742], [738, 742], [739, 742], [735, 743], \
[736, 743], [737, 743], [738, 743], [739, 743], [616, 744], [617, 745], [618, \
746], [619, 747], [740, 748], [744, 748], [745, 748], [746, 748], [747, 748], \
[741, 749], [744, 749], [745, 749], [746, 749], [747, 749], [742, 750], [744, \
750], [745, 750], [746, 750], [747, 750], [743, 751], [744, 751], [745, 751], \
[746, 751], [747, 751], [624, 752], [625, 753], [626, 754], [627, 755], [748, \
756], [752, 756], [753, 756], [754, 756], [755, 756], [749, 757], [752, 757], \
[753, 757], [754, 757], [755, 757], [750, 758], [752, 758], [753, 758], [754, \
758], [755, 758], [751, 759], [752, 759], [753, 759], [754, 759], [755, 759], \
[632, 760], [633, 761], [634, 762], [635, 763], [756, 764], [760, 764], [761, \
764], [762, 764], [763, 764], [757, 765], [760, 765], [761, 765], [762, 765], \
[763, 765], [758, 766], [760, 766], [761, 766], [762, 766], [763, 766], [759, \
767], [760, 767], [761, 767], [762, 767], [763, 767], [640, 768], [641, 769], \
[642, 770], [643, 771], [768, 772], [769, 772], [770, 772], [771, 772], [768, \
773], [769, 773], [770, 773], [771, 773], [768, 774], [769, 774], [770, 774], \
[771, 774], [768, 775], [769, 775], [770, 775], [771, 775], [648, 776], [649, \
777], [650, 778], [651, 779], [772, 780], [776, 780], [777, 780], [778, 780], \
[779, 780], [773, 781], [776, 781], [777, 781], [778, 781], [779, 781], [774, \
782], [776, 782], [777, 782], [778, 782], [779, 782], [775, 783], [776, 783], \
[777, 783], [778, 783], [779, 783], [656, 784], [657, 785], [658, 786], [659, \
787], [780, 788], [784, 788], [785, 788], [786, 788], [787, 788], [781, 789], \
[784, 789], [785, 789], [786, 789], [787, 789], [782, 790], [784, 790], [785, \
790], [786, 790], [787, 790], [783, 791], [784, 791], [785, 791], [786, 791], \
[787, 791], [664, 792], [665, 793], [666, 794], [667, 795], [788, 796], [792, \
796], [793, 796], [794, 796], [795, 796], [789, 797], [792, 797], [793, 797], \
[794, 797], [795, 797], [790, 798], [792, 798], [793, 798], [794, 798], [795, \
798], [791, 799], [792, 799], [793, 799], [794, 799], [795, 799], [672, 800], \
[673, 801], [674, 802], [675, 803], [796, 804], [800, 804], [801, 804], [802, \
804], [803, 804], [797, 805], [800, 805], [801, 805], [802, 805], [803, 805], \
[798, 806], [800, 806], [801, 806], [802, 806], [803, 806], [799, 807], [800, \
807], [801, 807], [802, 807], [803, 807], [680, 808], [681, 809], [682, 810], \
[683, 811], [804, 812], [808, 812], [809, 812], [810, 812], [811, 812], [805, \
813], [808, 813], [809, 813], [810, 813], [811, 813], [806, 814], [808, 814], \
[809, 814], [810, 814], [811, 814], [807, 815], [808, 815], [809, 815], [810, \
815], [811, 815], [688, 816], [689, 817], [690, 818], [691, 819], [812, 820], \
[816, 820], [817, 820], [818, 820], [819, 820], [813, 821], [816, 821], [817, \
821], [818, 821], [819, 821], [814, 822], [816, 822], [817, 822], [818, 822], \
[819, 822], [815, 823], [816, 823], [817, 823], [818, 823], [819, 823], [696, \
824], [697, 825], [698, 826], [699, 827], [820, 828], [824, 828], [825, 828], \
[826, 828], [827, 828], [821, 829], [824, 829], [825, 829], [826, 829], [827, \
829], [822, 830], [824, 830], [825, 830], [826, 830], [827, 830], [823, 831], \
[824, 831], [825, 831], [826, 831], [827, 831], [704, 832], [705, 833], [706, \
834], [707, 835], [828, 836], [832, 836], [833, 836], [834, 836], [835, 836], \
[829, 837], [832, 837], [833, 837], [834, 837], [835, 837], [830, 838], [832, \
838], [833, 838], [834, 838], [835, 838], [831, 839], [832, 839], [833, 839], \
[834, 839], [835, 839], [712, 840], [713, 841], [714, 842], [715, 843], [836, \
844], [840, 844], [841, 844], [842, 844], [843, 844], [837, 845], [840, 845], \
[841, 845], [842, 845], [843, 845], [838, 846], [840, 846], [841, 846], [842, \
846], [843, 846], [839, 847], [840, 847], [841, 847], [842, 847], [843, 847], \
[720, 848], [721, 849], [722, 850], [723, 851], [844, 852], [848, 852], [849, \
852], [850, 852], [851, 852], [845, 853], [848, 853], [849, 853], [850, 853], \
[851, 853], [846, 854], [848, 854], [849, 854], [850, 854], [851, 854], [847, \
855], [848, 855], [849, 855], [850, 855], [851, 855], [728, 856], [729, 857], \
[730, 858], [731, 859], [852, 860], [856, 860], [857, 860], [858, 860], [859, \
860], [853, 861], [856, 861], [857, 861], [858, 861], [859, 861], [854, 862], \
[856, 862], [857, 862], [858, 862], [859, 862], [855, 863], [856, 863], [857, \
863], [858, 863], [859, 863], [736, 864], [737, 865], [738, 866], [739, 867], \
[860, 868], [864, 868], [865, 868], [866, 868], [867, 868], [861, 869], [864, \
869], [865, 869], [866, 869], [867, 869], [862, 870], [864, 870], [865, 870], \
[866, 870], [867, 870], [863, 871], [864, 871], [865, 871], [866, 871], [867, \
871], [744, 872], [745, 873], [746, 874], [747, 875], [868, 876], [872, 876], \
[873, 876], [874, 876], [875, 876], [869, 877], [872, 877], [873, 877], [874, \
877], [875, 877], [870, 878], [872, 878], [873, 878], [874, 878], [875, 878], \
[871, 879], [872, 879], [873, 879], [874, 879], [875, 879], [752, 880], [753, \
881], [754, 882], [755, 883], [876, 884], [880, 884], [881, 884], [882, 884], \
[883, 884], [877, 885], [880, 885], [881, 885], [882, 885], [883, 885], [878, \
886], [880, 886], [881, 886], [882, 886], [883, 886], [879, 887], [880, 887], \
[881, 887], [882, 887], [883, 887], [760, 888], [761, 889], [762, 890], [763, \
891], [884, 892], [888, 892], [889, 892], [890, 892], [891, 892], [885, 893], \
[888, 893], [889, 893], [890, 893], [891, 893], [886, 894], [888, 894], [889, \
894], [890, 894], [891, 894], [887, 895], [888, 895], [889, 895], [890, 895], \
[891, 895], [768, 896], [769, 897], [770, 898], [771, 899], [896, 900], [897, \
900], [898, 900], [899, 900], [896, 901], [897, 901], [898, 901], [899, 901], \
[896, 902], [897, 902], [898, 902], [899, 902], [896, 903], [897, 903], [898, \
903], [899, 903], [776, 904], [777, 905], [778, 906], [779, 907], [900, 908], \
[904, 908], [905, 908], [906, 908], [907, 908], [901, 909], [904, 909], [905, \
909], [906, 909], [907, 909], [902, 910], [904, 910], [905, 910], [906, 910], \
[907, 910], [903, 911], [904, 911], [905, 911], [906, 911], [907, 911], [784, \
912], [785, 913], [786, 914], [787, 915], [908, 916], [912, 916], [913, 916], \
[914, 916], [915, 916], [909, 917], [912, 917], [913, 917], [914, 917], [915, \
917], [910, 918], [912, 918], [913, 918], [914, 918], [915, 918], [911, 919], \
[912, 919], [913, 919], [914, 919], [915, 919], [792, 920], [793, 921], [794, \
922], [795, 923], [916, 924], [920, 924], [921, 924], [922, 924], [923, 924], \
[917, 925], [920, 925], [921, 925], [922, 925], [923, 925], [918, 926], [920, \
926], [921, 926], [922, 926], [923, 926], [919, 927], [920, 927], [921, 927], \
[922, 927], [923, 927], [800, 928], [801, 929], [802, 930], [803, 931], [924, \
932], [928, 932], [929, 932], [930, 932], [931, 932], [925, 933], [928, 933], \
[929, 933], [930, 933], [931, 933], [926, 934], [928, 934], [929, 934], [930, \
934], [931, 934], [927, 935], [928, 935], [929, 935], [930, 935], [931, 935], \
[808, 936], [809, 937], [810, 938], [811, 939], [932, 940], [936, 940], [937, \
940], [938, 940], [939, 940], [933, 941], [936, 941], [937, 941], [938, 941], \
[939, 941], [934, 942], [936, 942], [937, 942], [938, 942], [939, 942], [935, \
943], [936, 943], [937, 943], [938, 943], [939, 943], [816, 944], [817, 945], \
[818, 946], [819, 947], [940, 948], [944, 948], [945, 948], [946, 948], [947, \
948], [941, 949], [944, 949], [945, 949], [946, 949], [947, 949], [942, 950], \
[944, 950], [945, 950], [946, 950], [947, 950], [943, 951], [944, 951], [945, \
951], [946, 951], [947, 951], [824, 952], [825, 953], [826, 954], [827, 955], \
[948, 956], [952, 956], [953, 956], [954, 956], [955, 956], [949, 957], [952, \
957], [953, 957], [954, 957], [955, 957], [950, 958], [952, 958], [953, 958], \
[954, 958], [955, 958], [951, 959], [952, 959], [953, 959], [954, 959], [955, \
959], [832, 960], [833, 961], [834, 962], [835, 963], [956, 964], [960, 964], \
[961, 964], [962, 964], [963, 964], [957, 965], [960, 965], [961, 965], [962, \
965], [963, 965], [958, 966], [960, 966], [961, 966], [962, 966], [963, 966], \
[959, 967], [960, 967], [961, 967], [962, 967], [963, 967], [840, 968], [841, \
969], [842, 970], [843, 971], [964, 972], [968, 972], [969, 972], [970, 972], \
[971, 972], [965, 973], [968, 973], [969, 973], [970, 973], [971, 973], [966, \
974], [968, 974], [969, 974], [970, 974], [971, 974], [967, 975], [968, 975], \
[969, 975], [970, 975], [971, 975], [848, 976], [849, 977], [850, 978], [851, \
979], [972, 980], [976, 980], [977, 980], [978, 980], [979, 980], [973, 981], \
[976, 981], [977, 981], [978, 981], [979, 981], [974, 982], [976, 982], [977, \
982], [978, 982], [979, 982], [975, 983], [976, 983], [977, 983], [978, 983], \
[979, 983], [856, 984], [857, 985], [858, 986], [859, 987], [980, 988], [984, \
988], [985, 988], [986, 988], [987, 988], [981, 989], [984, 989], [985, 989], \
[986, 989], [987, 989], [982, 990], [984, 990], [985, 990], [986, 990], [987, \
990], [983, 991], [984, 991], [985, 991], [986, 991], [987, 991], [864, 992], \
[865, 993], [866, 994], [867, 995], [988, 996], [992, 996], [993, 996], [994, \
996], [995, 996], [989, 997], [992, 997], [993, 997], [994, 997], [995, 997], \
[990, 998], [992, 998], [993, 998], [994, 998], [995, 998], [991, 999], [992, \
999], [993, 999], [994, 999], [995, 999], [872, 1000], [873, 1001], [874, \
1002], [875, 1003], [996, 1004], [1000, 1004], [1001, 1004], [1002, 1004], \
[1003, 1004], [997, 1005], [1000, 1005], [1001, 1005], [1002, 1005], [1003, \
1005], [998, 1006], [1000, 1006], [1001, 1006], [1002, 1006], [1003, 1006], \
[999, 1007], [1000, 1007], [1001, 1007], [1002, 1007], [1003, 1007], [880, \
1008], [881, 1009], [882, 1010], [883, 1011], [1004, 1012], [1008, 1012], \
[1009, 1012], [1010, 1012], [1011, 1012], [1005, 1013], [1008, 1013], [1009, \
1013], [1010, 1013], [1011, 1013], [1006, 1014], [1008, 1014], [1009, 1014], \
[1010, 1014], [1011, 1014], [1007, 1015], [1008, 1015], [1009, 1015], [1010, \
1015], [1011, 1015], [888, 1016], [889, 1017], [890, 1018], [891, 1019], \
[1012, 1020], [1016, 1020], [1017, 1020], [1018, 1020], [1019, 1020], [1013, \
1021], [1016, 1021], [1017, 1021], [1018, 1021], [1019, 1021], [1014, 1022], \
[1016, 1022], [1017, 1022], [1018, 1022], [1019, 1022], [1015, 1023], [1016, \
1023], [1017, 1023], [1018, 1023], [1019, 1023], [896, 1024], [897, 1025], \
[898, 1026], [899, 1027], [1024, 1028], [1025, 1028], [1026, 1028], [1027, \
1028], [1024, 1029], [1025, 1029], [1026, 1029], [1027, 1029], [1024, 1030], \
[1025, 1030], [1026, 1030], [1027, 1030], [1024, 1031], [1025, 1031], [1026, \
1031], [1027, 1031], [904, 1032], [905, 1033], [906, 1034], [907, 1035], \
[1028, 1036], [1032, 1036], [1033, 1036], [1034, 1036], [1035, 1036], [1029, \
1037], [1032, 1037], [1033, 1037], [1034, 1037], [1035, 1037], [1030, 1038], \
[1032, 1038], [1033, 1038], [1034, 1038], [1035, 1038], [1031, 1039], [1032, \
1039], [1033, 1039], [1034, 1039], [1035, 1039], [912, 1040], [913, 1041], \
[914, 1042], [915, 1043], [1036, 1044], [1040, 1044], [1041, 1044], [1042, \
1044], [1043, 1044], [1037, 1045], [1040, 1045], [1041, 1045], [1042, 1045], \
[1043, 1045], [1038, 1046], [1040, 1046], [1041, 1046], [1042, 1046], [1043, \
1046], [1039, 1047], [1040, 1047], [1041, 1047], [1042, 1047], [1043, 1047], \
[920, 1048], [921, 1049], [922, 1050], [923, 1051], [1044, 1052], [1048, \
1052], [1049, 1052], [1050, 1052], [1051, 1052], [1045, 1053], [1048, 1053], \
[1049, 1053], [1050, 1053], [1051, 1053], [1046, 1054], [1048, 1054], [1049, \
1054], [1050, 1054], [1051, 1054], [1047, 1055], [1048, 1055], [1049, 1055], \
[1050, 1055], [1051, 1055], [928, 1056], [929, 1057], [930, 1058], [931, \
1059], [1052, 1060], [1056, 1060], [1057, 1060], [1058, 1060], [1059, 1060], \
[1053, 1061], [1056, 1061], [1057, 1061], [1058, 1061], [1059, 1061], [1054, \
1062], [1056, 1062], [1057, 1062], [1058, 1062], [1059, 1062], [1055, 1063], \
[1056, 1063], [1057, 1063], [1058, 1063], [1059, 1063], [936, 1064], [937, \
1065], [938, 1066], [939, 1067], [1060, 1068], [1064, 1068], [1065, 1068], \
[1066, 1068], [1067, 1068], [1061, 1069], [1064, 1069], [1065, 1069], [1066, \
1069], [1067, 1069], [1062, 1070], [1064, 1070], [1065, 1070], [1066, 1070], \
[1067, 1070], [1063, 1071], [1064, 1071], [1065, 1071], [1066, 1071], [1067, \
1071], [944, 1072], [945, 1073], [946, 1074], [947, 1075], [1068, 1076], \
[1072, 1076], [1073, 1076], [1074, 1076], [1075, 1076], [1069, 1077], [1072, \
1077], [1073, 1077], [1074, 1077], [1075, 1077], [1070, 1078], [1072, 1078], \
[1073, 1078], [1074, 1078], [1075, 1078], [1071, 1079], [1072, 1079], [1073, \
1079], [1074, 1079], [1075, 1079], [952, 1080], [953, 1081], [954, 1082], \
[955, 1083], [1076, 1084], [1080, 1084], [1081, 1084], [1082, 1084], [1083, \
1084], [1077, 1085], [1080, 1085], [1081, 1085], [1082, 1085], [1083, 1085], \
[1078, 1086], [1080, 1086], [1081, 1086], [1082, 1086], [1083, 1086], [1079, \
1087], [1080, 1087], [1081, 1087], [1082, 1087], [1083, 1087], [960, 1088], \
[961, 1089], [962, 1090], [963, 1091], [1084, 1092], [1088, 1092], [1089, \
1092], [1090, 1092], [1091, 1092], [1085, 1093], [1088, 1093], [1089, 1093], \
[1090, 1093], [1091, 1093], [1086, 1094], [1088, 1094], [1089, 1094], [1090, \
1094], [1091, 1094], [1087, 1095], [1088, 1095], [1089, 1095], [1090, 1095], \
[1091, 1095], [968, 1096], [969, 1097], [970, 1098], [971, 1099], [1092, \
1100], [1096, 1100], [1097, 1100], [1098, 1100], [1099, 1100], [1093, 1101], \
[1096, 1101], [1097, 1101], [1098, 1101], [1099, 1101], [1094, 1102], [1096, \
1102], [1097, 1102], [1098, 1102], [1099, 1102], [1095, 1103], [1096, 1103], \
[1097, 1103], [1098, 1103], [1099, 1103], [976, 1104], [977, 1105], [978, \
1106], [979, 1107], [1100, 1108], [1104, 1108], [1105, 1108], [1106, 1108], \
[1107, 1108], [1101, 1109], [1104, 1109], [1105, 1109], [1106, 1109], [1107, \
1109], [1102, 1110], [1104, 1110], [1105, 1110], [1106, 1110], [1107, 1110], \
[1103, 1111], [1104, 1111], [1105, 1111], [1106, 1111], [1107, 1111], [984, \
1112], [985, 1113], [986, 1114], [987, 1115], [1108, 1116], [1112, 1116], \
[1113, 1116], [1114, 1116], [1115, 1116], [1109, 1117], [1112, 1117], [1113, \
1117], [1114, 1117], [1115, 1117], [1110, 1118], [1112, 1118], [1113, 1118], \
[1114, 1118], [1115, 1118], [1111, 1119], [1112, 1119], [1113, 1119], [1114, \
1119], [1115, 1119], [992, 1120], [993, 1121], [994, 1122], [995, 1123], \
[1116, 1124], [1120, 1124], [1121, 1124], [1122, 1124], [1123, 1124], [1117, \
1125], [1120, 1125], [1121, 1125], [1122, 1125], [1123, 1125], [1118, 1126], \
[1120, 1126], [1121, 1126], [1122, 1126], [1123, 1126], [1119, 1127], [1120, \
1127], [1121, 1127], [1122, 1127], [1123, 1127], [1000, 1128], [1001, 1129], \
[1002, 1130], [1003, 1131], [1124, 1132], [1128, 1132], [1129, 1132], [1130, \
1132], [1131, 1132], [1125, 1133], [1128, 1133], [1129, 1133], [1130, 1133], \
[1131, 1133], [1126, 1134], [1128, 1134], [1129, 1134], [1130, 1134], [1131, \
1134], [1127, 1135], [1128, 1135], [1129, 1135], [1130, 1135], [1131, 1135], \
[1008, 1136], [1009, 1137], [1010, 1138], [1011, 1139], [1132, 1140], [1136, \
1140], [1137, 1140], [1138, 1140], [1139, 1140], [1133, 1141], [1136, 1141], \
[1137, 1141], [1138, 1141], [1139, 1141], [1134, 1142], [1136, 1142], [1137, \
1142], [1138, 1142], [1139, 1142], [1135, 1143], [1136, 1143], [1137, 1143], \
[1138, 1143], [1139, 1143], [1016, 1144], [1017, 1145], [1018, 1146], [1019, \
1147], [1140, 1148], [1144, 1148], [1145, 1148], [1146, 1148], [1147, 1148], \
[1141, 1149], [1144, 1149], [1145, 1149], [1146, 1149], [1147, 1149], [1142, \
1150], [1144, 1150], [1145, 1150], [1146, 1150], [1147, 1150], [1143, 1151], \
[1144, 1151], [1145, 1151], [1146, 1151], [1147, 1151], [1024, 1152], [1025, \
1153], [1026, 1154], [1027, 1155], [1152, 1156], [1153, 1156], [1154, 1156], \
[1155, 1156], [1152, 1157], [1153, 1157], [1154, 1157], [1155, 1157], [1152, \
1158], [1153, 1158], [1154, 1158], [1155, 1158], [1152, 1159], [1153, 1159], \
[1154, 1159], [1155, 1159], [1032, 1160], [1033, 1161], [1034, 1162], [1035, \
1163], [1156, 1164], [1160, 1164], [1161, 1164], [1162, 1164], [1163, 1164], \
[1157, 1165], [1160, 1165], [1161, 1165], [1162, 1165], [1163, 1165], [1158, \
1166], [1160, 1166], [1161, 1166], [1162, 1166], [1163, 1166], [1159, 1167], \
[1160, 1167], [1161, 1167], [1162, 1167], [1163, 1167], [1040, 1168], [1041, \
1169], [1042, 1170], [1043, 1171], [1164, 1172], [1168, 1172], [1169, 1172], \
[1170, 1172], [1171, 1172], [1165, 1173], [1168, 1173], [1169, 1173], [1170, \
1173], [1171, 1173], [1166, 1174], [1168, 1174], [1169, 1174], [1170, 1174], \
[1171, 1174], [1167, 1175], [1168, 1175], [1169, 1175], [1170, 1175], [1171, \
1175], [1048, 1176], [1049, 1177], [1050, 1178], [1051, 1179], [1172, 1180], \
[1176, 1180], [1177, 1180], [1178, 1180], [1179, 1180], [1173, 1181], [1176, \
1181], [1177, 1181], [1178, 1181], [1179, 1181], [1174, 1182], [1176, 1182], \
[1177, 1182], [1178, 1182], [1179, 1182], [1175, 1183], [1176, 1183], [1177, \
1183], [1178, 1183], [1179, 1183], [1056, 1184], [1057, 1185], [1058, 1186], \
[1059, 1187], [1180, 1188], [1184, 1188], [1185, 1188], [1186, 1188], [1187, \
1188], [1181, 1189], [1184, 1189], [1185, 1189], [1186, 1189], [1187, 1189], \
[1182, 1190], [1184, 1190], [1185, 1190], [1186, 1190], [1187, 1190], [1183, \
1191], [1184, 1191], [1185, 1191], [1186, 1191], [1187, 1191], [1064, 1192], \
[1065, 1193], [1066, 1194], [1067, 1195], [1188, 1196], [1192, 1196], [1193, \
1196], [1194, 1196], [1195, 1196], [1189, 1197], [1192, 1197], [1193, 1197], \
[1194, 1197], [1195, 1197], [1190, 1198], [1192, 1198], [1193, 1198], [1194, \
1198], [1195, 1198], [1191, 1199], [1192, 1199], [1193, 1199], [1194, 1199], \
[1195, 1199], [1072, 1200], [1073, 1201], [1074, 1202], [1075, 1203], [1196, \
1204], [1200, 1204], [1201, 1204], [1202, 1204], [1203, 1204], [1197, 1205], \
[1200, 1205], [1201, 1205], [1202, 1205], [1203, 1205], [1198, 1206], [1200, \
1206], [1201, 1206], [1202, 1206], [1203, 1206], [1199, 1207], [1200, 1207], \
[1201, 1207], [1202, 1207], [1203, 1207], [1080, 1208], [1081, 1209], [1082, \
1210], [1083, 1211], [1204, 1212], [1208, 1212], [1209, 1212], [1210, 1212], \
[1211, 1212], [1205, 1213], [1208, 1213], [1209, 1213], [1210, 1213], [1211, \
1213], [1206, 1214], [1208, 1214], [1209, 1214], [1210, 1214], [1211, 1214], \
[1207, 1215], [1208, 1215], [1209, 1215], [1210, 1215], [1211, 1215], [1088, \
1216], [1089, 1217], [1090, 1218], [1091, 1219], [1212, 1220], [1216, 1220], \
[1217, 1220], [1218, 1220], [1219, 1220], [1213, 1221], [1216, 1221], [1217, \
1221], [1218, 1221], [1219, 1221], [1214, 1222], [1216, 1222], [1217, 1222], \
[1218, 1222], [1219, 1222], [1215, 1223], [1216, 1223], [1217, 1223], [1218, \
1223], [1219, 1223], [1096, 1224], [1097, 1225], [1098, 1226], [1099, 1227], \
[1220, 1228], [1224, 1228], [1225, 1228], [1226, 1228], [1227, 1228], [1221, \
1229], [1224, 1229], [1225, 1229], [1226, 1229], [1227, 1229], [1222, 1230], \
[1224, 1230], [1225, 1230], [1226, 1230], [1227, 1230], [1223, 1231], [1224, \
1231], [1225, 1231], [1226, 1231], [1227, 1231], [1104, 1232], [1105, 1233], \
[1106, 1234], [1107, 1235], [1228, 1236], [1232, 1236], [1233, 1236], [1234, \
1236], [1235, 1236], [1229, 1237], [1232, 1237], [1233, 1237], [1234, 1237], \
[1235, 1237], [1230, 1238], [1232, 1238], [1233, 1238], [1234, 1238], [1235, \
1238], [1231, 1239], [1232, 1239], [1233, 1239], [1234, 1239], [1235, 1239], \
[1112, 1240], [1113, 1241], [1114, 1242], [1115, 1243], [1236, 1244], [1240, \
1244], [1241, 1244], [1242, 1244], [1243, 1244], [1237, 1245], [1240, 1245], \
[1241, 1245], [1242, 1245], [1243, 1245], [1238, 1246], [1240, 1246], [1241, \
1246], [1242, 1246], [1243, 1246], [1239, 1247], [1240, 1247], [1241, 1247], \
[1242, 1247], [1243, 1247], [1120, 1248], [1121, 1249], [1122, 1250], [1123, \
1251], [1244, 1252], [1248, 1252], [1249, 1252], [1250, 1252], [1251, 1252], \
[1245, 1253], [1248, 1253], [1249, 1253], [1250, 1253], [1251, 1253], [1246, \
1254], [1248, 1254], [1249, 1254], [1250, 1254], [1251, 1254], [1247, 1255], \
[1248, 1255], [1249, 1255], [1250, 1255], [1251, 1255], [1128, 1256], [1129, \
1257], [1130, 1258], [1131, 1259], [1252, 1260], [1256, 1260], [1257, 1260], \
[1258, 1260], [1259, 1260], [1253, 1261], [1256, 1261], [1257, 1261], [1258, \
1261], [1259, 1261], [1254, 1262], [1256, 1262], [1257, 1262], [1258, 1262], \
[1259, 1262], [1255, 1263], [1256, 1263], [1257, 1263], [1258, 1263], [1259, \
1263], [1136, 1264], [1137, 1265], [1138, 1266], [1139, 1267], [1260, 1268], \
[1264, 1268], [1265, 1268], [1266, 1268], [1267, 1268], [1261, 1269], [1264, \
1269], [1265, 1269], [1266, 1269], [1267, 1269], [1262, 1270], [1264, 1270], \
[1265, 1270], [1266, 1270], [1267, 1270], [1263, 1271], [1264, 1271], [1265, \
1271], [1266, 1271], [1267, 1271], [1144, 1272], [1145, 1273], [1146, 1274], \
[1147, 1275], [1268, 1276], [1272, 1276], [1273, 1276], [1274, 1276], [1275, \
1276], [1269, 1277], [1272, 1277], [1273, 1277], [1274, 1277], [1275, 1277], \
[1270, 1278], [1272, 1278], [1273, 1278], [1274, 1278], [1275, 1278], [1271, \
1279], [1272, 1279], [1273, 1279], [1274, 1279], [1275, 1279], [1152, 1280], \
[1153, 1281], [1154, 1282], [1155, 1283], [1280, 1284], [1281, 1284], [1282, \
1284], [1283, 1284], [1280, 1285], [1281, 1285], [1282, 1285], [1283, 1285], \
[1280, 1286], [1281, 1286], [1282, 1286], [1283, 1286], [1280, 1287], [1281, \
1287], [1282, 1287], [1283, 1287], [1160, 1288], [1161, 1289], [1162, 1290], \
[1163, 1291], [1284, 1292], [1288, 1292], [1289, 1292], [1290, 1292], [1291, \
1292], [1285, 1293], [1288, 1293], [1289, 1293], [1290, 1293], [1291, 1293], \
[1286, 1294], [1288, 1294], [1289, 1294], [1290, 1294], [1291, 1294], [1287, \
1295], [1288, 1295], [1289, 1295], [1290, 1295], [1291, 1295], [1168, 1296], \
[1169, 1297], [1170, 1298], [1171, 1299], [1292, 1300], [1296, 1300], [1297, \
1300], [1298, 1300], [1299, 1300], [1293, 1301], [1296, 1301], [1297, 1301], \
[1298, 1301], [1299, 1301], [1294, 1302], [1296, 1302], [1297, 1302], [1298, \
1302], [1299, 1302], [1295, 1303], [1296, 1303], [1297, 1303], [1298, 1303], \
[1299, 1303], [1176, 1304], [1177, 1305], [1178, 1306], [1179, 1307], [1300, \
1308], [1304, 1308], [1305, 1308], [1306, 1308], [1307, 1308], [1301, 1309], \
[1304, 1309], [1305, 1309], [1306, 1309], [1307, 1309], [1302, 1310], [1304, \
1310], [1305, 1310], [1306, 1310], [1307, 1310], [1303, 1311], [1304, 1311], \
[1305, 1311], [1306, 1311], [1307, 1311], [1184, 1312], [1185, 1313], [1186, \
1314], [1187, 1315], [1308, 1316], [1312, 1316], [1313, 1316], [1314, 1316], \
[1315, 1316], [1309, 1317], [1312, 1317], [1313, 1317], [1314, 1317], [1315, \
1317], [1310, 1318], [1312, 1318], [1313, 1318], [1314, 1318], [1315, 1318], \
[1311, 1319], [1312, 1319], [1313, 1319], [1314, 1319], [1315, 1319], [1192, \
1320], [1193, 1321], [1194, 1322], [1195, 1323], [1316, 1324], [1320, 1324], \
[1321, 1324], [1322, 1324], [1323, 1324], [1317, 1325], [1320, 1325], [1321, \
1325], [1322, 1325], [1323, 1325], [1318, 1326], [1320, 1326], [1321, 1326], \
[1322, 1326], [1323, 1326], [1319, 1327], [1320, 1327], [1321, 1327], [1322, \
1327], [1323, 1327], [1200, 1328], [1201, 1329], [1202, 1330], [1203, 1331], \
[1324, 1332], [1328, 1332], [1329, 1332], [1330, 1332], [1331, 1332], [1325, \
1333], [1328, 1333], [1329, 1333], [1330, 1333], [1331, 1333], [1326, 1334], \
[1328, 1334], [1329, 1334], [1330, 1334], [1331, 1334], [1327, 1335], [1328, \
1335], [1329, 1335], [1330, 1335], [1331, 1335], [1208, 1336], [1209, 1337], \
[1210, 1338], [1211, 1339], [1332, 1340], [1336, 1340], [1337, 1340], [1338, \
1340], [1339, 1340], [1333, 1341], [1336, 1341], [1337, 1341], [1338, 1341], \
[1339, 1341], [1334, 1342], [1336, 1342], [1337, 1342], [1338, 1342], [1339, \
1342], [1335, 1343], [1336, 1343], [1337, 1343], [1338, 1343], [1339, 1343], \
[1216, 1344], [1217, 1345], [1218, 1346], [1219, 1347], [1340, 1348], [1344, \
1348], [1345, 1348], [1346, 1348], [1347, 1348], [1341, 1349], [1344, 1349], \
[1345, 1349], [1346, 1349], [1347, 1349], [1342, 1350], [1344, 1350], [1345, \
1350], [1346, 1350], [1347, 1350], [1343, 1351], [1344, 1351], [1345, 1351], \
[1346, 1351], [1347, 1351], [1224, 1352], [1225, 1353], [1226, 1354], [1227, \
1355], [1348, 1356], [1352, 1356], [1353, 1356], [1354, 1356], [1355, 1356], \
[1349, 1357], [1352, 1357], [1353, 1357], [1354, 1357], [1355, 1357], [1350, \
1358], [1352, 1358], [1353, 1358], [1354, 1358], [1355, 1358], [1351, 1359], \
[1352, 1359], [1353, 1359], [1354, 1359], [1355, 1359], [1232, 1360], [1233, \
1361], [1234, 1362], [1235, 1363], [1356, 1364], [1360, 1364], [1361, 1364], \
[1362, 1364], [1363, 1364], [1357, 1365], [1360, 1365], [1361, 1365], [1362, \
1365], [1363, 1365], [1358, 1366], [1360, 1366], [1361, 1366], [1362, 1366], \
[1363, 1366], [1359, 1367], [1360, 1367], [1361, 1367], [1362, 1367], [1363, \
1367], [1240, 1368], [1241, 1369], [1242, 1370], [1243, 1371], [1364, 1372], \
[1368, 1372], [1369, 1372], [1370, 1372], [1371, 1372], [1365, 1373], [1368, \
1373], [1369, 1373], [1370, 1373], [1371, 1373], [1366, 1374], [1368, 1374], \
[1369, 1374], [1370, 1374], [1371, 1374], [1367, 1375], [1368, 1375], [1369, \
1375], [1370, 1375], [1371, 1375], [1248, 1376], [1249, 1377], [1250, 1378], \
[1251, 1379], [1372, 1380], [1376, 1380], [1377, 1380], [1378, 1380], [1379, \
1380], [1373, 1381], [1376, 1381], [1377, 1381], [1378, 1381], [1379, 1381], \
[1374, 1382], [1376, 1382], [1377, 1382], [1378, 1382], [1379, 1382], [1375, \
1383], [1376, 1383], [1377, 1383], [1378, 1383], [1379, 1383], [1256, 1384], \
[1257, 1385], [1258, 1386], [1259, 1387], [1380, 1388], [1384, 1388], [1385, \
1388], [1386, 1388], [1387, 1388], [1381, 1389], [1384, 1389], [1385, 1389], \
[1386, 1389], [1387, 1389], [1382, 1390], [1384, 1390], [1385, 1390], [1386, \
1390], [1387, 1390], [1383, 1391], [1384, 1391], [1385, 1391], [1386, 1391], \
[1387, 1391], [1264, 1392], [1265, 1393], [1266, 1394], [1267, 1395], [1388, \
1396], [1392, 1396], [1393, 1396], [1394, 1396], [1395, 1396], [1389, 1397], \
[1392, 1397], [1393, 1397], [1394, 1397], [1395, 1397], [1390, 1398], [1392, \
1398], [1393, 1398], [1394, 1398], [1395, 1398], [1391, 1399], [1392, 1399], \
[1393, 1399], [1394, 1399], [1395, 1399], [1272, 1400], [1273, 1401], [1274, \
1402], [1275, 1403], [1396, 1404], [1400, 1404], [1401, 1404], [1402, 1404], \
[1403, 1404], [1397, 1405], [1400, 1405], [1401, 1405], [1402, 1405], [1403, \
1405], [1398, 1406], [1400, 1406], [1401, 1406], [1402, 1406], [1403, 1406], \
[1399, 1407], [1400, 1407], [1401, 1407], [1402, 1407], [1403, 1407], [1280, \
1408], [1281, 1409], [1282, 1410], [1283, 1411], [1408, 1412], [1409, 1412], \
[1410, 1412], [1411, 1412], [1408, 1413], [1409, 1413], [1410, 1413], [1411, \
1413], [1408, 1414], [1409, 1414], [1410, 1414], [1411, 1414], [1408, 1415], \
[1409, 1415], [1410, 1415], [1411, 1415], [1288, 1416], [1289, 1417], [1290, \
1418], [1291, 1419], [1412, 1420], [1416, 1420], [1417, 1420], [1418, 1420], \
[1419, 1420], [1413, 1421], [1416, 1421], [1417, 1421], [1418, 1421], [1419, \
1421], [1414, 1422], [1416, 1422], [1417, 1422], [1418, 1422], [1419, 1422], \
[1415, 1423], [1416, 1423], [1417, 1423], [1418, 1423], [1419, 1423], [1296, \
1424], [1297, 1425], [1298, 1426], [1299, 1427], [1420, 1428], [1424, 1428], \
[1425, 1428], [1426, 1428], [1427, 1428], [1421, 1429], [1424, 1429], [1425, \
1429], [1426, 1429], [1427, 1429], [1422, 1430], [1424, 1430], [1425, 1430], \
[1426, 1430], [1427, 1430], [1423, 1431], [1424, 1431], [1425, 1431], [1426, \
1431], [1427, 1431], [1304, 1432], [1305, 1433], [1306, 1434], [1307, 1435], \
[1428, 1436], [1432, 1436], [1433, 1436], [1434, 1436], [1435, 1436], [1429, \
1437], [1432, 1437], [1433, 1437], [1434, 1437], [1435, 1437], [1430, 1438], \
[1432, 1438], [1433, 1438], [1434, 1438], [1435, 1438], [1431, 1439], [1432, \
1439], [1433, 1439], [1434, 1439], [1435, 1439], [1312, 1440], [1313, 1441], \
[1314, 1442], [1315, 1443], [1436, 1444], [1440, 1444], [1441, 1444], [1442, \
1444], [1443, 1444], [1437, 1445], [1440, 1445], [1441, 1445], [1442, 1445], \
[1443, 1445], [1438, 1446], [1440, 1446], [1441, 1446], [1442, 1446], [1443, \
1446], [1439, 1447], [1440, 1447], [1441, 1447], [1442, 1447], [1443, 1447], \
[1320, 1448], [1321, 1449], [1322, 1450], [1323, 1451], [1444, 1452], [1448, \
1452], [1449, 1452], [1450, 1452], [1451, 1452], [1445, 1453], [1448, 1453], \
[1449, 1453], [1450, 1453], [1451, 1453], [1446, 1454], [1448, 1454], [1449, \
1454], [1450, 1454], [1451, 1454], [1447, 1455], [1448, 1455], [1449, 1455], \
[1450, 1455], [1451, 1455], [1328, 1456], [1329, 1457], [1330, 1458], [1331, \
1459], [1452, 1460], [1456, 1460], [1457, 1460], [1458, 1460], [1459, 1460], \
[1453, 1461], [1456, 1461], [1457, 1461], [1458, 1461], [1459, 1461], [1454, \
1462], [1456, 1462], [1457, 1462], [1458, 1462], [1459, 1462], [1455, 1463], \
[1456, 1463], [1457, 1463], [1458, 1463], [1459, 1463], [1336, 1464], [1337, \
1465], [1338, 1466], [1339, 1467], [1460, 1468], [1464, 1468], [1465, 1468], \
[1466, 1468], [1467, 1468], [1461, 1469], [1464, 1469], [1465, 1469], [1466, \
1469], [1467, 1469], [1462, 1470], [1464, 1470], [1465, 1470], [1466, 1470], \
[1467, 1470], [1463, 1471], [1464, 1471], [1465, 1471], [1466, 1471], [1467, \
1471], [1344, 1472], [1345, 1473], [1346, 1474], [1347, 1475], [1468, 1476], \
[1472, 1476], [1473, 1476], [1474, 1476], [1475, 1476], [1469, 1477], [1472, \
1477], [1473, 1477], [1474, 1477], [1475, 1477], [1470, 1478], [1472, 1478], \
[1473, 1478], [1474, 1478], [1475, 1478], [1471, 1479], [1472, 1479], [1473, \
1479], [1474, 1479], [1475, 1479], [1352, 1480], [1353, 1481], [1354, 1482], \
[1355, 1483], [1476, 1484], [1480, 1484], [1481, 1484], [1482, 1484], [1483, \
1484], [1477, 1485], [1480, 1485], [1481, 1485], [1482, 1485], [1483, 1485], \
[1478, 1486], [1480, 1486], [1481, 1486], [1482, 1486], [1483, 1486], [1479, \
1487], [1480, 1487], [1481, 1487], [1482, 1487], [1483, 1487], [1360, 1488], \
[1361, 1489], [1362, 1490], [1363, 1491], [1484, 1492], [1488, 1492], [1489, \
1492], [1490, 1492], [1491, 1492], [1485, 1493], [1488, 1493], [1489, 1493], \
[1490, 1493], [1491, 1493], [1486, 1494], [1488, 1494], [1489, 1494], [1490, \
1494], [1491, 1494], [1487, 1495], [1488, 1495], [1489, 1495], [1490, 1495], \
[1491, 1495], [1368, 1496], [1369, 1497], [1370, 1498], [1371, 1499], [1492, \
1500], [1496, 1500], [1497, 1500], [1498, 1500], [1499, 1500], [1493, 1501], \
[1496, 1501], [1497, 1501], [1498, 1501], [1499, 1501], [1494, 1502], [1496, \
1502], [1497, 1502], [1498, 1502], [1499, 1502], [1495, 1503], [1496, 1503], \
[1497, 1503], [1498, 1503], [1499, 1503], [1376, 1504], [1377, 1505], [1378, \
1506], [1379, 1507], [1500, 1508], [1504, 1508], [1505, 1508], [1506, 1508], \
[1507, 1508], [1501, 1509], [1504, 1509], [1505, 1509], [1506, 1509], [1507, \
1509], [1502, 1510], [1504, 1510], [1505, 1510], [1506, 1510], [1507, 1510], \
[1503, 1511], [1504, 1511], [1505, 1511], [1506, 1511], [1507, 1511], [1384, \
1512], [1385, 1513], [1386, 1514], [1387, 1515], [1508, 1516], [1512, 1516], \
[1513, 1516], [1514, 1516], [1515, 1516], [1509, 1517], [1512, 1517], [1513, \
1517], [1514, 1517], [1515, 1517], [1510, 1518], [1512, 1518], [1513, 1518], \
[1514, 1518], [1515, 1518], [1511, 1519], [1512, 1519], [1513, 1519], [1514, \
1519], [1515, 1519], [1392, 1520], [1393, 1521], [1394, 1522], [1395, 1523], \
[1516, 1524], [1520, 1524], [1521, 1524], [1522, 1524], [1523, 1524], [1517, \
1525], [1520, 1525], [1521, 1525], [1522, 1525], [1523, 1525], [1518, 1526], \
[1520, 1526], [1521, 1526], [1522, 1526], [1523, 1526], [1519, 1527], [1520, \
1527], [1521, 1527], [1522, 1527], [1523, 1527], [1400, 1528], [1401, 1529], \
[1402, 1530], [1403, 1531], [1524, 1532], [1528, 1532], [1529, 1532], [1530, \
1532], [1531, 1532], [1525, 1533], [1528, 1533], [1529, 1533], [1530, 1533], \
[1531, 1533], [1526, 1534], [1528, 1534], [1529, 1534], [1530, 1534], [1531, \
1534], [1527, 1535], [1528, 1535], [1529, 1535], [1530, 1535], [1531, 1535], \
[1408, 1536], [1409, 1537], [1410, 1538], [1411, 1539], [1536, 1540], [1537, \
1540], [1538, 1540], [1539, 1540], [1536, 1541], [1537, 1541], [1538, 1541], \
[1539, 1541], [1536, 1542], [1537, 1542], [1538, 1542], [1539, 1542], [1536, \
1543], [1537, 1543], [1538, 1543], [1539, 1543], [1416, 1544], [1417, 1545], \
[1418, 1546], [1419, 1547], [1540, 1548], [1544, 1548], [1545, 1548], [1546, \
1548], [1547, 1548], [1541, 1549], [1544, 1549], [1545, 1549], [1546, 1549], \
[1547, 1549], [1542, 1550], [1544, 1550], [1545, 1550], [1546, 1550], [1547, \
1550], [1543, 1551], [1544, 1551], [1545, 1551], [1546, 1551], [1547, 1551], \
[1424, 1552], [1425, 1553], [1426, 1554], [1427, 1555], [1548, 1556], [1552, \
1556], [1553, 1556], [1554, 1556], [1555, 1556], [1549, 1557], [1552, 1557], \
[1553, 1557], [1554, 1557], [1555, 1557], [1550, 1558], [1552, 1558], [1553, \
1558], [1554, 1558], [1555, 1558], [1551, 1559], [1552, 1559], [1553, 1559], \
[1554, 1559], [1555, 1559], [1432, 1560], [1433, 1561], [1434, 1562], [1435, \
1563], [1556, 1564], [1560, 1564], [1561, 1564], [1562, 1564], [1563, 1564], \
[1557, 1565], [1560, 1565], [1561, 1565], [1562, 1565], [1563, 1565], [1558, \
1566], [1560, 1566], [1561, 1566], [1562, 1566], [1563, 1566], [1559, 1567], \
[1560, 1567], [1561, 1567], [1562, 1567], [1563, 1567], [1440, 1568], [1441, \
1569], [1442, 1570], [1443, 1571], [1564, 1572], [1568, 1572], [1569, 1572], \
[1570, 1572], [1571, 1572], [1565, 1573], [1568, 1573], [1569, 1573], [1570, \
1573], [1571, 1573], [1566, 1574], [1568, 1574], [1569, 1574], [1570, 1574], \
[1571, 1574], [1567, 1575], [1568, 1575], [1569, 1575], [1570, 1575], [1571, \
1575], [1448, 1576], [1449, 1577], [1450, 1578], [1451, 1579], [1572, 1580], \
[1576, 1580], [1577, 1580], [1578, 1580], [1579, 1580], [1573, 1581], [1576, \
1581], [1577, 1581], [1578, 1581], [1579, 1581], [1574, 1582], [1576, 1582], \
[1577, 1582], [1578, 1582], [1579, 1582], [1575, 1583], [1576, 1583], [1577, \
1583], [1578, 1583], [1579, 1583], [1456, 1584], [1457, 1585], [1458, 1586], \
[1459, 1587], [1580, 1588], [1584, 1588], [1585, 1588], [1586, 1588], [1587, \
1588], [1581, 1589], [1584, 1589], [1585, 1589], [1586, 1589], [1587, 1589], \
[1582, 1590], [1584, 1590], [1585, 1590], [1586, 1590], [1587, 1590], [1583, \
1591], [1584, 1591], [1585, 1591], [1586, 1591], [1587, 1591], [1464, 1592], \
[1465, 1593], [1466, 1594], [1467, 1595], [1588, 1596], [1592, 1596], [1593, \
1596], [1594, 1596], [1595, 1596], [1589, 1597], [1592, 1597], [1593, 1597], \
[1594, 1597], [1595, 1597], [1590, 1598], [1592, 1598], [1593, 1598], [1594, \
1598], [1595, 1598], [1591, 1599], [1592, 1599], [1593, 1599], [1594, 1599], \
[1595, 1599], [1472, 1600], [1473, 1601], [1474, 1602], [1475, 1603], [1596, \
1604], [1600, 1604], [1601, 1604], [1602, 1604], [1603, 1604], [1597, 1605], \
[1600, 1605], [1601, 1605], [1602, 1605], [1603, 1605], [1598, 1606], [1600, \
1606], [1601, 1606], [1602, 1606], [1603, 1606], [1599, 1607], [1600, 1607], \
[1601, 1607], [1602, 1607], [1603, 1607], [1480, 1608], [1481, 1609], [1482, \
1610], [1483, 1611], [1604, 1612], [1608, 1612], [1609, 1612], [1610, 1612], \
[1611, 1612], [1605, 1613], [1608, 1613], [1609, 1613], [1610, 1613], [1611, \
1613], [1606, 1614], [1608, 1614], [1609, 1614], [1610, 1614], [1611, 1614], \
[1607, 1615], [1608, 1615], [1609, 1615], [1610, 1615], [1611, 1615], [1488, \
1616], [1489, 1617], [1490, 1618], [1491, 1619], [1612, 1620], [1616, 1620], \
[1617, 1620], [1618, 1620], [1619, 1620], [1613, 1621], [1616, 1621], [1617, \
1621], [1618, 1621], [1619, 1621], [1614, 1622], [1616, 1622], [1617, 1622], \
[1618, 1622], [1619, 1622], [1615, 1623], [1616, 1623], [1617, 1623], [1618, \
1623], [1619, 1623], [1496, 1624], [1497, 1625], [1498, 1626], [1499, 1627], \
[1620, 1628], [1624, 1628], [1625, 1628], [1626, 1628], [1627, 1628], [1621, \
1629], [1624, 1629], [1625, 1629], [1626, 1629], [1627, 1629], [1622, 1630], \
[1624, 1630], [1625, 1630], [1626, 1630], [1627, 1630], [1623, 1631], [1624, \
1631], [1625, 1631], [1626, 1631], [1627, 1631], [1504, 1632], [1505, 1633], \
[1506, 1634], [1507, 1635], [1628, 1636], [1632, 1636], [1633, 1636], [1634, \
1636], [1635, 1636], [1629, 1637], [1632, 1637], [1633, 1637], [1634, 1637], \
[1635, 1637], [1630, 1638], [1632, 1638], [1633, 1638], [1634, 1638], [1635, \
1638], [1631, 1639], [1632, 1639], [1633, 1639], [1634, 1639], [1635, 1639], \
[1512, 1640], [1513, 1641], [1514, 1642], [1515, 1643], [1636, 1644], [1640, \
1644], [1641, 1644], [1642, 1644], [1643, 1644], [1637, 1645], [1640, 1645], \
[1641, 1645], [1642, 1645], [1643, 1645], [1638, 1646], [1640, 1646], [1641, \
1646], [1642, 1646], [1643, 1646], [1639, 1647], [1640, 1647], [1641, 1647], \
[1642, 1647], [1643, 1647], [1520, 1648], [1521, 1649], [1522, 1650], [1523, \
1651], [1644, 1652], [1648, 1652], [1649, 1652], [1650, 1652], [1651, 1652], \
[1645, 1653], [1648, 1653], [1649, 1653], [1650, 1653], [1651, 1653], [1646, \
1654], [1648, 1654], [1649, 1654], [1650, 1654], [1651, 1654], [1647, 1655], \
[1648, 1655], [1649, 1655], [1650, 1655], [1651, 1655], [1528, 1656], [1529, \
1657], [1530, 1658], [1531, 1659], [1652, 1660], [1656, 1660], [1657, 1660], \
[1658, 1660], [1659, 1660], [1653, 1661], [1656, 1661], [1657, 1661], [1658, \
1661], [1659, 1661], [1654, 1662], [1656, 1662], [1657, 1662], [1658, 1662], \
[1659, 1662], [1655, 1663], [1656, 1663], [1657, 1663], [1658, 1663], [1659, \
1663], [1536, 1664], [1537, 1665], [1538, 1666], [1539, 1667], [1664, 1668], \
[1665, 1668], [1666, 1668], [1667, 1668], [1664, 1669], [1665, 1669], [1666, \
1669], [1667, 1669], [1664, 1670], [1665, 1670], [1666, 1670], [1667, 1670], \
[1664, 1671], [1665, 1671], [1666, 1671], [1667, 1671], [1544, 1672], [1545, \
1673], [1546, 1674], [1547, 1675], [1668, 1676], [1672, 1676], [1673, 1676], \
[1674, 1676], [1675, 1676], [1669, 1677], [1672, 1677], [1673, 1677], [1674, \
1677], [1675, 1677], [1670, 1678], [1672, 1678], [1673, 1678], [1674, 1678], \
[1675, 1678], [1671, 1679], [1672, 1679], [1673, 1679], [1674, 1679], [1675, \
1679], [1552, 1680], [1553, 1681], [1554, 1682], [1555, 1683], [1676, 1684], \
[1680, 1684], [1681, 1684], [1682, 1684], [1683, 1684], [1677, 1685], [1680, \
1685], [1681, 1685], [1682, 1685], [1683, 1685], [1678, 1686], [1680, 1686], \
[1681, 1686], [1682, 1686], [1683, 1686], [1679, 1687], [1680, 1687], [1681, \
1687], [1682, 1687], [1683, 1687], [1560, 1688], [1561, 1689], [1562, 1690], \
[1563, 1691], [1684, 1692], [1688, 1692], [1689, 1692], [1690, 1692], [1691, \
1692], [1685, 1693], [1688, 1693], [1689, 1693], [1690, 1693], [1691, 1693], \
[1686, 1694], [1688, 1694], [1689, 1694], [1690, 1694], [1691, 1694], [1687, \
1695], [1688, 1695], [1689, 1695], [1690, 1695], [1691, 1695], [1568, 1696], \
[1569, 1697], [1570, 1698], [1571, 1699], [1692, 1700], [1696, 1700], [1697, \
1700], [1698, 1700], [1699, 1700], [1693, 1701], [1696, 1701], [1697, 1701], \
[1698, 1701], [1699, 1701], [1694, 1702], [1696, 1702], [1697, 1702], [1698, \
1702], [1699, 1702], [1695, 1703], [1696, 1703], [1697, 1703], [1698, 1703], \
[1699, 1703], [1576, 1704], [1577, 1705], [1578, 1706], [1579, 1707], [1700, \
1708], [1704, 1708], [1705, 1708], [1706, 1708], [1707, 1708], [1701, 1709], \
[1704, 1709], [1705, 1709], [1706, 1709], [1707, 1709], [1702, 1710], [1704, \
1710], [1705, 1710], [1706, 1710], [1707, 1710], [1703, 1711], [1704, 1711], \
[1705, 1711], [1706, 1711], [1707, 1711], [1584, 1712], [1585, 1713], [1586, \
1714], [1587, 1715], [1708, 1716], [1712, 1716], [1713, 1716], [1714, 1716], \
[1715, 1716], [1709, 1717], [1712, 1717], [1713, 1717], [1714, 1717], [1715, \
1717], [1710, 1718], [1712, 1718], [1713, 1718], [1714, 1718], [1715, 1718], \
[1711, 1719], [1712, 1719], [1713, 1719], [1714, 1719], [1715, 1719], [1592, \
1720], [1593, 1721], [1594, 1722], [1716, 1724], [1720, 1724], [1721, 1724], \
[1722, 1724], [1717, 1725], [1720, 1725], [1721, 1725], [1722, 1725], [1718, \
1726], [1720, 1726], [1721, 1726], [1722, 1726], [1719, 1727], [1720, 1727], \
[1721, 1727], [1722, 1727], [1600, 1728], [1601, 1729], [1602, 1730], [1603, \
1731], [1724, 1732], [1728, 1732], [1729, 1732], [1730, 1732], [1731, 1732], \
[1725, 1733], [1728, 1733], [1729, 1733], [1730, 1733], [1731, 1733], [1726, \
1734], [1728, 1734], [1729, 1734], [1730, 1734], [1731, 1734], [1608, 1736], \
[1609, 1737], [1610, 1738], [1611, 1739], [1732, 1740], [1736, 1740], [1737, \
1740], [1738, 1740], [1739, 1740], [1733, 1741], [1736, 1741], [1737, 1741], \
[1738, 1741], [1739, 1741], [1734, 1742], [1736, 1742], [1737, 1742], [1738, \
1742], [1739, 1742], [1736, 1743], [1737, 1743], [1738, 1743], [1739, 1743], \
[1616, 1744], [1617, 1745], [1618, 1746], [1619, 1747], [1740, 1748], [1744, \
1748], [1745, 1748], [1746, 1748], [1747, 1748], [1741, 1749], [1744, 1749], \
[1745, 1749], [1746, 1749], [1747, 1749], [1742, 1750], [1744, 1750], [1745, \
1750], [1746, 1750], [1747, 1750], [1743, 1751], [1744, 1751], [1745, 1751], \
[1746, 1751], [1747, 1751], [1624, 1752], [1625, 1753], [1626, 1754], [1627, \
1755], [1748, 1756], [1752, 1756], [1753, 1756], [1754, 1756], [1755, 1756], \
[1749, 1757], [1752, 1757], [1753, 1757], [1754, 1757], [1755, 1757], [1750, \
1758], [1752, 1758], [1753, 1758], [1754, 1758], [1755, 1758], [1751, 1759], \
[1752, 1759], [1753, 1759], [1754, 1759], [1755, 1759], [1632, 1760], [1633, \
1761], [1634, 1762], [1635, 1763], [1756, 1764], [1760, 1764], [1761, 1764], \
[1762, 1764], [1763, 1764], [1757, 1765], [1760, 1765], [1761, 1765], [1762, \
1765], [1763, 1765], [1758, 1766], [1760, 1766], [1761, 1766], [1762, 1766], \
[1763, 1766], [1759, 1767], [1760, 1767], [1761, 1767], [1762, 1767], [1763, \
1767], [1640, 1768], [1641, 1769], [1642, 1770], [1643, 1771], [1764, 1772], \
[1768, 1772], [1769, 1772], [1770, 1772], [1771, 1772], [1765, 1773], [1768, \
1773], [1769, 1773], [1770, 1773], [1771, 1773], [1766, 1774], [1768, 1774], \
[1769, 1774], [1770, 1774], [1771, 1774], [1767, 1775], [1768, 1775], [1769, \
1775], [1770, 1775], [1771, 1775], [1648, 1776], [1649, 1777], [1650, 1778], \
[1651, 1779], [1772, 1780], [1776, 1780], [1777, 1780], [1778, 1780], [1779, \
1780], [1773, 1781], [1776, 1781], [1777, 1781], [1778, 1781], [1779, 1781], \
[1774, 1782], [1776, 1782], [1777, 1782], [1778, 1782], [1779, 1782], [1775, \
1783], [1776, 1783], [1777, 1783], [1778, 1783], [1779, 1783], [1656, 1784], \
[1657, 1785], [1658, 1786], [1659, 1787], [1780, 1788], [1784, 1788], [1785, \
1788], [1786, 1788], [1787, 1788], [1781, 1789], [1784, 1789], [1785, 1789], \
[1786, 1789], [1787, 1789], [1782, 1790], [1784, 1790], [1785, 1790], [1786, \
1790], [1787, 1790], [1783, 1791], [1784, 1791], [1785, 1791], [1786, 1791], \
[1787, 1791], [1664, 1792], [1665, 1793], [1666, 1794], [1667, 1795], [1792, \
1796], [1793, 1796], [1794, 1796], [1795, 1796], [1792, 1797], [1793, 1797], \
[1794, 1797], [1795, 1797], [1792, 1798], [1793, 1798], [1794, 1798], [1795, \
1798], [1792, 1799], [1793, 1799], [1794, 1799], [1795, 1799], [1672, 1800], \
[1673, 1801], [1674, 1802], [1675, 1803], [1797, 1805], [1800, 1805], [1801, \
1805], [1802, 1805], [1803, 1805], [1798, 1806], [1800, 1806], [1801, 1806], \
[1802, 1806], [1803, 1806], [1799, 1807], [1800, 1807], [1801, 1807], [1802, \
1807], [1803, 1807], [1680, 1808], [1681, 1809], [1682, 1810], [1683, 1811], \
[1808, 1812], [1809, 1812], [1810, 1812], [1811, 1812], [1805, 1813], [1808, \
1813], [1809, 1813], [1810, 1813], [1811, 1813], [1806, 1814], [1808, 1814], \
[1809, 1814], [1810, 1814], [1811, 1814], [1807, 1815], [1808, 1815], [1809, \
1815], [1810, 1815], [1811, 1815], [1688, 1816], [1689, 1817], [1690, 1818], \
[1691, 1819], [1812, 1820], [1816, 1820], [1817, 1820], [1818, 1820], [1819, \
1820], [1813, 1821], [1816, 1821], [1817, 1821], [1818, 1821], [1819, 1821], \
[1814, 1822], [1816, 1822], [1817, 1822], [1818, 1822], [1819, 1822], [1815, \
1823], [1816, 1823], [1817, 1823], [1818, 1823], [1819, 1823], [1696, 1824], \
[1697, 1825], [1698, 1826], [1699, 1827], [1820, 1828], [1824, 1828], [1825, \
1828], [1826, 1828], [1827, 1828], [1821, 1829], [1824, 1829], [1825, 1829], \
[1826, 1829], [1827, 1829], [1822, 1830], [1824, 1830], [1825, 1830], [1826, \
1830], [1827, 1830], [1823, 1831], [1824, 1831], [1825, 1831], [1826, 1831], \
[1827, 1831], [1704, 1832], [1705, 1833], [1706, 1834], [1707, 1835], [1828, \
1836], [1832, 1836], [1833, 1836], [1834, 1836], [1835, 1836], [1829, 1837], \
[1832, 1837], [1833, 1837], [1834, 1837], [1835, 1837], [1830, 1838], [1832, \
1838], [1833, 1838], [1834, 1838], [1835, 1838], [1831, 1839], [1832, 1839], \
[1833, 1839], [1834, 1839], [1835, 1839], [1712, 1840], [1713, 1841], [1714, \
1842], [1715, 1843], [1836, 1844], [1840, 1844], [1841, 1844], [1842, 1844], \
[1843, 1844], [1837, 1845], [1840, 1845], [1841, 1845], [1842, 1845], [1843, \
1845], [1838, 1846], [1840, 1846], [1841, 1846], [1842, 1846], [1843, 1846], \
[1839, 1847], [1840, 1847], [1841, 1847], [1842, 1847], [1843, 1847], [1720, \
1848], [1721, 1849], [1722, 1850], [1844, 1852], [1848, 1852], [1849, 1852], \
[1850, 1852], [1851, 1852], [1845, 1853], [1848, 1853], [1849, 1853], [1850, \
1853], [1851, 1853], [1846, 1854], [1848, 1854], [1849, 1854], [1850, 1854], \
[1851, 1854], [1847, 1855], [1848, 1855], [1849, 1855], [1850, 1855], [1851, \
1855], [1728, 1856], [1729, 1857], [1730, 1858], [1731, 1859], [1852, 1860], \
[1856, 1860], [1857, 1860], [1858, 1860], [1859, 1860], [1853, 1861], [1856, \
1861], [1857, 1861], [1858, 1861], [1859, 1861], [1854, 1862], [1856, 1862], \
[1857, 1862], [1858, 1862], [1859, 1862], [1855, 1863], [1856, 1863], [1857, \
1863], [1858, 1863], [1859, 1863], [1736, 1864], [1737, 1865], [1738, 1866], \
[1739, 1867], [1860, 1868], [1864, 1868], [1865, 1868], [1866, 1868], [1867, \
1868], [1861, 1869], [1864, 1869], [1865, 1869], [1866, 1869], [1867, 1869], \
[1862, 1870], [1864, 1870], [1865, 1870], [1866, 1870], [1867, 1870], [1863, \
1871], [1864, 1871], [1865, 1871], [1866, 1871], [1867, 1871], [1744, 1872], \
[1745, 1873], [1746, 1874], [1747, 1875], [1868, 1876], [1872, 1876], [1873, \
1876], [1874, 1876], [1875, 1876], [1869, 1877], [1872, 1877], [1873, 1877], \
[1874, 1877], [1875, 1877], [1870, 1878], [1872, 1878], [1873, 1878], [1874, \
1878], [1875, 1878], [1871, 1879], [1872, 1879], [1873, 1879], [1874, 1879], \
[1875, 1879], [1752, 1880], [1753, 1881], [1754, 1882], [1755, 1883], [1876, \
1884], [1880, 1884], [1881, 1884], [1882, 1884], [1883, 1884], [1877, 1885], \
[1880, 1885], [1881, 1885], [1882, 1885], [1883, 1885], [1878, 1886], [1880, \
1886], [1881, 1886], [1882, 1886], [1883, 1886], [1879, 1887], [1880, 1887], \
[1881, 1887], [1882, 1887], [1883, 1887], [1760, 1888], [1761, 1889], [1762, \
1890], [1763, 1891], [1884, 1892], [1888, 1892], [1889, 1892], [1890, 1892], \
[1891, 1892], [1885, 1893], [1888, 1893], [1889, 1893], [1890, 1893], [1891, \
1893], [1886, 1894], [1888, 1894], [1889, 1894], [1890, 1894], [1891, 1894], \
[1887, 1895], [1888, 1895], [1889, 1895], [1890, 1895], [1891, 1895], [1768, \
1896], [1769, 1897], [1770, 1898], [1771, 1899], [1892, 1900], [1896, 1900], \
[1897, 1900], [1898, 1900], [1899, 1900], [1893, 1901], [1896, 1901], [1897, \
1901], [1898, 1901], [1899, 1901], [1894, 1902], [1896, 1902], [1897, 1902], \
[1898, 1902], [1899, 1902], [1895, 1903], [1896, 1903], [1897, 1903], [1898, \
1903], [1899, 1903], [1776, 1904], [1777, 1905], [1778, 1906], [1779, 1907], \
[1900, 1908], [1904, 1908], [1905, 1908], [1906, 1908], [1907, 1908], [1901, \
1909], [1904, 1909], [1905, 1909], [1906, 1909], [1907, 1909], [1902, 1910], \
[1904, 1910], [1905, 1910], [1906, 1910], [1907, 1910], [1903, 1911], [1904, \
1911], [1905, 1911], [1906, 1911], [1907, 1911], [1784, 1912], [1785, 1913], \
[1786, 1914], [1787, 1915], [1908, 1916], [1912, 1916], [1913, 1916], [1914, \
1916], [1915, 1916], [1909, 1917], [1912, 1917], [1913, 1917], [1914, 1917], \
[1915, 1917], [1910, 1918], [1912, 1918], [1913, 1918], [1914, 1918], [1915, \
1918], [1911, 1919], [1912, 1919], [1913, 1919], [1914, 1919], [1915, 1919], \
[1792, 1920], [1793, 1921], [1794, 1922], [1795, 1923], [1920, 1924], [1921, \
1924], [1922, 1924], [1923, 1924], [1920, 1925], [1921, 1925], [1922, 1925], \
[1923, 1925], [1920, 1926], [1921, 1926], [1922, 1926], [1923, 1926], [1920, \
1927], [1921, 1927], [1922, 1927], [1923, 1927], [1800, 1928], [1801, 1929], \
[1802, 1930], [1803, 1931], [1924, 1932], [1928, 1932], [1929, 1932], [1930, \
1932], [1931, 1932], [1925, 1933], [1928, 1933], [1929, 1933], [1930, 1933], \
[1931, 1933], [1926, 1934], [1928, 1934], [1929, 1934], [1930, 1934], [1931, \
1934], [1927, 1935], [1928, 1935], [1929, 1935], [1930, 1935], [1931, 1935], \
[1808, 1936], [1809, 1937], [1810, 1938], [1811, 1939], [1932, 1940], [1936, \
1940], [1937, 1940], [1938, 1940], [1939, 1940], [1933, 1941], [1936, 1941], \
[1937, 1941], [1938, 1941], [1939, 1941], [1934, 1942], [1936, 1942], [1937, \
1942], [1938, 1942], [1939, 1942], [1935, 1943], [1936, 1943], [1937, 1943], \
[1938, 1943], [1939, 1943], [1816, 1944], [1817, 1945], [1818, 1946], [1819, \
1947], [1940, 1948], [1944, 1948], [1945, 1948], [1946, 1948], [1947, 1948], \
[1941, 1949], [1944, 1949], [1945, 1949], [1946, 1949], [1947, 1949], [1942, \
1950], [1944, 1950], [1945, 1950], [1946, 1950], [1947, 1950], [1943, 1951], \
[1944, 1951], [1945, 1951], [1946, 1951], [1947, 1951], [1824, 1952], [1825, \
1953], [1826, 1954], [1827, 1955], [1948, 1956], [1952, 1956], [1953, 1956], \
[1954, 1956], [1955, 1956], [1949, 1957], [1952, 1957], [1953, 1957], [1954, \
1957], [1955, 1957], [1950, 1958], [1952, 1958], [1953, 1958], [1954, 1958], \
[1955, 1958], [1951, 1959], [1952, 1959], [1953, 1959], [1954, 1959], [1955, \
1959], [1832, 1960], [1833, 1961], [1834, 1962], [1835, 1963], [1956, 1964], \
[1960, 1964], [1961, 1964], [1962, 1964], [1963, 1964], [1957, 1965], [1960, \
1965], [1961, 1965], [1962, 1965], [1963, 1965], [1958, 1966], [1960, 1966], \
[1961, 1966], [1962, 1966], [1963, 1966], [1959, 1967], [1960, 1967], [1961, \
1967], [1962, 1967], [1963, 1967], [1840, 1968], [1841, 1969], [1842, 1970], \
[1843, 1971], [1964, 1972], [1968, 1972], [1969, 1972], [1970, 1972], [1971, \
1972], [1965, 1973], [1968, 1973], [1969, 1973], [1970, 1973], [1971, 1973], \
[1966, 1974], [1968, 1974], [1969, 1974], [1970, 1974], [1971, 1974], [1967, \
1975], [1968, 1975], [1969, 1975], [1970, 1975], [1971, 1975], [1848, 1976], \
[1849, 1977], [1850, 1978], [1851, 1979], [1972, 1980], [1976, 1980], [1977, \
1980], [1978, 1980], [1979, 1980], [1973, 1981], [1976, 1981], [1977, 1981], \
[1978, 1981], [1979, 1981], [1974, 1982], [1976, 1982], [1977, 1982], [1978, \
1982], [1979, 1982], [1975, 1983], [1976, 1983], [1977, 1983], [1978, 1983], \
[1979, 1983], [1856, 1984], [1857, 1985], [1858, 1986], [1859, 1987], [1980, \
1988], [1984, 1988], [1985, 1988], [1986, 1988], [1987, 1988], [1981, 1989], \
[1984, 1989], [1985, 1989], [1986, 1989], [1987, 1989], [1982, 1990], [1984, \
1990], [1985, 1990], [1986, 1990], [1987, 1990], [1983, 1991], [1984, 1991], \
[1985, 1991], [1986, 1991], [1987, 1991], [1864, 1992], [1865, 1993], [1866, \
1994], [1867, 1995], [1988, 1996], [1992, 1996], [1993, 1996], [1994, 1996], \
[1995, 1996], [1989, 1997], [1992, 1997], [1993, 1997], [1994, 1997], [1995, \
1997], [1990, 1998], [1992, 1998], [1993, 1998], [1994, 1998], [1995, 1998], \
[1991, 1999], [1992, 1999], [1993, 1999], [1994, 1999], [1995, 1999], [1872, \
2000], [1873, 2001], [1874, 2002], [1875, 2003], [1996, 2004], [2000, 2004], \
[2001, 2004], [2002, 2004], [2003, 2004], [1997, 2005], [2000, 2005], [2001, \
2005], [2002, 2005], [2003, 2005], [1998, 2006], [2000, 2006], [2001, 2006], \
[2002, 2006], [2003, 2006], [1999, 2007], [2000, 2007], [2001, 2007], [2002, \
2007], [2003, 2007], [1880, 2008], [1881, 2009], [1882, 2010], [1883, 2011], \
[2004, 2012], [2008, 2012], [2009, 2012], [2010, 2012], [2011, 2012], [2005, \
2013], [2008, 2013], [2009, 2013], [2010, 2013], [2011, 2013], [2006, 2014], \
[2008, 2014], [2009, 2014], [2010, 2014], [2011, 2014], [2007, 2015], [2008, \
2015], [2009, 2015], [2010, 2015], [2011, 2015], [1888, 2016], [1889, 2017], \
[1890, 2018], [1891, 2019], [2012, 2020], [2016, 2020], [2017, 2020], [2018, \
2020], [2019, 2020], [2013, 2021], [2016, 2021], [2017, 2021], [2018, 2021], \
[2019, 2021], [2014, 2022], [2016, 2022], [2017, 2022], [2018, 2022], [2019, \
2022], [2015, 2023], [2016, 2023], [2017, 2023], [2018, 2023], [2019, 2023], \
[1896, 2024], [1897, 2025], [1898, 2026], [1899, 2027], [2020, 2028], [2024, \
2028], [2025, 2028], [2026, 2028], [2027, 2028], [2021, 2029], [2024, 2029], \
[2025, 2029], [2026, 2029], [2027, 2029], [2022, 2030], [2024, 2030], [2025, \
2030], [2026, 2030], [2027, 2030], [2023, 2031], [2024, 2031], [2025, 2031], \
[2026, 2031], [2027, 2031], [1904, 2032], [1905, 2033], [1906, 2034], [1907, \
2035], [2028, 2036], [2032, 2036], [2033, 2036], [2034, 2036], [2035, 2036], \
[2029, 2037], [2032, 2037], [2033, 2037], [2034, 2037], [2035, 2037], [2030, \
2038], [2032, 2038], [2033, 2038], [2034, 2038], [2035, 2038], [2031, 2039], \
[2032, 2039], [2033, 2039], [2034, 2039], [2035, 2039], [1912, 2040], [1913, \
2041], [1914, 2042], [1915, 2043], [2036, 2044], [2040, 2044], [2041, 2044], \
[2042, 2044], [2043, 2044], [2037, 2045], [2040, 2045], [2041, 2045], [2042, \
2045], [2043, 2045], [2038, 2046], [2040, 2046], [2041, 2046], [2042, 2046], \
[2043, 2046], [2039, 2047], [2040, 2047], [2041, 2047], [2042, 2047], [2043, \
2047]], \"defaultAnnealingDuration\": 20, \
\"defaultProgrammingThermalizationDuration\": 1000, \
\"defaultReadoutThermalizationDuration\": 0, \"extendedJRange\": [-2.0, 1.0], \
\"hGainScheduleRange\": [-5.0, 5.0], \"hRange\": [-2.0, 2.0], \"jRange\": \
[-1.0, 1.0], \"maximumAnnealingSchedulePoints\": 12, \
\"maximumHGainSchedulePoints\": 20, \"perQubitCouplingRange\": [-9.0, 6.0], \
\"programmingThermalizationDurationRange\": [0, 10000], \"qubits\": [0, 1, 2, \
3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, \
24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, \
44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, \
64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, \
83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, \
102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, \
117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, \
132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, \
147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, \
162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, \
177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, \
192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, \
207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, \
222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, \
237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, \
252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, \
267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, \
282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, \
297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, \
312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, \
327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, \
342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, \
357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, \
372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, \
387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, \
402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, \
417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, \
432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, \
447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, \
462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, \
477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, \
492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, \
507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, \
522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, \
538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, \
554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, \
569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, \
584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, \
599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, \
614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, \
629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, \
644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, \
659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, \
674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, \
689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, \
704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, \
719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, \
734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, \
749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, \
764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, \
779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, \
794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, \
809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, \
824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, \
839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, \
854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, \
869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, \
884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, \
899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, \
914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, \
929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, \
944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, \
959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, \
974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, \
989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, \
1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, \
1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, \
1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, \
1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, \
1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, \
1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, \
1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, \
1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, \
1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, \
1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, \
1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, \
1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, \
1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, \
1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, \
1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, \
1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, \
1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, \
1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, \
1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, \
1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, \
1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, \
1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, \
1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, \
1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, \
1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, \
1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, \
1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, \
1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, \
1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, \
1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, \
1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, \
1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, \
1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, \
1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, \
1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, \
1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, \
1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, \
1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, \
1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, \
1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, \
1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, \
1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, \
1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, \
1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, \
1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, \
1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, \
1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, \
1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, \
1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, \
1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, \
1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, \
1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, \
1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, \
1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, \
1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, \
1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, \
1732, 1733, 1734, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, \
1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, \
1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, \
1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, \
1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, \
1798, 1799, 1800, 1801, 1802, 1803, 1805, 1806, 1807, 1808, 1809, 1810, 1811, \
1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, \
1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, \
1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, \
1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, \
1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, \
1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, \
1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, \
1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, \
1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, \
1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, \
1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, \
1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, \
1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, \
1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, \
1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, \
2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, \
2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, \
2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, \
2046, 2047], \"qubitCount\": 2048, \"quotaConversionRate\": 1.0, \
\"readoutThermalizationDurationRange\": [0, 10000], \"taskRunDurationRange\": \
[0, 1000000], \"topology\": {\"type\": \"chimera\", \"shape\": [16, 16, \
4]}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Devices"], 8, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{2.0939968000000003`*^6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2.095225*^6, {128.134033203125, 133.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2.095225*^6, {128.134033203125, 133.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.866891193451885*^9, 3.866891200001831*^9}},
 CellLabel->
  "Out[156]=",ExpressionUUID->"6ac37c1f-6323-4bf6-b366-84ac11d0de6a"]
}, Open  ]],

Cell["QPU devices:", "Text",
 CellChangeTimes->{{3.865787297168214*^9, 
  3.865787299434285*^9}},ExpressionUUID->"3f033589-b902-4382-afbb-\
0ff2bd4c722e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devices", "[", 
  RowBox[{"\"\<Devices\>\"", ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#DeviceType", "==", "\"\<QPU\>\""}], "&"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8657864045427427`*^9, 3.8657864506170483`*^9}, 
   3.8657864861071453`*^9, 3.865787293125935*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"7867c909-780b-40fa-be57-549e2bf6c37b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DeviceArn" -> "arn:aws:braket:::device/qpu/ionq/ionQdevice", 
        "DeviceName" -> "IonQ Device", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2023-01-31T12:00:04.665000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}, \
\"braket.ir.openqasm.compiled_program\": {\"version\": [\"1\"], \
\"actionType\": \"braket.ir.openqasm.compiled_program\"}}, \"deviceParameters\
\": {\"title\": \"IonqDeviceParameters\", \"description\": \"This defines the \
parameters common to all the IonQ devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    ...        \\\
\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"paradigmParameters\
\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    ... \
}\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9985}, \"2Q\": {\"mean\": 0.9785}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
        "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-01-31T15:30:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": \
1e-07}, \"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": \
0.02}}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
        "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "OFFLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-01-27T14:51:39.232143+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.401, 0.547, -0.249], \"schmidtNumber\": 1.14, \
\"commonEfficiency\": 0.357, \"squeezingParametersMean\": {\"low\": 0.704, \
\"high\": 1.188, \"medium\": 1.016}, \"relativeChannelEfficiencies\": [0.932, \
0.94, 0.911, 1.0, 0.975, 0.923, 0.903, 0.963, 0.952, 0.956, 0.965, 1.0, \
0.937, 0.967, 0.957, 0.904], \"loopEfficiencies\": [0.883, 0.845, \
0.722]}}"|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[67.2], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[78.4], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[67.2], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[31.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[78.4], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU"]], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
     3, "DisplayedColumnCount" -> 6, "DataRowCount" -> 3, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceCapabilities"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/ionq/ionQdevice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ Device", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"13:00:00\", \"windowEndHour\": \"02:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/best-practices\"}, \"deviceLocation\": \"Maryland, USA\", \
\"updatedAt\": \"2023-01-31T12:00:04.665000+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}, \
\"braket.ir.openqasm.compiled_program\": {\"version\": [\"1\"], \
\"actionType\": \"braket.ir.openqasm.compiled_program\"}}, \"deviceParameters\
\": {\"title\": \"IonqDeviceParameters\", \"description\": \"This defines the \
parameters common to all the IonQ devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.ionq.ionq_device_parameters\\\",\\n    ...        \\\
\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"paradigmParameters\
\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    ... \
}\\n    >>> IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model \
devices.\\n\\nAttributes:\\n    qubitCount: Number of qubits used by the \
circuit.\\n    disableQubitRewiring: Whether to run the circuit with the \
exact qubits chosen,\\n        without any rewiring downstream.\\n        If \
``True``, no qubit rewiring is allowed; if ``False``, qubit rewiring is \
allowed.\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.gate_model_parameters\\\",\\n    ...        \
\\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \\\"qubitCount\\\": \
1,\\n    ...    \\\"disableQubitRewiring\\\": True\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9985}, \"2Q\": {\"mean\": 0.9785}, \"spam\
\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QuEra", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-01-31T15:30:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": \
1e-07}, \"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": \
0.02}}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-01-27T14:51:39.232143+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [0.401, 0.547, -0.249], \"schmidtNumber\": 1.14, \
\"commonEfficiency\": 0.357, \"squeezingParametersMean\": {\"low\": 0.704, \
\"high\": 1.188, \"medium\": 1.016}, \"relativeChannelEfficiencies\": [0.932, \
0.94, 0.911, 1.0, 0.975, 0.923, 0.903, 0.963, 0.952, 0.956, 0.965, 1.0, \
0.937, 0.967, 0.957, 0.904], \"loopEfficiencies\": [0.883, 0.845, 0.722]}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2283., {60.634033203125, 66.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2283., {60.634033203125, 66.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.865786399853181*^9, 3.8657864369219103`*^9}, 
   3.865787294328981*^9, 3.865790124640266*^9, 3.8668912719698143`*^9, 
   3.876572131928008*^9, 3.884239784026943*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"4554a150-f931-4d30-a195-b1db9564beb0"]
}, Open  ]],

Cell["Query device:", "Text",
 CellChangeTimes->{{3.865787327790945*^9, 3.865787368128433*^9}, {
  3.884239827462484*^9, 3.8842398313514557`*^9}, {3.884253805094187*^9, 
  3.8842538061721478`*^9}},ExpressionUUID->"dc24baf7-aa5f-4037-af12-\
ab17bf9cac94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"devices", "[", 
   RowBox[{"\"\<Devices\>\"", ",", 
    RowBox[{"First", "@*", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#DeviceName", "==", "\"\<Aquila\>\""}], "&"}], "]"}]}]}], 
   "]"}], "[", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImportString", "[", 
      RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}], ",", 
    "\"\<DeviceCapabilities\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.884253861981122*^9, 3.8842538634104*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"e3fc840f-70e5-4315-b37a-cf3191f10ac1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
       "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
       "QPU", "DeviceStatus" -> "ONLINE", 
       "DeviceCapabilities" -> <|
        "service" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.device_service_properties", 
             "version" -> "1"|>, 
           "executionWindows" -> {<|
             "executionDay" -> "Tuesday", "windowStartHour" -> "16:00:00", 
              "windowEndHour" -> "20:00:00"|>, <|
             "executionDay" -> "Wednesday", "windowStartHour" -> "16:00:00", 
              "windowEndHour" -> "20:00:00"|>, <|
             "executionDay" -> "Thursday", "windowStartHour" -> "16:00:00", 
              "windowEndHour" -> "18:00:00"|>}, "shotsRange" -> {1, 1000}, 
           "deviceCost" -> <|"price" -> 0.01, "unit" -> "shot"|>, 
           "deviceDocumentation" -> <|
            "imageUrl" -> 
             "https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png", "summary" -> 
             "Analog quantum processor based on neutral atom arrays", 
             "externalDocumentationUrl" -> "https://www.quera.com/aquila"|>, 
           "deviceLocation" -> "Boston, USA", "updatedAt" -> 
           "2023-01-31T15:30:00+00:00"|>, 
         "action" -> <|
          "braket.ir.ahs.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.ahs.program"|>|>, 
         "deviceParameters" -> <||>, 
         "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.quera.quera_device_capabilities", 
           "version" -> "1"|>, 
         "paradigm" -> <|
          "braketSchemaHeader" -> <|
            "name" -> 
             "braket.device_schema.quera.quera_ahs_paradigm_properties", 
             "version" -> "1"|>, "qubitCount" -> 256, 
           "lattice" -> <|
            "area" -> <|
              "width" -> 0.00007500000000000001, "height" -> 0.000076|>, 
             "geometry" -> <|
              "spacingRadialMin" -> Rational[1, 250000], "spacingVerticalMin" -> 
               Rational[1, 250000], "positionResolution" -> 
               Rational[1, 10000000], "numberSitesMax" -> 256|>|>, 
           "rydberg" -> <|
            "c6Coefficient" -> 5.420000000000001*^-24, 
             "rydbergGlobal" -> <|
              "rabiFrequencyRange" -> {0., 1.58*^7}, 
               "rabiFrequencyResolution" -> 400., "rabiFrequencySlewRateMax" -> 
               2.5*^14, "detuningRange" -> {-1.25*^8, 1.25*^8}, 
               "detuningResolution" -> 0.2, "detuningSlewRateMax" -> 2.5*^15, 
               "phaseRange" -> {-99., 99.}, "phaseResolution" -> 
               Rational[1, 2000000], "timeResolution" -> 
               Rational[1, 1000000000], "timeDeltaMin" -> 
               Rational[1, 20000000], "timeMin" -> 0., "timeMax" -> 
               Rational[1, 250000]|>|>, 
           "performance" -> <|
            "lattice" -> <|"positionErrorAbs" -> Rational[1, 10000000]|>, 
             "rydberg" -> <|
              "rydbergGlobal" -> <|
                "rabiFrequencyErrorRel" -> 0.02|>|>|>|>|>|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[548.8000000000001], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         5]}], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[201.60000000000002`], 
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[235.20000000000002`], 
            TypeSystem`PackageScope`UnknownShape[False]]], 4, 
          DirectedInfinity[1], {All}]]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Assoc[
        TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
       5], "Path" -> {
       Key["DeviceCapabilities"]}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 4|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {
     Key["DeviceCapabilities"]}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["service", 
                  Style[
                  "service", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["braketSchemaHeader", 
                  Style[
                  "braketSchemaHeader", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["braketSchemaHeader"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["braketSchemaHeader"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"name" -> 
                    "braket.device_schema.device_service_properties", 
                    "version" -> "1"|>, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"name" -> 
                    "braket.device_schema.device_service_properties", 
                    "version" -> "1"|>, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["braketSchemaHeader"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["braketSchemaHeader"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["executionWindows", 
                  Style[
                  "executionWindows", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["executionWindows"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["executionWindows"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{<|
                    "executionDay" -> "Tuesday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "20:00:00"|>, <|
                    "executionDay" -> "Wednesday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "20:00:00"|>, <|
                    "executionDay" -> "Thursday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "18:00:00"|>}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{<|
                    "executionDay" -> "Tuesday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "20:00:00"|>, <|
                    "executionDay" -> "Wednesday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "20:00:00"|>, <|
                    "executionDay" -> "Thursday", "windowStartHour" -> 
                    "16:00:00", "windowEndHour" -> "18:00:00"|>}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["executionWindows"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["executionWindows"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["shotsRange", 
                  Style[
                  "shotsRange", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["shotsRange"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["shotsRange"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1, 1000}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1, 1000}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["shotsRange"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["shotsRange"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["deviceCost", 
                  Style[
                  "deviceCost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["deviceCost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["deviceCost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"price" -> 0.01, "unit" -> "shot"|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"price" -> 0.01, "unit" -> "shot"|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"], 
                    Key["deviceCost"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"], 
                 Key["deviceCost"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["7 total \:203a ", ""], 
                  Style[
                   Superscript["7 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["service"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["service"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["action", 
                  Style[
                  "action", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["action"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["action"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["braket.ir.ahs.program", 
                  Style[
                  "braket.ir.ahs.program", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["action"], 
                    Key["braket.ir.ahs.program"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["action"], 
                 Key["braket.ir.ahs.program"]}, "RowHeader", False], "Mouse"],
               ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"version" -> {"1"}, "actionType" -> 
                    "braket.ir.ahs.program"|>, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"version" -> {"1"}, "actionType" -> 
                    "braket.ir.ahs.program"|>, ShowStringCharacters -> False],
                    FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["action"], 
                    Key["braket.ir.ahs.program"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["action"], 
                 Key["braket.ir.ahs.program"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["deviceParameters", 
                  Style[
                  "deviceParameters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["deviceParameters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["deviceParameters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["deviceParameters"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["deviceParameters"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["braketSchemaHeader", 
                  Style[
                  "braketSchemaHeader", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["braketSchemaHeader"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["braketSchemaHeader"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["braketSchemaHeader"], 
                    Key["name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["braketSchemaHeader"], 
                 Key["name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "braket.device_schema.quera.quera_device_capabilities", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["braketSchemaHeader"], 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{582.4000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["version", 
                  Style[
                  "version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["braketSchemaHeader"], 
                    Key["version"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["braketSchemaHeader"], 
                 Key["version"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["braketSchemaHeader"], 
                 Key["version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{11.200000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["paradigm", 
                  Style[
                  "paradigm", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{201.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["braketSchemaHeader", 
                  Style[
                  "braketSchemaHeader", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["braketSchemaHeader"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["braketSchemaHeader"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"name" -> 
                    "braket.device_schema.quera.quera_ahs_paradigm_\
properties", "version" -> "1"|>, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"name" -> 
                    "braket.device_schema.quera.quera_ahs_paradigm_\
properties", "version" -> "1"|>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["braketSchemaHeader"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["braketSchemaHeader"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["qubitCount", 
                  Style[
                  "qubitCount", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["qubitCount"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["qubitCount"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["qubitCount"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lattice", 
                  Style[
                  "lattice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["lattice"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["lattice"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"area" -> <|
                    "width" -> 0.00007500000000000001, "height" -> 0.000076|>,
                     "geometry" -> <|
                    "spacingRadialMin" -> Rational[1, 250000], 
                    "spacingVerticalMin" -> Rational[1, 250000], 
                    "positionResolution" -> Rational[1, 10000000], 
                    "numberSitesMax" -> 256|>|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"area" -> <|
                    "width" -> 0.00007500000000000001, "height" -> 0.000076|>,
                     "geometry" -> <|
                    "spacingRadialMin" -> Rational[1, 250000], 
                    "spacingVerticalMin" -> Rational[1, 250000], 
                    "positionResolution" -> Rational[1, 10000000], 
                    "numberSitesMax" -> 256|>|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["lattice"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["lattice"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["rydberg", 
                  Style[
                  "rydberg", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["rydberg"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["rydberg"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"c6Coefficient", "rydbergGlobal"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"c6Coefficient", "rydbergGlobal"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"], 
                    Key["rydberg"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"], 
                 Key["rydberg"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Superscript["5 total \:203a ", ""], 
                  Style[
                   Superscript["5 total \:203a ", ""], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"], 
                    Key["paradigm"]}, 2]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"], 
                 Key["paradigm"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {{
                RGBColor[
                0.5098039215686274, 0.5098039215686274, 0.5098039215686274], 
                8}, ContextMenu -> {
                 MenuItem["Show 1 More Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    1]& , {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 More Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, 
                    5]& , {All}]], MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Show 1 Fewer Row at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -1]& \
, {All}]], MenuEvaluator -> Automatic], 
                 MenuItem["Show 5 Fewer Rows at This Level", 
                  KernelExecute[
                   
                   TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimitBy[#, -5]& \
, {All}]], MenuEvaluator -> Automatic]}}, Alignment -> {Left, Baseline}, 
             Background -> GrayLevel[0.98]], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2081., {202.634033203125, 208.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2081., {202.634033203125, 208.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.884253863771719*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"4d6bf804-d691-4222-aee0-094e9386c6e8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"devices", "[", 
   RowBox[{"\"\<Devices\>\"", ",", 
    RowBox[{"First", "@*", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"#DeviceName", "==", "\"\<IonQ Device\>\""}], "&"}], "]"}]}]}],
    "]"}], "[", 
  RowBox[{"MapAt", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ImportString", "[", 
      RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}], ",", 
    "\"\<DeviceCapabilities\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.876572156591114*^9, 3.876572174850472*^9}, {
  3.884239800929678*^9, 3.88423982126245*^9}, {3.884253814635047*^9, 
  3.8842538305353203`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"c9043744-af22-4829-95d2-f9bc9aaa3b9a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "DeviceArn" -> "arn:aws:braket:::device/qpu/ionq/ionQdevice", 
       "DeviceName" -> "IonQ Device", "ProviderName" -> "IonQ", "DeviceType" -> 
       "QPU", "DeviceStatus" -> "ONLINE", 
       "DeviceCapabilities" -> <|
        "service" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.device_service_properties", 
             "version" -> "1"|>, 
           "executionWindows" -> {<|
             "executionDay" -> "Weekdays", "windowStartHour" -> "13:00:00", 
              "windowEndHour" -> "02:00:00"|>}, "shotsRange" -> {1, 10000}, 
           "deviceCost" -> <|"price" -> 0.01, "unit" -> "shot"|>, 
           "deviceDocumentation" -> <|
            "imageUrl" -> 
             "http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png", "summary" -> 
             "Universal gate-model QPU based on trapped ions", 
             "externalDocumentationUrl" -> 
             "https://ionq.com/best-practices"|>, "deviceLocation" -> 
           "Maryland, USA", "updatedAt" -> 
           "2023-01-31T12:00:04.665000+00:00"|>, 
         "action" -> <|
          "braket.ir.jaqcd.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.jaqcd.program", 
             "supportedOperations" -> {
              "x", "y", "z", "rx", "ry", "rz", "h", "cnot", "s", "si", "t", 
               "ti", "v", "vi", "xx", "yy", "zz", "swap"}, 
             "supportedResultTypes" -> {<|
               "name" -> "Sample", "observables" -> {"x", "y", "z", "h", "i"},
                 "minShots" -> 1, "maxShots" -> 10000|>, <|
               "name" -> "Expectation", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Variance", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Probability", "minShots" -> 1, "maxShots" -> 
                10000|>}, "disabledQubitRewiringSupported" -> False|>, 
           "braket.ir.openqasm.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.openqasm.program", 
             "supportedOperations" -> {
              "x", "y", "z", "rx", "ry", "rz", "h", "cnot", "s", "si", "t", 
               "ti", "v", "vi", "xx", "yy", "zz", "swap"}, 
             "supportedPragmas" -> {
              "braket_result_type_sample", "braket_result_type_expectation", 
               "braket_result_type_variance", 
               "braket_result_type_probability", "verbatim"}, 
             "forbiddenPragmas" -> {
              "braket_unitary_matrix", "braket_result_type_state_vector", 
               "braket_result_type_density_matrix", 
               "braket_result_type_amplitude"}, "maximumQubitArrays" -> 1, 
             "maximumClassicalArrays" -> 1, 
             "forbiddenArrayOperations" -> {
              "concatenation", "negativeIndex", "range", "rangeWithStep", 
               "slicing", "selection"}, "requiresAllQubitsMeasurement" -> 
             True, "supportPhysicalQubits" -> True, 
             "requiresContiguousQubitIndices" -> False, 
             "supportsPartialVerbatimBox" -> False, 
             "supportsUnassignedMeasurements" -> True, 
             "disabledQubitRewiringSupported" -> False, 
             "supportedResultTypes" -> {<|
               "name" -> "Sample", "observables" -> {"x", "y", "z", "h", "i"},
                 "minShots" -> 1, "maxShots" -> 10000|>, <|
               "name" -> "Expectation", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Variance", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Probability", "minShots" -> 1, "maxShots" -> 
                10000|>}|>, 
           "braket.ir.openqasm.compiled_program" -> <|
            "version" -> {"1"}, "actionType" -> 
             "braket.ir.openqasm.compiled_program"|>|>, 
         "deviceParameters" -> <|
          "title" -> "IonqDeviceParameters", "description" -> 
           "This defines the parameters common to all the IonQ devices.\n\n\
Attributes:\n    paradigmParameters: Parameters that are common to gatemodel \
paradigm\n\nExamples:\n    >>> import json\n    >>> input_json = {\n    ...   \
 \"braketSchemaHeader\": {\n    ...        \"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\",\n    ...        \
\"version\": \"1\",\n    ...    },\n    ...    \"paradigmParameters\": \
{\"braketSchemaHeader\": {\n    ...        \"name\": \
\"braket.device_schema.gate_model_parameters\",\n    ...        \"version\": \
\"1\",\n    ...    },\"qubitCount\": 1},\n    ... }\n    >>> \
IonqDeviceParameters.parse_raw_schema(json.dumps(input_json))", "type" -> 
           "object", 
           "properties" -> <|
            "braketSchemaHeader" -> <|
              "title" -> "Braketschemaheader", 
               "const" -> <|
                "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
                 "version" -> "1"|>|>, 
             "paradigmParameters" -> <|
              "$ref" -> "#/definitions/GateModelParameters"|>|>, 
           "required" -> {"paradigmParameters"}, 
           "definitions" -> <|
            "GateModelParameters" -> <|
              "title" -> "GateModelParameters", "description" -> 
               "Defines parameters common to all gate model devices.\n\n\
Attributes:\n    qubitCount: Number of qubits used by the circuit.\n    \
disableQubitRewiring: Whether to run the circuit with the exact qubits \
chosen,\n        without any rewiring downstream.\n        If ``True``, no \
qubit rewiring is allowed; if ``False``, qubit rewiring is allowed.\n\n\
Examples:\n    >>> import json\n    >>> input_json = {\n    ...    \
\"braketSchemaHeader\": {\n    ...        \"name\": \
\"braket.device_schema.gate_model_parameters\",\n    ...        \"version\": \
\"1\",\n    ...    },\n    ...    \"qubitCount\": 1,\n    ...    \
\"disableQubitRewiring\": True\n    ... }\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))", "type" -> 
               "object", 
               "properties" -> <|
                "braketSchemaHeader" -> <|
                  "title" -> "Braketschemaheader", 
                   "const" -> <|
                    "name" -> "braket.device_schema.gate_model_parameters", 
                    "version" -> "1"|>|>, 
                 "qubitCount" -> <|
                  "title" -> "Qubitcount", "minimum" -> 0, "type" -> 
                   "integer"|>, 
                 "disableQubitRewiring" -> <|
                  "title" -> "Disablequbitrewiring", "default" -> False, 
                   "type" -> "boolean"|>|>, 
               "required" -> {"qubitCount"}|>|>|>, 
         "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_capabilities", 
           "version" -> "1"|>, 
         "paradigm" -> <|
          "braketSchemaHeader" -> <|
            "name" -> 
             "braket.device_schema.gate_model_qpu_paradigm_properties", 
             "version" -> "1"|>, 
           "connectivity" -> <|
            "fullyConnected" -> True, "connectivityGraph" -> <||>|>, 
           "qubitCount" -> 11, "nativeGateSet" -> {"GPI", "GPI2", "MS"}|>, 
         "provider" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.ionq.ionq_provider_properties", 
             "version" -> "1"|>, 
           "fidelity" -> <|
            "1Q" -> <|"mean" -> 0.9985|>, "2Q" -> <|"mean" -> 0.9785|>, 
             "spam" -> <|"mean" -> 0.99752|>|>, 
           "timing" -> <|
            "T1" -> 10000., "T2" -> 0.2, "1Q" -> Rational[1, 100000], "2Q" -> 
             0.0002, "readout" -> 0.00013, "reset" -> 
             Rational[1, 50000]|>|>|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[481.6], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[123.20000000000002`], {
         "ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[481.6], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[123.20000000000002`], {
         "ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/ionq/ionQdevice", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{481.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["IonQ Device", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ProviderName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceStatus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{608., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{608., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.87657215747383*^9, 3.8765721752222433`*^9}, {
   3.884239788714595*^9, 3.884239819714435*^9}, {3.884253816099567*^9, 
   3.8842538309391727`*^9}, 3.884261680380342*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"dfe53c8b-bbc8-4303-a101-884d0b7c737c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "deviceARN", "=", "\"\<arn:aws:braket:::device/qpu/rigetti/Aspen-11\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8657115071160793`*^9, 3.865711511608634*^9}, 
   3.865713808793538*^9, 3.865713892617262*^9, {3.865714491278914*^9, 
   3.865714507858176*^9}, {3.8657752931228437`*^9, 3.8657752961463833`*^9}, {
   3.8657902126472883`*^9, 3.865790215534477*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"623509d3-1f73-46df-8a06-a53c66ea4c13"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "simDeviceARN", "=", 
   "\"\<arn:aws:braket:::device/quantum-simulator/amazon/tn1\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.865784948614896*^9, 3.8657849573665533`*^9}},
 CellLabel->
  "In[1315]:=",ExpressionUUID->"b7c27e39-ee23-4cdc-8279-418a836382f2"],

Cell["Example qasm:", "Text",
 CellChangeTimes->{{3.8657874316436872`*^9, 3.865787435230795*^9}, {
  3.865787526513258*^9, 
  3.865787527377281*^9}},ExpressionUUID->"f3cc3d05-4bfb-4434-ae1e-\
b38b7a1ea64d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "qasm", "=", 
   "\"\<\n// ghz.qasm\n// Prepare a GHZ state\nOPENQASM 3;\n\nqubit[3] q;\n\
bit[3] c;\n\nh q[0];\ncnot q[0], q[1];\ncnot q[1], q[2];\n\nc = measure \
q;\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.8657113098161917`*^9, 3.865711315491885*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"e9811bfe-ac5e-42ec-86ca-163ac02e21c0"],

Cell["\<\
This one doesn\[CloseCurlyQuote]t work, control modifiers are not supported \
and probably gates should be from the list of supported ones and not U:\
\>", "Text",
 CellChangeTimes->{{3.8657874498485937`*^9, 
  3.865787507134635*^9}},ExpressionUUID->"f5d1c4de-c8d7-46b1-861d-\
db121ed55788"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qasm", "=", 
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<H\>\"", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumMeasurementOperator", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "}"}], "]"}], "[", 
   "\"\<QASM\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.865787445154277*^9, 
  3.865787455041814*^9}},ExpressionUUID->"4a01c933-82c2-404a-893b-\
1210bcaffaa7"],

Cell[BoxData["\<\"OPENQASM 3.0;\\nqubit[3] q;\\nbit[3] c;\\nU(pi/2, 0, pi) \
q[0];\\nctrl(1) @ negctrl(0) @ U(pi, 0, pi) q[0] q[1];\\nctrl(1) @ negctrl(0) \
@ U(pi, 0, pi) q[1] q[2];\\nc[0] = measure q[0];\\nc[1] = measure \
q[1];\\nc[2] = measure q[2];\"\>"], "Output",
 CellChangeTimes->{3.865787446731016*^9},
 CellLabel->
  "Out[1359]=",ExpressionUUID->"3a8dd2eb-1004-4c47-9026-03daec57c9e7"]
}, Open  ]],

Cell["Qiskit qasm needs some retouching, but works:", "Text",
 CellChangeTimes->{{3.865787402297957*^9, 3.865787423035582*^9}, {
  3.865787519735209*^9, 
  3.8657875213541718`*^9}},ExpressionUUID->"ab7d68ee-a229-40bf-9c4b-\
b230cf8557d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"\"\<H\>\"", ",", 
      RowBox[{"{", "1", "}"}]}], "]"}], ",", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"\"\<CNOT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"\"\<CNOT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
    RowBox[{"QuantumMeasurementOperator", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 CellLabel->
  "In[314]:=",ExpressionUUID->"8fb012fe-c42e-4467-b3e6-5a255c3b1782"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumCircuitOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 RGBColor[0.537254, 0.537254, 0.537254], 
                 Opacity[0.3], {{
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                   LineBox[{{0.375, -2}, {1.625, -2}}]}, {
                   LineBox[{{2.375, -2}, {2.625, -2}}]}, {
                   LineBox[{{0.375, -3}, {2.625, -3}}]}, {
                   LineBox[{{2.375, -1}, {3.625, -1}}]}, {
                   LineBox[{{3.375, -2}, {3.625, -2}}]}, {
                   LineBox[{{3.375, -3}, {3.625, -3}}]}, {
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   LineBox[{{4.375, -2}, {4.625, -2}}]}, {
                   LineBox[{{4.375, -3}, {4.625, -3}}]}}}, {{
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                   RoundingRadius -> 0.1}]}, {{{{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{1.625, -2.}, {1.85, -2.}}], 
                    LineBox[{{2.15, -2.}, {2.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    DiskBox[{2., -2.}, 0.15000000000000002`], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[1], 
                    LineBox[{{1.85, -2.}, {2.15, -2.}}], 
                    LineBox[{{2., -2.15}, {2., -1.85}}]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -1.09375}, {2., -1.85}}]}}}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
                    LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{2., -1.}, 0.09375]}}, {}}, {{{{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{2.625, -3.}, {2.85, -3.}}], 
                    LineBox[{{3.15, -3.}, {3.375, -3.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    DiskBox[{3., -3.}, 0.15000000000000002`], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[1], 
                    LineBox[{{2.85, -3.}, {3.15, -3.}}], 
                    LineBox[{{3., -3.15}, {3., -2.85}}]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -2.09375}, {3., -2.85}}]}}}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
                    LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{3., -2.}, 0.09375]}}, {}}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.15]]], 
                  
                  RectangleBox[{3.625, -3.375}, {4.375, -0.625}, {
                   RoundingRadius -> 0.1}], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -2.0772902651951615`}, {
                    4.212366961023424, -2.033206371273226}}], 
                   
                   LineBox[{{4.116904337848513, -2.040906597037244}, {
                    4.163666072987917, -1.9822692358521423`}}], 
                   
                   LineBox[{{4.073692193435111, -2.015088542646603}, {
                    4.103169070809155, -1.9461239597052442`}}], 
                   
                   LineBox[{{4.0251687373408105`, -2.0016969196685124`}, {
                    4.035236232277135, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9748312626591895`, -2.0016969196685124`}, {
                    3.9647637677228653`, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9263078065648895`, -2.015088542646603}, {
                    3.896830929190845, -1.9461239597052442`}}], 
                   
                   LineBox[{{3.8830956621514874`, -2.040906597037244}, {
                    3.8363339270120824`, -1.982269235852142}}], 
                   
                   LineBox[{{3.8483093135546973`, -2.0772902651951615`}, {
                    3.787633038976576, -2.033206371273226}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -2.1875}, {
                   4.17024643740233, -1.8533725534293621`}}]}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{"\"H\"", "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", "\"Computational\""}]],
              Annotation[#, 
              RightComposition["H", 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{2}, {}], "Computational"], 
              "Tooltip"]& ], 
            InterpretationBox[
             TagBox[
              
              GridBox[{{""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
             
             Grid[{{}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              Alignment -> {Left, Automatic}, Spacings -> {2, Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 RGBColor[0.537254, 0.537254, 0.537254], 
                 Opacity[0.3], {{
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   LineBox[{{1.375, -1}, {1.625, -1}}]}, {
                   LineBox[{{0.375, -2}, {1.625, -2}}]}, {
                   LineBox[{{2.375, -2}, {2.625, -2}}]}, {
                   LineBox[{{0.375, -3}, {2.625, -3}}]}, {
                   LineBox[{{2.375, -1}, {3.625, -1}}]}, {
                   LineBox[{{3.375, -2}, {3.625, -2}}]}, {
                   LineBox[{{3.375, -3}, {3.625, -3}}]}, {
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   LineBox[{{4.375, -2}, {4.625, -2}}]}, {
                   LineBox[{{4.375, -3}, {4.625, -3}}]}}}, {{
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]]], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, {
                   RoundingRadius -> 0.1}]}, {{{{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{1.625, -2.}, {1.85, -2.}}], 
                    LineBox[{{2.15, -2.}, {2.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    DiskBox[{2., -2.}, 0.15000000000000002`], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[1], 
                    LineBox[{{1.85, -2.}, {2.15, -2.}}], 
                    LineBox[{{2., -2.15}, {2., -1.85}}]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{2., -1.09375}, {2., -1.85}}]}}}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
                    LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{2., -1.}, 0.09375]}}, {}}, {{{{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{2.625, -3.}, {2.85, -3.}}], 
                    LineBox[{{3.15, -3.}, {3.375, -3.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]]], 
                    DiskBox[{3., -3.}, 0.15000000000000002`], 
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[1], 
                    LineBox[{{2.85, -3.}, {3.15, -3.}}], 
                    LineBox[{{3., -3.15}, {3., -2.85}}]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -2.09375}, {3., -2.85}}]}}}}, {{
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3], 
                    LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
                    LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.15]], 
                    Opacity[0.8]]], 
                    DiskBox[{3., -2.}, 0.09375]}}, {}}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.15]]], 
                  
                  RectangleBox[{3.625, -3.375}, {4.375, -0.625}, {
                   RoundingRadius -> 0.1}], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -2.0772902651951615`}, {
                    4.212366961023424, -2.033206371273226}}], 
                   
                   LineBox[{{4.116904337848513, -2.040906597037244}, {
                    4.163666072987917, -1.9822692358521423`}}], 
                   
                   LineBox[{{4.073692193435111, -2.015088542646603}, {
                    4.103169070809155, -1.9461239597052442`}}], 
                   
                   LineBox[{{4.0251687373408105`, -2.0016969196685124`}, {
                    4.035236232277135, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9748312626591895`, -2.0016969196685124`}, {
                    3.9647637677228653`, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9263078065648895`, -2.015088542646603}, {
                    3.896830929190845, -1.9461239597052442`}}], 
                   
                   LineBox[{{3.8830956621514874`, -2.040906597037244}, {
                    3.8363339270120824`, -1.982269235852142}}], 
                   
                   LineBox[{{3.8483093135546973`, -2.0772902651951615`}, {
                    3.787633038976576, -2.033206371273226}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -2.1875}, {
                   4.17024643740233, -1.8533725534293621`}}]}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{"\"H\"", "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"NOT\""], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", "\"Computational\""}]],
              Annotation[#, 
              RightComposition["H", 
               Subscript["C", "NOT"][{1}, {}], 
               Subscript["C", "NOT"][{2}, {}], "Computational"], 
              "Tooltip"]& ], 
            GridBox[{{""}, {
               RowBox[{
                 TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {4}, 0, {
         1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
          2^Rational[-1, 2], 2^Rational[-1, 2], 2^
           Rational[-1, 2], -2^Rational[-1, 2]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
          "ParameterSpec" -> {}|>]], {{1}, {1}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {16}, 0, {
         1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
       2}, {1, 2}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {16}, 0, {
         1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               
               Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                False], 1} -> 1, {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          Subscript["C", "NOT"][{2}, {}], "ParameterSpec" -> {}|>]], {{2, 
       3}, {2, 3}}], 
      Wolfram`QuantumFramework`QuantumMeasurementOperator[
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {64}, 0, {
          1, {{0, 7}, {{10}, {19}, {28}, {37}, {46}, {55}, {64}}}, {1, 2, 3, 
           4, 5, 6, 7}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "Computational",
            "ParameterSpec" -> {}|>]], {{1, 2, 3}, {1, 2, 3}}], {1, 2, 3}]}, 
    "Label" -> RightComposition["H", 
      Subscript["C", "NOT"][{1}, {}], 
      Subscript["C", "NOT"][{2}, {}], "Computational"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.866891596810988*^9, 3.866891598633238*^9}, 
   3.8750960524706373`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"3cf44c75-5ad1-43eb-9ae2-8ff68a8cab02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qasm", "=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"StringDelete", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"QuantumCircuitOperator", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"QuantumOperator", "[", 
            RowBox[{"\"\<H\>\"", ",", 
             RowBox[{"{", "1", "}"}]}], "]"}], ",", 
           RowBox[{"QuantumOperator", "[", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"QuantumOperator", "[", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
           RowBox[{"QuantumMeasurementOperator", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "}"}], "]"}], 
        "[", "\"\<Qiskit\>\"", "]"}], "[", "\"\<QASM\>\"", "]"}], ",", 
      "\"\<include \\\"qelib1.inc\\\";\>\""}], "]"}], ",", 
    RowBox[{"\"\<cx\>\"", "->", "\"\<cnot\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.865784895306419*^9, 3.865784910671301*^9}, {
  3.865785064653077*^9, 3.8657851497852373`*^9}},
 CellLabel->
  "In[315]:=",ExpressionUUID->"817b04c9-a179-46c2-8220-b3d25a064803"],

Cell[BoxData["\<\"OPENQASM 2.0;\\n\\nqreg q[3];\\ncreg c[3];\\nh q[0];\\ncnot \
q[0],q[1];\\ncnot q[1],q[2];\\nmeasure q[0] -> c[0];\\nmeasure q[1] -> \
c[2];\\nmeasure q[2] -> c[1];\\n\"\>"], "Output",
 CellChangeTimes->{
  3.865785009069522*^9, 3.86578507343547*^9, {3.865785119867197*^9, 
   3.86578515407537*^9}, 3.866891322461576*^9, 3.8750960586315117`*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"7fee1e89-079e-4c7b-a6d9-6b34d89c393e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RY\>\"", ",", 
      RowBox[{"\[Pi]", "/", "4"}]}], "}"}], "]"}], "[", "\"\<ZYZ\>\"", "]"}], 
  "==", 
  RowBox[{"QuantumOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<RY\>\"", ",", 
     RowBox[{"\[Pi]", "/", "4"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.865787944983121*^9, 3.865787954784862*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"d7e390ad-e0e5-4372-9d2e-6db8f2233539"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8657879473586473`*^9, 3.8657879552447987`*^9}, 
   3.87509606364266*^9},
 CellLabel->
  "Out[316]=",ExpressionUUID->"9205c38a-5493-4ed8-b3c3-af9f30115757"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qasm", "=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"StringDelete", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"QuantumCircuitOperator", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"QuantumOperator", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<RY\>\"", ",", 
              RowBox[{"\[Pi]", "/", "4"}]}], "}"}], "]"}], ",", 
           RowBox[{"QuantumMeasurementOperator", "[", "]"}]}], "}"}], "]"}], 
        "[", "\"\<Qiskit\>\"", "]"}], "[", "\"\<QASM\>\"", "]"}], ",", 
      "\"\<include \\\"qelib1.inc\\\";\>\""}], "]"}], ",", 
    RowBox[{"\"\<pi/4\>\"", "->", 
     RowBox[{"ToString", "[", 
      RowBox[{"Pi", "/", "4."}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.865787854736084*^9, 3.865787864494151*^9}, {
  3.865787962344771*^9, 3.86578796279066*^9}, {3.86578807131818*^9, 
  3.865788071548691*^9}, {3.865788195130471*^9, 3.865788208531568*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"eb168131-9340-4615-8ab8-40a0ae2686bd"],

Cell[BoxData["\<\"OPENQASM 2.0;\\n\\nqreg q[1];\\ncreg c[1];\\nry(0.785398) \
q[0];\\nmeasure q[0] -> c[0];\\n\"\>"], "Output",
 CellChangeTimes->{3.8657878689685593`*^9, 3.86578796718277*^9, 
  3.865788129419448*^9, 3.8657881803705683`*^9, 3.865788213210001*^9, 
  3.8750960655362473`*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"c67c10a8-e58f-4b3e-ac19-e31b2c9c2b69"]
}, Open  ]],

Cell["Create a task, replace DeviceArn for a different device:", "Text",
 CellChangeTimes->{{3.865787537085804*^9, 
  3.865787565621025*^9}},ExpressionUUID->"a1825008-ffbd-48df-9809-\
abb0b79b0bf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"task", "=", 
  RowBox[{"braket", "[", 
   RowBox[{"\"\<CreateQuantumTask\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<DeviceArn\>\"", "->", "deviceARN"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<DeviceParameters\>\"", "->", 
     RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<OutputS3Bucket\>\"", "->", "\"\<amazon-braket-wolfram\>\""}],
     ",", 
    RowBox[{"\"\<OutputS3KeyPrefix\>\"", "->", "\"\<tasks\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Shots\>\"", "->", "100"}], ",", 
    RowBox[{"\"\<Action\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<braketSchemaHeader\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
          "\"\<name\>\"", "->", "\"\<braket.ir.openqasm.program\>\""}], ",", 
          RowBox[{"\"\<version\>\"", "->", "\"\<1\>\""}]}], "|>"}]}], ",", 
       RowBox[{"\"\<source\>\"", "->", "qasm"}]}], "|>"}]}], ",", 
    RowBox[{"\"\<ValidateRequest\>\"", "->", "False"}], ",", 
    RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-west-1\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.865715607622096*^9, {3.865715657856832*^9, 3.865715685574893*^9}, {
   3.865715908969448*^9, 3.865715911059112*^9}, {3.8657464769232597`*^9, 
   3.8657464783877277`*^9}, {3.865746532336252*^9, 3.865746537101515*^9}, {
   3.865774050391601*^9, 3.8657740608839617`*^9}, 3.865774147326192*^9, {
   3.865774185264494*^9, 3.865774238923164*^9}, {3.8657747781081867`*^9, 
   3.86577478289659*^9}, {3.8657753019298887`*^9, 3.865775305676918*^9}, {
   3.865775470796884*^9, 3.865775487894023*^9}, 3.8657849615071983`*^9, {
   3.86578499412759*^9, 3.865784998736903*^9}, {3.865785220751919*^9, 
   3.865785220910696*^9}, {3.865787611599177*^9, 3.8657876163359623`*^9}, {
   3.865787875611175*^9, 3.8657878772838297`*^9}, {3.8657879097402153`*^9, 
   3.865787915164289*^9}, {3.865788145902522*^9, 3.865788147062911*^9}, {
   3.8657882321191072`*^9, 3.865788238117799*^9}, {3.865790241011203*^9, 
   3.865790241310337*^9}, {3.866891354694018*^9, 3.8668913570198097`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"dffb62bf-50f1-40c1-bbed-66bb1e9e6e4d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "QuantumTaskArn" -> 
       "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-8a60-48d3-\
b038-7128d78b497d", "Status" -> "INITIALIZED"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-\
8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["INITIALIZED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{760., {33.634033203125, 39.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{760., {33.634033203125, 39.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.865787917981575*^9, 3.865787977944253*^9, {3.865788150893732*^9, 
   3.865788171590229*^9}, {3.86578822318712*^9, 3.865788243735606*^9}, {
   3.865790239745194*^9, 3.865790245717968*^9}, 3.866891371712504*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"d220a62d-bf37-4a62-b1ab-2d443a2f1a94"]
}, Open  ]],

Cell["List tasks:", "Text",
 CellChangeTimes->{{3.865787579599133*^9, 
  3.865787583777236*^9}},ExpressionUUID->"5d187301-cd3a-4f5c-807f-\
8c595c784801"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"braket", "[", 
   RowBox[{"\"\<SearchQuantumTasks\>\"", ",", 
    RowBox[{"\"\<Filters\>\"", "->", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-west-1\>\""}]}], "]"}], 
  "[", "\"\<QuantumTasks\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8657853169979677`*^9, 3.8657853628064957`*^9}, {
  3.865790250202272*^9, 3.865790250389065*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"809f8b0d-51e4-42b6-9bcf-b80ca6511622"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "CreatedAt" -> 
        DateObject[{2022, 7, 15, 16, 29, 31.732}, "Instant", "Gregorian", 0.],
         "DeviceArn" -> "arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
        "EndedAt" -> 
        DateObject[{2022, 7, 15, 16, 29, 36.844}, "Instant", "Gregorian", 0.],
         "OutputS3Bucket" -> "amazon-braket-wolfram", "OutputS3Directory" -> 
        "tasks/49be0e57-8a60-48d3-b038-7128d78b497d", "QuantumTaskArn" -> 
        "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-8a60-\
48d3-b038-7128d78b497d", "Shots" -> 100, "Status" -> "COMPLETED", 
        "Tags" -> <||>|>, <|
       "CreatedAt" -> 
        DateObject[{2022, 7, 2, 22, 37, 26.285}, "Instant", "Gregorian", 0.], 
        "DeviceArn" -> "arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
        "EndedAt" -> 
        DateObject[{2022, 7, 3, 15, 0, 11.243}, "Instant", "Gregorian", 0.], 
        "OutputS3Bucket" -> "amazon-braket-wolfram", "OutputS3Directory" -> 
        "tasks/fbdc5d7a-8a5e-4008-bf15-b8804b2d0ca2", "QuantumTaskArn" -> 
        "arn:aws:braket:us-west-1:186494141299:quantum-task/fbdc5d7a-8a5e-\
4008-bf15-b8804b2d0ca2", "Shots" -> 100, "Status" -> "COMPLETED", 
        "Tags" -> <||>|>, <|
       "CreatedAt" -> 
        DateObject[{2022, 7, 2, 0, 30, 42.878}, "Instant", "Gregorian", 0.], 
        "DeviceArn" -> "arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
        "EndedAt" -> 
        DateObject[{2022, 7, 2, 1, 7, 43.607}, "Instant", "Gregorian", 0.], 
        "OutputS3Bucket" -> "amazon-braket-us-west-1-186494141299", 
        "OutputS3Directory" -> "tasks/1d51b113-350f-4a97-bfed-c42770d3a57f", 
        "QuantumTaskArn" -> 
        "arn:aws:braket:us-west-1:186494141299:quantum-task/1d51b113-350f-\
4a97-bfed-c42770d3a57f", "Shots" -> 1000, "Status" -> "CANCELLED", 
        "Tags" -> <||>|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "CreatedAt"} -> 
        1, {All, "DeviceArn"} -> 1, {All, "EndedAt"} -> 
        1, {All, "OutputS3Bucket"} -> 1, {All, "OutputS3Directory"} -> 
        1, {All, "QuantumTaskArn"} -> 1, {All, "Shots"} -> 1, {All, "Status"} -> 
        1, {All, "Tags"} -> 2|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "CreatedAt" -> TypeSystem`PackageScope`AtomShape[75], "DeviceArn" -> 
            TypeSystem`PackageScope`AtomShape[462.], "EndedAt" -> 
            TypeSystem`PackageScope`AtomShape[75], "OutputS3Bucket" -> 
            TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            "OutputS3Directory" -> 
            TypeSystem`PackageScope`AtomShape[470.40000000000003`], 
            "QuantumTaskArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Shots" -> TypeSystem`PackageScope`AtomShape[34], "Status" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "Tags" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`UnknownShape[True], 
                TypeSystem`PackageScope`UnknownShape[False]]], 0, 
              DirectedInfinity[1], {All, "Tags"}]|>], 
          DirectedInfinity[1], 9, {All}]], 3, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "CreatedAt", "DeviceArn", "EndedAt", "OutputS3Bucket", 
         "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "arn:aws:braket:::device/qpu/rigetti/Aspen-11"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
         TypeSystem`UnknownType, TypeSystem`UnknownType, 
          TypeSystem`AnyLength]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "CreatedAt"} -> 
        1, {All, "DeviceArn"} -> 1, {All, "EndedAt"} -> 
        1, {All, "OutputS3Bucket"} -> 1, {All, "OutputS3Directory"} -> 
        1, {All, "QuantumTaskArn"} -> 1, {All, "Shots"} -> 1, {All, "Status"} -> 
        1, {All, "Tags"} -> 2|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "CreatedAt" -> TypeSystem`PackageScope`AtomShape[75], "DeviceArn" -> 
            TypeSystem`PackageScope`AtomShape[462.], "EndedAt" -> 
            TypeSystem`PackageScope`AtomShape[75], "OutputS3Bucket" -> 
            TypeSystem`PackageScope`AtomShape[403.20000000000005`], 
            "OutputS3Directory" -> 
            TypeSystem`PackageScope`AtomShape[470.40000000000003`], 
            "QuantumTaskArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "Shots" -> TypeSystem`PackageScope`AtomShape[34], "Status" -> 
            TypeSystem`PackageScope`AtomShape[100.80000000000001`], "Tags" -> 
            TypeSystem`PackageScope`Limited[
              TypeSystem`PackageScope`ColumnShape[
               TypeSystem`PackageScope`KeyValueShape[
                TypeSystem`PackageScope`UnknownShape[True], 
                TypeSystem`PackageScope`UnknownShape[False]]], 0, 
              DirectedInfinity[1], {All, "Tags"}]|>], 
          DirectedInfinity[1], 9, {All}]], 3, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "CreatedAt", "DeviceArn", "EndedAt", "OutputS3Bucket", 
         "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[
          TypeSystem`Enumeration[
          "arn:aws:braket:::device/qpu/rigetti/Aspen-11"]], 
         TypeSystem`Atom[DateObject], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
         TypeSystem`UnknownType, TypeSystem`UnknownType, 
          TypeSystem`AnyLength]}], 3], "Path" -> {}, "DisplayedRowCount" -> 3,
      "DisplayedColumnCount" -> 9, "DataRowCount" -> 3, "DataColumnCount" -> 
     9, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CreatedAt", 
                  Style[
                  "CreatedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "CreatedAt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "CreatedAt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EndedAt", 
                  Style[
                  "EndedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "EndedAt"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "EndedAt"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Bucket", 
                  Style[
                  "OutputS3Bucket", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "OutputS3Bucket"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "OutputS3Bucket"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Directory", 
                  Style[
                  "OutputS3Directory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "OutputS3Directory"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "OutputS3Directory"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "QuantumTaskArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "QuantumTaskArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Shots", 
                  Style[
                  "Shots", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Shots"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Shots"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Status"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Status"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tags", 
                  Style[
                  "Tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Tags"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Tags"}, "ColumnHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Center, Baseline}], 
            SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 15 Jul 2022 16:29:31\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{462., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 15 Jul 2022 16:29:36\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["tasks/49be0e57-8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-\
8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["COMPLETED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 2 Jul 2022 22:37:26\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{462., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sun 3 Jul 2022 15:00:11\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["tasks/fbdc5d7a-8a5e-4008-bf15-b8804b2d0ca2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-1:186494141299:quantum-task/fbdc5d7a-\
8a5e-4008-bf15-b8804b2d0ca2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["COMPLETED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 2 Jul 2022 00:30:42\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{462., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Sat 2 Jul 2022 01:07:43\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["amazon-braket-us-west-1-186494141299", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["tasks/1d51b113-350f-4a97-bfed-c42770d3a57f", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-1:186494141299:quantum-task/1d51b113-\
350f-4a97-bfed-c42770d3a57f", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["CANCELLED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Spacer[10], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Spacer[10], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5], 8}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2439., {60.634033203125, 66.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2439., {60.634033203125, 66.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.865785319985561*^9, 3.865785363748437*^9}, 
   3.865787663851788*^9, 3.865787893217578*^9, {3.865788253171262*^9, 
   3.8657882631620398`*^9}, 3.865788356577854*^9, 3.865790252433765*^9, {
   3.866891376461112*^9, 3.8668914013138638`*^9}},
 CellLabel->
  "Out[163]=",ExpressionUUID->"aca5510f-1db2-48fa-aa05-e7bb416bb88e"]
}, Open  ]],

Cell["Get detailed information on a task:", "Text",
 CellChangeTimes->{{3.865787590566513*^9, 
  3.8657875996048937`*^9}},ExpressionUUID->"951abce8-3916-4f4d-9566-\
4d737c1c2ad4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<GetQuantumTask\>\"", ",", 
   RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
    RowBox[{"task", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-west-1\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.865785181442865*^9, 3.865785182426072*^9}, {
  3.865787620367635*^9, 3.865787620502542*^9}, {3.86579027738731*^9, 
  3.865790277572442*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"5c242206-bfb0-4bda-a75f-02b08d6a5af5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "CreatedAt" -> 
       DateObject[{2022, 7, 15, 16, 29, 31.732}, "Instant", "Gregorian", 0.], 
       "DeviceArn" -> "arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
       "DeviceParameters" -> <|
        "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.rigetti.rigetti_device_parameters", 
           "version" -> "1"|>, 
         "paradigmParameters" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.gate_model_parameters", "version" -> 
             "1"|>, "qubitCount" -> 3, "disableQubitRewiring" -> False|>|>, 
       "EndedAt" -> 
       DateObject[{2022, 7, 15, 16, 29, 36.844}, "Instant", "Gregorian", 0.], 
       "FailureReason" -> Null, "HybridJobArn" -> Null, "Id" -> 
       "49be0e57-8a60-48d3-b038-7128d78b497d", "OutputS3Bucket" -> 
       "amazon-braket-wolfram", "OutputS3Directory" -> 
       "tasks/49be0e57-8a60-48d3-b038-7128d78b497d", "QuantumTaskArn" -> 
       "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-8a60-48d3-\
b038-7128d78b497d", "Shots" -> 100, "Status" -> "COMPLETED", "Tags" -> <||>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[492.80000000000007`], {
         "DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[235.20000000000002`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 2], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[492.80000000000007`], {
         "DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[235.20000000000002`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
         TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyLength], 2], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CreatedAt", 
                  Style[
                  "CreatedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["CreatedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 15 Jul 2022 16:29:31\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:::device/qpu/rigetti/Aspen-11", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{492.80000000000007`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceParameters", 
                  Style[
                  "DeviceParameters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EndedAt", 
                  Style[
                  "EndedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EndedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Fri 15 Jul 2022 16:29:36\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FailureReason", 
                  Style[
                  "FailureReason", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FailureReason"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HybridJobArn", 
                  Style[
                  "HybridJobArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HybridJobArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Id", 
                  Style[
                  "Id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["49be0e57-8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Bucket", 
                  Style[
                  "OutputS3Bucket", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Bucket"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Directory", 
                  Style[
                  "OutputS3Directory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Directory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tasks/49be0e57-8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-\
8a60-48d3-b038-7128d78b497d", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Shots", 
                  Style[
                  "Shots", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Shots"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["COMPLETED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tags", 
                  Style[
                  "Tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[<||>, ShowStringCharacters -> False], 
                  Style[
                   Style[<||>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{723., {182.134033203125, 187.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{723., {182.134033203125, 187.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.865775574265283*^9, 3.8657757405319557`*^9, 3.865775888704936*^9, 
   3.865776225686646*^9, 3.8657771447470503`*^9, 3.865784435891178*^9, {
   3.865785170470769*^9, 3.8657851834622393`*^9}, {3.865785226756228*^9, 
   3.865785229826985*^9}, 3.865788658230769*^9, 3.8657896787981997`*^9, {
   3.865790275019918*^9, 3.86579027840632*^9}, 3.8657904035082703`*^9, 
   3.8658005606173887`*^9, 3.8668914142634687`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"d8d075cd-751a-4755-815e-fdd209e87f83"]
}, Open  ]],

Cell["Results are saved in S3", "Text",
 CellChangeTimes->{{3.865787630299123*^9, 
  3.865787634537504*^9}},ExpressionUUID->"16b39344-68a8-4442-9911-\
f1eda7cf0a06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputPath", "=", 
  RowBox[{
   RowBox[{"braket", "[", 
    RowBox[{"\"\<GetQuantumTask\>\"", ",", 
     RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
      RowBox[{"task", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
     RowBox[{"\"\<RequestRegion\>\"", "\[Rule]", "\"\<us-west-1\>\""}]}], 
    "]"}], "[", "\"\<OutputS3Directory\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.865774288910781*^9, 3.865774302655974*^9}, {
   3.8657755067819777`*^9, 3.865775530692313*^9}, 3.865785191773793*^9, {
   3.865787623282075*^9, 3.865787623431526*^9}, 3.8657876889328413`*^9, {
   3.865788671183608*^9, 3.865788674620947*^9}, {3.8668914565942097`*^9, 
   3.866891462956624*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"937e2418-cb77-4454-8dd4-cc7ddac7f998"],

Cell[BoxData["\<\"tasks/49be0e57-8a60-48d3-b038-7128d78b497d\"\>"], "Output",
 CellChangeTimes->{{3.866891457229656*^9, 3.8668914636679688`*^9}},
 CellLabel->
  "Out[168]=",ExpressionUUID->"c313efac-c65e-414e-8fd3-310170727ab6"]
}, Open  ]],

Cell["This is the output from QPU device task:", "Text",
 CellChangeTimes->{{3.865787691478681*^9, 
  3.865787701259473*^9}},ExpressionUUID->"6acdc0ce-13f0-4ba4-b446-\
2f2b130277cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "outputPath", "=", "\"\<tasks/51185477-9f2d-4fe1-b08a-efc37db0996a\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.865785380392509*^9, 3.8657853828273277`*^9}},
 CellLabel->
  "In[1347]:=",ExpressionUUID->"2c71c779-428d-42ef-9a3e-a3d9be240c74"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{"ImportByteArray", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"s3", "[", 
      RowBox[{"\"\<GetObject\>\"", ",", 
       RowBox[{"\"\<Bucket\>\"", "->", "\"\<amazon-braket-wolfram\>\""}], ",", 
       RowBox[{"\"\<Key\>\"", "->", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"outputPath", ",", "\"\<results.json\>\""}], "}"}], "]"}]}],
        ",", 
       RowBox[{"\"\<RequestRegion\>\"", "\[Rule]", "\"\<us-west-1\>\""}]}], 
      "]"}], "[", "\"\<Body\>\"", "]"}], ",", "\"\<RawJSON\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8657896856053753`*^9, 3.86578968648603*^9}, {
  3.866891477612525*^9, 3.866891479185161*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"e25d0ed1-dd8f-4c6f-bab3-03c84266f5e4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"name\"\>", 
       "\[Rule]", "\<\"braket.task_result.gate_model_task_result\"\>"}], ",", 
      
      RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"measurements\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"resultTypes\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"\<\"measuredQubits\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], ",", 
   RowBox[{"\<\"taskMetadata\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"name\"\>", 
          "\[Rule]", "\<\"braket.task_result.task_metadata\"\>"}], ",", 
         RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"id\"\>", 
       "\[Rule]", \
"\<\"arn:aws:braket:us-west-1:186494141299:quantum-task/49be0e57-8a60-48d3-\
b038-7128d78b497d\"\>"}], ",", 
      RowBox[{"\<\"shots\"\>", "\[Rule]", "100"}], ",", 
      RowBox[{"\<\"deviceId\"\>", 
       "\[Rule]", "\<\"arn:aws:braket:::device/qpu/rigetti/Aspen-11\"\>"}], 
      ",", 
      RowBox[{"\<\"deviceParameters\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            
            RowBox[{"\<\"name\"\>", 
             "\[Rule]", \
"\<\"braket.device_schema.rigetti.rigetti_device_parameters\"\>"}], ",", 
            RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"paradigmParameters\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
             RowBox[{"\[LeftAssociation]", 
              RowBox[{
               
               RowBox[{"\<\"name\"\>", 
                "\[Rule]", \
"\<\"braket.device_schema.gate_model_parameters\"\>"}], ",", 
               RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
              "\[RightAssociation]"}]}], ",", 
            RowBox[{"\<\"qubitCount\"\>", "\[Rule]", "3"}], ",", 
            RowBox[{"\<\"disableQubitRewiring\"\>", "\[Rule]", "False"}]}], 
           "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"createdAt\"\>", 
       "\[Rule]", "\<\"2022-07-15T16:29:31.732Z\"\>"}], ",", 
      RowBox[{"\<\"endedAt\"\>", 
       "\[Rule]", "\<\"2022-07-15T16:29:36.844Z\"\>"}], ",", 
      RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"COMPLETED\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"additionalMetadata\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"action\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            
            RowBox[{"\<\"name\"\>", 
             "\[Rule]", "\<\"braket.ir.openqasm.program\"\>"}], ",", 
            RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"source\"\>", 
          "\[Rule]", "\<\"OPENQASM 2.0;\\n\\nqreg q[3];\\ncreg c[3];\\nh \
q[0];\\ncnot q[0],q[1];\\ncnot q[1],q[2];\\nmeasure q[0] -> c[2];\\nmeasure \
q[1] -> c[1];\\nmeasure q[2] -> c[0];\\n\"\>"}]}], "\[RightAssociation]"}]}], 
      ",", 
      RowBox[{"\<\"rigettiMetadata\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"braketSchemaHeader\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            
            RowBox[{"\<\"name\"\>", 
             "\[Rule]", "\<\"braket.task_result.rigetti_metadata\"\>"}], ",", 
            
            RowBox[{"\<\"version\"\>", "\[Rule]", "\<\"1\"\>"}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"nativeQuilMetadata\"\>", "\[Rule]", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{"\<\"finalRewiring\"\>", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "35", ",", "36", ",", "37", ",", "0", ",", "1", ",", "2", ",", 
               "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "10", ",", 
               "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", 
               ",", "17", ",", "20", ",", "21", ",", "22", ",", "23", ",", 
               "24", ",", "25", ",", "26", ",", "27", ",", "30", ",", "31", 
               ",", "32", ",", "33", ",", "34", ",", "42", ",", "43", ",", 
               "44", ",", "45", ",", "46", ",", "47", ",", "8", ",", "9", ",",
                "18", ",", "19", ",", "28", ",", "29", ",", "38", ",", "39", 
               ",", "40", ",", "41"}], "}"}]}], ",", 
            RowBox[{"\<\"gateDepth\"\>", "\[Rule]", "15"}], ",", 
            RowBox[{"\<\"gateVolume\"\>", "\[Rule]", "20"}], ",", 
            RowBox[{"\<\"multiQubitGateDepth\"\>", "\[Rule]", "3"}], ",", 
            
            RowBox[{"\<\"programDuration\"\>", "\[Rule]", 
             "800.0799999999999`"}], ",", 
            
            RowBox[{"\<\"programFidelity\"\>", "\[Rule]", 
             "0.968598390218447`"}], ",", 
            
            RowBox[{"\<\"qpuRuntimeEstimation\"\>", "\[Rule]", 
             "214.6877899169922`"}], ",", 
            RowBox[{"\<\"topologicalSwaps\"\>", "\[Rule]", "0"}]}], 
           "\[RightAssociation]"}]}], ",", 
         RowBox[{"\<\"compiledProgram\"\>", 
          "\[Rule]", "\<\"DECLARE ro BIT[3]\\nPRAGMA INITIAL_REWIRING \
\\\"PARTIAL\\\"\\nRESET\\nRZ(pi/2) 35\\nRX(pi/2) 35\\nRZ(pi) 35\\nRZ(pi) \
36\\nXY(pi) 35 36\\nRZ(-3*pi/2) 35\\nRX(pi/2) 35\\nRZ(3*pi/2) 35\\nXY(pi) 35 \
36\\nRZ(-pi) 36\\nRX(pi/2) 36\\nRZ(3.2890690581209796) 36\\nRZ(-3*pi/2) \
37\\nRX(pi/2) 37\\nRZ(4.564912575853503) 37\\nCZ 36 \
37\\nRZ(-0.14747640453118566) 36\\nRZ(-1.4233199222637105) 37\\nRX(pi/2) \
37\\nRZ(pi/2) 37\\nMEASURE 37 ro[0]\\nMEASURE 36 ro[1]\\nMEASURE 35 \
ro[2]\\n\"\>"}]}], "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.865787178668919*^9, 3.865789688767181*^9, {3.866891467360181*^9, 
   3.866891480486205*^9}},
 CellLabel->
  "Out[170]=",ExpressionUUID->"be87e4e0-8c84-4d63-9d0b-f01767725fa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["qasm"], "Input",
 CellChangeTimes->{{3.866891587167139*^9, 3.8668915877065487`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"31ec32e9-5555-42bb-a599-e36f22c6321e"],

Cell[BoxData["\<\"OPENQASM 2.0;\\n\\nqreg q[3];\\ncreg c[3];\\nh q[0];\\ncnot \
q[0],q[1];\\ncnot q[1],q[2];\\nmeasure q[0] -> c[2];\\nmeasure q[1] -> \
c[1];\\nmeasure q[2] -> c[0];\\n\"\>"], "Output",
 CellChangeTimes->{3.866891588034573*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"2deb0e09-1e0f-4506-9c70-f67a77cd1772"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Counts", "@", 
  RowBox[{"results", "[", "\"\<measurements\>\"", "]"}]}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"81ef77de-16b0-4234-8618-e9a532611881"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}], "\[Rule]", "23"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "1"}], "}"}], "\[Rule]", "10"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", "23"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}], "\[Rule]", "20"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "0"}], "}"}], "\[Rule]", "12"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], "\[Rule]", "8"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1"}], "}"}], "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.866891556675704*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"14583a82-e1ff-4c8a-a70c-1c1f20e86c1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"KeySort", "@", 
    RowBox[{"Counts", "@", 
     RowBox[{"results", "[", "\"\<measurements\>\"", "]"}]}]}], ",", 
   RowBox[{"ChartLabels", "->", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.866891486198303*^9, 3.8668915136934843`*^9}, {
  3.866891566798118*^9, 3.866891572297471*^9}, {3.866891624848152*^9, 
  3.8668916272576714`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"1fbec201-fd72-4eb6-a501-1bbcb6c24f60"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 20.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{26.337461455170317`, 
            98.70780589275563}, {-144.5365632791442, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             23.}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{105.98070835816033`, 
            178.35105279574563`}, {-195.6724740535573, 196.86950855027638`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 2.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.62395526115034`, 257.99429969873563`}, {
            162.27890136733433`, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 2.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{265.2672021641403, 337.63754660172566`}, {
            162.27890136733433`, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 8.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{344.91044906713034`, 417.28079350471563`}, {
            60.007079818508146`, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 10.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{424.5536959701204, 496.92404040770566`}, {
            25.916472635566095`, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 12.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{504.1969428731104, 
            576.5672873106956}, {-8.174134547375985, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 23.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{583.8401897761004, 
            656.2105342136856}, {-195.6724740535573, 196.86950855027638`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5487982520029133, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}], 
        LineBox[{{8.451201747997086, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{1.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
             0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
             0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
             0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
             0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
             0.}]}], 
          LineBox[{{3.5487982520029133`, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
             0.}]}], LineBox[{{4.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 0.}]}],
           LineBox[{{4.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 0.}]}],
           LineBox[{{5.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 0.}]}],
           LineBox[{{5.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 0.}]}],
           LineBox[{{6.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 0.}]}],
           LineBox[{{6.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 0.}]}],
           LineBox[{{7.451201747997087, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 0.}]}],
           LineBox[{{7.548798252002913, 0.}, 
            Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
             0.}]}]}, {}}}, 
       StyleBox[
        {Thickness[Tiny], InsetBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], 
          Offset[{0, -2}, {1., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], 
          Offset[{0, -2}, {2., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], 
          Offset[{0, -2}, {3., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "1"}], "}"}], 
          Offset[{0, -2}, {4., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}], 
          Offset[{0, -2}, {5., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "1"}], "}"}], 
          Offset[{0, -2}, {6., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], 
          Offset[{0, -2}, {7., 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}], InsetBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}], 
          Offset[{0, -2}, {7.999999999999999, 0.}], NCache[
          ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
          Automatic, {1, 0}]}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{683.44140625, Automatic},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.866891487459333*^9, 3.866891513961433*^9}, 
   3.8668916274991617`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"184bf70e-5759-43f7-98e7-4ed586ab9e78"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<H\>\"", ",", 
       RowBox[{"{", "1", "}"}]}], "]"}], ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<CNOT\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{"\"\<CNOT\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
     RowBox[{"QuantumMeasurementOperator", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], "}"}], "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{3.8668916078518972`*^9},
 CellLabel->
  "In[182]:=",ExpressionUUID->"27e86bc8-770b-4ed6-ae09-3d5b463a2215"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13., {0., 13.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 
                0.}}]}, {{}, {
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  Opacity[0.644], 
                  Thickness[Small]}], {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.5}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{2.4323196778584397`, 
                    8.023709451437272}, {-17.25955810546875, 
                    10.496337890625}}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["1", "2"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False], 
                    Rational[1, 2]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                   StyleBox["0.5`", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0.5, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{7.93583312347889, 
                    13.527222897057722`}, {9.871337890625, 10.496337890625}}],
                     "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.5487982520029133`, 0.}, {
                    3.4512017479970867`, 0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{13.439346569099339`, 
                    19.03073634267817}, {9.871337890625, 10.496337890625}}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.5487982520029133`, 0.}, {
                    4.451201747997087, 0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{18.942860014719788`, 
                    24.53424978829862}, {9.871337890625, 10.496337890625}}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{24.446373460340237`, 
                    30.03776323391907}, {9.871337890625, 10.496337890625}}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{29.949886905960685`, 
                    35.54127667953952}, {9.871337890625, 10.496337890625}}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{35.45340035158114, 
                    41.04479012515997}, {9.871337890625, 10.496337890625}}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                    0.5}, "RoundingRadius" -> 0]}, 
                    ImageSizeCache -> {{40.95691379720159, 
                    46.54830357078042}, {-17.25955810546875, 
                    10.496337890625}}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["1", "2"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False], 
                    Rational[1, 2]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                   StyleBox["0.5`", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0.5, {}], 
                   "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}}, AspectRatio -> 
             NCache[GoldenRatio^(-1), 0.6180339887498948], 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.39075018208302986`, 0.}, 
             CoordinatesToolOptions :> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, DisplayFunction -> Identity, 
             Frame -> {{True, False}, {True, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{All, All}, {All, All}}, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {None, 
                Scaled[0.05]}}, Ticks -> {None, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               Opacity[0], 
               
               PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 
                0.}}]}, {{}, {
                RGBColor[0.982864, 0.7431472, 0.3262672], 
                EdgeForm[{
                  Opacity[0.644], 
                  Thickness[Small]}], {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.5}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["1", "2"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False], 
                    Rational[1, 2]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                   StyleBox["0.5`", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0.5, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.5487982520029133`, 0.}, {
                    3.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.5487982520029133`, 0.}, {
                    4.451201747997087, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                    0.}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False]]}, {"0"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False], 0}], {}], "Tooltip"]& ], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                   StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0, {}], "Tooltip"]& ]}, {
                 RGBColor[0.982864, 0.7431472, 0.3262672], 
                 EdgeForm[{
                   Opacity[0.644], 
                   Thickness[Small]}], 
                 TagBox[
                  TooltipBox[
                   TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                    0.5}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["1", "2"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False], 
                    Rational[1, 2]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.5]& , TagBoxNote -> "0.5"], 
                   StyleBox["0.5`", {}, StripOnInput -> False]], Annotation[#, 
                   Style[0.5, {}], 
                   "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}}, AspectRatio -> 
             NCache[GoldenRatio^(-1), 0.6180339887498948], 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0.39075018208302986`, 0.}, 
             CoordinatesToolOptions :> {"DisplayFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& )}, DisplayFunction -> Identity, 
             Frame -> {{True, False}, {True, False}}, 
             FrameLabel -> {{None, None}, {None, None}}, 
             FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], PlotRange -> {{All, All}, {All, All}}, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {None, 
                Scaled[0.05]}}, Ticks -> {None, Automatic}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"1.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity"], "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {64}, 0, {
       1, {{0, 2}, {{1}, {64}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[2, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[3, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[4, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[5, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[6, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[7, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
        RightComposition["Computational", "H", 
          "Controlled"["NOT", {1}, {}], 
          "Controlled"["NOT", {2}, {}], "Computational"], 
        "ParameterSpec" -> {}|>]], {{0, 1, 2, 3}, {}}], {1, 2, 3}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.866891608590474*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"9d4977bf-f4b4-47c7-9071-affdc28c070b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<H\>\"", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}], "[", "]"}], 
  "==", 
  RowBox[{"QuantumState", "[", "\"\<GHZ\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8668916523859*^9, 3.8668916572421427`*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"926a903f-d8b4-4f94-ac3e-781c1f5e30dc"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.866891658182839*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"43cbfa5e-e19c-49e4-9da7-f77d06afab18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<ProbabilityPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8668916161387157`*^9, 3.866891619377894*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"f039f680-8033-463c-bb65-876848c36bdc"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
     Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 0.5},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{28.501902231480837`, 
            75.1720375531617}, {-136.18377266927843`, 115.61055568214238`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5]& ,
         TagBoxNote->"0.5"],
        StyleBox["0.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 0.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{79.52689883896092, 126.19703416064179`}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 0.},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{130.551895446441, 177.22203076812187`}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 0.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{181.57689205392109`, 228.24702737560193`}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 0.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{232.60188866140115`, 279.2720239830821}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 0.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{283.62688526888127`, 330.2970205905621}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 0.}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{334.65188187636136`, 381.3220171980422}, {
            114.98555568214239`, 115.61055568214239`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.]& ,
         TagBoxNote->"0."],
        StyleBox["0.`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0., {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[0.644], 
      Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 0.5}, 
             "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{385.67687848384145`, 
            432.34701380552224`}, {-136.18377266927843`, 
            115.61055568214238`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.5]& ,
         TagBoxNote->"0.5"],
        StyleBox["0.5`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.5, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.39075018208302986`, 0.}, {8.612410779315367, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{8.451201747997086, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {8.451201747997086, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}], LineBox[{{4.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.451201747997087, 
              0.}]}], LineBox[{{4.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {4.548798252002913, 
              0.}]}], LineBox[{{5.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.451201747997087, 
              0.}]}], LineBox[{{5.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {5.548798252002913, 
              0.}]}], LineBox[{{6.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.451201747997087, 
              0.}]}], LineBox[{{6.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {6.548798252002913, 
              0.}]}], LineBox[{{7.451201747997087, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.451201747997087, 
              0.}]}], LineBox[{{7.548798252002913, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {7.548798252002913, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {5., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {6., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {7., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]},
              "Ket"],
             Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {7.999999999999999, 0.}], 
           NCache[ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.39075018208302986`, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{3.866891619761554*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"4f716ecf-1047-46f9-800d-e066ab5267d9"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrivateNotebookOptions->{"CloudPublishPath"->"/Published/AWS_Braket.nb"},
TaggingRules-><|
 "SaveDialogDataSavesBlog" -> False, 
  "CloudPublishDialog" -> <|
   "PanelSelection" -> "Completed", "InProgress" -> False|>|>,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 21, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"99e18315-2c84-4391-9fa1-690f53e2735d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 342, 6, 30, "Input",ExpressionUUID->"24cd2505-9c69-47a2-95b9-a54be1d9b3b7"],
Cell[906, 28, 364, 8, 30, "Input",ExpressionUUID->"3720ef1f-0383-4187-a73c-3aa4d36f1cb4"],
Cell[1273, 38, 400, 9, 30, "Input",ExpressionUUID->"ba50003f-3838-4db1-9b6d-3198bdde6ba5"],
Cell[CellGroupData[{
Cell[1698, 51, 181, 2, 30, "Input",ExpressionUUID->"4e11eb65-6fe6-47c3-a901-64350714e30a"],
Cell[1882, 55, 19863, 356, 67, "Output",ExpressionUUID->"6d575556-5008-4614-9bae-e5afe1a8d205"]
}, Open  ]],
Cell[21760, 414, 166, 3, 35, "Text",ExpressionUUID->"35e2bf04-539e-4fcc-9e69-ca98d359719c"],
Cell[CellGroupData[{
Cell[21951, 421, 710, 13, 30, "Input",ExpressionUUID->"7a8f0265-6eec-45c0-a953-d66a2fc42fa4"],
Cell[22664, 436, 120256, 1990, 227, "Output",ExpressionUUID->"eeb1811c-7002-48b1-949c-93dbf9262f79"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142957, 2431, 382, 9, 30, "Input",ExpressionUUID->"61124e95-0297-4d59-b534-3a7f8b1c07f5"],
Cell[143342, 2442, 111747, 1843, 201, "Output",ExpressionUUID->"44c3ca11-9806-45bf-983d-aff667fe64e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255126, 4290, 386, 9, 30, "Input",ExpressionUUID->"64b33517-ede0-4587-bb6b-f34f12edb526"],
Cell[255515, 4301, 488352, 7020, 281, "Output",ExpressionUUID->"6ac37c1f-6323-4bf6-b366-84ac11d0de6a"]
}, Open  ]],
Cell[743882, 11324, 154, 3, 35, "Text",ExpressionUUID->"3f033589-b902-4382-afbb-0ff2bd4c722e"],
Cell[CellGroupData[{
Cell[744061, 11331, 400, 9, 30, "Input",ExpressionUUID->"7867c909-780b-40fa-be57-549e2bf6c37b"],
Cell[744464, 11342, 66401, 1119, 147, "Output",ExpressionUUID->"4554a150-f931-4d30-a195-b1db9564beb0"]
}, Open  ]],
Cell[810880, 12464, 254, 4, 35, "Text",ExpressionUUID->"dc24baf7-aa5f-4037-af12-ab17bf9cac94"],
Cell[CellGroupData[{
Cell[811159, 12472, 602, 16, 30, "Input",ExpressionUUID->"e3fc840f-70e5-4315-b37a-cf3191f10ac1"],
Cell[811764, 12490, 85564, 1577, 431, "Output",ExpressionUUID->"4d6bf804-d691-4222-aee0-094e9386c6e8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897365, 14072, 708, 18, 30, "Input",ExpressionUUID->"c9043744-af22-4829-95d2-f9bc9aaa3b9a"],
Cell[898076, 14092, 44369, 804, 201, "Output",ExpressionUUID->"dfe53c8b-bbc8-4303-a101-884d0b7c737c"]
}, Open  ]],
Cell[942460, 14899, 483, 10, 30, "Input",ExpressionUUID->"623509d3-1f73-46df-8a06-a53c66ea4c13"],
Cell[942946, 14911, 299, 8, 30, "Input",ExpressionUUID->"b7c27e39-ee23-4cdc-8279-418a836382f2"],
Cell[943248, 14921, 206, 4, 35, "Text",ExpressionUUID->"f3cc3d05-4bfb-4434-ae1e-b38b7a1ea64d"],
Cell[943457, 14927, 380, 9, 283, "Input",ExpressionUUID->"e9811bfe-ac5e-42ec-86ca-163ac02e21c0"],
Cell[943840, 14938, 301, 6, 35, "Text",ExpressionUUID->"f5d1c4de-c8d7-46b1-861d-db121ed55788"],
Cell[CellGroupData[{
Cell[944166, 14948, 865, 23, 30, "Input",ExpressionUUID->"4a01c933-82c2-404a-893b-1210bcaffaa7"],
Cell[945034, 14973, 396, 6, 203, "Output",ExpressionUUID->"3a8dd2eb-1004-4c47-9026-03daec57c9e7"]
}, Open  ]],
Cell[945445, 14982, 238, 4, 35, "Text",ExpressionUUID->"ab7d68ee-a229-40bf-9c4b-b230cf8557d7"],
Cell[CellGroupData[{
Cell[945708, 14990, 723, 20, 30, "Input",ExpressionUUID->"8fb012fe-c42e-4467-b3e6-5a255c3b1782"],
Cell[946434, 15012, 26115, 513, 101, "Output",ExpressionUUID->"3cf44c75-5ad1-43eb-9ae2-8ff68a8cab02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[972586, 15530, 1297, 31, 94, "Input",ExpressionUUID->"817b04c9-a179-46c2-8220-b3d25a064803"],
Cell[973886, 15563, 446, 7, 245, "Output",ExpressionUUID->"7fee1e89-079e-4c7b-a6d9-6b34d89c393e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974369, 15575, 504, 14, 30, "Input",ExpressionUUID->"d7e390ad-e0e5-4372-9d2e-6db8f2233539"],
Cell[974876, 15591, 209, 4, 34, "Output",ExpressionUUID->"9205c38a-5493-4ed8-b3c3-af9f30115757"]
}, Open  ]],
Cell[CellGroupData[{
Cell[975122, 15600, 1056, 25, 52, "Input",ExpressionUUID->"eb168131-9340-4615-8ab8-40a0ae2686bd"],
Cell[976181, 15627, 373, 6, 161, "Output",ExpressionUUID->"c67c10a8-e58f-4b3e-ac19-e31b2c9c2b69"]
}, Open  ]],
Cell[976569, 15636, 198, 3, 35, "Text",ExpressionUUID->"a1825008-ffbd-48df-9809-abb0b79b0bf1"],
Cell[CellGroupData[{
Cell[976792, 15643, 2188, 41, 136, "Input",ExpressionUUID->"dffb62bf-50f1-40c1-bbed-66bb1e9e6e4d"],
Cell[978983, 15686, 24606, 433, 93, "Output",ExpressionUUID->"d220a62d-bf37-4a62-b1ab-2d443a2f1a94"]
}, Open  ]],
Cell[1003604, 16122, 153, 3, 35, "Text",ExpressionUUID->"5d187301-cd3a-4f5c-807f-8c595c784801"],
Cell[CellGroupData[{
Cell[1003782, 16129, 493, 11, 30, "Input",ExpressionUUID->"809f8b0d-51e4-42b6-9bcf-b80ca6511622"],
Cell[1004278, 16142, 58602, 1086, 147, "Output",ExpressionUUID->"aca5510f-1db2-48fa-aa05-e7bb416bb88e"]
}, Open  ]],
Cell[1062895, 17231, 179, 3, 35, "Text",ExpressionUUID->"951abce8-3916-4f4d-9566-4d737c1c2ad4"],
Cell[CellGroupData[{
Cell[1063099, 17238, 523, 11, 30, "Input",ExpressionUUID->"5c242206-bfb0-4bda-a75f-02b08d6a5af5"],
Cell[1063625, 17251, 56326, 1033, 389, "Output",ExpressionUUID->"d8d075cd-751a-4755-815e-fdd209e87f83"]
}, Open  ]],
Cell[1119966, 18287, 165, 3, 35, "Text",ExpressionUUID->"16b39344-68a8-4442-9911-f1eda7cf0a06"],
Cell[CellGroupData[{
Cell[1120156, 18294, 776, 15, 30, "Input",ExpressionUUID->"937e2418-cb77-4454-8dd4-cc7ddac7f998"],
Cell[1120935, 18311, 228, 3, 34, "Output",ExpressionUUID->"c313efac-c65e-414e-8fd3-310170727ab6"]
}, Open  ]],
Cell[1121178, 18317, 182, 3, 35, "Text",ExpressionUUID->"6acdc0ce-13f0-4ba4-b446-2f2b130277cc"],
Cell[1121363, 18322, 283, 7, 30, "Input",ExpressionUUID->"2c71c779-428d-42ef-9a3e-a3d9be240c74"],
Cell[CellGroupData[{
Cell[1121671, 18333, 802, 19, 52, "Input",ExpressionUUID->"e25d0ed1-dd8f-4c6f-bab3-03c84266f5e4"],
Cell[1122476, 18354, 14191, 344, 1142, "Output",ExpressionUUID->"be87e4e0-8c84-4d63-9d0b-f01767725fa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136704, 18703, 181, 3, 30, "Input",ExpressionUUID->"31ec32e9-5555-42bb-a599-e36f22c6321e"],
Cell[1136888, 18708, 327, 5, 245, "Output",ExpressionUUID->"2deb0e09-1e0f-4506-9c70-f67a77cd1772"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1137252, 18718, 190, 4, 30, "Input",ExpressionUUID->"81ef77de-16b0-4234-8618-e9a532611881"],
Cell[1137445, 18724, 1029, 30, 34, "Output",ExpressionUUID->"14583a82-e1ff-4c8a-a70c-1c1f20e86c1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1138511, 18759, 494, 11, 30, "Input",ExpressionUUID->"1fbec201-fd72-4eb6-a501-1bbcb6c24f60"],
Cell[1139008, 18772, 12658, 324, 447, "Output",ExpressionUUID->"184bf70e-5759-43f7-98e7-4ed586ab9e78"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1151703, 19101, 806, 22, 51, "Input",ExpressionUUID->"27e86bc8-770b-4ed6-ae09-3d5b463a2215"],
Cell[1152512, 19125, 43318, 957, 60, "Output",ExpressionUUID->"9d4977bf-f4b4-47c7-9071-affdc28c070b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195867, 20087, 784, 21, 51, "Input",ExpressionUUID->"926a903f-d8b4-4f94-ac3e-781c1f5e30dc"],
Cell[1196654, 20110, 156, 3, 33, "Output",ExpressionUUID->"43cbfa5e-e19c-49e4-9da7-f77d06afab18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196847, 20118, 227, 4, 29, "Input",ExpressionUUID->"f039f680-8033-463c-bb65-876848c36bdc"],
Cell[1197077, 20124, 15370, 379, 251, "Output",ExpressionUUID->"4f716ecf-1047-46f9-800d-e066ab5267d9"]
}, Open  ]]
}
]
*)

