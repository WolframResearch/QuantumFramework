Notebook[{

Cell[CellGroupData[{
Cell["Send queries to quantum processing units", "Title",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.893795592729309*^9},
 CellTags->{"Name", "TemplateCell", "Title", "TabNext"},
 CellID->924394382,ExpressionUUID->"ed2170bb-0c1c-4f41-bd21-6927c2a6a77a"],

Cell["Interact with quantum processing units", "Text",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893984650900709*^9, 3.8939846629175262`*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->563660414,ExpressionUUID->"b6653112-342d-4f9e-9274-f59de3da01a9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5646757f-7603-4563-b4aa-4fc5aa1d85d8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Example Content", "Examples", "TemplateCellGroup"},
 CellID->689775652,ExpressionUUID->"cffde6fd-1502-471e-bff9-06c5c3b1aa83"],

Cell["\<\
By utilizing the Wolfram notebook and leveraging the Wolfram quantum \
framework, users can engage with multiple APIs and dispatch quantum tasks. In \
particular, we support Amazon Braket on AWS, and IBM Quantum.\
\>", "Text",
 CellChangeTimes->{{3.8940272071050863`*^9, 3.894027319439158*^9}},
 CellTags->"DefaultContent",
 CellID->351723045,ExpressionUUID->"665bd803-bd54-4b0f-952e-d122b5abc730"],

Cell["Install and load the QuantumFramework paclet:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8896301375389147`*^9, 3.889630152807868*^9}, {
  3.890230125254396*^9, 3.890230129164053*^9}},
 CellID->1052376881,ExpressionUUID->"1ee40f6b-e92b-43ce-9695-02225e5a2b92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Wolfram`QuantumFramework`\>\"", "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8896301316068687`*^9, 3.889630135374712*^9}},
 CellLabel->"In[18]:=",
 CellID->1395467824,ExpressionUUID->"47700422-00c3-4ccf-a157-0ee5c901a292"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.1.1\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.1.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/mohammadb/Library/Mathematica/Paclets/Repository/\
Wolfram__QuantumFramework-1.1.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.1.1", "WolframVersion" -> 
    "13.1+", "PrimaryContext" -> "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {
        "Wolfram`QuantumFrameworkLoader`", {
         "Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{"IBMQ.paclet", "ServiceConnection_IBMQ-0.0.1.paclet"}}}},
     "Location" -> 
    "/Users/mohammadb/Library/Mathematica/Paclets/Repository/Wolfram__\
QuantumFramework-1.1.1"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8940281451309566`*^9, 3.894409464833106*^9},
 CellLabel->"Out[18]=",
 CellID->608545008,ExpressionUUID->"506ffb26-3ba4-456b-a592-d72c1087cebb"]
}, Open  ]],

Cell["Create a circuit:", "CodeText",
 CellChangeTimes->{{3.894408905891034*^9, 3.894408914614855*^9}},
 CellID->1079714143,ExpressionUUID->"6ab5a052-8cf8-4d09-9ad6-b6662cb5a045"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", "\"\<CZ\>\"", ",", 
      RowBox[{"\"\<CZ\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<RZ\>\"", ",", 
         RowBox[{"\[Pi]", "/", "3"}]}], "}"}], "->", "2"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<RZ\>\"", ",", 
         RowBox[{"2", 
          RowBox[{"\[Pi]", "/", "3"}]}]}], "}"}], "->", "3"}], ",", 
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qc", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.893985315867374*^9, 3.893985428045416*^9}},
 CellLabel->"In[201]:=",
 CellID->1703615783,ExpressionUUID->"852afb4a-9028-4f58-8b22-b87c9e24778d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
    LineBox[{{0.375, -1}, {0.625, -1}}], LineBox[{{0.375, -2}, {0.625, -2}}], 
    LineBox[{{0.375, -3}, {0.625, -3}}], LineBox[{{1.375, -1}, {1.625, -1}}], 
    LineBox[{{1.375, -2}, {1.625, -2}}], LineBox[{{2.375, -2}, {2.625, -2}}], 
    LineBox[{{1.375, -3}, {2.625, -3}}], LineBox[{{3.375, -2}, {3.625, -2}}], 
    LineBox[{{3.375, -3}, {3.625, -3}}], LineBox[{{2.375, -1}, {4.625, -1}}], 
    LineBox[{{4.375, -2}, {4.625, -2}}], LineBox[{{4.375, -3}, {4.625, -3}}], 
    LineBox[{{5.375, -1}, {5.625, -1}}], LineBox[{{5.375, -2}, {5.625, -2}}], 
    LineBox[{{5.375, -3}, {5.625, -3}}], LineBox[{{6.375, -1}, {6.625, -1}}], 
    LineBox[{{6.375, -2}, {6.625, -2}}], 
    LineBox[{{6.375, -3}, {6.625, -3}}]}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {6.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {6.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {{{
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{0.625, -3.375}, {1.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{1., -1.375}, {1., -1.625}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{1., -2.375}, {1., -2.625}}]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{1.625, -2.375}, {2.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{2., -1.09375}, {2., -1.625}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
      LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{2., -1.}, 0.09375]}}, {}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
       RectangleBox[{2.625, -3.375}, {3.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{3., -2.09375}, {3., -2.625}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
      LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
      LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
       DiskBox[{3., -2.}, 0.09375]}}, {}}, 
    {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
     0.528488, 0.470624, 0.701351], Opacity[0.15]}], 
     RectangleBox[{3.625, -2.375}, {4.375, -1.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
         FractionBox["\[Pi]", "3"], ")"}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
       Center}]}, 
    {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
     0.528488, 0.470624, 0.701351], Opacity[0.15]}], 
     RectangleBox[{3.625, -3.375}, {4.375, -2.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox[
        RowBox[{
         SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "3"], ")"}],
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {4., -3.}], {{{1, 0}, {0, 1}}, 
       Center}]}, {{
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{4.625, -1.375}, {5.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{4.625, -2.375}, {5.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
       0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
       RectangleBox[{4.625, -3.375}, {5.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"H\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {5., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, {
      {RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{5., -1.375}, {5., -1.625}}]}, 
      {RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{5., -2.375}, {5., -2.625}}]}}}, 
    {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
     0.7367, 0.358, 0.503], Opacity[0.15]}], 
     RectangleBox[{5.625, -3.375}, {6.375, -0.625},
      RoundingRadius->0.1], 
     {Thickness[Small], 
      LineBox[{{6.151690686445303, -2.0772902651951615`}, {
       6.212366961023424, -2.033206371273226}}], 
      LineBox[{{6.116904337848513, -2.040906597037244}, {
       6.163666072987917, -1.9822692358521423`}}], 
      LineBox[{{6.073692193435111, -2.015088542646603}, {
       6.103169070809155, -1.9461239597052442`}}], 
      LineBox[{{6.0251687373408105`, -2.0016969196685124`}, {
       6.035236232277135, -1.9273756875359171`}}], 
      LineBox[{{5.9748312626591895`, -2.0016969196685124`}, {
       5.964763767722865, -1.9273756875359171`}}], 
      LineBox[{{5.926307806564889, -2.015088542646603}, {
       5.896830929190845, -1.9461239597052442`}}], 
      LineBox[{{5.883095662151487, -2.040906597037244}, {
       5.836333927012083, -1.982269235852142}}], 
      LineBox[{{5.848309313554697, -2.0772902651951615`}, {
       5.787633038976576, -2.033206371273226}}]}, 
     {Thickness[Medium], 
      LineBox[{{6., -2.1875}, {6.17024643740233, -1.8533725534293621`}}], 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{6., -0.625}, {6., -0.2109375}}], 
       {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
        FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
        PolygonBox[{{5.90625, -0.2109375}, {6.09375, -0.2109375}, {
         6., -0.0234375}}]}}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.893985328288212*^9, 3.8939853337824*^9}, {
  3.893985364802573*^9, 3.893985428776099*^9}},
 CellLabel->"Out[202]=",
 CellID->1358465553,ExpressionUUID->"d2d7a474-de4a-44dd-b13e-d941fb59827a"]
}, Open  ]],

Cell["\<\
Using IBM API token, connect to IBM-quantum using service connection:\
\>", "CodeText",
 CellChangeTimes->{{3.889822352671904*^9, 3.8898223686914*^9}, {
  3.8939851506047077`*^9, 3.893985168951119*^9}},
 CellID->618301137,ExpressionUUID->"b9f7cd3f-e87d-4cad-bb93-f3da59564dc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibm", "=", 
  RowBox[{"ServiceConnect", "[", "\"\<IBMQ\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8869256280651617`*^9, 3.886925631893981*^9}, {
   3.886925778528892*^9, 3.8869257788779583`*^9}, 3.8869258598294277`*^9, {
   3.886926146106246*^9, 3.886926146615341*^9}, {3.886927118798633*^9, 
   3.886927120357769*^9}, {3.8869286734479847`*^9, 3.8869287010301943`*^9}, 
   3.8869288792678127`*^9, {3.8869290271081038`*^9, 3.886929029153307*^9}, {
   3.8869290647442007`*^9, 3.886929085981586*^9}, {3.886929250302288*^9, 
   3.886929250451038*^9}, 3.886930115527564*^9, {3.886930435542008*^9, 
   3.8869304367864943`*^9}, {3.8869315921948357`*^9, 3.886931592707793*^9}, {
   3.8869471696667356`*^9, 3.8869472167869673`*^9}, {3.8879743971251287`*^9, 
   3.887974407361719*^9}, {3.887980826782198*^9, 3.887980826979059*^9}, {
   3.8898227484535847`*^9, 3.8898227803454323`*^9}, {3.8898233152597637`*^9, 
   3.889823315480151*^9}, {3.8898237650154133`*^9, 3.889823766479312*^9}, 
   3.889823816464765*^9, {3.893984840930871*^9, 3.893984842950124*^9}, {
   3.893984996679348*^9, 3.893984996927244*^9}, 3.893985088249543*^9, {
   3.893985120696309*^9, 3.89398512131494*^9}},
 CellLabel->"In[181]:=",
 CellID->113841726,ExpressionUUID->"e3007165-c883-432c-b21a-4b23ec225b18"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
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
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
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
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True, 
               MetaInformation -> <|
                "Comments" -> <|"Software" -> "Adobe ImageReady"|>|>], 
              Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-45c01bf2235a1e91b9d14ec56e712f4a"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
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
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
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
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True, 
               MetaInformation -> <|
                "Comments" -> <|"Software" -> "Adobe ImageReady"|>|>], 
              Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-45c01bf2235a1e91b9d14ec56e712f4a"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject["IBMQ", "ID" -> "connection-45c01bf2235a1e91b9d14ec56e712f4a"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8879737620339813`*^9, 3.887973811987719*^9, 3.887974051288787*^9, 
   3.887974442175809*^9, {3.887974514401437*^9, 3.887974535855488*^9}, 
   3.8879746565587463`*^9, 3.8879808341846533`*^9, 3.888004306337515*^9, 
   3.888004434275226*^9, 3.888007676432279*^9, 3.8898227583906593`*^9, 
   3.8898227918055363`*^9, {3.889822833052956*^9, 3.8898228512799253`*^9}, 
   3.889823037769223*^9, 3.88982312378601*^9, 3.8898233124697037`*^9, {
   3.889823760208234*^9, 3.8898237748937607`*^9}, 3.889823809246908*^9, 
   3.8902248402749453`*^9, 3.893984830744869*^9, 3.893984871444145*^9, 
   3.893984997564521*^9, {3.8939851102028913`*^9, 3.8939851230783243`*^9}},
 CellLabel->"Out[181]=",
 CellID->14478500,ExpressionUUID->"27970939-c935-4261-a93d-c0eb9685f260"]
}, Open  ]],

Cell["Transform the quantum circuit into Qiskit and traspile it:", "CodeText",
 
 CellChangeTimes->{{3.8944089293010883`*^9, 3.894408949456677*^9}},
 CellID->462300177,ExpressionUUID->"4f2594d0-0911-4553-9ddb-4870caf8e89d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qiskit", "=", 
   RowBox[{
    RowBox[{"qc", "[", "\"\<Qiskit\>\"", "]"}], "[", "\"\<Transpile\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.887060545093131*^9, 3.887060550641655*^9}, {
  3.893985486621804*^9, 3.8939854921153316`*^9}},
 CellLabel->"In[203]:=",
 CellID->673960713,ExpressionUUID->"4b755c75-73e5-42ae-9911-150091434960"],

Cell["\<\
Turn the qiskit object into bytes by specifying the corresponding provider \
and backend on IBM system:\
\>", "CodeText",
 CellChangeTimes->{{3.887060565537656*^9, 3.8870605721740913`*^9}, {
  3.887068913202949*^9, 3.88706892615274*^9}, {3.8870706015312357`*^9, 
  3.887070611636608*^9}, {3.8898226253592873`*^9, 3.889822664870016*^9}, {
  3.894408960738637*^9, 3.894408961396605*^9}},
 CellID->1428949113,ExpressionUUID->"c8e5c1b0-67a0-4306-96a5-266df723b32e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qpy", "=", 
   RowBox[{"BaseEncode", "@", 
    RowBox[{"qiskit", "[", 
     RowBox[{"\"\<QPY\>\"", ",", 
      RowBox[{"\"\<Provider\>\"", "->", "\"\<IBMProvider\>\""}], ",", 
      RowBox[{"\"\<Backend\>\"", "->", "\"\<ibmq_quito\>\""}]}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.886341785845851*^9, 3.8863417974192266`*^9}, {
   3.8863480700848217`*^9, 3.88634807256905*^9}, {3.886349756718676*^9, 
   3.8863497833484898`*^9}, 3.886349953313259*^9, 3.886350168274988*^9, {
   3.886766444286495*^9, 3.8867664458806953`*^9}, {3.886935554441293*^9, 
   3.886935576514182*^9}, {3.8870272301778307`*^9, 3.887027235701129*^9}, {
   3.887028427173012*^9, 3.88702844140134*^9}, {3.887029147193111*^9, 
   3.8870291637046223`*^9}, 3.887029267394902*^9, 3.887060193828541*^9, {
   3.887060575382689*^9, 3.887060576227551*^9}, {3.887068256471107*^9, 
   3.887068256899227*^9}, {3.8870687793935547`*^9, 3.887068780110567*^9}, {
   3.8870705539722567`*^9, 3.8870705695509357`*^9}, 3.887071267579535*^9, 
   3.8870729188787327`*^9, 3.893985525470992*^9},
 CellLabel->"In[205]:=",
 CellID->1038117790,ExpressionUUID->"89849ac8-3af4-4faf-b536-6342c4a5b875"],

Cell["Send the circuit to an IBM QPU:", "CodeText",
 CellChangeTimes->{{3.887068362912587*^9, 3.887068375353037*^9}, {
   3.887068446364626*^9, 3.887068448237586*^9}, 3.894408977052535*^9},
 CellID->1488548302,ExpressionUUID->"ee3f9880-3346-42eb-8dff-7a4e07d56e85"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibm", "[", 
  RowBox[{"\"\<RunCircuit\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<QPY\>\"", "->", "qpy"}], ",", 
     RowBox[{"\"\<Backend\>\"", "->", "\"\<ibmq_belem\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.886935532935054*^9, 3.886935549739933*^9}, {
   3.886935602113657*^9, 3.886935602641164*^9}, {3.8869357096937923`*^9, 
   3.8869357232140913`*^9}, {3.886935849478796*^9, 3.886935850886158*^9}, {
   3.886935902713277*^9, 3.886935911910976*^9}, {3.88693892094357*^9, 
   3.886938922394752*^9}, {3.8869394349813757`*^9, 3.886939508610808*^9}, {
   3.88697522645502*^9, 3.886975227682412*^9}, 3.887028453945508*^9, 
   3.887029165884513*^9, {3.887068298259923*^9, 3.887068327942391*^9}, 
   3.887068786520749*^9, 3.887070570941918*^9, 3.887071268734742*^9, 
   3.8870729528859453`*^9},
 CellLabel->"In[206]:=",
 CellID->1994307811,ExpressionUUID->"b3775fec-8785-4d87-8467-15cf0afe56e8"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "id" -> "chng53laqbbvbu6o1qgg", "backend" -> "ibmq_belem"|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[224.00000000000003`]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["backend", "id"]], 
       TypeSystem`Atom[String], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[73.5], 
         TypeSystem`PackageScope`AtomShape[224.00000000000003`]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["backend", "id"]], 
       TypeSystem`Atom[String], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["chng53laqbbvbu6o1qgg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend", 
                  Style[
                  "backend", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibmq_belem", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{317., {33.634033203125, 39.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{317., {33.634033203125, 39.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.88707062481715*^9, 3.887071463137096*^9, 
  3.8870729579774017`*^9, 3.893985549082782*^9},
 CellLabel->"Out[206]=",
 CellID->768481706,ExpressionUUID->"2e28b52f-b9db-4d07-926b-fdc073cd96f7"]
}, Open  ]],

Cell["Check the job\[CloseCurlyQuote]s status:", "CodeText",
 CellChangeTimes->{{3.887068393447732*^9, 3.887068438860959*^9}, {
  3.88707811371056*^9, 3.887078124826569*^9}, {3.894408997655971*^9, 
  3.894408998109193*^9}},
 CellID->186243591,ExpressionUUID->"486cd396-a41d-46df-840a-7614644fafee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibm", "[", 
  RowBox[{"\"\<JobStatus\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<JobID\>\"", "->", "\"\<chng53laqbbvbu6o1qgg\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8869389101565104`*^9, 3.886938910443673*^9}, 
   3.886939519051755*^9, 3.886975234488235*^9, 3.887029336415835*^9, 
   3.887068342728457*^9, 3.887068845784195*^9, {3.887078060781396*^9, 
   3.887078063541769*^9}, 3.89398556704055*^9},
 CellLabel->"In[217]:=",
 CellID->1312360258,ExpressionUUID->"f646a028-1ede-4078-9afe-d3a05be0c582"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "id" -> "chng53laqbbvbu6o1qgg", "hub" -> "ibm-q", "group" -> "open", 
       "project" -> "main", "backend" -> "ibmq_belem", 
       "state" -> <|"status" -> "Completed"|>, 
       "params" -> <|
        "circuits" -> <|
          "__type__" -> "QuantumCircuit", "__value__" -> 
           "eJwL9Az29gxhYxBnZIAAxkIG7jQGDiCLFYiZoaIsQMwEZYslZxYll2aW6BoaGtn/\
VPwd4qIrkVeak1PICNbECDQBFcCMhhkANzSZEcxjZEwmoIOBgQ0qysiAHQRFuSeWpIJtToUKWaIp0X\
TLyU8s0VA31DM1NzC3NDM2MjO3NLE0MDBU11EoKEpNzizOzM+\
zNTXWBNuG7A50EBwBt22AXMbEgAHAjnBGuKwQLDYacAiXEWcbI13DgZQYoqbLCCcgcD5mIsV5aVAhD\
rsLFseWfWRxoFU4wC2S0HUJ+a34054EzUzYNRPnSlKCA2FRQrGuRdDBD/tpbhHcR+\
xIFmEzwDc1sbi0CKIbUviSoANcXDOSooMhGewlBgBUz6XD"|>|>, 
       "program" -> <|"id" -> "circuit-runner"|>, "created" -> 
       "2023-05-25T06:39:10.032524Z", "cost" -> 14400, "status" -> 
       "Completed"|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"id"} -> 
        TypeSystem`PackageScope`AtomShape[224.00000000000003`], {"hub"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"group"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"project"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"backend"} -> 
        TypeSystem`PackageScope`AtomShape[112.00000000000001`], {"state"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"params"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"program"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"created"} -> 
        TypeSystem`PackageScope`AtomShape[302.40000000000003`], {"cost"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "id", "hub", "group", "project", "backend", "state", "params", 
        "program", "created", "cost", "status"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 1], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["__type__", "__value__"]], 
          TypeSystem`Atom[String], 2], 1], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"id"} -> 
        TypeSystem`PackageScope`AtomShape[224.00000000000003`], {"hub"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"group"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"project"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"backend"} -> 
        TypeSystem`PackageScope`AtomShape[112.00000000000001`], {"state"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"params"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"program"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"created"} -> 
        TypeSystem`PackageScope`AtomShape[302.40000000000003`], {"cost"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "id", "hub", "group", "project", "backend", "state", "params", 
        "program", "created", "cost", "status"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 1], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["__type__", "__value__"]], 
          TypeSystem`Atom[String], 2], 1], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 11, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["chng53laqbbvbu6o1qgg", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hub", 
                  Style[
                  "hub", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["hub"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hub"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibm-q", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["hub"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["group", 
                  Style[
                  "group", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["group"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["group"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["open", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["project", 
                  Style[
                  "project", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["project"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["project"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["project"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend", 
                  Style[
                  "backend", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibmq_belem", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["state", 
                  Style[
                  "state", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["state"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["state"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"status" -> "Completed"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"status" -> "Completed"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["state"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["params", 
                  Style[
                  "params", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["params"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["params"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"circuits"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"circuits"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["params"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["params"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["program", 
                  Style[
                  "program", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["program"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["program"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"id" -> "circuit-runner"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"id" -> "circuit-runner"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["program"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["program"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["created", 
                  Style[
                  "created", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["created"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["created"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2023-05-25T06:39:10.032524Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["created"]}, "Item", False], "Mouse"], 
              ImageSize -> {{302.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["cost", 
                  Style[
                  "cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14400"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["status", 
                  Style[
                  "status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Completed", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{372., {155.134033203125, 160.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{372., {155.134033203125, 160.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.887068345119155*^9, 3.887068556989933*^9, 
  3.887068851915595*^9, 3.887069501999263*^9, 3.8870781008136797`*^9, 
  3.88710924378686*^9, 3.893985568607965*^9, 3.894014636584087*^9},
 CellLabel->"Out[217]=",
 CellID->1005991626,ExpressionUUID->"e4ebe3dc-8a40-405a-96c0-4dcb3871b203"]
}, Open  ]],

Cell["Get the results:", "CodeText",
 CellChangeTimes->{{3.887068413252672*^9, 3.887068417500461*^9}, {
   3.889824396630205*^9, 3.889824404917266*^9}, 3.8944090231261797`*^9},
 CellID->993838129,ExpressionUUID->"b56d1ed6-5b3d-4617-bcce-8415256b03a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ds", "=", 
  RowBox[{"ibm", "[", 
   RowBox[{"\"\<JobResults\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<JobID\>\"", "->", "\"\<chng53laqbbvbu6o1qgg\>\""}], "}"}]}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.887043002500655*^9, 3.887043003732267*^9}, {
   3.8870430680619307`*^9, 3.8870430691109877`*^9}, 3.887068465610218*^9, 
   3.88706952697283*^9, 3.887078133867877*^9, 3.894014646684779*^9},
 CellLabel->"In[218]:=",
 CellID->309627737,ExpressionUUID->"7865efd7-1957-4d85-b092-9874c43f2c93"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "backend_name" -> "ibmq_belem", "backend_version" -> "1.2.8", 
       "date" -> <|
        "__type__" -> "datetime", "__value__" -> 
         "2023-05-25T07:26:56+00:00"|>, 
       "header" -> <|
        "backend_name" -> "ibmq_belem", "backend_version" -> "1.2.8", 
         "_ibm_tracing_" -> <|
          "uber-trace-id" -> 
           "6f09fee24c45ad1f641a2c5e483b1298:ec39cc0222752d06:\
f648f42d797c995f:1"|>|>, "qobj_id" -> "b2ac5247-044f-465f-afca-738452d12013", 
       "job_id" -> "circuit-runner_chngre2cd9kc8b319cc0_fd09_0", "status" -> 
       "Successful completion", "success" -> True, 
       "results" -> {<|
         "shots" -> 4000, "success" -> True, 
          "data" -> <|
           "counts" -> <|
             "0x0" -> 471, "0x1" -> 708, "0x2" -> 422, "0x3" -> 639, "0x4" -> 
              593, "0x5" -> 292, "0x6" -> 657, "0x7" -> 218|>|>, "meas_level" -> 
          2, "header" -> <|
           "qubit_labels" -> {{"q", 0}, {"q", 1}, {"q", 2}, {"q", 3}, {
              "q", 4}}, "n_qubits" -> 5, "qreg_sizes" -> {{"q", 5}}, 
            "clbit_labels" -> {{"c", 0}, {"c", 1}, {"c", 2}}, "memory_slots" -> 
            3, "creg_sizes" -> {{"c", 3}}, "name" -> "circuit-112", 
            "global_phase" -> 1.5707963267948966`, "metadata" -> <||>|>, 
          "status" -> "done"|>}, "execution_id" -> 
       "85884036-facd-11ed-8795-b02628f7f59e", "time_taken" -> 
       2.9935202399999996`, "error" -> Null|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
        TypeSystem`PackageScope`AtomShape[112.00000000000001`], {
         "backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"date"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"header"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qobj_id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {"job_id"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[235.20000000000002`], {"success"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"results"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"execution_id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "time_taken"} -> TypeSystem`PackageScope`AtomShape[60], {"error"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "backend_name", "backend_version", "date", "header", "qobj_id", 
        "job_id", "status", "success", "results", "execution_id", 
        "time_taken", "error"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["__type__", "__value__"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Struct[{
         "backend_name", "backend_version", "_ibm_tracing_"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 1]}], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "shots", "success", "data", "meas_level", "header", "status"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
             TypeSystem`Atom[Integer], 8], 1], 
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "qubit_labels", "n_qubits", "qreg_sizes", "clbit_labels", 
             "memory_slots", "creg_sizes", "name", "global_phase", 
             "metadata"}, {
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["q"]], 
                TypeSystem`Atom[Integer]}], 5], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["c"]], 
                TypeSystem`Atom[Integer]}], 3], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Assoc[
             TypeSystem`UnknownType, TypeSystem`UnknownType, 
              TypeSystem`AnyLength]}], 
           TypeSystem`Atom[String]}], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Real], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
        TypeSystem`PackageScope`AtomShape[112.00000000000001`], {
         "backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"date"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"header"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qobj_id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {"job_id"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[235.20000000000002`], {"success"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"results"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"execution_id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "time_taken"} -> TypeSystem`PackageScope`AtomShape[60], {"error"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "backend_name", "backend_version", "date", "header", "qobj_id", 
        "job_id", "status", "success", "results", "execution_id", 
        "time_taken", "error"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["__type__", "__value__"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Struct[{
         "backend_name", "backend_version", "_ibm_tracing_"}, {
          TypeSystem`Atom[String], 
          TypeSystem`Atom[String], 
          TypeSystem`Assoc[
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String], 1]}], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "shots", "success", "data", "meas_level", "header", "status"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
             TypeSystem`Atom[Integer], 8], 1], 
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "qubit_labels", "n_qubits", "qreg_sizes", "clbit_labels", 
             "memory_slots", "creg_sizes", "name", "global_phase", 
             "metadata"}, {
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["q"]], 
                TypeSystem`Atom[Integer]}], 5], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["c"]], 
                TypeSystem`Atom[Integer]}], 3], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Assoc[
             TypeSystem`UnknownType, TypeSystem`UnknownType, 
              TypeSystem`AnyLength]}], 
           TypeSystem`Atom[String]}], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Real], TypeSystem`AnyType}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     12, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend_name", 
                  Style[
                  "backend_name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibmq_belem", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{112.00000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend_version", 
                  Style[
                  "backend_version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_version"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_version"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["1.2.8", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"__type__" -> "datetime", "__value__" -> 
                    "2023-05-25T07:26:56+00:00"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"__type__" -> "datetime", "__value__" -> 
                    "2023-05-25T07:26:56+00:00"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["date"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["header", 
                  Style[
                  "header", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["header"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["header"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"backend_name", "backend_version", "_ibm_tracing_"}, 
                    ", ", BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"backend_name", "backend_version", "_ibm_tracing_"}, 
                    ", ", BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["header"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["header"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["qobj_id", 
                  Style[
                  "qobj_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["qobj_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["qobj_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["b2ac5247-044f-465f-afca-738452d12013", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["qobj_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["job_id", 
                  Style[
                  "job_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["job_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["job_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["circuit-runner_chngre2cd9kc8b319cc0_fd09_0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["job_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["status", 
                  Style[
                  "status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Successful completion", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{235.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["success", 
                  Style[
                  "success", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["success"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["success"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["success"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["results", 
                  Style[
                  "results", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["results"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["results"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["results"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["results"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["execution_id", 
                  Style[
                  "execution_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["execution_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["execution_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["85884036-facd-11ed-8795-b02628f7f59e", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["execution_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time_taken", 
                  Style[
                  "time_taken", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["time_taken"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time_taken"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.99352"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["time_taken"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["error"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["error"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{589., {168.634033203125, 174.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{589., {168.634033203125, 174.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8870781367545137`*^9, 3.8940146483115597`*^9},
 CellLabel->"Out[218]=",
 CellID->1091784374,ExpressionUUID->"ebea8fba-d139-4685-9786-ed4ce53701b9"]
}, Open  ]],

Cell["\<\
Given counts in the results, find the corresponding probabilities:\
\>", "CodeText",
 CellChangeTimes->{{3.887068492295972*^9, 3.8870685022979803`*^9}, {
  3.887068549728755*^9, 3.887068550730788*^9}},
 CellID->1444728204,ExpressionUUID->"c50165a4-ce8b-4b1b-aa8d-c8821319233b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpuResults", "=", 
  RowBox[{"N", "@", 
   RowBox[{"Normalize", "[", 
    RowBox[{
     RowBox[{"Values", "@", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"ds", "[", 
         RowBox[{
         "\"\<results\>\"", ",", "All", ",", "\"\<data\>\"", ",", 
          "\"\<counts\>\""}], "]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ",", "Total"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.887068488865377*^9, {3.887078166376541*^9, 3.887078217530422*^9}, 
   3.894409055603273*^9},
 CellLabel->"In[220]:=",
 CellID->145323852,ExpressionUUID->"f290ac83-050c-472b-a0ef-911d7033771e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.11775`", ",", "0.177`", ",", "0.1055`", ",", "0.15975`", ",", "0.14825`",
    ",", "0.073`", ",", "0.16425`", ",", "0.0545`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.887078166920568*^9, {3.887078198841794*^9, 3.887078218205497*^9}, 
   3.894014664088032*^9},
 CellLabel->"Out[220]=",
 CellID->594860760,ExpressionUUID->"90434eb5-e18d-4424-a4df-d9e51561f71b"]
}, Open  ]],

Cell["Calculate results from Wolfram quantum framework:", "CodeText",
 CellChangeTimes->{{3.887069537592565*^9, 3.8870695501806803`*^9}, {
  3.894409073826675*^9, 3.894409078195725*^9}},
 CellID->121386182,ExpressionUUID->"13e0223c-c647-4163-8a49-b49c005bb993"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{
   RowBox[{"qc", "[", "]"}], "[", "\"\<Probabilities\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8870391380297203`*^9, 3.887039146779327*^9}},
 CellLabel->"In[221]:=",
 CellID->28096224,ExpressionUUID->"463aa78f-fe5d-43cb-91f3-3c7b671c37c4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["1", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["3", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["1", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["3", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["3", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["1", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["3", "16"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]], 
    "\[Rule]", 
    FractionBox["1", "16"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.887039147558652*^9, 3.887078224681014*^9, 
  3.894014681504774*^9},
 CellLabel->"Out[221]=",
 CellID->1610834819,ExpressionUUID->"0d3ccba2-4037-4b98-8954-41d489b67005"]
}, Open  ]],

Cell["\<\
Connect to AWS using your credentials (using Access Key ID, and Secret Access \
Key), and execute S3:\
\>", "CodeText",
 CellChangeTimes->{{3.888020476068305*^9, 3.888020509400692*^9}, {
  3.888020565982264*^9, 3.888020565983159*^9}, {3.8939791917409353`*^9, 
  3.893979204390107*^9}, {3.893979814420999*^9, 3.8939798175045233`*^9}},
 CellID->194738737,ExpressionUUID->"f7c9507a-9e54-46cf-9845-6b58494befa0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", 
  RowBox[{"ServiceExecute", "[", 
   RowBox[{"\"\<AWS\>\"", ",", "\"\<GetService\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<S3\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865774367881744*^9, 3.865774386332152*^9}, 
   3.8657891959118233`*^9, {3.88982498998709*^9, 3.889824991635024*^9}, {
   3.893894816047956*^9, 3.893894816497431*^9}, {3.893894873283978*^9, 
   3.8938948734929457`*^9}, {3.8939792091734*^9, 3.893979213182465*^9}},
 CellLabel->"In[31]:=",
 CellID->208874731,ExpressionUUID->"315412cb-2d55-4db8-b06f-bd09fae0bf49"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], {
               FaceForm[{
                 RGBColor[0.20017114700000005`, 0.6704682716, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                75.00000299999999}, {0., 75.00000299999999}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 34.997}, {
                 56.089, 35.734}, {56.187999999999995`, 36.472}, {56.287, 
                 37.209}, {57.242999999999995`, 36.638}, {58.988, 35.784}, {
                 59.440999999999995`, 34.643}, {58.471, 34.243}, {
                 56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                 36.297999999999995`, 41.976}, {36.297999999999995`, 
                 41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                 35.672999999999995`, 42.196}, {36.297999999999995`, 42.38}, {
                 36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                 "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                 "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                 "]}]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}, AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 75.}, {0., 75.}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-c3d9b71ae0f5b6a4ae4befe06308d9c4"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {75., {1., 8.}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], {
               FaceForm[{
                 RGBColor[0.20017114700000005`, 0.6704682716, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                75.00000299999999}, {0., 75.00000299999999}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 34.997}, {
                 56.089, 35.734}, {56.187999999999995`, 36.472}, {56.287, 
                 37.209}, {57.242999999999995`, 36.638}, {58.988, 35.784}, {
                 59.440999999999995`, 34.643}, {58.471, 34.243}, {
                 56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                 36.297999999999995`, 41.976}, {36.297999999999995`, 
                 41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                 35.672999999999995`, 42.196}, {36.297999999999995`, 42.38}, {
                 36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                 "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                 "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                 "]}]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}, AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 75.}, {0., 75.}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-c3d9b71ae0f5b6a4ae4befe06308d9c4"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-S3", "ID" -> "connection-c3d9b71ae0f5b6a4ae4befe06308d9c4"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865789196678014*^9, 3.865789364027426*^9, 
  3.865789646137151*^9, 3.8880203567395363`*^9, 3.8880872057176943`*^9, 
  3.888411897616438*^9, 3.88901849506971*^9, 3.8898252851725388`*^9, 
  3.8903320316709547`*^9, 3.8922254320084333`*^9, 3.892753397985305*^9, 
  3.8938838832910347`*^9, 3.893885131859263*^9, 3.8938920004886627`*^9, 
  3.8938948213818007`*^9, 3.893894874101254*^9, 3.8939792218183613`*^9},
 CellLabel->"Out[31]=",
 CellID->1041931560,ExpressionUUID->"5095aaae-f530-4143-b01b-aa48ee350c5c"]
}, Open  ]],

Cell["Execute Amazon Braket on AWS:", "CodeText",
 CellChangeTimes->{{3.888020577575116*^9, 3.888020587066721*^9}, {
  3.8939798266344967`*^9, 3.893979833077156*^9}},
 CellID->246399779,ExpressionUUID->"d6b0baab-08c8-4a97-be48-9e7dabf87620"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "=", 
  RowBox[{"ServiceExecute", "[", 
   RowBox[{"\"\<AWS\>\"", ",", "\"\<GetService\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<Braket\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865707602545459*^9, 3.8657076088478947`*^9}, 
   3.865774397961965*^9, 3.865789198261116*^9, {3.889824993362844*^9, 
   3.889824994869852*^9}, {3.893979247223197*^9, 3.893979248883765*^9}},
 CellLabel->"In[32]:=",
 CellID->892614237,ExpressionUUID->"6ab4c78b-ee6a-470c-a5fd-193b2679b941"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], {
               FaceForm[{
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                35.}, {0.015000999999999999`, 35.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                 "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                 "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                 "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                 "]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                "]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                "]]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}, 
             AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 35.}, {0., 35.}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-3fb584a1a7e1678439de863af089fd71"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {75., {1., 8.}}], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], {
               FaceForm[{
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                35.}, {0.015000999999999999`, 35.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                 "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                 "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                 "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                 "]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                "]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                "]]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}, 
             AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 35.}, {0., 35.}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-3fb584a1a7e1678439de863af089fd71"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-Braket", "ID" -> "connection-3fb584a1a7e1678439de863af089fd71"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865789198996779*^9, 3.865789366041086*^9, 
  3.865789647884474*^9, 3.888020359387459*^9, 3.888087208548856*^9, 
  3.888411899518855*^9, 3.88901849748062*^9, 3.889825287401614*^9, 
  3.890332033549774*^9, 3.8922254330583*^9, 3.892753399411378*^9, 
  3.893883885375373*^9, 3.893885133159071*^9, 3.893892003005608*^9, 
  3.893979250788625*^9},
 CellLabel->"Out[32]=",
 CellID->1851668101,ExpressionUUID->"b41e508b-42d5-4d82-8cd1-a7065e76a7fa"]
}, Open  ]],

Cell["Fetch available devices:", "CodeText",
 CellChangeTimes->{{3.865787306578583*^9, 3.865787310755556*^9}, {
  3.893979848981462*^9, 3.893979849621423*^9}},
 CellID->82440175,ExpressionUUID->"9bfcb3f5-6332-4e2d-a51f-4721eb0d52e6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devices", "=", 
  RowBox[{
   RowBox[{"braket", "[", 
    RowBox[{"\"\<SearchDevices\>\"", ",", 
     RowBox[{"\"\<Filters\>\"", "->", 
      RowBox[{"{", "}"}]}]}], "]"}], "[", 
   RowBox[{"\"\<Devices\>\"", ",", "All"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8657078214334373`*^9, 3.865707869026066*^9}, {
  3.8657081592162046`*^9, 3.8657082057942142`*^9}, {3.8657082560959597`*^9, 
  3.865708285748803*^9}, {3.865708326790202*^9, 3.865708328970191*^9}, {
  3.865774806162451*^9, 3.865774807117334*^9}, {3.888435915940866*^9, 
  3.888435916132867*^9}, {3.893885205398447*^9, 3.893885208820818*^9}, {
  3.893933865469859*^9, 3.893933876434073*^9}, {3.893934598638564*^9, 
  3.893934604704846*^9}, {3.893937576820883*^9, 3.893937586767768*^9}},
 CellLabel->"In[34]:=",
 CellID->445068910,ExpressionUUID->"b6ca12a3-626a-468f-8877-9e18ff9ced1c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
        "DeviceName" -> "Aria 1", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "OFFLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2023-05-16T17:32:23+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \
\"v\", \"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}, \
\"errorMitigation\": {\"title\": \"Errormitigation\", \"type\": \"array\", \
\"items\": {\"$ref\": \"#/definitions/ErrorMitigationScheme\"}}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model devices.\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": [\"qubitCount\"]}, \
\"ErrorMitigationScheme\": {\"title\": \"ErrorMitigationScheme\", \
\"description\": \"Base class for an error mitigation scheme.\", \"type\": \
\"object\", \"properties\": {}}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9995}, \"2Q\": {\"mean\": 0.9865}, \"spam\
\": {\"mean\": 0.995}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 0.0003, \"reset\": 2e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
        "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-05-22T16:00:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}, \"rydbergLocal\": {\"detuningRange\": [0.0, \
125000000.0], \"detuningSlewRateMax\": 1256600000000000.0, \
\"siteCoefficientRange\": [0.0, 1.0], \"numberLocalDetuningSitesMax\": 200, \
\"spacingRadialMin\": 5e-06, \"timeResolution\": 1e-09, \"timeDeltaMin\": \
5e-08}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": 1.47e-07}, \
\"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": 0.02}, \
\"rydbergLocal\": {\"detuningErrorRms\": 0.02, \"siteCoefficientErrorRms\": \
0.1, \"errorRateIncoherentBright\": 36000.0, \"errorRateIncoherentDark\": \
720.0, \"crosstalk\": 0.02}}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
        "DeviceName" -> "Harmony", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/harmony\"}, \"deviceLocation\": \
\"Maryland, USA\", \"updatedAt\": \"2023-05-24T11:00:04+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedModifiers\": [], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"verbatim\"], \"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model devices.\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.999}, \"2Q\": {\"mean\": 0.9549}, \
\"spam\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \
\"1Q\": 1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}, \
\"errorMitigation\": null}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
        "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
        "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_noise_amplitude_damping\", \
\"braket_noise_bit_flip\", \"braket_noise_depolarizing\", \
\"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"AdjointGradient\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 0, \
\"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
        "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-05-24T17:42:52.674561+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [1.313, 0.07, 1.976], \"schmidtNumber\": 1.151, \
\"commonEfficiency\": 0.369, \"squeezingParametersMean\": {\"low\": 0.708, \
\"high\": 1.173, \"medium\": 0.989}, \"relativeChannelEfficiencies\": [0.927, \
0.939, 0.917, 1.0, 0.968, 0.922, 0.896, 0.97, 0.955, 0.954, 0.97, 0.999, \
0.952, 0.968, 0.95, 0.902], \"loopEfficiencies\": [0.878, 0.882, 0.794]}}"|>, \
<|"DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
        "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 7, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE"]], 
         TypeSystem`Atom[String]}], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 7, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE"]], 
         TypeSystem`Atom[String]}], 7], "Path" -> {}, "DisplayedRowCount" -> 
     7, "DisplayedColumnCount" -> 6, "DataRowCount" -> 7, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceCapabilities"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aria 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2023-05-16T17:32:23+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \
\"v\", \"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}, \
\"errorMitigation\": {\"title\": \"Errormitigation\", \"type\": \"array\", \
\"items\": {\"$ref\": \"#/definitions/ErrorMitigationScheme\"}}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model devices.\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": [\"qubitCount\"]}, \
\"ErrorMitigationScheme\": {\"title\": \"ErrorMitigationScheme\", \
\"description\": \"Base class for an error mitigation scheme.\", \"type\": \
\"object\", \"properties\": {}}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9995}, \"2Q\": {\"mean\": 0.9865}, \"spam\
\": {\"mean\": 0.995}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 0.0003, \"reset\": 2e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QuEra", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Tuesday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"20:00:00\"}, {\"executionDay\": \
\"Wednesday\", \"windowStartHour\": \"16:00:00\", \"windowEndHour\": \
\"20:00:00\"}, {\"executionDay\": \"Thursday\", \"windowStartHour\": \
\"16:00:00\", \"windowEndHour\": \"18:00:00\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2023-05-22T16:00:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-07, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
250000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 2500000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}, \"rydbergLocal\": {\"detuningRange\": [0.0, \
125000000.0], \"detuningSlewRateMax\": 1256600000000000.0, \
\"siteCoefficientRange\": [0.0, 1.0], \"numberLocalDetuningSitesMax\": 200, \
\"spacingRadialMin\": 5e-06, \"timeResolution\": 1e-09, \"timeDeltaMin\": \
5e-08}}, \"performance\": {\"lattice\": {\"positionErrorAbs\": 1.47e-07}, \
\"rydberg\": {\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": 0.02}, \
\"rydbergLocal\": {\"detuningErrorRms\": 0.02, \"siteCoefficientErrorRms\": \
0.1, \"errorRateIncoherentBright\": 36000.0, \"errorRateIncoherentDark\": \
720.0, \"crosstalk\": 0.02}}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/harmony\"}, \"deviceLocation\": \
\"Maryland, USA\", \"updatedAt\": \"2023-05-24T11:00:04+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedModifiers\": [], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"verbatim\"], \"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}}, \
\"paradigmParameters\": {\"$ref\": \"#/definitions/GateModelParameters\"}}, \
\"required\": [\"paradigmParameters\"], \"definitions\": \
{\"GateModelParameters\": {\"title\": \"GateModelParameters\", \
\"description\": \"Defines parameters common to all gate model devices.\", \
\"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"minimum\": 0, \"type\": \
\"integer\"}, \"disableQubitRewiring\": {\"title\": \"Disablequbitrewiring\", \
\"default\": false, \"type\": \"boolean\"}}, \"required\": \
[\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.999}, \"2Q\": {\"mean\": 0.9549}, \
\"spam\": {\"mean\": 0.99752}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \
\"1Q\": 1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}, \
\"errorMitigation\": null}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_noise_amplitude_damping\", \
\"braket_noise_bit_flip\", \"braket_noise_depolarizing\", \
\"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"AdjointGradient\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 0, \
\"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-05-24T17:42:52.674561+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [1.313, 0.07, 1.976], \"schmidtNumber\": 1.151, \
\"commonEfficiency\": 0.369, \"squeezingParametersMean\": {\"low\": 0.708, \
\"high\": 1.173, \"medium\": 0.989}, \"relativeChannelEfficiencies\": [0.927, \
0.939, 0.917, 1.0, 0.968, 0.922, 0.896, 0.97, 0.955, 0.954, 0.97, 0.999, \
0.952, 0.968, 0.95, 0.902], \"loopEfficiencies\": [0.878, 0.882, 0.794]}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{2311., {114.634033203125, 120.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{2311., {114.634033203125, 120.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.865707861027812*^9, 3.865707869311571*^9}, {
   3.8657081633502903`*^9, 3.86570820246817*^9}, {3.865708267869007*^9, 
   3.8657082865220547`*^9}, {3.8657083274156723`*^9, 3.865708329655313*^9}, 
   3.865774812399777*^9, 3.865786385611467*^9, 3.865789373918995*^9, 
   3.865789652878891*^9, 3.888020681742043*^9, 3.888086741956209*^9, 
   3.8880872139253683`*^9, 3.888411907197954*^9, 3.888435920137928*^9, 
   3.8890185016290913`*^9, 3.8890221679550047`*^9, 3.889825292988638*^9, 
   3.892225443218458*^9, 3.892753404330204*^9, 3.8938838910442343`*^9, 
   3.8938851745369062`*^9, {3.8938852059952393`*^9, 3.8938852095498257`*^9}, 
   3.893892343872426*^9, {3.893933866841906*^9, 3.893933877157325*^9}, 
   3.8939346118275003`*^9, {3.893937578450911*^9, 3.893937587593232*^9}, 
   3.893979307823852*^9},
 CellLabel->"Out[34]=",
 CellID->198112506,ExpressionUUID->"b6b8ec8d-c1cc-491f-ace8-57204bba63f5"]
}, Open  ]],

Cell["Pick IonQ Harmony as a QPU:", "CodeText",
 CellChangeTimes->{{3.894409243112204*^9, 3.8944092543963757`*^9}},
 CellID->933129803,ExpressionUUID->"b1f14303-8a83-4280-a07a-098c83337900"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ionq", "=", 
  RowBox[{"devices", "[", 
   RowBox[{"3", ",", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ImportString", "[", 
        RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}], ",", 
      "\"\<DeviceCapabilities\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.888087105264069*^9, 3.888087119421659*^9}, {
   3.889022187291685*^9, 3.889022203734682*^9}, {3.893884143006398*^9, 
   3.893884145490096*^9}, {3.893884585807118*^9, 3.893884586110527*^9}, {
   3.893884700867744*^9, 3.8938847152019663`*^9}, {3.8938851900813417`*^9, 
   3.893885251170599*^9}, {3.893933786796397*^9, 3.893933815092855*^9}, {
   3.893934005088566*^9, 3.8939340053514423`*^9}, {3.893985647859153*^9, 
   3.893985648199307*^9}, 3.893985688747781*^9},
 CellLabel->"In[210]:=",
 CellID->299664691,ExpressionUUID->"14b8c529-b751-4696-98cd-04ed85fd00ea"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
       "DeviceName" -> "Harmony", "ProviderName" -> "IonQ", "DeviceType" -> 
       "QPU", "DeviceStatus" -> "ONLINE", 
       "DeviceCapabilities" -> <|
        "service" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.device_service_properties", 
             "version" -> "1"|>, 
           "executionWindows" -> {<|
             "executionDay" -> "Weekdays", "windowStartHour" -> "12:00:00", 
              "windowEndHour" -> "03:00:00"|>}, "shotsRange" -> {1, 10000}, 
           "deviceCost" -> <|"price" -> 0.01, "unit" -> "shot"|>, 
           "deviceDocumentation" -> <|
            "imageUrl" -> 
             "http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png", "summary" -> 
             "Universal gate-model QPU based on trapped ions", 
             "externalDocumentationUrl" -> 
             "https://ionq.com/quantum-systems/harmony"|>, "deviceLocation" -> 
           "Maryland, USA", "updatedAt" -> "2023-05-24T11:00:04+00:00"|>, 
         "action" -> <|
          "braket.ir.jaqcd.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.jaqcd.program", 
             "supportedOperations" -> {
              "x", "y", "z", "rx", "ry", "rz", "h", "cnot", "s", "si", "t", 
               "ti", "v", "vi", "xx", "yy", "zz", "swap"}, 
             "supportedResultTypes" -> {<|
               "name" -> "Sample", "observables" -> {"x", "y", "z", "h", "i"},
                 "minShots" -> 1, "maxShots" -> 10000|>, <|
               "name" -> "Expectation", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Variance", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Probability", "minShots" -> 1, "maxShots" -> 
                10000|>}, "disabledQubitRewiringSupported" -> False|>, 
           "braket.ir.openqasm.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.openqasm.program", 
             "supportedOperations" -> {
              "x", "y", "z", "rx", "ry", "rz", "h", "cnot", "s", "si", "t", 
               "ti", "v", "vi", "xx", "yy", "zz", "swap"}, 
             "supportedModifiers" -> {}, 
             "supportedPragmas" -> {
              "braket_result_type_sample", "braket_result_type_expectation", 
               "braket_result_type_variance", 
               "braket_result_type_probability", "verbatim"}, 
             "forbiddenPragmas" -> {
              "braket_unitary_matrix", "braket_result_type_state_vector", 
               "braket_result_type_density_matrix", 
               "braket_result_type_amplitude", 
               "braket_result_type_adjoint_gradient"}, "maximumQubitArrays" -> 
             1, "maximumClassicalArrays" -> 1, 
             "forbiddenArrayOperations" -> {
              "concatenation", "negativeIndex", "range", "rangeWithStep", 
               "slicing", "selection"}, "requiresAllQubitsMeasurement" -> 
             True, "supportPhysicalQubits" -> True, 
             "requiresContiguousQubitIndices" -> False, 
             "supportsPartialVerbatimBox" -> False, 
             "supportsUnassignedMeasurements" -> True, 
             "disabledQubitRewiringSupported" -> False, 
             "supportedResultTypes" -> {<|
               "name" -> "Sample", "observables" -> {"x", "y", "z", "h", "i"},
                 "minShots" -> 1, "maxShots" -> 10000|>, <|
               "name" -> "Expectation", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Variance", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 10000|>, <|
               "name" -> "Probability", "minShots" -> 1, "maxShots" -> 
                10000|>}|>|>, 
         "deviceParameters" -> <|
          "title" -> "IonqDeviceParameters", "description" -> 
           "This defines the parameters common to all the IonQ devices.", 
           "type" -> "object", 
           "properties" -> <|
            "braketSchemaHeader" -> <|
              "title" -> "Braketschemaheader", 
               "const" -> <|
                "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
                 "version" -> "1"|>|>, 
             "paradigmParameters" -> <|
              "$ref" -> "#/definitions/GateModelParameters"|>|>, 
           "required" -> {"paradigmParameters"}, 
           "definitions" -> <|
            "GateModelParameters" -> <|
              "title" -> "GateModelParameters", "description" -> 
               "Defines parameters common to all gate model devices.", "type" -> 
               "object", 
               "properties" -> <|
                "braketSchemaHeader" -> <|
                  "title" -> "Braketschemaheader", 
                   "const" -> <|
                    "name" -> "braket.device_schema.gate_model_parameters", 
                    "version" -> "1"|>|>, 
                 "qubitCount" -> <|
                  "title" -> "Qubitcount", "minimum" -> 0, "type" -> 
                   "integer"|>, 
                 "disableQubitRewiring" -> <|
                  "title" -> "Disablequbitrewiring", "default" -> False, 
                   "type" -> "boolean"|>|>, 
               "required" -> {"qubitCount"}|>|>|>, 
         "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_capabilities", 
           "version" -> "1"|>, 
         "paradigm" -> <|
          "braketSchemaHeader" -> <|
            "name" -> 
             "braket.device_schema.gate_model_qpu_paradigm_properties", 
             "version" -> "1"|>, 
           "connectivity" -> <|
            "fullyConnected" -> True, "connectivityGraph" -> <||>|>, 
           "qubitCount" -> 11, "nativeGateSet" -> {"GPI", "GPI2", "MS"}|>, 
         "provider" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.ionq.ionq_provider_properties", 
             "version" -> "1"|>, 
           "fidelity" -> <|
            "1Q" -> <|"mean" -> 0.999|>, "2Q" -> <|"mean" -> 0.9549|>, 
             "spam" -> <|"mean" -> 0.99752|>|>, 
           "timing" -> <|
            "T1" -> 10000., "T2" -> 0.2, "1Q" -> Rational[1, 100000], "2Q" -> 
             0.0002, "readout" -> 0.00013, "reset" -> Rational[1, 50000]|>, 
           "errorMitigation" -> Null|>|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[548.8000000000001], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[548.8000000000001], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{548.8000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ProviderName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceStatus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{675., {87.634033203125, 93.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{675., {87.634033203125, 93.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893985689762308*^9},
 CellLabel->"Out[210]=",
 CellID->1288760327,ExpressionUUID->"cb21c9b5-144f-4f07-8feb-cc27104fe2ec"]
}, Open  ]],

Cell["\<\
Transform the quantum circuit into Qiskit and finds it QASM using AWSProvider \
for IonQ Harmony:\
\>", "CodeText",
 CellChangeTimes->{{3.894409142689378*^9, 3.8944091711006804`*^9}},
 CellID->21171522,ExpressionUUID->"0586f5a5-7012-4ffa-beda-858e65ac2cfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qasm", "=", 
  RowBox[{
   RowBox[{"qc", "[", "\"\<Qiskit\>\"", "]"}], "[", 
   RowBox[{"\"\<QASM\>\"", ",", 
    RowBox[{"\"\<Provider\>\"", "->", "\"\<AWSBraket\>\""}], ",", 
    RowBox[{"\"\<Backend\>\"", "->", "\"\<Harmony\>\""}]}], "]"}]}]], "Input",
 
 CellChangeTimes->{
  3.89397837322099*^9, {3.893979023157269*^9, 3.89397902339569*^9}, {
   3.8939856407032967`*^9, 3.8939856428582563`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[209]:=",
 CellID->566056634,ExpressionUUID->"3f6393fa-d222-4b6d-a9a3-e501c9d4544c"],

Cell[BoxData["\<\"OPENQASM 3.0;\\nqubit[3] q;\\nh q[0];\\nh q[1];\\nh \
q[1];\\ncnot q[0], q[1];\\nh q[0];\\nh q[1];\\nh q[2];\\nh q[2];\\ncnot q[1], \
q[2];\\nrz(1.0471975511965976) q[1];\\nh q[1];\\nh \
q[2];\\nrz(2.0943951023931953) q[2];\\nh q[2];\\n#pragma braket result \
probability q[2], q[0]\\n#pragma braket result probability q[1]\\n#pragma \
braket result probability q[0], q[2]\"\>"], "Output",
 CellChangeTimes->{3.893985651071908*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[209]=",
 CellID->361291428,ExpressionUUID->"199806dc-66d6-4db0-b81d-537ec42195cb"]
}, Open  ]],

Cell["Send a quantum task to IonQ Harmony", "CodeText",
 CellChangeTimes->{{3.894409265081049*^9, 3.894409272407343*^9}},
 CellID->479116543,ExpressionUUID->"ae84de68-1722-4544-bb05-fef169de630a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"taskIonQ", "=", 
  RowBox[{"braket", "[", 
   RowBox[{"\"\<CreateQuantumTask\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<DeviceArn\>\"", "->", 
     RowBox[{"ionq", "[", "\"\<DeviceArn\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<DeviceParameters\>\"", "->", 
     RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "\"\<OutputS3Bucket\>\"", "->", "\"\<amazon-braket-wolfram-mads\>\""}], 
    ",", 
    RowBox[{"\"\<OutputS3KeyPrefix\>\"", "->", "\"\<tasks\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Shots\>\"", "->", "100"}], ",", 
    RowBox[{"\"\<Action\>\"", "->", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<braketSchemaHeader\>\"", "->", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{
          "\"\<name\>\"", "->", "\"\<braket.ir.openqasm.program\>\""}], ",", 
          RowBox[{"\"\<version\>\"", "->", "\"\<1\>\""}]}], "|>"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<source\>\"", "->", "qasm"}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<ValidateRequest\>\"", "->", "False"}], ",", 
    RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.865715607622096*^9, {3.865715657856832*^9, 3.865715685574893*^9}, {
   3.865715908969448*^9, 3.865715911059112*^9}, {3.8657464769232597`*^9, 
   3.8657464783877277`*^9}, {3.865746532336252*^9, 3.865746537101515*^9}, {
   3.865774050391601*^9, 3.8657740608839617`*^9}, 3.865774147326192*^9, {
   3.865774185264494*^9, 3.865774238923164*^9}, {3.8657747781081867`*^9, 
   3.86577478289659*^9}, {3.8657753019298887`*^9, 3.865775305676918*^9}, {
   3.865775470796884*^9, 3.865775487894023*^9}, 3.8657849615071983`*^9, {
   3.86578499412759*^9, 3.865784998736903*^9}, {3.865785220751919*^9, 
   3.865785220910696*^9}, {3.865787611599177*^9, 3.8657876163359623`*^9}, {
   3.865787875611175*^9, 3.8657878772838297`*^9}, {3.8657879097402153`*^9, 
   3.865787915164289*^9}, {3.865788145902522*^9, 3.865788147062911*^9}, {
   3.8657882321191072`*^9, 3.865788238117799*^9}, {3.865790241011203*^9, 
   3.865790241310337*^9}, {3.866891354694018*^9, 3.8668913570198097`*^9}, 
   3.8873790197560673`*^9, {3.887379312080139*^9, 3.8873793127893543`*^9}, {
   3.8880210659190474`*^9, 3.8880210773011827`*^9}, 3.888021537642292*^9, {
   3.888021799213346*^9, 3.88802179984583*^9}, {3.8880871427590733`*^9, 
   3.8880871429982033`*^9}, {3.888087261503124*^9, 3.888087264466572*^9}, {
   3.8882299268724003`*^9, 3.888229940545334*^9}, {3.8883642580895967`*^9, 
   3.888364262572686*^9}, {3.888411925165447*^9, 3.888411925390647*^9}, {
   3.888412797259831*^9, 3.8884128051291533`*^9}, {3.888416893471814*^9, 
   3.8884168948218813`*^9}, {3.888423279388673*^9, 3.888423304441114*^9}, {
   3.888423839821334*^9, 3.888423869490582*^9}, {3.8884257315794*^9, 
   3.888425735023978*^9}, {3.888427055453306*^9, 3.888427056096311*^9}, {
   3.888427397321205*^9, 3.888427401722554*^9}, {3.888428199287758*^9, 
   3.8884282862649097`*^9}, {3.888428361284049*^9, 3.88842836337061*^9}, {
   3.888432992578787*^9, 3.888432994081499*^9}, {3.88843334868213*^9, 
   3.888433348908598*^9}, 3.888433578133059*^9, {3.888436051041669*^9, 
   3.888436054784013*^9}, {3.889022415192625*^9, 3.889022416139834*^9}, {
   3.889023096470767*^9, 3.88902310349566*^9}, {3.88902314829224*^9, 
   3.8890232064799347`*^9}, 3.88902331046245*^9, {3.889023510202517*^9, 
   3.88902351139563*^9}, 3.8890236828345757`*^9, {3.890254414309963*^9, 
   3.890254420656749*^9}, {3.8920693645923862`*^9, 3.8920693938729277`*^9}, 
   3.89393421910579*^9, 3.893934257444582*^9, {3.893979355684547*^9, 
   3.893979391957713*^9}, {3.893985696171975*^9, 3.893985709590769*^9}, 
   3.893985768157134*^9, 3.894409283337009*^9},
 CellLabel->"In[211]:=",
 CellID->128740928,ExpressionUUID->"128774e6-4508-4c43-a0b0-387f50e06525"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "QuantumTaskArn" -> 
       "arn:aws:braket:us-east-1:153593885406:quantum-task/7e0f331a-0868-4831-\
9027-6262afacdc14", "Status" -> "INITIALIZED"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1:153593885406:quantum-task/7e0f331a-\
0868-4831-9027-6262afacdc14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["INITIALIZED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{746., {33.634033203125, 39.365966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{746., {33.634033203125, 39.365966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8939857998005257`*^9},
 CellLabel->"Out[212]=",
 CellID->1847359169,ExpressionUUID->"25e9b4c1-c824-409a-8fe9-97268eb50597"]
}, Open  ]],

Cell["Check the status of the task:", "CodeText",
 CellChangeTimes->{{3.8944092934579897`*^9, 3.894409300308206*^9}},
 CellID->1235823430,ExpressionUUID->"d8422710-dcc1-4b8a-a39e-37acde286911"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<GetQuantumTask\>\"", ",", 
   RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
    RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.894014490290979*^9},
 CellLabel->"In[213]:=",
 CellID->246985057,ExpressionUUID->"4d7fbb22-940a-4caa-906e-f8cf490952fb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "CreatedAt" -> 
       DateObject[{2023, 5, 25, 6, 42, 52.891}, "Instant", "Gregorian", 0.], 
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
       "DeviceParameters" -> <|
        "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
           "version" -> "1"|>, 
         "paradigmParameters" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.gate_model_parameters", "version" -> 
             "1"|>, "qubitCount" -> 3, "disableQubitRewiring" -> False|>, 
         "errorMitigation" -> Null|>, "EndedAt" -> 
       DateObject[{2023, 5, 25, 12, 19, 12.005}, "Instant", "Gregorian", 0.], 
       "FailureReason" -> Null, "HybridJobArn" -> Null, "Id" -> 
       "7e0f331a-0868-4831-9027-6262afacdc14", "OutputS3Bucket" -> 
       "amazon-braket-wolfram-mads", "OutputS3Directory" -> 
       "tasks/7e0f331a-0868-4831-9027-6262afacdc14", "QuantumTaskArn" -> 
       "arn:aws:braket:us-east-1:153593885406:quantum-task/7e0f331a-0868-4831-\
9027-6262afacdc14", "Shots" -> 100, "Status" -> "COMPLETED", "Tags" -> <||>|>,
      "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[548.8000000000001], {
         "DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[548.8000000000001], {
         "DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "Shots", "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 13, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CreatedAt", 
                  Style[
                  "CreatedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["CreatedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 25 May 2023 06:42:52\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{548.8000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceParameters", 
                  Style[
                  "DeviceParameters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EndedAt", 
                  Style[
                  "EndedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EndedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Thu 25 May 2023 12:19:12\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FailureReason", 
                  Style[
                  "FailureReason", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FailureReason"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HybridJobArn", 
                  Style[
                  "HybridJobArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HybridJobArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Id", 
                  Style[
                  "Id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["7e0f331a-0868-4831-9027-6262afacdc14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Bucket", 
                  Style[
                  "OutputS3Bucket", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Bucket"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram-mads", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Directory", 
                  Style[
                  "OutputS3Directory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Directory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tasks/7e0f331a-0868-4831-9027-6262afacdc14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1:153593885406:quantum-task/7e0f331a-\
0868-4831-9027-6262afacdc14", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Shots", 
                  Style[
                  "Shots", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Shots"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["COMPLETED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tags", 
                  Style[
                  "Tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[<||>, ShowStringCharacters -> False], 
                  Style[
                   Style[<||>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{709., {182.134033203125, 187.865966796875}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{709., {182.134033203125, 187.865966796875}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.894014493854751*^9},
 CellLabel->"Out[213]=",
 CellID->2139446995,ExpressionUUID->"0ee94ada-c712-4f77-98e8-eb3bee3b5833"]
}, Open  ]],

Cell["Find the output directory on S3:", "CodeText",
 CellChangeTimes->{{3.8944093086585703`*^9, 3.894409317648725*^9}},
 CellID->105050983,ExpressionUUID->"10690411-4933-482f-a492-a236bc0faf2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputPathIONQ", "=", 
  RowBox[{
   RowBox[{"braket", "[", 
    RowBox[{"\"\<GetQuantumTask\>\"", ",", 
     RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
      RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
     RowBox[{"\"\<RequestRegion\>\"", "\[Rule]", "\"\<us-east-1\>\""}]}], 
    "]"}], "[", "\"\<OutputS3Directory\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.865774288910781*^9, 3.865774302655974*^9}, {
   3.8657755067819777`*^9, 3.865775530692313*^9}, 3.865785191773793*^9, {
   3.865787623282075*^9, 3.865787623431526*^9}, 3.8657876889328413`*^9, {
   3.865788671183608*^9, 3.865788674620947*^9}, {3.8668914565942097`*^9, 
   3.866891462956624*^9}, {3.88802203598565*^9, 3.888022036554968*^9}, {
   3.8884362577799788`*^9, 3.888436271704986*^9}, 3.889022435168468*^9, {
   3.8920700833914547`*^9, 3.892070086312271*^9}},
 CellLabel->"In[214]:=",
 CellID->219459597,ExpressionUUID->"1af870be-1347-40fb-b72f-5e47f18f0d2f"],

Cell[BoxData["\<\"tasks/7e0f331a-0868-4831-9027-6262afacdc14\"\>"], "Output",
 CellChangeTimes->{{3.866891457229656*^9, 3.8668914636679688`*^9}, 
   3.888022038464198*^9, 3.888423333752983*^9, 3.8884330249135942`*^9, 
   3.888433363128872*^9, 3.888436272837302*^9, 3.8920701096892767`*^9, 
   3.892070876744282*^9, 3.8920715684904957`*^9, 3.89401456803209*^9},
 CellLabel->"Out[214]=",
 CellID->1228024880,ExpressionUUID->"b9929e2f-b017-4d04-8e3d-8c78f09854d5"]
}, Open  ]],

Cell["Get the results:", "CodeText",
 CellChangeTimes->{{3.894409321615744*^9, 3.894409324146912*^9}},
 CellID->177113552,ExpressionUUID->"664247d4-8d6f-47b6-87d9-fb3227a2e6bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsIonQ", "=", 
  RowBox[{"KeySort", "[", 
   RowBox[{
    RowBox[{"ImportByteArray", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s3", "[", 
        RowBox[{"\"\<GetObject\>\"", ",", 
         RowBox[{
         "\"\<Bucket\>\"", "->", "\"\<amazon-braket-wolfram-mads\>\""}], ",", 
         
         RowBox[{"\"\<Key\>\"", "->", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"outputPathIONQ", ",", "\"\<results.json\>\""}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"\"\<RequestRegion\>\"", "\[Rule]", "\"\<us-east-1\>\""}]}], 
        "]"}], "[", "\"\<Body\>\"", "]"}], ",", "\"\<RawJSON\>\""}], "]"}], 
    "[", "\"\<measurementProbabilities\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8884867363261347`*^9, 3.888486757215773*^9}, 
   3.891105502680538*^9, {3.892071659215604*^9, 3.892071663200149*^9}, 
   3.892071743990715*^9, 3.892753511821843*^9, 3.894014572310096*^9},
 CellLabel->"In[215]:=",
 CellID->2096310490,ExpressionUUID->"3400da66-be51-4061-8324-5a8be9466f0b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"000\"\>", "\[Rule]", "0.07`"}], ",", 
   RowBox[{"\<\"001\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"010\"\>", "\[Rule]", "0.09`"}], ",", 
   RowBox[{"\<\"011\"\>", "\[Rule]", "0.17`"}], ",", 
   RowBox[{"\<\"100\"\>", "\[Rule]", "0.17`"}], ",", 
   RowBox[{"\<\"101\"\>", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\<\"110\"\>", "\[Rule]", "0.16`"}], ",", 
   RowBox[{"\<\"111\"\>", "\[Rule]", "0.1`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.894014574577763*^9},
 CellLabel->"Out[215]=",
 CellID->1073692748,ExpressionUUID->"8ec922c6-7e0f-4958-91e7-867d1e60b118"]
}, Open  ]],

Cell["Make sure zero probabilities are also included:", "CodeText",
 CellChangeTimes->{{3.894409329313747*^9, 3.894409345392991*^9}},
 CellID->222938317,ExpressionUUID->"d200bcb1-0b44-494f-b610-da6403a2dbc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsIonQ", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"StringJoin", "/@", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "3"}], "]"}]}],
       ",", "0"}], "]"}], ",", "resultsIonQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8927535596229258`*^9, 3.892753560500123*^9}, {
   3.89275362417319*^9, 3.8927536305881042`*^9}, 3.894014579855094*^9},
 CellLabel->"In[216]:=",
 CellID->248929895,ExpressionUUID->"ab79f4d8-2e74-4c5b-b478-c670d1fd16ae"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"000\"\>", "\[Rule]", "0.07`"}], ",", 
   RowBox[{"\<\"001\"\>", "\[Rule]", "0.2`"}], ",", 
   RowBox[{"\<\"010\"\>", "\[Rule]", "0.09`"}], ",", 
   RowBox[{"\<\"011\"\>", "\[Rule]", "0.17`"}], ",", 
   RowBox[{"\<\"100\"\>", "\[Rule]", "0.17`"}], ",", 
   RowBox[{"\<\"101\"\>", "\[Rule]", "0.04`"}], ",", 
   RowBox[{"\<\"110\"\>", "\[Rule]", "0.16`"}], ",", 
   RowBox[{"\<\"111\"\>", "\[Rule]", "0.1`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8927535608077908`*^9, 3.892753630892602*^9, 
  3.894014580209969*^9},
 CellLabel->"Out[216]=",
 CellID->466600909,ExpressionUUID->"c95d7cf1-f947-4a7a-aaf8-46997033b268"]
}, Open  ]],

Cell["Visualize results:", "CodeText",
 CellChangeTimes->{{3.894409347743888*^9, 3.8944093567446547`*^9}},
 CellID->663633852,ExpressionUUID->"773fd43b-1d1d-40f3-b6b8-a344ad766392"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Values", "[", "results", "]"}], ",", "qpuResults", ",", 
      RowBox[{"Values", "@", "resultsIonQ"}]}], "}"}], "]"}], ",", 
   RowBox[{"ChartLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Wolfram quantum framwork\>\"", ",", "\"\<IBMQ Belem\>\"", ",", 
      "\"\<IonQ\>\""}], "}"}]}], ",", 
   RowBox[{"ChartLabels", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Keys", "[", "results", "]"}], ",", "None"}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"GridLines", "->", "Automatic"}], ",", 
   RowBox[{"AspectRatio", "->", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Measurement probabilities\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.887039062332301*^9, 3.8870390652533007`*^9}, {
  3.887039121615898*^9, 3.887039165620427*^9}, {3.887069563045588*^9, 
  3.887069569066731*^9}, {3.887069617735136*^9, 3.8870696371869783`*^9}, {
  3.887078233732377*^9, 3.887078301089211*^9}, {3.887971761345772*^9, 
  3.887971764492241*^9}, {3.8940147018360033`*^9, 3.894014715109955*^9}, {
  3.894409416426989*^9, 3.894409452790823*^9}, {3.89440949959151*^9, 
  3.89440952845222*^9}, {3.894409656687731*^9, 3.89440965998713*^9}},
 CellLabel->"In[25]:=",
 CellID->343887171,ExpressionUUID->"38d5bbb7-b895-4dcc-af5b-43e0c0c31f67"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.6463772954924873, 0.}, {31.21118530884808, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{1.2456872565386754`, 0.}, {1.9474123539232053`,
                   0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{2.2456872565386754`, 0.}, {2.9474123539232053`,
                   0.11775}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.11775]& , 
              TagBoxNote -> "0.11775"], 
             StyleBox["0.11775`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.11775, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{3.2456872565386754`, 0.}, {3.9474123539232053`,
                   0.07}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.07]& , TagBoxNote -> 
              "0.07"], 
             StyleBox["0.07`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.07, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{5.1405119643850865`, 0.}, {5.842237061769616, 
                  0.1875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 16]]& , TagBoxNote -> "3/16"], 
             StyleBox[
              FractionBox["3", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{6.1405119643850865`, 0.}, {6.842237061769616, 
                  0.177}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.177]& , TagBoxNote -> 
              "0.177"], 
             StyleBox["0.177`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.177, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{7.1405119643850865`, 0.}, {7.842237061769616, 
                  0.2}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 0.2]& , TagBoxNote -> "0.2"], 
             StyleBox["0.2`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 RectangleBox[{9.035336672231496, 0.}, {9.737061769616027, 
                  0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{10.035336672231496`, 0.}, {10.737061769616027`,
                   0.1055}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.1055]& , 
              TagBoxNote -> "0.1055"], 
             StyleBox["0.1055`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1055, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{11.035336672231496`, 0.}, {11.737061769616027`,
                   0.09}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.09]& , TagBoxNote -> 
              "0.09"], 
             StyleBox["0.09`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.09, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{12.930161380077907`, 0.}, {13.631886477462437`,
                   0.1875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 16]]& , TagBoxNote -> "3/16"], 
             StyleBox[
              FractionBox["3", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{13.930161380077907`, 0.}, {14.631886477462437`,
                   0.15975}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.15975]& , 
              TagBoxNote -> "0.15975"], 
             StyleBox["0.15975`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.15975, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{14.930161380077907`, 0.}, {15.631886477462437`,
                   0.17}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.17]& , TagBoxNote -> 
              "0.17"], 
             StyleBox["0.17`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.17, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{16.82498608792432, 0.}, {17.526711185308848`, 
                  0.1875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 16]]& , TagBoxNote -> "3/16"], 
             StyleBox[
              FractionBox["3", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{17.82498608792432, 0.}, {18.526711185308848`, 
                  0.14825}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.14825]& , 
              TagBoxNote -> "0.14825"], 
             StyleBox["0.14825`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.14825, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{18.82498608792432, 0.}, {19.526711185308848`, 
                  0.17}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"],
               StatusArea[#, 0.17]& , TagBoxNote -> "0.17"], 
             StyleBox["0.17`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.17, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{20.71981079577073, 0.}, {21.42153589315526, 
                  0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{21.71981079577073, 0.}, {22.42153589315526, 
                  0.073}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.073]& , TagBoxNote -> 
              "0.073"], 
             StyleBox["0.073`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.073, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{22.71981079577073, 0.}, {23.42153589315526, 
                  0.04}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"],
               StatusArea[#, 0.04]& , TagBoxNote -> "0.04"], 
             StyleBox["0.04`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.04, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{24.61463550361714, 0.}, {25.31636060100167, 
                  0.1875}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[3, 16]]& , TagBoxNote -> "3/16"], 
             StyleBox[
              FractionBox["3", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[3, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{25.61463550361714, 0.}, {26.31636060100167, 
                  0.16425}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.16425]& , 
              TagBoxNote -> "0.16425"], 
             StyleBox["0.16425`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.16425, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{26.61463550361714, 0.}, {27.31636060100167, 
                  0.16}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"],
               StatusArea[#, 0.16]& , TagBoxNote -> "0.16"], 
             StyleBox["0.16`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.16, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{28.50946021146355, 0.}, {29.21118530884808, 
                  0.0625}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 
               Rational[1, 16]]& , TagBoxNote -> "1/16"], 
             StyleBox[
              FractionBox["1", "16"], {}, StripOnInput -> False]], 
            Annotation[#, 
             Style[
              Rational[1, 16], {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{29.50946021146355, 0.}, {30.21118530884808, 
                  0.0545}, "RoundingRadius" -> 0]}], 
               "DelayedMouseEffectStyle"], StatusArea[#, 0.0545]& , 
              TagBoxNote -> "0.0545"], 
             StyleBox["0.0545`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0545, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.5319999999999999]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              TagBox[
               DynamicBox[{
                 FEPrivate`If[
                  CurrentValue["MouseOver"], 
                  EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                 
                 RectangleBox[{30.50946021146355, 0.}, {31.21118530884808, 
                  0.1}, "RoundingRadius" -> 0]}], "DelayedMouseEffectStyle"], 
              StatusArea[#, 0.1]& , TagBoxNote -> "0.1"], 
             StyleBox["0.1`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.6463772954924873, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, Frame -> True, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.5965498052309404`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.59654980523094, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         3.59654980523094, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         4.543962159154146, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         2.59654980523094, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {5.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         6.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         7.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         8.438786867000555, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         6.491374513077352, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {9.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         10.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         11.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         12.333611574846966`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         10.38619922092376, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {13.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         14.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         15.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         16.22843628269338, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         14.281023928770171`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {17.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         18.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         19.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         20.12326099053979, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         18.175848636616585`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {21.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         22.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         23.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         24.0180856983862, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         22.070673344462996`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {24.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         25.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         26.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         27.912910406232612`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         25.965498052309407`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}, {28.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         29.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         30.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         29.860322760155817`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             TemplateBox[{
               RowBox[{
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                 FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
             "Plain"], 
            Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]], 
           TraditionalForm], {0, 0}}}, {{1.5965498052309404`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         2.59654980523094, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         3.59654980523094, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         4.543962159154146, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         5.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         6.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         7.491374513077352, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         8.438786867000555, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         9.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         10.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         11.38619922092376, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         12.333611574846966`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         13.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         14.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         15.281023928770171`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         16.22843628269338, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         17.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         18.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         19.175848636616585`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         20.12326099053979, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         21.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         22.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         23.070673344462996`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         24.0180856983862, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         24.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         25.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         26.965498052309407`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         27.912910406232612`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.008, 0}}, {
         28.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         29.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}, {
         30.860322760155817`, 
          FormBox[
           TemplateBox[{0}, "Spacer1"], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotLabel -> 
     FormBox["\"Measurement probabilities\"", TraditionalForm], 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {None, 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Wolfram quantum framwork\"", "\"IBMQ Belem\"", "\"IonQ\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5319999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5319999999999999]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.5319999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.784, 0.47519999999999996`, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5319999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.887971891018359*^9, {3.894014686602627*^9, 3.8940147157827377`*^9}, {
   3.89440941236913*^9, 3.8944094537883253`*^9}, {3.894409483896653*^9, 
   3.894409530857332*^9}, 3.894409660971199*^9},
 CellLabel->"Out[25]=",
 CellID->2079118709,ExpressionUUID->"7613e6b2-f739-4c92-8574-0c71602d2b6f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Supporting Data and Definitions", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContentElements"},
 DefaultNewCellStyle->"Input",
 CellTags->{
  "ContentElements", "Supporting Data and Definitions", "TemplateCellGroup"},
 CellID->529773346,ExpressionUUID->"7d2b64f5-4283-407d-b97d-35719e162c6c"],

Cell[TextData[{
 "(Your data can be ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Dataset", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Dataset",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "bc64254f-87ad-4853-8a10-84f2f53daa82"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["EntityStore", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/EntityStore",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "3a6615a7-8626-4f41-bc4a-c0dbb612d084"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Image", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Image",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "cefa9612-9160-4bc9-8ef7-9fcdef5e8ba3"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Audio", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Audio",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "3afed6cf-2837-43d6-89ad-08f99e9a1a62"],
 " or any other expression)"
}], "Text",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellID->867258710,ExpressionUUID->"27b2f66c-800f-4825-b81d-e13514c12dd1"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"ResourceData", "[", 
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", 
               TooltipStyle -> "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", TooltipStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11., {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<NameOfContent\>\"", "]"}], "=", 
   TagBox["xxxx",
    Annotation[#, "Placeholder"]& ,
    AutoDelete->True]}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 CellTags->"DefaultContent",
 CellID->466226405,ExpressionUUID->"3581859a-d55c-41ed-9bec-1b7dee2ca198"],

Cell[TextData[{
 "(xxxx can be your data, or ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["File", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/File",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "2c69826f-b599-4b33-9fad-db16a8c77e84"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["CloudObject", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/CloudObject",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "ff66c8b8-8e65-45c3-998e-a35b516d634e"],
 " or ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["LocalObject", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/LocalObject",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "e30d4649-0216-4d2e-928b-a46760bdd889"],
 " that contains it.)"
}], "Text",
 Editable->False,
 Selectable->False,
 Deletable->False,
 IgnoreSpellCheck->True,
 CellID->395327254,ExpressionUUID->"49e69de4-0f65-496e-bb93-2557338265c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Thumbnail Image", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"HeroImage", "TemplateCellGroup", "Thumbnail Image"},
 CellID->633683855,ExpressionUUID->"f9e12427-a272-4b69-be1a-accfb179fb83"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQl4FeXZ/x9BXLCuVWlttWpb/1ZbW1vrUmtfq9ZWry5va/v+SmtrtTZh
ERHiwiZlFwmo7MpSEQREkUUSlVVQdgLIEgJCCcQINIAsCYFAyPnfb54fz284
5+TkzJlhtufzuXLlOueeZ2ae78yd57m/OTNzrnqk7e+yG2VlZeWeJb9+9/Az
P23f/uGOD1wgb/7weG7LnMf/8eh9jz/5j5x/tL/1kcYSfPO0rKz7T8/K+t/X
MQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPCQ6dOn
T6jjjTfeOH78eH3NPvzwQ9UsPz/fy+6BprKy0u8uxJYvX+5iDlRVVamk2rZt
W+qWhYWF0uydd95RbysqKtSKZWVl8vbIkSMTJ06Ut1u3brWudfjw4ZqaGvW6
vjYAAAAAECXat2+ffYINGzYkbSMl4hNPPKHadOjQweMewueff/7yyy/369fP
747E/vWvf7mYA7t371ZJtXDhwtQtx44dK82efPJJ9fazzz5TK4rbitUdH/V2
wYIFepUlS5bk5ubqlE7aBgAAAAAihtXdjBs3LmmbNWvW6Da4G+956aWX5Mg/
//zzfnckNO5my5YtcYYddwMAAABgAlZ3I6+TXpw2atQo3I2PvPDCC4a7G2m5
adMmfQFbnLuRpP3kk0+kQUVFhWqwefPmOHeT2AYAAAAAoofV3SS9OK26urpN
mzYNupt9+/YdPXq0wd1Jm71796a+hUQK0c8//zydraXJgQMHkrq2I0eOyKI0
t3Ds2LEMVk9/F0p1bW1t4qIM3I2cDjlxqdvUd1iqqqoOHjyYdJU4d3P48OF0
7gaq76QnuhvpdoqbvzRx7iaRRHfTIOkksByZNM8mAAAAAPiCcjcDBw587LHH
kl6cVlhYKPFWrVr17ds30d1s2rSpf//+bdu2lUUtWrTo3r37zJkzEwvUrVu3
DhkypGPHjjk5OarsfPrpp6dPnx5XT65ateq5555r2bKlNJCWnTt3fu2116xV
8eTJk5999lnZVNz2J02aJPHhw4ert/v37+9ax9q1a7t16yZby83NHTt2rOqY
lP1vvvlmly5dVGfkCAwePHjXrl16a1Lbq9V37tw5YcIE6YY0k+MjLuOTTz6R
BitXrhSvofop2qdNmxbnfRrchfDOO+9In6WZlOKyZWUh5be8lupdHzdpo3Yk
h1dev/jii4knUXVYlkr7UaNGiVh1kHv06CGHVDdLfVhkI3L25bzoD/Kkz7on
Cu1uPv74YznXSp2c1okTJyaaqQZPunY3c+fOlS23a9dOHed+/foVFxdbN5Wf
ny/qBgwYoN7GuRvJECVfiR09evRTTz2lGjz55JMSl97GtdGkk8DiaOQo6f8D
SGP5W1i9enXiiQAAAAAAf1E1m/iCV155JenFabJI4sOGDRMHFOduZsyYoQtX
K1IuWmvdefPmJbZRyDZ1syVLliRtIyXxvn37VBvVSalR41RI9yQuFbt6+5//
/CdxO1K4yqLy8nJZPXGpFNXi49Tqe/fu1RV+XDOJSKWdqFoOhe5MOrsQxowZ
k11nG1u3bp3YUj0NbP369YlHI/Ek6g4nIl0tKipq8LCUlpaqCj8O6d5HH32k
d6Tcjdps4nbEPdk66drdJO22WB69NVv33YhBjtuaSEh63006CXz48OGePXsm
7aR+hhsAAAAABATtblauXKlqNuvFPFLaSX0rwRUrVsS5G33j9lNPPSVFplSP
W7duVfe/C9OnT1fNjh49qnbxxBNPSL26fft2WXHatGnaOKgyXujYsaPa2saN
GysqKuS38jJCQUGBapOBuxE78Nprr/Xu3Vvq7diJO/QFKdRl11JgS7mrPreS
HqqbMqxmQfa1aNGi1atX6xWz6z5hmT17dklJiShq0aKFWld3Jp1dxE64G1XJ
T5gwQQ7LunXr1EVogtTz6ujJEevVq5dE/vnPf8rrnTt3Jp5Ea4flMG7evFmK
848//lg96U5+Sx9SHJYjR45oOyb7Faeza9eumTNnqs+MJAHEr6kdaXcjTJw4
UTojjVViCK+//rqtk251N88888zatWv37NmzcOFCdaxk76JLbdCWu1EHXEXU
3quqqlI8eSB1Ai9evFhF5BxJf2TjH374oTqw4gcbvPwPAAAAALxEuxt9f42q
qxXq8xSJy9I4d6P+Q966dWtrvX38+HEpmFVc3aGgP5FZtmyZdb9SPaq4+jhD
an71dvLkybqNVN25ubmPP/746NGjVcSuu5Geq8JeIfZBxcVZWFcXI6DikyZN
ilnMgpSv+nIy3cM4LVL0qqC6gi7NXcQs7uatt97SzcROSg0vwa5du+pgg/fd
6A6LE9GOQCguLrbutL7DIuW6ir/xxhvWzWrD+/LLL6uIdjeiWjfTJ138iHiE
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
/JgxY6S3sjXd29THrby8/Morr5SWp59+er9+/aTUXLp0qfUpc5m5m8x0yWEZ
OHDge++9J7W9KomFl19+OVZ3zZUcT13Gv/HGG/JWPQA8A3ejePDBB8UfPfPM
M+pTCUXjxo3btm0rGx8yZIj2LA2axHnz5skqauPiWfLr2L17dxBOfd++fVVE
zqzu8JNPPqnXnTp1qo6rz0BPO+20srKymJ2/hRRK49xNr169tBb1hxkKMDUO
ofAzCjMLP5LcKMxM8kgSZHcj/Pa3v5WS6fzzz9f/o1YRKfzU23fffVeVVRMn
TlQRqaVVRP8XevPmzaq8lNrM+oBo2eZf/vIX1VhcgAqmuO9mzZo1el1d+F14
4YWfffaZClZXV8taTZo0yTrZkSkeffRRtYryRzFLiSsbsT6HTd3JrmpFfR1X
bW3tj3/8Y1Wrp74RQ9ux1157TQfFKqoL9rIycjeZ6RKLsWfPHt1ywYIFKv7z
n/9cB5Ped5OZu7E+qVs/CyLrhJlSzJ49WwWlyE9xDDXqAjPJOh0JwqnfsGGD
ama9JvOGG27Qkq1X7v3oRz+SyA9/+MOYzb+F+pTGTnY34ltVs2uuuUYZqLCA
u3EIhZ9RmFn4keRGYWaSR5KAu5uhQ4eqwmnt2rWxukc9n3feefK2bdu2qsGh
Q4fUo9UefvhhFVFX3UjxpjeiP+4ZPnx43PZ37dp1zjnnyKIf/OAHKmLX3cTd
8rNt27Y+ffr8/e9/T/zOR/EaahX9rANd4ubl5Vlb6mI4rsPqcQrC9u3bUxw0
dXGU1MlxF1/JMTzttNOyMnI3menSdbJG6mTr0Y65527kt/7QQZAyW23hy1/+
svU4HDx4UMV1wqQmhbvx99R/4xvfkLe33367eiuZrE6u+thOf8qze/duZWd6
9+4ds/m3UJ/SmMXd6Cd4yB7tfreU7+BuHELhZxRmFn4kuVGYmeSRJODuZtOm
Tap2GjZsWMzyz/93331Xt1EX1VxzzTWxuv9yq5vHH3roId1A/1M66b3kP//5
z7PqLrxRb+26m9QXOO3fv3/58uWvv/76E088IT1Uq7z33ntqqS5x58+fb11L
f/wUF9eVZIov3KmpqVG3n/zjH/9IXBpnDWyZiAx0WU+T4sYbb8w6+XuI3HI3
d955Z1xL5aQS46qGl6xIKi2OFO7G31Ofm5ubVfdpjnqawbhx4+StSNNbUNf4
jR07Vr0tKiqK2fxbSKFUuRvlpxSFhYUNH82AgbtxCIWfUZhZ+JHkRmFmkkeS
gLsb4fLLL5fa6c9//rO87tixo7w+88wzrY8XVoWfFFp79+6VEk7VWurmdMXt
t9+eVfdgqKTbz8nJsRbSdt3N6tWrE7cpLuyBBx748pe/nJWMxBJXfTKlGTRo
kIpv2LDBGn/xxRfjStxE1q9fr9p069Ytcem9996b5cDd2NVlvUVdoc7Fd77z
HR1xy9387ne/i2t50UUXZSV7avH555+f5Ya78ffUa6evnrH217/+Navuorji
4mIVnzBhgsRFflbdB3lqLVt/CymU6luoND/72c/SOZ6BAnfjEAo/ozCz8CPJ
jcLMJI8kwXc3Dz/8sNROV111VezEf/7j6iipD1V99e6777788stZdU7H+q9p
aZ9V92/tpNvXd6l8+umnMfvuJvEe6meffTau8Lviiiuk+NS3nCeWuJs2bbJu
wYm70Q/ISnpfibqFPx13o24AsZoI57pibribxI4pd5P4GORT7W78PfU1NTXK
YoglkbfKT/Xv31/3+dFHHz127JgS+9RTT6m1bP0tpFCq3c1NN930/e9/X71W
jzEMEbgbh1D4GYWZhR9JbhRmJnkkCb67ef3113UdqK6EUSWcFVXaST2v/oMt
5ZZ1qb6XIemXPOp77dXt0g7djb5p/eyzz+7evfuiRYv0TgcMGKAWFRQUqMip
cDeHDh1SRynplWm33nprVjJ3k3gjj3q2mG7piq6YfXfTYMdigXE33p96le1X
Xnml/sjy448/lvhDDz2UVfdcgnnz5qm4fpqBrb+FBt3N9ddfL9spLi5W976d
e+65IXpgWgx34xgKP6Mws/AjyY3CzCSPJMF3Nzt37lQlVsuWLdWLxOudVDl3
7733fv3rX5cXHTp0sC7VRdo777wTt6J4AfXlj/opBA7djb77e/LkyXH70oWl
7sapcDexEwX5t771rbinClRUVKjCXlsDXXWvX7/e2nLPnj1xzx9wRVcsbXeT
fsdigXE33p962ZEKPv744/L7kksuqa2tjZ24B0d1O6vuyc86E2z9LTTobvSx
1V+8e/fdd6s+hALcjUMo/IzCzMKPJDcKM5M8kgTf3Qjf/va3s04g1WZigwkT
JmRZmDdvnnXpihUrVEn8ve99z/pYLaFPnz5qlVatWqmIQ3ejvyfxww8/tMZX
r16tH1ysbpSInTJ307p1a9XMevNRzFKCamvwr3/9S0XibtLR91/olq7oiiVz
N/pbIEtLS3Uw/Y7FAuNuvD/1YlfVhyYKrVRS1/rnYP0Uz9bfQvruRjb13e9+
VzVOfBpbYMHdOITCzyjMLPxIcqMwM8kjSSjcjfrKTsUjjzyS2EA/9jar7p4C
dV2NFfXhjvDjH/94/fr1tbW1skqXLl1UpScV7NatW1VLh+5Gf1Xi3XffrQrU
/fv3T5s2TT3JTTF69GjV+BS5mz179qhyWkpf6XxVVVVlZWVeXl7jxo3jrMEn
n3yijsAZZ5wxatQokbx06dIWLVroruqWruiKJXM3+mlgst933nlH3fGRfsdi
gXE3vpz6++67T298xIgROn799dfruL4cTpH+30L67kYoLCxUCfaFL3yhpKQk
nWPrO7gbh1D4GYWZhR9JbhRmJnkkCYW7yc/P16XapEmTkra56aabVIP7778/
cemuXbusHwDpOl/40pe+ZK0wHbobKc5VUa1o1qyZ3tcPf/hD9aJ169aq8Sly
N8Kbb76pngutsD65N+tka/Df//3fWQlI/R/3aDJXdMWSuRt9u4pCf7VKmh2L
Bcbd+HLqhw8frvdoXdS2bVsVFK9x5MgR6yrp/y3YcjfCU089pdrfddddobg+
DXfjEAo/ozCz8CPJjcLMJI8kbrmbDH7S3/7BgwfVt8A3atRo7969Sdvo2zcG
DhyYtIHUeB06dFCVrUK2pp6ga22mL9/6z3/+oyL6Kinr/T79+/dXQev1VIoV
K1ao79PUXHHFFWPGjImd+DZ5fV+DLmW3bNli3YL+DtO40ld/lUk6926LF7vx
xhu1r7n44ovHjh2baA2OHj3avn37pk2b6mMia61evVrd5XTPPfe4qEv4yU9+
klV3WZQ12KVLl7POOkutoh79batjqtJ+8MEH4/alPjSpz/X87W9/a/AYCqJR
Gj/wwAM6EqhTX1ZWpr/E0xqfMWOGav+HP/whUVSafwsplKo7dOKObVVVlfqO
UWHcuHGJ+w0auBuHUPgZhZmFH0luFGYmeSQxcH6X+vD9999fvHjx7t27T9Eu
amtrP/300/l17Nmz5xTtJR0+//zzuXPnFhUVqf+l1/cdnTU1NWvXrp0zZ476
asj6OHW6Dh06tHnzZqmipScZdCw4BOfUp4MHfwtBxsDRz10o/IzCzMKPJDcK
M5M8kjC/G0V97gbAQBj9HELhZxRmFn4kuVGYmeSRhPndKHA3ABpGP4dQ+BmF
mYUfSW4UZiZ5JGF+NwrcDYAm24LffQklFH5GYWbhR5IbhZlJHhmyT8bv7oB3
4G4ANIx+DqHwMwozCz+S3CjMTPJIwvxuFFu3bi0qKlLfKQNgOIx+DqHwMwoz
Cz+S3CjMTPJIwvwOAGbC6OcQCj+jMLPwI8mNwswkjyTM7wBgJsEZ/f5yazNb
P3739/9C4WcUZhZ+JLlRmJnkkSQ48zsAgJcEZ/RzOCf6BYWfUZhZ+JHkRmFm
kkeS4MzvAABeEpzRD3dDJRB8zCz8SHKjMDPJI0lw5ncAAC8JzuiHu6ESCD5m
Fn4kuVGYmeSRJDjzOwCAlwRn9MPdUAkEHzMLP5LcKMxM8kgSnPkdAMBLgjP6
4W6oBIKPmYUfSW4UZiZ5JAnO/A4A4CXBGf1wN1QCwcfMwo8kNwozkzySBGd+
BwDwkuCMfrgbKoHgY2bhR5IbhZlJHkmCM78DAHhJcEY/3A2VQPAxs/AjyY3C
zCSPJMGZ3wEAvCQ4ox/uhkog+JhZ+JHkRmFmkkeS4MzvAABeEpzRD3dDJRB8
zCz8SHKjMDPJI0lw5ncAAC8JzuiHu6ESCD5mFn4kuVGYmeSRJDjzOwCAl2Rb
8LcnuBsqgeBjZuFHkhuFmUkeGbJPxu/uhJU9e/asXLmysLBw9+7dfvcFAGwT
nNEPd0MlEHzMLPxIcqMwM8kjSXDm96Q0b9780ksvbdas2ZEjR1Rk2bJllybj
K1/5yo033vjYY4/NmzcvcTt/+tOfdMuXX345xR5HjhypW86YMSOxQXFxcdu2
bb/4xS9mWbjwwgvbtGkji9KXlpmQ9PnqV78qW3v66aedbAQgwgRn9MPdUAkE
HzMLP5LcKMxM8kjiyvwu5yiDn3S2fO+99yr7UFVVpSLz58/PSkmjRo369+8f
t52f//znusEdd9yRYo+yVLd844034pbm5eU1btw4xa779OmT5kHLTEj6qH4G
p34DCBrB+evA3VAJBB8zCz+S3CjMTPJI4pa7Sf+E2pqgU7ib733ve61O8Oij
j/7xj3/87ne/q63BCy+8YN2O1d2Ia/jss8+S7u7TTz897bTT6nM3OTk5etHN
N9/cvXv3adOmzZkzZ9iwYTfddJNe9NBDD6UjLTMh6YO7AUhNcP46cDdUAsHH
zMKPJDcKM5M8koTX3XTu3Dmx/csvv6yq+htvvNEat7obYdCgQUl3N2DAAGsz
q7uZMmWKCp555pn9+vU7fvx43LrPP/+8XnHcuHENSstMSPrgbgBSE5y/DtwN
lUDwMbPwI8mNwswkjyQRczfCbbfdphpYP6BR7qZp06aXX365vPjxj3+cdF31
EcxFF10U526qq6ubNWumgmPGjKmvt3IwVZsLLrigoqIitbTMhFipqak5cOBA
fdtv0N3IurKF1J3UHDp0KGnjysrKo0ePprkRgECBu3EIhZ9RmFn4keRGYWaS
R5LouZs//vGPqkFZWZkOKndzzjnn5ObmyovTTjst0TJs2bJFrdi6des4dzNt
2jQVufnmm2tra+vr7bFjx+688840P77JTIggh6Jjx44//OEPzz77bFkqfu03
v/nNypUr41avz9189NFHv/rVr5TLky3Idrp37x7nUN56661bbrnll7/8pcS7
du0qqmVr55577v333//222/H6oyVrCXrSvz000+/7rrrZJXUegESKSoqGj9+
/LBhw6ZOnbpx48b0V5w1a9bgwYPFXMfFJVJQUDBixIhXX311wYIFqf/JgLtx
CIVfBvzl1ma2fvzu7//DzMKPJDcKM5M8kkTM3Rw6dOjSSy+VpTfccIM1rt3N
8uXL1eoDBw6MW7dXr14S/8pXviKmJs7daKPx7rvvpu7wyJEjVUuxBqlbZiZk
7dq13/rWt7ISaNKkSV5enrVlorsRX9apU6dGjRolrv79739/69atuuVLL70k
QbEz9913X+KOpOe///3vEzeCwQFb5Ofnxz2dXoxJOiuuWLFCtd+7d681Ll4m
NzfXukH540rxwHbcjUMo/DIgpOc6ZmrhR5IbhZlJHknC627atGmz6wSfffbZ
pk2b3nzzzauvvjqr7qOZUaNGWbej3Y28vuqqq+T17bffHrevb3/72xJv3769
bCfO3Vx33XUq8umnn6bu8MqVK1XLK6+8MnXLDIQcPXr02muvVWuJv5g7d+7q
1atffvllfSndBx98oBsnuptx48apZpdccoms9fHHH8+cOVP7lP/6r//SLZW7
UUhP+vTpM3bs2LvuusvqZaQnY8aMmT59evPmzVXk+uuvTy0ZQFNWVtayZcuc
nBxJwtLS0hkzZig/sm7duhRriUOXP5zWrVsndTcjR46UYO/evTdv3lxcXNyt
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
Bw6ooHY31sbHjx+/5557VHzx4sUqeP7558tb2UKKy9IU1dXV6nK4M888M83j
AwABBHfjEAq/DMDdhOt0k+RGYWaS+wvuRkUuu+wydaNN4vd75ubmqsYzZsxQ
EeVuLrzwwrjGAwcOtLY8evSoenv11Ven06trrrlGtbf1QAMACBS4G4dQ+GUA
7iZcp5skNwozk9xfcDfy9t///rd626pVq8TGS5YsUUv79++vIsrd3HzzzXEt
p0+frlpOmTJFRc4991x527Rp03R6pRpfdNFF6TQGgGCCu3EIhV8G4G7CdbpJ
cqMwM8n9BXcjb2fPnq3e9uvXL7Hxzp071VItSrmbBx54IK6l3s7bb7+tItde
e62KfPbZZ6m7JA1UyzvuuCMdCQAQTHA3DqHwywDcTbhON0luFGYmub/gbuTt
okWL1Nu8vLzExuXl5Wrp3//+fzeu3E3z5s3jWia6m9/+9rcqMnPmzNRd0uu2
aNEiHQkAEExwNw6h8MsA3E24TjdJbhRmJrm/4G7kbVlZmXrbrl27xMaFhYVq
aceOHVUkfXczadIkFbn99tvjGi9cuHDr1q367d13361aDhs2LL3DAwBBBHfj
EAq/DMDdhOt0k+RGYWaS+wvuRt7W1tY2bdpU3v7gBz9IbNy/f3/VeMSIESqS
vruR7evv0BGnY2182223NWnS5B//+Me2bdtky6rNVVddVVlZafdAAUBwwN04
hMIvA3A34TrdJLlRmJnk/oK7UZFf/vKXKjJ58mRry/37919yySUSb9So0c6d
O1UwfXcjjB8/XgXPOecc7Y+qq6uvvPJKFW9Sh7w47bTT5s6dm9mxAoCAgLtx
CIVfBuBuwnW6SXKjMDPJ/QV3oyKbNm0644wzsuq+m2bo0KEHDhyoqalZvHix
fiyAviwtZtPdxCxfpiPcd999sn3Z8sKFC3/6059mWfjVr37l7IABgP/gbhxC
4ZcBuJtwnW6S3CjMTHJ/wd3o4EsvvdS4cWMVP60O7Tvat29vXd2uu6mtre3W
rZt1g0lp1KjRww8/XFZWlukBAwD/wd04hMIvA3A34TrdJHkG/OXWZrZ+/O7v
/8PMJPeXgLubDH7S2fIvfvELZWEOHz5sjS9fvvwHP/iBuAztOC677LLnn38+
bvUvfvGLsujBBx+Mi8+bN0+tNW3atMSdFhYWPvTQQ2eddZbV0chb2c6//vWv
q6++WkXOPvvsBh+wBgCBBXfjEAq/DMDdhOt0k+QZENIBLWZqkvtLkN2NXxw6
dEhszvvvv79hw4aamhp3N37kyJFNmzbNnTt3zpw58kLbq8rKytzc3HPOOadx
48alpaXu7hQAPCM4o19IiwEKvwzA3YTrdJPkGRDSAS1mapL7C+4mUOzdu3fK
lCl+9wIAMic4o19IiwEKvwzA3YTrdJPkGRDSAS1mapL7C+4GAMBFgjP6hbQY
oPDLANxNuE43SZ4BIR3QYqYmub/gbgAAXCTbgr89cTwnPmLrx61uU/hlAO4m
XKebJM8A3I1Rp9shLqrOPhnPJAAABIfgjH4hnRMp/DIAdxOu002SZwDuxqjT
7RA+uwEAcJHgjH4hnRMp/DIAdxOu002SZwDuxqjT7RDcDQCAiwRn9AvpnEjh
lwG4m3CdbpI8A3A3Rp1uh+BuAABcJDijX0jnRAq/DMDdhOt0k+QZgLsx6nQ7
BHcDAOAiwRn9QjonUvhlAO4mXKebJM8A3I1Rp9shuBsAABcJzugX0jmRwi8D
cDfhOt0keQbgbow63Q7B3QAAuEhwRr+QzokUfhmAuwnX6SbJMwB3Y9Tpdgju
BgDARYIz+oV0TqTwywDcTbhON0meAbgbo063Q3A3AAAuEpzRL6RzIoVfBuBu
wnW6SfIMwN0YdbodgrsBAHCR4Ix+IZ0TKfwyAHcTrtNNkmcA7sao0+0Q3A0A
gIsEZ/QL6ZxI4ZcBuJtwnW6SPANwN0adbofgbgAAXMTF0U9muvR/ElcP6Zxo
ZuH31B+vsfXjrmpbwnE3Xqomyd1S7SOGJrmz0+0Q3A0AgIu4625MnBPNLPx8
VW1LOO7GS9UkuVuqfYQkz0y4E3A3AAAugrvxTDWFn1uqbQnH3XipmiR3S7WP
kOS4GwCAUIO78Uw1hZ9bqm0Jx914qZokd0u1j5DkuBsAgFCTbcHhppgTKfxw
NyQ5Se6Kah8hyUPtbrJPxt1+AgCEAj678Uw1hZ9bqm0Jx914qZokd0u1j5Dk
oXY3VnA3AGAmuBvPVFP4uaXalnDcjZeqSXK3VPsISY67AQAINbgbz1RT+Lml
2pZw3I2Xqklyt1T7CEmOuwEACDW4G89UU/i5pdqWcNyNl6pJcrdU+whJjrsB
AAg1uBvPVFP4uaXalnDcjZeqSXK3VPsISY67AQAINbgbz1RT+Lml2pZw3I2X
qklyt1T7CEmOuwEAcEhRUdH48eOHDRs2derUjRs3Nti+srKyoKBgxIgRr776
6oIFCyoqKqxL5e3MZOzevTvp1nA3nqmm8HNLtS3huBsvVZPkbqn2EZIcdwMA
4IT8/Py4p9OLc0nRXsxLbm6utX3nzp2tzmXVqlXZyVi9enXSDeJuPFNN4eeW
alvCcTdeqibJ3VLtIyQ57gYAIGPKyspatmyZk5Mzc+bM0tLSGTNmKCeybt26
+lYZOXKkNOjdu/fmzZuLi4u7desmb/v06aMbTJ8+XSI9e/acdDI7duxIukHc
jWeqKfzcUm1LOO7GS9UkuVuqfYQkz+h0N7P1441q3A0AeE9eXp4MPhMnTtQR
sSESGTRoUNL2GzdulKUtWrQ4cOCAisgL8UcSLCkpUZEhQ4bI2/nz56fZB9yN
Z6op/NxSbUs47sZL1SS5W6p9hCSPTJLjbgDAY6qrq3NycmTw2bZtmw6WlpZK
ROJVVVWJq0yZMkWWDh482BocOnSoBN966y31tkOHDvJ269ataXYDd+OZ6hDN
iQFXbUs47sZL1SS5W6p9hCSPTJLjbgDAY0pKSpSRqa2ttcbVZzFJ7cmgQYNk
UX5+vjVYUFAgwYEDB8bqHjigrm17//33pXGvXr1GjRq1cuXKFN3A3XimOkRz
YsBV2xKOu/FSNUnulmofIckjk+S4GwDwmKKiIhl5cnNz4+LqoQFJb73p27dv
4lVn8lbfelNcXJz0kQKvvvpqfd3A3XimOkRzYsBV2xKOu/FSNUnulmofIckj
k+S4GwDwmDVr1sjI07Fjx7h4165dJZ70A5devXrJosWLF1uDy5cvl2C3bt3k
9axZs5SdefPNN0tKSrZv3z569GgVWbJkSdJu4G48Ux2iOTHgqm0Jx914qZok
d0u1j5DkkUly3A0AeMz69etl5OnUqVNcXPyOxMX7JK7y3HPPJfoUMTsSFOMj
r8vLy2Vp3MOfBw8eLA369euXtBu4G89Uh2hODLhqW8JxN16qJsndUu0jJHlk
khx3AwAeU1ZWJiNP27Zt4+ISkfimTZsSVxk+fLgsmjNnjjU4e/ZsCQ4YMKC+
HRUWFkqDJ554IunSxMvYCjPF1pyYuLrd2SFudbuzQ8YyM1adVDiqM1BtS7iL
qm0JJ8lR7TDJ/YIkD12SJ70iXWG/NgEAyJyKigo1+FRXV+vgkSNHVLC8vDxx
lQkTJsiiyZMnW4PyVoKjR4+W1/v379++fbv8tjZQl8ClcDcuiKmD//hlIBzV
Gai2JZzPbrxUTZK7pdpHSPLIJDnuBgC8Rz1AYPny5TqybNkyibRr1y5pe/UA
gWeffdYa7NKliwTnzZsnr1944QV5PXToUGsD9Rzpvn37Jt0m7sYz1SGaEwOu
2pZw3I2Xqklyt1T7CEkemSTH3QCA9+Tn58vg07Nnz0OHDslb+d2jRw+JzJgx
QzXYt29fYWGhvo/m8OHD6ro1/WCBRYsWydv27dtXVFTIW1lRffSjHygtL1q3
bp34pDUN7sYz1SGaEwOu2pZw3I2Xqklyt1T7CEkemSTH3QCA94glUW6lQ4cO
I0eOVF/E2a1bt5qaGtVAfZSTk5OjV5k2bZqKDKxDfR+oNFNLq6qqOnfurAxO
v379hg0bpr49Jy8vT28zDtyNZ6pDNCcGXLUt4bgbL1WT5G6p9hGSPDJJjrsB
AF/YtWtXz5499Q2APXr0KCsr00tXrFghwVatWulIbW1tfn6++jhGLZo6dap1
g7t37xZTozfYpk2bCRMm1GdtYrgbD1WHaE4MuGpbwnE3Xqomyd1S7SMkeWSS
HHcDAD5SUVGxffv2PXv2iHlJp/3x48d37NghPujw4cNJG0hclu7cuVNapt4U
7sYz1SGaEwOu2pZw3I2Xqklyt1T7CEkemSTH3QCAmeBuPFMdojkx4KptCcfd
eKmaJHdLtY+Q5JFJctwNAJgJ7sYz1SGaEwOu2pZw3I2Xqklyt1T7CEkemSTH
3QCAmeBuPFMdojkx4KptCcfdeKmaJHdLtY+Q5JFJctwNAJgJ7sYz1SGaEwOu
2pZw3I2Xqklyt1T7CEkemSTH3QCAmeBuPFMdojkx4KptCcfdeKmaJHdLtY+Q
5JFJctwNAJgJ7sYz1SGaEwOu2pZw3I2Xqklyt1T7CEkemSTH3QCAmeBuPFMd
ojkx4KptCcfdeKmaJHdLtY+Q5JFJctwNAJgJ7sYz1SGaEwOu2pZw3I2Xqkly
t1T7CEkemSTH3QCAmeBuPFMdojkx4KptCcfdeKmaJHdLtY+Q5JFJctwNAJhJ
tgWHm2JOjMycGHDVtoTjbrxUTZK7pVoJT//HLdW2hJPkAVSdfTJuHR8AgBDB
ZzeeqQ74nBgi1baEU/h5qZokd0u1LeEkuZeqQ5TkuBsAMBPcjWeqQzQnBly1
LeEUfl6qJsndUm1LOEnupeoQJTnuBgDMBHfjmeoQzYkBV21LOIWfl6pJcrdU
2xJOknupOkRJjrsBADPB3XimOkRzYsBV2xJO4eelapLcLdW2hJPkXqoOUZLj
bgDATHA3nqkO0ZwYcNW2hFP4eamaJHdLtS3hJLmXqkOU5LgbADAT3I1nqkM0
JwZctS3hFH5eqibJ3VJtSzhJ7qXqECU57gYAzAR345nqEM2JAVdtSziFn5eq
SXK3VNsSTpJ7qTpESY67AQAzwd14pjpEc2LAVdsSTuHnpWqS3C3VtoST5F6q
DlGS424AwExwN56pDtGcGHDVtoRT+HmpmiR3S7Ut4SS5l6pDlOS4GwAwE9yN
Z6pDNCcGXLUt4RR+Xqomyd1SbUs4Se6l6hAlOe4GAMwEd+OZ6hDNiQFXbUs4
hZ+Xqklyt1TbEk6Se6k6REmOuwEAM8HdeKY6RHNiwFXbEk7h56Vqktwt1baE
k+Reqg5RkuNuAMBMcDeeqQ7RnBhw1baEU/h5qZokd0u1LeEkuZeqQ5TkuBsA
MBPcjWeqQzQnBly1LeEUfl6qJsndUm1LOEnupeoQJTnuBgDMBHfjmeoQzYkB
V21LOIWfl6pJcrdU2xJOknupOkRJjrsBADPJtuBwU8yJkZkTA67alnAKPy9V
k+RuqbYlnCT3UnXAkzz7ZNw6PgAAIYLPbjxTHfA5MUSqbQmn8PNSNUnulmpb
wklyL1WHKMlxNwBgJrgbz1SHaE4MuGpbwin8vFRNkrul2pZwktxL1SFKctwN
AJgJ7sYz1SGaEwOu2pZwCj8vVZPkbqm2JZwk91J1iJIcdwMAZoK78Ux1iObE
gKu2JZzCz0vVJLlbqm0JJ8m9VB2iJMfdAICZ4G48Ux2iOTHgqm0Jp/DzUjVJ
7pZqW8JJci9VhyjJcTcAYCa4G89Uh2hODLhqW8Ip/LxUTZK7pdqWcJLcS9Uh
SnLcDQCYCe7GM9UhmhMDrtqWcAo/L1WT5G6ptiWcJPdSdYiSHHcDAGaCu/FM
dYjmxICrtiWcws9L1SS5W6ptCSfJvVQdoiTH3QCAmeBuPFMdojkx4KptCafw
81I1Se6WalvCSXIvVYcoyXE3AGAmuBvPVIdoTgy4alvCKfy8VE2Su6XalnCS
3EvVIUpy3A0AmAnuxjPVIZoTA67alnAKPy9Vk+RuqbYlnCT3UnWIkhx3AwBm
grvxTHWI5sSAq7YlnMLPS9UkuVuqbQknyb1UHaIkx90AgJngbjxTHaI5MeCq
bQmn8PNSNUnulmpbwklyL1WHKMlxNwBgJrgbz1SHaE4MuGpbwin8vFRNkrul
2pZwktxL1SFKctwNAJgJ7sYz1SGaEwOu2pZwCj8vVZPkbqm2JZwk91J1iJIc
dwMAZpJtweGmmBMjMycGXLUt4RR+Xqomyd1SbUs4Se6l6oAnefbJuHV8AABC
BJ/deKY64HNiiFTbEk7h56Vqktwt1baEk+Reqg5RkuNuAMBMcDeeqQ7RnBhw
1baEU/h5qZokd0u1LeEkuZeqQ5TkuBsAMBPcjWeqQzQnBly1LeEUfl6qJsnd
Um1LOEnupeoQJTnuBgDMBHfjmeoQzYkBV21LOIWfl6pJcrdU2xJOknupOkRJ
jrsBADPB3XimOkRzYsBV2xJO4eelapLcLdW2hJPkXqoOUZLjbgDATHA3nqkO
0ZwYcNW2hFP4eamaJHdLtS3hJLmXqkOU5LgbADAT3I1nqkM0JwZctS3hFH5e
qibJ3VJtSzhJ7qXqECU57gYAzAR345nqEM2JAVdtSziFn5eqSXK3VNsSTpJ7
qTpESY67AQAzwd14pjpEc2LAVdsSTuHnpWqS3C3VtoST5F6qDlGS424AwExw
N56pDtGcGHDVtoRT+HmpmiR3S7Ut4SS5l6pDlOS4GwAwE9yNZ6pDNCcGXLUt
4RR+Xqomyd1SbUs4Se6l6hAlOe4GAMwEd+OZ6hDNiQFXbUs4hZ+Xqklyt1Tb
Ek6Se6k6REmOuwEAM8HdeKY6RHNiwFXbEk7h56Vqktwt1baEk+Reqg5RkuNu
AMBMcDeeqQ7RnBhw1baEU/h5qZokd0u1LeEkuZeqQ5TkuBsAMBPcjWeqQzQn
Bly1LeEUfl6qJsndUm1LOEnupeoQJTnuBgDMJNuCw00xJ0ZmTgy4alvCKfy8
VE2Su6XalnCS3EvVAU/y7JNx6/gAAIQIPrvxTHXA58QQqbYlnMLPS9UkuVuq
bQknyb1UHaIkx90AgJngbjxTHaI5MeCqbQmn8PNSNUnulmpbwklyL1WHKMlx
NwBgJrgbz1SHaE4MuGpbwin8vFRNkrul2pZwktxL1SFKctwNAJgJ7sYz1SGa
EwOu2pZwCj8vVZPkbqm2JZwk91J1iJIcdwMAZoK78Ux1iObEgKu2JZzCz0vV
JLlbqm0JJ8m9VB2iJMfdAICZ4G48Ux2iOTHgqm0Jp/DzUjVJ7pZqW8JJci9V
hyjJcTcA4BdFRUXjx48fNmzY1KlTN27c2GD7ysrKgoKCESNGvPrqqwsWLKio
qLDbwAruxjPVIZoTA67alnAKPy9Vk+RuqbYlnCT3UnWIkhx3AwC+kJ+fH/d0
ejEmKdqLVcnNzbW279y58+7du9NvEAfuxjPVIZoTA67alnAKPy9Vk+RuqbYl
nCT3UnWIkhx3AwDeU1ZW1rJly5ycnJkzZ5aWls6YMUP5kXXr1tW3ysiRI6VB
7969N2/eXFxc3K1bN3nbp0+f9BvEgbvxTHWI5sSAq7YlnMLPS9UkuVuqbQkn
yb1UHaIkx90AgPfk5eXJ4DNx4kQdmTRpkkQGDRqUtP3GjRtlaYsWLQ4cOKAi
8kL8kQRLSkrSaZAI7sYz1SGaEwOu2pZwCj8vVZPkbqm2JZwk91J1iJIcdwMA
HlNdXZ2TkyODz7Zt23SwtLRUIhKvqqpKXGXKlCmydPDgwdbg0KFDJfjWW2+l
0yAR3E19pHlkzJwTI1n4pXPGI5bkrqsOS5IHX7Ut4S6qtiU8FEnOSA4A4Bkl
JSXKyNTW1lrj6qOWrVu3Jq4yaNAgWZSfn28NFhQUSHDgwIHpNEgEd1MfzImB
VW1LOO7GS9VhSfLgq7YlHHfjpeqwJHn62gEA3KKoqEhGntzc3Li4eiZA0ltv
+vbtK4vmz59vDcpbfWdNgw0SOdXuRrbvcE6ULWQ8O8i6vsyJSVXbmhOdqK5P
uzfuJlG766pTCD+lqlMIT0d1fcKTqrZ1upPmuQd1fpp/3ahuUHv6SX6qVdcn
nJE8kiM5AIC7rFmzRkaejh07xsW7du0q8ZUrVyau0qtXL1m0ePFia3D58uUS
7NatWzoNEsHd1Adzol3VuBvcDe4mtWrcDSN5oEZyAAB3Wb/+f0etTp06xcXF
70hcvE/iKs8995wsWrJkiTUoXkaC4mvSaZAI7qY+mBPtqsbd4G5wN6lV424Y
yQM1kgMAuEtZWZmMPG3bto2LS0TimzZtSlxl+PDhsmjOnDnW4OzZsyU4YMCA
dBokkg0AAABRxFGZAgBgk4qKCjX4VFdX6+CRI0dUsLy8PHGVCRMmyKLJkydb
g/JWgqNHj06nAQAAAAAAwKlAPUBg+fLlOrJs2TKJtGvXLml79XyAZ5991hrs
0qWLBOfNm5dOAwAAAAAAgFNBfn6++I6ePXseOnRI3srvHj16SGTGjBmqwb59
+woLC1evXq3eHj58WF23pp8bsGjRInnbvn37ioqKdBoAAAAAAACcCsRxKDPS
oUOHkSNHyu/suoeb1dTUqAbqo5ycnBy9yrRp01RkYB3q+0ClWfoNAAAAAAAA
TgW7du3q2bOnvgGwR48eZWVleumKFSsk2KpVKx2pra3Nz89v3bq1ai+Lpk6d
at1ggw0AAAAAAABOHRUVFdu3b9+zZ494k3TaHz9+fMeOHeKDDh8+nFkDAAAA
AAAAAAAAAAAAAI+pqqpatmzZli1b/O6I12zevFmEm/bJnZmqzUxyM1XHSHKT
MFM1AEDA2blz5zvvvLNr1y6/OvD555+rBzV4vN8ZM2asWrXK451aGTt2rAhf
uXKllzstLCwsKCjwco9x+KL6s88+MzPJRbV+nKP3+KV6xYoV7777rsc7teJL
kpeVlcnpTvotbN7gy+mura0V1R9//LGXO7XiV5IDAEAKpMKXwdnH2UHo3Lmz
9OHAgQNe7jQnJ8ffr09dsmSJqB4/fryXOx0xYkTr1q293GMcvqgWTyc7Xbt2
rZc7jcOXJJc9jhkzxss9xuGL6uHDh7dp08bLPcbhS5IvX75cdrp+/XovdxqH
96f7+PHjskexk57tMRFfkhwAAFIQBHcjBZj3z8T23d3s3btXVHfp0sXLnfru
bnxRHQR340uS++5ufFHtu7vxJcmD4G68P91BcDe+JDkAAKQgCO5m8eLF3pdh
vrsboWPHjiJcaiHP9ui7u4n5oToI7saXJPfd3fii2nd3E/MjyYPgbrw/3UFw
N74kOQAApCAI7mbPnj3q+1K93GkQ3I36p9/ChQs922MQ3I33qoPgbnxJct+L
Ll9UB8HdeJ/kQXA33p/uILgbX5IcAABSEAR3Ezvxr04v7/sOgrtR//QbNWqU
Z3sMgrvxXnUQ3E3MjyT33d3E/FAdBHfjfZIHwd3EPD/dQXA3MT+SHAAAUhAQ
d/Pqq69KN+bPn+/ZHoPgbnbv3i2qn3zySc/2GAR3473qgLgb75M8CO7Ge9VB
cDfeJ3lA3I3Hpzsg7sb7JAcAgBSkdjeVlZUFBQVSEsvovWDBgoqKilPUZuHC
hdINKUucK0qT1O6mqKho/Pjxw4YNmzp16saNGzNuo/j888+HDBkyb968xEUd
OnQQ4WVlZXb7nxmp3Y0ritLZjseqU7ubdBJYM2vWrMGDB8sqGbTxPsnTcTcp
FIX0Tzsdd+MwgdPZjsdJnqa7cZLAseCd7jTdjUPVDbbxPskBACAFKdyNzFy5
ubnZFjp37rx79+5T0aa8vFziTzzxhMxWp0JmIincTX5+fvbJJH5HTDptFNXV
1b169aqvzpQ+yKI5c+Y4lJMmKdyNW4rS2Y7HqlO4m3SSU7NixQrVJsXd4ina
eJ/kDbqbFL0N7592g+7GeQKnsx2Pkzwdd+MwgQN4utNxNw5Vp9PG+yQHAIAU
pHA3I0eOlEW9e/fevHlzcXFxt27d5G2fPn1ORRvh6aeflvi2bdtc15iU+txN
WVlZy5YtZenMmTNLS0tnzJihZrR169bZaqOQqb9///5qadIS6KOPPpJFgwcP
dlddfdTnbtxSlOZ2PFadwt2kmZy1tbXz58+XQ5eiBEqnjcdJnsLdNNjb8P5p
p3Y3riTw/9/e+b42sbRh+L8NSQkUK4qKFmlRK1UkhX5S/CJYJNIWa1pFjFhQ
CUVEpGJBWizRtqHgh2B+qDTvQweXPcnO7Ozu5Jlnee/rg5xO5+zsc+Yed649
m2zscQbsITfbjZMAC5xus924WrYClzYAAAADOrv58uULtReLxeAlZfQPdN2n
xr29Pbd9FPfu3aPGjY2NcZQ5is5u5ufn6TSWlpaClkePHlHLwsJCoj7Ey5cv
y+Xyv9uc0Vugo6Mj+hVtxv7+/eugqjh0duOqIsvjMFetsxvLcLZaLVVXQOTN
29g+A/aQ61IXe7a5XtoGu3EVYIFL22A3TgIsc7oNduNq2cpc2gAAAAzo7GZ5
ebkwcuNxcXGRGqvVqts+is3NTWq8c+eOk7piibSbfr9P7YX/3oLb39+nFmrv
dDqWfYIhqHFubu7Bgwe6LdDg302/r1+/uixPQ6TduKrI/jgD3qp1dmMZTvWo
0sTERL1eV9u50e2NTZ8Be8h1qYs921wvbYPduAqwwKVtsBsnAZY53Qa7cbVs
ZS5tAAAABnR2s7CwQO30F3u4sVarUWOlUnHbR3F4eEiNtPf+/fu3k9LMRNrN
3t6e2smcnJyE29VFbXd317KPgjY/jUaDrr8bGxuGLZC66be2tuamMCORduOq
IvvjDHir1tmNZThfvXpFm1j1+QLa5ERub2z6DNhDrktd7Nnmemkb7MZVgAUu
bYPdOAmwzOk22I2rZStzaQMAADCgsxu6fBdGvuKSfiyEHrR21Sfg3Llz1G7+
kiJXRNrN9vY2ncDZs2eH2tVnadWz9zZ9hlhfXzdsgV6/fk2/nZ+fT1lJEiLt
xlVFiY7DWbXObhKFU2G4eWvZhzPkhtQFRJ5trpe2zXemZQ+w4TgBnCG3/M60
1AGWOd2W35mWfdna9OEMOQAAAAM6u1HfBfT27dtwo7qAXr161W2fANp7U/vK
ykr2umKJtJuPHz/SCVy8eHGofXp6mtrfv39v2WcI8xbo4OCAfkvXzV6vl7IY
ayLtxlVFiY7DWbXObhKFU5F9C8QZ8tR2k+ulndpucr20x203MqdblN1whhwA
AIABnd3cuHGD2t+9exduVC/gpsuc2z4B6k4g/SvZ64ol0m5ob0AncOnSpaF2
9Spq2vxY9hnCvAUaGG8OuyXSblxVlPQ4bFXr7CZROBXZt0CcIU9tN7le2qnt
JtdLe9x2I3O6RdkNZ8gBAAAY0NkN7RAKIy9rePHiBTXevn3bbZ+A4AO8DI8u
R9pNs9mkE5icnBxqpxZq39nZsewzROwWSH04l+GmX6TduKoo6XHYqtbZTaJw
KrJvgThDntpucr20U9tNrpf2uO1G5nSLshvOkAMAADCgs5uHDx9S++PHj8ON
9CM1BlLgqk8AnQa1nz9/PntdsUTaTbvdLpzS7/eDxl6vpxpbrZZlnyFit0Dq
qY/Nzc2sVcURaTeuKkp6HLaqdXaTKJyK7FsgzpCntptcL+3UdpPrpT1uu5E5
3aLshjPkAAAADOjsRv1P9itXroQbL1++TI31et1tn4BqtUrt9+/fz15XLLr3
3agnSWirELQ0Gg1qOXPmTKI+YcxboE6no75gduit3+NA974bVxXZH4ezap3d
JAqnIvsWiDPkqe0m10s7td0M8ry0x203MqdblN1whhwAAIABnd10u131PEbw
MdI3b97Qj1NTU+12222fgMgPro4Jnd2otxvMzs7++vWLfqQ/Z2ZmCv/9Wleb
PmHMWyD1WebRp/3Hgc5uXFVkfxzOqnV2kyiciuxbIM6Qp7abXC/tLHaT36U9
bruROd2i7IYz5AAAAAzo7IZYXV0tnD5FXDlF3YRsNBrj6DMI3ef8+fOn8zJH
0dkNXanVRfzChQt3796lPwunXwoUfuG4TZ8w5i2QuuMXe4F2gs5uXFVkfxzO
qnV2M7AOZ0DGLRBzyFPbzSDPSzuL3eR3aY/bbgYip1uO3TCHHAAAgAGD3Zyc
nDx9+pQ2w4VTJiYmRj8b66oPQZtP+u309LSr0szo7GZw+l622dnZwj9mZmaa
zWaKPgHPnj0zXIKvXbtGv93a2kpdiz06uxm4q8jyOJxVG+zGMpwB5XI5dgNj
6MMcchu70Z1tfpe2jd1kD3DscQa8Ibe0mywBFjjdlnaTcdna9GEOOQAAAAMG
u1HQ5ePHjx90fe92u2Ptoz6gurS0lOj8U2OwG0W73f727dvx8fHQi8uT9jET
3PHTPQrlFoPdKLJXZHMc5qoNdqOwCbATmENuYzdm8ri0bewmltwtbUu7yY6o
6ba0GwaYQw4AAMBArN2wcf36dc4zibUbHj59+lQ4fc6fZ7hYu+GBuepYu2GD
OeTZ7cYJzFU7sZvsMIeczW5i4ZxuOXbDHHIAAAAGhNhNt9stFotkHJ1Oh2dE
IXaj7vhVq1We4YTYDXPVQuyGP+QS7Ia/aiF2wxxyIXbDPN1C7IY/5AAAAAwI
sRt1n5PzLc9C7Ea9AZxtTyLEbpirFmI3/CGXYDf8VQuxG+aQC7Eb5ukWYjf8
IQcAAGBAiN0sLy/TaayurrKNKMFu1B2/UqkUfnvgWJFgN/xVC7Eb/pBLsBv+
qiXYDX/IhdgN83QLsRv+kAMAADAgxG7Ufc6dnR22ESXYDW1FqOpbt26xjSjB
bvirFmI3/CGXYDf8VUuwG/6QC7Eb5ukWYjf8IQcAAGBAgt30er1isVgul//8
+cM2qAS7UXf8arUa24gS7Ia/agl24yXk3u3GS9US7IY/5BLshn+6JdiNl5AD
AAAwIMFutre36RwqlQrnoBLsZm5ujgrf3d1lG1GC3fBXLcFuvITcu914qVqC
3fCHXILd8E+3BLvxEnIAAAAGJNjNysoKncPz5885B/VuN71er1QqTU5O0gWa
bVDvduOlagl24yXk3u3GS9Xe7cZLyCXYDf90S7AbLyEHAABgQILd3Lx5k85h
f3+fc1DvdvP582eqenFxkXNQ73bjpWoJduMl5N7txkvV3u3GS8gl2A3/dEuw
Gy8hBwAAYMC73fT7/VKpNDU1lfqd4Onwbjfqjl+9Xucc1LvdeKnau934Crlf
u/FVtXe78RJy73bjZbq9242vkAMAADBwcHDw5MmTw8NDXydwfHxcqVToHJjH
XVtbI7NjHjRMrVajwo+OjjgHpX0+5yedR/FS9ffv3/8/Q04jfvjwgXnQAF9V
b21tra+vMw8axkvIm80m/adutVqcg4bxMt3kFDSix7tzvkIOAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAQCz/A3jg7J4=
    "], {{0, 213.}, {549., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{549., 213.},
  PlotRange->{{0, 549.}, {0, 213.}}]], "Output",
 CellChangeTimes->{
  3.887971891018359*^9, {3.894014686602627*^9, 3.8940147157827377`*^9}, {
   3.89440941236913*^9, 3.8944094537883253`*^9}, {3.894409483896653*^9, 
   3.894409530857332*^9}, 3.894409660971199*^9},
 CellLabel->"Out[25]=",
 CellID->1966398081,ExpressionUUID->"d1c005c8-d564-47de-9401-8c31780d198b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->132008035,ExpressionUUID->"f0969c8b-ec27-4ea2-af6f-87c33deaff2c"],

Cell[CellGroupData[{

Cell["Contributed By", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContributorInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->430591647,ExpressionUUID->"4fce881b-9e8b-488a-b618-55986021c49d"],

Cell["Wolfram Research, Quantum Computation Framework Team", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.890955218040729*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->744260130,ExpressionUUID->"763382d8-d594-4a60-897c-720f44948d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the example in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bc60503f-b551-4da9-9fbb-42271a8defbf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->973908638,ExpressionUUID->"0276bd08-483a-4c73-901e-5381a80d5ef8"],

Cell["Quantum processing units", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.894409561687243*^9, 3.894409566327265*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014,ExpressionUUID->"3c9ac8e1-2f23-456f-a7cf-1fa7586749b1"],

Cell["Quantum circuits", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.894409561687243*^9, 3.894409571173111*^9}},
 CellID->675451420,ExpressionUUID->"d3d3ffd3-9183-48fa-938d-06a6b2dd65b0"],

Cell["Quantum measurement", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.894409561687243*^9, 3.8944095740858917`*^9}},
 CellID->127652083,ExpressionUUID->"8280d7fe-fdd0-40d5-bffa-1f63d6de0f7b"],

Cell["Probability", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.894409561687243*^9, 3.8944095781290073`*^9}},
 CellID->602105378,ExpressionUUID->"5c1b9186-44d3-462a-9260-83a4ab4b8352"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your example. These choices \
determine which pages your example will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7b97c29f-da08-4232-851c-fb4bd1895772"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->405271300,ExpressionUUID->"826f6508-3b7f-4d85-922d-a57cbfb8b77a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Algebra"}], "\" \"", 
           StyleBox[
           "\"Algebra\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Calculus"}], "\" \"", 
           StyleBox[
           "\"Calculus\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Complex Systems"}], "\" \"", 
           StyleBox[
           "\"Complex Systems\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Control Systems"}], "\" \"", 
           StyleBox[
           "\"Control Systems\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering"}], "\" \"", 
           StyleBox[
           "\"Engineering\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Food & Nutrition"}], "\" \"", 
           StyleBox[
           "\"Food & Nutrition\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Optimization"}], "\" \"", 
           StyleBox[
           "\"Optimization\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Puzzles and Recreation"}], "\" \"", 
           StyleBox[
           "\"Puzzles and Recreation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Modeling"}], "\" \"", 
           StyleBox[
           "\"System Modeling\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Video Processing"}], "\" \"", 
           StyleBox[
           "\"Video Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, 
             DefinitionNotebookClient`PackageScope`$$customInputField}], 
           "\" \"", 
           StyleBox[
            DynamicModuleBox[{$CellContext`input$$, $CellContext`update$$}, 
             InputFieldBox[
              
              Dynamic[$CellContext`input$$, ($CellContext`input$$ = #; \
$CellContext`update$$[#])& ], String, BoxID -> 
              "574d2def-48b9-4645-9bdb-323c906ef357", ContinuousAction -> 
              False, FieldHint -> " Enter a custom value ", 
              ImageSize -> {250, Automatic}, FieldCompletionFunction :> 
              DefinitionNotebookClient`PropertyCompletionFunction["Example", 
                EvaluationNotebook[], "Categories"]], Initialization :> 
             DefinitionNotebookClient`PropertyCompletionFunction["Example", 
               EvaluationNotebook[], "Categories"], 
             DynamicModuleValues :> {{
               DownValues[$CellContext`update$$] = {HoldPattern[
                    $CellContext`update$$[
                    Pattern[$CellContext`s, 
                    Blank[]]]] :> 
                  DefinitionNotebookClient`InsertCheckboxItem[
                    EvaluationCell[], 
                    If[
                    And[
                    StringQ[$CellContext`s], $CellContext`s =!= 
                    ""], $CellContext`s, None], "MoveCursorToInputField" -> 
                    Automatic]}}}, SynchronousInitialization -> False], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
           StyleBox[
           "\"Astronomy\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
           StyleBox[
           "\"Cellular Automata\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Computer Science", {False, "Computer Science"}], 
           "\" \"", 
           StyleBox[
           "\"Computer Science\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
           "\"Creative Arts\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Finance & Economics"}], "\" \"", 
           StyleBox[
           "\"Finance & Economics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geography"}], "\" \"", 
           StyleBox[
           "\"Geography\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
           StyleBox[
           "\"Image Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Mathematics", {False, "Mathematics"}], "\" \"", 
           StyleBox[
           "\"Mathematics\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Physics", {False, "Physics"}], "\" \"", 
           StyleBox[
           "\"Physics\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
           StyleBox[
           "\"Signal Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Text & Language Processing"}], "\" \"", 
           StyleBox[
           "\"Text & Language Processing\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Audio Processing"}], "\" \"", 
           StyleBox[
           "\"Audio Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
           StyleBox[
           "\"Chemistry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computer Vision"}], "\" \"", 
           StyleBox[
           "\"Computer Vision\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Data Science"}], "\" \"", 
           StyleBox[
           "\"Data Science\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Finite Element Method"}], "\" \"", 
           StyleBox[
           "\"Finite Element Method\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
           "\"Life Sciences\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks & User Interfaces"}], 
           "\" \"", 
           StyleBox[
           "\"Notebooks & User Interfaces\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Presentation & Publication"}], "\" \"", 
           StyleBox[
           "\"Presentation & Publication\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
           StyleBox[
           "\"Social Sciences\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Quantum Computation", {False, "Quantum Computation"}],
            "\" \"", 
           StyleBox[
           "\"Quantum Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 CellEditDuplicate->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdjlsKwjAQRQVba63oSrqIEvwoiBWnG4jtqMHmQWYCZvdGEUR/D/\
dwblPVkAPHCWHRBXaBayjEDYc7jpcZZXtFieQtoyYqm8BWS1ZDDcujtw49R1gJyXi1XiElt3OsrPnd\
FsJOQf/BTWsYvfPI8mVA2ZgI4UyYepUIlIatSX8o633AL3s/yQ7WJLY+IdngB+\
yjQyh2D6ndlPhWWJ1UHD9hMX8CfjpRvg=="},
 CellChangeTimes->{{3.890955242209421*^9, 3.890955251150724*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->824188810,ExpressionUUID->"ddeddf16-a747-435e-b064-dbd7550952ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Documentation Pages", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{
  "Related Documentation Pages", "RelatedSymbols", "TemplateCellGroup"},
 CellID->462881783,ExpressionUUID->"cf341b90-66a2-40d9-8708-1a92358f1b74"],

Cell["Symbol name or documentation URI", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->303988514,ExpressionUUID->"8e3499cd-4134-4a53-80c5-295007a565f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this example.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d09df89b-76f1-43e1-92fb-91dedb621408"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->685983561,ExpressionUUID->"37b35d13-b70c-4fda-aaa5-2e8ec3d7d14c"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->121377300,ExpressionUUID->"a27cdd58-f004-4d28-b02c-0e9e47517968"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
example and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33a1992d-8d73-4756-b62c-a61335a674d8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->239086869,ExpressionUUID->"17f5ab99-db6b-40c6-8193-0e2f778ef400"],

Cell["Source, reference or citation", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->190772471,ExpressionUUID->"21091063-27a9-418f-85b4-87cfaaf0e386"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the example.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dc13cebd-7392-442d-831b-ae61365d95bc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->934758141,ExpressionUUID->"e7d82e12-d306-4016-8210-91bc438a0595"],

Cell["\<\
https://resources.wolframcloud.com/PacletRepository/resources/Wolfram/\
QuantumFramework/\
\>", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.890955295272344*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->210331081,ExpressionUUID->"fb82ab81-f6f5-4096-8c2d-aebe3bfe8b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your example to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "03b16559-0a19-478f-85c9-1e68f55161bd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->786803182,ExpressionUUID->"f2f65fee-205c-4e82-aebd-1a93972b20a2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1c97a0be-1aea-4bde-a79f-7c35524c3150"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->389299396,ExpressionUUID->"fb2d1069-6011-48f9-bd78-f413ff329cee"],

Cell["13.2+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->824809146,ExpressionUUID->"2ae58b10-e547-44b2-bbe1-e72317ab99c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your example is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "74c2ca06-4bd4-4f37-bdd9-a9125d04e8a0"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->495572721,ExpressionUUID->"35b5b862-e4e9-4f3f-879b-9119ae06598b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFT11OwzAMlmi7MYY4AVfoIaoKpEobRTMIXrvOg4jEiWJHNLfHfWh5s78/+\
2vuaqhAskXY9ElCkhq27TeOP3i5FlweDAtsPwxd/C/D5jiMPXxC+U5mUmMn6HiRXW+\
4PCUNWuXLsDKF+peQFawOhtK0ZN6+Rh8wSobH1rswiDkbayT3CupCX5BZr+qXfRDjiXnXJPFOuXF+\
3dvkiNuihoeOBGOIKMMshF1DGdKZUSvu28Rq6kgLc/U8WMZ/cC7F5Ysnxe5PyD7FEd9y0GZP0+\
CCxT8UO2rm"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->266496668,ExpressionUUID->"698c697c-4e40-4538-b90c-ad637d941c10"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your example is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b06b204c-20b4-45d6-9223-33efa44e261f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->984950825,ExpressionUUID->"fc1e3c69-5bee-4f1e-aa7b-98ffa204f36b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdlug0AMlFoSQq+P6DsfQRCVqKomiiv1mcMRKHtp7Y3K33dpYaF9Wntsj2e82V0KG+\
BBIGwPjo3jFOK8w+aC7Tmm6K0nhhiQqNcKttDY3jAk4OoLWoUCHj+xLq6VcBX/dPg0O5a+o+\
mwdQJb2O0rbrpXXftNJaOkmfd8Q9HJtyz8cxAq88LpDfhKwBKG6j9Nf9OFe5I6vSvuIH0JQzW4Wfva\
Ha02aHmA51xL4/fUveh5WLYW6tpbrSSq8cAHM2JESeZYS9/QjFfXwklF+W0KT6VitMYi/\
zpIMjV4m4R++D535IdK5f+KNi+VIFzA8bwUvWvlsYcTkna2wY/B+BsXX5U0Ar8BBlWssA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->962996741,ExpressionUUID->"cdfbb4d2-7953-485d-82ce-47bc658dbd79"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your example is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8fda60d5-9065-40fe-9255-2c0b39e29bb1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->706896916,ExpressionUUID->"74aba099-d0ba-4cf0-8327-72aea3129a12"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkFqwzAQRUlx4iQNXXTXXS7gQ6SiBUNpSiYXUOwJFZE0g2YG6ttXhoZuH+/x/\
2HbwRJ0igiroymbdtC6bxxuOF4X0nwEUWnOxbB6vWKSO70+\
SHOy2j2DMVNRHPch74dINt6L9VchxqITvDhK7DVcQgw6uVn6y+\
rekTVQFtkcTClVa5hPULSUxS06eOqzYuGC6mcR2leiiD538OhMatLnelyW7z4K/\
sP5rTSflCvbnVDIyoDniRHatx+fOOIvUvJZAA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->705317916,ExpressionUUID->"0e93d89b-2228-4140-acbf-b93bc05df417"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your example."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bf30f052-d2f3-4711-b48a-6f4800232137"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->128722862,ExpressionUUID->"5f0f3af8-fce6-48ba-8d68-b81230e5fa69"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlj0FOwzAQRRFNSAMVYsO+F8ghIotKEaitai7guBMR1fZYnhkJ3x5HSAXEbv6b/xevv+\
90rTk70HcH4Sjc6UZ9gL3Aebqh6m2mQuqBwdO0+s7TLVUnKYt2jwwj4oV+ndfv09Ek4xy47SukAI7+\
k2t3oxzKedtbC0R/U6fXx4QREmf9rNBHw/M4u5nzDgxLgtJoDpFnDERtL4y+\
NOyigU58ILXq9OMQGFJMwGYp6rYPWctIUOQelFAZDaHIU70zjuAHLt5U7TEUtjkBoSQL7zmCbl4+\
jY8OvgA43nBJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->359275078,ExpressionUUID->"06ea075a-61bd-4618-a647-9e5041e4db19"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the example documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a6cae47c-4c64-4f2f-a58c-afab4c598a4a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->50433876,ExpressionUUID->"9afd40bf-fdfd-4035-ba6b-b8bb412dbcb4"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->3773185,ExpressionUUID->"58ce48af-4e66-4a71-b339-5de3e52f5a3e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 756},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "Example", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2023.03.30", "CreationTimestamp" -> 
  3.89095521294848`16.34263122102222*^9, "UpdatedTimestamp" -> 
  3.890955212948555`16.342631221022227*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"ExampleResource`", "ExampleResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "ExampleResource", "SourceID" -> 
    "d65b3f47f2a6f9c214c0e62149d7041d2c6177bd"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}, 
  "TryRealOnly" -> False},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.14902, 0.51765, 0.54902], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                 TagBox[
                  GridBox[{{"\"Insert ResourceObject\"", 
                    GraphicsBox[{
                    Thickness[0.05], {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {
                    18., 18.328}, {17.328, 19.}, {16.5, 19.}, {4.5, 19.}, {
                    3.6716, 19.}, {3., 18.328}, {3., 17.5}, {3., 3.5}, {3., 
                    2.6716}, {3.6716, 2.}, {4.5, 2.}, {16.5, 2.}, {17.328, 
                    2.}, {18., 2.6716}, {18., 3.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 12.}, {5., 11.}, {2., 
                    11.}, {2., 12.}}, {{2., 10.}, {2., 9.}, {5., 9.}, {5., 
                    10.}}, {{2., 14.}, {2., 13.}, {5., 13.}, {5., 14.}}, {{2.,
                     8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{2., 6.}, {2., 
                    5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {2., 
                    17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 
                    3.}, {5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 
                    15.}, {5., 16.}}}]}, {
                    FaceForm[{
                    GrayLevel[1], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 
                    18.}, {16.5, 18.}, {16.776, 18.}, {17., 17.776}, {17., 
                    17.5}, {17., 3.5}, {17., 3.2236}, {16.776, 3.}, {16.5, 
                    3.}, {4.5, 3.}, {4.2236, 3.}, {4., 3.2236}, {4., 3.5}, {
                    4., 17.5}, {4., 17.776}, {4.2236, 18.}, {4.5, 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.86667, 0.06667, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQrbtp7vvlx3QcGMBA1aH5wKmFrt/0He77907Pm6Th
kCQQYbnFQ9shxRokoulw+KtGTP8hbQenhKcXlKL1HEIeL519JEHdASydpwPV
r+Iw54jChiIPAwdlr+pm/R4luPyd643FbiEyDue/Bz9eCtTv8bBKZJ27rMOn
S75JAjM0HZRyKqqWvhF2+FWXtadksoaDKlvjVGdvKbj7zq06fzUMKB8FclCu
osMuTx4mbaD+qxUv1QwzFBwOrlji5xAs4+CSmf+h1VPcAey9biWH3LDadduU
pOHum/i2xt70npDDcW/zTkeg+yWmXuHMAMrD/Afxtzjc/w3bHZoepSvAw2fj
w5dTN+UoOgAARNmGkQ==
                    "], {{14.809, 9.3454}, {13.744, 9.7099}, {13.017, 
                    10.654}, {13.953, 10.307}}, {{11.371, 7.1364}, {10.712, 
                    6.0044}, {10.712, 7.177}, {11.398, 8.1788}}, {{9.8213, 
                    12.979}, {8.6908, 13.381}, {8.0367, 14.264}, {9.2241, 
                    13.743}}, {{11.738, 13.743}, {12.925, 14.264}, {12.271, 
                    13.381}, {11.141, 12.979}}, {{13.177, 12.7}, {12.603, 
                    11.886}, {12.637, 13.113}, {13.309, 14.019}}, {{10.481, 
                    7.6484}, {9.6004, 8.9331}, {10.481, 10.128}, {11.361, 
                    8.9331}}, {{8.8261, 11.306}, {8.782, 12.866}, {10.249, 
                    12.344}, {10.249, 10.826}}, {{10.712, 12.344}, {12.179, 
                    12.866}, {12.137, 11.306}, {10.712, 10.826}}, {{7.7855, 
                    12.7}, {7.6538, 14.019}, {8.325, 13.113}, {8.3587, 
                    11.887}}, {{10.114, 10.394}, {9.2339, 9.2003}, {7.7378, 
                    9.6414}, {8.6871, 10.875}}, {{9.5648, 8.1792}, {10.249, 
                    7.177}, {10.249, 6.004}, {9.5887, 7.1366}}, {{10.848, 
                    10.394}, {12.275, 10.875}, {13.224, 9.6414}, {11.728, 
                    9.2003}}, {{15.126, 12.009}, {14.018, 10.766}, {12.711, 
                    11.252}, {13.495, 12.364}}, {{10.481, 15.384}, {11.321, 
                    13.946}, {10.481, 12.872}, {9.641, 13.946}}, {{5.8362, 
                    12.01}, {7.467, 12.365}, {8.2511, 11.252}, {6.9436, 
                    10.767}}, {{7.009, 10.307}, {7.9452, 10.655}, {7.2182, 
                    9.7099}, {6.152, 9.3459}}, {{6.2515, 8.9006}, {7.3612, 
                    9.2795}, {8.5462, 8.9302}, {7.5545, 8.6165}}, {{7.776, 
                    8.2109}, {9.1027, 8.6306}, {9.1365, 7.2193}, {7.6098, 
                    6.5491}}, {{11.824, 7.219}, {11.859, 8.6305}, {13.185, 
                    8.2104}, {13.351, 6.5484}}, {{13.407, 8.6159}, {12.415, 
                    8.9301}, {13.6, 9.2795}, {14.71, 8.8998}}}]}}, 
                    AspectRatio -> Automatic, ImageSize -> 12, 
                    PlotRange -> {{0., 20.}, {0., 20.}}, PlotRangePadding -> 
                    0, BaselinePosition -> Scaled[0.2]]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                 StripOnInput -> False], 
                "\"Insert an icon representing the ResourceObject\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1728928931864632482; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "InsertResourceObject"; 
                    DefinitionNotebookClient`InsertResourceObjectIcon[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1728928931864632482]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5468327008079127585; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5468327008079127585]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6873451360295576381; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6873451360295576381]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6172106006839516455; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6172106006839516455]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3926450748983119469; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3926450748983119469]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4086190758423840734; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4086190758423840734]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8662206799689618007; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8662206799689618007]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7488386888561581898; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`StyleToggle["Excluded"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7488386888561581898]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as hidden\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7435904361823047122; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as hidden"; 
                    DefinitionNotebookClient`StyleToggle["HiddenMaterial"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7435904361823047122]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0375], 
                  StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{
                    0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGAQBmImKAYDAWcHH/NOx4RSLwg91cMBLP7A1QFdHswvcIfw
VR0w5GfkCTUfyLJzyJj4tsZ+qi12/Qo2EHoCpvlgfaUGDltOlO2bP8sNwje1
hPK9MeTR7SMkD7bnKNSeUCOI/Re8IeJfnbDLf3Bx0L+rwtZ4VYU4eaA5YHtf
GWLY/50tfobPVUmIuJc1RD8DH4Re4IIhf1Hp9s+6LBW4eYT0Q9TrQfz/ywF7
fDjoQ+gGRWg8G0DNM8Mu72Dv8JZ3n8HMVaIE5cHmdEHjl0HPAQBjMcGK
                    "], 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0}]}, {
                    CapForm["Butt"], 
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.023438], 
                    RGBColor[0.6, 0.6, 0.6, 1.]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 10.417}, {45., 8.6907}, {43.601, 7.2916}, {
                    41.875, 7.2916}, {40.149, 7.2916}, {38.75, 8.6907}, {
                    38.75, 10.417}, {38.75, 12.142}, {40.149, 13.542}, {
                    41.875, 13.542}, {43.601, 13.542}, {45., 12.142}, {45., 
                    10.417}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{22.292, 8.75}, {22.292, 5.068}, {19.307, 
                    2.0833}, {15.625, 2.0833}, {11.943, 2.0833}, {8.9583, 
                    5.068}, {8.9583, 8.75}, {8.9583, 12.432}, {11.943, 
                    15.417}, {15.625, 15.417}, {19.307, 15.417}, {22.292, 
                    12.432}, {22.292, 8.75}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{40., 29.583}, {40., 24.291}, {35.709, 20.}, {
                    30.417, 20.}, {25.124, 20.}, {20.833, 24.291}, {20.833, 
                    29.583}, {20.833, 34.876}, {25.124, 39.167}, {30.417, 
                    39.167}, {35.709, 39.167}, {40., 34.876}, {40., 
                    29.583}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{59.167, 37.917}, {59.167, 35.961}, {57.581, 
                    34.375}, {55.625, 34.375}, {53.669, 34.375}, {52.083, 
                    35.961}, {52.083, 37.917}, {52.083, 39.873}, {53.669, 
                    41.458}, {55.625, 41.458}, {57.581, 41.458}, {59.167, 
                    39.873}, {59.167, 37.917}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{22.083, 45.208}, {22.083, 42.102}, {19.565, 
                    39.583}, {16.458, 39.583}, {13.352, 39.583}, {10.833, 
                    42.102}, {10.833, 45.208}, {10.833, 48.315}, {13.352, 
                    50.833}, {16.458, 50.833}, {19.565, 50.833}, {22.083, 
                    48.315}, {22.083, 45.208}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.2917, 41.25}, {7.2917, 39.294}, {5.706, 
                    37.708}, {3.75, 37.708}, {1.794, 37.708}, {0.20833, 
                    39.294}, {0.20833, 41.25}, {0.20833, 43.206}, {1.794, 
                    44.792}, {3.75, 44.792}, {5.706, 44.792}, {7.2917, 
                    43.206}, {7.2917, 41.25}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{51.458, 32.292}, {51.458, 29.76}, {49.406, 
                    27.708}, {46.875, 27.708}, {44.344, 27.708}, {42.292, 
                    29.76}, {42.292, 32.292}, {42.292, 34.823}, {44.344, 
                    36.875}, {46.875, 36.875}, {49.406, 36.875}, {51.458, 
                    34.823}, {51.458, 32.292}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{30.625, 43.125}, {30.625, 41.744}, {29.506, 
                    40.625}, {28.125, 40.625}, {26.744, 40.625}, {25.625, 
                    41.744}, {25.625, 43.125}, {25.625, 44.506}, {26.744, 
                    45.625}, {28.125, 45.625}, {29.506, 45.625}, {30.625, 
                    44.506}, {30.625, 43.125}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{44.792, 52.917}, {44.792, 49.235}, {41.807, 
                    46.25}, {38.125, 46.25}, {34.443, 46.25}, {31.458, 
                    49.235}, {31.458, 52.917}, {31.458, 56.599}, {34.443, 
                    59.583}, {38.125, 59.583}, {41.807, 59.583}, {44.792, 
                    56.599}, {44.792, 52.917}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{12.083, 27.292}, {12.083, 24.185}, {9.5649, 
                    21.667}, {6.4583, 21.667}, {3.3517, 21.667}, {0.83333, 
                    24.185}, {0.83333, 27.292}, {0.83333, 30.398}, {3.3517, 
                    32.917}, {6.4583, 32.917}, {9.5649, 32.917}, {12.083, 
                    30.398}, {12.083, 27.292}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{19.375, 22.292}, {19.375, 20.911}, {18.256, 
                    19.792}, {16.875, 19.792}, {15.494, 19.792}, {14.375, 
                    20.911}, {14.375, 22.292}, {14.375, 23.672}, {15.494, 
                    24.792}, {16.875, 24.792}, {18.256, 24.792}, {19.375, 
                    23.672}, {19.375, 22.292}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{31.042, 15.}, {31.042, 13.619}, {29.922, 12.5}, {
                    28.542, 12.5}, {27.161, 12.5}, {26.042, 13.619}, {26.042, 
                    15.}, {26.042, 16.381}, {27.161, 17.5}, {28.542, 17.5}, {
                    29.922, 17.5}, {31.042, 16.381}, {31.042, 15.}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{59.792, 18.333}, {59.792, 14.882}, {56.994, 
                    12.083}, {53.542, 12.083}, {50.09, 12.083}, {47.292, 
                    14.882}, {47.292, 18.333}, {47.292, 21.785}, {50.09, 
                    24.583}, {53.542, 24.583}, {56.994, 24.583}, {59.792, 
                    21.785}, {59.792, 18.333}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{29.167, 55.208}, {29.167, 53.022}, {27.394, 
                    51.25}, {25.208, 51.25}, {23.022, 51.25}, {21.25, 
                    53.022}, {21.25, 55.208}, {21.25, 57.394}, {23.022, 
                    59.167}, {25.208, 59.167}, {27.394, 59.167}, {29.167, 
                    57.394}, {29.167, 55.208}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{51.667, 43.75}, {51.667, 42.369}, {50.547, 
                    41.25}, {49.167, 41.25}, {47.786, 41.25}, {46.667, 
                    42.369}, {46.667, 43.75}, {46.667, 45.131}, {47.786, 
                    46.25}, {49.167, 46.25}, {50.547, 46.25}, {51.667, 
                    45.131}, {51.667, 43.75}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{17.917, 33.958}, {17.917, 32.463}, {16.704, 
                    31.25}, {15.208, 31.25}, {13.713, 31.25}, {12.5, 
                    32.463}, {12.5, 33.958}, {12.5, 35.454}, {13.713, 
                    36.667}, {15.208, 36.667}, {16.704, 36.667}, {17.917, 
                    35.454}, {17.917, 33.958}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{11.875, 17.917}, {11.875, 16.996}, {11.129, 
                    16.25}, {10.208, 16.25}, {9.2879, 16.25}, {8.5417, 
                    16.996}, {8.5417, 17.917}, {8.5417, 18.837}, {9.2879, 
                    19.583}, {10.208, 19.583}, {11.129, 19.583}, {11.875, 
                    18.837}, {11.875, 17.917}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{39.583, 17.917}, {39.583, 16.996}, {38.837, 
                    16.25}, {37.917, 16.25}, {36.996, 16.25}, {36.25, 
                    16.996}, {36.25, 17.917}, {36.25, 18.837}, {36.996, 
                    19.583}, {37.917, 19.583}, {38.837, 19.583}, {39.583, 
                    18.837}, {39.583, 17.917}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{36.25, 5.4166}, {36.25, 2.6552}, {34.011, 
                    0.41662}, {31.25, 0.41662}, {28.489, 0.41662}, {26.25, 
                    2.6552}, {26.25, 5.4166}, {26.25, 8.178}, {28.489, 
                    10.417}, {31.25, 10.417}, {34.011, 10.417}, {36.25, 
                    8.178}, {36.25, 5.4166}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 32}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Example Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.32941, 0.32941, 0.32941]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.32941, 0.32941, 0.32941], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Example Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.32941, 0.32941, 0.32941], StripOnInput -> False], 
              "https://resources.wolframcloud.com/ExampleRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4428028526384162518; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4428028526384162518]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.96667, 0.98431, 0.97059]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3749335217312873674; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3749335217312873674]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7250853967221918483; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7250853967221918483]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4892365933713591120; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4892365933713591120]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7309290475811609296; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7309290475811609296]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your example submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your example submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your example to the Wolfram Example \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your example to the Wolfram Example Repository\"",
                   True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.93333, 0.96863, 0.94118], 
              RGBColor[0.14902, 0.51765, 0.54902]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.93333, 0.96863, 0.94118], 2 -> 
              RGBColor[0.14902, 0.51765, 0.54902]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.93333, 0.96863, 0.94118]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0375], 
               StyleBox[{
                 
                 JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 
                  2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                  0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{
                  0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                  0}}, {{0, 2, 0}}, {{0, 2, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGAQBmImKAYDAWcHH/NOx4RSLwg91cMBLP7A1QFdHswvcIfw
VR0w5GfkCTUfyLJzyJj4tsZ+qi12/Qo2EHoCpvlgfaUGDltOlO2bP8sNwje1
hPK9MeTR7SMkD7bnKNSeUCOI/Re8IeJfnbDLf3Bx0L+rwtZ4VYU4eaA5YHtf
GWLY/50tfobPVUmIuJc1RD8DH4Re4IIhf1Hp9s+6LBW4eYT0Q9TrQfz/ywF7
fDjoQ+gGRWg8G0DNM8Mu72Dv8JZ3n8HMVaIE5cHmdEHjl0HPAQBjMcGK
                  "], 
                  CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0}]}, {
                 CapForm["Butt"], 
                 JoinForm[{"Miter", 10.}], 
                 Thickness[0.023438], 
                 RGBColor[0.6, 0.6, 0.6, 1.]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{45., 10.417}, {45., 8.6907}, {43.601, 7.2916}, {
                  41.875, 7.2916}, {40.149, 7.2916}, {38.75, 8.6907}, {38.75, 
                  10.417}, {38.75, 12.142}, {40.149, 13.542}, {41.875, 
                  13.542}, {43.601, 13.542}, {45., 12.142}, {45., 
                  10.417}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{22.292, 8.75}, {22.292, 5.068}, {19.307, 2.0833}, {
                  15.625, 2.0833}, {11.943, 2.0833}, {8.9583, 5.068}, {8.9583,
                   8.75}, {8.9583, 12.432}, {11.943, 15.417}, {15.625, 
                  15.417}, {19.307, 15.417}, {22.292, 12.432}, {22.292, 
                  8.75}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{40., 29.583}, {40., 24.291}, {35.709, 20.}, {
                  30.417, 20.}, {25.124, 20.}, {20.833, 24.291}, {20.833, 
                  29.583}, {20.833, 34.876}, {25.124, 39.167}, {30.417, 
                  39.167}, {35.709, 39.167}, {40., 34.876}, {40., 
                  29.583}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{59.167, 37.917}, {59.167, 35.961}, {57.581, 
                  34.375}, {55.625, 34.375}, {53.669, 34.375}, {52.083, 
                  35.961}, {52.083, 37.917}, {52.083, 39.873}, {53.669, 
                  41.458}, {55.625, 41.458}, {57.581, 41.458}, {59.167, 
                  39.873}, {59.167, 37.917}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{22.083, 45.208}, {22.083, 42.102}, {19.565, 
                  39.583}, {16.458, 39.583}, {13.352, 39.583}, {10.833, 
                  42.102}, {10.833, 45.208}, {10.833, 48.315}, {13.352, 
                  50.833}, {16.458, 50.833}, {19.565, 50.833}, {22.083, 
                  48.315}, {22.083, 45.208}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{7.2917, 41.25}, {7.2917, 39.294}, {5.706, 
                  37.708}, {3.75, 37.708}, {1.794, 37.708}, {0.20833, 
                  39.294}, {0.20833, 41.25}, {0.20833, 43.206}, {1.794, 
                  44.792}, {3.75, 44.792}, {5.706, 44.792}, {7.2917, 
                  43.206}, {7.2917, 41.25}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{51.458, 32.292}, {51.458, 29.76}, {49.406, 
                  27.708}, {46.875, 27.708}, {44.344, 27.708}, {42.292, 
                  29.76}, {42.292, 32.292}, {42.292, 34.823}, {44.344, 
                  36.875}, {46.875, 36.875}, {49.406, 36.875}, {51.458, 
                  34.823}, {51.458, 32.292}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{30.625, 43.125}, {30.625, 41.744}, {29.506, 
                  40.625}, {28.125, 40.625}, {26.744, 40.625}, {25.625, 
                  41.744}, {25.625, 43.125}, {25.625, 44.506}, {26.744, 
                  45.625}, {28.125, 45.625}, {29.506, 45.625}, {30.625, 
                  44.506}, {30.625, 43.125}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{44.792, 52.917}, {44.792, 49.235}, {41.807, 
                  46.25}, {38.125, 46.25}, {34.443, 46.25}, {31.458, 
                  49.235}, {31.458, 52.917}, {31.458, 56.599}, {34.443, 
                  59.583}, {38.125, 59.583}, {41.807, 59.583}, {44.792, 
                  56.599}, {44.792, 52.917}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{12.083, 27.292}, {12.083, 24.185}, {9.5649, 
                  21.667}, {6.4583, 21.667}, {3.3517, 21.667}, {0.83333, 
                  24.185}, {0.83333, 27.292}, {0.83333, 30.398}, {3.3517, 
                  32.917}, {6.4583, 32.917}, {9.5649, 32.917}, {12.083, 
                  30.398}, {12.083, 27.292}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{19.375, 22.292}, {19.375, 20.911}, {18.256, 
                  19.792}, {16.875, 19.792}, {15.494, 19.792}, {14.375, 
                  20.911}, {14.375, 22.292}, {14.375, 23.672}, {15.494, 
                  24.792}, {16.875, 24.792}, {18.256, 24.792}, {19.375, 
                  23.672}, {19.375, 22.292}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{31.042, 15.}, {31.042, 13.619}, {29.922, 12.5}, {
                  28.542, 12.5}, {27.161, 12.5}, {26.042, 13.619}, {26.042, 
                  15.}, {26.042, 16.381}, {27.161, 17.5}, {28.542, 17.5}, {
                  29.922, 17.5}, {31.042, 16.381}, {31.042, 15.}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{59.792, 18.333}, {59.792, 14.882}, {56.994, 
                  12.083}, {53.542, 12.083}, {50.09, 12.083}, {47.292, 
                  14.882}, {47.292, 18.333}, {47.292, 21.785}, {50.09, 
                  24.583}, {53.542, 24.583}, {56.994, 24.583}, {59.792, 
                  21.785}, {59.792, 18.333}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{29.167, 55.208}, {29.167, 53.022}, {27.394, 
                  51.25}, {25.208, 51.25}, {23.022, 51.25}, {21.25, 53.022}, {
                  21.25, 55.208}, {21.25, 57.394}, {23.022, 59.167}, {25.208, 
                  59.167}, {27.394, 59.167}, {29.167, 57.394}, {29.167, 
                  55.208}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{51.667, 43.75}, {51.667, 42.369}, {50.547, 
                  41.25}, {49.167, 41.25}, {47.786, 41.25}, {46.667, 
                  42.369}, {46.667, 43.75}, {46.667, 45.131}, {47.786, 
                  46.25}, {49.167, 46.25}, {50.547, 46.25}, {51.667, 
                  45.131}, {51.667, 43.75}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{17.917, 33.958}, {17.917, 32.463}, {16.704, 
                  31.25}, {15.208, 31.25}, {13.713, 31.25}, {12.5, 32.463}, {
                  12.5, 33.958}, {12.5, 35.454}, {13.713, 36.667}, {15.208, 
                  36.667}, {16.704, 36.667}, {17.917, 35.454}, {17.917, 
                  33.958}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{11.875, 17.917}, {11.875, 16.996}, {11.129, 
                  16.25}, {10.208, 16.25}, {9.2879, 16.25}, {8.5417, 
                  16.996}, {8.5417, 17.917}, {8.5417, 18.837}, {9.2879, 
                  19.583}, {10.208, 19.583}, {11.129, 19.583}, {11.875, 
                  18.837}, {11.875, 17.917}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{39.583, 17.917}, {39.583, 16.996}, {38.837, 
                  16.25}, {37.917, 16.25}, {36.996, 16.25}, {36.25, 16.996}, {
                  36.25, 17.917}, {36.25, 18.837}, {36.996, 19.583}, {37.917, 
                  19.583}, {38.837, 19.583}, {39.583, 18.837}, {39.583, 
                  17.917}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{36.25, 5.4166}, {36.25, 2.6552}, {34.011, 
                  0.41662}, {31.25, 0.41662}, {28.489, 0.41662}, {26.25, 
                  2.6552}, {26.25, 5.4166}, {26.25, 8.178}, {28.489, 
                  10.417}, {31.25, 10.417}, {34.011, 10.417}, {36.25, 
                  8.178}, {36.25, 5.4166}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], ImageSize -> 32}], 
             "Wolfram Example Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.83235, 0.83235, 0.83235]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYnFYwIEANUAVWI1BGg+MSbAzYG7B9kQ/L7A6i80
Q4AhRpIJEAAJZ7ghwJAnwxCgLmRDgDFIhiFAXUC9kNQIZABTAhmGAHVBDAEC
yg2hikuoGCZUiR2qpBOqpFhq5R2q5GJqlSfUKtnILmPxA2JKewB9E9G3
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYkFqgwKj7ArrTJt6daZPAeCgGygCFAcKAtUA1SJ
1RCg+RATPNMydCfPVp+9FBMBxYGyEHPg7kE2BOILoBqs2pERxBygejRDgCEG
8QUuN6C5B+IvSDjDDQGGPFAQ6GuCJkAQUCVQPVAXsiHAGAQKAkOPSEOAKoHq
gbqAeiGpEcgApgSgIDAWiDQEqBKoHqgLYggQUG4IVVxCxTChSuxQJZ1QJcVS
K+9QJRdTqzyhVslGdhmLHxBT2gMANFwcQQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYkFqgwKDbNNSDZOzdLMLoAgIBsoAhQHygLVAFVi
NQRoPsQEj+gYrewClbwSTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGqBKoH
6gLqhaRGIAOYEoCCmkT4BYKAKoHqgboghgAB5YZQxSVUDBOqxA5V0glVUiy1
8g5VcjG1yhNqlWxkl7H4ATGlPQC4Vtih
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.14902, 0.51765, 0.54902], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.14902, 0.51765, 0.54902], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Example", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Example", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Example", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["Code"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Example", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.94118, 0.94118, 0.94118]]}, Visible -> False, FrontEndVersion -> 
  "13.2 for Mac OS X x86 (64-bit) (January 30, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"a839f5e5-7cb6-4d83-8150-2e5dc6aa769f"
]

