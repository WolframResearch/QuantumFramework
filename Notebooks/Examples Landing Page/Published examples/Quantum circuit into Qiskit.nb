Notebook[{

Cell[CellGroupData[{
Cell["Quantum circuit into Qiskit", "Title",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.893795547071508*^9},
 CellTags->{"Name", "TemplateCell", "Title", "TabNext"},
 CellID->924394382,ExpressionUUID->"ed2170bb-0c1c-4f41-bd21-6927c2a6a77a"],

Cell["Convert quantum circuit into Qiskit and vice versa", "Text",
 Deletable->False,
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893808019444957*^9, 3.8938080456607037`*^9}, {
  3.8938539299451237`*^9, 3.8938539323466*^9}},
 CellTags->{"DefaultContent", "Description", "TabNext", "TemplateCell"},
 CellID->563660414,ExpressionUUID->"b6653112-342d-4f9e-9274-f59de3da01a9"],

Cell[CellGroupData[{

Cell[TextData[{
 "Example Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Examples", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Demonstrate the function\[CloseCurlyQuote]s usage, starting with \
the most basic use case and describing each example in a preceding text cell.\
\n\nWithin a group, individual examples can be delimited by inserting page \
breaks between them (either using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"[Right-click]\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Insert Page Break\"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontColor -> GrayLevel[0.28627], 
                 FontSize -> 14, StripOnInput -> False]}, "RowDefault"], 
              ShowStringCharacters -> False]]], 
           " between cells or through the menu using ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"Insert\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False], 
                StyleBox[
                "\" \[FilledRightTriangle] \"", FontFamily -> 
                 "Source Sans Pro", FontSize -> 13.86, FontColor -> 
                 GrayLevel[0.5], StripOnInput -> False], 
                StyleBox[
                "\"Page Break\"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontColor -> GrayLevel[0.28627], FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], 
           ").\n\nExamples should be grouped into Subsection and \
Subsubsection cells similarly to existing documentation pages. Here are some \
typical Subsection names and the types of examples they normally contain:\n  \
", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Basic Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "most basic function usage\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Scope: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "input and display conventions, standard computational attributes \
(e.g. threading over lists)\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Options: \"", FontFamily -> "Source Sans Pro", FontWeight -> 
                 "SemiBold", FontSize -> 14, StripOnInput -> False]}, 
               "RowDefault"], ShowStringCharacters -> False]]], 
           "available options and parameters for the function\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Applications: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "standard industry or academic applications\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Properties and Relations: \"", FontFamily -> 
                 "Source Sans Pro", FontWeight -> "SemiBold", FontSize -> 14, 
                 StripOnInput -> False]}, "RowDefault"], ShowStringCharacters -> 
              False]]], "how the function relates to other functions\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Possible Issues: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "limitations or unexpected behavior a user might experience\n  ", 
           Cell[
            BoxData[
             StyleBox[
              TemplateBox[{
                StyleBox[
                "\"\[FilledSmallSquare] \"", FontColor -> 
                 RGBColor[0.8, 0.043, 0.008], StripOnInput -> False], 
                StyleBox[
                "\"Neat Examples: \"", FontFamily -> "Source Sans Pro", 
                 FontWeight -> "SemiBold", FontSize -> 14, StripOnInput -> 
                 False]}, "RowDefault"], ShowStringCharacters -> False]]], 
           "particularly interesting, unconventional, or otherwise unique \
usage"}], "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExamples"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "5646757f-7603-4563-b4aa-4fc5aa1d85d8"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Examples"},
 CellTags->{"Example Content", "Examples", "TemplateCellGroup"},
 CellID->689775652,ExpressionUUID->"cffde6fd-1502-471e-bff9-06c5c3b1aa83"],

Cell[TextData[{
 "From Wolfram quantum framework, one can directly transform the circuit \
object into corresponding Qiskit circuit, or find its OPENQASM. You need to \
",
 ButtonBox["configure your system to evaluate external Python code",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/workflow/\
ConfigurePythonForExternalEvaluate.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/workflow/\
ConfigurePythonForExternalEvaluate.html"],
 ", in order to use Qiskit-related functionalities of Wolfram quantum \
framework."
}], "Text",
 CellChangeTimes->{{3.8938080505367403`*^9, 3.893808115738962*^9}, {
  3.8938081502108192`*^9, 3.8938081987745857`*^9}, {3.8939403095408287`*^9, 
  3.893940311437413*^9}},
 CellTags->"DefaultContent",
 CellID->351723045,ExpressionUUID->"665bd803-bd54-4b0f-952e-d122b5abc730"],

Cell["Install and load the QuantumFramework paclet:", "CodeText",
 TaggingRules->{},
 CellChangeTimes->{{3.8896301375389147`*^9, 3.889630152807868*^9}, {
  3.890230125254396*^9, 3.890230129164053*^9}},
 CellID->1052376881,ExpressionUUID->"1ee40f6b-e92b-43ce-9695-02225e5a2b92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<Wolfram`QuantumFramework`\>\"", "]"}]}], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8896301316068687`*^9, 3.889630135374712*^9}},
 CellLabel->"In[1]:=",
 CellID->1395467824,ExpressionUUID->"47700422-00c3-4ccf-a157-0ee5c901a292"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.2.10\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Wolfram/QuantumFramework\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.2.10\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"/Users/mohammadb/Library/WolframDesktop/Paclets/\
Repository/Wolfram__QuantumFramework-1.2.10\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                  "\"Perform analytic and numeric quantum computations\"", 
                   Short], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[<|
   "Name" -> "Wolfram/QuantumFramework", "Description" -> 
    "Perform analytic and numeric quantum computations", "Creator" -> 
    "Wolfram Research, Quantum Computation Framework team", "License" -> 
    "MIT", "PublisherID" -> "Wolfram", "Version" -> "1.2.10", 
    "WolframVersion" -> "13.1+", "PrimaryContext" -> 
    "Wolfram`QuantumFramework`", 
    "Extensions" -> {{
      "Kernel", "Root" -> "Kernel", 
       "Context" -> {
        "Wolfram`QuantumFrameworkLoader`", {
         "Wolfram`QuantumFramework`", "QuantumFrameworkMain.m"}}, 
       "Symbols" -> {
        "Wolfram`QuantumFramework`QuditName", 
         "Wolfram`QuantumFramework`QuditBasis", 
         "Wolfram`QuantumFramework`QuantumBasis", 
         "Wolfram`QuantumFramework`QuantumState", 
         "Wolfram`QuantumFramework`QuantumOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurementOperator", 
         "Wolfram`QuantumFramework`QuantumCircuitOperator", 
         "Wolfram`QuantumFramework`QuantumMeasurement", 
         "Wolfram`QuantumFramework`QuantumTensorProduct", 
         "Wolfram`QuantumFramework`QuantumPartialTrace", 
         "Wolfram`QuantumFramework`QuantumDistance", 
         "Wolfram`QuantumFramework`QuantumEntanglementMonotone", 
         "Wolfram`QuantumFramework`QuantumEntangledQ", 
         "Wolfram`QuantumFramework`QuantumWignerTransform", 
         "Wolfram`QuantumFramework`QuantumChannel", 
         "Wolfram`QuantumFramework`QuantumStateEstimate", 
         "Wolfram`QuantumFramework`QuantumMeasurementSimulation", 
         "Wolfram`QuantumFramework`QuantumEvolve"}}, {
      "Documentation", "Language" -> "English"}, {
      "AutoCompletionData", "Root" -> "AutoCompletionData"}, {"FrontEnd"}, {
      "Asset", "Root" -> "Assets", 
       "Assets" -> {{"IBMQ.paclet", "ServiceConnection_IBMQ-0.0.1.paclet"}}}},
     "Location" -> 
    "/Users/mohammadb/Library/WolframDesktop/Paclets/Repository/Wolfram__\
QuantumFramework-1.2.10"|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893847012331996*^9, 3.906028284726321*^9},
 CellLabel->"Out[1]=",
 CellID->882989395,ExpressionUUID->"a986d879-0073-424f-ba59-93806966c3a8"]
}, Open  ]],

Cell["Create the magic circuit with measurements: ", "CodeText",
 CellChangeTimes->{{3.893808218777964*^9, 3.893808234883624*^9}, {
  3.893808402514312*^9, 3.893808412219376*^9}},
 CellTags->"DefaultContent",
 CellID->1823034007,ExpressionUUID->"b21073a1-4c3a-40a9-a0c1-2c65cf5b8911"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<S\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"\"\<H\>\"", "->", "2"}], ",", 
      RowBox[{"\"\<CNOT\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], ",", 
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"{", "2", "}"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"qc", "[", "\"\<Diagram\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8938083504465218`*^9, 3.893808382687067*^9}, {
  3.893808440267766*^9, 3.893808440463402*^9}, {3.893808578790303*^9, 
  3.8938085800851707`*^9}, {3.893847018046034*^9, 3.893847038311289*^9}},
 CellLabel->"In[3]:=",
 CellID->63883974,ExpressionUUID->"9097000f-5035-4f2f-acee-a5bee405d8d7"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -1}, {0.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -2}, {0.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -2}, {1.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -2}, {2.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -1}, {2.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{3.375, -1}, {3.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{3.375, -2}, {4.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{4.375, -1}, {5.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{5.375, -2}, {5.625, -2}}]}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {{{
      {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
       0.922526, 0.385626, 0.209179], Opacity[0.3]}], 
       RectangleBox[{0.625, -1.375}, {1.375, -0.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"S\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
         Center}]}, 
      {EdgeForm[RGBColor[0.922526, 0.385626, 0.209179]], FaceForm[{RGBColor[
       0.922526, 0.385626, 0.209179], Opacity[0.3]}], 
       RectangleBox[{0.625, -2.375}, {1.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"S\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]}}, 
     {Dashing[{Small, Small}], 
      {RGBColor[0.922526, 0.385626, 0.209179], 
       LineBox[{{1., -1.375}, {1., -1.625}}]}}}, 
    {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
     RectangleBox[{1.625, -2.375}, {2.375, -1.625},
      RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
       StyleBox["\<\"H\"\>",
        StripOnInput->False,
        FontFamily->"Roboto",
        FontSize->11,
        FontColor->GrayLevel[0],
        Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
       Center}]}, {{
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{2.625, -1.}, {2.85, -1.}}], 
       LineBox[{{3.15, -1.}, {3.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{3., -1.}, 0.15000000000000002], 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
         LineBox[{{2.85, -1.}, {3.15, -1.}}], 
         LineBox[{{3., -1.15}, {3., -0.85}}]}}}, 
      {RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[{{3., -1.15}, {3., -1.90625}}]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
      0.3], CapForm[None], LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
      LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       DiskBox[{3., -2.}, 0.09375]}}, {}}, 
    {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
     0.7367, 0.358, 0.503], Opacity[0.3]}], 
     RectangleBox[{3.625, -1.375}, {4.375, -0.625},
      RoundingRadius->0.1], 
     {Thickness[Small], 
      LineBox[{{4.151690686445303, -1.0772902651951612`}, {
       4.212366961023424, -1.0332063712732258`}}], 
      LineBox[{{4.116904337848513, -1.0409065970372444`}, {
       4.163666072987917, -0.9822692358521422}}], 
      LineBox[{{4.073692193435111, -1.015088542646603}, {
       4.103169070809155, -0.9461239597052442}}], 
      LineBox[{{4.0251687373408105`, -1.0016969196685122`}, {
       4.035236232277135, -0.9273756875359171}}], 
      LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
       3.9647637677228653`, -0.9273756875359171}}], 
      LineBox[{{3.9263078065648895`, -1.015088542646603}, {
       3.896830929190845, -0.9461239597052442}}], 
      LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
       3.8363339270120824`, -0.9822692358521422}}], 
      LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
       3.787633038976576, -1.0332063712732258`}}]}, 
     {Thickness[Medium], 
      LineBox[{{4., -1.1875}, {4.17024643740233, -0.8533725534293621}}], 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{4., -0.625}, {4., -0.2109375}}], 
       {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
        FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
        PolygonBox[{{3.90625, -0.2109375}, {4.09375, -0.2109375}, {
         4., -0.0234375}}]}}}}, 
    {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
     0.7367, 0.358, 0.503], Opacity[0.3]}], 
     RectangleBox[{4.625, -2.375}, {5.375, -1.625},
      RoundingRadius->0.1], 
     {Thickness[Small], 
      LineBox[{{5.151690686445303, -2.0772902651951615`}, {
       5.212366961023424, -2.033206371273226}}], 
      LineBox[{{5.116904337848513, -2.040906597037244}, {
       5.163666072987917, -1.9822692358521423`}}], 
      LineBox[{{5.073692193435111, -2.015088542646603}, {
       5.103169070809155, -1.9461239597052442`}}], 
      LineBox[{{5.0251687373408105`, -2.0016969196685124`}, {
       5.035236232277135, -1.9273756875359171`}}], 
      LineBox[{{4.9748312626591895`, -2.0016969196685124`}, {
       4.964763767722865, -1.9273756875359171`}}], 
      LineBox[{{4.926307806564889, -2.015088542646603}, {
       4.896830929190845, -1.9461239597052442`}}], 
      LineBox[{{4.883095662151487, -2.040906597037244}, {
       4.836333927012083, -1.982269235852142}}], 
      LineBox[{{4.848309313554697, -2.0772902651951615`}, {
       4.787633038976576, -2.033206371273226}}]}, 
     {Thickness[Medium], 
      LineBox[{{5., -2.1875}, {5.17024643740233, -1.8533725534293621`}}], 
      {RGBColor[0.537254, 0.537254, 0.537254], 
       LineBox[{{5., -1.625}, {5., -0.2109375}}], 
       {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
        FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
        PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
         5., -0.0234375}}]}}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.893808367532371*^9, 3.893808383350037*^9}, 
   3.893808441099168*^9, 3.893808580548007*^9, {3.89384703316687*^9, 
   3.893847038988845*^9}, 3.9060283200821047`*^9},
 CellLabel->"Out[4]=",
 CellID->1282614281,ExpressionUUID->"4c090818-ae47-47ab-9460-7319b399cc8c"]
}, Open  ]],

Cell["Make sure that qiskit is installed", "CodeText",
 CellChangeTimes->{{3.893978604022009*^9, 3.8939786306598473`*^9}, {
  3.894409977178546*^9, 3.8944099793600807`*^9}},
 CellID->181868936,ExpressionUUID->"cf998e5f-db1d-4172-bf12-93706284005b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<PythonPackageInstalledQ\>\"", "]"}], 
  "[", "\"\<qiskit\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893978574123622*^9, 3.893978597195402*^9}, {
  3.893978758720837*^9, 3.893978759126873*^9}},
 CellLabel->"In[5]:=",
 CellID->1760658564,ExpressionUUID->"249b34f8-ff82-42a6-b9bd-f26cd96b3e1c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.8939785827626343`*^9, 3.8939786004621964`*^9}, 
   3.893978761415737*^9, 3.906028345663034*^9},
 CellLabel->"Out[5]=",
 CellID->651988338,ExpressionUUID->"a47f73ca-337e-4473-b27c-acaebc00c6e9"]
}, Open  ]],

Cell["\<\
If needed, use ResourceFunction[\"PythonPackageInstall\"][\"qiskit\"] to \
install it.\
\>", "Text",
 CellChangeTimes->{{3.893978640304494*^9, 3.893978688596044*^9}, {
  3.8939787673894377`*^9, 3.8939787733057823`*^9}},
 CellID->1239621226,ExpressionUUID->"87b43edf-2141-44ca-af91-24a162b54f8f"],

Cell["Transform magic circuit to its Qiskit circuit: ", "CodeText",
 CellChangeTimes->{{3.893808218777964*^9, 3.893808234883624*^9}},
 CellTags->"DefaultContent",
 CellID->802863168,ExpressionUUID->"1d5f2f98-d204-42b6-a21c-8f105d3b8987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qiskit", "=", 
  RowBox[{"qc", "[", "\"\<Qiskit\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.893808204674818*^9, 3.8938082150696373`*^9}, {
  3.893808269037661*^9, 3.89380827134412*^9}, {3.893808392527643*^9, 
  3.893808392706567*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[6]:=",
 CellID->140455418,ExpressionUUID->"979072ae-d655-4815-ae9c-dbeb39905d73"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QiskitCircuit",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztnQtYFNfZx7ksFxELiFVAQKhGSkLho0bjPZJq1FIjMcavlETUp+rziYBR
qYZIvZUaL5gmqAkS4zVViVETodYk3qrFiI3YqCQYMVUqGi9BBEUEdr53Pe12
uwvL7MzZ3Rn2/3uO++zO9b8D57fvmR3G8Cnp46a5ODk5zfGkh3GT58XNnj35
1Rd86cWLaXP+b3ra1F+PTps7dfrU2f2nuNLE9+hfurOTk+65oDAeNArp2+zf
KAZQKXV1dU4KgGLY+0g4OpAJkAlkAhiQCZAJZAIYkAmQCWQCGJAJkAlkAhiQ
CZAJZAIYkIka0WqFW7VC6WXh49PCxr8I+UeE944K208Ix8qFb28KD5tsGgYy
AQzIRF3QgSr+RlhRZO5g/maHsKtEuHbHRpEgE8CATNQCVSPHLwjzCyw4qhuO
CjX3rR4MMgEMyEQVfF8nrP1MyoF9tUA4dcm62SATwIBMlM8/vxde2yXr8O4r
1RU2VgIyAQzIROFUVeuqC/lH+OPT1koImQAGZKJk7jcIi3ZzO8gnK6wSUrJM
XF1dn3jiicTExGnTpk2fPn3ixIl9+/b18PAwswrN3b1794gRIyATBQKZKJnt
J0Qdvcu3hOp7ukfzi83bqVuMO5bKxNPTk7xx5MiRe/daSPPw4cMvvvhizpw5
nTt3NjXJ/v37aZn6+npTnziyTG7evJmRkdGzZ086RMHBwWlpaXQ0pkyZQocl
NzfXZjEgE8XyVZXYo8cUQY9tLpl3iH9O8TKhX/XFixffunVLzGbJGPn5+T/8
4Q+NTELcvXt34MCBkAmjtLQ0ICCAjkDHjh1jY2O7detGz+Pj4wcMGEBPjh07
ZrMkkmUyaXVFVNxUv8AIjXsHDy9fv6AfRw6eOC7zEGTCizcP8JcJtSu3OecU
KZN+/fqVlZUZrnjp0qWdO3fOmzdv0qRJycnJ6enpGzduPHv2rOEyN27cGD9+
fJsmcViZUE1CpQi9farl6MiwicuXL6cpGo3G2dm5pqbGZmGkyeSXS05pPLzc
vXxink19ZvI7Q196I3r4DJ9uvaJHpEAmXLj6vQVHzyKZ0NCJL2JkMmPGjKam
f12Y29DQsGXLlv79+7e28GOPPZaTk1NdXa3fxeXLl9mT1kzisDJJTEyk9z5z
5kyj6TExMTQ9PDzclmGkySQ89hcU9VfZZ4ym/3rNNciEC7tKrCWTuduF+oc8
o7Ypk9mzZ+sXLikpefzxx9uUD9G1a9ddu3YZ7siMSRxTJlTpubi4dOnSpba2
1mgWO2GSkJCgn0J14JgxY7y9vX19fV9++WWRg02LkCYTGt14evtL8wZkIobX
91lLJtQuXOMZ1bxM6KNTv+SyZctcXV3FmIRBo5u///3v+tW3bdtmZmEHlElW
Vha9cRoems5KSUmhWQsXLmQvycM9evSIjY3dt29fQUFBWFgYVYbNzc1880iT
SVjMzylqfPqHkIk1aGgUZr1vRZkcPM8zrRmZBAUF6UcrCxYsEK8Rp/8+46r9
9yV3Q4YMgUz0DBo0iN743r17TWeNHTuWZu3evZu9XLVqlUaj0Y8Wi4uLae6e
PXv45pEmkwkLi11c3SiPb8Bjjw+dHDdp3cvLyyATXnx707KjZ6lMNnM9wW9G
JkVFRWyZLVu2SDYJfaq++eab7PnFixe9vLwgEwY79VpaWmo0vbGxkcY+NKui
4l+XFg17hOEyP/rRj2goJHJHffr06S6C0LBe0rp/0rIvI4ckd/hBV/1PMyhi
yKTVFdK2RjHEpHUQnvzZRNNDxC4mabGxcpUeW5xrev3JL397hGPawMDAFnv3
M888w34Vr169SuN0ySYZOHCgi4uL/ivOuXPntrgWxeD4ppQPdXA/Pz9641Rm
GPV9Nh7s1KmTvqLr2rUrDXwMlxkzZgyNdETKhHYn5gen8fCSU1FQm/yHfzw7
fTOZhLbmHxw1c1ODhI1QDPG/bO2enk8mtFZ+SMC0YhmXecgG70J/+pR94yCS
1r4FjoyMZBOpOHF2drZOZDVBHZyOCT1Zs2aN4Y+7qqqK6Z0GQfqJbm5ur732
muFiycnJvXv3FvkrZO3KxKilbdUG9taN4MZnHUNlIpM+z7xk1crkf7MOcUzb
YmVC06nYZr/bNFoX2UHMX09y4MABNmvUqFGm6zpgZZKamkpvPCQkpLy8nB2Z
kpKSiIgIUgdNNyxFZMpEJByvgI0dPZvewuiZOySsi3Mmhly7Y9nRs/Scyc6T
PNO2eM5EPx5fsmQJF5MQzz//PJubm5truroDnjOprKz09/d3enR9WlRUVK9e
vXQdcPTokSNH0pP169frl5Q5zBGJNJkkzPskdXOj4ZSU9+7TGIfeQtKyLyET
mVCN8ZsdVpRJ8Tc807Yok7Vr17K5Tz/9NBeTED4+PmyBEydOQCaMsrKy+Ph4
70f069cvLy9Pq9WGh4fTATl58j+fGfRTiIuLM1yxZ8+ekydP5htGmkz8g5/w
8gmIips2bGLu8Kkbnhq3yDegN+WPHNzCmUPIRALir6WXIJNKrlfUtyiTzz//
nM3t1KkTF5MwLly4QMvcv3/f9HoVx5SJKbW1tc7Ozi4uLoZ/R7ly5Uoa6VAl
w17ST8fJ4ItjXkitTA5ED5/RJTTa09vf2cXV07tzcOQwskralmbIhAsHz1tL
Jot2C3wvVmpRJlVVVTTrypUrHE1CfPTRR2xJ9qdtkIkpTBQRERGGE2tqakJD
Q3/605/u27fvgw8+oNKFyhiFXLTGvUEmRtQ9EOb80Soy+eRsW/u2NGpLMqGP
wg0bNuTk5LQpE/3Qvk2TEKmpqRs3bly3bp3pDQogE0Z+fj4djQkTJhhNv3jx
Ig2IOnbsSKPFpKSkGzducN81ZKJYthXzl8nsPwp36znnlHmnNfrErKioEGMS
80AmjLS0NDoa2dnZtt81ZKJYvq8TexpWvEz2f8k/p/zbNpJPzPwRMWRiEXFx
cXQ0CgsLbb9ryETJFH/DUyYrioQmzqNkHbgHLGBAJkpGq9X9b31tHj0xt22k
Iufq91YJCZkABmSicBoahbc+kXt4524XyrnedsAQyAQwIBPlQz5Zf1j6sZ1f
IFy8bsV4kAlgQCaqoFmr+0/JMyy5LJY1stAdK9yR3hDIBDAgExVxq1bYdEx4
Rdx9k5bt0/3HoNb7j/z0QCaAAZmojpr7woEvhZVFuotGTI/kbz/UCefCdVto
hAGZAAZkol4am3Tf4Jz+hzB/p+4Yvlog3L1vhxiQCWBAJu0AqkZYTWIXIBPA
gEzaAZCJE2SiACCTdgBk4gSZKADIpB0AmThBJgoAMmkHQCZOkIkC0Gp1Hdnu
zWbfY7ZL7CsTrVZbJ5WFOe++suQtejR6LgEtfocAkI19ZSKH7DXb5r2eR49G
zwEAdgEyAQBwATIBAHABMgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHAB
MgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHAB
MgFKQO33gFV7fi5AJjKRcxtbXrSDe9g+UPnd6dWenwuQiUzqFHCD/Tr1311f
7Z1R7fm5AJnIBDLhgto7o9rzcwEykQlkwgW1d0a15+cCZCITyIQLau+Mas/P
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
4piicJmIhHxSVFTUpknMw0sm7DZuhYWFXLZmEWrvjGrP7+C0D5lwAbdttHtn
VHt+BwcygUyU0xnVnt/BgUwgE+V0RrXnd3AgE8hEOZ1R7fkdHMgEMlFOZ1R7
fgcHMoFMlNMZ1Z7fwYFMIBPldEa153dwIBPIRDmdUe35HRzIBDJRTmdUe34H
BzKBTJTTGdWe38GBTCAT5XRGted3cCATyEQ5nVHt+R0cyAQyUU5nVHt+Bwcy
aU8y0Wp1HcHuTfL/Zan2/A6OQmSi1WrrJLEw591XlrxFjy2+tAjT/+MGACAe
hchEMkaZ1fgWAGgfQCYAAC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYA
AC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYA
AC5AJgAALkAmAAAuQCYAAC5AJgAALkAmamfFihX9+/f39fX18fEZNGjQ/v37
7Z0IOCgyZVJUVBQTE+Pu7t6jR4+cnByrxWwVmTI5evToc889Fxoa6uTktHTp
UqvFtCKjRo1av359aWlpeXl5RkaGq6vr8ePH7R0KOCJyZHLq1CmNRjN//vyy
srKNGzd6eHi8/fbb1gzbAjJlQjKk/Dt27AgICFCpTIz4yU9+Mnv2bHunAI6I
HJkkJiYOGDBA/3Lu3LlUn1gjpBl4DXMoeTuQSXNzM72RrKwsewcBjogcmdDo
YPHixfqXn332GQ0WKisrrRK0FSATQ+gt+Pj42PhHAByT+gcNRYdOFB78T8vK
eY96Hz0aPde3G7eqW9uam5tbXl6e/uW5c+dIJiUlJVZ9CyVnvmotf4tv4fS5
C2I22w5ksnbt2g4dOnz66af2DgIchX0Hi6m7iWz52wubW/8feO0ik39ev5m5
Il9k/tdWvftd6zI0RO0yWblypZeXF0wCbMnDxsbV7xaI6YkL39hYXVNrZlNG
w5yDBw/aZphzqPi0SJkcP3VW5DZVLZOsrCxvb+8jR47YOwhwOK6K+3Bvc4CQ
mJg4cOBA/cuMjAzbnIBtbm5et3WvzLLKCPXKJD093dPTc8+ePdf+zZ07d+wd
CjgQh0+Umu+J7+/9VNtWT6QRjUajyczM/OqrrzZt2kS/0jb7avjW9zVZORvM
l1V3zJZVjNra2tJHBAYGpqSk0JNvvvnGBvk54mRCcnKyvUMBB8L8h/vv1my9
d79ezHYKCwujo6Pd3d1pyGPji9ZOlpaZkUnpeVFOOHz4sFFPfPrpp60cHID2
hpkP968rrtg7XdtQ4bTxg/2tlVX2TqcUqmtqP/nLqXv1D+wdBLRzTp75yrQn
7jlwzN65xHK39t6SNzcb5c8WXVY5AvTTpGNC1rV3ENDOoQ/3Tbv+68N9Zd6O
hoaH9s5lAWfLLxnJpFyRZVVTU9OWLVtGjBjRpUsXGhWGhISMHDkyPz+fpltv
p1SWZK7UnWm/ePmq9fYCAONu3X8+3F9dvv7y1e/snchiCgoP602y9xMlllU1
NTVxcXHsnExQUFDfvn27d+/u7OxML6urRV0GIw1Wlrzz/sfW2wUAhpwr/5b1
RBpc2zuLFOofNCxb976urFq/o+Fho73jtMD48ePJG8HBwYcOHdJPvH79enZ2
dl1dnZV2irIE2IWCosO5m3Y3NTXbO4hEKi5fzVyRf6VKiWXV3/72NzKJRqM5
e1bsFXSmvLXpw+w12yxq7Ow6+cTSFdHQ5LTf5W5d+tYWu8eQ02iwZuM9UgcX
44EFCxaQTMaOHSvZJMK//4ARDQ2tXbZscX+bPG7cOJLJ66+/LkcmllYmKEvQ
0FTURFYmw4cPJ5nY8rZROFsCQLvE9pUJyhI0NHU1kZVJVlYWzpmgoaGZadni
zpmcPn2aZOLm5nb+/HnJMhFfmaAsQUNTXRNZmRATJkwgn4SGhhrecuT69eu/
//3v+V5ngrMlALRvampqhg0bxq6A7d69e9++fYODg61xBSwueQWg3dPU1LRh
wwZSip+fH7tjw6hRo2gKx7/NQVkCgHr5f2+5+fA=
               "], {{0, 158.}, {367., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {367., 158.}, 
             PlotRange -> {{0, 367.}, {0, 158.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztnQtYFNfZx7ksFxELiFVAQKhGSkLho0bjPZJq1FIjMcavlETUp+rziYBR
qYZIvZUaL5gmqAkS4zVViVETodYk3qrFiI3YqCQYMVUqGi9BBEUEdr53Pe12
uwvL7MzZ3Rn2/3uO++zO9b8D57fvmR3G8Cnp46a5ODk5zfGkh3GT58XNnj35
1Rd86cWLaXP+b3ra1F+PTps7dfrU2f2nuNLE9+hfurOTk+65oDAeNArp2+zf
KAZQKXV1dU4KgGLY+0g4OpAJkAlkAhiQCZAJZAIYkAmQCWQCGJAJkAlkAhiQ
CZAJZAIYkIka0WqFW7VC6WXh49PCxr8I+UeE944K208Ix8qFb28KD5tsGgYy
AQzIRF3QgSr+RlhRZO5g/maHsKtEuHbHRpEgE8CATNQCVSPHLwjzCyw4qhuO
CjX3rR4MMgEMyEQVfF8nrP1MyoF9tUA4dcm62SATwIBMlM8/vxde2yXr8O4r
1RU2VgIyAQzIROFUVeuqC/lH+OPT1koImQAGZKJk7jcIi3ZzO8gnK6wSUrJM
XF1dn3jiicTExGnTpk2fPn3ixIl9+/b18PAwswrN3b1794gRIyATBQKZKJnt
J0Qdvcu3hOp7ukfzi83bqVuMO5bKxNPTk7xx5MiRe/daSPPw4cMvvvhizpw5
nTt3NjXJ/v37aZn6+npTnziyTG7evJmRkdGzZ086RMHBwWlpaXQ0pkyZQocl
NzfXZjEgE8XyVZXYo8cUQY9tLpl3iH9O8TKhX/XFixffunVLzGbJGPn5+T/8
4Q+NTELcvXt34MCBkAmjtLQ0ICCAjkDHjh1jY2O7detGz+Pj4wcMGEBPjh07
ZrMkkmUyaXVFVNxUv8AIjXsHDy9fv6AfRw6eOC7zEGTCizcP8JcJtSu3OecU
KZN+/fqVlZUZrnjp0qWdO3fOmzdv0qRJycnJ6enpGzduPHv2rOEyN27cGD9+
fJsmcViZUE1CpQi9farl6MiwicuXL6cpGo3G2dm5pqbGZmGkyeSXS05pPLzc
vXxink19ZvI7Q196I3r4DJ9uvaJHpEAmXLj6vQVHzyKZ0NCJL2JkMmPGjKam
f12Y29DQsGXLlv79+7e28GOPPZaTk1NdXa3fxeXLl9mT1kzisDJJTEyk9z5z
5kyj6TExMTQ9PDzclmGkySQ89hcU9VfZZ4ym/3rNNciEC7tKrCWTuduF+oc8
o7Ypk9mzZ+sXLikpefzxx9uUD9G1a9ddu3YZ7siMSRxTJlTpubi4dOnSpba2
1mgWO2GSkJCgn0J14JgxY7y9vX19fV9++WWRg02LkCYTGt14evtL8wZkIobX
91lLJtQuXOMZ1bxM6KNTv+SyZctcXV3FmIRBo5u///3v+tW3bdtmZmEHlElW
Vha9cRoems5KSUmhWQsXLmQvycM9evSIjY3dt29fQUFBWFgYVYbNzc1880iT
SVjMzylqfPqHkIk1aGgUZr1vRZkcPM8zrRmZBAUF6UcrCxYsEK8Rp/8+46r9
9yV3Q4YMgUz0DBo0iN743r17TWeNHTuWZu3evZu9XLVqlUaj0Y8Wi4uLae6e
PXv45pEmkwkLi11c3SiPb8Bjjw+dHDdp3cvLyyATXnx707KjZ6lMNnM9wW9G
JkVFRWyZLVu2SDYJfaq++eab7PnFixe9vLwgEwY79VpaWmo0vbGxkcY+NKui
4l+XFg17hOEyP/rRj2goJHJHffr06S6C0LBe0rp/0rIvI4ckd/hBV/1PMyhi
yKTVFdK2RjHEpHUQnvzZRNNDxC4mabGxcpUeW5xrev3JL397hGPawMDAFnv3
M888w34Vr169SuN0ySYZOHCgi4uL/ivOuXPntrgWxeD4ppQPdXA/Pz9641Rm
GPV9Nh7s1KmTvqLr2rUrDXwMlxkzZgyNdETKhHYn5gen8fCSU1FQm/yHfzw7
fTOZhLbmHxw1c1ODhI1QDPG/bO2enk8mtFZ+SMC0YhmXecgG70J/+pR94yCS
1r4FjoyMZBOpOHF2drZOZDVBHZyOCT1Zs2aN4Y+7qqqK6Z0GQfqJbm5ur732
muFiycnJvXv3FvkrZO3KxKilbdUG9taN4MZnHUNlIpM+z7xk1crkf7MOcUzb
YmVC06nYZr/bNFoX2UHMX09y4MABNmvUqFGm6zpgZZKamkpvPCQkpLy8nB2Z
kpKSiIgIUgdNNyxFZMpEJByvgI0dPZvewuiZOySsi3Mmhly7Y9nRs/Scyc6T
PNO2eM5EPx5fsmQJF5MQzz//PJubm5truroDnjOprKz09/d3enR9WlRUVK9e
vXQdcPTokSNH0pP169frl5Q5zBGJNJkkzPskdXOj4ZSU9+7TGIfeQtKyLyET
mVCN8ZsdVpRJ8Tc807Yok7Vr17K5Tz/9NBeTED4+PmyBEydOQCaMsrKy+Ph4
70f069cvLy9Pq9WGh4fTATl58j+fGfRTiIuLM1yxZ8+ekydP5htGmkz8g5/w
8gmIips2bGLu8Kkbnhq3yDegN+WPHNzCmUPIRALir6WXIJNKrlfUtyiTzz//
nM3t1KkTF5MwLly4QMvcv3/f9HoVx5SJKbW1tc7Ozi4uLoZ/R7ly5Uoa6VAl
w17ST8fJ4ItjXkitTA5ED5/RJTTa09vf2cXV07tzcOQwskralmbIhAsHz1tL
Jot2C3wvVmpRJlVVVTTrypUrHE1CfPTRR2xJ9qdtkIkpTBQRERGGE2tqakJD
Q3/605/u27fvgw8+oNKFyhiFXLTGvUEmRtQ9EOb80Soy+eRsW/u2NGpLMqGP
wg0bNuTk5LQpE/3Qvk2TEKmpqRs3bly3bp3pDQogE0Z+fj4djQkTJhhNv3jx
Ig2IOnbsSKPFpKSkGzducN81ZKJYthXzl8nsPwp36znnlHmnNfrErKioEGMS
80AmjLS0NDoa2dnZtt81ZKJYvq8TexpWvEz2f8k/p/zbNpJPzPwRMWRiEXFx
cXQ0CgsLbb9ryETJFH/DUyYrioQmzqNkHbgHLGBAJkpGq9X9b31tHj0xt22k
Iufq91YJCZkABmSicBoahbc+kXt4524XyrnedsAQyAQwIBPlQz5Zf1j6sZ1f
IFy8bsV4kAlgQCaqoFmr+0/JMyy5LJY1stAdK9yR3hDIBDAgExVxq1bYdEx4
Rdx9k5bt0/3HoNb7j/z0QCaAAZmojpr7woEvhZVFuotGTI/kbz/UCefCdVto
hAGZAAZkol4am3Tf4Jz+hzB/p+4Yvlog3L1vhxiQCWBAJu0AqkZYTWIXIBPA
gEzaAZCJE2SiACCTdgBk4gSZKADIpB0AmThBJgoAMmkHQCZOkIkC0Gp1Hdnu
zWbfY7ZL7CsTrVZbJ5WFOe++suQtejR6LgEtfocAkI19ZSKH7DXb5r2eR49G
zwEAdgEyAQBwATIBAHABMgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHAB
MgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHABMgEAcAEyAQBwATIBAHAB
MgFKQO33gFV7fi5AJjKRcxtbXrSDe9g+UPnd6dWenwuQiUzqFHCD/Tr1311f
7Z1R7fm5AJnIBDLhgto7o9rzcwEykQlkwgW1d0a15+cCZCITyIQLau+Mas/P
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
4piicJmIhHxSVFTUpknMw0sm7DZuhYWFXLZmEWrvjGrP7+C0D5lwAbdttHtn
VHt+BwcygUyU0xnVnt/BgUwgE+V0RrXnd3AgE8hEOZ1R7fkdHMgEMlFOZ1R7
fgcHMoFMlNMZ1Z7fwYFMIBPldEa153dwIBPIRDmdUe35HRzIBDJRTmdUe34H
BzKBTJTTGdWe38GBTCAT5XRGted3cCATyEQ5nVHt+R0cyAQyUU5nVHt+Bwcy
aU8y0Wp1HcHuTfL/Zan2/A6OQmSi1WrrJLEw591XlrxFjy2+tAjT/+MGACAe
hchEMkaZ1fgWAGgfQCYAAC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYA
AC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYAAC5AJgAALkAmAAAuQCYA
AC5AJgAALkAmAAAuQCYAAC5AJgAALkAmamfFihX9+/f39fX18fEZNGjQ/v37
7Z0IOCgyZVJUVBQTE+Pu7t6jR4+cnByrxWwVmTI5evToc889Fxoa6uTktHTp
UqvFtCKjRo1av359aWlpeXl5RkaGq6vr8ePH7R0KOCJyZHLq1CmNRjN//vyy
srKNGzd6eHi8/fbb1gzbAjJlQjKk/Dt27AgICFCpTIz4yU9+Mnv2bHunAI6I
HJkkJiYOGDBA/3Lu3LlUn1gjpBl4DXMoeTuQSXNzM72RrKwsewcBjogcmdDo
YPHixfqXn332GQ0WKisrrRK0FSATQ+gt+Pj42PhHAByT+gcNRYdOFB78T8vK
eY96Hz0aPde3G7eqW9uam5tbXl6e/uW5c+dIJiUlJVZ9CyVnvmotf4tv4fS5
C2I22w5ksnbt2g4dOnz66af2DgIchX0Hi6m7iWz52wubW/8feO0ik39ev5m5
Il9k/tdWvftd6zI0RO0yWblypZeXF0wCbMnDxsbV7xaI6YkL39hYXVNrZlNG
w5yDBw/aZphzqPi0SJkcP3VW5DZVLZOsrCxvb+8jR47YOwhwOK6K+3Bvc4CQ
mJg4cOBA/cuMjAzbnIBtbm5et3WvzLLKCPXKJD093dPTc8+ePdf+zZ07d+wd
CjgQh0+Umu+J7+/9VNtWT6QRjUajyczM/OqrrzZt2kS/0jb7avjW9zVZORvM
l1V3zJZVjNra2tJHBAYGpqSk0JNvvvnGBvk54mRCcnKyvUMBB8L8h/vv1my9
d79ezHYKCwujo6Pd3d1pyGPji9ZOlpaZkUnpeVFOOHz4sFFPfPrpp60cHID2
hpkP968rrtg7XdtQ4bTxg/2tlVX2TqcUqmtqP/nLqXv1D+wdBLRzTp75yrQn
7jlwzN65xHK39t6SNzcb5c8WXVY5AvTTpGNC1rV3ENDOoQ/3Tbv+68N9Zd6O
hoaH9s5lAWfLLxnJpFyRZVVTU9OWLVtGjBjRpUsXGhWGhISMHDkyPz+fpltv
p1SWZK7UnWm/ePmq9fYCAONu3X8+3F9dvv7y1e/snchiCgoP602y9xMlllU1
NTVxcXHsnExQUFDfvn27d+/u7OxML6urRV0GIw1Wlrzz/sfW2wUAhpwr/5b1
RBpc2zuLFOofNCxb976urFq/o+Fho73jtMD48ePJG8HBwYcOHdJPvH79enZ2
dl1dnZV2irIE2IWCosO5m3Y3NTXbO4hEKi5fzVyRf6VKiWXV3/72NzKJRqM5
e1bsFXSmvLXpw+w12yxq7Ow6+cTSFdHQ5LTf5W5d+tYWu8eQ02iwZuM9UgcX
44EFCxaQTMaOHSvZJMK//4ARDQ2tXbZscX+bPG7cOJLJ66+/LkcmllYmKEvQ
0FTURFYmw4cPJ5nY8rZROFsCQLvE9pUJyhI0NHU1kZVJVlYWzpmgoaGZadni
zpmcPn2aZOLm5nb+/HnJMhFfmaAsQUNTXRNZmRATJkwgn4SGhhrecuT69eu/
//3v+V5ngrMlALRvampqhg0bxq6A7d69e9++fYODg61xBSwueQWg3dPU1LRh
wwZSip+fH7tjw6hRo2gKx7/NQVkCgHr5f2+5+fA=
               "], {{0, 158.}, {367., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {367., 158.}, 
             PlotRange -> {{0, 367.}, {0, 158.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Ops: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"s\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"measure\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"h\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"cx\"", "\[Rule]", "1"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QiskitCircuit[
   ByteArray[CompressedData["
1:eJy1Vb9vHEUU3j357DuMnR8QOyFKsImw71BsxRY0kWiwRIgOTomhcBNNZvfG
94bM7d7tzMK5sIQLW8IaiYIhJf8CLRISDaRJi2gQJeIPoEhFwZvZufPd4SSk
YJudefPme2/ee997y1G6HYVBECxUguCLqW9m8Wc/faXH5QOu1mOexTn+ezlN
VN7xW6Pn7xaCLS/42tQPzL6p6ZdIRCUjCe0wo2eG+lOFYNYL1jY2bxhdJi2q
qLmH15afac+p6fPe2O1EqiyPFU+Twm7TGq6mXZZRJ9SrE2iCRxnN9talokmL
Zi3SporJdYkufHwLlyfuz5IW2+UJdzhN9LDwO0TVWZLkHdLLI66kaYR+H4ti
H+gZ0qUZ7Uh8j54mgkZMIEI1TpPWAK5KWrn30WLniQ1NqaVMHulpj6yvnh6K
jLW5VCxDn+9azZGnl0nGuniw7A5qPjXb/kJt8/rSam+1fn3pRt2gC0MguKbP
TOgWoDUd9kyjdFz5ZfHHy7dvfvpILz4F0+YOVuBN7wnUnuvDRt3AW7CGEeJJ
i/VtIMsEqARzXHnIL9z/6yf9bX5kIqZMBG83AnjnuPJu6dGTPy7cOrDyQwyu
j3nd7mFuYPssvFIkERaasAgX4VIjhNcQ4fI9A1eacLUJrzdhCZbzCN6AjUMD
NycR/mvhACbhg7HCcTZ1COZ/tNrHp2/tjNdr1bHNnhu4o8s7pznVf6ZTTqcU
O6XSqUr6bFHpKhNj5e8E6CNabITF82Dl6LQHLkw8sMOozDPbID7yq6HLi3pm
cOq9DkccWhiL5oqNpl6aAI8FlZLHVIwwZkuMMQbr9JoT1bYGymOVGnu2YKUK
fe5fOkOWxI4lj//ceVL64df39aWnojmepJC8iP2CKQpJEFoSbH732+Pf219+
P0mO++c/a/98sfd3QY5JSuwOwgr8ueF0xQn9AoTpMyTt2vRmiijeYRJb1qsE
u5nKUkF2Rfo5kTH2XNfvyj0Mtl3BGtXleLBRFLuiL5miU2wwlHj+FjHpMz1f
6NiOwGME3HeqgX75Pa4+TGPXMCUGvRFYA43gyNAjc2Cw3B42QicKvShHLIc+
hpWinr2qTq72/VU1crVKaBJzgRmxT5ojmBVLxMI6jq5UCBYPdjgmaC4UGrF1
pStRzoXi9mjKyw7NtkHquKHAMLNE0UhgzU+O1qGCP5+/MxB84gQnfX7aQ+zb
0fmA7UnzlR01dkTZpU0b0nKIZzM2g4NoL80VLudIW6QRFaSL7ZbZiVUZmUZT
bhgh2asEL1M3cfdxLq3/A9kmFig=
    "]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893808215834104*^9, 3.8938082719579077`*^9, 
  3.8938083932198563`*^9, 3.893808445626252*^9, 3.893808583072586*^9, 
  3.893847202959998*^9, 3.893847275563899*^9, 3.9060283604160624`*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[6]=",
 CellID->1018433089,ExpressionUUID->"e31ae9b0-c4aa-49d3-bee1-cd0ab213d06b"]
}, Open  ]],

Cell["Generate its Qiskit diagram:", "CodeText",
 CellChangeTimes->{{3.893808250506318*^9, 3.893808257875512*^9}},
 CellID->508356605,ExpressionUUID->"769205b3-8b17-4e2c-94f1-563de72100e5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qiskit", "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893808237319787*^9, 3.893808241111786*^9}, 
   3.893808274889237*^9},
 CellLabel->"In[7]:=",
 CellID->1625274180,ExpressionUUID->"bf6241ac-0513-486f-8068-42832f8bcb29"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
sn9F6A5zvRDSEFRWolFZASB9KquJNiorQOZeea8w8qrsXxG6yfzt5ayfb2qm
shKNygoA6VNZTbRRWQGy9dHUwsnXZf9y0H1m5FWFV9/P+lmnNiorpfXt2/e6
667beOONU7tFlRUA0qeymmijsgJkaNacwjm3Zf9a0N3mlOsKE6Zm/dxTA5WV
Evr27fvnP/+5eJ5MnTo1tdCqsgJA+lRWE21UVoCstLXP+z6mzF8Iuuec86fC
rLlZnwFUS2WtRe/evRdaaKGFF154kUUWWWyxxYr/s/i/F/8vxf971kurg08S
a4fUQqvKCgDpU1lNtFFZAbJy+9PZvwqUP5OmF2bOWfAUfyzzpZY5l/11Xugm
j1TWBerfv//666+/++67H3300eecc86YMWPuvvvu5557btKkSSUe2IkTJz77
7LN33XVX8efPPvvs4p/dbbfdRowY0a9fv6zvUFk+k1g7pBNaVVYASJ/KaqKN
ygqQiVfey/4loKKZOaes+1X8scyXWv488FLCTzPJUFnn179//w022ODII4+8
/PLLn3nmmdbW1jo+4HPnzn366acvu+yyww8/fP31148ZXTtNrB1SCK0qKwCk
T2U10UZlBUjfrLmFM27K/iWgomnIyvr9P8z79jFyR2Xt0KdPn6222uqCCy6o
e1YtrSO6nn/++VtssUWQzxkokVg7JB1aVVYASJ/KaqKNygqQvusfy37/r3Qa
srIW51d3+dyA/OnmlXXIkCF77bXXNddcM3ny5KyfisLHH3989dVX77nnnoMH
D87qAVlgYu2QaGhVWQEgfSqriTYqK0DKXs7bZwV0TKNW1qN9bkAOdc/KOmTI
kKOPPvq+++5L822r5Zs7d+4999xz1FFHpZxby0ysHZILrSorAKRPZTXRRmUF
SNOsOfn7rICOaeDK6nMDcqe7VdYRI0b8/ve/nzlzZtYPfFlmzJhx6aWXrrfe
eik8MhUl1g4JhVaVFQDSp7JWOt+7sn3Pnz299SFXrLf9CSuN2G3Yyht9bomV
Bw5Zqn/Lov0HDR00dNlFllp98RVGLLXa5l/YaJ8RO5+21cGX73LKffuf/1bm
K8/LqKwAacrjZwV0TANX1qN9bkDedJPK2r9///333/+JJ57I+vGu0qOPPvpf
//VfyX1VVhWJtcPUqVPXX3/9+i5GZQWA9KmsZc4Rl83Y9qhrVxyxa7+Bi1T3
V53+g4Yuu/a26+/8ox2Ou+3g33yY+T0KOyorQGpeez/7bb/qaezKWpy/vZzw
00/9NHxlXXLJJX/+859PnDgx60e6DiZMmHDuuecuvvji9X2Iqk6sRU8//fQi
i1T5K0ZXVFYASJ/KusA58Ffvrrf9iX0GLFzPv/c0NS223JdG7Hjqbqf97agx
rZnfx1CjsgKko729cN4d2W/7VU/DV9ZTry/MmpvwSUCdNHBlXXjhhX/2s59N
nz4968e4zqZOnXrGGWcMGjSoLo9StMTaQ2UFgCyorCXmiMtnbbjbT5v7Dqj7
X3s+re9Cg3f94QOZ39k4o7ICpOPpf2e/59cyDV9Zi3PnPxM+CaiThqys/fr1
+/73vz9hwoSsH90EffjhhyNHjuzbt28tD1TAxNpDZQWALKisXc0+o15YdJm1
kvg7z/y2P+aPmd/fOKOyAqSgta3ws1uy3/Nrme5QWU+8pjBtVsKnAvXQYJW1
V69eBxxwwFtvvZX145qSN998c7/99uvZs2cVj1XMxNpDZQWALKisnc5OJ97Z
u9/AhP7OMz+V9dOjsgKk4JFXs9/wa5zuUFmLc9PfEz4VqIdGqqwbbrjhc889
l/UjmoFnnnnmy1/+ckWPVdjE2kNlBYAsqKzzzzdH3tyruU9yf+eZn8r66VFZ
AZI2p7Xwoxuz3/BrnG5SWY8bV5g4LeETgpo1RmXt16/f6NGj29rasn44M9Pa
2nrWWWeV+QECkRNrD5UVALKgsn5m9jjj8TI/iHXx5b+89lZHbnHA73Y//eH/
+vmrB/36/SMum3nUFXMPu3jK/ue/9e3TH9n2qGtH7HzaCuvt1H/QYqUPpbJ+
elRWgKTd83z2u33t000qa3HGPZzwCUHNGqCybrjhhi+++GImj95HH3300ksv
/fOf/3zqqaeeeOKJ4v8s/u/F/0tWHwn73HPPLfBNrcETaw+VFQCyoLJ+eg67
ZOqgocuW/hvLgIUX33C3n+533msVHXmfUS9svNd5S626WVPPXvMfU2X99Kis
AImaPbdw8nXZ7/a1T/eprMdcVfhgcsKnBbXJdWVN7S2skyZNGj9+fPG2jjji
iG9961sbbLDB8OHDS79xtPj/WvyZDTfcsPjzRx55ZPHP3nPPPZMnJ349lH5T
a/zE2kNlBbql4mvZo48+eu655+6///7F145llllm8ODBzc3N/fv3X3zxxVdc
ccVNNtnk8MMPv/DCC5999tmsF0tjUlk/PWttdUSJv6v07NX7i9sef+jvJtdy
Ewf9+v1N9v7lYst+8dNHVlk/PSorQKIezv8nsnZM96msxbnxiYRPC2qT38q6
3nrrJfcW1tmzZ997772jRo369re/XfzdtqmpqS5rLh5npZVW2mOPPYq/R993
331z5pS3F1TuueeeW2eddT5z67lIrD1UVqA7aWtru/POO4uvC4MHDy5/n1x5
5ZVPPvnkd999t8SRr7/++ou79sorr6R2H8kLlfWT2e+813v26t3VBdjcd8CO
37+9jjf37dMfWXWjfTs+AFZl/fSorADJaW8vnHt79lt9XaZbVdaTrp33JmTC
ymll3XPPPWfOnFn3R+Ojjz4aM2bMrrvu2tLSksK9GDRo0O67737llVdOnDix
7vdl+vTpxYN/clt5Saw9VFageyi+ip133nnDhw+verfs37//yJEjO30FaWtr
W2ihhUr82QcffDD9u0xwKusns/ZWR3Z17fTs1bzrDx9I4kYPuODtL257/M4n
3Z353Y8zKitAct74MPt9vl7TrSprcR5+NeGTgxrkrrL27Nnz7LPPru+D8M47
74wePXrjjTfu1auTD8hKQXNz86abblr8dfu9996r710788wzm5qacpRYe6is
QKNra2v7zW9+M2zYsLrsmcOHD3/44c9+Dv4LL7xQ4o8UX0mnTfMFpXyWytox
R/5+dr+BQ7q6fL70zR9kvsLuMyorQHLGPpT9Pl+v6W6V9dzb570VmZjyVVkH
DRp022231fHu33vvvbvttlvv3l3+o7CUFVfy7W9/+69//Wsd7+PNN9/8l7/8
pbo/m35i7aGyAg3tueee23DDDeu7bTY3N48bN+7Tt3L11VeX+PkvfOELWd19
IlNZO2bnk+7u6trpP2ixIy6flfkKu8+orAAJmTarcNy47Pf5ek13q6zFeePD
hE8RqpWjyrriiis+//zzdbnXkydPvuCCC1ZbbbWs71OX1lhjjV//+tdTpkyp
y/2tTiaJtYfKCjSuiy++uPQ3J1atd+/en/6vkCeeeGKJH95zzz0zfBAIS2Xt
mBE7ntrVtbPmFodlvrxuNSorQELGP5f9Jl/H6YaVdexDCZ8iVCsvlXWzzTar
y4eXTp48+ZRTThk4cGDWd6gsgwYNOu200zJprVkl1h4qK9CI5syZc+ihhya6
efbv3/+T77T6+te/XuInR48ene2jQUwqa8cst+72XV07O51wR+bL61ajsgIk
ob29cOZN2W/ydZxuWFmPGzfvDckElIvKus0229T+XVezZs0q/l6ZVTmsxdCh
Q3/xi1/Mnj27Ls94OTJMrD1UVqDhFDfwHXbYIYX9c9NNN23/nw9pWnzxxUv8
2D333JP1Q0JEKmvHDB72ha6unX1Hv5z58rrVqKwASXhrQvY7fH2nG1bW4jz2
WsInClWJX1l33HHHGgNja2vrZZddtvTSS2d9V2oyfPjwK664oq2trV5PfVey
Taw9VFagscyaNWubbbapaBvs1avXqquuWnz523fffY888siDDjpol112WWed
dZqbmxf4Z4uvFO+++27pn5k0aVLWjwoRqawd03ehwV1dO4ddMjXz5XWrUVkB
kvDnZ7Lf4es73bOyXn5/wicKVQleWb/1rW/NnTu3ljv4+OOPr7nmmlnfj7op
/pb95JNP1uvZn1/mibWHygo0lj322KPM3W/o0KGHHXbY3Xff3dU/35g+ffrN
N9+88847NzU1dXWQ4kve7bffXuJWll9++ZQfAfJCZe2YXs19urp8jrhsRubL
61ajsgIkYfTt2e/w9Z3uWVlP+ENhbmvC5wqVi1xZt99++zlzyrtaOjN79uyT
Tz65nHf+5EvxHp122mm1PDJdiZBYe6isQAMpbtfl7HvDhw+/8MILy/9snOJ2
vf7663d1tM0337zEbe26666J3mXyS2XtmKaevbq6fPY//9+ZL69bjcoKUHeT
pme/vdd9umdlLc4L7yR8ulC5sJV16623njWr+g/zffzxx1dfffWs70SC1lpr
rfq+qTVIYu2hsgKN4qqrrlrgjtfc3HzCCSdMnz690oPPnTv3kEMOqWKP/dnP
fpbEnaUBqKwd07tfl9+RutOJf8l8ed1qVFaAunvwpey397pPt62s12kn8cSs
rCNGjJgxY0Z192jOnDkN+RbW+XW8qbXGT1ToECex9lBZgYbw5JNP9u3bt/R2
t8QSS/ztb3+r5VYOOuigSvfYO+64o173kQajsnbMoKHLdnX5fHHb4zNfXrca
lRWg7n57T/bbe92n21bW028s/M833xJIwMo6bNiwd96p8n3PH3744aabbpr1
PUjVFltsMWHChFrOgVCJtYfKCuTfzJkzV1tttdJ73VprrfWf//ynxhuaNWvW
qquuWtEe+8EHH9TlPtJ4VNaOWWrVzbq6fPoPGuoLsNIclRWgvmbNKRw3Lvvt
ve7TbStrcf4zMeGThgpFq6z9+vV79NFHq7svzzzzzLLLLpv1PchA8VfsqVOn
VvegTZs2bckll8z6Hvx/VFYg74466qjSG93qq69er9r5yCOP9OzZs8wNdqml
lqrLjdKQVNaOWWfr75W4iNb9xsjMV9h9RmUFqK/n385+b09iunNlHf9cwicN
FYpWWa+88srq7siNN944cGCXn6PVwPr27fvnP/+5lnPgsssuy/pO/H9UViDX
/vKXvzQ1NZXY5ZZaaqn33nuvjre4++67l7nB7rDDDnW8XRqMytox2xx5Tenr
aOO9zst8kd1kVFaA+rrzn9nv7UlMd66sv38g4ZOGCoWqrN///veruxenn356
6V9pG1XtibXD0UcfnfVd+X9UViC/Zs+evfzyy5fY4or7dtX/ZKMrd911V5kb
bPHlsr43TSNRWTvm0N9N7tXcp/SltPIG397//LcyX2rDj8oKUF+X/jX7vT2J
6c6V9Sc3J3zSUKE4lXXbbbdta2urdP3FP1LFd380hnol1qLW1tatttoq6zv0
v1RWIL9GjRpVeov75S9/WfcbbW9vX2655crZYG+55Za63zoNQ2X9ZFb5yp4L
vJp6NfdZbZPv7nba3zJfbQOPygpQXz+6Mfu9PYnpzpW1ODNmJ3zeUIkglXXZ
ZZf9+OOPK118a2vrPvvsk/Xas1HHxNph4sSJSy+9dNZ3ax6VFcipDz74YNCg
QSX2tw033LCK/55YjgMPPLCcDbb279uigamsn8x3fvJkj7L/kVTLIsusteXh
24+86ZCLJmS+8gYblRWgjqbOzH5jT2i6eWV9uZ4fRUatIlTWpqam8ePHV7ry
4i+q3/nOd7Jeezbqnlg7FI+Z9T2bR2UFcurQQw8tsbk1Nzc/91xSH09/0UUX
LXB3XWyxxRK6dRqDyvrpWW2T71b8N5imps8tsfIqX9lrk71/udtpfzvishmZ
34u8j8oKUEeN+tVXR3f7yuoLsEKJUFmLv5ZWsfL99tsv64VnI6HE2uGAAw7I
+v6prEAuvfPOO336lPosx4MPPji5W3/iiScWuLt+4xvfSG4BNACV9dNz6O8+
HjS0rA/i6ErPXs2LLrP26psduMUBF+911j+/N6Yt8zuVu1FZAeqoUb/66uhu
X1l9AVYomVfWZZdddurUqZUu+4gjjsh22VlJNLEWTZ48OfPPDVBZgTw6+eST
S+xs/fv3f/vtt5O79eLuvcDdtbjC5BZAA1BZPzP7nPN8v4GL1OuvN/0GDllp
xG5bHnTZIb+dmPldy8uorAB11KhffXV0t6+svgArlGwra3WfFXDBBRdkuOYM
JZ1YO2T+uQEqK5A706ZNGzJkSImd7aijjkp0Ae3t7T179iy9u15//fWJroG8
U1nnn73OembgkKXq+tecHj179V5u3e13OO42725d4KisAHV0zm3Zb+wJTTev
rCOvKrS1J3z2ULZsK2sVnxUwfvz45ubmDNeclXQSa4dsPzdAZQVy51e/+lWJ
ba2pqenll19Oeg0LL7xw6d319ddfr+PNtbW1PfLIIz/+8Y932WWX1VdffejQ
of369evdu/eQIUNWWGGFbbbZ5vjjj7/99ttnzJhRxxslUSprp3Pgr94dvtY3
6vo3nf+18OIrbn3omKPGtGZ+H8OOygpQRydfl/3GntB088panCkzEz57KFuG
lXX48OGVflbAa6+9tsgidfunWzlSS2J97rnn3nrrrYr+SLafG6CyArnzpS99
qcS2tt1226WwhmWWWabEGgYPHlyvG3r//fdPP/30JZdcspwtfcCAAQcddNCz
zz5br1snOSpridn60DELDR5W2V9oyjN0+DrfPv2RzO9gzFFZAeplbmv2u3py
o7L+Z2LCJxBly7CyXnPNNRUtdcqUKauvvnpWq81QLYn16aefXmSRRdZee+3p
06dX9AevvPLKrO6vygrky6uvvlp6W0vnn+qX/q9jm2++ee03MXfu3NGjR7e0
tFS6sffs2fPggw+eMGFC7WsgOSpr6Tnishmb7nN+yyKl/nNGdZqaeq7/rdN9
gMD8o7IC1MvEadnv6smNyvrcfxI+gShbVpV1vfXWq3SpO+20UyZLzVbtibXj
OLvvvntFf7atrW2ttdbK5C6rrEC+/PSnPy2xp7W0tMycmca/4Vl00UVLLOP4
44+v8fjvvPPOV7/61Vq296WWWurRRx+ty50lCSprOfO9MW07HHfbiiN2be47
oJbLYX4rrLfTEZfPyvwOhhqVFaBe/vVh9rt6cqOyPvxqwicQZcuqst51110V
rfPSSy/NZJ3Zqldi7XDllVdWdIQ//elPmdxrlRXIl9L/TWqfffZJZxkLLbRQ
iWWMGzeuloO/9NJLw4bV4Z9LF1/Xbrrppnrd5WwVH5CWxrLcGptm/jtCjubw
S6dvd/SNa2x+yMKLrVD7pdFh+JpfP+qKuZnftThTPCezviwAGsTqG+2R6I49
afq8hpnVtJf33U/FH8tqhcXHJ9HHf6Pdz8j6FON/DRhQ5/8QX44tttiiol9k
3nrrrQV+qUfjqW9iLRoyZMi7775b0XE22WST9O948ZzM+rIAWLBhw4YV98n/
/Oc/pfe0P/zhD9Xt5BWZPXt26WW8+OKLVR/89ddf//znP1+vTb5Pnz533HFH
He97Vloq/+SE4BZf/kuZV7WczoG/fm/7kTd9eYeTh6/59f6DhtbyLKzxtYMz
vztxpnhO1uv0Bujm1tzi0ER37DLfTdptJf022s3+q9RX8dLYmpqaHn/88YpO
yG98I5Gvdo2s7om1ww477FDRoR566KGU7zhAXrS0tBT3yXHjxpX4meJL3ocf
fljdZl6Rf/3rXyWWMXDgwPYy/xv/fGbOnLn22mt3deTm5ubddtvt2muvLS5g
1qxZbW1txft77733nnDCCUsssURXf2rhhRd+9dXc/7smldV0Nd/95ZvbHX3j
l7550pIrbdizV+9Kn4jtjr4h87sQZFRWgHrZYJcfJ7pjq6ylJV1Zi395yPoU
IzPFX8cqOhu74WcFJJRYO1T6uQE77rhjanccIEc6Kuthhx1W4me++MUvVreZ
V+rBBx8ssYyNNtqo6iMfcsghXR12k002eemll7r6g9OnTz/llFN69uzZ6Z9d
d911586dW/WqIlBZTTlz+KXTd/z+n1fdaN8+/co9YQYOWeqIy2ZkvvIIo7IC
1MtX9zgn0R1bZS0t6cq64/HZfN4jmevVq1eJ38jm1w0/KyDRxFo0ePDgd955
p/xjPvfcc139jgzQnXVU1jXWWKPEzxx22GHV7eeVGjNmTIllfO9736vusA89
9FBTU1OnxzzggANaW1sXeIRbb721+LrW6RFGjx5d3aqCUFlNRXPEZTM23/+3
AxdZupznYuM9R2e+4AijsgLUy8Z7/TzRHVtlLS3pyrrTiXdmfYqRjZ133rmi
U/Hb3/521ktOVdKJtUOlX8Wy7bbbJn3HAXKnpaVl+vTpXUXIDhdffHF1W3ql
jjvuuBLL+P3vf1/dYddbb71OD1h8NS//Iwiuvfbarh7A999/v7qFRaCymirm
iMtnbbjbT5p69ir9XAwauuz3xrRlvtrMR2UFqJdN9/3vRHdslbW0pCvrt06+
J+tTjGzcdddd5Z+Hf//730v/9tpg0kmsRT179nzmmWfKP/htt92W6B0HyKOW
lpbi3lv6Z5544onqdvVKbbXVViWWUdGe/4muNv+lllrq448/ruhQXX3swEkn
nVTFwoJQWU3Vs+up9/cbOKT001H8mczXmfmorAD18rX9Lkx0x1ZZS0u6su76
w/uzPsXIwCqrrFLRebj11ltnveT0pJZYO2y//fblH7+trW255ZZL6I4D5FRL
S8sNNyzgc+YnTZpU3cZekeIu/bnPfa6rNfTr16+6T0DdeOONOz3guHHjKj3U
xIkTO32dWnjhhSdPnlzF2iJQWU0ts8vJ95b+Yqz1tj8h80VmPiorQL1stu8F
ie7YKmtpSVfWXU65N+tTjAz84he/KP8kHD9+fNbrTU/KibXDAw88UP6tnH32
2XW/1wC51tLScs4555T4gUGDBlW3sVfqscceK7GMESNGVHHMF198sdOjfeEL
Xyj/swI+7cc//nGnB7zkkkuqOFoEKqupcdb/1uklno5hK2+U+QozH5UVoF42
2fsXie7YKmtpSVfWnU+6K+tTjLQNGDCgorf0fPnLX856ySnJJLEWffWrXy3/
hj788MOuvr4EoHtqaWnp6h/Cd1h99dWr29srddZZZ5VYxqGHHlrFMU899dRO
j3bhhRdWt8ji60jv3p28c2+zzTar7oCZU1lNjXPYxVP6tyza1dPRu+9Cma8w
81FZAeplo++cm+iOrbKWlnRl3fGEP2d9ipG2Aw44oPwzcIH/BrNhZJVYO9x6
663l39zee+9dr3sN0ABaWlpKf0XjBhtsUN32XqkvfalUiPjd735XxTFXWWWV
+Q/Vu3fvCRMmVL3Ob37zm/Mfs6mpKaffgaWymtpnjc1L/Zeagy78IPMVZjsq
K0C9fGX3nyW6Y6uspSVdWXc47tasTzHS9uSTT5Z/Bn7lK1/Jer1pyDax9qjw
HUQPPfRQXe41QGNoaWnZfvvtS/zA5ptvXt0OX5GXXnqp9Dqr+AauN998s9ND
bbnllrUs9Yorruj0sGPHjq3lsFlRWU3ts+33ri/xjOx11jOZrzDbUVkB6uWL
2x6X6I6tspaWdGXd6uDLsj7FSNVqq61W/un3j3/8I+v1piHzxNrh+eefL/92
V1xxxbrcKEADaGlp2WyzzUr8wDbbbFPdJl+Rrv5pf4fevXvPnj270mNecskl
nR5t1KhRtSz17bff7vSw++67by2HzYrKamqffc8t9V9Jdj/94cxXmO2orAD1
ssqG30l0x1ZZS0u6sn5l959mfYqRqpNOOqn80+/ggw/Oer2JC5JYi4488sjy
b3rkyJH1ul2AvGtpaSn9EeIbb7xxdft8+WbOnDl06NASa1hnnXWqOOwBBxzQ
6dEefvjhGhfc6X+tW2mllWo8bCaGDRvW0liWW2PTzKtad5tDfjuxxPW76w8f
yHyF2U7xnMz6sgBoECutt22iO/ak6fNCYlZT5lezFn8sqxUWH59EH/8R2x+X
9SnG/xowYECJv93Vy0MPPVTm7yyTJ09eaKGFUlhShuIk1h7/8xXY06ZNK/PW
77333jredFeK52TWlwXAgg0bNmy99dYrsZuttdZa1W315bvoootK76j7779/
FYddd9115z9Uc3PzzJkza1zwHnvsMf+Rm5qapkyZUuORqd2bH2Vf1brbHHXF
3BLX73d+8mTmK8x2iuckAHXx3uTsd/Xkpsx30ib9htIM5x9vJnwCUbbHHnus
9C9otVt88cXb2trKXM9///d/J72ebIVKrB2Kv6SXuYC5c+cOGTKk7gv4jOI5
Wd3jA5Cyr371qyV2s2WXXTbRW581a9Zyyy1Xekf91a9+Velh58yZ06dPn/kP
teqqq9a+5rPOOqvTdd5///21H5waqazpz6G/nVTi+t139MuZrzDbUVkB6qWB
A+PRKuvYwusfJHwCUbYUKmtFb6RZbbXVkl5PhgIm1qK11167/GXstddeSazh
01RWIC+23HLLErvZgAEDyv+PjFUYNWrUAnfU8v8tySdeeeWVTg+144471r7m
66/v/Lt+Lr300toPTo1U1vRnz58+1eXV29R0xGUzM19htqOyAtRLe3vh+1dn
v7EnNCrrR1MTPoEoWwqV9Y9//GOZi3n22WeTXkyGYibWDi+//HKZK7nmmmuS
W0YHlRXIiz333LP0hvbCCy8kdNPvv//+wgsvXPrWe/XqNX369EqPfOedd3Z6
tGOPPbb2ZT/1VOdN6ZRTTqn94NRIZU1/Nt//t11dvwOHLJX58jIflRWgjs68
OfuNPaFRWee2Jnz2ULakK2u/fv3K/xXvZz/7WaKLyVDkxFo0evToMhczefLk
Tv8laR2prEBeHHfccaU3tHHjxiV00zvttNMCt9PVVlutiiP/9redZ59zzz23
9mW///77nR58zz33rP3g1EhlTX+Gr71NV9fvCuvtlPnyMh+VFaCOLrgr+409
oenmlfXk6xI+dahE0pX1G9/4RvmL2WCDDRJdTFaCJ9aiTTbZpPwlbbHFFoku
RmUF8uKCCy4ovaEdc8wxSdzumDFjytlO99577yoOfsYZZ3R6tLFjx9a+8vb2
9ubm5vkPvuWWW9Z+cGqksnbMEZfNSOeG9h31YlNTz66u3032/kXmD0Xmo7IC
1NENj2e/sSc03byy/vruhE8dKpF0Zf3Rj35U5kree++9nj27/KtmfsVPrD3+
51+VTpgwocxV/eAHP0h0MSorkBf33ntv6Q1t2LBhra11/gc8//znPwcOHFjO
dnreeedVcfyjjz6606NV/Vr2GUOHDp3/4Ouuu25dDk4tVNaOWW7db663/YmH
/nZSorfyvSvbl1ljqy6v3qam7/7iX5k/FJmPygpQR4+9lv3GntB088p6y5MJ
nzpUIunKesstt5S5kksuuSTRlWQiF4m1w5VXXlnmwrr67pJ6UVmBvJgwYUJT
U1PpPa1ecbLDRx99tNxyy5W5nd53331V3MQ+++zT6dEefPDButyF5Zdffv6D
Dx8+vC4HpxYqa8csvfq8f7PTb+CQDXc9M7nWOmLn00pcvJ//wqaZPw4RRmUF
qKN3P85+Y09ounllfeqNhE8dKpF0ZX3nnXfKXMmOO+6Y6ErSl6PEWrTbbruV
ubY33ngj0ZWorECOrLHGGqX3tO22265etzV58uT111+/zL20qamp+PNV3MrO
O+/c6QGLL0x1uRfrrLPO/AcfMmRIXQ5OLVTWjumorB369GtZb7vv1/dtpd+7
sv3LO55S+vrd8fu3Z/44RBiVFaCO2toK3/9D9nt7EtPNK+uHUxI+dahEopV1
ySWXLH8lgwcPTm4l6ctXYi1afPHFy19hostTWYEcOeaYYxa4rd14442139CU
KVO+8pWvlL+XrrjiitXd0LbbbtvpAV944YXa70XRiBEj5j/4wIED63JwaqGy
dsynK2uHpqaey6697XZH33DEZTNrPPh3zvz7kist4EIetsrGmT8IQUZlBaiv
8+/Mfm9PYrpzZf3BtYX29oTPGyqRaGXdfvvty1zGq6++mtwy0pe7xNrhrbfe
KnORW2+9dXLLUFmBHHnggQcWuK0NGzZs0qRJtdzKa6+9tsA3zX7G7rvvXt1t
bbnllp0e8JVXXqnlLnyi01bcp0+fuhycWqisHTN/Zf1/J2q/llW+stc3Dh93
0K/fr+iYR41p3enEO1f5yp4lvu6qQ3Of/vue+1LmD0KQUVkB6qtRvwCrO1dW
X30VTaKVtfyvvrrmmmuSW0bKcppYi2666aYy15noF2CprECOtLe3Dx8+fIE7
2yabbDJjxozqbuKPf/zjkCFDKt1Lzz777OpubrPNNuv0gK+//np1B/yM4kMx
/8GbmprqcnBqobJ2TInK+ulTdpGl11x14/023ef8nU68c59znj/skqmfHOGo
Ma2H/u7j7/7yzZ1O/MtG3zn3C1/du/+gxcq8crc+dEzmj0CcUVkB6qtRvwCr
O1dWX30VTaKVtfyvvjrhhBOSW0aa8ptYi374wx+WudREvwBLZQXyZdSoUeVs
biNGjPj3v/9d0ZHffPPNXXbZpdOjNTc3l/7irb/85S/V3Z1M3svau3fvuhyc
WqisHVNWZe1UU1Nz3wHFqfKP9+jxld3PyvzuhxqVFaC+PpyS/d6exHTnyvrP
cv9FMilJtLKW/76XLbao9i+0keQ6sRZtu+22Za72xRdfTG4ZKiuQL1OmTCnz
o8UHDRp07rnnTps2bYHHfOqpp7773e/27t27q0P96Ec/Kn1bH31UZZ7I5HNZ
F1poobocnFqorB1TfWWtQVPPXpt/96LM73u0UVkB6u6sW7Pf3us+3bayHn91
YfbchM8YKpRoZZ01a1aZy2iAr77Ke2LtUckXYE2ZMiW5ZaisQO6cf/755e9y
LS0t++677xVXXPGPf/xj4sSJc+fOLb5cvv/++88888zYsWNHjhy54oorlj5C
8Wduv/32Ej+wzDLLVH1fdtppp06PWXypqstjtc4668x/8OJfA+pycGqhsnbM
0mt0/nbu5AwautyuP3wg8zsecFRWgLq75cnst/e6T7etrL+7N9mzhSokV1nL
/43prbfeSmgNqWmAxNqh+Gt+mcseOHBgQmtQWYHcaW1t/eIXv5jQrvgZ++yz
T1tb209+8pMSP7PTTjtVfV/23nvvTo/54IMP1uWxWn755ec/eC1ZmHpRWTvm
4N98tNXBly+/3o7NffrX56LtWu++C315x1M+/Zmu5tOjsgLU3esfZL+91326
bWV9qD4f6EU9JVdZV1999TLX8MgjjyS0hnQ0TGIteuqpp8pc+UorrZTQGlRW
II9efvnllpaWhDbGTxx++OHt7e3Fm/vWt75V4sfOOOOMqu/I0Ucf3ekxq36l
+4yhQ4fOf/B11123LgenFirrZ+bwS6dvd/SNq278XwOHLFWfC/hTFvrckuvv
/KMDf/1e5ncz8qisAHXX1lY45frsd/j6TretrB9X+eW6JCi5yrrllluWuYY/
/vGPCa0hBY2UWItuv/32Mhff6ZdE14XKCuTULbfc0tzcnNDe2LNnz0+30+HD
h5f44dtuu63qe/HjH/+402OOHTu29oeovb290w+b3WKLLWo/ODVSWUvMd3/x
r60PHbPG1w4e8vnVepT84rnSPrfEymtvdeTOJ9191BVzM79T8UdlBUjCuIez
3+HrO92zsv68Pu+AoM6Sq6z77rtvmWu48MILE1pD0hossRZdcsklZa5/jz32
SGgNKiuQX2PHju3Vq1fdN8Ylllhi/Pjxn9zKhAkTSv/8O++8U/VduOiiizo9
5ujRo2t/fD744INOD77nnnvWfnBqpLKWOYddMnX30x/e4sBLvvTNk1beYI9h
K280eMlV+rcs2tx3QFPPXk3F/693vz4DFh44ZKmhw9cdvubX1/jawRvvOXqH
4/908G8+ynzx+RqVFSAJT/87+x2+vtM9K+udzyR8olCV5CrriSeeWOYaTj31
1ITWkKjGS6xFZ555Zpl3YeTIkQmtQWUFcq340jBo0KB6bYlNTU377LPPZz40
+6677irxR5ZYYola1n/nnXd2etjjjjuutgdmnn/84x+dHvyUU06p/eDUSGU1
0UZlBUjCrLnzvps+802+jtM9K+vbExM+UahKcpX1/PPPL3MNBxxwQEJrSE5D
Jtaiww47rMx7ce655ya0BpUVyLvXXnvta1/7Wu374UYbbdTplnjOOeeU+FPb
brttLYt/+eWXOz3sjjvuWMthO9xwww2dHrz8f0lBclRWE21UVoCEXPVQ9pt8
HacbVtbR5X7WI2lLrrJeccUVZa6h+PtgQmtISKMm1h6VfC31xRdfnNAaVFag
AbS3t1977bVrrrlmFdtg8VVmn332KbEZ7r777iX++KmnnlrLyufMmdPpR6eu
ttpqtRy2w9lnn93pmu+///7aD06NVFYTbVRWgIQ02It+N6ysj7ya8ClCtZKr
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
T2U10UZlBaAcKitxqKxEo7ICQPpUVhNtVFYAyqGyEofKSjQqKwCkT2U10UZl
BaAcKitxqKxEo7ICQPpUVhNtVFYAyqGyEofKSjQqKwCkT2U10UZlBaAcKitx
qKxEo7ICQPpUVhNtVFYAyqGyEofKSjQqKwCkb9bceVHLmDhTPCcBYIFUVuKY
Nm3aY8zngGN+uO8RP1jgFH8siT/ezRXPyawvCwAAACAHVFYI7rTzLjvx7N8u
cIo/lsQfBwAAAGCBVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5l
heBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBU
VgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAA
AIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDg
VFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYI
TmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUF
AAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAA
CE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5l
heBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBU
VgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAA
AIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDg
VFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYI
TmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUF
AAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAA
CE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5l
heBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBU
VgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAA
AIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDg
VFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYI
TmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUF
AAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAA
CE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5l
heBUVgAAAIDgVFYITmUFAAAACE5lheBUVgAAAIDgVFYITmUFAAAACE5lheBU
VgAAAIDgVFYITmUFAAAACE5lheBUVgCgW5k1t/DmR8YEmuI5SUVcxSbauIpJ
h8oKwams5Mi0adMeg0iK52TWlwVQseKvw+X8hmJMalM8J6mIq9hEG1cx6VBZ
ITiVlRx57LHHekAkxXMy68sCqJg+Y6KNPlMpV7GJNq5i0qGyQnAqKzmishKN
ygp5pM+YaKPPVMpVbKKNq5h0qKwQnMpKjqisRKOyQh7pMyba6DOVchWbaOMq
Jh0qKwSnspIjKivRqKyQR/qMiTb6TKVcxSbauIpJh8oKwams5IjKSjQqK+SR
PmOijT5TKVexiTauYtKhskJwKis5orISjcoKeaTPmGijz1TKVWyijauYdKis
EJzKSo6orESjskIe6TMm2ugzlXIVm2jjKiYdKisEp7KSIyor0aiskEf6jIk2
+kylXMUm2riKSYfKCsGprOSIyko0KivkkT5joo0+UylXsYk2rmLSobJCcCor
OaKyEo3KCnmkz5hoo89UylVsoo2rmHSorBCcykqOqKxEo7JCHukzJtroM5Vy
FZto4yomHSorBKeykiMqK9GorJBH+oyJNvpMpVzFJtq4ikmHygrBqazkiMpK
NCor5JE+Y6KNPlMpV7GJNq5i0qGyQnAqKzmishKNygp5pM+YaKPPVMpVbKKN
q5h0qKwQnMpKjqisRKOyQh7pMyba6DOVchWbaOMqJh0qKwSnspIjKivRqKyQ
R/qMiTb6TKVcxSbauIpJh8oKwams5IjKSjQqK+SRPmOijT5TKVexiTauYtKh
skJwKis5orISjcoKeaTPmGijz1TKVWyijauYdKisEJzKSo6orESjskIe6TMm
2ugzlXIVm2jjKiYdKisEp7KSIyor0aiskEf6jIk2+kylXMUm2riKSYfKCsGp
rOSIyko0KivkkT5joo0+UylXsYk2rmLSobJCcCorOaKyEo3KCnmkz5hoo89U
ylVsoo2rmHSorBCcykqOqKxEo7JCHukzJtroM5VyFZto4yomHSorBKeykiMq
K9GorJBH+oyJNvpMpVzFJtq4ikmHygrBqazkiMpKNCor5JE+Y6KNPlMpV7GJ
Nq5i0qGyQnAqKzmishKNygp5pM+YaKPPVMpVbKKNq5h0qKwQnMpKjqisRKOy
Qh7pMyba6DOVchWbaOMqJh0qKwSnspIjKivRqKyQR/qMiTb6TKVcxSbauIpJ
h8oKwams5IjKSjQqK+SRPmOijT5TKVexiTauYtKhskJwKis5orISjcoKeaTP
mGijz1TKVWyijauYdKisEJzKSo6orESjskIe6TMm2ugzlXIVm2jjKiYdKisE
p7KSIyor0aiskEf6jIk2+kylXMUm2riKSYfKCsGprOSIyko0KivkkT5joo0+
UylXsYk2rmLSobJCcCorOaKyEo3KCnmkz5hoo89UylVsoo2rmHSorBCcykqO
qKxEo7JCHukzJtroM5VyFZto4yomHSorBKeykiMqK9GorJBH+oyJNvpMpVzF
Jtq4ikmHygrBqazkiMpKNCor5JE+Y6KNPlMpV7GJNq5i0qGyQnAqKzmishKN
ygp5pM+YaKPPVMpVbKKNq5h0qKwQnMpKjqisRKOyQh7pMyba6DOVchWbaOMq
Jh0qKwSnspIjKivRqKyQR/qMiTb6TKVcxSbauIpJh8oKwams5IjKSjQqK+SR
PmOijT5TKVexiTauYtKhskJwKis5orISjcoKeaTPmGijz1TKVWyijauYdKis
EJzKSo6orESjskIe6TMm2ugzlXIVm2jjKiYdKisEp7KSIyor0aiskEf6jIk2
+kylXMUm2riKSYfKCsGprOSIyko0KivkkT5joo0+UylXsYk2rmLSobJCcCor
OaKyEo3KCnmkz5hoo89UylVsoo2rmHSorBCcykqOqKxEo7JCHukzJtroM5Vy
FZto4yomHSorBKeykiMqK9GorJBH+oyJNvpMpVzFJtq4ikmHygrBqazkiMpK
NCor5JE+Y6KNPlMpV7GJNq5i0qGyQnAqKzmishKNygp5pM+YaKPPVMpVbKKN
q5h0qKwQnMpKjqisRKOyQh7pMyba6DOVchWbaOMqJh0qKwSnspIjKivRqKyQ
R/qMiTb6TKVcxSbauIpJh8oKwams5IjKSjQqK+SRPmOijT5TKVexiTauYtKh
skJwKis5orISjcoKeaTPmGijz1TKVWyijauYdKisEJzKSo6orESjskIe6TMm
2ugzlXIVm2jjKiYdKisEp7KSIyor0aiskEf6jIk2+kylXMUm2riKSYfKCsGp
rOSIyko0KivkkT5joo0+UylXsYk2rmLSobJCcCorOaKyskBNTU1p3pzKCnmk
z5hoo89UylVsoo2rmHSorBCcykqOqKyUtsQSSzz++OMbb7xxareoskIe6TMm
2ugzlXIVm2jjKiYdKisEp7KSIyorJSyxxBIvvvhi8TyZOnVqaqFVZYU80mdM
tNFnKuUqNtHGVUw6VFYITmUlR1TWqvXv33+ZZZZZccUVv/CFL6y55prrrLPO
Gmusscoqq6ywwgqf//zne/funfUCa/VJYu2QWmhVWSGP9BkTbfSZSrmKTbRx
FZMOlRWCU1nJEZV1gVZYYYVdd9115MiRo0aNGjt27Pjx459//vmPP/54gY/t
Bx988PTTT99xxx2XXXbZT3/60yOPPHLbbbddYoklsr5DZflMYu2QTmhVWSGP
9BkTbfSZSrmKTbRxFZMOlRWCU1nJEZV1fiussMLuu+8+atSo8ePHT5o0qe6P
+dtvv33LLbecdtpp2223Xczo2mli7ZBCaFVZIY/0GRNt9JlKuYpNtHEVkw6V
FYJTWckRlbXDkv+HvTuPj6LK9z5OJyEhCfsqW0BFBRVUVnFYHBRH0REYARkU
R7yyCIIgDCAi24CsIqvKDlEWkUUBkUVBQQURRBBFNtm3ECAhCVm762lv7sPN
pTuVqu6qPud0f96v7/P8cV9J9amT+pGpr53qihW7du26du1aO2pVfWfPno2P
j2/Xrl2xYsVEb8OfdCrWXHYXrbSsgIroZ4hsoZ8xiykmsoUpRmDQsgKSo2WF
QkK8Za1Tp87QoUMlqfUyMzM3btzYq1evuLg4URtSYMWay9aiVZIfBwBT6GeI
bKGfMYspJrKFKUZg0LICkqNlhUJCs2WtU6fO1KlTT5w4IXr787V379633nqr
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
ERFLlizJ+ypLly7V+fqaNWuKOn3IiX4mN20Hf5nf1EQXL99rQYbwFYZO6GfM
YoppWWULUwwfCHkLq2d4UytgIVpWKEShlvXRRx/1+nfNPjh06NBrr71WsmRJ
0eeUr+rVq48dOzYhIcGS8/WNkIq1EC1rQebMmRMVFWXHzrt/3Hk/Tm7QoEE6
X9ypUyeBmwAJ0c/kpmHroflNTe1HXhG+vJAK/YxZTDEtq2xhimFW0nVtfECe
wmokb63Qzlhz8wqEOlpWKESVlrVHjx45OTn+n++hQ4fat28fmMeu+q9IkSKv
v/56YqKA/4kpqmItRMuav6ysLPcg2Lr50dHRNz7T6m9/+5vOV06aNEnsbkA2
9DO5ufWBp/KbmjYDNwhfXkiFfsYsppiWVbYwxTAlMUX7z6fir9u8Gbxc+0Pk
u2aAIEHLCoUo0bL279/f/zM9e/Zst27dIiIiRJ+NaSVKlBg9enRaWpr/m2CQ
wIq1EC1rPjIzM59++ukA7H/z5s1dLpf7FStUqKDzZVu2bBG9JZAL/UxuSlWq
md/UvDDpsPDlhVToZ8xiimlZZQtTDOMuJGnDVoq/aD3z76Xa7+dE7w6gOFpW
KET+lvXNN9/08xyvXr06aNCg6Oho0afil1tuuWXmzJlZWVmW/Nx1iK1YC9Gy
epORkfHEE0+Y2sbw8PBatWq1bt36hRdeePXVV7t27frMM8/cf//9Rv5Dw6JF
i86fP6//Ne6xEr0rkAv9TG6iYkvlNzWvzE0RvryQCv2MWUwxLatsYYphUGKK
pBVrbgYs1Y5dFL1HgMpoWaEQyVvW4cOH+3mCS5YsKVOmjOjzsEytWrV27txp
xU/eO+EVayFaVm86duxocPfKlSv3yiuvfPnll+np6V4PlZaW9tlnn7Vt21bn
uRm1a9dev369zqvcdtttAd4ByI9+JjfhEZH5DU6v+deFLy+kQj9jFlNMyypb
mGIYkXRdugcFeGbQx9rpy6J3ClAWLSsUInPLOnjwYH9O7cKFC23bthV9EtYL
Dw8fOHBgRob1H1opQ8VaiJbVw7Bhw4zsW7Vq1d577738ylVP+/bta9SoUX5H
a9Gihc5rtWvXztZThoroZ3LjCAvPb3BemnpK+PJCKvQzZjHFtKyyhSlGgTKz
tfHrxF+rRvLmJ9rVwD0BDggqtKxQiLQta9++ff05ryB7C6sny9/UKknFWoiW
9f9avHhxgTsWERExcOBAH57cm52d3b17dx9+Rm+//bYdJwul0c/kpnCRovkN
TptBm4QvL6RCP2MWU0zLKluYYhTosz3iL1Tj+WCL9t+ffgDAHFpWKETOlvX5
55/3+YwSExOD8i2snnLf1GrJk1rlqVgL0bLm8dNPP0VFRelv1y233PLdd9/5
8ypdu3Y1+zPasGGDVeeIoEE/k5vi5arnNzh1Ww0QvryQCv2MWUwxLatsYYqh
7/glre9i8Reqqew8KnrXAAXRskIhErasDRs2NP5XzzfZv3//rbfeKvoMAurh
hx++dOmSP9eAVBVrIVrW/889BXfffbf+XtWpU+fMmTN+vlBGRkatWrVM/YwS
EhIsOUcEE/qZ3FSp9XB+gxNdvBwfgBXI0M+YxRTTssoWphg6MrO1MWvEX6Vm
M+hjnhsAmEbLCoXI1rJWqlTp7Nmzvp3LqlWrihbN9081g1iDBg18fkzrpUuX
YmJiRJ/B/0HLmqt37976G3XPPfdY1Xbu3LkzLCzM4A+oSpUqlrwoggz9TG7u
f6yPzvg88Hg/4SsMndDPmMUU07LKFqYYOtR6VkDe8NwAwCxaVihEqpa1SJEi
P/zwg28nMnLkSJ3PTA9it9xyy++//+7PNTBr1izRJ/F/0LK6bdq0Sf96rlKl
yoULFyx8xQ4dOhj8AT399NMWvi6CBv1Mbp549WP9CWr63GThiwyR0M+YxRTT
ssoWphj5UfFZAXnDcwMAU2hZoRCpWtb4+HgfTiEtLa19+/ai1y6G/xVrrp49
e4o+lf9Fy5qZmXnbbbfpbFFUVJTP/z0iP5s3bzb4AxoxYoS1L43gQD+Tmx6z
k8MjIvWH6M4Hn31p6mnhSw360M+YxRTTssoWphheuVza+HXir09/MuhjLd2C
z9YAQgUtKxQiT8s6YMAAH9Z/7dq1pk2bil67GFZVrNp/f9b8X//6V9En9D9o
WSdMmKC/RVOmTLH8RV0ul8FnGq9Zs8byV0cQoJ+5kbse6lTgHIVHRN7drEv7
Yd8JX20Qh37GLKaYllW2MMXw6sgF8Ren/9lmzW0cEBJoWaEQSVrWZs2aOZ1O
s4u/evVqo0aNRK9dDAsr1lyJiYnuY4o+rT+FeMuakJBQvHhxnf1p3LixD8Ni
xMsvv2zkB+T/520hKNHP3Mg/R/9UyPATbIqViavzaM+n+n3a/YPLwlceZKGf
MYsppmWVLUwxvFqwTfzF6X/GruXprIBRtKxQiAwta0xMzLFjx8yuPDk5uX79
+qLXLoblFWuuTz/9VPSZ/SnEW9YePXrobE5ERMSvv/5q00t/8MEHBf50ypcv
b9OrQ3X0M3lzd7Mupv/tczhK3nLnXQ891+z5Ke2Hfddr/nXhZ6F66GfMYopp
WWULUwxPSde1fio/kTVvjlj5GQtAMKNlhUJkaFmnTZtmdtkpKSkPPfSQ6IWL
YVPFmqtTp4L/0NVuodyynjt3LjJS74mO3bp1s+/Vd+/eXeBP5/HHH7dvAVAa
/Uze9JidVLycoUdw5CcsPKJs3H33PPzyI/8157mxv/SJdwo/KeVCP2MWU6zT
soolfGdEhSmGpw37xV+ZVmXBNtG7CSiClhUKEd6yNm/e3Oyas7KyWrRoIXbZ
othasbpdvnxZ+HMDQrllHTJkiM7OREdHnz171r5XT05OLvCn416hfQuA0uhn
bkrn8b8VKVrGqn8YixQtfUfD9o92nd991hXhp6ZK6GfMYoppWWULU4yb5Di1
YSvFX5lWpd/iP9+aC6BAtKxQiNiW1bdnBXTr1k3gmgWyu2LNJfy5ASHbsqam
ppYuXVpnZ3r37m3rAlwuV1hYmP5PZ8WKFbauAeqin/HMc2P3Fy1dxdJ/IAuF
hRe+9YGnnu6/jne3Fhj6GbOYYlpW2cIU4yb7Tom/LK3NF/tF7ymgAlpWKERs
y+rDswJmzJghcMECBaZizSX2uQEh27LqX9sOh+Pw4cN2r6FEiRL6P50//vjD
8hc9ffr06tWrR48ePdyb48ePW/6KsAP9jNe8PON8tTqPW/pv5P8oUaHGYz3i
e8fnCD9HaUM/YxZTTMsqW5hi3GTJDvGXpbV55wvRewqogJYVChHYsjZr1szs
ards2RIRESFqwQL5U7GuW7fu9OnTpr7l8uXLFSpUEHWyIduy6n+a25NPPhmA
NcTFxemsoVSpUpa8yvnz59euXTt8+HD3SRV4pW3dutWSF4Xd6Gd08liP+NhS
lXz5B7Eg5ard/+yIncJPUM7Qz5jFFNOyyhamGDcZ/7n4y9La9F/y52MQAOij
ZYVCRLWsDodj7969ppb6xx9/lClj2TPuFOJPxbpy5crChQvXq1fv+nVzD/0x
8nHzNgnNlvXo0aP62xKYP9WvWrWqzhpatGjh22ETEhLWr18/atSop59+unLl
yqauB1pWVdDP6KfX/OvNO08tVkbvP2T4xuEIa/SPETxAwDP0M2YxxbSssoUp
Rl5ZOX8+yFT4ZWl5zlwRvbOA9GhZoRBRLWvHjh1NrTM9Pb127dpCliqW/xVr
7nGee+45U9+bnZ19xx13CDnl0GxZx4wZo7MnxYoVc49AAJZRtmxZnWUMGDDA
7AE3bNig//7YAtGyqoJ+xkj6xDuf7r+uRsN2EVEx/syFp9vrtem1IEP4CUoV
+hmzmGJaVtnCFCOvE5fEX5N2ZMdR0TsLSI+WFQoR0rIWLlz46FFzv0769+8f
+HUKZ1XFmuuTTz4xdYSPP/5YyFmHZstap04dnT3p3LlzYJYRGxurs4wlS5aY
PeCCBQv8vB6CtWWtVKlSseBy673Nhd+nKJSe89KefG3VvS26lyh/u58zckO1
2n/rvShb+KnJE/c1KXosFMMU07LKFqYYeTV4sq/wa9KOPNZ1tuitBWTXb+RU
IzWp+8vs+HbAlJgYi99OY0TPnj1N1RHff/99gR99HnysrVjdypUrl5CQYOo4
9erVC/yJu69J0WMRCJUqVbqxz2fOnNHfk2XLlvl2JZiSmZmpvwwfLkha1vy4
rwE/d0Y2FW6rL/w+RdG8PPPCU/0+bfD0kGq1/xZdvJw/P4V7/9pN+OnIE/c1
adXlHSKYYp2WtXLN5na/erGy1fJ7deE7IypMMfJ69OW5wq9JO9JhxA7RWwvI
ru+IKUZqUveX2fHtgORiY2PPnz9vvItIT0+/6667RK860CyvWHO1b9/e1KE2
bdoU4BMPHcWKFbuxz0uWLNH5SofDcenSJd8uBlOOH9d7D0/RokVdLpfZY9Ky
5oeWleSXLlNOPvnaqvp/H1zxjsZh4d7/Mdfx5GsrhZ+CJKGfMYsppmWVLUwx
8uo0Zq/wa9KO9Jp/3REWLnp3AanRsgI63nzzTVNdRAg+K8CmijWX2ecGPPLI
IwE78ZCSt2V95ZVXdL6ybt26vl0MZn377bc6y2jSpIkPxzTYslarVu32273/
3TQtqyroZ+xIz3lprf/9Ra0mL0QWMXrBFC1dxX2/JnzlMoR+xiymmJZVtjDF
yKvrzAvCr0mbUqRoKH7EM2AcLSuQn1KlSiUlJRkvIkLwWQG2VqyFzD83QNTn
owW9vC3rvffeq/OVr7zyim/Xg1nx8fE6y+jTp48Px8yvZa1atWrbtm1Hjx69
YcOGxMQ/P9xi+PDhXr+SllUV9DO2ptf86y1emlW0TFUjP4umnSYJX7AMoZ8x
iymmZZUtTDHy6jE7Sfg1aVOKlq4iencBqdGyAvkx+xnldevWFb3kgLK7Ys3V
o0cPU0du0qSJ3Scegm60rGlpaQ6HQ+cr58yZ49slYZb++8YXLlzowzFvtKyV
K1du3br1qFGj1q9f77Xnp2VVHf1MANJrQUbj9qML/LvC4uWq94l3Cl+t8NDP
mMUU07LKFqYYebl/CQq/Jm1KyQo1RO8uIDVaVsArh8Nx7Ngx4y3EsmXLRC85
oAJTsbpFREQcOXLE+MH1nxoK39xoWfft26f/lbt37/btqjCrZcuWOsvYv3+/
D8f87bff1q1bd+HChQK/kpZVdfQzAUu7oduKFC2t/+Nwf43wdQoP/YxZTDEt
q2xhipGX8AvSvpSpovd3bQBoWQGvHn/8ceMVRHZ29h133CF6yYETsIo117PP
Pmv8+JmZmRUqVLDpxEPWjZbV/ePT/8qrV6/6dmGY4nQ6S5Ysmd8aihQp4h5J
WxdAy6o6+plA5pkhW/U/GKveUwOFL1J46GfMYoppWWULU4y8Xl2YJfyatCkl
K94pencBqdGyAl6tWbPGeAXx/vvvi15v4AS4Yi303+8r3rNnj/FXGTJkiB0n
HsputKzjx4/X+bLixYv7dmGYpf8A3oYNG9q9AFpW1dHPBDiN/jFC58dR6c4m
wlcoPPQzZjHFtKyyhSlGXq/MuSb8mrQpxYw9dx0IWbSsgKdq1ao5nU6D/UNa
WlrFihVFLzlAAl+x5nrssceMv9DJkyfDwwt4EiBMudGydu/eXefL7rnnHt+u
DbPGjh2rswyzz/L1AS2r6uhnAhz3zWZ0sbL5/TgKR8UKX6Hw0M+YxRTTssoW
phh5dZ15Ufg1aVOii5cTvbuA1GhZAU9vv/228f5h3LhxotcbIKIq1lym+qvW
rVtbddYolKdlffbZZ3W+7MEHH/Tt8jCrfn29G5nZs2fbvQBaVtXRzwQ+97bQ
+280Xd9LEL5CsaGfMYsppmWVLUwx8uo84aDwa9KO9I7PCS8cJXp3AanRsgI3
iYyM9Pqp4l5lZ2dXrlxZ9JIDQWzF6vb0008bf8VNmzZZctbIdaNlfeqpp3S+
rEWLFr5dIaYcOnRIf7UB+AQuWlbV0c8EPq36rND5iTw3dr/wFYoN/YxZTDEt
q2xhipHX472WCL8m7Yj797XorQVkR8sK3KRVq1bGy4cCPwwoOAivWN3Cw8NP
njxp8EWdTmf58uX9f1HkutGyPvzwwzpf9sQTT/h2kZgydOhQnTW4L7bMzEy7
10DLqjr6mcDnhYl6/32kw4gdwlcoNvQzZjHFtKyyhSlGXnVb9Rd+TdqRlt3m
i95aQHa0rMBNPvjgA+PlwyOPPCJ6vbaToWLNNWTIEOMv3aVLF6teFzda1gYN
Guh8WdOmTX27ToxLT08vV07vYVD333+/3WvQQq9lrVSpUrHgcuu9zYXfp4Ra
us+6ojO57d7aLnyFYuO+JkWPhWKYYlpW2cIUI6876rUSfk3akYZP9Re9tYDs
+o2caqQmdX+ZHd8OmBITE6Nzj2YJh8Nx9uxZg83D77//7v56u5ckljwVq1uF
ChWMv01x9erVFr50ftzXpOixCIRKlSrl7mq9evV0dqNOnTq+XSrGffDBB/o/
kZdeesnuNWih17IGn5OJ4u9TQi29F2XrTO4/R/8kfIVi474mYQpTTMsqW5hi
5HU9U/w1aUf+MPpcPSB0DZs830hN6v4yO74dMGXXrl36BYv/6tevb3w9r732
mt3rEUuqijXX0qVLDS4gNTW1SJEili/gJu5r0rf9UdRf/vIXnd2oXr26ra+e
kZFx66236v9EZsyYYesactGyqo5+JvDpMeuqzuS+MOmw8BWKDf2MWUwxLats
YYpxk9Gfib8srU3fxVpmtuhtBaRHywqFBKBlHTVqlMHFpKenlyxZ0u71CCRh
xerWvHlz48to1aqVHWvIK9Ra1kcffVRnN2JiYpxOp32vPmHChAJ/It9//719
C7iBllV19DOBT6cxe/OdW4ej1/x04SsUG/oZs5hiWlbZwhTjJgu3i78src24
taL3FFABLSsUEoCW9eeffza4mLVr19q9GIHkrFjdwsLCLl68aHAlBf51uf9C
rWXt1KmT/oYcPHjQppd2/9xLlCih/+rh4eFpaWk2LSAvWlbV0c8EPi1empXf
5BYtXUX48oSHfsYsppiWVbYwxbjJ90fEX5bWZsWPovcUUAEtKxRid8saFxdn
fDFdu3a1dTECSVux5po3b57BxZw9e9buB+eGWsvav39//Q1ZsmSJTS/dpk2b
An8cd999t02vfhNaVtXRzwQ+1e57Ir/Jvb1eG+HLEx76GbOYYlpW2cIU4yYZ
WdrAZeKvTAtzPkn0ngIqoGWFQuxuWbt37258MRUrVrR1MaJIXrG6tWnTxviS
7r//flsXE2ot6/Tp0/U3pG/fvna8bnx8vJEfx/PPP2/Hq3uiZVUd/Uxues2/
HpgXemHC7w5HWH6T2+z5d4VvhfDQz5jFFNOyyhamGJ5W7BJ/ZVqV6ZtF7yag
CFpWKMTultX4myQD8OwCIeSvWN1iY2PT09MNrsrutxyHWsu6detW/Q2pVKlS
Tk6OtS/6yy+/FC1a1MiPY/Lkyda+dH5oWVVHP5ObWx/4e72nBvWYddXWV+nz
oSvu3pb5zq3D0eXd48K3QnjoZ8xiimlZZQtTDE/nk8RfmVZl7wnRuwkogpYV
CrG72zT+UNahQ4fauhIhlKhYc61bt87gwux+NGuotayXL18u8CEMX3zxhYWv
mJiYeOuttxr8cXz99dcWvrQOWlbV0c/kpuo9j7iv2yJFSzdu9x/7utaGbYfp
jG0A6iAlQj9jFlNMyypbmGJ4NX2z+IvT/7y1Qsux8RNugaBCywqF2NqyFilS
JDs72+BK7rvvPvtWIoRCFWshM8922L17t60rCbWW1e3ee+/V35Mnn3zSqtdK
Tk5u1KiRwZ+Fw+Fwf71VL62PllV19DO5yW1Zc0UWKVbvyX9b+7bSPh+6GrR+
U39yW/97vfB9kCH0M2YxxbSssoUphld7T4i/OP3P+n2i9xFQBy0rFGJry9qo
USODy0hOTrb7M5UCTK2KtZCZDznKzMyMjIy0byUh2LL27du3wG1ZtWqV/y90
7dq1hx56yPjPokaNGv6/qEG0rKqjn8lN3pY1l8MRVv2+Vk++trLX/HQ/D/7P
/+ypeEcBI1zprqbCN0GS0M+YxRTTssoWphhe5Ti1t1aKvz79Sb/F2tU00fsI
qIOWFQqxtWXt2bOnwWUU+GhKtShXsbqFhYWlpqYaXGTdunXtW0kItqzbt28v
cFsqVap09epVf17l2LFjBb5p9iYdOnSw6hwLRMuqOvqZ3Hi2rDdEFil210PP
Pd5zSdeZF00ds3d8TptBG+96qJPOx13lioiMfmHiIeGbIEnoZ8xiimlZZQtT
jPzsOS7++vQn6/aK3kFAKbSsUIitLavxj76aNGmSfcsIMBUr1lzffvutwXXa
+gFYIdiyulyuatXyvbe6oVmzZtevX/ftJVavXl26dGmzP4tx48ZZe6Y6aFlV
Rz+TG52W9X85HGWq1q7V9MXmnae2GbSx8/jfXpmbcuMIveNzesxO6jLlZJtB
m5r8c2LNvzwfXby8wZl9rEe88B2QJ/QzZjHFtKyyhSlGflwubd434i9R3zJu
rZZt8QfbAkGOlhUKsbVlNf7RVx07drRvGYGkbsXqNmXKFINLtfUDsEKwZXWb
MGGCkc1p2LDhqVOnTB355MmTzzzzjNejRURE6D+pY9OmTTadrydaVtXRz+TG
UMvqlcMRERXjjo/fXqjQQx3GCj99qUI/YxZTTMsqW5hi6Lh2XRvyifir1Gz6
LdZOcWEDJtGyQiG2tqwZGRkGl3HHHXfYt4yAUbpidevcubPB1W7bts2+ZYRm
y3rt2rVSpUoZ2Z/ixYtPnDjRyOMd9u7d26VLF53rKr9i84bExMD9r0BaVtXR
z+TG95bVD46w8BZdPhB+7rKFfsYsppiWVbYwxdCn4nMDeFYA4ANaVijEvpa1
TJkyBtcQHB99pXrFWsjMB2AdOXLEvmWEZsvqNnXqVOO7VKxYsRdeeGHRokU/
//zzlStXsrOzMzIyLl68uH///o8++qhfv341atTQP4L7a9avX6/zBXFxcYE8
fVpW1dHP5KbqvY8aH2RLFC93a7u3tgs/cQlDP2MWU0zLKluYYuhT7rkBPCsA
8A0tKxRiX8tau3Ztg2vYsWOHTWsImCCoWAv99wdg5eQY+sWflpZm3zJCtmV1
b76tHyuWV+fOnZ1O5+jRo3W+pk2bNoE8fVpW1dHP5Kbb+4ktuy24rV7riMho
e8b3fxWOim3Q+s28z3QleUM/YxZTTMsqW5hiFOjade1NRZ4b8PoSLmnAR7Ss
UIh9Letjjz1mcA0rV660aQ2BERwVa66zZ88aXHnx4sVtWkPItqxuhw8fLlas
mE0be0PPnj1dLpf75f7xj3/ofNmoUaMCee60rKqjn7kpPeelPfnaqlpN/1W0
dBXLpzi2ZMVGbYe/PPOC8NOUOdzMmsUU07LKFqYYRrivk4HLxF+u+um7WNt7
QvROAcqiZYVC7GtZX3zxRYNrmDFjhk1rCIBgqljddu/ebXDxNWvWtGkNodyy
uq1ZsyYiIsKmvQ0LC8vbnVarlu8Nndu6desCeeK0rKqjn9FJl3ePP9Yj/t6/
ditd+e5Cfjwhp+Qtd97X8tW2g7/svShb+EnJH/oZs5hiWlbZwhTDoCMXtAFL
xV+xOtlxRPQeASqjZYVC7GtZ33jjDYNrGDJkiE1rsFuQVaxua9asMbj+v/71
rzatIcRbVrePPvooPDzc8o11X65fffXVjVe5fPmy/tefO3cukGdNy6o6+hmD
eWVuSocROx55eW79vw++88GOle5sUqriXdHFykZExTjCwh3u/1e4SGRMiaKl
q5Sr9kC12n+796/dmnaa9PSAz7u9nyh88WqFfsYsppjIFqYYxv16Ruu/RPxF
6zVfHxS9O4DiaFmhEPta1unTpxtcQ5cuXWxag62Cr2J1mzVrlsFTeO6552xa
Ay2r2xdffGHhMxkcDkfnzp0vXryY9yU2b96s8y3uyzvAp0zLqjr6GSJb6GfM
YoqJbGGKYcrh89I9OqDvYt7FCliAlhUKsa9lXbFihcE1PP744zatwT5BWbG6
jRgxwuBZ/Pvf/7ZpDbSsuY4dO2bJG4abNGnidUvHjx+v812tWrUK8PnSsqqO
fobIFvoZs5hiIluYYph14pL2xnLxl25uXl/Cs1gBa9CyQiH2taybNm0yuIb7
7rvPpjXYJFgrVrfu3bsbPJFRo0bZtAZa1htcLtfy5ctr167twzZGRUV17txZ
ZzM7dOig8+1Dhw4N5JlqtKzqo58hsoV+xiymmMgWphg+SEzRZn4p/uodu5YL
GLAMLSsUYl/LumXLFoNrqFGjhk1rsEMQV6xuzz//vMFzefvtt21aAy3rTVwu
17Zt27p37169evUCd69q1aovvvji8uXLk5KS9A+rP3erVq0KzNndQMuqOvoZ
Ilu4vTWLKSayhSmGb1wu7dtDwp4e0G+xtm6vlp0jeheAIELLCoXY17Ju377d
4BqMdEeSCO6K1a1jx44GT2fixIk2rYGWVceZM2c2btz43nvvjRw5ctCgQQMG
DBgxYsTkyZMXLlz4/fffF9is3pCcnOzQ/aDzEycC/QdOtKyqo58hsoV+xiym
mMgWphj+SEzRZmwO9EXLW1gBO9CyQiH2tayrV68+c+bMhQsXLl++nJycnJaW
lpmZ6XUNlStXtmkN1gr6itXtmWee8Vy80+nMyMhITU1NSkpKTEw8f/786dOn
hw0bZtMaaFkD4Ouvv9b5EZQpUybwS6JlVR39DJEt3OeaxRQT2cIUw0+BfFMr
b2EF7EPLCoXY17LmJywsLDIyMiYmpkSJEmXKlKlQoYL7/xLgNfimfPnyBw4c
8GGTValY3YoUKeI+zdKlSxcvXjw6Otq9bP13PNqBljUAJk+erPMjePTRRwO/
JFpW1dHPENlCP2MWU0xkC1MMS6RmaFt/00Z/ZteFOnSF9vnP2pVU0ecJBC9a
Vigk8C2r0nwoWhWqWCVByxoAzz33nM6PYODAgYFfEi2r6uhniGyhnzGLKSay
hSmGhZwu7fdz2tyvtb6LLbtEp23S9hzn/auA7WhZoRBaVrNMFa1UrD6gZQ2A
WrVq6fwIli1bFvgl0bKqjn6GyBb6GbOYYiJbmGLY4Urqn289nfi59voSXy7L
vh9pb6/RPtmlnbsq+kyAkEHLCoXQsvrAYNFKxeobWla7paWl6T+m4/Dhw4Ff
FS2r6uhniGyhnzGLKSayhSmGrbJz/rzGvj2sLdupV7rm1qoffqttPagdvail
Z4leNxB6aFmhEFpW3xRYtFKx+oyW1W7fffedzv4XL17c5XIFflW0rKqjnyGy
hX7GLKaYyBamGIGUnaMlXdcSU7TzSdrpy3++VfXSNS0pTcvIFr0yIOTRskIh
tKw+0ylaqVj9Qctqt+nTp+vsf7NmzYSsipZVdfQzRLbQz5jFFBPZwhQDADRa
ViiFltUfXotWKlY/0bLa7cUXX9TZ/759+wpZFS2r6uhniGyhnzGLKSayhSkG
AGi0rFAKLaufbipaqVj9R8tqtzp16ujsf3x8vJBV0bKqjn6GyBb6GbOYYiJb
mGIAgEbLCqXQsvrvRtFKxWoJWlZbZWRkRERE6Oy/kU92swMtq+roZ4hsoZ8x
iykmsoUpBgBotKxQCi2rJcqXLz9x4kQqVkvQstpKf+RjYmJycnKsfcWvv/46
3ACHw+F1SWFhYQV+7+23327tmuED+hkiW+hnzGKKiWxhigEAGi0rlELLCtnQ
strqgw8+0Nn8Bx980PJX3Lp1q93XTLVq1SxfNsyinyGyhX7GLKaYyBamGACg
0bJCKbSskA0tq626du2qs/k9e/a0/BVpWUME/QyRLfQzZjHFRLYwxQAAjZYV
SqFlhWxoWW1Vr149nc2fO3eu5a9Iyxoi6GeIbKGfMYspJrKFKQYAaLSsUAot
K2RDy2qfrKysqKgonc3/6aefLH9RWtYQQT9DZAv9jFlMMZEtTDEAQKNlhVJo
WSEbWlb77N27V2fnIyMjs7KyLH9RWtYQQT9DZAv9jFlMMZEtTDEAQKNlhVJo
WSEbWlb7zJs3T2fn69atK3qBUBj9DJEt9DNmMcVEtjDFAACNlhVKoWWFbGhZ
7dOzZ0+dnX/55ZdFLxAKo58hsoV+xiymmMgWphgAoNGyQim0rJANLat9Hnzw
QZ2df++990QvEAqjnyGyhX7GLKaYyBamGACg0bJCKbSskA0tq01ycnJiYmJ0
dn7nzp2i1wiF0c8Q2UI/YxZTTGQLUwwA0GhZoRRaVsiGltUmBw4c0Nn28PDw
69evi14jFEY/Q2QL/YxZTDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT
2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF
9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNl
hVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZ
TDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFl
BVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMA
NFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQ
z5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkh
G1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1M
MQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9D
ZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiF
lhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT
2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF
9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNl
hVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZ
TDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFl
BVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMA
NFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQ
z5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkh
G1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1M
MQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9D
ZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiF
lhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT
2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF
9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNl
hVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZ
TDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFl
BVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMA
NFpWKIWWFbKhZQVURD9DZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQ
z5jFFBPZwhQDADRaViiFlhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkh
G1pWQEX0M0S20M+YxRQT2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1M
MQBAo2WFUmhZIRtaVkBF9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVURD9D
ZAv9jFlMMZEtTDEAQKNlhVJoWSEbWlZARfQzRLbQz5jFFBPZwhQDADRaViiF
lhWyoWUFVEQ/Q2QL/YxZTDGRLUwxAECjZYVSaFkhG1pWQEX0M0S20M+YxRQT
2cIUAwA0WlYohZYVsqFlBVREP0NkC/2MWUwxkS1MMQBAo2WFUmhZIRtaVkBF
9DNEttDPmMUUE9nCFAMANFpWKIWWFbKhZQVUlJH95+0wIfLEfU3CFKaYyBam
GACg0bJCKampqbvg4b/6vvVCrzcKjPvL7Pj2EOe+JkWPBQAAAAAAEI+WFVAd
UwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAA
AACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8D
qI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAA
AAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSi
nwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYY
AAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAA
YtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAd
UwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAA
AACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8D
qI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAA
AAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSi
nwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYY
AAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAA
YtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAd
UwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAA
AACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8D
qI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAA
AAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSi
nwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYY
AAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAA
YtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAd
UwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAA
AACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8D
qI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAA
AAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSi
nwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYY
AAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAA
YtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8DqI4pBgAAAAAAEIt+BlAd
UwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAAAAAAgFj0M4DqmGIAAAAA
AACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSinwFUxxQDAAAAAACIRT8D
qI4pBgAAAAAAEIt+BlAdUwwAAAAAACAW/QygOqYYAAAAAABALPoZQHVMMQAA
AAAAgFj0M4DqmGIAAAAAAACx6GcA1THFAAAAAAAAYtHPAKpjigEAAAAAAMSi
nwFUxxQDAAAAAACIRT8DqI4pBhCyfvvtt6VLlw4dOvQf//jHfffdV61atRIl
SoSHh0dHR5ctW/aee+5p1arVwIEDV65ceeXKFdGLBQAAABDM6Gds4nK5du/e
PXr06LZt29asWbNMmTKRkZFRUVHum77atWt36NDhnXfecd8bil4mggFTDCCk
nDhxYtasWR07dqxQoUIhw8LCwlq2bLls2bKcnBzRZwAAAAAgCNHPWC4jI2P6
9Ol33nmnkZu+evXqxcfHO51O0auGwphiO7gH+ccff3z//fdffvnl+++/v3Dh
wp7zO3z4cNHLBELI8ePHJ06c2KBBA+PNqle333776tWrRZ8NAAAAgGBDP2Ot
TZs21ahRw+wdX7169fbs2SN67VAVU2yJzMxM9xjOmjWra9eudevW9Vqr3oSW
FQiYJUuW+FSp5qt9+/bJycmiTwsAAABA8KCfsYrL5Ro1apTD4fDtdi8qKmre
vHmiTwJKYor9kZSU1L179/r160dGRpodW1pWIGDmzJnj269XHbVq1Tpz5ozo
MwMAAAAQJOhnrNK7d2//7/jeffdd0ecB9TDF/jh+/LjPA0vLCgRMgS1rXFzc
3//+9z59+owaNWrSpEnDhg3r1atX06ZNo6KidL7r9ttvv3TpkuiTAwAAABAM
6Gcs4b6ny+8OLjw8vFmzZq+//vq4cePGjBnz6quv1q9fX+eO78MPPxR9NlAM
U+wPWlZACV5b1tjY2I4dO7p/b164cCG/b7x+/fq8efNq1qyZ3yA3b97c5XIF
8lwAAAAABCX6Gf9t3rw5LCzM88YtPDy8T58+586d8/yWI0eOdOrUyevtXkxM
zIEDBwJ/FlAXU+wPWlZACTe1rA8++GB8fHxqaqrBb8/Ozh44cGB+T/WZPn26
rYsHAAAAEAroZ/yUlpZWtWpVz1u24sWLf/XVV/rfu3jxYq+fsNOwYUPeVwPj
mGJ/FNiyVq9e/ZlnnmnatCktKyBQbsvqcDjatGmza9cu3w6yYMECr2NetmzZ
lJQUaxcMAAAAINTQz/hpyJAhnvdrkZGR3333nZFvX758udc7vrlz59q9cgQN
ptgfni1r1apV27ZtO2bMmA0bNiQmJuZ+2fDhw2lZAYHcvxafeOKJffv2+Xkc
r7PsNnv2bEvWCQAAACBk0c/44/Lly7GxsZ43a6Y+xKpPnz6eR6hWrVp2drZ9
K0cwYYr9ceLEicqVK7du3XrUqFHr169PSEjw+mW0rIBY6enplhwnMzOzRo0a
nuPcokULS44PAAAAIGTRz/hj5MiRnndqderUycnJMX6Q5OTkChUqeB6Hj8GC
QUxxANCyAkFj1qxZnuNcpEiRjIwM0UsDAAAAoDD6GZ+5XK64uDjPO7Xly5eb
PdS4ceM8j9OsWTM7lo3gwxQHAC0rEDTOnTvn9WOwfvnlF9FLAwAAAKAw+hmf
bd261fMerXLlyqbeyJrrypUrkZGRNx3KfQ944sQJO1aOIMMUBwAtKxBM3L+s
PSd63bp1otcFAAAAQGH0Mz7z+jzV119/3bejtWnTxvNoU6ZMsXbNCEpMcQDQ
sgLBpG7dup4TvWTJEtHrAgAAAKAw+hmf1apVy/MebcuWLb4dbe7cuZ5Ha9Wq
lbVrRlBiigOAlhUIJo0aNaJlBQAAAGAt+hnfnD9/3vMGLTo62ufPzjhx4oTn
AWNjY314/gBCDVMcALSsQDCpXr2650TzxAAAAAAA/qCf8c3atWs9b9AaN27s
zzErVKjgecwDBw5YtWYEK6Y4AGhZgaBx5coVz3F2+/XXX0UvDQAAAIDC6Gd8
M2LECM8btJ49e/pzzCeeeMLzmPHx8VatGcGKKQ4AWlYgaHz00Uee4xwdHZ2Z
mSl6aQAAAAAURj/jmw4dOnjeo02bNs2fY/bt29fzmG+88YZVa0awYooDgJYV
CBotWrTwHOeWLVuKXhcAAAAAtdHP+KZBgwae92jr16/355gzZszwPOazzz5r
1ZoRrJjiAKBlBYLDrl27PGfZbc6cOaKXBgAAAEBt9DO+KVu2rOc92r59+/w5
5urVqz2P2bBhQ6vWjGDFFAcALSsQBFwu11/+8hfPWS5ZsuS1a9dErw4AAACA
2uhnfJCTk+NwODxv0y5evOjPYXfu3Ol5zLi4OKuWjWDFFAcALSsQBLz+zQiz
DAAAAMAS9DM+SEhI8Hqblp2d7c9hDx065HnMokWLWrVsBCumOABoWQHVHTx4
MDY21nOQq1SpkpqaKnp1AAAAAJRHP+OD33//3fM2LTo62s/Dnj9/3mt5y6ce
Qx9THAC0rIDSUlNT7777bq+/ZFetWiV6dQAAAACCAf2MD/bs2eN5m1a2bFk/
D5uSkuL1BvDKlSuWLBvBiikOAFpWQF0ul6tdu3Zef8O+8MILolcHAAAAIEjQ
z/hgx44dnndqFStW9POwGRkZXu8B/XzcK4IeUxwAtKyAuoYMGeL11+tdd93F
h14BAAAAIe5aStq8j9fPXbbO/7wxfraRgsX9ZXZ8u9nMX74+Je266O3Xtm3b
5nmzVrVqVT8Pm5OT4/U28PTp05YsG1JJSLxqyVAoN8XxqzZmZmaJ3n7TaFkB
Rc2aNcvr79bY2NgDBw6IXh0AAAAA8TZ+s8tIMRJk+fK7PaI3/k9eW9a4uDg/
D+t0Or3eCZ46dcqSZUM2K9Z/I3ymAp9dPx8UvfG+oGUFVPTJJ5+EhYV5Dm9E
RMTatWtFrw4AAACAFHJynNMWrBRemAQyM+NX5zidojf+TwF+YsCFCxcsWTZk
k5GROf79JcInK5BZuOILl8sleuN9QcsKKGfDhg2RkZGek+twOOLj40WvDgAA
AIBELly68uakucJrk8Bk6DvzLl1OEr3l/8Prp1+VK1fOz8Py6Vch6Pjp84ON
/cF+EGTUtEXXUtNEb7mPaFkBtXzzzTfR0dFef6vOnDlT9OoAAAAASGf7j/uF
NyeByY6ffhW92f/r4MGDnndt7rs5Pw97/vx5r/eDGRkZliwbcvri6x+Ez1dg
cuDwcdGb7TtaVkAhO3fuLFasmNdfqRMmTBC9OgAAAAAycrpcc5auE16e2J35
y9dL9VfGFy9e9Hrvlp2d7c9hDx065HnM2NhYq5YNOWXn5EyZv0L4lNmdTz7/
WvRO+4WWFVDFTz/9VLJkSa+/pkeOHCl6dQAAAADkdTU5Zfi7C4RXKPZl5NSF
ySly/ZVxdna219u3ixcv+nPYnTt3eh7T/w/VgvzOJ1weMnGO8FmzL+PeX5Ke
kSl6m/1CywooYf/+/WXKlPH6O3rQoEGiVwcAAABAdnt/PSK8RbEv+38/JnqD
vShbtqznHdy+ffv8Oebq1as9j9mgQQOr1gyZbfthn/BZsymDx83649Q50Rvs
L1pWQH4HDx4sX76814q1b9++olcHAAAAQAEul2vxp5uFdyl2ZNnaLaJ317v6
9et73sStX7/en2POnDnT85gdOnSwas2QmdPlmrVkjfCJsyPrt+4UvbsWoGUF
JHf48OGKFSt6rVh79OghenUAAAAAlJF2PX30jA+F1ynWZux7i6X9K+P27dt7
3sdNmzbNn2P269fP85iDBw+2as2Q3JWka8Mmzxc+d9bm3XmfZGfniN5aC9Cy
AjI7duxYlSpVvFasXbp0kerR7gAAAADkd+jYKeGNirU5euKs6E3Nl9fKpVev
Xv4cs1WrVp7HXLRokVVrhvx2/3JI+NxZmCET55xPuCx6U61BywpI68SJE9Wq
VfNasT733HNOp1P0AgEAAACo59NN24X3KlZl7Vffi95OPWvWrPG8m2vcuLE/
x7zllls8j/nLL79YtWbIz+Vyfbhqk/Dpsyrf7PxZ9I5ahpYVkNPp06dvu+02
rxVrhw4dcnKC4b30AAAAAAIvMyt74uxlwqsV/zN57vKs7GzR26nn3Llznjd0
0dHRmZk+PuLg5MmTngeMjY3lDjHUpKal/2d6vPAZ9D8fLF4TTG8ho2UFJOT+
XXzHHXd4rVjbtGmTLff/kAAAAAAguVNnL74xfrbwgsWfDJkw58yFS6I3smA1
a9b0vK3bunWrb0ebN2+e59GeeOIJS5cMNRw8elL4GPqZYZPnX066JnojrUTL
CsgmISGhVq1aXivWJ5980uf/6AkAAAAAN2za/qPwjsWfbPn+J9FbaEjv3r09
7+z69+/v29Hatm3rebR3333X2jVDFas2bBM+if7kx/2/i95Ci9GyAlJJTEys
Xbu214r1sccey8jIEL1AAAAAAMEgJ8c5fdEq4TWLb3nvw09V+SvjLVu2eN7c
ValSxYf1X716NSoq6qZDORyO48eP27BwKCAjM2vCrKXC59G3xK/aGHyf6E3L
CsjD/UvzgQce8FqxtmjR4vr166IXCAAAACB4JCReHTpprvCyxWzeemde4pVk
0ZtnlMvlqlq1quct3ooVK8weasKECZ7Hadq0qR3LhipOnrkwWMGnf/xnenxK
WhBWHLSsgCSuXbvWqFEjrxWr+/dmamqq6AUCAAAACDbf7zkgvG8xmx9+Pih6
28wZMWKE513efffdZ+rtrCkpKRUrVvQ8Tnx8vH0rhxI2frNL+FSazW9HToje
NlvQsgIySEtLa9q0qdeK9aGHHnL/PhW9QAAAAABByOVyzV32ufDKxXgWrvhC
ub8yTkxMjI2N9bzXmzp1qvGD9O3b1/MIcXFxfDgycnKc0xasFD6bxrPyi29E
75ldaFkB4dLT0x955BGvFWvDhg2Tk5X5WxgAAAAAykm6ljpiykLhxYuRjJq6
6FpqmugN88Ubb7zhebsXFRW1Y8cOI9++YsUKh8PheYQ5c+bYvXIo4cKlK28q
8vSP8R8sycjMEr1hdqFlBcTKyspq1aqV14q1bt26V69eFb1AAAAAAEHu59+O
Cu9ejOTAoeOit8pHqampXp/OWrJkya1bt+p/77JlyyIjIz2/t0GDBqp8BBgC
YPuP+4VPaIEZPH72idPnRW+VjWhZAbG6devmtWINDw9/66233rXCJ598Ivos
AQAAAEht6ZqvhDcw+ln++VbRm+SXTZs2hYWFeb3169u374ULFzy/5ejRo88/
/7zXG8aYmJhffvkl8GcBaTldrjlL1wmfU/1s+OYH0fvku+Tk5ALrl7/97W+e
0+r+Pxb4jadPnxZ9fkAwaN68uddfmhZyv4ToswQAAAAgtbT0jDEzPhJewuSX
ce8vSc/IFL1J/ho5cmR+d23h4eEPP/xw//79x48fP3bs2N69ezds2NDrUwJy
8aFX8HQ1OWX4uwuET2t+mbpgRXZOjuhN8t3x48ft6Wz+VOB72gEYQcsKAAAA
QAaHj58W3sN4zeBxs46dOid6e6zx6quv+n+L984774g+D0hq769HhA+s17w5
ce6FhMuit8cvtKyA/GhZAQAAAEjis83fCW9jPPP5FkMfEaUEl8s1YsQInTep
6ouKipo7d67ok4C83BfY4k83C59Zz2zbtU/03viLlhWQHy0rAAAAAElkZWVP
mv2x8EImb96d90l2tsJ/ZezVhg0bbr/9drN3dnXr1t29e7fotUN2adfTR8/4
UPjk5s2sJWudLpfojfEXLSsgP1pWAAAAAPI4fT7hjQmzhdcyuRkycc65i4mi
t8QWGRkZ06ZNq1GjhpF7ugceeGDRokVOp1P0qqGGQ8dOCR/eGxk2ef7V5BTR
W2IBWlYAAAAAAGDKl9/tEd7M5ObrnT+L3gx7uVyuXbt2jRo1qnXr1nfddVep
UqUKFy4cGRlZunTpe+65p127dhMnTjxw4IDoZUI9n27aLnx+c7Pnl0OiNwMA
AAAAAECAHKdzZvxq4eXM+x99xrs3Ad9kZmVPnL1M+BR/tHqTS/1nBQAAAAAA
APjm0uWkoe/ME1jODJs8/3LSNdHbACjs1NmLb4wX+fSP0dPjU6+ni94GAAAA
AAAAkXb89KvAfubHfb+L3gBAeZu2/yhwin8/elL0BgAAAAAAAAjmcrnmL18v
pJxZtHIjf2UM+C8nxzl90SohU7xqwzbRZw8AAAAAACCF5JS0kVMXBric+c+0
+JS066JPHQgSCYlXh06aG+ApnjBraWZmluhTBwAAAAAAkMX+348FuJ/59cgJ
0ScNBJXv9xwI5AgPHj/75JkLok8aAAAAAABALsvWbglYP7Ni/TeiTxcINi6X
a+6yzwM2xRu3/Sj6jAEAAAAAAKSTnpE59r3FAShnxn+wJCMjU/TpAkEo6Vrq
iCmBePrHtIUrc3Kcok8XAAAAAABARkdPnLW7nBk8fvbx0+dFnygQtH7+7ajd
U/zmpLkXL10RfaIAAAAAAADyWvvV97b2M198/YPoUwSC3NI1X9k6xd/++Ivo
UwQAAAAAAJBaVnb25LnLbSpnpsxfkZ2TI/oUgSCXlp4xZsZHNk3xnKXrnC6X
6FMEAJU4nTxiBQAAAAhFZy5cGjJhjuXlzJsT555PuCz65ICQcPj4aTsq1uHv
LkhKThF9cgCgkj9OnZs4a9neX4+IXggAAAAAAbZ8/5Pl/cy2H/aJPi0ghHy2
+TvLp5iWAADMmrN0nfvfz1UbtoleCAAAAAABnE7nex9+amE5M2vJWv7KGAik
rKzsSbM/tnCKF3+6WfQ5AcKkp6cfOnRo06ZNc+bMmThx4siRIwcNGjRgwIAR
I0ZMnjzZ/X/8+OOPd+zYkZSUJHqlkMsfp865//0cMmHOlaRrotcCAAAAQIzE
K8lvvTPPknJm2OT5V/krYyDgTp9PeGPCbEumeMyMD9Oup4s+ISCgzp07N2/e
vJdffrl27dphYWGFjKlYseIjjzzSr1+/devWpaTwuy/U8UZWAAAAAG4//HzQ
kn5mzy+HRJ8KEKK+/G6PJVN86I/Tok8FCJArV65Mnjz5oYcecjgcBpvV/BQu
XLh58+Zjxoz5448/RJ8WBOCNrAAAAAByuVyuhSu+8LOc+XDVJhfPCgAEyXE6
Z8av9nOKP930rejzAALh6NGjPXv2jI2N9bNc9eRwOFq2bLl8+fLMzEzRZ4nA
4Y2sAAAAAG64lpo2auoin8uZ0dPjU9P4K2NApEuXk4b68fSPSbOXZWZliz4J
wF7JyckDBgwoXLiw5f3qTcqVK5eamir6dBEIvJEVAAAAwE0OHDrucz/z+9GT
opcPQNvx06++jfAb42efOndR9PIBe61du7ZChQp296s3XL16VfQZIxB4IysA
AAAAT8s/3+pDP8OdBSAJl8s1f/l6H6Z48/bdotcO2CgrK+v111/3//mrtKy4
CW9kBQAAAOBVekbmuPeXmCpnJsxampmZJXrhAP5HckrayKkLTU3xjEWrcnKc
ohcO2CUlJaVFixaB7FdpWUMHb2QFAAAAkJ9jp84NNlzODB4/++SZC6KXDOD/
2P/7MeMV69BJcxMu0wUhaCUmJjZo0CDwFSstayjgjawAAAAA9H2+ZYfBfmbj
N7tEL/b/tXd/oV3XexzHT9vcwLRhW0UhdKEXXRiEdhHRKBYlBEvILhS6MPsD
CVGgNXW5cxK2Y+6XnR3WOazNneU8+Wec4MyElDoNPZgpBxbnJEHahnl04b+5
KZv7d844weFQ67vf9tvOZx/3ePCky+092CJefZzAKHbv+0uaP8VH/vaP0MfC
VLl69erixYvHNY3m5eU98sgjZWVle/fuPX78+Llz57q7uwcHB/v6+i5fvnzy
5MlDhw69//77r7322mOPPTZnzhwr60zmISsAAJBsYGDwne3NY44zv238kz9l
DNNTb9/1X//uj2P+FG/fs394eDj0sTAlhoaGSkpK0t9XH3zwwcbGxitXrqT/
KQYHB7/44ouysrJFixZZWWcaD1kBAIB0nP3+wsaquoRxpixV//35S6HPBH7W
yY5/Jk+sv/pN45Xuq6HPhKmyfv36NPfVJUuWtLa2Zvjp2traXnnllfz8fCvr
DOEhKwAAkKbWo20J+8xfj/899IHAGPZ9eiThp/jLEydDHwhT5fDhw1lZWWPu
qzk5OVVVVYODg5P1eXt6eqqrq+fPn29lvbF5yAoAAKRvaGjo9zv/POo4U7fr
oyF/yhimvf6BgW31e0f9Kd7V8mno62CqXLt2bcGCBWNOrAUFBZk/YR1VX19f
dXX11aveit+wPGQFAADG5WJXd/m2hh+NM7985w9dV3pCnwak5Uzn+Y1bf/zb
Pyrf3Xmtty/0aTBVNm/ePObEeuutt7a1tYW+dFqrqGka+W8A/bQ3Utt/+Hfp
pre3Bz9GkiRJUiyVVdX/+DeyVtUHv0pS+v30dyy/kfJTrLGrqGkKvfNNxPnz
52+55ZbkiTUvL+/o0aOhL53uyn/yv1klSZIkSZIkjavybQ2hd76JeP3118d8
yFpbWxv6zAhYWSVJkiRJkqQMi3Fl7e3tLSgoSJ5Yly5dGvrMOFhZJUmSJEmS
pAyLcWXdsWNH8sSam5t76tSp0GfGwcoqSZIkSZIkZViMK2txcXHyyvriiy+G
vjEaVlZJkiRJkiQpw6JbWbu6unJychIm1qysLA9Z02dllSRJkiRJkjIsupV1
9+7dyQ9Zi4uLQ98YEyurJEmSJEmSlGHRrayrV69OXlkbGiL7isKyskqSJEmS
JEkZFt3Keu+99yavrJ2dnaFvjImVVZIkSZIkScqwuFbW3t7e5F/KumjRotA3
RsbKKkmSJEmSJGVYXCvrsWPHkh+yPv/886FvjIyVVZIkSZIkScqwuFbWPXv2
JK+s1dXVoW+MjJVVkiRJkiRJyrC4VtZUKpW8sh48eDD0jZGpqGka+R7Q+rfe
G/lx2LC1LvglkiRJkiRJiq6KmqbQO984vPrqq8kr61dffRX6RuLz7emzpVtq
N26tu9TVHfoWAAAAAJhazzzzTPLKeunSpdA3Ep+6XR+Vbqn98ONDoQ8BAAAA
gCm3fPny5JV1eHg49I1ExkNWAAAAAGaUJ554ImFizc3NDX0g8fGQFQAAAIAZ
pbi4OGFlnTt3bugDiYyHrAAAAADMNI8//njCyjp79uzQBxIZD1kBAAAAmGmW
LVuWsLJmZ2eHPpCYeMgKAAAAwAy0YsWK5L/9qq+vL/SNkamoaSrf1jAzW//W
e6VbajdsrQt+iSRJkiRJkqKuoqYp9M43Di+88ELyytrR0RH6xsiMfA+UbqmV
JEmSJEmSNOHKtzWE3vnG4c0330xeWY8cORL6xshYWSVJkiRJkqQMi2tlbWho
SF5Zd+7cGfrGyFhZJUmSJEmSpAyLa2X95JNPklfW0tLS0DdGxsoqSZIkSZIk
ZVhcK+u5c+eSV9alS5eGvjEyVlZJkiRJkiQpw+JaWUfcddddCSvrzTff3N/f
H/rGmFhZJUmSJEmSpAyLbmUtKSlJfs7a2toa+saYWFklSZIkSZKkDItuZU2l
Uskr65o1a0LfGBMrqyRJkiRJkpRh0a2sX3/9dfLKWlBQcP369dBnRsPKKkmS
JEmSJGVYdCvriIULFyYPrfX19aFvjIaVVZIkSZIkScqwGFfW8vLy5JV14cKF
AwMDoc+Mg5VVkiRJkiRJyrAYV9bTp09nZ2cnD62pVCr0mXGwskqSJEmSJEkZ
FuPKOqKkpCR5ZZ0zZ057e3voMyNQUdM08j1ww/dGavsP3/Cb3t4e/BhJkiRJ
kiTdYFXUNIXe+Sbi888/T15ZRyxevLi3tzf0pUwLdbs+Kt1S++HHh0IfAgAA
AADTyLJly8YcWp9++unBwcHQlxLYt6fPlm6p3bi17lJXd+hbAAAAAGAaOXHi
xKxZs8YcWleuXNnf3z9FN3R1dflrtqY/D1kBAAAA4Ods3rx5zJV1RFFRUWdn
5+R+6p6ensrKynnz5l2+fHlyPzKTy0NWAAAAAEgwMDCwZMmSdIbWwsLCHTt2
TMonbW9vX7duXX5+/g8f2co6zXnICgAAAADJTp06VVhYmM7Q+ov//H1Yzc3N
E/tNrRcvXmxsbHz00Udvuumm//2YVtbpzENWAAAAAEjH4cOHc3Nz0xxaR9x+
++1r1qxpaWm5cOFC8kfu7Ow8cODApk2bioqKsrOzR/1oVtbpzENWAAAAAEhT
c3NzTk5O+kPrf82fP7+oqGjFihXPPffcyy+//NJLLz377LNPPvnk/fffX1BQ
kM5HsLJOWx6yAgAAAMC4tLS05OXlTWBozZCVddrykBUAAAAAxuuzzz677bbb
rKz8y0NWAAAAAJioM2fOPPTQQ1ZWPGQFAAAAgAkbGBhIpVJz5861ss5YHrIC
AAAAQObOnj27atWqWbNmTdG4OvKRly9ffuDAgdBfKKPwkBUAAAAAJst33323
du3aefPmTeK+es8991RWVnZ2dob+4hidh6wAAAAAMOn6+/v379+/atWqO++8
c2LLan5+/lNPPVVbW9vR0RH6q2EMHrICAAAAwJRqb2//4IMPNmzYsHLlygce
eODuu+8uLCycPXt2VlbWyD/vuOOOBQsW3HfffQ8//PDq1aurqqr27dv3zTff
DA0NhT6ctAwNDx869mXluzs9ZAUAAADg/+nfyqmtbw==
    "], {{0, 788.}, {1826., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{141.92192993164065`, Automatic},
  ImageSizeRaw->{1826., 788.},
  PlotRange->{{0, 1826.}, {0, 788.}}]], "Output",
 CellChangeTimes->{3.8938082418010187`*^9, 3.89380827546651*^9, 
  3.893808422100338*^9, 3.893808523049551*^9, 3.893808586489977*^9, 
  3.8938472788651943`*^9, 3.906028361076515*^9},
 CellLabel->"Out[7]=",
 CellID->747169583,ExpressionUUID->"31fcce11-6962-4cf2-9e8f-84339c7882f1"]
}, Open  ]],

Cell["Generate OPENQASM from Qiskit circuit:", "CodeText",
 CellChangeTimes->{{3.893940333347415*^9, 3.893940350595908*^9}},
 CellTags->"DefaultContent",
 CellID->114619123,ExpressionUUID->"c870c6ef-844d-464a-9300-c680ad6cd795"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qiskit", "[", "\"\<QASM\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893808261218816*^9, 3.893808277150552*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[8]:=",
 CellID->862862356,ExpressionUUID->"8e70aad5-5a03-44d1-affd-1a83abb9522d"],

Cell[BoxData["\<\"OPENQASM 2.0;\\ninclude \\\"qelib1.inc\\\";\\nqreg \
q[2];\\ncreg c[2];\\ns q[0];\\nu2(0,-pi/2) q[1];\\ncx q[1],q[0];\\nmeasure \
q[0] -> c[0];\\nmeasure q[1] -> c[1];\\n\"\>"], "Output",
 CellChangeTimes->{3.893808287860653*^9, 3.893808513144952*^9, 
  3.893808590376746*^9, 3.893847284960949*^9, 3.906028373750461*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[8]=",
 CellID->953457462,ExpressionUUID->"f5d43e9d-7e11-45ec-86e9-327985924b51"]
}, Open  ]],

Cell["Generate corresponding circuit from OPENQASM:", "CodeText",
 CellChangeTimes->{{3.8938537568392363`*^9, 3.893853766558283*^9}},
 CellID->827408559,ExpressionUUID->"0c187d95-af16-4a9b-b03b-b981622266f5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImportQASMCircuit", "[", 
  RowBox[{"qiskit", "[", "\"\<QASM\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8938537438643637`*^9, 3.8938537526025476`*^9}},
 CellLabel->"In[9]:=",
 CellID->814009047,ExpressionUUID->"5e6c84a8-8d24-4743-83bc-ed1b50e78c20"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QiskitCircuit",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJztnQlYE9fagNkRhCJCBZRFFrUowgMW64rSouiliKWWv2gVxapVECpIsSpy
a0VRFC8uKKCAimJxL1htXVCxisCVVgWlggteKWKviGwiy/wfmTbNTUIyZCbJ
hHzvc8wzOTNz5ptkXr5zMovWgaG+C9VUVFTCe8GL77xI97CweV9/3AfefBIS
vnhRyILPp4YsX7BoQdioQHWoTIV/jqoqKp3TBMt43UqEZsi/QBhKS0NDgwoL
gDDk/UkoNWii3EETEQJNZAFoIkKgiSwATUQINJEFoIkIgSayADQRIZTVxI4O
4vkr4uYj4tRNIu0KkXKJSL1MHM4nrpYRj/8gWttkGgyaiBDKZ2LzGyKvjIjN
FhXMiizieBHxrE5GIaGJCKFMJrZ3EJfvEV8d7kZU6XlEfbPUA0MTEUJpTIS+
6LafJAls1RGi+LF0Y0MTEUI5TISh39dZtML78Vbn0FJKoIkIoQQmVv6XiPyO
gQhBRimBJiJETzcRRnmrjzIWpJS6qRKbqK6uPnz48JkzZy5cuHDRokWzZ88e
MWKElpaWiFV0dXWzs7PHjx+PJrKNnm3ivjxKW4fua21j56voxVYekcoPON01
EWyaP39+Xl5eU1OTYGstLS2FhYWhoaF9+vQRXDE3N5fcopubG5pI8vz584iI
CFtbW21tbXNz85CQEPgoAgMD4TPZvn27zMLowSbeqqS6ddAQgFexS6ZdYT5O
6iaCShs2bKitraXSbGNjY2JioqGhIZ+GnXtaWwvZE00EiouLTU1NYfd79+7t
7OxsYmIC015eXqNHj4YJ+HMns0jomDg3vsLBfYGh2RANLR1t3T6G/d+xHzfH
d+VFNpjY0UHEnWbeRCjVLxkOlaKJ48aNu3//Pu+K5eXlmZmZ8Pd87ty5AQEB
y5Yt27dvX0lJCe8yVVVV3t7eYjVUThMhG0IShH0PDw9/9eoVWblx40ao0dDQ
UFVVrauT1UllGiZ+urZQQ1tXS9fAafLS9+ftdvtsq6PHEgMTO8dJQWww8eHz
bmy9WyYeK2Q4VComLl++vL29nVy+ubl579697777blcL29vbJyQk8B5FlZWV
5ERXGiqnif7+/rDjwcHBfPVOTk5Qb21tLctgJDbR2vlDiHZmzC989Z/v+J0N
Jh68Ji0TI78j3jB6OZxYE1evXs1d+OrVq4MGDRJrLmBmZpadnc27IREaKqGJ
paWlampqxsbG9fX1fLPIQeL06dO5NQ8ePICuhZ6eHoy+Z8+e/ccffzAej8Qm
Qqe0l56RZOvKwMS1J6VlIhRIuAwi2kQ4KrhLrlmzBg4eKhqSQKf03r173NV3
794tYmFlMzEqKgr2OjQ0VHBWUFAQzIqOjibfQsfVysoKRpHwly0rK2vgwIGj
Ro3idlGYQmITBzr9A6L1Cj3GQhMbX3dv6901Ma+MyWhFmAgdJO5fbBgGUndQ
5X9/oungXJfQ1tYmok+rbCaOHTsW9vrkyZOCs3x8fGDW8ePHybebN2+GYePj
x3+exLp27RrMPXHiBLPxSGyiX/Q1NXVNCKmP6aChbvPc5ybO3ljKEhN/+126
JmZeZzLarkxUVVXlqiQ6nYnWEDqliYmJ5HRJSYm2tjaaCJC/1RQXF/PVt7a2
QpcVZlVUVJA1EznwLmNjY8PbVxELDAoGiMNyoJ3E+szacMt+fIDOW/2432b/
IePnxldI0BSEITZU6rw3dZHgJsiThkIL2dGAV6FzBc8zzlhxhsFoYUAnVA0Y
mJDf48OHD2GEIrGGcBjAn/SioiKyZsmSJULXgjAY3CmWA58JeX4HEhyfNRkZ
GVCvr6/f8dcFjv369YP+Ku8y8NVAB5W6ibBFsd+ahrauxCZyy7x/PZq8aB9o
CA0amTsEp7d0twUIg/qRJpYhY2Z2lfgkQDBXTgvPZjDarjhz5gwZwLRp06iv
1dUJCxcXF7Ly9u3b0olXkQA17O3tYWLHjh2833VVVRX5hxH6rtxKTU3NVatW
8S4WEBAwePBg6oeQtHMiXwk50GE2uLPvPSMqT745caTnAqnmxI8jTzMYrdCc
aGtrS36J0Eei/iuN6POG3PPUQq92U7acuHTpUthrCwuLsrI/h/0FBQVDhgwB
76CeNwnSN5EKzF5j4zw1DPZiavDh7q7I7DixUtx1a0LTJfVx4okiJqMVOk7k
nuSKjIxkRENg1qxZ5NzY2FjB1ZVtnPjkyRMjIyMVzkl8BwcHOzu7zkN36lRP
T0+YSE5O5i5Jv3dKBYlNnB7509J9rbw1QalN0DXt/MY33JKvia1tRNghKZpY
9JDJaIWamJ6eTs4V8WtntzQETE1NyQXOnz+PJhKcU4peXl56HEaOHJmUlARj
Q2tra/g0bty4wV1swoQJ7u7uvCtCj2XevHnMBiOxiUbmw3QNTB3cF06cs91j
wd73fP/Zx3Qw7IL9uDkStMb4+cS4H6RoIrMP1hBqIozmYNabN2+6+qmzuxqS
PH36FJZ58eIFmiiU+vp6VVVVGA40Nv79s0JcXBx0UCGHkm/z8/NVeM5xMAWN
nPijo8cSY0vHXnpGqmrqvfT6mttPBCVD9rezwcQzv0rLxJjvGb5rWKiJ5LVq
9+7dY1BD4Ny5c+SS+vr6aKIgpGUwWuSthO/C0tLSxcUlOzv7yJEjkDQhgbLn
zD6zhXETXzYSyw5KxcRLdxkOVaiJCQkJqamp69evF2tiRkYG2Y5YDVU416+m
paUlJib27t0bTRQkJSUFPgo/Pz+++vLycujHwodmYGAAw+2amhrGN91TTQRS
rzBvYkQm0djCcJw079mHMUtlZSUVDUWDJgIhISHwUcTExMh+0z3YxJo6Ynkm
wyZeLGU+TvpPzwAZaWqIJpK4u7vDR5GTkyP7TfdgE4Hcu0yauPUswfTgoBN8
jg1C9HQT2zuIxPPit07l6RmR3xHV0rltFE1EiJ5uIsF56Hf8GbrhRRwmHjA/
Rv8TNBEhlMBEgiPjTgqZsauy8gjDNyTygSYihHKYSHCuKYUxI8UfcHhL6mXi
lZQfyI8mIoTSmEhSU9dpFsXzjLE5RPEjKT76mwuaiBBKZiJJbSPxw6/ExtPC
lfznceLAVaLimSwcJEETEUIpTeTypo149Jz490NiBedx/V9nyeJ/hhIETUQI
5TaRy5pjnTHAq1xAExECTeSAJqqgifIGTSTQRA5oonxBEwk0kQOaKF/QRAJN
5IAmypeOjk4L5F5kdspAKPI1saOjo0FSorfsWbZ2G7zyTUtAh3y/AwSRt4l0
iNmRERmbBK980wiiiKCJCMIG0EQEYQNoIoKwATQRQdgAmoggbABNRBA2gCYi
CBtAExGEDaCJCMIG0EQEYQNoIoKwATQRQdgAmoggbABNRBA2gCYiCBtAExGE
DaCJCMIG0ERE7nQALa2sKPJ7jgqaSBM6j+JhCkV/Dg8o8Gb5ITYUiEReHwKa
SJMGFjyerkHBn02HJhJoIm3QRPqgiQSaSBs0kT5oIoEm0gZNpA+aSKCJtEET
6YMmEmgibdBE+qCJBJpIGzSRPmgigSbSBk2kD3UT90xZBPsLr3z1vy1IgPrZ
w9zQRNmDJnJBE9FEOYImckET0UQ5giZyQRPRRDnSM0xUU1Pr1auXqqoqlYXt
7OzGjRuHJqKJrEJBTQTp3N3dY2Jizp49W1NTw23n6dOnp06dWrNmjaura1ca
PnnyBDY3fvx4Bk18/vx5RESEra2ttra2ubl5SEgItBYYGAjNbt++nYlPSDxo
IoEm0oa6iXp6eqGhoffu3RPbZlFREbigpaXFpyE59+eff2bKxOLiYlNTU2ih
d+/ezs7OJiYmMO3l5TV69GiYyMvLk6zZ7qLMJnZ0EA+fEznFRERmp4krviPe
tMk4BLoolokeHh6PHj3iW/fZs2fXrl3Lzc3Nz8+vra3lm3vr1i0XFxc+DX/9
9VdjY2NGTIRsCEkQVg8PD3/16hVZuXHjRqjR0NCA3F1XVydBsxLAlIlzOCbW
f7kvcLi7tcHbepq97AxNt74fwFoTbz8h4n7oFJC3rDzSKWar4vioKCbCUb1z
507eVS5cuPDpp5+SFvBiY2Mzf/78wsJC7pKtra3x8fGiNZTYRH9/f1g3ODiY
r97JyQnqra2tJWhTMqibmPHhUoht2wfz+OqL526C+kVOHjBdG5L69ajppfPj
X4dnFMxZ30/3rYMfhrDQxEt3+R3kLTvOEfLrKXcPhTARepjff/89d+GLFy8O
HTpUtLkAdA6h38i3oa40lMzE0tJSNTU1aLC+vp5vFjlInD59OvkW/g4EBQXB
6JXsLXd3Q1SgbuLPs9ZCDEucJ/PVZ3qHQv0GN3/BVSA/Bjl7ss3EXx6L0pAs
aVdkEwtd2G8iHOrHjv05Am9ubl68eDHF30gBTU3NhIQE7s34NTU1XWkomYlR
UVGwIoxbBWeBdzArOjqafAudZxhLent7jx07Vu4mNoUdsNA3MtbRf/TFTm5l
w7L9bub2qiqqtwM38y3fuGz/4L5muycvYJWJ8K1uyBZvIpSnL2QQDl3Yb2JY
WBh3mQkTJlB0kIR3bEjy0UcfMWgiqdXJkycFZ/n4+MCs48ePk2/b29vJCXBT
7iZCOflRhKaaupGOXrird+Kk+dFjZww16uznR77nI7jw547vjzCxAVVZZWJ5
NSUNoXx3Qwbh0IXlJg4ePLipqYngHMmTJ0+WWEPuRHV1tZGREVMmkqNUwT4w
jEzJ5FtRUcE3iyUmQrk261vfwSNNdA001NQNtHUnWAwVOhIMHTHVwdiiaslu
6i3LxsTjRVRNXH1UBuHQheUmXrhwgVwgPj5eYg3JsSE3Pe3Zs4cpEw0NDWHF
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

               "], {{0, 158.}, {302., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {302., 158.}, 
             PlotRange -> {{0, 302.}, {0, 158.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
7OzGjRuHJqKJrEJBTQTp3N3dY2Jizp49W1NTw23n6dOnp06dWrNmjaura1ca
PnnyBDY3fvx4Bk18/vx5RESEra2ttra2ubl5SEgItBYYGAjNbt++nYlPSDxo
IoEm0oa6iXp6eqGhoffu3RPbZlFREbigpaXFpyE59+eff2bKxOLiYlNTU2ih
d+/ezs7OJiYmMO3l5TV69GiYyMvLk6zZ7qLMJnZ0EA+fEznFRERmp4krviPe
tMk4BLoolokeHh6PHj3iW/fZs2fXrl3Lzc3Nz8+vra3lm3vr1i0XFxc+DX/9
9VdjY2NGTIRsCEkQVg8PD3/16hVZuXHjRqjR0NCA3F1XVydBsxLAlIlzOCbW
f7kvcLi7tcHbepq97AxNt74fwFoTbz8h4n7oFJC3rDzSKWar4vioKCbCUb1z
507eVS5cuPDpp5+SFvBiY2Mzf/78wsJC7pKtra3x8fGiNZTYRH9/f1g3ODiY
r97JyQnqra2tJWhTMqibmPHhUoht2wfz+OqL526C+kVOHjBdG5L69ajppfPj
X4dnFMxZ30/3rYMfhrDQxEt3+R3kLTvOEfLrKXcPhTARepjff/89d+GLFy8O
HTpUtLkAdA6h38i3oa40lMzE0tJSNTU1aLC+vp5vFjlInD59OvkW/g4EBQXB
6JXsLXd3Q1SgbuLPs9ZCDEucJ/PVZ3qHQv0GN3/BVSA/Bjl7ss3EXx6L0pAs
aVdkEwtd2G8iHOrHjv05Am9ubl68eDHF30gBTU3NhIQE7s34NTU1XWkomYlR
UVGwIoxbBWeBdzArOjqafAudZxhLent7jx07Vu4mNoUdsNA3MtbRf/TFTm5l
w7L9bub2qiqqtwM38y3fuGz/4L5muycvYJWJ8K1uyBZvIpSnL2QQDl3Yb2JY
WBh3mQkTJlB0kIR3bEjy0UcfMWgiqdXJkycFZ/n4+MCs48ePk2/b29vJCXBT
7iZCOflRhKaaupGOXrird+Kk+dFjZww16uznR77nI7jw547vjzCxAVVZZWJ5
NSUNoXx3Qwbh0IXlJg4ePLipqYngHMmTJ0+WWEPuRHV1tZGREVMmkqNUwT4w
jEzJ5FtRUcE3iyUmQrk261vfwSNNdA001NQNtHUnWAwVOhIMHTHVwdiiaslu
6i3LxsTjRVRNXH1UBuHQheUmXrhwgVwgPj5eYg3JsSE3Pe3Zs4cpEw0NDWHF
a9eu8dVnZGRAvb6+vuBTqiQzccSIEQPEYWc5sFsmUilLXaYMM7Z42h0NoUAk
YqOlj8+yLIomLk1vkUE8NAleHQf2wSvftIwxMzMTVMPR0ZE8DsvLy3V0dOho
CJUmJiYvXnQOGF6/fi10tAgxUA8Y1ICm7O3tYcUdO3bwWlNVVUXuDvRdBZ2S
zETYoti91tXUZlbDIGdP6LJ2V0MoEAn1L0ti3g/cTdHEL1LqZBAPTZZ8HQv2
wSvfNBvYtWsXeRwuXryY+loizhtu2rSJrP/qq69oxgZqQDtLl3aeDrCwsCgr
KyNbLigoGDJkiKamJtQHBQUxZaLsc+J9zrlFbXXN3praZPEc6MSqnOg2YyVF
E2etK5BBPDRhbU5UV1cnT5TDK3Tz6GuowjnVSM66c+eO4LoS5ETYFjnq1NDQ
cHBwgK3D9NSpUz09PWEiOTmZKROpoGx3Cje1EBGHKZlY+EAG4dCFtePEYcOG
kbOysrIY0ZCEPOPf3t6up6fHN0uyM/ulpaVeXl56HEaOHJmUlARjQ2tra2jw
xg0hv9mhiQySdUO8hquOKsaVb6w1cc6cOeQsij1JKhqq8PR4mb0CnJf6+npV
VVU1NbXGxkbBuWgigzS/IeJOi9Iw/BBR8Uw2sdCFtSZyx3STJk1iSkNgwYIF
5GKCY0+mTMzPz4fWYLTIV3+EwyeffAJzyWneS/Loo4QmAo2vOy9pE6rhyiNE
uYJoSLDYxK1bt7a1dfYqnJ2dmdIQ8PX1JTjn+7788kspmZiSkgKt+fn58dUL
BhMQEMDIFkmU00SCc7ENGJee9+eNGMsOEpt/IK6XK8wVpySsNZGEvJ1BtIm2
traVlZUEBQ1VONfOqaurC53FlIkhISHQWkxMDCOtUUdpTeSltY1Q0P9oiOUm
UgRkzMnJEauhaJgy0d3dHVqDeBhpjTp8JpbM3zKq/yA7Q9MRJjbFczcx61qm
d+icYW7ediOg/eFvW35g5VA6P54NJiouPcNERuhhT8+YaDGUvAMRrAEZmTXx
U/sxR6eHnfKNaAk/CG//9X6Am7k9mkgHNLFHmvifxbv0tXSawg7ANMhiomvA
m7MolprglAF6ffv20nN822pI3/5a6hrzhk98w7k1w+ot40aeC8Kvf7YOatBE
OqCJPdLE/M/WDTI0475919TmR79VEuS+MNcPo8fOgImcjyPHm79DVp6eseL/
3hnDu9jMoeOCXf6+exFNlAA0EU18z8zOSEePr1Qs3A6zPKyGn/hoOUysHee3
1GUKufwiJ49D3n/ftQGzoIWXoWloIh3QxB5pIiO9Uyhv67z1cNEOmJg+yHXP
lC/I1mwM+r0ISSUXiJ0w08XEGvqxvGuhiRKAJvZIE6G4mdtzf7EBWcjKWUPH
Zfkso6ghONhP9y1y2q6PyY3ZMTBxddbaf9g4k5WbJs5yNhn4LDiZb0U0UQLQ
xJ5q4u3AzdBptDM0BQ3/HRBLVr7Td8D1z9ZRNBH6pZMHOpLTI0xsyJ9rlo/0
Jh+j8WDRdvjQID86vm0FxdXUFk2kA5rYU00ULE+X7P7AykGCPipvsTcaAF1f
0cugiRKAJiqPiTIraKIEoIloIprIBtBENBFNZANoIpqIJrIBNBFNRBPZAJrY
c0wEWlpZURT0xiS5whIT4btrkIjoLXuWrd0Gr0Lfdgs8fhA5whITJYYvZkXc
BQQh0EQEYQdoIoKwATQRQdgAmoggbABNRBA2gCYiCBtAExGEDaCJCMIG0EQE
YQNoIoKwATQRQdgAmoggbABNRBA2gCYiCBtAExGEDaCJCMIG0EQEYQNoIoKw
ATQRQdgAmoggbABNVGg2bdo0atSoPn36GBgYjB079syZM/KOCJEQmiaePn3a
yclJS0vLyspqy5YtUguzS2iaePny5WnTpllaWqqoqHz77bdSC1NaTJkyJTk5
ubi4uKysLCIiQl1d/erVq/IOCpEEOiYWFhZqaGisWLGitLQ0LS1NW1t7165d
0gxWCDRNhL8kEP/hw4dNTU0V0UQ+hg8fHhYWJu8oEEmgY6K/v//o0aO5b5cv
Xw6ZURpBioCp3ilErugmtre3w15ERUXJOxBEEuiYCJ26b775hvv2/Pnz0Md7
8uSJVALtAjSRC8QPo0UZf/6IZDQ2NedcuM5borakwqELr3zT3PLf2rquWtPU
1ExKSuK+vXPnDphYUFAg1V24frOkq/iF7sIvpeVUmlV0E3fu3Kmjo3Pu3Dl5
B4JQ5fjZK3CsUizpR8+I+N8i5GLio/9Ur9iYTDH+qPjUP7r+S8KLQpsYFxen
q6uLGioWLS1vNiVlUjmM1ybse9XQKKIpvt7phQsXZNM7PXu5gKKJBb/cpdim
4poIA0M9Pb1Lly7JOxCk2zymllZulz0Q3Y6/v/+YMWO4byMiImTzi01rW1tC
2lGaCZ0PBTUxNDS0V69eJ06c+P0vXr58Ke+gkG7w45VC0YdxVk6u2EagI6qh
obFy5cq7d++mp6fDISGzsxjVz1+sitsjKqFvE5PQSerr64s5mJmZBQUFwcT9
+/dlED9TCP4vkAEBAfIOCukGbW3t29KPdXUYb0g82Py6hUo7OTk5jo6OWlpa
0FOV8Zn9vIJbIky889tDKo3k5ubyHckTJkyQbtwI8r88g7SyWUhaWRGbVFFZ
Je/oxNPe0ZGcmS08oZ/OlXd0bOGnvMKnz/6QdxSIGK4W3hY8jE9fvC7vuKhS
W1cfvTWNL/7YXYcoJvQeT8Xjp/CBQDe+oalZ3rEgooC0kpKZw3sYb917pLW1
Td5xdYObd37jS+gP2JfQ29ra9u/fP2nSJGNjY+jJW1hYeHp6pqSkQL1Ut5t0
qLPPcPzsFaluBWGElzxpZeWmFIXryXR0dGScOMc18YfcfHlHxE9dXZ27uzs5
CO3fv7+rq+uAAQNUVVXhbW1trfS2SyZE+E6h5yC9rSAMUlxynzyML+UXyzsW
SYCu17odB1ib0GfMmAHSmZubX7x4kVtZXV0dExPT0NAgve1iQlQ4IK0cPHlu
V8ap9vZ2ecciIfcqKmE0VMW+hF5UVAQaamho3L59m04729KPxezIoF7WJuwj
/7qu276/WytikW9Zt/3At9sU+yuDY0+WmwM1qBi0evVqMNHHx4eOhsRfV7Zj
wYKFr8RQu93D19cXTIyNjaVpYrdyIiZELMpTKOZEDw8PMFHGN1DjCBFB+JB9
TsSEiEWpCsWcGBUVheNELFikV2KojRNv3rwJJmpqapaUlNAxkWJOxISIRdkK
xZwI+Pn5gYyWlpa8txBWV1evX7+e8fOJOEJEkK6oq6ubOHEieY3NgAEDXF1d
zc3NpXGNDV5UgyCiaWtr27t3L/hoaGhI3kE2ZcoUqGH2ulNMiIhy8v/jFoxY

               "], {{0, 158.}, {302., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {302., 158.}, 
             PlotRange -> {{0, 302.}, {0, 158.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Ops: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"measure\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"s\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"u2\"", "\[Rule]", "1"}], ",", 
                    RowBox[{"\"cx\"", "\[Rule]", "1"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QiskitCircuit[
   ByteArray[CompressedData["
1:eJyVVUFvHDUUnlllk13SJlCaNKW0ZIEou1IapQtCAokLqQjVwoqGIuUCrmfG
WZt6Z3ZnbJocIpFDIhFZcMDtkb/AFQkJDtBLr4gL4oj4ARwqITjw7PFsdrcp
LXMZ+/n5e8/vfe+9WpBsBr7nec9WPO+ziTsV+JlPXeyz7BYTqyFLQwn/vsSx
kF231Wrmei5Yd4KvdGNf7+m6egoFOCMoxl2i1bTTv3yl+ZpWE1ZIJ1UZRVhg
/RGo1/7TjlVTZ5yRa3EmUhkKlsS5vbYxWE16JMVWqJbH0DgLUpzurmYCxxFO
I9TBgmSrmVblDzZgeez2NIrINouZxWmDh/kDfFCdRrHsor4MmMh0y3f7kOd7
T02hHk5xN4P3qEnEcUA4IFTDJI4KuCqKpPPRYMvYhLAUCS0DNemQ1aWTQ5GS
DssEScHn60Zz6OlllJIeHNTsQd2lZNNdqDdXFpf7y42VxbWGBhcGQPRFNTum
m4PWld/XrdJR5edz31+49sYn99S5R2Ca3NEl+rLzhC4/1ocrDU0bdAUixOKI
7JhAlhHFGdVHlbts7uafP6qv5aEOiNABfaXl0VePKm+W7j34fW5j38gPILgu
5g2zp6cK27Oq/mRpl03A+LA5kng616bzqgRHdKHl0/Ng+Dl424bnvo0f/qr9
fePq5QVCn2/Ti216qU1foIsyoDW6dqDp6w8584Qc3AFf1rdGSVi1pWPONX1H
lbdO8NTfGXF03Kn8NaFVKp2opJ7O6StSPsJpKwAfwWLLz59Hlw5PeuD82AO7
BGcyhWKZes+tBi7Pq6ni1HntDzk0NxLNJRNNtTgGHnKcZSzEfKgM1vlIGQD5
XrKi+nqhPEK/0JUA0C9SzzykM6B+aKl//4+tB6XvfnlbnX8kmiV/h27/H/s5
/Tkw2zfMbn7z6/3fOp9/O874m2c+7fy00P8nZ/xY5OnHRVgpfmw4LTlpLwch
ahYlPZPeVCDBuiSDPnQWQYsSacLRNk9uoyyERmqbWLkPwTYruoJVOSw2HEOr
c5TJy3+NgMQVZR6THlEzuY4pcxYC4J5V9dSpt5h4NwltF8wg6C3PGGh5hxof
6n0NdPui5VuR70QSsCz6CFYH9MxVfny1567yoatVhOOQcciIedJpBFkxhZhb
h8GUcE7CYge9H0suwIjhlaoEknHBzNGEkx3oTQ2lYzs9gcwigQMOnB+fkwMF
dz7zfiG4YQXHzXvSQexBwNEtspvpL838MHPHLE3aoCwHeCZjUzBddhMpYHka
dXgSYI560EOJGUOVoREzYScMFHsVwWVsxyjYOevCeTtlggCWIHG4WzAhH1aA
OJDLYPVfon8VzA==
    "]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893853753220606*^9, 3.90602837404333*^9},
 CellLabel->"Out[9]=",
 CellID->1567012666,ExpressionUUID->"b4ea0fb4-b6a5-4085-aa76-7e3ba049c063"]
}, Open  ]],

Cell["Transform the Qiskit object back to quantum circuit object:", "CodeText",
 CellChangeTimes->{{3.893808297556425*^9, 3.893808321274379*^9}, {
  3.893940364335702*^9, 3.893940370680971*^9}},
 CellTags->"DefaultContent",
 CellID->740470054,ExpressionUUID->"e69b3355-2460-4198-a75f-5995fbd0fede"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qiskit", "[", "\"\<QuantumCircuit\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893808289992577*^9, 3.893808294559916*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[10]:=",
 CellID->373391833,ExpressionUUID->"558524ed-4309-4138-a091-e5feb72c4017"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumCircuitOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Directive[
                  CapForm[None], 
                  RGBColor[0.537254, 0.537254, 0.537254], 
                  Opacity[0.3]], {{
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -2}, {0.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -2}, {1.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{2.375, -2}, {2.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -1}, {2.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{3.375, -2}, {3.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{4.375, -2}, {4.625, -2}}]}}}, {{
                  EdgeForm[
                   RGBColor[0.922526, 0.385626, 0.209179]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.922526, 0.385626, 0.209179]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.3]]], 
                  RectangleBox[{0.625, -2.375}, {1.375, -1.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{1.625, -2.375}, {2.375, -1.625}, 
                   RoundingRadius -> 0.1]}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.3]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, 
                    RoundingRadius -> 0.1]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -1.375}, {3., -1.90625}}]}}}}, {{
                    Directive[
                    CapForm[None], 
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                    LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
                    LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.3]]], 
                    DiskBox[{3., -2.}, 0.09375]}}, {}}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{3.625, -1.375}, {4.375, -0.625}, 
                   RoundingRadius -> 0.1], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -1.0772902651951612`}, {
                    4.212366961023424, -1.0332063712732258`}}], 
                   
                   LineBox[{{4.116904337848513, -1.0409065970372444`}, {
                    4.163666072987917, -0.9822692358521422}}], 
                   
                   LineBox[{{4.073692193435111, -1.015088542646603}, {
                    4.103169070809155, -0.9461239597052442}}], 
                   
                   LineBox[{{4.0251687373408105`, -1.0016969196685122`}, {
                    4.035236232277135, -0.9273756875359171}}], 
                   
                   LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
                    3.9647637677228653`, -0.9273756875359171}}], 
                   
                   LineBox[{{3.9263078065648895`, -1.015088542646603}, {
                    3.896830929190845, -0.9461239597052442}}], 
                   
                   LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
                    3.8363339270120824`, -0.9822692358521422}}], 
                   
                   LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
                    3.787633038976576, -1.0332063712732258`}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -1.1875}, {
                   4.17024643740233, -0.8533725534293621}}]}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{3.625, -2.375}, {4.375, -1.625}, 
                   RoundingRadius -> 0.1], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -2.0772902651951615`}, {
                    4.212366961023424, -2.033206371273226}}], 
                   
                   LineBox[{{4.116904337848513, -2.040906597037244}, {
                    4.163666072987917, -1.9822692358521423`}}], 
                   
                   LineBox[{{4.073692193435111, -2.015088542646603}, {
                    4.103169070809155, -1.9461239597052442`}}], 
                   
                   LineBox[{{4.0251687373408105`, -2.0016969196685124`}, {
                    4.035236232277135, -1.9273756875359171`}}], 
                   LineBox[{{3.9748312626591895`, -2.0016969196685124`}, {
                    3.9647637677228653`, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9263078065648895`, -2.015088542646603}, {
                    3.896830929190845, -1.9461239597052442`}}], 
                   
                   LineBox[{{3.8830956621514874`, -2.040906597037244}, {
                    3.8363339270120824`, -1.982269235852142}}], 
                   
                   LineBox[{{3.8483093135546973`, -2.0772902651951615`}, {
                    3.787633038976576, -2.033206371273226}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -2.1875}, {
                   4.17024643740233, -1.8533725534293621`}}]}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", "\"M\"", "/*", 
                "\"M\""}]], Annotation[#, 
              RightComposition["S", "S", "H", 
               Subscript["C", "X"][{2}, {}], "M", "M"], "Tooltip"]& ], 
            InterpretationBox[
             TagBox[
              
              GridBox[{{""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}], "Grid"], 
             
             Grid[{{}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              Alignment -> {Left, Automatic}, Spacings -> {2, Automatic}]]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Directive[
                  CapForm[None], 
                  RGBColor[0.537254, 0.537254, 0.537254], 
                  Opacity[0.3]], {{
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -1}, {0.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{0.375, -2}, {0.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -2}, {1.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{2.375, -2}, {2.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{1.375, -1}, {2.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{3.375, -1}, {3.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{3.375, -2}, {3.625, -2}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{4.375, -1}, {4.625, -1}}]}, {
                   Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                   LineBox[{{4.375, -2}, {4.625, -2}}]}}}, {{
                  EdgeForm[
                   RGBColor[0.922526, 0.385626, 0.209179]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.922526, 0.385626, 0.209179]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{0.625, -2.375}, {1.375, -1.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{1.625, -2.375}, {2.375, -1.625}, 
                   RoundingRadius -> 0.1]}, {{{{
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.3]]], 
                    
                    RectangleBox[{2.625, -1.375}, {3.375, -0.625}, 
                    RoundingRadius -> 0.1]}, {{
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    LineBox[{{3., -1.375}, {3., -1.90625}}]}}}}, {{
                    Directive[
                    CapForm[None], 
                    RGBColor[0.537254, 0.537254, 0.537254], 
                    Opacity[0.3]], 
                    Directive[
                    AbsoluteThickness[1], 
                    Opacity[0.3]], 
                    LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
                    LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
                    EdgeForm[
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    FaceForm[
                    Directive[
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Opacity[0.3]]], 
                    DiskBox[{3., -2.}, 0.09375]}}, {}}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{3.625, -1.375}, {4.375, -0.625}, 
                   RoundingRadius -> 0.1], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -1.0772902651951612`}, {
                    4.212366961023424, -1.0332063712732258`}}], 
                   
                   LineBox[{{4.116904337848513, -1.0409065970372444`}, {
                    4.163666072987917, -0.9822692358521422}}], 
                   
                   LineBox[{{4.073692193435111, -1.015088542646603}, {
                    4.103169070809155, -0.9461239597052442}}], 
                   
                   LineBox[{{4.0251687373408105`, -1.0016969196685122`}, {
                    4.035236232277135, -0.9273756875359171}}], 
                   
                   LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
                    3.9647637677228653`, -0.9273756875359171}}], 
                   
                   LineBox[{{3.9263078065648895`, -1.015088542646603}, {
                    3.896830929190845, -0.9461239597052442}}], 
                   
                   LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
                    3.8363339270120824`, -0.9822692358521422}}], 
                   
                   LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
                    3.787633038976576, -1.0332063712732258`}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -1.1875}, {
                   4.17024643740233, -0.8533725534293621}}]}, {
                  EdgeForm[
                   RGBColor[0.7367, 0.358, 0.503]], 
                  FaceForm[
                   Directive[
                    RGBColor[0.7367, 0.358, 0.503], 
                    Opacity[0.3]]], 
                  
                  RectangleBox[{3.625, -2.375}, {4.375, -1.625}, 
                   RoundingRadius -> 0.1], 
                  Thickness[Small], {
                   
                   LineBox[{{4.151690686445303, -2.0772902651951615`}, {
                    4.212366961023424, -2.033206371273226}}], 
                   
                   LineBox[{{4.116904337848513, -2.040906597037244}, {
                    4.163666072987917, -1.9822692358521423`}}], 
                   
                   LineBox[{{4.073692193435111, -2.015088542646603}, {
                    4.103169070809155, -1.9461239597052442`}}], 
                   
                   LineBox[{{4.0251687373408105`, -2.0016969196685124`}, {
                    4.035236232277135, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9748312626591895`, -2.0016969196685124`}, {
                    3.9647637677228653`, -1.9273756875359171`}}], 
                   
                   LineBox[{{3.9263078065648895`, -2.015088542646603}, {
                    3.896830929190845, -1.9461239597052442`}}], 
                   
                   LineBox[{{3.8830956621514874`, -2.040906597037244}, {
                    3.8363339270120824`, -1.982269235852142}}], 
                   
                   LineBox[{{3.8483093135546973`, -2.0772902651951615`}, {
                    3.787633038976576, -2.033206371273226}}]}, 
                  Thickness[Medium], 
                  
                  LineBox[{{4., -2.1875}, {
                   4.17024643740233, -1.8533725534293621`}}]}}, {}}, {
               ImageSize -> Tiny}], 
              RowBox[{"\"S\"", "/*", "\"S\"", "/*", "\"H\"", "/*", 
                RowBox[{
                  SubscriptBox["\"C\"", "\"X\""], "[", 
                  RowBox[{
                    RowBox[{"{", "2", "}"}], ",", 
                    RowBox[{"{", "}"}]}], "]"}], "/*", "\"M\"", "/*", 
                "\"M\""}]], Annotation[#, 
              RightComposition["S", "S", "H", 
               Subscript["C", "X"][{2}, {}], "M", "M"], "Tooltip"]& ], 
            GridBox[{{""}, {
               RowBox[{
                 TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["6", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"4", "\[Rule]", "16"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", "0", ",", "1", ",", "2"}], 
                    "}"}]}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
           Complex[0, 1]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
          "ParameterSpec" -> {}|>]], {{1}, {1}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, 
           Complex[0, 1]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "S", 
          "ParameterSpec" -> {}|>]], {{2}, {2}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {4}, 0, {
         1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
          2^Rational[-1, 2], 2^Rational[-1, 2], 2^
           Rational[-1, 2], -2^Rational[-1, 2]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
          "ParameterSpec" -> {}|>]], {{2}, {2}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {16}, 0, {
         1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          Subscript["C", "X"][{2}, {}], "ParameterSpec" -> {}|>]], {{2, 1}, {
       2, 1}}], 
      Wolfram`QuantumFramework`QuantumMeasurementOperator[
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[Automatic, {4}, 0, {1, {{0, 1}, {{4}}}, {1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "M", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], {1}], 
      Wolfram`QuantumFramework`QuantumMeasurementOperator[
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[Automatic, {4}, 0, {1, {{0, 1}, {{4}}}, {1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "M", 
           "ParameterSpec" -> {}|>]], {{2}, {2}}], {2}]}, "Label" -> 
    RightComposition["S", "S", "H", 
      Subscript["C", "X"][{2}, {}], "M", "M"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.893808295195932*^9, 3.893808533426956*^9, 
  3.893808593239272*^9, 3.893847291340271*^9, 3.906028374967916*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[10]=",
 CellID->784155038,ExpressionUUID->"20ac69f5-8ca9-4b2b-9351-705bad7397fc"]
}, Open  ]],

Cell["\<\
Generate the outcome of a Qiskit circuit (by default, 1024 shots to find \
frequency of measurement results):\
\>", "CodeText",
 CellChangeTimes->{{3.893848713967001*^9, 3.893848747301434*^9}},
 CellID->1283100463,ExpressionUUID->"89027a50-a171-4288-be95-f4c5ea527065"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qiskit", "[", "]"}], "[", "\"\<ProbabilityPlot\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.893808330031745*^9, 3.8938083301197367`*^9}, {
  3.8938086030344152`*^9, 3.893808607028081*^9}},
 CellLabel->"In[11]:=",
 CellID->844414353,ExpressionUUID->"f2bddd37-4503-486e-bb9f-cb3fea505a18"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867, 0.501953125},
          
          RoundingRadius->0],
         StatusArea[#, 
          Rational[257, 512]]& ,
         TagBoxNote->"257/512"],
        StyleBox[
         FractionBox["257", "512"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Rational[257, 512], {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{1.5487982520029133, 0.}, {2.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{2.5487982520029133, 0.}, {3.4512017479970867, 0.},
          RoundingRadius->0],
         StatusArea[#, 0]& ,
         TagBoxNote->"0"],
        StyleBox["0", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         RectangleBox[{3.5487982520029133, 0.}, {4.451201747997087, 0.498046875},
          
          RoundingRadius->0],
         StatusArea[#, 
          Rational[255, 512]]& ,
         TagBoxNote->"255/512"],
        StyleBox[
         FractionBox["255", "512"], {}, StripOnInput -> False]],
       Annotation[#, 
        Style[
         Rational[255, 512], {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{4.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{177.24273681640625`, Automatic},
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.8938083306438713`*^9, 3.893808539087419*^9, {3.89380859525914*^9, 
   3.89380860755383*^9}, {3.893847306051777*^9, 3.8938473161517076`*^9}, 
   3.906028375747672*^9},
 CellLabel->"Out[11]=",
 CellID->162248333,ExpressionUUID->"bb2c26d3-363f-4ace-ad6e-c7c320a2fa28"]
}, Open  ]],

Cell["Customize number of shots:", "CodeText",
 CellChangeTimes->{{3.893848754223261*^9, 3.893848762199109*^9}},
 CellID->1600352951,ExpressionUUID->"aea35405-f7ef-4a1a-b68a-3b303e546a66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qiskit", "[", 
   RowBox[{"\"\<Shots\>\"", "->", "100"}], "]"}], "[", 
  "\"\<Probabilities\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893808543447976*^9, 3.893808549231243*^9}, 
   3.893808616093227*^9, {3.893853904631118*^9, 3.893853906227994*^9}},
 CellLabel->"In[12]:=",
 CellID->1834161430,ExpressionUUID->"06aa28d0-8c02-4cbc-906c-40064e3e7f86"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], "\[Rule]", 
    
    FractionBox["16", "25"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    "0"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], "\[Rule]", 
    
    FractionBox["9", "25"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.893808549798977*^9, {3.893808597568211*^9, 3.893808616532222*^9}, 
   3.8938476555806704`*^9, 3.8938539072362947`*^9, 3.90602837613556*^9},
 CellLabel->"Out[12]=",
 CellID->2097595562,ExpressionUUID->"03c49c0d-21c5-4320-aca1-c8b5772c9cd8"]
}, Open  ]],

Cell["\<\
Turn the Qiskit object into bytes by specifying a provider and a backend:\
\>", "CodeText",
 CellChangeTimes->{{3.887060565537656*^9, 3.8870605721740913`*^9}, {
   3.887068913202949*^9, 3.88706892615274*^9}, {3.8870706015312357`*^9, 
   3.887070611636608*^9}, {3.8898226253592873`*^9, 3.889822664870016*^9}, {
   3.89384767816005*^9, 3.893847680072053*^9}, {3.893853786006719*^9, 
   3.8938537928821993`*^9}, 3.89394038614974*^9},
 CellID->1462080954,ExpressionUUID->"12486ce6-cfef-476b-bcd8-67e3af73c57b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseEncode", "@", 
  RowBox[{"qiskit", "[", 
   RowBox[{"\"\<QPY\>\"", ",", 
    RowBox[{"\"\<Provider\>\"", "->", "\"\<IBMProvider\>\""}], ",", 
    RowBox[{"\"\<Backend\>\"", "->", "\"\<ibm_perth\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.893808750242132*^9, 3.893808756287414*^9}, {
  3.906028419467898*^9, 3.906028429216263*^9}},
 CellLabel->"In[15]:=",
 CellID->2103720465,ExpressionUUID->"94702eb5-bd8d-4a10-ba89-e76a244dc1b1"],

Cell[BoxData["\<\"\
eJwL9Az29gzhZJBkYoAAxkIG7jQGDiCLHYhhokxIbPbkzKLk0swSXUMjAwfRv7tf7l5eWl1byAjWwg\
jUjwoYkYwAAWYozQKlWaE0WzIjWBUjYzIOE4BqoDxGBuwgKMo9sSQV7II0qBCHhK5LyG/Fn/\
YkaGZE08x5AKyZAY/\
m4Ai4ZgosgroSBJgw9YHNdEZYBAlpdmRZLLb5piYWlxZBAiWZVB3guGCEKANpY/\
8PBCDXFcIiCxbd8OgFy7AysDMm5iVn5uQkQsU5oTQXlOaG0jxQmhfmqEKYy2AmsyMMYkTlMqFymVG5\
LKhcmI+ZoCpZGCBpjw0A88hFfA==\"\>"], "Output",
 CellChangeTimes->{
  3.8938087669252577`*^9, 3.90602838288619*^9, {3.90602842078342*^9, 
   3.906028431543977*^9}},
 CellLabel->"Out[15]=",
 CellID->1754509761,ExpressionUUID->"b3e18355-6d3c-4b19-bd17-423a250cc7d6"]
}, Open  ]],

Cell["\<\
Let's consider another example, that one will use more features of Qiskit \
supported in our framework.\
\>", "Text",
 CellChangeTimes->{{3.906028372139624*^9, 3.9060283831795187`*^9}, {
  3.9060284434785757`*^9, 3.906028461131427*^9}},
 CellID->893170525,ExpressionUUID->"8771a49d-2658-49a1-8473-32f7bdf43dcc"],

Cell["Generate a multiplexer circuit:", "CodeText",
 CellChangeTimes->{{3.8938538095878887`*^9, 3.893853820772553*^9}},
 CellID->1159123256,ExpressionUUID->"6a4d10f4-d971-46b9-b194-1f1a7e6e0799"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Multiplexer\>\"", ",", "\"\<X\>\"", ",", "\"\<Y\>\"", ",", 
     "\"\<Z\>\""}], "}"}], "]"}], "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.89384868181324*^9, 3.893848683383451*^9}},
 CellLabel->"In[16]:=",
 CellID->903446989,ExpressionUUID->"d346964a-93d9-4540-be76-4c3d8c6942ba"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -1}, {0.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -2}, {0.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -3}, {0.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -1}, {1.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -2}, {1.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -3}, {1.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -2}, {2.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -1}, {2.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -3}, {2.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{3.375, -1}, {3.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{3.375, -2}, {3.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{3.375, -3}, {3.625, -3}}]}}, {{{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{0.625, -3.375}, {1.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"X\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{1., -1.09375}, {1., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{1., -2.09375}, {1., -2.625}}]}}}, {}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{0.625, -1.}, {0.90625, -1.}}], 
       LineBox[{{1.09375, -1.}, {1.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{GrayLevel[
        0], Opacity[0]}], DiskBox[{1., -1.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{0.625, -2.}, {0.90625, -2.}}], 
       LineBox[{{1.09375, -2.}, {1.375, -2.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{GrayLevel[
        0], Opacity[0]}], DiskBox[{1., -2.}, 0.09375]}}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{1.625, -3.375}, {2.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Y\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {2., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -1.09375}, {2., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -2.09375}, {2., -2.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
      0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.90625, -2.}}], 
      LineBox[{{2.09375, -2.}, {2.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       DiskBox[{2., -2.}, 0.09375]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
      0.3], CapForm[None], LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
      LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{GrayLevel[
       0], Opacity[0]}], DiskBox[{2., -1.}, 0.09375]}}}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{2.625, -3.375}, {3.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"Z\"\>",
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{3., -1.09375}, {3., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{3., -2.09375}, {3., -2.625}}]}}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
      0.3], CapForm[None], LineBox[{{2.625, -1.}, {2.90625, -1.}}], 
      LineBox[{{3.09375, -1.}, {3.375, -1.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       DiskBox[{3., -1.}, 0.09375]}}, 
     {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
      0.3], CapForm[None], LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
      LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{GrayLevel[
       0], Opacity[0]}], DiskBox[{3., -2.}, 0.09375]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->{227.27682495117188`, Automatic}]], "Output",
 CellChangeTimes->{3.893848683954049*^9, 3.906028436229907*^9},
 CellLabel->"Out[16]=",
 CellID->1401347825,ExpressionUUID->"a6171cac-e1a6-48a1-94a1-052e1fde2334"]
}, Open  ]],

Cell["\<\
Decompose a complex circuit (such as Multiplexer) into simpler ones and \
return its Qiskit circuit:\
\>", "CodeText",
 CellChangeTimes->{{3.893848665533226*^9, 3.893848710484809*^9}},
 CellID->1102092022,ExpressionUUID->"2245baa2-b857-4149-8740-7be09d84ee48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuitOperator", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Multiplexer\>\"", ",", "\"\<X\>\"", ",", "\"\<Y\>\"", ",", 
       "\"\<Z\>\""}], "}"}], "]"}], "[", "\"\<Qiskit\>\"", "]"}], "[", 
   "\"\<Decompose\>\"", "]"}], "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.893808793593095*^9, 3.893808855710444*^9}},
 CellLabel->"In[17]:=",
 CellID->692330592,ExpressionUUID->"a84eb5ca-f455-400c-929d-09707627cfb7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/2DZ/xz8z4P/zeB/P/h/nX1/bcHcZT8PbaWLl0cXx4kuzssUL48pjhNTTLv1
99deeKr2+F21mVfWbj23dtPptRtOq/36pJdW1KfUbvxhbcZZtbsuqj08o/bs
I7XFC1K/XcY7RTwUXRwnuph2W7q49vzjtT/eVrv7stotZ7/UxafWrj9pWQb/
w+D/Ovhf3n1p7Y//U5vz+LIfBgAIzs5uKF3bN36M3nqtfIxe13u2a/hC1X50
3vLY1tEOAwO15/74v3cpXHdC7cpjcmTw55ffwzB4BDcw0A66eCi6OEh0cV6m
eCimOEhMMe2wdEntid8tu0vhlrNrV38v34p6+in/ew/DPH83aQNFPDy6OEh0
Me2waH7t0TuW3aVw0+m1q6bmKOLBH77ph8vuYXj09tqieak/BgBAPXZ2Qynn
MXoT//2whnu6yj86b3ls62itJQuX3XZ+43/nu6zaKIPHGTza4DGhhXTxUHRx
kOjivEzxUExxkJhiWmvenNr919WuO741K+rbptWefrA20J/6UzGOKOLh0cVB
ootprednLbvlIO9Ng3Vz9bG1u3+x7ID+YQ4Aw/X398+YMeOYY47Zb7/9ttlm
m9e85jVrrrlmT0/PyiuvvM4662y00UbbbbfdwQcffOKJJ959992p3yzjk53d
8Ez82ley9lxTv1Pw+D0/PXfCK17RcOdY+UfnLY9tHa3ywlO13/2yds1xrbm4
OjyDx5z5y9qfnkr9CRkvdPHw6OII0cV5meLhMcURYoppiYH+2lMPLrvHoOXL
6cH8+r9qD9/sH3vSGop4hejiCNHFtMTSxcu+jGnGmW3p4pvPrD12l2+OAKi6
/v7+K664Yu+9916z8Y2vI73xjW887LDDnnjiiYwjT5s27ZTGHnjggdI+I53C
zm6FtPUxel3bbdvw4B6d93Js6yjuhdnLvlq3HRu6FTL4KoOvBQXp4hWii5NH
F+dlileIKU4eU0xBAwO1Wfcsu6+g3cvpq46t3XN5bfGC1B+YDqeIR0YXJ48u
pqD+pbWHbqpd26LHHGXk2v+s/f6GZS8HQNUsWLDg2GOP3WCDDRou7Uaz8sor
f/7zn3/uuedGHry/v3/VVVfN+LPTp08v/yMTnJ3dCln2GL2M28ULPEZv4le+
3HA4u7omHn1k8s8eJLZ1FDG4yRrcal313TLuWPjfC63ftbmjKF28QnRx8uji
vEzxCjHFyWOKKWLhn2q3X1Decnowvzpx2SMdoGmKeGR0cfLoYop44anazWeU
2sU3ne5f5QBUSH9//w9+8IMpU6Y0XNflscEGG9x0000rvMTMmTMz/kh3d/eL
L76Y5LMTmZ3dyIzyxXxNPUav5yfnTFhj9Ybj+UGPzvv/sa2jaYPbq8FNVpl7
uv+/uTvD5o7m6eKR0cVpo4vzMsUjY4rTxhTTnOUPWCjhH3XWzd2/8MgFmqSI
60YXp40upjnL/jHOjaX+Y5yhDL7og9P9qxyA8e+ee+7ZZpttGi4Um9LT03PO
OecMf5Vzzz034+ff9KY3pfr4RGZnVzdd79mu4Sw19Ri9rm3f1fCA667r0XnD
Y1tHE8p/wELdzZ1HLtAcXVw3ujhhdHFeprhuTHHCmGKaUP4DFkbGIxdojiJu
FF2cMLqYJpT/gIWR8cgFgPHtlFNOmTx5csMVXQG9vb2XXHLJ0AsdeuihGT+8
zz77JDwJhGVnVzc9Pz036zF6u38w19Em/lvj2fTovBGxrSOvhS/Wbj4z8Z5u
KDPOrC3yWCNy0sV1o4sTRhfnZYrrxhQnjCkmr2f/kOwBCyMz88raQH/qM0JH
UcSNoosTRheT12N3Jv7HOEMZfBuP3p76dADQaosXL/7Upz7VcDnXCiuvvPID
Dzyw/OV22mmnjJ+cOnVq2rNBTHZ2jdKqx+j1/ORHE1b36Lwcsa0jl/nP16af
kn5DNzw3nFpbMDf1eaGj6OJG0cWpoovzMsWNYopTxRSTy1MP1q4+Nv0qenju
utgTzMhBEWdEF6eKLiaXh29OX74r5KGbln1vFADjw6JFi3bbbbeGy8LWec97
3jPwUn+ss846GT92zTXXpD4lRGRnl5Gu97y74USN+TF6XX/d+KthPDqvXmzr
GLsXn6ldf1L6fdzIDL6rF59NfXboHLo4I7o4SXRxXqY4I6Y4SUwxY/fE72pX
TU2/fh6Z26bVli5OfXboEIo4O7o4SXQxYzQwUHvgV+lrt27uv9Z9CwDjwcKF
C3feeeeGa7l6Jk6cuPHGG+++++4f/ehH/+Vf/mX//fffa6+9Nt98856enlH/
7BlnnPHEE09k/8ycOVZK1GFnl5Hij9GbeOi/NpxJj85rENs6xmj+nNr1P0i/
g2uUwfc2//nU54gOoYszoouTRBfnZYozYoqTxBQzRk/eW7sy5B0Ly3P7+Z63
wJgo4uzo4iTRxYzRg79OX7gZeeD61CcIgML23nvvhmu5P7f22msfdNBBV111
1YIFC+oeat68eRdeeOGee+7Z1dXV6CBvectbLr300oxX2XDDDUs+A3QKO7vs
TPxq84/R6zn37Al9fY3+dPduuyb/dDFjW8dYLPxTbfrJ6fdu2Zl+Sm3hi6nP
FJ1AF2dHF5cfXZyXKc6OKS4/ppixeObhKN+dnZHfXuLfeDI6RTxqdHH50cWM
xSO3pq/aUfPwjNSnCYACvva1rzVcBw6zwQYbnHjiiY3uVRjpzjvvfOc739no
aDvssEPGa/393/99Wz8yncvObtQ0/Ri9rq0bDuxLj84b0/P3KhjbOka1dFHt
ph+m37WNJTed7qm2jE4XjxpdXHJ0cV6meNSY4pJjihnV3CdrV38v/Wp5LLnX
l50yGkU8lujikqOLGdUTv0tfsmPM43enPlkANOVHP/pRw4Xcy3p6er70pS/N
mzcv78GXLFly4IEHjnr8kb797W+348MyDtjZjZplj9FbY41Gw9XoMXoT//WQ
hgPZ1TXxmKOSf66wsa1jVPdenX6/Nvbc5yoro9HFo0YXlxxdnJcpHjWmuOSY
YrItXVK78b/Tr5PHnmceTn3KiE0RjyW6uOToYrItmFu75vvpG3aMueY4X4EK
0Hluu+22yZMnN1zLvWTddde94YYbirzK/vvvn/0SI11++eWt+oyMM3Z2Y8nE
r/5b1h5txGP0es49a8JqqzX6Ex6dlx3bOrI998f0m7W8mfNo6rNGbLp4LNHF
ZUYX52WKxxJTXGZMMdkeuD79CjlXfn1SbcnC1GeNwBTxGKOLy4wuJsPAQO22
n6av11z5n5/4wiaATrJgwYJNNtmk4drvJZttttljjz1W8IUWLly48cYbZ7/Q
Cp566qmWfEbGHzu7MaZru20bDtiU9Xou+rOn4XW98x0Nf9ij80aLbR0Zli6q
TT8l/U4tbwbfsy+JIIMuHmN0cWnRxXmZ4jHGFJcWU0yG52fVrpyafoWcN7+7
IvWJIzBFPPbo4tKii8nw2F3pi7WJPHpH6hMHwJh9+tOfbriQe8mb3/zmVt08
cPPNN3d3d2e/3JD111+/JS/KuGRnN8b0nJf9GL3dhn5y4hc/33AaPTpvDLGt
I0NnfTHE8PgqXjLo4jFGF5cWXZyXKR5jTHFpMcU00nFfDDE8viSCRhTx2KOL
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
qSUKRdxcdHFbo4sZssbqa1z8rReT92bL84sjF7xijTVTn12ASpsyZUqtVnvs
sceyF3I//vGPS/gF+qJFi7Lfxr333tv0wR966KG//Mu/HPvaNdukSZMuv/zy
Fn72VPryf01GcF1vfEPyZXxnZUyPzhvuL9bu+fm05G+7gzL4d7Jtf9/pPF//
5wuS78LakX/f96epTy2B6OK80cXtji7OyxTnjSlud0wxQ7q7J178rXnJV7/t
yE7v+Hjqs0sUiriJ6OJ2RxczZIN1Nklemm3K66e8NfXZBai0vr6+Wq12zjnn
ZPxMV1fX008/XcIv0B9++OGMt7HaaqsNDAw0d+QFCxa89a0NG6enp+dDH/rQ
eeedN/gGFi5c2N/fP/h5r7322i996Uvrrrtuoz+1xhprPPjgg609A+Vz04KM
8dF5w3Xvukvyt91Bsa1juB8d9ofkW7B25Mx/eyj1qSUQXZy7KXRxu8+wLs7J
FOf+O2aK232GTTEve+26myZf+rYpn97zhNRnlygUcTNNoYvbfYZ1MS/bcct9
k5dmm/L+d+yX+uwCVNrymxYOOuigjJ9529veVs4v0KdPn57xNrbddtumj3zg
gQc2Oux222133333NfqD8+bN+8pXvtLd3V33z26xxRZLlixp+l1F4KaFiifr
0XldXRn/p4lHH5n8zXdKbOsYLvn+q025/KglqU8tgejiXNHFJUQX52WKc8UU
lxBTzJCt3rRz8qVvm/KNj12Y+uwShSLOG11cQnQxQ/bZ4bDkpdmm7Pu+r6c+
uwCVtvymhU033TTjZw466KByfoF+5plnZryNz3zmM80d9sYbb+xqsED9xCc+
sXTp0lGPcPHFF0+ePLnuEaZOndrcuwrCTQtVTvaj87r32rPrr7dpeKLXW7fn
oguSf4SOiG0dQ3p7Jifff7UvE7t7Up9gotDFY48uLie6OC9TPPaY4nJiihmy
7aZ7Jl/3tilH7X9F6rNLFIo4V3RxOdHFDPnYTv+RvDTblE/sfGTqswtQaX19
ffPmzWv0O/3lTjnllHJ+gX7IIYdkvI3TTz+9ucNuueWWdQ+45557jv37Js47
77xGJ3D27NnNvbEI3LRQ5WQ9Om/9v+y5+Gc9Pz57Qt9qjX6ke8/dk3+Ejoht
HUNWXWmN5Puv9mXlyQ3/3wVVo4tzdIQuLuc86+KcTHGOv12muJzzbIp52Q5b
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
2KAlB6cIO7uhZD06b8KEiUd+s/hLdH/sow1fYKWVes44LflJiBDbOkYa6K9N
Pzn9pqx4Bj+FJ9kyki4eii4OEl2clykeiikOElPMSH96Kv1iuCWZeVXqU0k8
inh4dHGQ6GJGmnV3+hptSR6/K/WpBGCYTTfdNGP5N+gDH/hAq15r7ty573zn
O7NfbkhXV9fgzzfxKnvuuWfdA955550t+RSbb775yIOvtdZaLTk4RdjZLU/2
o/O6dn5/a17lsosnbPT6hq/y1s16rvhF8lORPLZ11PXwjPSbsuJ55JbU55GQ
dPHy6OI40cV5meLlMcVxYoqp69Zz06+Hi+dPT6c+j8SjiIeii+NEFzPS0iW1
605I36QFc+3xtaWLU59KAIb53Oc+12hhNuSCC1rwrdUvvPDCX//1X4/6WkM2
2mij5l5ol112qXvAmTNnFv8Ug7baaquRB19ttdVacnCKsLNbnqxH5629ds/P
Cj06b3h6fnDChJ7Gj9H7zP9JfiqSx7aOuhbNq119bPqtWZEMvv9F81OfR0LS
xcuji+NEF+dlipfHFMeJKaauJ2amXxIXzK3npj6JhKSIh6KL40QXU9f916Uv
04K575rUJxGAP/frX/+64QrwZVOmTJkzp9Di5Pe///2oj3RYwYc//OHmXmvH
HXese8AHHnigyEcYUvfWi0mTJrXk4BRhZ9c76qPzvt2CR+cNT/dH9mn4Yqus
3HP2GclPSNrY1tHIg9PTb82K5Pc3pj6DRKWLe3VxsOjivExxrykOFlNMXQP9
tRkd/W3aU2vPz0p9EglJES+PLg4VXUxdi+bVfvV/U/dpgVx3Qm3Ri6lPIgB/
bmBgYIMNNshYBy633XbbzZ/f5D+q/NnPfrbWWmuN+hIrOOqoo5p7ue23377u
AR966KHmDriCwVMx8uBdXV0tOThF2NmN8ui89/9t61/xFxdOeG3D/wfS9fYt
k5+TtLGto5H+pbWbTk+/QWsuN5+x7P1DXbpYF0eLLs7LFJviaDHFNPLiMx38
+LL7f5X69BGVIu7VxfGii2lk9n3pK7XpPNmax3ID0GJHH310o1XZcFtttdUf
//jHXEf+wx/+sNdee9U9Wk9PT1dXV8bL/fKXv2zu4yR50kJvb29LDk4RdnZZ
j8571ata+Oi84Zl4wnETursbvezEQz6X/LQkjG0dGV6YXbvqu+n3aHkz+J5f
eCr1uSMwXayLo0UX52WKTXG0mGIyPDwj/fK4idx42rKvAoe6FHGvLo4XXUyG
uy5OX6xN5M4LU584ABp44YUX1mx8/+pwq6+++jHHHPPii6M/N+f222//+Mc/
3tvb2+hQX//617Nf65lnnmnu4+yyyy51DzhzZmtunttqq61GHnzVVVdtycEp
ouI7u1Eenfetb7Tvpbv/4UMNX3i11XrOPSv5yUkV2zqydeKXRPhiCLLpYl0c
Lbo4L1NsiqPFFJOhI78kwhdDkKniRdyri0NGF5OhE78kwhdDAAT3/e9/P2NB
uIK+vr6PfvSjZ5xxxh133PHcc88tWbJk4cKFs2fPvuuuu84+++zPf/7zG220
UfYRBn/m0ksvzfiB17zmNU1/lj322KPuMe+8886WnKvNN9985MHXXHPNlhyc
Iqq8sxvl0Xk7va+9r37JhRNe/eqGr77N1snPT6rY1pGt474kwhdDMCpdrIuj
RRfnZYpNcbSYYrJ13JdE+GIIslW5iHt1cdToYrJ13JdE+GIIgOCWLl36tre9
rdGqrLX23Xff/v7+b37zmxk/s8ceezT9WT7ykY/UPeb06dNbcq423HDDkQcv
cpcFrVLlnV3mo/Ne2fOzn7b7DUw87rtZj9H78r8mP0VJYlvHqDroSyJ8MQRj
oYt1cbTo4rxMsSmOFlPMqDroSyJ8MQSjqnIR9+riqNHFjKqDviTCF0MAdIT7
77+/r6+v4cqwRQ4++OCBgYHBl/u7v/u7jB/7xje+0fQH+exnP1v3mJdddllL
TtTaa6898uBbbLFFSw5OEZXd2Y3y6LxvHlHO2+jea8+Gb2L11Xt+ck7yE1V+
bOsYiydmpt+yjZ6ptSfvTX2m6AS6WBdHiy7OyxSb4mgxxYxqYKB292WpV8tj
yK9OrM3z15nRVLaIe3Vx4OhiRrV0Ue2WH6Wv2lEz46zakkWpTxYAY3PRRRf1
9PRkrA+L6O7uHn4rwgYbbJDxw5dccknTn+KII46oe8yzzz67+CkaGBjo7e0d
efC/+Zu/KX5wCqrmzq5n2k+yHp33vh3LeycX/2zClCkN38m7t01+rsqPbR1j
9Nid6Tdu2XnsrtTniA6hi3VxtOjivEyxKY4WU8xY9PfX7vx5+jVzRq47vvan
p1OfJjpBNYu4VxfHji5mLBYviP4VqDf+sLZ4furTBEAeZ5999sSJExstzJq2
7rrrXn311UOv8uyzz2b//KxZs5r+CCeddFLdY06dOrX4+XnqqafqHnyfffYp
fnAKquzOTsLGto6xe+SW9Nu3Rnnk1tRnh86hiyVadHFepliixRQzRv1LardN
S79yrptr/7P2fPNXuagWRSwBo4sZo4Uv1m44LX3t1s0Np9YW/in1CQIgv8su
u2z11VcvepvCy7q6uvbdd9/Zs2cPf4krr7wy44+su+66Rd7/FVdcUfewhxxy
SLETs8wdd9xR9+Bf+cpXih+cguzsJFps68jl0dvTb+JG5tE7Up8XOooulmjR
xXmZYokWU8zY9S9d9kXVydfPK+RX/7f2wuzR3zwsp4glYHQxY7doXu3mM9OX
7wq56fRlN1QA0KF+//vfv/e97y1+x8K22257yy23jDz+d77znYw/tcsuuxR5
8/fff3/dw+6+++5FDrvc+eefX/fgp556avGDU5CdnUSLbR15PfG72lXfTb+b
W57Bd/LEzNRnhE6jiyVadHFepliixRSTy0B/7Z7L0y+kh3L9SbUXn019Uugo
ilgCRheTy5KFtVvPTV/BQ7nlR8u+ugKAjjYwMHDeeee95S1vaeJehcmTJ++7
7751b1dY7sMf/nDGH//qV79a5J0vXry4t7d35GE32WSTIodd7qijjqr7nq+/
/vriB6cgOzuJFts6mjDn0dr0U9Lv6W44tTbnsdTngg6kiyVadHFepliixRST
18BA7Y//U7v6e+lX1Ldf4EnU5KaIJWB0MXktXVy775r0RTyYe69e9mYAGB8G
Bgauv/76Aw888LWvfe2o9yq8+tWv/tjHPnbeeec9//zz2YfdaKONMo5zwQUX
FHzbm2+++cjD9vT0LFhQ9Ka6f/zHfxx55K6urrlz5xY8MsXZ2Um02NbRnMH9
1OCuKuGebnBraU9Hc3SxRIsuzssUS7SYYpozb07Kf+Z57fG1Wfcsu30C8lLE
EjC6mObMeWzZv4hJ1cXTT6k992jqUwBA2zz22GNXXHHFiSeeeMQRRxx66KFf
/OIXDz/88GOPPfb000+/8cYbR71RYcjcuXO7uroyblp45JFHCr7V/fbbr+6R
Z8yYUfDIb3jDG0YedqONNip4WFrCzk6ixbaOIp5L8ciFwVecY09HAbpYokUX
52WKJVpMMU0bGKj9IcUjFzxggSIUsQSMLqZpqR65sOwBC4tSf3gAOsF1112X
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
XVwRXZwruni6FStW7Lbbbk3fkN3zhje8YezpFtliiy0qvuy8887LfUmIRZtU
ZPANr2/6s9TyrXsGX9f8j8K4Xc/aokpo3RMPNM4/JP/nuOm54JCJ5wYt0sUV
0cVZoosB+se9V+UfnteaK45pPLUs99WhEMbp6pios8RETYvGRhs3nZG/dtea
G3828fSgFbq4Oro4S3TxGpYvX/72t7+96btobYaHh7fZZpt3vvOdH/jAB/7x
H/9xzz333H333bfbbruRkZHaf/uDH/zgwQcfrP6axx/3/yP+iDapSOe37hn+
zD83/Wl0u54mUSW06LeLGuf/e/5PcM1y/iHut0CrdHFFdHGW6GKAPnHfdfnH
5opcsaCxyv0WaIFxujom6iwxUdOKsbHGzWfnL9yK3HSm+y3QEl1cHV2cJbp4
De9973ubvov+2Oabb7733nsvXLhw2bK175EvXbr05JNPfve73z04ONjsm7zi
Fa84/fTTKx7lRS96UeIrQHzapDrDn2//1j0jxx4zsPHGzf710G67Zn91MaNK
aMXSxxo//4/8n92q8/PDGku9nWmBLq6OLk4fXQzQDx68Of/AXJurf9wYXZn7
ShGecbo2Jur0MVHTitt+nr9qa3PrefYWqKeLa6OL00cXT/WFL3yh6Ttwinnz
5h122GHNdhWmu/7661/72tc2+25vetObKh7rb//2b3v6kimRNqlN27fuGdyh
6Y/q07fraemeP30YVUKtp5Y1Lvp2/k9treTiI93Vlnq6uDa6OHF0McCs9+i9
jYXfyD8tt5Jfnpb7YhGecbqVmKgTx0RNrXuvzl+yLeaeK3NfLMLTxa1EFyeO
Lp70X//1X03fQn8wMjLy6U9/eunSpTP95itXrtxrr71qv/90X/nKV3rxYima
NqnNxK17Nt202Y9Vs1v3DP/zJ5v+KA4ODn/9a9lfV9ioEmrd+LP8n9daz42n
575ehKeLa6OLE0cXA8xuK1cUswO8Og/9KvclIzbjdCsxUSeOiZpqSxY3zp2f
v2FbzML5jd89kvuSEZsubiW6OHF08WrXXHPNuuuu2/Rd9LQtt9zykksu6eRR
9txzz+qHmO7MM8/s1mtk1tAmrWT48/+7qhem3bpn5NgfDmy0UbN/4XY91VEl
VFt0R/4PazPNI3fmvmrEpotbiS5OGV0MMLsF//PZ03PBoY0VM/5f/NBHjNMt
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
3njjZcuWJXgaz372syuexqc+9amZfsMzzzyz+u4NtSwtlEKbtJfBN76hlR+E
wbe+JftTLS59WCVUWHRH/k9hvcgjd+S+skSii9uLLu5ddDHAbDIrf1Gy8BuN
0ZW5ryxhGKfbjom6dzFRM9XlP8xfnV3PZT/IfVmJRBe3HV3cu/RhF2+77bYV
76I99tgjzdPYcMMNK57GggULZvoNv/e977XyY1Jhti4tzJ07d+PZZcPttsv+
n47iUnu7nqmGv7J/9idcVsbfk7l/LAjkI7t+JfunsF7kw7vsn/vSEogubiO6
uKfRxQCzyeH7Xp19+u1FtnvJzrkvLVEYp9uLibqnMVEz6Rmbbvazry7L3ptd
zxlfe+qZz3h27qtLFLq4vejinqYfunju3LmTv7++//77q99Cxx13XIJfo69Y
saL6afzqV7+a6fe0tNDM+HugwysTzeBL/p/s/+koKy3drmeqP9l85KcnZH/a
BWX8Pdmz9zvl+T8fOjX7p7Be5Msf/GnuS0sgunim0cW9ji4GmDVGhuf87KvL
s0+/vcguO3w099UlCuN0GzFR9zomaia9eO6fZS/NHuUlz3tV7qtLFLq4jeji
XqcfunjjjTee/P31ggULKr5ycHDwkUceSfBr9LvvvrviaWy00UZjY2Mz/Z6W
FpqxtCAt3q5nqqFd35H9aReUfqgSWnfcvz6Q/SNYL7Lgc/flvrQEootn3BS6
uNdXWBcDzBZbP/fPs4++Pcq+u38799UlCuN0O/OeibrXV9hEzR+87dUfzl6a
PcquO+yV++oShS5upyl0ca+vcB908dSlhb333rviK7fffvs0v0a/+OKLK57G
Tjvt1Mb3bHFpYd68eS9+8YvX+n+ytFAKbTKjVN2uZ3Cw4v80fOBXsz/5UtIP
VULrsn/+6lHOPGBV7ktLILp4RtHFCaKLAWaN1/zpO7KPvj3Kfh86JffVJQrj
9Exjok4QEzWT3vffP5e9NHuUD/zVl3JfXaLQxTONLk6QfujiqUsLL3/5yyu+
cu+9907za/Sjjz664mn80z/9Uxvfs9nSwlZbbfXud797//33P/PMMxcvXjz+
lV/84hfX+pWWFkqhTVpP9e16hnZ/9+Drdmx6oZ+z5cgpJ2Z/CUWkH6qEFq0z
sl72z1+9y8jwnNwXmCh0cevRxWmiiwFmjZ1e8TfZ594e5Wt7np376hKFcXpG
MVGniYmaSR962/7ZS7NH+cg7vpb76hKFLp5RdHGa9EMXTy4tLF26dLBi3WVg
4Dvf+U6aX6N/8pOfrHga3//+99v4npNLC8997nPf+c537rfffqeffvqiRYum
f6WlhdJpkxn8J67idj3Pe+7IqSeNHHfMwMYbNfuSoXe/M/tLKCL9UCW0aKP1
n5H981fvssG6s61QaJsunkFH6OI011kXA8wWb/rz92Wfe3uU+XtfmPvqEoVx
emaTnok6zXU2UfMHe+16UPbS7FH22e3g3FeXKHTxzDpCF6e5zn3QxZNLC9df
f331V1511VVpfo3+lre8peJp3HDDDW18z5tvvvm000576KGHar/S0kLptEmL
qbpdz9DQ8De//v9/2aebLxFNfNlB2V9I/PRDldCizTbeIvvnr97lGRtunvsC
E4UubjG6OFl0McCs8dZXfyj73NujHPpPV+S+ukRhnG49JupkMVEz6R/fdUj2
0uxR/tfuR+S+ukShi1uPLk6WfujiyaWFn/zkJ9Vf+fjjjyf4Hfro6OgznvGM
Zs9hvfXWW7lyZU+fgKWF0mmTVlJzu553v+uP/kv42lc3vdzPe97IaT/N/nKC
px+qhBZtvMEzs3/+6l02XG/T3BeYKHRxK9HFKaOLAWaNN2///uxzb49y8D9c
nPvqEoVxusWYqFPGRM2kj/31/Oyl2aP8wzv/PffVJQpd3GJ0ccr0QxdPLi0c
cMABFV+2ySabpPkd+hVXVC2Wv+Y1r+n1E7C0UDpt0tJ/3P6y+e165s4dOfWk
qV88suDogQ03bPblQ/9j9+wvJ3j6oUpo0bpz1s/++at3mTO8Tu4LTBS6uKV2
0MUpr7YuBpgtdt72b7PPvT3KgR9dmPvqEoVxutUZz0Sd8mqbqPmDD7/t37KX
Zo+y5y4H5r66RKGLW20HXZzyavdBF08uLey1114VX/ayl70sze/Qv/rVr1Y8
jY997GO9fgKWFkqnTWpTdbuewcHhbxy4ln/yif/V9J8MDQ0fcnD2FxU5/VAl
tGhwcDD7568e5awDRnNfXQLRxbXRxYmjiwFmjddus0v20bdH+T8fOjX31SUK
43QrMVEnjomaSe9/879mL80e5X/+1ZdzX12i0MWtRBcnTj908eTSwt/93d9V
fNkOO+yQ5nfor3rVqyqexpFHHtnrJ2BpoXTapDo1t+t5125N/3u4/Z83vegv
mDfys5Ozv7Sw6YcqoXUnfvmx7B/BepGffGlx7ktLILq4Oro4fXQxwKzx0nk7
Zh99e5TPvPfo3FeXKIzTtTFRp4+Jmkm7vW6f7KXZo/zN6/fNfXWJQhfXRhen
Tz908eTSwq677lrxZW9605sS/AL91ltvrX62V111Va+fg6WF0mmTmv+sVdyu
5zlbjpxyYrN/OPLD7w2sv36zfzr0vvdmf2lh0w9VQusO3Ovc7B/BepEDPnpO
7ktLILq4phd0cfprrosBZov11tnwrANGs0+/vYhflDDJOF0/3Zmo019zEzV/
8LIXvC57afYo275o59xXlyh0cX0v6OL017wPunhyaeGNb3xjxZe9/e1vT/AL
9M9/vvm9RAYG5syZs2LFil4/B0sLpdMmFam5Xc9BB1T/86GP/0PTfz4yMnL4
IdlfYMz0Q5XQuj13OTD7R7Be5P99e9Vfd6Lf6OKK6OIs0cUAs8l3P3VT9um3
F3nFC1+f+9IShXG6OibqLDFRM2m9ORucecCq7L3Zi2yw7mz7XQlt08XV0cVZ
0g9dPLm08OpXv7riy17/+tf3+rfny5Yt23zzzSuew3bbbdfr59Dov6WFuXPn
bjy7bLjddtn/0xEzNbfr2W3X+u9w1s8G/2zbpj+iL37RyBmnZn+ZATP+nsz9
Y0Egb9vhg9k/gvUif/WaPXJfWgLRxc2ii3NFFwPMJp/b49js02/Xc9aBo5s/
6zm5Ly1RGKcrYqLOFRM1Ux31z7NwgfD7n7kt93UlEF1cEV2cK/3QxXPnzl39
y+tXvvKVTd8hAwPbbrttr397fsQRR1Q8gXEf/vCHe/0cGv23tDD7XPnE49n/
0xEzVbfr2XLLkZOb3q5naka+f9TAuus2+zZD/3OP7C8zYMbfk7l/LAhk6WP5
P4X1Iku9zZlCFzeLLs4VXQwwm9x7Vf7pt+u55Kjcl5VIjNMVMVHniomaqW78
Wf7q7HpuODX3ZSUSXVwRXZwrfdXFf/EXf9H0bTYw8IIXvKCnj758+fIXvvCF
FU9g3KGHHtrT57CapYXSaZO1ZviLlbfrOfCrrX+rob0/2vRbzRkZOfLw7C82
WvqqSqg1NtY4/9/zfxDrbs4/ZOJ1wSRdvNbo4ozRxQCzyeP35R+Au55fnpb7
shKJcbpZTNQZY6Jmqnuvzl+dXc89V+S+rESii5tFF2dMX3Xxm9/85qZvj4GB
DTbYYHR0tHePfuCBB1Y8+mqXXnpp757AJEsLpdMm01Nzu55dd5nZdzvztMGX
btPsuw3+t5e4dc8a6asqoRVXHZf/g1h3c/WPcl9TgtHF06OL80YXA8wmK1fk
H4C7nnuuzH1ZicQ4vdaYqPPGRM1Uj9+fvzq7nsd+nfuyEokuXmt0cd70VRe/
733va/beWO2WW27p0UM//PDDm266afWjDw8PL126tEdPYCpLC6XTJtNTdbue
LbYYOfknM/2GI0cdObDOOs2+5dBHPpz9JYdKX1UJrbjz0vwfxLqbu36R+5oS
jC6eHl2cN7oYYJa54pj8M3B389uHc19TIjFOrzUm6rwxUTPVqqca530rf3t2
Mecd3Fi1IvdlJRJdvNbo4rzpqy7+5Cc/2fTN9rQFCxb06KHf9a53VT/0uJe+
9KU9evQ1WFoonTZZIzW36zngK+192/G+aPpt11ln5D+PzP7C46SvqoRWLP9d
Y+E38n8c61bGX8vyJbmvKcHo4jWii7NHFwPMMr/5Zf4xuIu54pjcF5RgjNPT
Y6LOHhM1a/jVufkLtIu55ZzcF5RgdPH06OLs6asuPuSQQ5q+MZ6277779uJx
jz766OrHXe39739/Lx59OksLpdMmU1Nzu55d3t7+dz7j1MH/9pJm33nwZS8d
OfO07C8/SPqqSmjR9Sfn/zjWrdxwSu6rSTy6eGp0cYToYoBZZtVTjQsOyT8J
dysP3Jj7ghKMcXqNmKgjxETNGpYszl+gXczvFuW+oASji9eILo6Qvuri888/
v9m7YrW5c+euWrWquw/6y1/+cqONNqp+3NXmz5/f3YduxtJC6bTJ1FTerudP
Rn56QifffOTIwwfmjDT79kN7fzT7yw+SvqoSWvTovfk/jnUr/uQf0+niqdHF
EaKLAWaf287PPwl3JRcc2li1MvfVJBjj9BoxUUeIiZrprvpR/hrtSq48Nvel
JB5dvEZ0cYT0VRc/+uijg4ODTd91TzvjjDO6+IiLFy9+4QtfWP2Iky644IIu
PnQFSwul0yaTqbpdz8DA8Ff37/whhj74gaYPsN56Iz84KvtFiJC+qhJaNDbW
uPSo/B/KOs+l/znxWmANungyujhIdDHA7LP08fzDcFdyW6LjLkpinJ4aE3WQ
mKiZ7qFb89doV/LgLbkvJfHo4qnRxUHSb1388pe/vOKNN26XXXbp1mM9+eST
r33ta6sfbtLg4OD413froatZWiidNlmd6tv1DL79bd15lDNOHdj6xU0f5c+2
HTnrZ9kvRfb0W5XQol9fnf9DWef59TW5ryMh6eLV0cVxoosBZqVrfpx/Hu48
S3UU0xinJ2OijhMTNdONrmpceHj+Ju0wP/+PiRcCa9DFk9HFcdJvXbzvvvs2
e0tMOvHEEzt/oN/+9reve93rah9r0tZbb935g7bI0kLptMnqVN2uZ/PNR07q
6HY9UzNy+KEDI81v3fNP/5D9UmRPv1UJLVq5vHHewfk/mnWS8ec//ipgOl28
Oro4TnQxwKy06I78I3GHueaE3BeRkIzTkzFRx4mJmrW685L8Zdph7rgo90Uk
JF08GV0cJ/3WxRdddFHT994fzJ079/HHO7osd955Z+0tHdbwnve8p1uvsZal
hdJpkzm1t+v5Shdu1zM1Q+9/X9MH22D9kWN+kP2C5E2/VQmtu/eq/B/NOsm9
V+e+gkSli+fo4mDRxQCz0thY4+rj80/FbWfh/MbvHsl9EQnJOL06JupQMVGz
VitXNC76dv5KbTsXHuF/j8Pa6eLV0cWh0m9dPDY2Nm/evIp34Go777zz73//
+/Ye4qSTTnrmM59Z+xBr+NrXvtbdV1rB0kLptEnN7Xre9lfdf8SfnTzwgqb/
6Rh81SuzX5O86bcqoXVjY40rF+T/gNZerjx24vnDWuliXRwtuhhgtlr2ZOO8
b+WfjdvL3ZflvnxEZZyeY6KOFxM1zTx6T/5KbTuL78p9+YhKF8/RxfHSh118
4IEHNns/TPWa17zm17/+9Yy+87333rv77ruv9buNjIwMDg5WPNzZZ5/do9c7
naWF0mmTqtv1PPvZXbxdz9QMH3rwwNBQs4cd/uS+2S9LxvRhldC6pY81zv1m
/s9oM834c/a3d6mgi3VxtOhigFns/uvzj8dt5PIfNkZHc187ojJOzzFRx4uJ
mgo3n52/WNvITWfmvnAEpovn6OJ46cMu/u1vf7tZ882ZqTbZZJOvf/3rS5Ys
qf2e11577Yc+9KE5c+Y0+1bN9gQmLV68OMFrX83SQun6vE1qbtfzb/v17qGH
/u5/NH3gjTYaOfaH2S9OrvRhlTAjJf6RCH8Ygmq6WBdHiy4GmMVK/CMR/jAE
1fp8nJ5jog4ZEzUVSvwjEf4wBNV0sS4OmP7s4m9961sVb8U1bLzxxh/4wAd+
8IMfXHfddY899tjKlSuXL1/+8MMP33DDDcccc8wnPvGJrbfeuvo7jH/N6aef
XvEFz3/+81O+fEsLpevnNqm5Xc9b39LbRz/t5IGttmr66DvukP365Ep/Vgmt
K+6PRPjDENTSxbo4WnQxwOxW3B+J8IchqNbP4/QcE3XUmKipVtwfifCHIaim
i3VxwPRnF69atWr77bdv9n7orj322GN0dHT//fev+Jp3vetdKV++pYXS9XOb
VN6u51kjJ/24109g+OBvVN2651/+OfslypL+rBJmZOljjfMOzv95rZWMP09/
GIJaulgXR4suBpj17r8h/6jcYi4/xh+GoEY/j9NzTNRRY6Km1i3n5C/ZFnPz
WbkvFuHpYl0cMH3bxbfddtvGG2/c9D3ZJfvss8/Y0/9bzb/5m7+p+LL99tsv
5Wu3tFC6vm2Tmtv17P/lNE9jaPd3N30Sm2wy8qMF2S9U+vRtlTAji++ZuEls
9k9t1Tl3fuPRe3NfKUqgi3VxtOhigH5w+8/zD8y1ueS7jRX1f2eVfte34/Qc
E3XgmKipNbqqce1P8ldtba758cRThWq6WBcHTD938SmnnDIyMlLxzuzE0NDQ
1FWEefPmVXzxaaedlvKFW1ooXX+2ycgJP6q6Xc9b3pzumZx60sDcuU2fyet3
yn6t0qefq4QZefjWxjkH5f/s1iwLD2o8fHvua0QhdLEujhZdDNAPxsYaN5+d
f2yuyIVHTPwlC6jVn+P0HBN17JioacWqpyb+qGj2wq3IFQsmniTU0sW6OGD6
vIuPOeaY4eHhZm+Jtm255Zbnnnvu5KM8+uij1V//wAMPpHzVlhZK17dtImHT
51XCjDxwY9C9hYUHNR64KffVoRy6WKJFFwP0ibHRxo0/yz88rzUXHt5Y8mju
C0QhjNMSMCZqWrRyeeOKY/LX7lpz+Q8bTy3LfYEohC6WgNHFZ5xxxiabbNKt
dYXBwcE99tjj4YcfnvoQ55xzTsU/2XLLLRO/ZEsLpdMmEi2qhBl5+NbGwm/k
/xw3NQvnNx6+Lfd1oSi6WKJFFwP0j7GxiH9T++IjG7/XRbTMOC0BY6KmdStX
NK7+Uf7yXSNXHTfxxKBFulgCRhePu/POO//yL/+y842FnXba6Yorrpj+/Q84
4ICKf/WOd7wj8eu1tFA6bSLRokqYqcV3N879Zv5Pc6tz3sGNxffkviKURhdL
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
po2OCoWETxcAgKxRWqglSgtJRGkBoOEVi9Gie8OvOBWz8B63GQXImLvuuqvc
d/e169279zurCHvsUfZ6sOSee+7psVc9ceLE/v37dzqNgQMHTp8+vcdmAkCi
Slcowa+S6pjclhYW3pvwiQIAkEFKC7VEaSGJKC0A5EGhEM2/I/yiE5N5t7f/
o0wAZM4tt9xS7i4Jtdh1112nTJnSMcqrr74a//gXXuihC5upU6cOGDCg0zn0
79//gQce6JlpANADXlwS/kKpjsltaeGlpxI+UQAAMkhpQdIWpQWAnCi0RnNv
C7/udJon/idqaw19gADorvvvv3/w4MH1qiv06tXr1FNPffnll985xIMPPhjz
J7vuumvPvNKHH354u+2263QO/fr1u/vuu3tmGgD0jNamaMrI8JdL9Uo+SwtT
rqn2hQMA5IrSgqQtSgsA+VFoixbcFX7peVf+cmd7oQKATHvmmWf+6Z/+qfbG
wqc//ek5c+Zs/fwjRoyI+avPfe5zPfAaZ86cOWjQoE4n0Ldv3z/+8Y89MAcA
elgmbrRXZfJZWlh0X8KnCABANiktSNqitACQK8VC9OSk8KtPRxbf3z4lABpA
sVj8wx/+cMABB3Sjq9C/f/9TTz2107rCW0488cSYP7/00kuTfnWPPfbYDjvs
0Onoffr0ufXWW5OeAABBNNJebj5LC3Y+AQA61UgfdKUx4qM7QN4Ui9ELi6Np
owMvQNN+Ea1e2D4ZABpJsVj885//fMYZZ3zgAx+o2FXYbbfdvv71r//hD394
7bXX4p927733jnme22+/PdEXNW/evB133LHToXv37j1u3LhERwcgoNIFy6zx
4bfv6pIclhZmj0/4/AAAyCylBUlblBYA8qnpjWje7cFWn7m3RVteD30IAEjY
qlWrJk2adP31119xxRWXXHLJhRdeePnll48cOfKmm2569NFHKxYVOmzYsKFX
r14xpYW//vWvyb2KhQsX7rzzzp2OW5rVjTfemNzQAKTBqgXht+/qkhyWFlYv
SPjkAADILKUFSVuUFgByK8hPLviBBQC6avr06TGNhfe+973JDb1kyZJddtml
3NDXX399ckMDkBJtLe1XMcF38GpP3koLpUvd0nsHAECnlBYkbVFaAMi5pjei
+Xf00KIz749+YAGALhs5cmRMaeGoo45KaNxly5YNGTKk3LijRo1KaFwA0uap
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
    "], {{0, 864.}, {2791., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{333.4040771484375, Automatic},
  ImageSizeRaw->{2791., 864.},
  PlotRange->{{0, 2791.}, {0, 864.}}]], "Output",
 CellChangeTimes->{{3.893808805420697*^9, 3.89380885691052*^9}, 
   3.906028465314211*^9},
 CellLabel->"Out[17]=",
 CellID->1129211546,ExpressionUUID->"35bd7ef9-e791-4c9d-b159-10aad781dc51"]
}, Open  ]],

Cell["\<\
Transpile a complex circuit (such as Multiplexer) into simpler ones and \
return its Qiskit circuit:\
\>", "CodeText",
 CellChangeTimes->{{3.893848665533226*^9, 3.893848710484809*^9}, {
  3.893853829014617*^9, 3.893853830970291*^9}},
 CellID->1462408452,ExpressionUUID->"b10ed2f9-95c4-4857-92dd-eb2bf8217c72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transpile", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantumCircuitOperator", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<Multiplexer\>\"", ",", "\"\<X\>\"", ",", "\"\<Y\>\"", ",", 
       "\"\<Z\>\""}], "}"}], "]"}], "[", "\"\<Qiskit\>\"", "]"}], "[", 
   "\"\<Transpile\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8938502985394373`*^9, 3.893850298547098*^9}, {
  3.89385049748417*^9, 3.89385054182185*^9}, {3.893853238471019*^9, 
  3.893853244049247*^9}},
 CellLabel->"In[18]:=",
 CellID->104512322,ExpressionUUID->"698b38bf-ddd7-40f4-a69c-4682bf2da133"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QiskitCircuit",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
x3b9p04tEvT7fbRseyXw9kszNLroin9myzZWDDqPFYtqJ0zrJd4duECjxN/8
47w5JnkjvFMdPlzZcW7WrNnRo0dd7WtKSkpYWBjvgfn2igeHdXbFGvF8ZrZ5
c5S5U8LauOZO4c6suPTQNz37NNOuBTq1U+v+e/pecywCgtFy67druZgm21bg
EVpu/XYtuM/FCDRO8xLvw/e0Xjun1UUPrJZtqyB03bkvrp0wrZfI0nbPL18O
YzKcGklPT2/YsKGt7IEd7du3b9WqFV/v1atXz549+crs2bPL36nzCgqNePgU
j7Wr7A+0swUE+M+deWvLmjh7m9Yen/gwzZN5itYyodCmqZjs1FspzNaUqbbE
0JkTydfIy9Ik8baZmBPJKNL3apJgf5xsQyXBdxwSv9I0RNnnZdsqCM+PsAlt
J0zrJXhu2TZLk8R5mLJYjbS0tIiIiHvK6NKly6xZs5xOZ0hICO+Kk5OTy9/2
+OOP9+jRo+L/2LJly8GDB4s1xsMnPg9Rplb2GzL4Z76t48SHmXMMHtmg7sYn
d5hmDhDPQQ0zjZzZJdtKoIM7PTKs4pKxT7aVdCkpUp8yeuMk5Um4Psulw+ou
unspnQedeP7EZ6HthJm9RIaGmUb2VjPfGFAnLy/Pbrf7+fkVFNx+ptqECRMC
AgLS09NdfyYlJdkqzNsmCg88me/Q8d06e7u2VZ874/GJDzM92VHK9i6vyY15
T0UmU/kmjhJlMpwaJOZ7RpDYqyktUnlw2PEE2SZSp+BaTQ8J3TCJXT4m20TZ
nE6qyUWTFpCaT9vD886i2wmTn/h8YltNEqcsVjIV8ABXxxsWFlZxY05OTvPm
zTt16hQXFxcbGxsSEtKlSxdLPcVD4GKyJzsdytHgqlNuJnzBzqSgX6IA3/fh
fVHVhwJvncnO7YHEFOA54+gm5WKnShJvn60cwwEmcCOX7VvBNkys0gwsYtfS
ZRtnDS6msR1zqxxFn6xca0rsIj3f7CVY2dzUPOdUkpjnpSOblIe5AM+YM2cO
74r79+9fafuJEyciIiLq1Knzq1/96pVXXsnMFH95is96MiurqhcO3no8Df/3
0hGllQKU4Emp4kmuy8eZ6N1KIBneWqTv/U8UT2FZJ3Etsdnw3vjUzlsSbJri
01dNVAvfB79yhh2ucOVeyU3ZNhmAL/cSXGKeeQ7H34qCzdOo7fKYT3R0NO+K
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
b9++rj/T09OjoqIefvjh2rVr8+1iRq0KejzZ7xWlva81YjgfOntYG1vt2nww
PfsoMz2Z76TX4Mau5UyKaeb4ogRGczheXeL0vbKtBDo4+KO6xDgpYBylxSzx
K5Xx3zSF5WXJNlQemSfUXXTvctlWikPnRa2iapmZheziYXWJD6w2zRxv7SXG
jBnDv3rEiBFVX+I9MH9p7Nixrj83b97cuHHj3r17d+/e3Zpdsf+PK22hoba7
7/J7NkI52P7GEI8/yjRPLiqo5nxf1WXzdCXtm4OvSWA0N3LZhonqEid8Yfbp
LSCK/Kvq+saXXRCFa4wN4vx+TRLwnRffhDvezq81DRGZS010dsWiaplphYxL
vGOuJonzr5hjkbf2Eq4Wd8WKFVVf6tOnD39p2bJlrj8dDodrhffJ1uyKlZGc
EWPz9+fm2dv/xn/tKuu3ZDWf76i4nD9gjkU+J4HRnNiuVWJcfeqlHN2kVeIr
p2TbSpSq18pWu2ycxIoKZdsqg+zzWl300FrZtgpC/wQIQmqZaYXsymmtEh/Z
aI5F3tpLuO6zS01NrbS9pKQkKCiIv3Ty5MlKL1m6K14wz3bXXcqexeBBej7H
NE9OWaTVk1OXmWORz0lgNFVvfLjTcmCVbFuBR2yfrVXitPWybaXIjVyt4x/v
q9exHNuidXy2mDcPq7EI6IpF1DLTCpmW6/Rcy7aZ5ljkrb1E/fr1+ZcmJiZW
2r5w4UK+vW7dus4q5/w864o7d+7cVAO/DgnxfAzXrbaHd7AF+NuaN7MFBvrP
/9Ljj+JmaLFWPwv+flyjJ8f8Jckck3xNAqP59h8XNEr8WdQm2cYCT/jh4xyN
En/yepxsYwnySPiT2rviQc+8L9teCbw/aLH2IQpuGizbXgHoKWQCa5lphezj
ISs06rtyXJ45JnljL8E71Xbt2vEWNyYmpmIHe+HChSZNmvDt3bt3r9rfetYV
86+zaeEXgR7/dr+hb7p2K/xnz+CDaX+wPR9Yzz6Km6HJWt3M/N9UjZ78r9fX
m2OSr0lgNPNHa93xGTtomWxjgScs/ccljRL/9aWvZRtLkKZBrbW3fL26DJFt
rwSG9Z2ucXxWfVIo21hB6ChkAmuZaYVs1B/naZQ4dmymOSZ5Yy/BO9Xhw4fz
lWbNmh09etTVvqakpISFhQUEBPDtUVFRorpio48V+8+bo8zdEdbGNXcHH0xl
SIe+6dmnmbZ/98HgWI2ePHLALHNM8jUJjOb/3vxRo8TDXpgs21jgCZOHJWiU
eMh//1O2sQS5v3nLHz6+rjr46z918n8f69xbtr0SeLnnXzW66KyRqbKNFYOu
A5XiaplphSzy2Q80Sjw1ers5JnljL8E71fT09IYNG9rKHtjRvn37Vq1a8fVe
vXr17NmTr8yePVtUV6wRD6d9XrvK/kA7W0CA/9yZt7asibO3ae3xgXfTrgXK
ztB6iCP/qjkW+ZwERqP1JoiJyoSrwBup+LzCGhblVq8C2bYS5chGTRLs/NpH
pwEpKVIe86dliM7vl22rIDyfLFdoLTNvPqtCTfNZxZt4W7f39hJpaWkRERH3
lNGlS5dZs2Y5nc6QkBDe+iYnJ1d9vwW7Yr8hytTKfkMG/2xsdRx4N3M2lSQN
d0/vjjXHHAVfk8BolAlzvlSXeF8108AA78DhYFurPJiy6uKz04KZgDI5nob5
DzOotHweoGXHYUuMeVOAGo3nT3wWWsvMLGSH1qhLvHWGeVOAUuol8vLy7Ha7
n59fQUE1hzas1hXzHQq+W2Fv17bqc088PvBupicXXFNu+63JjWeym5UfsWIg
PiiB0eRlKk+ir0Hi7XNwFNG7uX5BeXpaDRInfsWKb8i2kjTpe1X6gQOrfPRA
sYvSIpb875rGZ8MkdvWsbCvF4eGBStG1zMxCVnKT7ZxXk8Q8R/FMZRqUeomk
pCT+7WFhYZW2x5bRr18//qprfdeuXfq/riL6Z1MRspjckuVfuePkTonzWOF1
M23xUQmMJvfyHQ8nJi8wda8HGAQvNwmfVy9xymLs9ZhBxn6ltatWgrT17D8z
7vsuvGvavfQOR4mnk2qJma8WMp5ndi2pXmKena6fN9MWUhLMmTOH9739+/ev
tL3q/XqDBg3S/3UVoTSMbuEoVa72+emb2z685zvlGZ1O0zO5z0pgNI4SdjGN
7Vp8W+K9y5Wrjn35+BUxSovZ+YMseeFtiff9oDQbkNg0eFdwOkk5+VIuwZEN
Pv2g50pwV8zOUA6bb5pye4gy9ilHkonhs4WMS8xzDs885WevNnymPAXM/Gtj
KEkQHR3NO95x48bp/yh3oTSMnpHwRdlu3Reyvh8SGM6tYjRRth3AMFxRvHWG
bDt8GEigCu1EhELGZEcBJQl69OjBu+JVqyQ8aovSMHoGd2C5yRwSGM2t24KI
FiPALBDFABKoQjsRoZAx2VEACYSAYZSezCGB0dAuRoBZIIoBJFCFdiJCIWOy
owASCAHDKD2ZQwKjoV2MALNAFANIoArtRIRCxmRHASQQAoZRejKHBEZDuxgB
ZoEoBpBAFdqJCIWMyY4CSCAEDKP0ZA4JjIZ2MQLMAlEMIIEqtBMRChmTHQWQ
QAgYRunJHBIYDe1iBJgFohhAAlVoJyIUMiY7CiCBEDCM0pM5JDAa2sUIMAtE
MYAEqtBORChkTHYUQAIhYBilJ3NIYDS0ixFgFohiAAlUoZ2IUMiY7CiABELA
MEpP5pDAaGgXI8AsEMUAEqhCOxGhkDHZUQAJhIBhlJ7MIYHR0C5GgFkgigEk
UIV2IkIhY7KjABIIAcMoPZlDAqOhXYwAs0AUA0igCu1EhELGZEcBJBAChlF6
MocERkO7GAFmgSgGkEAV2okIhYzJjgJIIAQMo/RkDgmMhnYxAswCUQwggSq0
ExEKGZMdBZBACBhG6ckcEhgN7WIEmAWiGEACVWgnIhQyJjsKIIEQnE4n/wnS
F26GrBGQnswhgdHQLkaAWSCKASRQhXYiQiFjsqMAEgAhIJmTh3YxAgxRbAEg
gSpIRORBFAACwI3Jg2JEHkSxdCCBKkhE5EEUAALAjcmjWoxatGjRpk2b8PDw
du3axcTEVH3Diy++mJiYWMNXxMbGvvrqq3369GndunWHDh2efPLJ48ePu156
9NFHT506pe8XABUQxdKBBKogEZEHUQAIADcmj5ZilJqaylfOnDnzy1/+ct++
fRVfTU5O/t3vflfzV7z88ssrVqxYvXq165Kq6dOnP/74466Xli9fPnDgQH2/
AKiAKJYOJFAFiYg8iAJAALgxebQXI87DDz8cGxtb8dXIyMi5c+fylezs7KZN
mzZo0CA8PLxt27a1a9d+7bXX+Pbi4mL+Cfzf8v9l165dfItrnW8PCgq6fv26
4F8FKoAolg4kUAWJiDyIAkAAuDF5tBej/fv3161b99ixYxVfDQ0NPXDggGt9
1KhRH330EV9Zu3btY4895tq4bt26AQMGVPxf/vSnP0VHR5f/2aNHj7i4ODE/
BlQHolg6kEAVJCLyIAoAAeDG5NF+OV+3bt0qHZ/h1K5dOzMz07X+1FNPucrK
uHHjRowY4do4dOjQpUuXlr+fv9S1a9eCgoLyLbxUzZgBDzMQRLF0IIEqSETk
QRQAAsCNyePWicuq1KtX79y5c671e++9NyMjg688//zz8+fPZ2VTRIaGhubl
5bneMGHChM6dO2dnZ1f8hOeee871ZmAQiGLpQAJVkIjIgygABIAbk0dnMXrs
scfi4+P5Ci9D9913n2tjq1atdu/ezVeSkpIiIiJcGz/77LNOnTpdu3at0ie0
bdu2hs8H+kEUSwcSqIJERB5EASAA3Jg8OovRtGnT3nnnHb4SFxfXs2dP18aH
HnrIdYfL6NGj58yZw1fS09NtNltoaGh4GV26dHG98/Tp061bt8bjfgwFUSwd
SKAKEhF5EAWAAHBj8uicPD8vL+/BBx/Mz8+v9tUHHnjg8uXLNfzv5dUKGAei
WDqQQBUkIvIgCgAB4Mbk0f9IqQ0bNpTf/e0uU6dOdTgcnn830ACiWDqQQBUk
IvIgCgAB4MbkwYNWyYMolg4kUAWJiDyIAkAAuDF5UIzIgyiWDiRQBYmIPIgC
QAC4MXlQjMiDKJYOJFAFiYg8iAJAALgxeVCMyIMolg4kUAWJiDyIAkAAuDF5
UIzIgyiWDiRQBYmIPIgCQAC4MXlQjMiDKJYOJFAFiYg8iAJAALgxecgXI6eT
lRbJXyQ+H0B6FEMC6RJYH9qJiPvezRL5i9ynlMiNAkgAhIBkTh7axYjD2yHl
B8peuBmykB7FkEC6BNaHdiLi7dCIhfIXboZE5EYBJABCQDInD+1ixNCSWSCK
IYF0CawP7USElozJjgJIAISAZE4e2sWIoSWzQBRDAukSWB/aiQgtGZMdBZAA
CAHJnDy0ixFDS2aBKIYE0iWwPrQTEVoyJjsKIAEQApI5eWgXI4aWzAJRDAmk
S2B9aCcitGRMdhRAAiAEJHPy0C5GDC2ZBaIYEkiXwPrQTkRoyZjsKIAEwGPy
r7Jze9jBNWzn/NuZKmkBS1vH0veywuuy7QNCoV2MmK+2ZLmX2dmf2IHVLPGr
2xInL2SH41nGfnYzz1RjfFACp4NdPcNOJrK9y9n22bcl2P0tO5bALh2R2aJb
E9qJyDdbMp5nzu9Xck7KQpbwxa0w3PCZkpd4duI5ylRjfFICoAeHg106yn76
Vr24pH7Psk5i2j0i0C5GzMdaMkcJu3BQqUE1G8ML074f2NWzJkWxT0lQVMBO
J5d1wjUas3kaO7JROQQBXNBORD7VkvGscu0c279SyTM1RwHfTz9/kJWaYpVP
SQD0k5epHA12q8TsWsIKsmXbDXRDuxgxd1qyiW9ttlXgF7XrtGra8a3ek9b+
q8QrWrLr59mOL92zKnWZGceNfUQC3gzwEs/bXTesmsiObTGpK7A4tBOR77Rk
N/OV8yNuBeaOuSw7w3jDfEYCoBOeyU8nsQ2TPKkyGyez9FTZPwDog3YxYu63
ZD1+O2D0S//+60sLXo/49P7G7fmWZx553eItmcOhNFe3pHRz2TydXTpsoG3M
NyQoKlBOonlmGN+XyblkoG1eAe1E5CMt2aUjSj7xLAqObVbymHH4iARAJ7wl
Tluvt9Yc34qrKbwY2sWIud+SvRExoXzLynH59/4q2G63x47NtGxL5ihle1fo
jeKzu40yj/mABDfzWKKbR+krLZumKiedfRnaicgXWrJze/Rmob3LlWvADMIX
JAA64a3skQ163di1nEyU/WOAp9AuRkxfS8aX/+rwIt84ddhOa7ZkTody/Z6Q
KM7YZ4iFjLoERYVltzTqHv9NU9j1C4ZY6BXQTkTkW7KM/WKy0L4flJxmBOQl
APq5cEiMG7uWK6dk/x7gEbSLEdPdkrVq2pFvnPfXo9Zsyc6kCAvhDRNZzkVD
jCQsgdOpXJstSoKtM1nJTfFGegW0ExHtliznkvqNddqX08mGGElbAqCfm3ma
rv/hVfJGrvIv8jlVaBcj5n5L9uc/fPjdB1mxYzNnv72/d7f/4VvaNuuiP9Ub
0ZLlX2EbNdwRoD2KE+cZcgaTsAQajy1ol+DQWvFGegW0ExHhlsxRWjaJq7go
4DmNZzbhEJAgKytr1KhRLVu2DAwMDA4Ojo6Ozs/Pj4yM5Bly+vTp4obKR9n3
gyY35j7M4f9qefPheNm/CrgJb4HK5aN6cbjHEyC4eLT989+OuWjBlozrtWux
+Cg24mooqhIUF2q9t8gtCa6eFWynxeGeXJB9++eTxLOW7IV3lXB4dMCEqi/x
7ff/NsIKXfGpnVoDUHsUpCwSX4+8XYLU1NTGjRvzL61Tp07Hjh0bNWrE1yMi
Irp168ZXtm3bJnS0fI7C6+LdOL5sSgpeJoBXwH3geALbEnNbvu2zlVNXReQU
dLcli3jkjfGvx4977cchz4yve3eDts26LP8o2/WGJ8L/+FiHfuXv//7Dqw3q
Nv7bgIVSWrLrFwyJYu4Swg8XU5VA++UrbkmQukywnZalpEiZxShx3s9+/uEN
hhwqlIu3t2R3wlHKEj43JAqunxdsqldLkJWVFRwczL9x5MiRubm5ro3jx4/n
W/z9/e12e05OjsjB8j14O2SEG/PlzC7Zvw1o4PKxO5555ynOoItLZaHnotYp
UTt4wuGdWHkP1vCXv/77y4tvdWi/fem/Oryo8cOFt2QHfzQqii+mCTaVpARO
J9s+xygJfOERogXX7jyAE5XnqFLCq1uyGrh4WKtLuxsFB1YLNtWrJRgwYAD/
umHDhlXaHh4ezreHhIQIGCAfhidzg3bu+JL4leyfB9TIOqkyse3maSwvS7aV
4tB5q9dTnf/MN/LezPXnJ6+tqXt3gyXvnx8zMLZB3cbff3BFSktWWqzpimLP
onj3UpGmMqISXDun9Ud5IMHJHSJNtSB8KLbOVBmEjP2yrRSHV7dkNbAn1qgo
2DBJOZUgEO+VIC0tzc/PLygoKC+v8iOXXBcV9+3b1/VnbGzs888/37x587vu
uissLOzdd9+t+r+AqhRmG+XGrgX33FkZR4mmfaJdS2QbKg6dLdn80cf9/Gp1
bPX78i3Pdn3rty171Ktz78eRq7THhdiWLDvDwCjeNFXwRX0kJTidZKAEe74T
aaoF2R+nPgh8v4/MBV16WrKuL3z4xoysSosVumKeJdx6kqO7UZCdLtJa75Vg
zJgx/LtGjBhR9aWoqCj+0tixY11/PvLII/369Vu4cOGWLVumTJlSv3797t27
Owx9OAoJLh0x0I354uNz0Vuci2ladczLlG2rIHS2ZHz5fcdX+PZJQ7e6/lSe
K1Gv2VOd/6w9KOJFt2RndxsbxflXRVpLUgKNNyx7JgHfdaV69ysreyiwxom8
zqTItlUQelqyOyG9Ky645kYIeBAFZ38Saa33SsA7W/5dK1asqPpSnz59+EvL
lt26FSEz82dle9GiRfzVhIQEjwbMhzix3dh6auhDsoBOfvpWq45HNsq2VRD6
W7K576T52f3CWz5RvqVD6ONV31bzIrYlS1tnbBTzfWeBkJRghzsPs/NAAt46
UuV0stZB4INMAz0tWfsebzz3t/hKixW64stH3fBnD6JA7CyF3iuB6z671NTU
SttLSkqCgoL4SydPnqz2fzx69Ch/dfHixVq+pXPnzk19lXcGzK7qfq6JBKsu
rqfM8H+rfbXauQff6vsv2T8R3JHF75/VmJE+fWudbGPFENKilVupW8viQUvG
zRD4oz4essLQKH7pqbcFWktSgqVjq5kszjMJqp3BteMD3QVaayn+PvBrjZKt
+VeRbGPF0Pz+Vh63ZAIvauVmCPxR/Z8coT0EPIiCca+vFGitN0rAO1U+YvXr
1+fflZhYedLMhQsX8u1169Z13uHE0syZM6ttp6uFf10NR8VpM/S/J1f15Bu5
WoatGqru973y5PuyfyK4I4ve1doVfxy5SraxYvhFwN1WaMm4GQJ/1HuvfGNo
FPfq8ppAa0lK8M3750VJUO3Rs6ZBrQVaayn+8sIsjZKtHV9qt9tl2ysA/8C7
rdCScTME/qg/PDTI0Cw0ZmCsQGu9UQLeqfKRadeuHV+PiYmpOFwXLlxo0qQJ
3969e/dqxzMjI+Pee+99+umnNY6/Lx8rju43raonCzzK9FrvD2X/RHBHZo7c
o7EejRm0RLaxYiB5oPIfr1bTFQuM4hd+FyXQWpISLHzvtCgJqj1W3D7sIYHW
WoqoFyZplGzp2IuyjRWDNx6oVOW5Hm9pDwEPouCDwbECrfVGCVzHiocPH86/
q1mzZkePHnV1sCkpKWFhYQEBAXx7VFRU1RY3Ly/P1eXy5lljV+zLnD/oRh1x
90IgvmRVf4ULsATa79Ii84At7Re1Grp40QQISmm7JNJakhKkfm+gBMKnAbEU
+Ve1jsOxLbJtFYT3TgtWA7mX3QtAd6PgVJJIa71XgvT09IYNG9rKHtjRvn37
Vq1a8fVevXr17NmTr8yePbvS+wsLC5944okGDRocOnRIzNhRJy/LQDeOJ32T
CAGKbyiPIFQVcceXdIoyyZbsyhkDo3jjJOWRVQIhKYGhty1TmhqxWnZru+23
IFu2oYLw3pasBniW0FJNPI6CK6dFWuvVEqSlpUVERNxTRpcuXWbNmuV0OkNC
QrgNycnJFd9ZXFz8zDPP8LdV2g5qwOlgm6YY5cZbZ8r+eUCNM7vUdJzIsk7J
tlIcJFuy4kIDi1Hyv0WayohKkHnCQAmObhZpqgXJuajeUB3dJNtKcXh1S1YD
KYsMjIKiApGmEpMgLy/Pbrf7+fkVFNweJofD0a9fv8DAwI0bqcwhZRaH1hrl
xscxMZ7lcTprOsy14TPxD/yVC8mWjLPnO6OiWOw0oYyoBKUlbEuMURKIvYLF
mlw5XdPxmbR1dE5XMU9bMuGL8K74nGETp++JFWwqMQmSkpJ4Wx4WFlZx41tv
vcU3/u1vf9tZgUqTGINq4SnXoGReeF32bwPayDqpPNi3ona8H96/UjmGQwyS
LRknS/OxSreieONk5TIbsVCV4FiCIRKkLBRsp2XJv6Icoql00DhlkbJjTqkl
ZuRasnJKbhp16jnzhGBTiUkwZ84c3gD379+/4sYWLVpUnchi3rx5Yr6SOimL
xbvx3uWyfxVwk/yr7MJBlp6qlCGqF4RTbcmcDrZ9jvgoTlsv2E5GV4LC61qf
0eaWBMRO1qjC98IuHWbpe5U7wXMvy7bGGIi1ZBU5HK81ALVHwfbZtyasEAgx
CaKjo3nHO27cODEfBxjLzdSUz7W7Md9hxIFiYEGEtGRjBsY+2/Wt1Z/c+H+/
6dM0qHVokw6dWj85f/RxiS0Z5+pZwcUo4XNWVCjeTiO6Yq7IHx561S05jJDg
5A7BEvz0LbXDpICRa8kqUlzIEr4QHAVXzoi3k5gEPXr04F3xqlWrxHwcKENL
PnfNPVjtdJqVlnRNj08BwGyEtGS/6/jyJ0PW8q7448jV6z918i1Rfad3CH1c
+ycY0ZJx0taLjOLLxwwx0oiumCvy4aAVbslhhASOUrbza2ES4NgCVYi1ZJXI
PK4pZjVGQdo6Q4ykLQEQAs/nGqfHUV32/YDjG8CiuNWSLf8oO+hXTeve3SC0
SXiz+9oG1Kr9dJfX1vyruFH9Fvzfiu+Mid7FN2r/ZIO64pIilrRATBQf3mCI
hUxHV1ytHPHKg4ArK6JFDoMkyL/CtkwXI8HFw4ZYCKRDviU7slFMCPB9zBJj
4pS8BEAI3P12LdHrxqnfMweEBlbF3Zas/+OjBv3hI77yyZC1D4Y+xlf+b8i6
Hr8dUOltv+/0p76PRmv/WINaMk5RAds5T28UH/zRwB1bPceKq8pRrSJa5DBO
gusX2OZpeiVI32uUeUA65Fsynj0OrdEbAolfsSLDbm8hLwEQRWmxcqTXYzc+
tFbwhP8AiMXdlqxT66f+OTiOrwx+etxzj47gK727DX3/T0srvoe/1K5517hx
Bdo/1riWjJVd2qfnvM+xBGPP9ahKwAfzl3c3rLQseu9ctXJUVUSjHIZKkJup
3CLk2fhvmoKjxMTxhZaM55DjWz3PQj99q+Qx4/AFCYAouDPznKx97k3XsnWG
MjcUABbH3a64Xp17l7yfwVcebf/8qD/OX/+ps0mD0JUf55W/4Y2ICa2DOy//
KNutjzW0JWNlUZye6sYsSa5l+xx2Ld1Yw5i+Y8WV5OArlRTRLofREvDP9+A8
8u6luJaYPr7TkmWnsx1z3QsBnrXO7TH8IkzfkQCI4ma+sqOnpTfm/fDJRPGT
mgJgBG61ZLwBq3fPfa71Xwe1+mLE7mnDkx5pF1H+hjef/ax1007LPrzmbvNj
dEvmgvdXvDHTcjaf98NnUpRTRSbgcVdcVQ6+UlERt+QwR4Lr55V5v7XM8JOy
WDkcgTsyfAGfasl4VjmzS9O8kZumKvnKnL1Cn5IACMRRosyWeWgN2zn/Z4md
ryctUG4OvXyUOURPJAiAcbjVkv1zcNxDbXq61tsEP/R0l9f+2GP0/744x7Vl
8XvpNputSYPQ0CbhfGnbrIvVuuLyn5yxnx1YrVynFz/xtg0bJytPiDgcrzzR
28xmzOOuuKocfKVcEXflMFOCm3nsdDLbu4Jtm/kzGzZPVw4OH08gOzEvqBYf
bMl4hrlySsk2POdUelBL4pdKduI5ytSQ9D0JgHBKS5TcXpit/IuLh4GXonNa
sBaNHlg69rKeTzC/JfvZzy9WZkO6FcWS9mfFzszmsSKyJCi+wW7kKAfEivJx
ZNhH8fGWjGceVy/Bc5GsMPRxCQAAwAXVB6t5EZAA+DhoyaQDCQAAgKElswCQ
APg4aMmkAwkAAIChJbMAkAD4OGjJpAMJAACAoSWzAJAA+DhoyaQDCQAAgKEl
swCQAPg4aMmk46US/H+MqPDh
               "], {{0, 173.}, {946., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {946., 173.}, 
             PlotRange -> {{0, 946.}, {0, 173.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
x3b9p04tEvT7fbRseyXw9kszNLroin9myzZWDDqPFYtqJ0zrJd4duECjxN/8
47w5JnkjvFMdPlzZcW7WrNnRo0dd7WtKSkpYWBjvgfn2igeHdXbFGvF8ZrZ5
c5S5U8LauOZO4c6suPTQNz37NNOuBTq1U+v+e/pecywCgtFy67druZgm21bg
EVpu/XYtuM/FCDRO8xLvw/e0Xjun1UUPrJZtqyB03bkvrp0wrZfI0nbPL18O
YzKcGklPT2/YsKGt7IEd7du3b9WqFV/v1atXz549+crs2bPL36nzCgqNePgU
j7Wr7A+0swUE+M+deWvLmjh7m9Yen/gwzZN5itYyodCmqZjs1FspzNaUqbbE
0JkTydfIy9Ik8baZmBPJKNL3apJgf5xsQyXBdxwSv9I0RNnnZdsqCM+PsAlt
J0zrJXhu2TZLk8R5mLJYjbS0tIiIiHvK6NKly6xZs5xOZ0hICO+Kk5OTy9/2
+OOP9+jRo+L/2LJly8GDB4s1xsMnPg9Rplb2GzL4Z76t48SHmXMMHtmg7sYn
d5hmDhDPQQ0zjZzZJdtKoIM7PTKs4pKxT7aVdCkpUp8yeuMk5Um4Psulw+ou
unspnQedeP7EZ6HthJm9RIaGmUb2VjPfGFAnLy/Pbrf7+fkVFNx+ptqECRMC
AgLS09NdfyYlJdkqzNsmCg88me/Q8d06e7u2VZ874/GJDzM92VHK9i6vyY15
T0UmU/kmjhJlMpwaJOZ7RpDYqyktUnlw2PEE2SZSp+BaTQ8J3TCJXT4m20TZ
nE6qyUWTFpCaT9vD886i2wmTn/h8YltNEqcsVjIV8ABXxxsWFlZxY05OTvPm
zTt16hQXFxcbGxsSEtKlSxdLPcVD4GKyJzsdytHgqlNuJnzBzqSgX6IA3/fh
fVHVhwJvncnO7YHEFOA54+gm5WKnShJvn60cwwEmcCOX7VvBNkys0gwsYtfS
ZRtnDS6msR1zqxxFn6xca0rsIj3f7CVY2dzUPOdUkpjnpSOblIe5AM+YM2cO
74r79+9fafuJEyciIiLq1Knzq1/96pVXXsnMFH95is96MiurqhcO3no8Df/3
0hGllQKU4Emp4kmuy8eZ6N1KIBneWqTv/U8UT2FZJ3Etsdnw3vjUzlsSbJri
01dNVAvfB79yhh2ucOVeyU3ZNhmAL/cSXGKeeQ7H34qCzdOo7fKYT3R0NO+K
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
b9++rj/T09OjoqIefvjh2rVr8+1iRq0KejzZ7xWlva81YjgfOntYG1vt2nww
PfsoMz2Z76TX4Mau5UyKaeb4ogRGczheXeL0vbKtBDo4+KO6xDgpYBylxSzx
K5Xx3zSF5WXJNlQemSfUXXTvctlWikPnRa2iapmZheziYXWJD6w2zRxv7SXG
jBnDv3rEiBFVX+I9MH9p7Nixrj83b97cuHHj3r17d+/e3Zpdsf+PK22hoba7
7/J7NkI52P7GEI8/yjRPLiqo5nxf1WXzdCXtm4OvSWA0N3LZhonqEid8Yfbp
LSCK/Kvq+saXXRCFa4wN4vx+TRLwnRffhDvezq81DRGZS010dsWiaplphYxL
vGOuJonzr5hjkbf2Eq4Wd8WKFVVf6tOnD39p2bJlrj8dDodrhffJ1uyKlZGc
EWPz9+fm2dv/xn/tKuu3ZDWf76i4nD9gjkU+J4HRnNiuVWJcfeqlHN2kVeIr
p2TbSpSq18pWu2ycxIoKZdsqg+zzWl300FrZtgpC/wQIQmqZaYXsymmtEh/Z
aI5F3tpLuO6zS01NrbS9pKQkKCiIv3Ty5MlKL1m6K14wz3bXXcqexeBBej7H
NE9OWaTVk1OXmWORz0lgNFVvfLjTcmCVbFuBR2yfrVXitPWybaXIjVyt4x/v
q9exHNuidXy2mDcPq7EI6IpF1DLTCpmW6/Rcy7aZ5ljkrb1E/fr1+ZcmJiZW
2r5w4UK+vW7dus4q5/w864o7d+7cVAO/DgnxfAzXrbaHd7AF+NuaN7MFBvrP
/9Ljj+JmaLFWPwv+flyjJ8f8Jckck3xNAqP59h8XNEr8WdQm2cYCT/jh4xyN
En/yepxsYwnySPiT2rviQc+8L9teCbw/aLH2IQpuGizbXgHoKWQCa5lphezj
ISs06rtyXJ45JnljL8E71Xbt2vEWNyYmpmIHe+HChSZNmvDt3bt3r9rfetYV
86+zaeEXgR7/dr+hb7p2K/xnz+CDaX+wPR9Yzz6Km6HJWt3M/N9UjZ78r9fX
m2OSr0lgNPNHa93xGTtomWxjgScs/ccljRL/9aWvZRtLkKZBrbW3fL26DJFt
rwSG9Z2ucXxWfVIo21hB6ChkAmuZaYVs1B/naZQ4dmymOSZ5Yy/BO9Xhw4fz
lWbNmh09etTVvqakpISFhQUEBPDtUVFRorpio48V+8+bo8zdEdbGNXcHH0xl
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
KNutjzW0JWNlUZye6sYsSa5l+xx2Ld1Yw5i+Y8WV5OArlRTRLofREvDP9+A8
8u6luJaYPr7TkmWnsx1z3QsBnrXO7TH8IkzfkQCI4ma+sqOnpTfm/fDJRPGT
mgJgBG61ZLwBq3fPfa71Xwe1+mLE7mnDkx5pF1H+hjef/ax1007LPrzmbvNj
dEvmgvdXvDHTcjaf98NnUpRTRSbgcVdcVQ6+UlERt+QwR4Lr55V5v7XM8JOy
WDkcgTsyfAGfasl4VjmzS9O8kZumKvnKnL1Cn5IACMRRosyWeWgN2zn/Z4md
ryctUG4OvXyUOURPJAiAcbjVkv1zcNxDbXq61tsEP/R0l9f+2GP0/744x7Vl
8XvpNputSYPQ0CbhfGnbrIvVuuLyn5yxnx1YrVynFz/xtg0bJytPiDgcrzzR
28xmzOOuuKocfKVcEXflMFOCm3nsdDLbu4Jtm/kzGzZPVw4OH08gOzEvqBYf
bMl4hrlySsk2POdUelBL4pdKduI5ytSQ9D0JgHBKS5TcXpit/IuLh4GXonNa
sBaNHlg69rKeTzC/JfvZzy9WZkO6FcWS9mfFzszmsSKyJCi+wW7kKAfEivJx
ZNhH8fGWjGceVy/Bc5GsMPRxCQAAwAXVB6t5EZAA+DhoyaQDCQAAgKElswCQ
APg4aMmkAwkAAIChJbMAkAD4OGjJpAMJAACAoSWzAJAA+DhoyaQDCQAAgKEl
swCQAPg4aMmk46US/H+MqPDh
               "], {{0, 173.}, {946., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {946., 173.}, 
             PlotRange -> {{0, 946.}, {0, 173.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["12", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Ops: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"x\"", "\[Rule]", "6"}], ",", 
                    RowBox[{"\"ccx\"", "\[Rule]", "4"}], ",", 
                    RowBox[{"\"mcphase\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"ry\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"h\"", "\[Rule]", "2"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QiskitCircuit[
   ByteArray[CompressedData["
1:eJzVVk9vG0UUXztxYpM2qapCC2qLXRHFltwoJVVuqBJBtNUW01ipAIlqNLue
+i1d79q7s0p8qCBICWo0EodOPwAHbpwQHDiVGzc+AQe+BUJceDM7du2wbh1F
IOGLZ968/b2/M+9XccKmk7Msy1mwrC9mn36Ef+onLvW8+KHHV10vchP87yU0
4EnHbKVY3EoFm0bwRNb25CNZFa8Qh8aMBLTDpFgw+levbVyXYlYLYU4USIty
Ku+jeuWFdrSaOGuM3A5iHiUu98IgtddQBkthl0VUC8XKETTfcyIa9VdjToMW
jVqkTTmLV3elKHx8E5fP3V4gLfbACzyN00AP0wByqLpAgqRDeonj8VjaObN3
/XRviXnSpRHtxBiPmCM+dZiPCCU3DFoDuBJpJcZHhZ0EKoX5FpeJI+YMsric
nYqItb2Yswh93lKaI6EXSMS6eFDRB1VTkqb5oLpeL6/0Vmr18lpNogtDILgi
lo7opqBVketJe+aw+O0PVz6nj7/cE+cnYKrawTK8ZTyBlZf6cK0moQZ1zJAX
tNiuSmSBAI1BHhbbP/1x49l3v72fHEjnOJhvp5iwbufh+mHx5/Kt2uOk/o2C
YRyh1m1LyZ9efPKpu/vrL0q+jzUypatpc6cG5pbgbNoL8GoDXoPzcMHOweuI
8MZ9CRcbcKkBlxvwJpQTByqwti/hnX8gnBHzm5tHOquk74NqPDlmQfXWBBum
NVK1GdfVijNZzmyJM2k38sgftmgeW1QLsO3Rqj2jPV6GNdj4KsvrE8c97b3r
4mX6YPMuVp2N5QjuABWlDHmap+5Ynm7e+LPy1/Z7Vy/QsUQM0jXfcbsKaHLK
YBvb5Z7JyhrmJTMrojpdTFEfO6r5SYbfeTyazvEKbGS20+1hesZK9OGkEg2S
AM0TBg981N7OWBTP/j9RuEPL7VHLn03fTuCf1IfjXK7lzPz9Z9cTcMTcyrqA
MOmhMlaPVfcXRvDyF688lvd/8VGD70cRfpw2A0wskbCrnt6IE+51WIwj/xxB
NsCj0CcP/HCHxC5yFs0XCj2cymoFdSoKrtkgpTBveTpmMUaGMjO38HwxPVej
1HMR6ZFWs8Spdz1+J3Q104ixiralkG3rQNIDuScR6Hc7p0W5gWgDRXktyhtR
gvDa1Ag80gcauJ7vU23/NHGpbqLUEPK80PeZO9ghlaKJz/FjxVZE0Uk8n3vq
aNbI9mVT4ujSxInhTCecOj7yraO0c6hgzhfvDgTbWvCcC80ZCPS1QB6yfiy/
VnRM0Ti1VKXBsTjEU1WZR7LWDxOOy9Ok7YcO9Uk6O5DVFUcY26wmbDhsSwQ/
ppqVop1zJk07kccZYnEWuP1BtVPuh4hDeeKs/g31PRkZ
    "]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.893850327024083*^9, {3.893850496390238*^9, 3.893850501411022*^9}, {
   3.89385053820125*^9, 3.8938505436520157`*^9}, 3.893853245519579*^9, 
   3.9060284721407337`*^9},
 CellLabel->"Out[18]=",
 CellID->1268755991,ExpressionUUID->"e5573566-0524-4dba-952f-8415f8cc2c3e"]
}, Open  ]],

Cell["\<\
Transform Qiskit into quantum circuit object and return its diagram:\
\>", "CodeText",
 CellChangeTimes->{{3.893853838013125*^9, 3.893853862624221*^9}},
 CellID->1330051456,ExpressionUUID->"09a0ad95-e788-42fa-bb53-89d297a5efdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"transpile", "[", "\"\<QuantumCircuit\>\"", "]"}], "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<ShowGateLabels\>\"", "->", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.893850545970649*^9, 3.893850574392273*^9}, {
  3.893853248669257*^9, 3.8938532521349497`*^9}},
 CellLabel->"In[19]:=",
 CellID->1369814811,ExpressionUUID->"81f13cba-3649-473b-9325-a19290c2236c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -1}, {0.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -2}, {0.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -1}, {1.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{1.375, -2}, {1.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{0.375, -3}, {1.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -2}, {2.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{3.375, -2}, {3.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -1}, {3.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{2.375, -3}, {3.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{4.375, -3}, {4.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{4.375, -2}, {5.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{4.375, -1}, {5.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{5.375, -3}, {5.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{6.375, -3}, {6.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{6.375, -2}, {7.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{6.375, -1}, {7.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{7.375, -3}, {7.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{8.375, -2}, {8.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{8.375, -1}, {8.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{8.375, -3}, {8.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{9.375, -1}, {9.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{9.375, -2}, {9.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], LineBox[{{9.375, -3}, {9.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{10.375, -1}, {10.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{10.375, -2}, {10.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{10.375, -3}, {10.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{11.375, -2}, {11.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{11.375, -3}, {11.625, -3}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{11.375, -1}, {12.625, -1}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{12.375, -2}, {12.625, -2}}]}, 
    {AbsoluteThickness[1], Opacity[0.3], 
     LineBox[{{12.375, -3}, {12.625, -3}}]}}, {
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{0.625, -1.375}, {1.375, -0.625},
      RoundingRadius->0.1]}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{0.625, -2.375}, {1.375, -1.625},
      RoundingRadius->0.1]}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{1.625, -3.375}, {2.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -1.09375}, {2., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{2., -2.09375}, {2., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
       LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{2., -1.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.90625, -2.}}], 
       LineBox[{{2.09375, -2.}, {2.375, -2.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{2., -2.}, 0.09375]}}}, {}}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{2.625, -2.375}, {3.375, -1.625},
      RoundingRadius->0.1]}, {{
      {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
       0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
       RectangleBox[{3.625, -3.375}, {4.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[{{4., -1.09375}, {4., -1.90625}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[{{4., -2.09375}, {4., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{3.625, -2.}, {3.90625, -2.}}], 
       LineBox[{{4.09375, -2.}, {4.375, -2.}}], 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
        DiskBox[{4., -2.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{3.625, -1.}, {3.90625, -1.}}], 
       LineBox[{{4.09375, -1.}, {4.375, -1.}}], 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
        DiskBox[{4., -1.}, 0.09375]}}}, {}}, 
    {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
     0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
     RectangleBox[{4.625, -3.375}, {5.375, -2.625},
      RoundingRadius->0.1]}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{5.625, -3.375}, {6.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{6., -1.09375}, {6., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{6., -2.09375}, {6., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{5.625, -2.}, {5.90625, -2.}}], 
       LineBox[{{6.09375, -2.}, {6.375, -2.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{6., -2.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{5.625, -1.}, {5.90625, -1.}}], 
       LineBox[{{6.09375, -1.}, {6.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{6., -1.}, 0.09375]}}}, {}}, 
    {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
     0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
     RectangleBox[{6.625, -3.375}, {7.375, -2.625},
      RoundingRadius->0.1]}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{7.625, -3.375}, {8.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{8., -1.09375}, {8., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{8., -2.09375}, {8., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{7.625, -2.}, {7.90625, -2.}}], 
       LineBox[{{8.09375, -2.}, {8.375, -2.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{8., -2.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{7.625, -1.}, {7.90625, -1.}}], 
       LineBox[{{8.09375, -1.}, {8.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{8., -1.}, 0.09375]}}}, {}}, {{
      {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
       0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
       RectangleBox[{8.625, -3.375}, {9.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[{{9., -1.09375}, {9., -1.90625}}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[{{9., -2.09375}, {9., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{8.625, -2.}, {8.90625, -2.}}], 
       LineBox[{{9.09375, -2.}, {9.375, -2.}}], 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
        DiskBox[{9., -2.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{8.625, -1.}, {8.90625, -1.}}], 
       LineBox[{{9.09375, -1.}, {9.375, -1.}}], 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.3]}], 
        DiskBox[{9., -1.}, 0.09375]}}}, {}}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{9.625, -1.375}, {10.375, -0.625},
      RoundingRadius->0.1]}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{9.625, -2.375}, {10.375, -1.625},
      RoundingRadius->0.1]}, 
    {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
     RectangleBox[{9.625, -3.375}, {10.375, -2.625},
      RoundingRadius->0.1]}, {{
      {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
       0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
       RectangleBox[{10.625, -3.375}, {11.375, -2.625},
        RoundingRadius->0.1]}, {
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{11., -1.09375}, {11., -1.90625}}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[{{11., -2.09375}, {11., -2.625}}]}}}, {
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{10.625, -1.}, {10.90625, -1.}}], 
       LineBox[{{11.09375, -1.}, {11.375, -1.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{11., -1.}, 0.09375]}}, 
      {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], Opacity[
       0.3], CapForm[None], LineBox[{{10.625, -2.}, {10.90625, -2.}}], 
       LineBox[{{11.09375, -2.}, {11.375, -2.}}], 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
        DiskBox[{11., -2.}, 0.09375]}}}, {}}, 
    {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
     0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
     RectangleBox[{11.625, -2.375}, {12.375, -1.625},
      RoundingRadius->0.1]}, 
    {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
     0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
     RectangleBox[{11.625, -3.375}, {12.375, -2.625},
      RoundingRadius->0.1]}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{3.8938505581033993`*^9, 3.8938532541932592`*^9, 
  3.906028476922348*^9},
 CellLabel->"Out[19]=",
 CellID->1397618084,ExpressionUUID->"af44e36d-5cd7-4773-907b-247d1a4fcd72"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Supporting Data and Definitions", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContentElements"},
 DefaultNewCellStyle->"Input",
 CellTags->{
  "ContentElements", "Supporting Data and Definitions", "TemplateCellGroup"},
 CellID->529773346,ExpressionUUID->"7d2b64f5-4283-407d-b97d-35719e162c6c"],

Cell[TextData[{
 "(Your data can be ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Dataset", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Dataset",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "bc64254f-87ad-4853-8a10-84f2f53daa82"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["EntityStore", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/EntityStore",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "3a6615a7-8626-4f41-bc4a-c0dbb612d084"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Image", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Image",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "cefa9612-9160-4bc9-8ef7-9fcdef5e8ba3"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["Audio", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/Audio",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "3afed6cf-2837-43d6-89ad-08f99e9a1a62"],
 " or any other expression)"
}], "Text",
 Editable->False,
 Selectable->False,
 Deletable->False,
 CellID->867258710,ExpressionUUID->"27b2f66c-800f-4825-b81d-e13514c12dd1"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"ResourceData", "[", 
    InterpretationBox[
     TagBox[
      FrameBox[
       StyleBox[GridBox[{
          {
           DynamicBox[If[
             TrueQ[
              StringQ[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "ResourceType"}]]], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                RasterBox[CompressedData["
1:eJztmEFOg1AQhom6cIk3qBsTd126xKW7psZ921iNm9q0JsbduwFH4AgcgSNw
gqZH4Aj4MP/U3wmUgkhp7EtGYZh58zkzzGu9nLwOn04cx1me2x/D8fvtYjH+
uHftzcNs+fI8mz7ezd6mz9PFzeTUKq+tXFk5c7q/VhdOYiXtgCSKK9P195UX
MHgZh9KlRfZtLubgPO6TSVj4+si1fR1Cf+Xd72v9RR2tv5tJB7n8TLrEZX17
tE+vCa68+xLftRXD8e11RFyR4s1s1y1wRXSeBogr1wGuDV0nzLorV9U6gsvg
PAuJw4cIZwgb0xLXj/4G55z2mata7vw+1OXCLMjqE8tMoLqGkE3dYB/Dp3SG
VOkv+2xELJvPSVSrBOJCEuJk25QY5w1wBWrfAVg5Xkj2oeIfwYf/rqCMa5c6
0p4RxfMRz4NuAEmhG8AmUb7xljhVuaRPYoo9oueG6mdIPyJm8S/sszp9T3lJ
SDzE5tqF0HnK9iuPJTEqzVXq5yCHQ/TyPga69+jdSXbNVxmXqqHMhh5ixGRn
VA1j2PSK9tnGVVZH6nnpc5d6mOen5trYwEfeg8Ler8glZ4nMKq5dhHi6vwZ4
FiifEHt5v+XK8TWI6VO87PcawjoftqZ0Y6d63ytbn3JnVt+zoA9JoZPZkdlW
Ph9rcPFslfzkzfs15a2tzzlpTr681feM43y1xRUjrku6ELyRyp0L28Kzpymu
gv1knm3mVc19Gv/+qOdXzT3+zffaJtaRq9o6kP5y5RzZM5OXw9XJ/0d3bX0C
dbpsag==
                 "], {{0, 0}, {38., 41.}}, {0, 255}, 
                 ImageResolution -> {72, 72}, ColorFunction -> RGBColor], {
                ImageSize -> {Automatic, 12}, 
                 PlotRange -> {{0, 38.}, {0, 41.}}}], 
               "\"the ResourceObject defined by this notebook\"", 
               TooltipStyle -> "TextStyling"], 
              Annotation[#, "the ResourceObject defined by this notebook", 
               "Tooltip"]& ], 
             TagBox[
              TooltipBox[
               GraphicsBox[
                TagBox[
                 RasterBox[CompressedData["
1:eJzdlk1ugzAQhaN20yVHoJtK3WXZJV1W8gKl6p5ETaNu0iipVHXnG3AEH4Ej
+Ag+AkfgCO6bYUjzC4SgKipWnMF4PmYeY/Dt5GP0djUYDFY36Ebjr8flcvz9
HODkZb56n82nr0/zz+lsunyYXGPwHr87/Mil30MFqlD+7FYIy6vhmfFEyovl
z82tYpQx/m9Wn3q1YSmtdBtWc44qRAUWKuzOUk4lKmArUxYtYzvAqDuZZama
kV2C/4iqEZbmNWKPsY7pJawcfSbReZx1Y6XwruIaolVxZSo9OUeNyFKOjeLJ
xUoxqtuyoIzmiMjXwDPm7JApLIuR8kqGWVEjy/HdYzwxW2lT1Vc5gisxR+x2
Wbt6YaZDC6Su3BbLlXX2O6eeJW9HA6XL3MjO0Iy8MzNcITvY8jmqPVdTwS1a
M4kRyajf1KqOJRnEVAWSIfmXWVKFxLsZ1rAcK0yR0TOI2Dvm6ifNC7nq9ll7
2humU1xJpRCPV+olHBfZppFFyjrx81xp0JmfR8G8Qu5l1KKN9qyZkcqwzCCm
FS3NtlZNLF6PvO7AWvCchdRt2mE9WlolnJUmf/SUMa2wLu8cUsYww/AT0dwX
HVg5fEOh+vXKDDGan5rjxryQ54S1c1p/Hw/r3ZEV7FfBIdZff2vbsi51b3LJ
+5we96u97aP7O34ARi0taQ==
                  "], {{0, 41.}, {38., 0}}, {0, 255}, ColorFunction -> 
                  GrayLevel, ImageResolution -> {72, 72}], 
                 BoxForm`ImageTag[
                 "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                 Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
                ImageSizeRaw -> {38., 41.}, PlotRange -> {{0, 38.}, {0, 41.}},
                 ImageSize -> {Automatic, 12}], 
               "\"only defined in a definition notebook\"", TooltipStyle -> 
               "TextStyling"], 
              Annotation[#, "only defined in a definition notebook", 
               "Tooltip"]& ]],
            ImageSizeCache->{11., {3., 9.}},
            SingleEvaluation->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         
         GridBoxSpacings->{"Columns" -> {{0.25}}}],
        ShowStringCharacters->False,
        FontSize->(11 Inherited)/13],
       Background->GrayLevel[0.5, 0.15],
       BaseStyle->{"Text", LineSpacing -> {0, 0}, LineBreakWithin -> False},
       FrameMargins->{{3, 3}, {3, 0}},
       FrameStyle->Directive[
         GrayLevel[0.5, 0.35], 
         AbsoluteThickness[0.5]],
       RoundingRadius->4],
      "ResourceObjectNotebook"],
     ResourceObject[
      EvaluationNotebook[]],
     SelectWithContents->True,
     Selectable->False], ",", "\"\<NameOfContent\>\"", "]"}], "=", 
   TagBox["xxxx",
    Annotation[#, "Placeholder"]& ,
    AutoDelete->True]}],
  #& ,
  TaggingRules -> {"DefaultContentBoxes" -> True},
  AutoDelete->True]], "Input",
 CellTags->"DefaultContent",
 CellID->466226405,ExpressionUUID->"3581859a-d55c-41ed-9bec-1b7dee2ca198"],

Cell[TextData[{
 "(xxxx can be your data, or ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["File", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/File",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "2c69826f-b599-4b33-9fad-db16a8c77e84"],
 ", ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["CloudObject", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/CloudObject",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "ff66c8b8-8e65-45c3-998e-a35b516d634e"],
 " or ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    TagBox[
     ButtonBox[
      StyleBox["LocalObject", "SymbolsRefLink",
       ShowStringCharacters->True,
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        FEPrivate`If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {"Link"}]],
      ButtonData->"paclet:ref/LocalObject",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]], "[", 
    StyleBox["\[Ellipsis]", "TR"], "]"}],
   ShowStringCharacters->True,
   FontFamily->"Source Sans Pro"]],ExpressionUUID->
  "e30d4649-0216-4d2e-928b-a46760bdd889"],
 " that contains it.)"
}], "Text",
 Editable->False,
 Selectable->False,
 Deletable->False,
 IgnoreSpellCheck->True,
 CellID->395327254,ExpressionUUID->"49e69de4-0f65-496e-bb93-2557338265c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Thumbnail Image", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"HeroImage", "TemplateCellGroup", "Thumbnail Image"},
 CellID->633683855,ExpressionUUID->"f9e12427-a272-4b69-be1a-accfb179fb83"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdcFGf6xym7VBUVRUER7MFYsCGioGIHFY29V8CGDbGggrTdBZZdyi5t
6agYk0uu5HJ3Se4uyV0uufR26eXyzyV3l1xyl3aXZt7/8ywzuCIYLDgL/L6f
z9cpOzs7s7vvLu/sz+cdvG3/HXFODg4OiW70zx1bj846dGjr8eU9aWHlvsRd
8ftidyzcdzg2PvZQ6DZnWrmGtp3n4eCgcgAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHRUnJycHJvZFqzbMkofPwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACjUqkcJZ1IZ9WVqFtQJW3L93FydnZGNhIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACKw5lGVso3sjKqq8iZSGdpe2vdSKXPAwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGBfCAA6GO/9S4g/
vSnEU+8I8eTbELa//H7752dKv/MBAAAA0Bn59ttvxb333iuqq6tFbW0thO1u
TU2NOHv2rPj888+VfvsDALooSl8LvRk4Ek5c3JEmtOhM8vRm1XqUd8/7R/1I
AAAAAAAAAAAAAACuE6WvhQLQVn74oXF6/gkh1hULsbNGiNhKCNvX+Coh1pcI
8cirl78PAQAAAABuhB+kPyo+++wz4ePjwxkRCG+pr7322mXvRQAAuFU4dHDk
0KI0/rWKVqklef5Gc4x8f2l4bZUzspEAAAAAAAAAAAAAAFw/Sl8LBaCtyD/X
3ftMY1btcIMQB89C2L4mnhNiZ3VjzUjb9yEAAAAAwI0gZ9G4Zl9QUJBQqVTC
xcXFOoWwvVSr1dapl5eXeOutty57LwIAwK1C6WuhN4Omgo5OTlwr0tabkYt0
knGUuNHjBQAAAAAAAAAAAACgK6L0tVAA2or8c909TzfW8Tt0Toj9ZyBsXzkb
GVclxGNvXP4+BAAAAAC4EWxzkSNGjLDW73NyclK8hiDs3Do6Olqn3bp1E2++
+eZl70UAALhVOHRyvL29HXv37u3Ss2dPD7I76UX27CVBs72lRS/atlufPn3c
aKry8vJC/hEAAAAAAAAAAAAAgJuI0tdCAWgryEVCJUQuEgAAAADtAXKRUAmR
iwQA2AMOHRBnZ2dHlUplreH4Y9vOmDHDLSwsrO/kyZMHT5w48XZy/CSClkOI
qTQNo2no1KlTJ4SHh982c+ZMf5r2Gj9+vMvV9svlI+USkjfvzAAAAAAAAAAA
AAAA6LwofS0UgLaCXCRUQuQiAQAAANAeIBcJlRC5SACAPeDQweAsoouLi5Or
q6uK4VWtbbt79271vn37/OLj44M3bdo0e/369cvJjcTWzZs3x5K7yD1btmzZ
GRsbu3nv3r1LDxw4MH3Pnj23rVmzpu/UqVPVre3b2dnZiUUuEgAAAAAAAAAA
AACAtqH0tVAA2gpykVAJkYsEAAAAQHuAXCRUQuQiAQD2gEMHRK1WO5JyJvGK
XOLKlSvVx48f75WXlze8sLBwhl6vX5eenn4oJSUlgzSkpaUVZmRkFJMVNF9N
Vmq12kKj0ZhqMpliDQbDwmPHjgUvX77cLygoyL2lY+B6lchFAgAAAAAAAAAA
AADQdpS+FgpAW0EuEiohcpEAAAAAaA+Qi4RKiFwkAMAecOgAOEq0drunp6dz
nz59PIYMGeI9d+7cgD179gTn5ubOrays3HDmzJmjdXV1poqKirvLysp+Qz5s
sVgepdseKy8vf6q4uPgFk8n0QklJyeNVVVU/523ptkS6/yraz7Q5c+YMp/32
JXoQblynko+leS4S+UgAAAAAAAAAAAAAAK6O0tdCAWgryEVCJUQuEgAAAADt
AXKRUAmRiwQA2AMOdg7nDZ0kWtsmICCg+5QpUwKjoqKmxMbGLj158mSC0WjM
tlgsNfX19b8+d+7c8+T7Z86c+QdL8x82NDT8o66u7tOKior/lZSUfEt+Qdv/
tbKy8o+0rq6wsDAzNTV1144dO5bSfqeGhoYGjRw50rdPnz7duFYly9lIOQ/J
43sjGwkAAAAAAAAAAAAAQOsofS0UgLaCXCRUQuQiAQAAANAeIBcJlRC5SACA
PeBg53DW0JlQES3d3rt3b5fQ0NDB69evn5mYmLg9IyNDl52dfbder3/KaDS+
bTabP66oqPimurpaSH5dU1PzBfm5xWL5mm4X+fn5wmAwCNr+Ivn3goKCp8mf
5+Xllaenp58+dOjQjo0bN0bNnDlzbGBgYF+uGcm5SDqsphwkH6OTFI68dc8O
AAAAAAAAAAAAAAAdB6WvhQLQVpCLhEqIXCQAAAAA2gPkIqESIhcJALAHHOyc
q+Ui1Wq1M31v+y1dunTG0aNHdxqNxsLS0tIHTSbTu3q9/huNRiOysrKETqeT
/YL8O/lX8p3s7Oz3yU/I/5HWbWj7/9H9/kH3f53286eSkpKf0H4NR44c2U2P
M2v48OH+dCjOzY+Fj4+PE7lIAAAAAAAAAAAAAABaRulroQC0FeQioRIiFwkA
AACA9gC5SKiEyEUCAOwBBztFzhfa5iJ53s3NzblXr14ufn5+3YcNGzYgMjJy
elxcXLxWqzVVVlb+/syZM3+rrq7+oaioyJqJPH78+CcHDhx4Oz4+/nna7lHy
/tjY2J+S99D6n508efIBuu+fDAbDK3q9/gO6z2dpaWlf6XS6L81m8z9qampe
qKio+Dmty1q+fPmywYMHD2npeNVqtYt8jLf2mQIAAAAAAAAAAAAAoGOg9LVQ
ANoKcpFQCZGLBAAAAEB7gFwkVELkIgEA9oCDHcLDUbM8L+UindRqtbUko7e3
t3tQUJB3eHj48MWLF8/YsWPHruPHjxfr9fqHKyoq3j979uz3586dEzT/vU6n
e3f//v0PrVq1qmLmzJmZ06dPP0buJ/eQu5cvX7533759BzUaTUpxcXEJeT/t
55WMjIz/cK3JwsLC76qqqj6yWCzPpKSklC9ZsmSTr6/viJaOmY7PlY5PfT25
SI5T2splJ5uvgxBCCCGEEEIIIYT2bWvXdHj9jV4v6ywofS0UgLaCXCRUQuQi
AQAAANAeIBcJlRC5SACAPeBgh3Am0nZMal5WqVROpPPAgQN7RkREDNu0adPs
pKSkXRkZGaXZ2dl/yM3N/aCoqOibyspKUV9f/1VFRcWrWVlZd2/btu3U9OnT
l9P9Jvv4+Izu27dvEDmS5keGhITctmHDhlGpqamTi4uLl1sslpTCwsJ7NRrN
m+R3RqNRlJWVfU37/b9jx47dEx0dvc/X13dcS8fMuUg65GvORSp9vR5CCCGE
EEIIIYQQtq/IRV5C6WuhALQV5CKhEiIXCQAAAID2ALlIqITIRQIA7AEHO4Tr
Q6r4onELGUN/f/++CxcunJKYmLg9Pz+/qKys7GGTyfRhTk4O14cUeXl5XxQW
Fr6cm5vbcPjw4aSYmJi5w4cPH3C1x9u7d6+jRqMZRPdbUlBQoKH7/lav139M
yz+UlJQIepwvjx8//seVK1dmjh49epYn4eLiwsfYdHw0f125SAAAAAAAAAAA
AAAAugpKXwsFoK0gFwmVELlIAAAAALQHyEVCJUQuEgBgDzjYISqVylmtVrvQ
56RT89v69+8/YOHChYuTk5O1FRUVD547d+7dqqqqH/Ly8kRaWtqXJ0+efOXo
0aPnd+3adXjlypXzp0yZEtCWx4yNjXWifY7R6XQ7jEZjZXFx8Yu0/y+4/qTZ
bBZZWVlvJyQkVC9btmx9SEhIYFBQUHc/Pz+Vp6enNQfJmUj626Epy4l8JAAA
AAAAAAAAAAAAl6P0tVAA2gpykVAJkYsEAAAAQHuAXCRUQuQiAQD2gIP9weML
qQk3+px0bn6jt7f38Dlz5sQdOXLkgsVieefChQtfnjt3TphMJpGamvrWnj17
7lm1atXxGTNmzBk3btxQf39/z7Y+8Jo1awbQfufn5eWdqKys/NmZM2feqaur
+6G8vFwUFhb+S6fT3Z+cnHw4Li5uytKlS30nTpzo7uPjY81u0t8NznKOkzOR
PD4Sj/99854WAAAAAAAAAAAAAAA6NkpfCwWgrSAXCZUQuUgAAAAAtAfIRUIl
RC4SAGAPONgfnClUq1SqFnORPj4+EyMjI1MOHDjwuMlk+m9DQ8PF8+fPi9LS
0n+dOnXqwQ0bNmROnTp1kZ+fn3/37t093NzcrthHa4SEhHhv3rx5fHp6+tqy
srKcmpqahywWywdms/m/RUVFPH2ApqkajWbenj17Bs+ZM6ebv7+/vH9HSWsu
ko7fibORN+cpAQAAAAAAAAAAAACg46P0tVAA2gpykVAJkYsEAAAAQHuAXCRU
QuQiAQD2gIP9cUUuUq1WO7q7uzt7enq6jBw5ck5UVFTRvn373tLr9aKmpkac
PXv227Kysr+cOHHCsnz58i20ze1cv9Fmn048xrWbm5unh4eHpxuHJZ2dVbT+
MgcOHNhj3rx5AXv37p2WmZm5LScnJ5+mv05JSXkqLS3tD7R81mg0Jul0unkJ
CQmD586da5uLvHQCbcxF0mE40vE40vdAkzwuN4QQQgghhBBCCCHs2Npe63F3
d3d0cXHB/58llL4WCkBbQS4SKiFykQAA0PXgz/qrqvQBgk4BcpFQCZGLBADY
Aw52Ao85zdAsjz+tIl14XGo3NzcnHx8fl+HDh3uNGzfOf/78+es3bdrUkJSU
9FF2drYoLy+/WFNT85HZbH7o2LFjp2NiYuYHBgb2a757Z2dnV3d39+6enp7d
aZ8eKpXKldbLupCcu3QdM2ZMz+jo6MH0GNO3bdu2aePGjafWrl2bR9Pc+Pj4
o/v27Vu9e/fukJUrV/pNmTLFvV+/fk7Nz0XKRVpt7Xy9vb2dBg8e7EyPp5o4
caJq0qRJ6gkTJqiDg4PVY8eOVdO5WuVlCCGEEEIIIfwx5T6EpIvtstLHBmFn
sFkba1WljxMq+x6Rr+mMHz9ePWnSJJfJkydb50eOHKny8/Pja09dPhup9LVQ
ANoKcpFQCZGLBACAzgt/pl+Uvdg4vZb7fn/x0v2RlwTXCnKRUAmRiwQA2AMO
dgLXV+RsJM9zHlKqFeno5eWlGjVqVHeu47hu3bppCQkJR44dO/ZAWlra55yL
NJlM/ysrK3uloKCg7ujRo7uWLl0aMnTo0F7N98/7c3V15VKRbmq12kWqJ8mq
pCnXqXTq27evmv4W6B4cHDxg4sSJY8eNGzdj7NixC2h5QUhIyIxp06aNCwsL
G0TrewwaNEjdvXv3Fq9nc63I1nKRfA182LBhzjNnznRZtWqV29atWz22b9/u
uWXLlm7r16/vtmbNmm5r167tTudrXYYQQgghhBDCNsr9iCZ52Q6OCcJOJ/fX
bduapOLHBZV17dq18jUdz02bNnXfvn179x07dnTfuHFj9+joaI/x48e79O3b
94pxR+TrSPJ1sc6O0tdCAWgryEVCJUQuEgAAOj780S3XemwLX30jxKdfCvGv
L4T46HMh/vmZEB9/0bj82X+F+Pb7NjymTV4SgJZALhIqIXKRAAB7wMFOcHFx
UXEu0WaV9Vpw3759XcPCwvpu27Zt3KlTp1bn5eUZDQbDkzk5OV9xLjI/P/9f
ZrP5EZpmJycnr1i5cuXtRM+WHkPViDMHMK92LFyj0sPDQ+3p6elO0+6kF0uf
190JD9KFljlnedXr1a3lInv27Ok0ceJEl3Xr1nkeO3bMS6fT9c7Nze2r0Wh8
UlNT+504caLfyZMn+6ekpPTjZQghhBBCCCH8Mbn/YGN/yX7oV0B4c2zWxlpV
6eOEynnq1Cm+puNDU5+MjIz+ubm5vnq93jc9Pb3/rl27vOfMmdPN399f3do1
JM5GXu06U2dB6WuhALQV5CKhEiIXCQAAHZeLUk3Hlvjft0K885EQf3hdiJ89
K8SZx4Qo/a0Q+b8RQnefEOk/FeL0vUKk3iNEyj2N82lk5s+E0P9KiKKHhKh6
RIi7nhTiNy8J8dx7jbnJlmpO/iDVo8R3CLAFuUiohMhFAgDsAQc7wcXFRd0s
F2nF19fXY86cOf6HDh2KKCwsTKiqqqovKyt7zWAw/Dc7O/tbo9H4XklJyU/M
ZvOhtLS0WRs3bgycMGGCV48ePVyceYfSAN28L65JydeZ5WVbpGvPN/X6c2u5
SG9vb+fp06e77969u1deXl7/mpoa//r6+sEVFRXDioqKhtO5jaDzGknnO4KX
IYQQQgghhLAVR9gorxtmY0vboZ8BYfuLttYFLSgo4Gs6w2g6rLS0dGRtbW1Q
fX39qJKSkpHJyckBMTExfQYPHuzW2jUk5CIBsC+Qi4RKiFwkAAB0LOTakLZw
fccPPhXiz28LcfdTQhh/LcTRC42f8Ql1QuyuFSK+uvHznqe7aoTYQ+v21DWz
tnHbnXR7nLT9Tmlb/s7gv004T1n1qBAPvCzEqx8K8e8vmx0fxtwGEshFQiVE
LhIAYA842Amurq6ci7xiLCE/P7/u8+fPH3HkyJFFpaWlqfX19b+0WCx/NxgM
32ZnZ39dUFDwWkVFRSWxiZbHbN++vXdISIiHl5cX70/N42U3z0U2fwy1Wu3o
4sJDa1vrSF61luS10Fousk+fPqoZM2Z0279/fz+z2Tz4/PnzQRcuXBhXV1c3
ic4xpKioaIrJZAotKSkJ4WUIIYQQQgghbKOTJCdK08k2t02RVPoYIewsTi4r
K2uy9PL2BrugxcXFfE1nktlsnlxVVRXa0NAw/c4775xeUVERmpKSMmbZsmX+
Q4cO7db8OhFft+JrVshFAmBfIBcJlRC5SAAAsH/kMatt+e6iEK99KMR9zwlR
9GDj3w22OcaEeiH21Td+1h842/h5L3vgR7xiW+k7g/e31yZnubO6MSdZ/1jj
9wiPyf1jxw26DshFQiVELhIAYA842AkuREu5SF9f315z584dd+jQoXVFRUWG
qqqqx0pKSr7U6/UXORdJ656ndfnV1dVLcnNzB27fvt110qRJzt27d+c6kZyJ
bNon5xSbZxX5mjPnIkln6fHZG85GcpnK1v6vv7e3tzoiIsIrISHBv6CgIOjM
mTOTzp49O72ysjKysLBwTl5e3jyDwTCPbpvLy5KzbeYhhBBCCCGEkJ0rOYf6
RuxsMpKcJU1nN9uuaXsI4bUptbHmzrbRuk7p44TKmZ+fP8dgMETSdHZpaen8
2tra6Pr6+kUlJSXzkpOTpy5ZsmT44MGDvZpfJ0IuEgD7BLlIqITIRQIAgH1j
myvk+b992ji2dcbPhEhsoL8ZqhrzifJnupxtbK/vDc5I2mYnuc4k/93CWczk
u4QofECIP78lxFffXDpuuYYk6FogFwmVELlIAIA94GAnuLi4uLaUi+zXr1+f
WbNmTd2zZ8/OnJycitLS0hdNJtN3er1eZGdnf5Ofn//nkpISDa2LPH36dM91
69bZXkOWc45WWspFyjhKODSOpX3DY2pfLRfZu3dv9bRp03ru3LkzgM5pjMVi
mVpRURFJ57CQlhdlZWUt0Wg0S+j8FvMyGS25CEIIIYQQQghbMboVlT4uCDuz
aG+wSZ1OF63RaKK0Wm200WiMKS0tXVFeXr7SYDAsSUxMnBEVFRUUEBDQq6Vr
UshFAmB/IBcJlRC5SAAAsD+aj5X95ddCPPOuEKW/a/zs3i2Nd831Gw+ek/KQ
Cn2PcEaS/2bhqVxLksfpPn2PEL98Xoi/ftz6eYHODXKRUAmRiwQA2AMOdoKL
i4tbS7lIHx+f/hEREXPi4uKOZWVl3WM2m98lhcFgEDqd7lutVvtHWn/qxIkT
U3bu3One7O4qvrQsL/D15Ru4xsw1JJ15XO62XKu+Wi6yV69e6tDQ0J47duwY
RMc+uri4mMfMnmU0GhdoNJrotLS0xenp6YvptkW8zNfUJaMhhBBCCCGE0Ebb
vgL3H7gfESPLy9L6qGYqfdwQdmipfbGLJBfbzCt+bFA5MzMzo9LT0xdmZGRE
5ebmLjGZTMuLi4tX5OTkLN6/f3/E/Pnzbxs0aBBykQB0EJCLhEqIXCQAANgX
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
4Wr1IsPDw+V6ke/J9SKrq6s5F/nq6tWry0aOHLmCN5XuYs1FckiRc5Genp7u
Hh4eaoLzkKyznIscOHCgW0RERLdNmzb5HT58eEJKSsry5OTko0lJSfmJiYll
x44dM504cSKV5rdu2bJlzqxZs0YOGjSoF2crmx+nM68kbNe1oV5kz4yMjP5m
s3lQeXn5UJPJZK0hkZOTM4p/tzRcqgNzm808hBBCCCGEsOvK/YLRJI+fzRmr
wUajMcDQWAdyAvUjOJ/Fmch4rVa7g1wp5bX4tiCuG0nbyfuxNUhaD2FX97K+
ONdXlbyd2g+3o+nUnuZRu4qhdraKXE3zK2gdj1sfyePZGxrbp5yrHNnCfmEn
lT9jpTFAbisqKrrdYrGMrays5DG1RyUlJQ2Jjo72Qb1IB+QiQYcBuUiohMhF
AgDArcP2M/b3rwqReK4xF9jZ60P+2PcQZ0Ljqxszoh9/3vj8YFztjg9ykVAJ
kYsEANgDDnbCj+Qit8fFxZ3Lzs5+t7q6Wpw7d05UVFSIjIyMv2zdurU8LCxs
NW03oPl96buc85BunIF0aBxb+zIGDRqkjoqK6n348OHb8/PzYywWy8mSkpKz
NP+o0Wh8kuYfqqystJjN5oMnT56MWrFixaiRI0f25nxl831x3rJ5XvJqucgp
U6Z4bNu2zTszM3NgcXHxsPLy8lEmk2lcXl7eeDrPCfy7Jf+uyctksDSFEEII
IYQQdm25jzBRmnL/gfNXnGkcq9frw3Nzc++g/kSsTqc7oNVq95FbaT6G1s2k
PsZkun0Cbaf0OUBoz9r2xbmNjZHktjON2tB8akvLqU1torYVR+6k+R20bgPd
toS2mZnX2Eb5PqPJsS3sF3ZS6T0QTO+HYHo/BBcWFk60WCwhlZWVIQUFBROS
kpKCoqOj/QIDAz1bui6GXCQA9gdykVAJkYsEAIBbw0WbcbPvfEKI3bVCJNR1
7UykLNfJlGtHnvqJEK///dLzhq+ljgtykVAJkYsEANgDDnbCVXKRw8LDw7fF
xcWd0el0b3MesqamRpSUlIisrKw39u/fX7dy5crNYWFhQ0aOHNk8r8i1I91I
V/KKLCOzaNEiv5MnT86i/R5saGg4V1tb+0xZWdnfyU/Onj37wr333lt/5513
7svLy5u5ZcuWoaNHj/bi2pMOzXKWtM65eV7yKrlIVWhoaPft27f3o3MYWlxc
PJoeb2JhYeHUnJyc6RqNJlyr1YbTPMu1KKZJTocQQgghhBB2XblWHRnOGUjO
aJE8bm8YrZtBLqZtNmdnZx8gk6n/lEz9iv005Wwk5yU5zzWL70+GyeZc6muE
38pzgdAeldoHt6/pUvuaIhkuZSJXktu5nVG7Ok6epPljtG4fuVnORpKh0v14
H037Vfr8YPtK74dpGo0mjD57pxmNxojS0tLI8vLy2QaDITwxMXHCwoULAwMC
Anq0dH0KuUgA7A/kIqESIhcJAADtj5yJ/PdXQpgeaqyNyONIH7CD7wF7kr+T
9khZ0T+9oehLBm4CyEVCJUQuEgBgDzjYCa3lIn18fIaGh4dviouLq87KynqV
85ClpaWioKBAaLXav6WkpPw0MTFx/7Zt2yYsXry4+f+551ykO8ljFKmb77tv
375OCxcuDEpOTt5YXl5uOnPmzNOVlZX/NJlM3xcXF39XX1//4r333lt61113
rTcajbdv3bq175gxY9zVajVfp74sGymP0y0v098RjlfJRapDQ0O9tm/fPjAz
MzPIbDZPovOanp+fP5vOaV56evqCjIyMBRqNZj4vk3Ml50EIIYQQQgi7rHN1
Oh2P3zsvJydnPo+ZTdOFNF1E0xW0fgtND5ApNJ9Famn702SSVNNuPbmM70PO
4fG1aT33QbivMd9Gpc8TQsWU8sPcvuaRc/R6PWeJI0lua5yJ3EHbHCYzqP0Y
yEKaN/AyeYhu30wuoW3nSvebI+UpeYz7+UqfH2xfs7Ky5mZkZMzJzMzk13+h
yWRaXFxczO+HBQcOHAhbsGDBiEGDBvVsfp3IkeBrSshFAmBfIBcJlRC5SAAA
aF/kz9X3/iVExs+EiO/i42a35XuJx9XeUyvEvc8I8d33lz+PoOOAXCRUQuQi
AQD2gIOd4OLi4t5KLjIgIiJiZXx8fJFGo3nSbDb/12Qyiby8vB90Ot1nubm5
f9Dr9drMzMzoffv2BURHR7va3J1zirzMNSOv2Hf//v2958+fPycpKSmlsLDw
VxaL5WPa/7e0P97//0pKSv5QW1ubVlFRMSsjI6PP2rVrXYKCgpxt9t2Ug2ye
gbxaLrJ3797qqVOn9oyNjQ2gcxpDjzOVawjk5+cvpOVF6enpS1iaX8zLZLTk
IgghhBBCCGHXVKvVRrPUD4rKzs7mLOQSmvJ4vut4HF9af5Cmp2m9niwizWQB
5yPJ4+QecgNnI8ko2p4zWgvIKE1j38O2DwJhl5PawiJqF4upfXDtVW5jUVL+
OIq8Q8o8HpAykEW0bQ15jqwji0len0Cu5fYpZZCt7ZX3SbdbH0Pp84TtJ1+b
Sk9Pj8rIyIim906MyWRaUVxczHnaJQcOHJixYMGCoEGDBvVqfp0IuUgA7BPk
IqESIhcJAADth1wnkseFPnZBiN3IRLZJuZbmzmoh6v4oxLdyNlKxVxJcD8hF
QiVELhIAYA842Amt5SL79+/vGxkZOT8hISFFr9ffV1ZW9jez2fwdZxezs7NF
fn7+67TubGlp6T6NRhOxdetW/9DQUA+uBdnS43h6eqpId9Jr5MiRUxYtWrT3
4MGDZ3Jycl6j/YqioiJB+/6O9v1hbm7uXWR8WlraqN27dzs32xUvX3cuctq0
aT137doVQI81uqqqKrS6unpWcXHxAlqOkn6LWUSPHc3LEEIIIYQQwi4r9wkW
SS6UMlpc026BlLG6g9xI83uk8XwNdHsFWU+eJatpHdezS5fG194s5SI5r8X1
zObRfhfYPEZ0s8dW+vwhbG+jbeQcZDS1j2gpO7yQ25qUkVxFxpJHaV0uWUW3
/4T8Bfkzsp7rR9L6JHITuZTvT3KdSM5Gck6upcdV+vzhTZRzsNJrvrCgoGCx
xWK5o7Kycnl+fv6ipKSkiOjo6NsCAwORiwSgg4BcJFRC5CIBAKB9kDORL/9N
iCPnL40PrfTnfkfywNnGbGTVo0J8f7Hx+cTXVMcBuUiohMhFAgDsAQc7wZVw
Jpqv9/X17TVv3rxJhw8f3mo2m001NTVPlJWV/Uuv1/+g1WqFwWD4mJb/WFlZ
WZqfnx9L201fvnz5oClTpri39Djjxo3rRY4cO3Zs+MyZM/euXbu2+tChQ0/R
vr7gOpS0L0GP8zHt/6nTp08bDhw4ELNhwwbf5vuhvxNU9Dl+xfHa3N5qLtLb
21sVERHRY9++fQOKiopGnj17dnxDQ8PU6urqCHrsWUajMbKgoGA23RbJy+RM
yVkQQgghhBDCziv1SZq0WT+bpXUzqZ8QTn2VsOzs7OnUh5mp0WgWkKtofpdO
p0uj9WU5OTl3k/eTvyJ/QpZL9e320TbrpXxWJPWlIgoLCyOKi4tnkJHS40Re
5Tgg7PBe7b1NffCZ1B/ncbNnUVuZRW2Lp7OlHDHX/Isjk2nZSJ6h235J/pZ8
kLybNNP6Y5yL5NwyGcntlKYzaZ+875nU5uS+fWRbjgl2LPn1zc/Pn8HT8vLy
2fX19QvOnTu3sKysbPbJkydDYmJihg4ZMqRH8+tEyEUCYJ8gFwmVELlIAAC4
+cifpa9+2JiJ3ItM5A19T8VXN2Yjv/mu8bnFd1XHALlIqITIRQIA7AEHO8HV
1VXt7Ox8RY1HPz8/9/nz5wccOXJkVklJyf76+vozFovlZR7nOjMzU2i12q/z
8/PfKy4ufpSmhWlpaTv2798fvmnTJr/m+1q3bp372rVrg8iYNWvWJG3evPnc
7t27nz927NjHnLE0m82iqqrq3xUVFc/T/hsSExP33XHHHVMnT57s1XxfXNuS
/lZw5mvXrZ0T5yJbWu/t7e08Y8YMTzpOH5PJFNDQ0DDizjvvHF1XVxdcWlo6
oaioaAKtn0jnO4GXyfGSEyCEEEIIIYSdX5u+ADuJpXXB1FcYYzAYRmVnZ9+u
0WiCs7KywmjKNee3S7nI2pycnAdp+meaPkH+mmtGklwvciePu03zkdTfCS0o
KJhA/ahg6l8FUx9oYnl5+cSysjL58cdLx4B+COx0NmtfTZrN5uD8/Pzxubm5
46k9TaC2NZHaVii1m0hqN8toPdeLPCHVYD1P2zxA/oF8RKoZWSrlItfT/Fy+
LzmB5oP1ej3vO5gfQ3q8iW05JtixpM/U8fQ5za/z+MrKyokNDQ1T7rzzzin8
GZuSkhK0bNmyAUOHDvVs5RoScpEA2BnIRUIlRC4SAABuLnKdyDf+IcTROxvr
RB5AJvKGlOtG1j/W+Pziq6pjgFwkbElnZ+em7GJ7iFwkAMAecLATXFxcVC1d
/+3fv79zZGRkj/379w83GAzRFRUVqWVlZb+i+b9rNBqRmZn5g06n+1qv1/8z
Nzf391qttjAjIyM+NTU1PCUlxY+01nSkqcepU6duo2lMSiM/IV8jv0pLS7vI
Y3KbTKbPaP8vlpaWXqB9nNqyZcuSkJCQ4d7e3m7Nj0tFcH3L68lF9u7d2yks
LMwtLi7Oix63r8Vi8auqqhpEjxtoNBoH03kMpvMZQuc4mJchhBBCCCGEXdYh
5FDJwLy8PP+cnJwB1Afyp77PEHKMVI9uA3maPEd9jD+Rr5KvkI+SPKZ2GrmD
+hqLqa8xjfYzjvY3Ij8/f0hBQUEgyfsfQsvNH1vp84ewvR0iS33wAGofgdRm
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
VlbWA1Ibe0fKRL4r5SKf1mg0j1C7+jlNqwoKCrLKy8vjeKx7anNj4+PjfUNC
QjxcXFxau66A6w2gy6D0tVAA2gpykVdXzkMeOi/EkXuFOHxX4/q91f8Tuyyf
i51ln4r40k9EPE13Wf4jdlV8LvbQbZyB5Psk/YTud48QiRcasxQJtY0Zyf1d
PCOJXCQAAFwfciby+feE2GPH42fLdrZcpPX5pu+wXbVCGH8txHcXL9XvBPZB
Z85FcvZOrofIurm5iYiICHH+/HnxwQcfXPY8yNnHtuYeb8bzLucm+bFt+fjj
j8Uvf/lLaw1HT0/PpuPnc7lZ9SPlsbMXL15sHe+baS2zycjH+NBDDwk/P78b
zkYiFwkAsAfaftVSObh0JA+r3dJtw4cPd1m6dGmPI0eO9M/LyxtiMplGGwyG
SVqtlse5iszPz59P6+bn5OTM3L9//4R58+YF+Pv7d2vlcZwwTjYAAAAAAABA
SbhfQv0fp+br3dzcnEaNGtV91apVgSdOnJheWFi4oaysLMNsNp/X6/VcH/9F
8i/UD+JM5PPS2L5vSrmt12j9n+j2C2Q29Y92FhUVRZWUlIyjPtOA5ORk3q9t
LbvL+kWt9ccA6Gjw/3fk93NLff9+/fo5z5o1q9vevXsHUJsaa7FY5pWXl28t
KCg4Re2nNDMz817OPtL8c5w7ltrXG+RfyOfotieofT2k1WrvonZlKi0tPUJt
dHVubu60hISEoXPmzOnl5+enbuWYnPB/MUFXQelroQC0FeQiW5ZzjSznGTnX
uL3wfbHk8C/F1FVZYuTUtcJ3WKjo0XeIcOvmLVzcuglXz56iW+8Bome/YaLf
0BAxLGSFGL/wkJixqUjEJN0vNma/Ys1LHr23MSvJtSWVPkclRS4SAACuHfmj
8rP/CpFG3yd766T6hXbwud6anTEXKX+P7ay5NJ42vsfsh86Yi+TMne05+Pv7
i7i4OPH4449fdu6cA7xaDcdbiW1tSltefvllkZiYKIKCgprO50bH15brREZH
R4vPPvvM+jjNH7clvv76a+vUZDLd8HEgFwkAsAeu9dqlEqjVakdXV1f5t8FW
fydISEhwOnz4sMe+ffu8du7c2Yf03b9/vz99h/jv3r273/Lly1vMQzaD60I6
02PxUN5OzepW3nT49xg+P5bnIYQQQgghhF1L2/6A1PdxdnNzc+a6cj169HDu
37+/evDgwW6jR4/uPn/+fN+4uLjbU1NT5xsMhviioiJDQUHBL3Jzc5/VaDRv
sDqdjsfQflbKRr6ak5PzFk1fp9ueTk9Pv58so+2Ty8vLN5w7d25mfX39bbTs
s3nzZnd6DDmP6Sj1jazH5e7u7sS19dFvgR1R2zZG7Yrfy1bpfd3U3x82bJhj
aGio85o1a7ofOXJkELUJrsl6B3nYaDSaqV3dm5WV9YhWq31KqhfJY2m/JOWP
efoC3cbt8DG6/X5qn7UmkymLjKN9LaB9jlu7dq3f1KlTPYYOHeo8cOBA62N7
eHhYr3dIbd7J9njR3jq+tq8j/h/uJZS+FgpAW0Eu8kq5nuOhBnou7hRi9ekn
xKiIraJn/xE39Hu2Z08/4TsiTIyasVXMi68V24s+aMxGdtG6kchFAgDAtSN/
Vt71pBDx1fRZ2gG+sztrLpJrdCbUC3HkvBD//Pzy1wcoS2fLRaps6kP26NFD
nDp1SrzxxhuXnbM8trW9IteRtOXDDz8UBoOhqVajfK7XmkuUn5+oqKimTGRb
ngt5LO2nn35aDBs2zPq4qBcJAOjotOmCpcLwtWO+jnwt15AjIiKcSdfZs2e7
z507133GjBlX1GRoDR47izOR/Btge+ciZfjcIIQQQgghhF1POTfD/YLmuS0/
Pz+X8ePHd5s3b573qlWrBu7atSsoOTl5elZW1src3NzEvLw8HkP7gZycnJe0
Wu3b5JtSTusZKRv5Et32GteLpNteSE9Pf4S8oNfr8y0Wy6GGhoYVZ86cCaVt
hmzYsKHniBEjuN/kaCsfIx+L9H/VFH++ILxWbfvd8v+75Pe0l5dX022LFy92
2rJlizoxMdGL2shgahPTDAbDJlJD7eUuakOPURt6UafTvSKNU/+s1M6ekzLI
fBtnI5+m6cN0n3voviYyifa1Oi0tbfrBgweHbdy4sXdUVJTr1KlTrRnknj17
Wo+Htb3uIX8mKP3cwZsn6oFeQulroQC0FeQiL5fHzeaxsrk+ZFDEFqFy8bj0
e6eTs3ByVlmnjo5Oko7CQfod9dI6p8ZtnVS0vdq67GD72yktu3r2EpNjTjRm
WrpgNhK5SAAAuDbkz8m/fSpE0nn+vrLv8bNlO2suUv4u21ktRMMT7f7yg2ug
s+QibXN6PXv2FDt37hTvvvtu03naS13Ia4Vfn2+//bZp+Z///KdITk4W/fv3
bzr3tr5eciaSx87+8ssvrftry3Mib/Pcc8+JgQMHXpZrvJHXywG5SACAwlz7
1cuOg4+Pj2O/fv2c6PviijHofoxblYcEAAAAAAAAdG04L8N5w+bLXC9yyJAh
rvPmzesVHx/vf+rUqds5q5WXlxeTm5sbr9Pp0rVabV12dvbvOf9Iy2+Sr0u1
656WfE5a/gtt+1JmZuaT5AN0/zOlpaXa2traeIvFsiA9PX3M6tWr+w8fPtzN
oYUa/Wq1usWxvQHoiMh1/OTllStXOh46dEhFbcNNr9d7UxsbSW1mNrWnXaSZ
5h8iX6F5HpP+HSl7zO3rz+STUkbyRakdckbycfI3ZB21u0yaxlHbjabbglNT
U/327dvXfcWKFdZx6729vbm9X9G+bD8TAOhsKH0tFIC2glzkJffVXRSJdwmx
7NiDokffwTa/zToLR+vvs45NmUeed/jR30cbt3V0ap6VbPwNd0ToapvxT7tW
NhK5SAAAuDb4c5Ktf0yqFWnn42fLduZcJMv5VD7W9z+RXqd2fyeAH6Oj5yI5
X+csjQvNrlmzxlrTUOZm1YaUazjyeNOsPOa1vH9Z29tsb79R5H3LcJZw165d
Tef+Y2Nay9txncj//Oc/1n20ZexsuU7kCy+8IAICAi7LV97o6+aAXCQAQGGu
9dqlPeB4Cf7dwFa5pkmrd5XkWpDWgpA23LLakAAAAAAAAAAg0zwXaQvnIpct
W+Z98uTJYSUlJVNqamqiLRbLNqPRmKzRaAozMjJ+QtM/SJmsVzm7Jc1zZusp
Sc5svaDT6V7Oysp6kXw8Nzf3lyaTqYw4VlhYuPLUqVNT1q1bNyg4OLhbjx49
rsg/cmaLjhO5SNBZuOzaQVxcnEqv17tXVVV5VVdXDyguLg6mNrOY2tfhzMzM
Gmo7nHPkTOSH5HucM5ba1p+kDOTTNuNqW9sf3ecRams/oX0U0PzhgoKCNdTe
ppeWlg7VarW9Y2NjXVs7Hga5SNCZuZnXNeXfjLiuBvvNN980zcu/UeE3F3C9
IBcp5RrqvrfWiYzef1dTjcjL8o+OjtZMo4PN75+cb+Rt1W7dhIt7D6sqV09r
jUiHZr+V8n0b99d4P97fbdM3IheJXCQAAPwoF6XPyL9+3HHykLKdPRdprRlZ
I0TlI43Hj+8z5enIuUhH69+bjcc6aNAgceHChabzutE+H99X7lPK2cAbQd6X
nJW80eOS+e1vfyvGjRtn8zf0la+dWt34t/aSJUuuqU6k/DjPPPOM8PX1vanv
DeQiAQD2wHVcvlQUaxiSUKlUziTXV1BL8ryzw9VzkQ7SNmq6qyt9N7hI8rJK
Dke28ykAAAAAAAAAQBPcFeF6jC3d5u/vr162bFmf9PT0oNra2pkXLlxYV1NT
k5Sfn2/Myso6S+sfoOmfm2WynpdyWk9K9eyekta9otVqeTztF3Nycv5A+zhf
WFjIYwRvTU1NnRUfHz88Kiqq19ixY9VDhgxpntFCLhJ0Jpre35MnT3bevXu3
e3FxcW9qXwMaGhqCysvLZ1B72ZCWlnaax52nNsPjZb9H7ebvUi7yZal9PSZl
I5+U2thL0m3P030ez8zM/BXto0qn02WYzeb4urq6hWfOnBlL7c5vz549nqGh
oa22qdY+EwDoDNzIdUy5dse1/r4k36+1319s99tc/GbTdUEusrFO5OG7hViV
+phQu3W3yUTKv3Ne+r3Uy2eouG3aBjFri1msOPmI2Jr/VxFf+onYW/0/sbvi
C7Gt4H2x+vQTYt7OOjF+4QExcFSk8Ozpe3l9G5WL9bdT3g9ykZe/DwEAALSO
5eHGDF5HykZ29lyk/D3OY5q//nfpXPCdpigdNRdpe4ybN28WH3zwQdP5tKUO
YkvPw9X6el988YV45513xPPPPy8effRRcd9994nq6mphMplEQUGB1aKiIlFR
USF+9rOfiYcfflg8++yz4q233hL//ve/r/nxfgzb+pH82h0+fFi4urpe8dzI
dSIXLVpk3U6+748h75vPlzOntvu6GSIXCQCwB67zEqaiyNlIxuHyWpFtujvJ
tSJV9JnOWmkqGIlcJAAAAAAAAOAWIuciW+qL9OvXT7Vo0aK+KSkpY6qqqhae
P39+Z3V1dXZ+fv7ZrKys36Snpz9B0+ekXOTz0rjZzzbLRf5ZWv+qTqd7m3wj
JyfnWb1e/0uykNYn0D4WnThxYtyePXt816xZ4zFv3jyV7XHw8XFdy1v3rABw
8+Axs23HzXa4dP3AMTg42DU+Pr6nyWTyp/Y16ty5c9PLyspWULvYn5aWlk9t
7BdarfZ5qV7k+9I42i9J7co2F/mcTS7yRbrP05mZmQ/T/e+iNldYXFx8tK6u
bs2ZM2emFRQUDNu5c2fvSZMmubR0vNI439bLFO3/7ABw67nea5gt1e7gehbU
tgS1NXHw4EFBbUvs379f0Hea9XerBx98UHz66aeX3ed6fjsDXZOunovcV39R
HGy4KHZaPhZ9A4Kl314v1YWU85Funt5i+ppssb3o/0TST4TVxDsF3VeIA+ca
cxE85eVDtJ5rTx79Kc2fF2Jjzitibny1GB6yQqjUbk37Ri4SuUgAAPgx5M/H
v/5L+c/u67Gz5yKt32l0rHHVQtT8oTETia80ZemIuUg5n8fjOp8/f77pXK6n
RqQ83nVz3n//ffHzn/9cZGVliQ0bNoiwsDDr43l5ebX5OLt37y78/f3FpEmT
rON7p6SkiLvuuqspB9iW42jL8cs89NBDIjg4uOk5kutE8tjZn332mXWbtmQi
5T425zr5+G2f85slcpEAAHvg2q9edhp+bMxtAAAAAAAAAGh3+L9pcTaypVyk
r6+v68KFC32PHDky0WQyLauurj5cXl5eZjAYfpWVlfVkZmbmSxqN5mUpF/mM
lIeUp081y0W+JmW73pGyW7/TarWVdP/knJyctXl5edNoOvTUqVO94+Pj3ebO
netkc4yOzY4ZfSnQYeCcYUvjUru4uDhNmDDBffv27X1zc3NHUPuaWlNTs7S4
uHgPtQ9NRkZGLbWxB3U6HbefN8g3pXb0gpSFfFxSzkW+KGUjX+L7UBv9E93/
l7RcQ+1XU1lZGV9RUbGQ2tm42NhYv8mTJ3u6u7tfUReS25c8pMWteYYAuLVc
67VLub4Gw+ORPfnkkyIhIcH6Wx7//uRwld9guI4GjwO2YsUKa0ZS/i1J3p88
ffrpp4Ver7fW/sjPz7fK8/TdKM6ePWsdn1s+FtB16PK5SB4/+24hZmwsavzd
3Fl1xe+bvQcEifVZz4qke4Q4eF6IhNrvrPfjTOX+es4z2mQaaZnX8+3W7Wg+
8YIQR+7h2y+KTfrXReiyFGsNyZFh68SBpvsiFwkAAOBK5NqD5x4XYleNsMnT
dwy7Qi7S9lw/aoxq4XtNQTpSLpL/1pTzeeHh4U15uuupuWhbb5HhepAvvfSS
MBqNIiIiQvTp06cpV9jScahUqqsq/13cXD7+3r17W7OS/P/4uM9p+3/2rmec
bdsamZ988olYuXJl0+PFxMRc09jZ8jaciRwwYEC7vR+QiwQA2APXduXSfuHf
C/i3g6spl4RU+lgBAAAAAAAAQKZ5LtLFxcXRw8PDqUePHs633357j2XLlgUe
Pnw4jLOLZrM5paio6Kxer/8D5yHJN7Ra7atSJkuuD/l0K7nIV8i3JV+l+z6W
kZFxPjMzU5eXl7eztLQ0qqqqKpgeY2BycnKPmJgY25qRzcfVRr8KdBhay0X6
+fk5zZgxwyM2NrZ/VlbWaHrvzy0pKdlWWFiYRm2kgtb9nNrJH6VcpFwL8qVm
7e3P0vyzUs1Wzky+QPfhsbSfovv/jpbvKigoKCouLk6i9ruK2lxYfHz80Fmz
ZvUaOHCgqvlxIRcJOjvXct3S9verX/ziFyI6OrrV35z4Nyn+PYunvNzS71NL
ly4Vf/nLX6z749+BOGfJcJ3JlvbrIP0OhzG1uyZdOxf5g7XG456q/4refkHU
FhwvtSmeku49fMTG7Fet9SHlnOO1PoackbRmJs431prcYfrQOg43768x44Jc
JAAAgMuRPxo//VKI1Hvo+6oWuUh7lV+XXfT6/Pw56bXD95pidJRcJB+T/Hfn
li1bmuoftjR+wNXOtXlNRs5Cck3IqVOntvq43J/kvqR8DK1lHm2Vt+P7yP3S
1moujh07Vhw/flw8/vjjlx3btfY15eeC73fo0CGxbNmyprGz21KL0nbsbK6N
Kfep2+P1RC4SAGAPtOFyZYdA/p2Dx8bi3w9s5fGneCoPl630sQIAAAAAAACA
jJyL5CxUt27dnAcMGOASFBTkOXnyZK/o6OgBsbGxo5OTk+dptdodBoMhm7wn
Nzf3KVrmTCSPi/2alNN6QvIpm2yknN16Vsp0yTXvXuV6k+np6fdlZGRw/cmT
lZWVm86dOzerqqoq6PTp0/2WLl3qPnDgwCtq2THcx7rVzxMA10trucgZM2Y4
rV271vPQoUN+mZmZ46kdLM3Pz0+kaQm1kfs0Gs2fpDG0X5Qyj89KPiO1sycl
n5LWPSf5vJSNfI7uz2Nt/4r2WUv7zsrLy4ulx1pAjzmOHts3IiLCfcyYMc4t
HS+uX4DOSluvWcq/1bz77ruC2kvT7yn8e5Pt71RX+63K9jcq+Te//v37i/vv
v9+6b/49hrORCxcu/H/2zgM8imp945tKSKhSEmog9CogIE0s9NBBqnAV6S0E
AgREE9JDeg8QQkJCpIoKFsRyvXa6ohRRAcHyF9vlShOB8z/f7JxldrO72YTd
2U3y/p7nzU52Z86cmZ0zs7Pfu9+ni4OJecX0okWLpHlLE4cDFYPK7IuUcjnu
YGxCyMdGYsbavJH9piRIuR6Fr/H+RLkkySd5R6q3HbTL/vvAXoIvEgAASkbk
inz/NGNz88rnNboy+SIXFjAW9gpj17Up2FFP206UB1+ksj/R0dG6Ppcmr6LS
F0jLHThwgE2cOJF5e3vr3Sca3ldae1sM70WV66Aa3VTzeufOnbraBERp7jmV
+0RMW+I3FOug/JV0b2zr4wC+SACAI1DCV5XlCooZlCR79xEAAAAAAABQuRF5
IcWjyA1HXsP69eu7devWrdqoUaPqzZgxw3fZsmUdQ0ND+0dFRU2MiYkJWrdu
XUZcXNwbXMdjY2O/5fpOrutrzhd5SPZsUR67k+SJpNyR0dHRxyMiIv4TGRm5
OykpKS03N3dFUVHRhE2bNvUKCQnxGzlyZK0GDRq4GdsG+bdnuL8C5QLxG0rl
c5MmTXJesGCB23PPPVedj4OmfCw9zMfVU/Hx8ZFcu8lPzJ87zfWNnGv1uDy2
xPg6bCBRw174I0/wZUn0/H94m+RnzuDTK/nYmxwWFtZv5cqVLefMmVP7ySef
9Ojfv7/kNfby8nIyHF+oWw8qGiV9V6nM7bF3715dTS9lLTWNmXiTUobxLcrd
QY+1a9dmH3zwgbSO77//nrVq1apYPEgsu379emk+S/JugIpFZfdFLt/FWJ8n
IxnlitTI48HJSTtGPGt6S7kig3Zqcz5ad93Wb7M8Cb5IAAAwjzgt/v0PY0n7
tbkIl5azXJGkyuKLlMTfn0UFjH3yrbxNuLbZBUf3RYq+eHl5sW3btkl9LU0e
ReV9JE2//vrrrG/fvnr3hHQ/aM9tFr+/Uz7Xvn17tnXrVnbt2rVSb7PyfbVk
GWXt7CZNmqhyDMAXCQBwBIx8PQkAAAAAAAAAwEbQ77UMc8GJ33E1atTIbcCA
AbUWLFjQJDo6umN6enr/zMzMcUlJSfNjYmIioqKi8vnjO3I+uq/l/I+n5Bx2
oqav0hep9Gwdl72RlPvuK97OicjIyMO8zXcSExNf3LBhw7rNmzfPzcjIGLJ6
9epOo0aN8vb19fXQGNTQJkR+S1V3HABlxPB3khMnTnTix7gbH1eefHzVSUtL
axUfH/8YH3OzuVJjY2MPyP7hS1wXZe/xURNjzJiOyWPtS3mskl95P297Cx9v
kXx6Ll+3f0pKyoN8XQ1XrFhRfcKECa7K/ir7byrfJQDllZK+qxQxEn4NZO7u
7lIMxVhdbFHfTGNBHEbppxRxqJYtW0oxwS+++EJaj7J9MV2lShVdjTPEbiof
ldoXWXBbqmndpvcUPT+kk7N2LDVo1VvhXaxcda5tLfgiAQDAPOK8eO6X8lk/
W6gy+SKXvqi9tuW8r91OegtxeVMfR/ZFin7UqlWLvfbaa1I/LfUHGtbMfuut
t9jw4cPLdO+oloz95q9///5s+/btuu2gbbJ0+0uTJ1LpibRV7WzDbdXAFwkA
sDMaAAAAAAAAAACqYcwXKfDx8XEdOnRorVWrVvlt3LixZ1FR0YgtW7bMSk9P
fyE6OjozPDz8paioqA9kr9VJ2RP5pezDUtb0NeaLPKoQ5bH7irf5ZUxMzMGE
hIQ3MjIyNmRlZa1ITEwcx9ffc9KkSU26devmVa9evWI1s+GLBOUMJ1maTp06
OT3zzDOu8fHxXoWFhQ/wMdYkJyenC/9/eERERCDXJj4uPuRj5BzXz1w/yL5I
GkOfGsnJesRgvB2Sp4UvknzIR/k4e5+3vZuP4VT+/4rMzMzJeXl5fXNzc1vw
1+rwPlUx1Xn4IkFFw9R3lBQbEbEafl0qFkdR/q+MaVHux3bt2rFx48axOXPm
SHWvp0+fznr27Mn4NUwvFmY4zccj279/vzQtckkq11mnTh129epV1b6nBY5F
pfdF7mGsUbvHZD+ksxyz1o6Tpp0GS68vLrBGDW1IKfgiAQDAPOK0uO84Y/Py
4YssD6L3aHEBY8/vZuzX/8nvI65vquOovkhx71W9enUpxyNhaT1p2iaRA/Hi
xYvSfaCHh4du2xxh+yzZfnF/StPDhg1jJ06c0G1jaWqIm0K0QbWzGzZsqOp7
D18kAMAR0AAAAAAAAAAAUA3yQ1KdXGO+yNq1azsPHDiw1urVq1tt3ry5/86d
O6du3bo1OCMjIz06OnpneHj4O5GRkYcUeR9PyB7JowpPpLlcdmKeL6hGcExM
zFnyR8bHx3+UnJy8nSuCv/avkJCQRxcuXNhy3Lhxtfr27eveuXNnw/x18EWC
8oTuWG3btq3LM88848mP9bo7duxoysdYp9zc3McTEhKm8fEVyvViVFQU5YQ8
HxcX95OcL/KUPG6EL/KQifF1WDHGPpd9kV/RNB9rn/K23+DK4+1GrV+/fm5R
UdHQwsLCznzdjXifvDp27FjMg0zQ+YLkxFFvlwFgO0x9RylyfBQUFOhqYBvG
apT/9+vXjyUmJupiK8b46aefWEpKCuPjSy8mI2pvU43uWbNmFWtbzNenTx/r
fxkLyg2V3Re5cg9j3i16mPZFvkQeh8pb79pWgi8SAADMI+Ua5H/WvY58keVJ
dH2bza9vxy/I24Xrm+o4oi9S6YkUeSIt9UQq/YJFRUWsadOmunaVv3krL1LW
SKhRowZLTk7W7Yv78UaK++zPP/9ct4/UyBNp+B7DFwkAsCcaAAAAAAAAAACq
Yc4XWaNGDedHH330gWXLlrXLzs4evHXr1jl5eXnr0tLStkdHR78bERFBda9P
yL7I43KeyGNGckOa8mwdlH1bUh3u2NjY81zfxMXFHYuPj9/HH5P5/wv5uoaH
hYV1XrFihc/s2bOrjRkzRlfjV85dp+ffgkcSOBJ8fNEYUx6TYtqpVatWVZ56
6qla/PhvWlhY2OnFF198LCcnZ1JCQsIyPr5SuF7hxz+NlW+4LnB9K3sbhS/S
XB1tU77IEzExMUd42//m2sXHWQYf38EFBQWTKGckH3Otpk+f/kC7du3cTWwP
fJGgQmHs+0kR5/nggw+kmJgxT6SI3fj6+jI+ftm1a9d0y4vaYYYS/N///R+b
Nm2a0RgQ1crWGMRuxLoXL16sax9UPuCLZFK9bI3CFynqaHv79WCL8m6wJUV3
WUAh6mhbU/BFAgCAacQ58Yc/GFu+nV+vCu1/3i6rKpsvkvyrlN+z6FPbHyfA
OI7mixS/VXNzc2O7d++W+qash20O4Re8dOkSmzx5st59nGG9gfIkw/vggQMH
6nJHluWeVCxDeSIbNGhgl/ccvkgAgCOgAQAAAAAAAACgGnIdbaO+SG9vb/cn
nnjCe/HixQ8mJCSM3Lhx49L169dnJycnvxkTE0OeyFP88bTsi1TmfzTlhTTr
i6SceFzfkX+Lt/s2b39jdHT0Kr7uKenp6X3T0tJa8Ofqzp8/32PAgAE6L6Sh
Pws1foEjYarutLu7u1PHjh09pk6dWjc8PLzVhg0b+uTm5o7Pzs4OiI+PX8eP
9QKuA+RhlHNEnpEfvzAYP5b4Io8r87rGxsYe521/zPV6XFxcfkZGRlROTs6c
rKysobwvD06bNq3hgw8+6Fm1alWjdetJ8EWCioLhd5PCE/nDDz+w5s2bG43V
iP/9/f2l2JeA4mHmYirK2tzElClT9NozFTMT3sm8vDy9PoLKRWX3RVI+yObd
RspjxVn36KRxYlW8arMpkcfY8l132eItqKVtTcEXCQAAphE5Bt/+irEFlCvS
Ac7bZVWl80VyLSpg7IXdjN20LB0gsDKO5Iuk+zCR05Hy+xO3bt2yaBuEd/Kj
jz5irVq10m2HvXNfWnv/iHvS+vXrSzUVSrr3NUT528MmTZrY7f2GLxIA4Aho
AAAAAAAAAACohtIXSd6tatWqudStW9etYcOGVbp27Vpz7NixzQIDA3tFR0dP
TElJeS41NbUgMTHxg9jY2JP8uW/549eyr/GQQU3fo7Is8UUelz1f38n58E5G
RUV9EBYWto0/xvL1LsjNzR1eUFDQNTs7u+nKlStrDhkyxNXUNhnk5gPArpjy
Rfr5+Tk9/vjjHjNnzqwXGhranh/nAzIzM2empaVFxsfH5/Px9QbXJ3yMHZP9
jF/IY+24gefR3BgTOiYvS6K69Z/ztg9R3te4uLjdfN3pGRkZy5OTkyeuXbu2
76xZs1o88cQTtVq2bOlWv379YnXr4YsEFQnl95IirkUxsAkTJkjxEsOaZyIe
9NRTT7GbN29Ky9EypYmlCG/kL7/8wvi5QC/OZMwbKZ47fPiwtBx8kZWTSu2L
LLzNVuxirOvQpUwj5fK5F0MVtbQ7D1wgeScDtt5hAZI3EnkjrSH4IgEAwDSi
hvaGf2vPlUvLaQ1tUmXzRepUyNiZn+X3E9c4VXEkX6S4F5s3b57UJ0vyRCrv
yah+QM2aNXVtlecckebk7u4uPY4aNUq6Zy7NPbDYp3FxcVIblJfTHtsAXyQA
wBHQAAAAAAAAAABQDeGLFJ7IZs2aVenRo0eNgQMH1ps0aZLvokWLujz//PND
oqOjZ8bHx0clJibu4o8HY2Njz8p1r88qfJGfGvFFmpLwdQlf5Ek5ZyS1dyoy
MvJgWFjY61FRUTmpqalr8/PzZ2zbtm1gTk5Oh+DgYJ9BgwZ51q5du1guO3N1
wQGwBzS2DL26/fr1cxoxYoTzs88+W3XFihXeERERnfm4GpmUlBTEx9iGuLi4
/ZSTlY+vr0jyGDuqGFvC92hurCk9kqLGvS5vJG//OG/7E1pXQkLCFr5u8mPO
4X0Zxvv04DPPPNPA39/fq0+fPq7t2rXT9Z/GF20TfJGgoqD8XlLEtvi1Ri8+
JiT+Hz16tC4OVFaPovBGZmdn6+IzxuJnIjZIdcYuXryo109Quajcvsg7LGgn
Y/6Ld8pjw8kgvunMnF1cWf/padJ8y3czqZ425Y6kZe3d//Is+CIBAMA44nz4
3+uMRe1jbOEWbW1me5+3y6rK6IuknJH0vu0/IW8brnGq4ii+SLHOwYMHsxs3
bkj9Ksknp3x9zZo1ujYqUo5IQwkf49ixY9n169eL7QdL33PSjBkzjN5vqyH4
IgEAjoAGAAAAAAAAAIDNIL+gi4uLk9I3KPLZ1alTx/Whhx6qNmHCBO+AgIAW
oaGhXWNjYwesW7duSkxMzHKuND69T/ZZkS/yO9nLaC5fpDnPljKXHeXD+0qu
E0z5Ij8PDw//IDo6ek9qampWbm5ucEFBwaSsrKw+QUFBUi672rVruxnbPvgi
gSNB480wX+SMGTNcgoOD3SMjI6vz470xVw+uSXxMhVH+RhoXfPob8h7LuVTF
GBPj64iRcSa8j8a8kUpPJbX1JW+b6mnT///h2sOVzv9fyUXj/ZG1a9e2XLZs
WZ1//etfurr1VatWlXzUhtun5v4EwNqI7yRFjObnn3+WaoNpNPq5G0WMq127
duzy5cvSMvfjTxSeyl9//ZU1atSo2PqERKyIj8Myx59AxaAy+yKXFN5lS7fx
7c68zKp41WJaX6RyvNybbtfvX2xS2McskO+f4Ff4ftrOl5d8KnclryT5JLW6
y5BTsmTBFwkAAMYRHrrzvzIW9CLlK4YvsryJ3q+5+Yzl/kf/PQXq4Ai+SLE+
yuF//vx5qT8l3ePR6ySqHTBz5kzdfVxFzRGpvCcdOXKk9H5Zsp9MveckaqNv
3756basl+CIBAI6ABgAAAAAAAACAzRD1so15merUqePSr1+/6gsWLGgcHx/f
KScn57FNmzZNSEtLWxQbGxsVGRmZFx0d/ZbspToteyJPyTnoDH2RJUlZ4/eo
3IbIZfclX8+XfH1HYmJi3ktOTt6+fv36dRs2bJiblJQ0eOnSpR2GDh1ar0mT
JlVMbB98kcCRcJIlMX78eKc1a9a4Z2ZmeuXm5tbhx3bLxMTE/vyYn8GP+UR+
zO+Xx9UPss7KY+MzWeZqZ1sy5oQP+UvZI/kpX+ebUVFR+VyUM3JuRkaGf3Z2
9oN87DVctWpVNd5nF4Pt0WGsRjgA5QnxnaSo68WvgcVichQ7of+pbti7776r
N//9IGJJU6dONRkHFHk5qF/WWi8on1RqX+RWbf7HZdvvsi5US5vGi4urwXi5
F492cfNgvp0Gs76TotnkiCNS3sil2/k+28HY8l1MyilJPkttTslbLKDgNoNH
0rjgiwQAAOMID93R84zN2lz+r8uV1Rc5L5+xuNcZu3Vbrotu6wMH6LC3L5I+
N5Inz9XVlb311ltSX0q61xJ9ptz/Tz/9tM7XV5E9kbR/NLIn8q+//pK2/35+
HyjqJpw8eZLVqVNHes/V3H/wRQIAHAENAAAAAAAAAACbIedTLJa/TtC3b1+v
wMDAJuvXr39o+/bt/kVFRbOysrJCY2Njs8PDw1+KjIx8PyYm5qioxSs/kufq
4DptHe2Dirx2By2U8GuJ6c/5Ok6SN5Kv92BiYuLraWlpWVzL+GujVqxY0W3y
5MkNe/Xq5enr66u3HXJuPvgigSOh80U2b97caeLEia782PbaunVrnZ07dzbN
y8sj/6E/H1uLwsLCsqKiot6TvZA/cl2S80XSGPtYlnKMmRtnhwyk9FUKD7KU
h5L35z0+vndERESkJCQkLN+4cePEwsLCXps3b27O+1Vr0qRJrqY2zrBGOADl
Dfo+UsS/Dh8+zGrWrCnFZpQxOZHDYu7cuUw5//1C8SSKwaSnp5uMA4p1p6am
SstQ/W5rIfJ1KAUcl0rviyy4w5btuMueSTrLvGo20MY1nYvnlzF8ztXdk1Wr
04Q17zqS9Rofzkav3M+eTviazdvwu+SVXPWq1isp5ZMkf2Qh/JFKwRcJAADG
EefDfce158ml5ThXJKmy+iIXFTD2/EuM/fyn/vsKbI+9fZFiXQEBAVI/SvL6
iXz/dD/27LPP6nkGK6rE9o0ZM4Zdu3bNov1kCeJ+OiUlRfX3Hb5IAIAjoAEA
AAAAAAAAYDNEnWnDWriCnj17ei5evLhJVlZWz23bto0vKioK4tOpsbGxO8PD
w9+JjIyk3HKG+efIa/WJQp+WQZ/Ini+aPsrXd5Kvh/xgX8THx/87MTExPyEh
4Xn+/KTQ0NDegYGBzaZNm1Zj6NChbr169TKsCQ5fJLAbdAwaeAV1vshGjRq5
jBs3zoOPozpbt25tunPnzo55eXmPJScnP8Wfey4sLCwvKirq/XXafKxUQ/s7
Oa8jjbEPZJkaYyWNv48VY+yInDeS/JGH+To/4ON7b0RERA4fa2E5OTnP8rE/
kPetPe9X/SeffNKjWbNmhtskIZ9PMN5AuYW+jxT+xIULFxaLb4n8FZTLgmqr
iXiYNRDtfPjhh0bjQSJmQ3kq33zzTWne+/FkUt9peUtqw9F8iA85FpXdF0ki
b+Ty3Yz5L97Fx4urUR+kGDv0upOT8Rgr5ZOs37w7a99/Bus/LZlNCPlIqrW9
4iVtHknyRtK67L29jiD4IgEAwDSUMzL7PcYWbCnfNbRJldIXKT8GFDJ24qL5
7QbWx56+SPHbs/bt27M///zTons8cR8WFBSka6Mi54lU1s6+cuWKtO2W3AeL
OuOWzEf7dMiQIXrrs7XgiwQAOAIaAAAAAAAAAAA2Q/giXVxcjPoiu3fvXn3O
nDnNqa7v5s2b/8UVkZGRsTU2NpY8keSf+pxPH5Pz0X2mkNJ/9VkpJOYnP9dH
8v/U/mm+nm9kfxg9tysmJmYdf252XFzcIP5/h7Vr13ovWbKkGuXfE/2Xa4Tr
bZuxmuEA2Ao63kz5Ihs3buw2evToGiEhIY03bdrUobCw8NGcnJxJSUlJy/jY
SgwPD98VHR39keyF/Fo+/j+Xx8iHsj4xM5ZMjT+lL1LkjBS+yKN8nZ/x8f02
13Y+9pPXr1+/LD8/fzx/fJj3tfm4ceNqNm/e3M1gmyTk8wnGGCi3iBjI999/
z6pXr64XK1FOU/yLsJYnUtnW119/bTQOKP7n5w524cKF+1q/YXyKtvv69etS
jItigf/973/Z1atXdXXNBKjb7TjAFyl7F8gbuYuxQXM2MxfXKvJYMe2BpPra
Gicn6XVJRnyUbh7VWT3frqzXuBA2I/k8C9qhrbmtra9t/222p+CLBAAA09y8
xVj4K9qcg4F2Pl/fryqjL1K53bQ95rYbWB97+SK1v59xZlWqVGH79++X+lDS
PY94fePGjdKy9Du6iuyJdHNzkx7Hjh0r3TMSlnodjU2bm/fLL79k9erV070v
arz/GvgiAQB2RgMAAAAAAAAAwGaQL5LyKSq9g+Thcnd3d2rQoEGV/v37e8+Z
M6dzZGTkyPT09MCsrKzslJSU/bGxscejoqLORkdHf0O5HGVPFeWcO6rwVx2X
p8sikX+S2vtKzpP3Pdc5vr4TfN1vR0REbIqJiXmO92fqxo0bH9mwYUMr/nq9
efPmefTr189oLjsCueyAmsi13I0ec+3bt3d/8sknH1i9enXLtLS0Pvw4npCZ
mbmMvIh8bG2jGtpynfqTsifytDwexBg5ch9j7KhivH4hey+p7a/4Or/g6/6M
a39CQkJBRkZGzPr16+fxsTb8ueee6zpx4sSGnTt39qpWrVqx7ZLPJxhjoNwi
4jFr164t5okUqlq1qhQzsXatabHuc+fOGc2PIeJC3bp1k+Yr6/qVMakjR46w
5ORkqRZa27ZtpbrhlI+S4kLNmjVjgwYNYqGhoey9997Txf9EPs3yjMgBU551
+7b28aXDdyu1L5IUUHhbyhs5fs27rF7zhxRxTmedJD+kqZgo+ST5+HJ2cdXl
nRRyq+LFugxZwmYkf8NW7KZ13a3UtbWFL/Kjr+/qHYcQBEHQHXb1xl22fJs2
36C1z7/ks6QclGopiG/HLP75Ym8pfJEzc7XLqdlPa+9n4Yt8/XPtde4fXOdU
k8hjT7/PUtMXKdYxb9487bFegifyjnzQ0/0R3Rc6Sb+3qbieSHFfOnr0aPbX
X3/p7QNL9tNHH33E9uzZo7sHM4f4TV5CQoJq77/SF0m/T1QeixAEQWpJAwAA
AAAAAADAZghfpKijXbt2baemTZu6tm3btmqfPn3qTJgwoe2SJUsGhIeHz0pI
SIhNTk5+KTExkbxUF2JiYv6P6+fY2Njzsl+LvFunuM7Iue3M6WwJr5+W2zot
eyJ/5Po/rp/5Os9HREQcCwsLez06Ojo7IyNjZUFBwYSioqKHMzMzmwUEBNTg
fXcxtc2Uz069PQwqOzTGTPkEhw4dWmX27Nn1XnjhhY58fA1NTU1dmMKJj49/
hR/nn/Dj+xQfX9/JY+Bbrm9kiTFyxsR4O6uY19RYEz5LMf+3ssh7/B1f/2mu
Q7wv+/m4z+d9C+fTM3lfB/M+t+N9r9OpUydXw20ijzXq1oPyDMVqKB7TsWPH
YjkqRD3tyZMnW90TqYwdUS5IDw8PvTiNRhGTmjp1ql7cqCzrOHHiBJsyZQrz
8vKyOGY0YMAA9vrrr+vaKu/eyIrC3s8Zm1UB8jPdr0TeyAWbrrDH/pXOavu0
Lh73ln2PJfkknWSfpHL8VavThA2ckyfljpTWZwPPS3kQ+SLJh3v4gr2PfAAA
cDz++ptfH2x0/l1YwNj8fG2NbjW0mF/npq/X5qUmSvJF/vs0Y9PWa5dTq48k
a+9vcZ3bfUSdYwYUh+5x2rRpo4ovTnga69aty3766acS7/HIL0evk3+uYcOG
qnn37CVx/ztq1Cgpjych7idLeg+Jw4cPMx8fH+k+9uOPP9btQ1OI/U91Czp0
6KDaMSB91q9WjV26dKk0hyoAAFgNDQAAAAAAAAAAm0K57ESd3xYtWjg/8sgj
VcePH19n9uzZLZYvX/5IaGjotKioqBfWrVuXHxcX9358fDx5qH6JjY39k+t3
2bN4TvZUkX+LfJIX5PyOQpe4fuD6ibyNwuMo//+j/NpFed4LcnvfyY+X5Pkv
c/1KfsyIiIjzYWFhR/j0voyMjPTCwsKAF1980Z9Pd1y4cGG9Hj16uJvZVvi2
gGo4yRh7LSAgoOrzzz/fgI+v7vzYnsDHVgjXDj7O6Nj+nusyH2OX+f8/cJ0n
yePjgjzOlP9fVIwxGi+/yvpFfk6MMeXy5xRj9aKsH/k6Sd9zneHrPJSQkPA6
1wY+/VxkZORTa9as6cPHWZNJkyZVNbK98B2Dcg19H/n+++9LuT80muK+RPp/
+/bt0veWZfElmkPEmChfpLH4j+gL5c9Qzm8pIgaVk5PDatWqpRfvom2jRxLV
SSMpnxfrpudXrlyp2/by5o0U/b18+TI7deoUO3v2rBTXLI86c4br9GmW+/Yf
bF4+xfErbw5DIfJGLn2RSXkd5+f8yYYH7GbNuw5nXrUbFo+DSr5nV6mOdkk5
fpQ5JLsNC2JLt91hgUV3tLkjHWC71RT5ReZtYWzPh//Hj79T0nFo77EAQRBk
b0nX5DOn2X+OXbKJL5K8hiF7GIvex1jkq+oohq/ruV2MvXNS+xmqJF/koXOM
rd6lXU6tPpLoumTNfR649S6bz69zaW9c5e8tfU48Y/fjq7LozBntvj527JiU
t16jgidO/O4sMjJSPp5N318p882PGDFCb/mKKOGJVNbOtuTeT+xD8kQ2aNBA
116XLl3Yn3/+Kb1urh2x/IsvvqjKMSDuAzw9PdmBAwf0jkUIgiA1RPVoNAAA
AAAAAAAArArlrjOWv65mzZpOXbt2dZ80aVLt4ODgZnFxcT1SUlLGJiUlLY2N
jU2Jjo7ew/WZ7H/8WfYp/iL7Fr+Tc9MpvZHnFZ5Imv83ritcV7muy4/0/x9y
Oz/K8wuPpRD5ti7xPpB+jImJ+SkyMvKHiIiIM/z/j9PT07dv3rw5nOupxMTE
XvPmzWv68MMPV/P09Cy2jbTd8EUClXHSGNRynzt3rlNYWJhbcnJyzdTU1Ob8
uH2EH9cz+PhK4I/7KX+j7Dn+H9fvfCxe4vqGJI8P4Rv+TjHefpB9kFfk8XVL
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
lLxa0dHRG+U2Yrni5GnKoZfClcTXm8KVxZXHVcif20L94I+R/P+F/GEc/78v
72Ob4OBg79mzZ1f39/d3b9u2rbNyHyg32lhNcQDKCh1PlCPRWE5SX19ft5Ej
R9ZYvXp14/Xr17fn46v3hg0bhsfHx09fu3btUj6+IvkjjS86rrdy0SONiTR5
fCXL0yny+AjniuRK52OH/JHH+Vj609AXyZ/7H3/tBJ/nVT5vZpSWcHmcpdLy
8mOy/Ejz0BjfwMdUZlhYWGJISMha/hjI23w2Ozv7ydzc3MEZGRm9+La0GT16
tLefn19VY/uDfJEYY6A8QbEc/mDUk0ixGMpZYWl8qLSIeBw/BxTrg4gDPfPM
M6XKzSjmnThxol47ou2VK1fqrZ9ifkLKbTxw4ACrVauWnqeSHimWKOJa5QH4
IqF7eSRvS5I8jUWMLX1R9kru4uMl9APWsueTpve9PH76P5Uk1ZSuTPsevkgI
gqDiEteFHqOfY8t2aP341jrvwhdpGtv4Iu9qfZGpF5lXLR/t+wtfZIWTuBei
70wIc/d2Io/k7t27peWUufcrksR9UWlrZ4vfCyo9kaY8jGIdsbGxevvW3H7f
vn27tExF3OcQBEEk+CIBAAAAAAAAwLqQJ5B8SsZyuLm4uLh16NCh4dSpU7uF
hYUNy8zMnLxx48YZqampc2JiYubx5xZwBURGRi6Njo5eyp8L5FoSGxu7mGs+
1xyuufL0Qq5ArjXr1q1L4trJdViu86us8Uu1tak+9qv8MZU/BsvtPM01Q25v
EV/PQq75fL0LuJZwreL/v8AVyqfX8D4FRkRE0DKjUlJS+vG+t+ePjV544YVa
06ZN8+jatavJnHWo8wusiTlfZJMmTaoMGzbsgaCgoOZ8XHXNycl5LDs7e3RC
QsI0fvzOJd8hP5aD+TG9Wh4Ly7mWyONpnvxI422BPD4mc03lCuBKkfOz/mwk
X+Rv/LX/cGXK43KavOzTclvU5iJ57NL/AXxs0RgPokfeJ6rxPYP3cRLv69is
rKzhGzZsGJScnNxv+fLlD44YMaJJ8+bNqxnbH/BFgvLGtm3bpJiL0i8nYjDV
q1dn58+fl+Ow1g9KizapZhmtT+mLFP3h1zZpHkvzdlCbH3/8sV6tN9HuwIED
dflPzOXqEF7CpKQkvf0hHhMTEy3uk72BLxIyrbuST3IxlzaP5F3Wd3K8tJ+1
+/peLNZZrrHdpMMAFlD4j7SsNXODObLgi4QgCCou4Yt8eGwofJEqYktf5KyM
n5hXrYba9xfXugolkf+efvN18eJF6VgqKW8h5Yrs3r27tLxhHsSKIHFPNG7c
OHbjxg2z+0SJmIdqZ/v4+JS4f4Sn1NfXl1GdBnM5IwXUHz8/P917Z+99BUEQ
ZG3BFwkAAAAAAAAA1oV8kS4uLuRTknyCHh4eTrVq1XKqX7++U6tWraoMHjy4
4fz58x+Miop6LCMjY/jGjRtHZ2VljU5OTh6ZkJAwgmtkUlLSKBI9R0pJSRnO
NSQ1NXUg1yCa5vLn84yNj49/et26deTv2sD1Pp/+geu27I28w5+j2tof8vly
ExMTg3l7k/myA8nbyNWfi9obzp/35xpK4u2O4BpP83JNI/H/J/HlqS9P8H53
z8zMbMP72mDVqlU1J0+e7PHggw/CFwlUoSRfpL+/f50VK1Y0T0tLezAvL69f
bm7uUH7MjubH7wQ+DibyY3kiP46f5BrNRce0P9cwrqHyWBspT9P46MnVi57j
4yCYH/MvxcXFfU/ji48tSTTNn/uZv7aXz/M8n3cMVx952X5yW2IcD5U1gs9L
Y3wM12jeJ3++/ECuR3lfH9m0adMjmzdv7se3oVdwcHCnUaNGNfHz84MvElQI
QkNDpe8ljeWLpFiPLepnC0TMTcR9jNXx3r9/vzSvJf0QOTb4dVBaVpm3w83N
jR07dkx6vaRYlIhX0TqpjrfYJ8Jr2aFDB/bXX3/p1TtzVOCLhCzy/m3Reh1X
vMRYN//l8v52Kbbvq1avy6bFfsWCdmrrbtq736rsG/giIQiCikn4InuOfh6+
SBWxpS9yZtol5lWrgfb9hRerQkl8/p89e7buPsfUPYy4n8rJyamwx4K4Rxw9
enSp8kSKfXP06FHWuHFjvbYsWd+aNWvkcWz6pCb6QfklLW0fgiCovAm+SAAA
AAAAAACwLuSLJL+W8GzVr1/fuXPnzi4DBgxwnThxYtWAgID6ERERrdLS0rps
2LDh4dzc3F6bNm3qyacfys7O7srVZf369ZL4cw8Kbdy4sQNXG1nt+eudMzIy
Hk5KShq6bt262TExMQlcb8XGxl4Uvkg+/Q/XeT79ZmJiYnx6evoM3n5/uY1m
XM252nKJ9XQk8bYf5PM9xB8f5v/3IY8W72dfuZ9dUlNT24SHhzfh21Jn8uTJ
Xo899ph7ixYtTPqy4NkC1qSEOtruo0aNqvX88883ysnJabV9+/YHt23b1nPz
5s19+DHdNzMzs498XHfnx30Xrs5cnbg60iMd3zQW5edofDTiasLVNSsr69mU
lJT8hISE78gPGR0dLYmm4+PjL/HXtvH25/Hle/D5m8rL0jijcdVNXl9HWZ3l
dXXjonHfmS/bga+jHe9rO97njjt27OjEx1yH0NDQluPHj/du2bKlqTraThhj
oDwhPITGfJHkCbQVFFeimNAnn3zCqlatqrde0Ze6deuyr776Si9GZK494sKF
C7p6ZqLuG03zcSu9bqmPUayvsLBQWl7k+iCRx/KVV16RXrelb9QawBcJWe6L
uMMCX7zDFuReZTXr++ntc2naWY4hr3idBe8RXkr799vWgi8SgiCouMS5sPvI
VWzZdmbVHMLwRZrGNr7IO9o62ikXmGdNb/n9rXheuMoqcf/i4eHB3n77bek4
MnX/IvySv/32G2vbtq3ud2H23gZrStwLUb2Cq1ev6ra7JMQ+O3jwIPP21o4T
S/eNMl/nd999ZzZnpLinPXPmjHQvLJa1936DIAiypuCLBAAAAAAAAADr4yRD
0y1btnTx9/d3W7hwYZXw8HDP9PT02hs2bPDeuHFjY/7om5OT45ubm9t006ZN
jfl0Q1kNSPw5emxIj1z1+XwPcNXm03X58g0zMzNbJSUl9Y6NjZ0SHR0dyfUG
n6Zcdneoti+f/pvrLJ9+ic8XkpGRMYavswNf/gGualzV5WlaZyP+6MMfvbl8
+HyNuJpQ/woKCppv27ateVFRkS/1OyIiov7MmTNrPf74454dOnRw8/X1dald
uzZ8WcDuNGvWzHXMmDFeoaGhtfPy8rxfeumlxrt27WrGj+Fm/Hhunp2dTcdw
E36sN5LHlQ+XtyyabszlK0/T+PCU1YQvOz4tLS07ISHhLP2WPioq6i6Jpvlz
36empm7m80zhY8aPz+8lL0fjrD5XU7ltH8W6aP00vhvyPjXgy/qsX7/ee8uW
LT68zw153xvl5+c3pPE2YcKEGvxc4m5sm5GPFZQ3BgwYIH0vaSxXI7+ulDpe
aykithQSEiKtS5kLQ0z37NmTXblyRZqvpHiVaI+PWV0bFEMSbfFxrKuhbQli
fVRrTuQDof1CnkiaXrJkifS6pe3ZC+GLXL58uc7TKeJr5U3Oztr39LHpKfBF
2kgBBXfY8l2MPTR8hXScKz2Azi7aY3/AzBzJJ0g1uO3dXzUkfJGdB8zVOw4h
CIIqs8S5sJt/kM18kV/9yBhZIm/f1T6qpdKgZr9Id2zli+Tv4TOJ3zKvmt7y
++ts92Ossklznx4TUxL3Qn369JHul8zluxf3U5s2bdLd+9iyb2pL6Ym8du2a
tK2lqZ19+PBh1rBhw2L3zqV5H1auXCm1ZeoeUumZnDZtml6/bSF7H/cQBFVO
eXl5wRcJAAAAAAAAADakffv2LpMmTXIPCQnxyMrK8szLy/PKycnxSk9P90pI
SJCUnJzslZKSIuSpEP1fTVbV1NRUNy5XPl2FL1M9MTGxYVxcXJeYmJjxXGu5
XlP6Irmuc53kejE+Pn45n39QUlJSU768G5eTLJquzlVTXo8nb9uTz6vr2/r1
66vl5+dX27x5czW+vNfixYs9nnjiCbcGDRqYrJ0NgD1o2rSps7+/v/uKFSs8
+BjzFMctH3tedOzSMU2PRsaaGG80Dh6Qp50UqsWXG8aXT+Vj7gyNLz7eJNE0
f+48f20Dn4dqaNczWLYqV21qw8R6Pflynnx5GneemZmZntRn6juf9lq9enXV
0aNHu/v5+WG8gQrBww8/rIuJaAx8kXz86uIz1kTkIqFa1L179y7mixSxH369
Nhs3UsaPRB8XLFiga0NsB8Wvzp49a1Fbhv0kTZw4Udem6CftN0s9m/ZE+CLJ
x6mxchzNXuo3JYGtehW+SFuIvBFBO+6yUUH75POC0hepHZd9J69jQbsqXx3t
dv2ftfuxD0EQ5Gjy6zFR8tRZ87wrfJFnfrbzhygHxeq+yILbLGgnYxNCPmEa
Z3e7H1OQdSXu8cLCwqTjx1SuSHE/df36dTZo0CBpmfKcZ95QZa2dLfbXkSNH
dDUJylLbWixDeTh//fVXszkjxToLCgoqnDcVgiCIJJ8TAQAAAAAAAADYiNat
W7uMHj3aLSgoqEpMTIxHfHy8e3h4uIuxefk8TrKcZbksX76cliXpeaL48+7P
Pfdc3bCwsA5RUVGj161bF8r1Gpfki4yLi2N8XVe5Puf/50dGRgY8//zz/Veu
XOltZL3uvD0PeT0uy5Ytcw4MDEQOOlDu8PHxcerTp4/z9OnTnVesWOG8du1a
o15Cg3EmjTUuVy4aB140bTB/1VWrVg0IDQ1NjI6OPs3HFUtMTGRJSUk0zsgf
eY6vK3P16tX+fCzVMFiW2vekNuR1uCjWK435pUuX0piTFBwc7BwSEiL1nU87
zZgxw/nRRx/FeAQVhg4dOkjfSxrzRQ4cOLDUsVpLEN7Et956S89raLh+yiVJ
CG+fKYQnknyWPXr00LUhYnkU2xPrLI3HU6yXn2d0392K/VSlShV2+vRp6XVH
9kWKuBptA/lD27Rpw1q0aFEu1bJlK9bMtwkbtSiPLX+J4viVo46zmpJ8kTsZ
mxJ1XD4vFPdF9p4QJc1TWXyR5BdZvpuxxyet4cdfY+k4tPdYgCAIsrdatmzJ
mjdrynoNns4CX7TueZd8kXM2M/bJt4z99zpjv1xh7Nf/qSNa1183LfuMdf1v
dftGuszX9wK/Ji0ssLIvche/9oe8x1q1Fp8TW9r9GKtMat68uS4nvS1E9zDH
jh2TjltT90Lifuazzz6T5q9I9bPFvh0/fjy7efOm3vaaQ8xDtbPr169f7J65
LO8DLV9UVKR3n2aIeI+obkFpa3aXRtRm06ZN7X78QxBU+dSxY0f4IgEAAAAA
AADAhjRs2NC5Z8+erqNGjXKbNm2a2/Tp0416Is3h7+9fzBPF23N++umnawUF
BbWLiIgYlZCQEJqUlPRafHy85Iskr1ZycvL/uI7Gxsbmrl69ev7s2bN7jxs3
7gFj7XO5Dhs2DN4rUO5p1apVmY9jGgeUb9LY81OmTHls0aJF8aGhoafID5mV
lcWys7NpnFEuhHMBAQEZTz311JDhw4dXNbK8O5dbWfsFQEXCmC9STJPH0BaI
WA+/dhaL84h103M7d+6U5rMkXyTx/fffs2rVqunaEb7IefPmSa+X5K80RMSq
9u7dq2uL2hU+zjfeeEN63ZF9kRWRV45p80gts7IPA7rni5wed8qkL/KRqQlS
rW2quW3v/qoh4c/59Dt7H/kAAOB4XP6Lrh22Of8uLpRVoI4C+fn+mY38c8ZR
7bbdNvHxTnzse/80Y09v1C6nVh9JNrnO5TG27VNVDhlgBMrRSL9dMrwvul+J
+6r27dtbfD81a9Ysm/nw7CFx3zZmzBjpN3SEJfduYn9RnsjGjRvrtXW/fRky
ZIhJT6RA9JHmtdVxQffN58+fL3FfAACALdAAAAAAAAAAALAZXl5eTt7e3s7N
mzd3btOmDckq3sPWrVs7Dxw4sPbs2bPbhYWFjU5JSVmblpb2emJi4kXyRSYk
JLD09PQrXEdiYmJyAgIC5o0cObJX586daxu25evr69SsWbNS+zUBqGjwseDK
x0IxXyQ937t370cnT54cv2rVqlOpqaksLy+P5efn0zhja9asOTdt2rSMfv36
DfHz8yvmi6Q2qQ11tgIAx6Z79+4mfZH0O25rI2I8Bw4cMBrfEeuuWbMmO3Pm
jDRvSTkelflNNIq4kXikfLJESfEnU+1+9dVXrG7durr+iXbpNw+W9A9YB7Gb
9xyBL9JWEr7IJ9e8b8QXqc21M2juFqmu9OJKkq9T+CI/Pqt/HAIAQGVGnAr/
usGvx0W280aqKfpcMXMTY69q0+qV6Iv8D/+Y+uym8v95hPo/i3+u2ntMf/uA
7RH3EFTXuXXr1lb3vwkfXnBwsN76TPXjzz//ZPXq1St2b1heJX7XRp7Iq1ev
SttYmtrZlCfSx8fHqu+L+I2dqDtQUv5O+v2vtd8PpS/ym2++MdsPAACwFRoA
AAAAAAAAAI6Kk7OzswvJ8AUvLy/XLl261Jk2bVrH0NDQsWlpaeGZmZlvJCUl
Sb5I8mTw/69kZWUdJl/k3Llz5/fr16933bp16xRbiZMTrYNy2RmtOQxAJYEP
BSd3PhY8aNrgBXc/P7/H/f39E4KCgk6RF5JqEb344os0zuh7/3OjR4/ObN26
9TBXV1cvw4apTWpDgzEGgGbYsGHFYj1Kb+IPP/wgfWdpjVgJtUExnhs3bjDh
xzSMMYl1Uz05S9cp4kZbt27VtanMO7lr1y7p9ZLypBjrL3HlyhXm6+ura0/0
ef78+XrzAdsCXyT5Tu7K9avv2qj9O1ItTcoJqdHzRToxJzru+bgaG3wAvkgA
AAASN24x9sJL2ryO9j5f368qsy+StuPdU+a3G1gfW/sixT3RO++8I63H1L2Q
eJ7umcQ9VHn3RQpP5Lhx46R8nMr9bQ5xX3no0CGreyKV+5Vqnoh7Y3PHxrff
fmv1GuvwRQIAHAENAAAAAAAAAAB74CTL2YzID+kmy/A19zZt2tSbNGlS55CQ
kPHp6ekR2dnZbyYnJ+t8kVlZWVf4c5IvcubMmQu6d+/ex8PDo66ibRd5mtqv
wuVaQn+clHJ2dkbdbeDoKI9Zc8e2GBPkifTU6I8Pkoe3t/cTAwcOTAwMDDyV
kZHBtm/fznbs2CH9nn7FihXn/P39sxo3buzP561u0Kaz3Ca1bW6MOZkQABWK
uXPnmvRFUi4LqhVNcZLSegqNIXJvhIeH69rXGMRpRD9GjhwpzVua+BW/vhbz
RVatWpV98MEH0utl2Qax/nbt2hXzRY4YMcLiPoL7p9L7Igv5Nm9nUj5HqtkZ
UHBb8klas/2AwttsKd+vPi0e1vNFOsnHfLUHGrGnE75hQTu067f7PlFB8EUC
AIBp/uEfrZLfYmzhFu21yd7n7PtRZfRFBm7Vvm/z+ft3+Lz57QbWx5a+SHGf
1axZM/b9999L6zHlwRP3aKKG9v3Wi7a3lLWzad+a23Zj+4FqZzdq1EjPX2kt
ifvUxx9/3Gy/xLFBns6HH37YqscGfJEAAEdAAwAAAAAAAADAXpjyQSl9XK6y
lM/Ro1vbtm3rTpo0qVNISMg4C3yR83v06NFb9kUqPWJOcvuUy87Fgj4BUB4p
6bgWY4L8wVU1xT2LVXx8fMgXmbB06VJTvshM2RdZTVPc71hVbhtjDFR6aPyI
el4aI/5EPsak7yxLW4PaEOFJfPvttyWvotK7aGy9a9eulea3JIYl5gkKCirm
i6xRowY7efKkxW2ZartXr17F2u7du3ep2wNlpzL7IkV9676TY9mguflsSeEt
tnw3Y4F8Hyze8o8V/JF32aL8myz4VcYGzclnTpQfUjE+nV20MeHmXYazpdtv
2zRnpaMJvkgAADDPzoOMzc3Tni/tfc6+H1VKX2SRNtfnKv4Z48Jv8vbhOqca
tvRFCj/fkCFD2K1bt/TWp4Tudej533//nXXu3Lnc+yJFbsXx48dLNQrENpaE
uFf97LPPdLXErZknUkh8vqZ1nDt3zmz/6H0hid8xWsujCV8kAMAR0AAAAAAA
AAAAcFTIIyXy1unh7u7u2qlTpzpTp06V6minp6eHZ2Vl6dXRVvoiZ8+ePb83
p1atWsXqaGvu5aVEjV9QmaHxRv7gYnW06fmmTZs+PnTo0IRly5ZJdbSphva2
bdskX+TKlSvPjRw5MtPPz28Yn7dYHW25TdTRBoDz8ccfG41/if8pT+Iff/xh
ts5XSYg405kzZ3S5N0zVZhPxp3379knLlMYX+eyzzxbzLj7wwAO6HCllifeI
timmaNh2mzZtSt0eKDuV2hdZcJuteImxtn2nS8deo7aPMv+AXWxB7l8s+BXG
lm7j88k1trW6K/1vus27+vPz/1fxdsY//z7zrOkj1cu+V0P7Xt7IgbM3a2to
b6kcNbRJ8EUCAIBxxPmQzo8z+XV5aTm/LldWX+T8fMZi9jJ2/W/99xXYHlv6
IoU/cNGiRdI6TP3GTTz//vvvsypVqkj3OeW1hra4fx07diy7evWqtF2luZc8
fPgwa9iwodF7Y2tJuX9zc3Ol9QrfqiHiHpq+71K+p9bogwa+SACAndEAAAAA
AAAAAHBIXFxcnNzd3V1Ihq/VqFHDtVu3bnWmT58u+SLT0tLCMzMz9XyR/P8r
WVlZki9y7ty58/v379/b29u7mC/Szc2N1uHm6uoKzxaotNB442OBDwV3D8Ma
8fR8y5YtHx8xYkRCUFCQ5IssKiqSvJF8nLHg4OBzY8eOzWzbtu0wDw+PYr5I
apPa4OvAGAOVnh9//NFkTgwRD0pOTpa+tyxtzkiKr4g4z+nTpxkft2bjfSJO
RDGfs2e1JqTSxLImT55czLtI23b58mVdf0qLaJvia4ZtN23atNTtgbJT6X2R
uxnr+DjVN7wXq/Zp2Yv1nhDJnkn6ji3boa2xTVq6Xa61XXiHLd5yy0D/SJ5I
yjVJ9bCX72KSj/LxZ7JY1Rr19OKlGoUnsm7TB/my11mglCeycuSKJMEXCQAA
xhF5Bc/+nzbnoFST2QHO22VVZfRF0jVubh5jWe9qtwnXOHWxlS+SPseJduj7
EcKU907c361fv96q3ju1JXIpUu3sv/76S9qm0tTOPnjwIGvQoIHePbCtJPax
qMtQki9y//79untQa3hW4YsEADgCGgAAAAAAAAAADombm5uTh4eHC8nwtVq1
arl2797dYl/kvHnz5j/66KO9GzRoUMwXWaVKFVoHGcLg2QKVFhpvfCy487Hg
4erqqueLpOdbt279+MiRIxOWL18u+SK3bt0qeSPpe/9Vq1adGzduXGb79u2H
eXp6FvNFUpvUBl8Hxhio9FAMRHj+DGtzidgLv8axr776Svru0hJvJLUp4jjE
Bx98wJo3b67nKzRXQ5tyVP7222+6tkpCxLyoXppyHTRdv359qS6cpW2Zanvi
xInF2vbx8Sl1e6DswBfJWIfHZsrHoStzcr4Xs63iVYs16ThQ8jY+Ff0Fm5N9
WfI/kkeS8kmu3se1l7FVXCtf1vomF+ReZTNSzrNBc/NYg5a9i8VK750DnKU6
2uNWvye1p62hbf99oqZnBL5IAAAojjgf/vo/xtbya8uiAq0n397n7bKqMvoi
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
K3c7Vuw61mUQ03FhOe62WMYBHScsdFyw8EVszNCwscOnl/HZNgAAgBsQC4Q8
Gvr+USgQCYRCeiqiEdPQ9wlCLyF9W+Bhfc/o2I+si+8Z7X1F+/vfWxF4ePn1
Dmw/KSpqgCEtbeLyomXZq5avKC1cUnjcoRf5m6UXmW3pRSYFh8kihE0atHV4
XJHDeS/bZa5f8z95D2l5H8nn8exj4WZE1lOxbawIRNZuJN47wk3oRQI4B9dz
oQB/1cEz1s7CJwesXTUEuZ/ZdsA63k78xvXIBwCA+wm9SODK1atXyWuvvUaW
Ll1KioqK3DLsta9auYKkTH+aDH50HHl4TBR5aNSkO8KuZ7cnTplp+Xp2v6VL
nyUrV6wgT89ZcM/7PjQ6igwZMZ6oY1Ns932W89fNVZ599lk2R03OnTvH9fAH
ADfF9VwoQHU8j1rto+0Yh7sidTx3HMs/Gw/2eAAAAIDbunO/ZF5N7xtvfXnd
Ct+yJCZN9dsaNmoo6t+/f2uFUhHE9tEuKirKWL58+QbHfbTp5fMrVqzYm52d
/Z/4hISkgQMHhrdq3bpV9cfi8S1Lb4rpJYELvOZ//B7S8ppqHBc391kHuAN6
kQDOwfVcKAAAAAAA19CLBODe9s++JTMyV5K0pa+SBUteviPsenb7pp1f3XHf
bw8do7etuud9Z2WtJv8t/oSDVwYAAI64ngsF98XWiOTz0GmD++Lm5+EYYwAA
AHWfpctmqTrW2IVza8MHDWsYr4/1NixMH15QtHTu0ueWrc1fUnAkNzf3RkF+
Plm2bNml55Yt+zI3K/ulp1KmJD35yOMhUp/eTbl+3i6mep8W3BR6kQDOwfVc
KMBfxXZ5Y1u9IYgzAwAA9Rt6kcClyspKt861a9ctp2Xb9pLJaUvJnNznyTPZ
q+4Iu57dvm7jjpv3u37det+9+w/Q2569x31Xk6nGIvLGB6XW+9ru584BAOAK
13Oh4H7EbFM7gXXPbBqhkM+zr30D8G9gY8myjyKf5yEU8XkCtkc760dy/cQA
AADgr+OznhKfzxfxBQKebY9kD+spukVU8mi58JnJT3VKz8wYkv1swfTcZYXv
5CzJ/yE3N/d6/uLFVYWFS68sLVz6zeJFOW8Yp8+eMmO8Niw2/PHGXD9vF8Le
I9J/kwhENPa3jXjf6KbQiwRwDq7nQgEAAAAAuIZeJAB3btj+IpVv/5xMMTxL
5ub9h8zOWX1H2PXs9g2bd928n73f9/nXP9Dbiu5x3+fJtPRl5M21Jut90QsE
AOAM13Oh4H48BXweDZ9GQCMS8Xnss+2/9dlQ+aggwb6JwWKW7U/0E5WM7CNY
91hvfvHjffil9LYyxGVTOjJIsJ4eJ3a8TPTy7nH9RfQ4en42foD4g0d7/ZPP
oi2dSBqRgMcTsv4tHWN8AQ+fbwMAANRFfNsGzyIB+89pLO8b7RHU9jFyh8bw
Xh05XbxmzCzPlx+fJnpueIKg8EE9v/ChWP6yh+MFyx5JcNk890iCcNmjCSKW
5x5OuPmeecWD8fyikcmiAvXMJjmzUrsvylr0QEZh3vTMpflvZxXkfc96kYvz
8qry8/NvFCzOP1S4MOf9pbOMc4u0zzy0bExKh+p/RsuGJ4hpvGhEXL/meyde
sJQetyX0+LHzLzw2RbRmzEzPN0bPED/7cNzf+TcFuw/9N4lQzHqRAuvbRrxv
dFPoRQI4B9dzoQAAAAAAXEMvEoA76EUCALgXrudCARxZPuzm8/gNhHxhY5FA
yE7pZXssHcp+rRo1mtW/c2vTqD5df9GF+ZGUwYEsl+MiA05rQv2Oq0N8T8WE
+pq1YX4ViMvGrAnzO0GPEzteZ+nl64kDA8jkwT1J0qDAI0qZz5sPBXRS+rdt
0bmxp5f92NsibCTkixqJBCLWrWXrQbIxQ4PPrwEAANxQA6GYvncUC4R8AYt9
3T9R64ZNvR7pMaC5cVBUpw/GzfXZo1kcuE+/tOeumLyAcvlCvw0TU303TErz
LYsy+pmi0105/qXy9ACW8qh0380TjN5bxxm9N000+m5QLfR/Oymjz6rZiyIX
Z2ZFZeTlGBcW5H64KD/3ENtHOy83l+Tl5pH87NyTRcacTS88k134TnKmZr16
YXj5pPRum8cb22yaYGxHH7c7ffxAml5l9Pu4wGu+a8qijX7F9Litp8ePnf9U
nRPwpb6w5+e6JYElUQbfgge1XcYHRrbq1qxtA8fxwOIlFIsaiDzpaBHx6WW8
d4Q7oBcJ4Bxcz4UCAAAAAHANvUgA7qAXCQDgXrieCwW3wT5T4nvcY13Irk3E
YmmbRi2HdWraaXjX5j4jurYIGNapWe+I9k360cgGdmgaOahD0yHawLYP/2eY
36gD0cGTSMogFZn5QAyNhkwdEkOSBqpuJEYqq5IGKkkyvQ1x3SQNUlXS48SO
l+Xy9KExZNYDWvLUMM0f8RGKT5/sOz47rPvjT3i3epAdd5pBgzo0iaAJeaBT
UykdJ/3pmOg1sEMTbzpO2j/UuXkTmnt+xkgHIY91b4XoUAIAALgs277ZPAGP
z35f3/N3dlinAF5E58AmoR39O/Rv1923X7vu/ehp2ID2PQYP7trrgaTgRx97
/rHk8dtU2YrvE1fEHEl+XnMgYXnMF/olql0xecpdmsXKz7QFqs91Lh31Xl1B
DMsX2gLlPnWBYr+yQLEvpkC5K7ZAXTw5T/vG0zmTn0vLSs/NzHopKyf7k+y8
nOO5ubmVeTk5JC87lxRkZP+2ckHOV288nfv++il5eZ/G5U/+QlMQ9ZUq/4l9
6vyx9HGj9+ot30P7Gf0+LvCa7xr6/FS76XFjx4+d/yZ+Wczh5NXag0mrNXu0
+co3x8wYNyts7CPDfQZE9G/fI4SNBzouwmnCZB39pBFdevYO7xzYNbiDTwv/
Vh1Fdx+HfD7bv51vHYfgJtCLBHAOrudCAQAAAAC4hl4kAHfQiwQAcC9cz4WC
22Cf/Vj2Nva4y+fbw7s0azOzf4e+SyK7DVsx1HvMysHeUYsjumnSQ7om0TyT
Gdo1Iyus6+IXhvkWbn0iaPkpjewFkjLwFTJ9yKs0r5Epg14jyZGvVCZFvkJY
2G2I6yZ54CtVSbbjxS5PHfya5ThOG/za9cSIl39USJ5f93jPZUWDeixhx50m
i8ZIMyc3vOvM7LAuKQtDuqgXhXYdUxjZPWL5YB/v5YN8Gt9rEAp5PAFbg9Sy
eBC6kQAAAC6J7ZntJRQJPNkSf/R3972+dk74uIbzIsZ7zwwdE5kkeXRcguSR
RHo6P0U6ImdW2JiCJQ/rlr03fvbzO2JyX/4mvujVA4nLX/2ann6uL3hlj3ax
JZ/p8l/5XFfgynl1rz7fEnb5S03+y1/F5L9MT1/ZHZv/anli7mv/nZb19ktP
Z65btmDRpwULs35YnJ3zS15O7vW8nJzK/EU5Vc8asy/9Z2728bdn5HxZkpJn
2hGX/84X2oIX96nzV+2LyV9Nz79EH/81mtc/0xe86gKv+a5hx2uvdvHL9Ni9
zM7vj1v62neJz73+bcJzr+/V5b+8btKC5csfTcieGzluHh0Hs9l4SAh+JC1R
MnzB9NBRM+dGjtfOGzj+kWkho3pP7BXZ6i5DiyfmC0V0HLL9tQU8D7xvdBfo
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
adStyyUKA9mgNlp6kW9OyySr5meR/KwcklmQS9IL88iigjzL5ZULsslrT2WS
/8ank/VsvUj6GBsnLiDlNOx8idwarl9f7XLr2JXQ515887imkU2KdLI9Jovs
0eVZ+pBsPOyl5/fSUzpOyP74pdf3xxee/CK2YP8OTc5mer//e2lkStH8yPGz
5L0HPRnUtluggMcX3jZGeXyel0AkomNUzN42OudvBnABvUgA5+B6LhQAAAAA
gGvoRQJwB71IAAD3wvVcKNQfbK9sx1M+z4OtFSlg3cjeLRparlvzcKBw/6Tg
Nqc0ITIazSGlJP9/Uf0+/Fbe/8tjasnxX/Uh5y/GhV65FB96jabqQlwoOR8X
YtlP+Tw9b7lMz9Ovs6wXadZJr57RSi9bopP+wS7TXLOdIq6fa/bjRY/fFdtx
vMKuY71Xtl86O94XLMc+5GbOO8RyXWzoH/RrK37Ry76/EBuy61pi6IbLSaEv
08fI2Dmutz4/ouuQhzo36ywW3PkZpK0XKUQvEgAAgBsCnqUXKWTdyOq3NRJ5
Cgd36dVlTvjYoW+OmR6/RZmxZI82d/1OTfbXW1SZpzcq0n/ZrFp4cas649pW
daZl3+ytqkxbMgi9zbJ+oEluuF4mN1wpk6f9Ts9foblKc82Wq3Up5dHW2C+X
Ko1XN8QY/1gbt/CPN6dlXF49b9HvSzJyLmXn5V7MLMi7mLU492LBopyLK+dn
/f7aU5mX30tYeKVYbbQ8xuZJadc20bDzZQpruH59tYzjsWPH9TKL5c9HbrR0
YbfcHAsZ1qgzyDY6RrbQ003KhVfZuNmhyf5lry7v6KfqrC/eH/fMe1lDFYZR
frJH2zZq1tZxHLI1IsUCIetFegoF6EXWZ+hFAjgH13OhAAAAAABcQy8SgDvo
RQIAuBeu50Kh/mB9SC8B21+u5n7ZjL6dRZvHBLW9mhAZTGYMjabJIZMHbrgc
H/rjWb3sd7NWRk5ppeREjNS+z3LVSY306imN9CLNL/T8KZpj9Pyh01rpN2d0
0i/MOukemp227LZd3ms7RVw/ex2O1y7bcWSne07rpF/R4/w9PeY/seNOc5zm
JM0Zmgqa3+hYuERPrx1XS8gR1QBySDng+mmN5ML1pNCjZFrEXjIt8v1f9dLF
xSMDddP6dggb0KZR29ZeQq9GIr6Q7fNuG5oCPs9DaNn5HQAAADjAs2ylTc9Y
+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
RnrtfFzI9RvJYWevpoR/9YtOsmbr2F6zjbLOw8PbN+56l16kCL1IAACAv8/W
ixSJBcI73jN6CcWeso5+/aeFjkx8dcy017bFZH71eWz+2T263GtbVBk3iqNS
LxVHpx4qkxtKTQpDIU2iSWkYQRNssq7/180W1nHrbeu59XToxPm5QC8P4S72
TqR9j23HtUPtXcl+5Srj0HJVurJcacwolad9TMfc4Y3K9Kpd2lzyZewSskub
Q94d9/TROZFPvhLeOXCiSCCoqRfpKeILPdGLrNvQiwRwDq7nQgEAAAAAuIZe
JAB30IsEAHAvXM+FQt3FepFed+lFCvi89qO7t1C99KDvu0dUknNVKeGETIkk
1xLDiNnai/zihFZaaNbLxpqt6/u1udlpi5UFmdleyLfWAnTcM5vrTh7iGmHj
wb5eJOvMsr20O9N0Mls7kv3NeukIs06aUqGTLj+tlWw5rpH+fFIjvXI+LrSq
Mjn88vXJEcfO6WUl28f2zk4P6fJkRIcmPkI+T+A4jh16kUL0IgEAAP4eh16k
Z/XbvIRir5BOfqHTQ0c9/foT0z/ersk68UVswR9s/+Itqoyq4ujUX2h2lykM
L5QrjVNNSuNjJpVRauu0+dhiX/sP60Ui1ePYf+xputWLtJ/6mdRG/3JVejDN
KDq2nimRp/3fhujUHzcq0skebS7ZH7eU7NXnkffGP1PxTMTYt6QdfaPp0L1L
L1KEXmQdh14kgHNwPRcKAAAAAMA19CIBuINeJACAe+F6LhTqrnv1IhuJBJ0m
+LTSvvGw39pjaunvZHIEIVMjyfWkm73I3Se00uwzetkIc6ysO01Tmpa2847r
AHLdv0NcN6wbaV9HlPVp2djpYTvfsyJWGlahl46lmX1aK3nzuEay/6RGeulC
XCghKRGVVVMiz1+KC9m5c1zQsszQrorIDk0C7tKLFKMXCQAA8Pf9SS+yQWgn
/8gZYaMXrBk7Y+NObc75r+IKqz7TLSZbVBmkODr1VLE8tbhMacwoV6WPo5GY
1Ea2TiTrQvraum9+tjj23bju4yGuFfvYcDzPTr3peOperk7vSfOgSWWcXCJP
e21DdOoBSy9Sl0e+jl9KPo/NJ2snzPl1/sDx70R0CZQL+Pw21ccy1ousH9CL
BHAOrudCAQAAAAC4hl4kAHfQiwQAcC9cz4VC3WXbR9vTsRfZUMjnNRUJBH1a
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
S909ve2N1qM+F/bnGc9G/RYMIU2yxrpzw1f2EuA6ko5Nmf621OgOVniO7ftp
Mt7FeC9RbYyntD7OU3I5QeVEJoEXCV4kAADAX4O/A2DvkM2kMVhMGv7bk5bg
z83/l9+xvZBL315szXgHm8VQjc9C28ZC28bE82xjf/Md9A28Q8CLbB/ZGZkv
3B6RJ8JO45fRhYJvEkuJn1Jn8H5Ime6wL7aIt3rQaGJW7wThlG4Rouk94gTL
Bo7g744qsD2WPN36l9RZ2I3kHYgtIrFfifpRzq0NXiTQ1oAXCQBtg7rPhQIA
AAAAAACAugEvEgDUB3iRAAAA7Qt1nwt9l9DpdGW9SDabzUHL1643GBkZmcpk
sq5xcXGjioqK5svl8tWLFy9eOX/+/Lk5OTljhw4dOsDd3d0Jz6n9at/YiWRi
8RKN0XZ79H4BXuSfg+tF4rqLLV7kA+xFZgfYUCMCbG4l+5KHBjt5FfvZhQTZ
G46w02XP1WExtuqyGL+iXEe5j+4/ZNNpjxk02lN0QB+jN9ZTdBibUChVml7J
c/ScZ/j5HAbtvj6Hcd1Ik3lBj834GfV3APW3Ec+/3cPWYFyBr+2QL0MdZXju
bFwvEm2T9YM0mQOuEVkf6yW5GOclvvIeHEPwIgEAAP53wN8DsHOIlvh7QOvQ
NP7DZ2RqLwPNtaMtjC5U2lnc30jY3N9M2t5cyuPuK+SaFg011unsqPXfOCIt
9SLxtzO6atvgs/o9BLzI9hFc53F7q3qRXydMJY4ml/MPx5cQnw79SDy7V4Lr
GP8BvkmevfxH+Ab7lvWIdl83eKz4YNwU/tGkaQ7fJJbx98cUCVr62YGW/9K2
ghcJvBXwIgGgbVD3uVAAAAAAAAAAUDfgRQKA+gAvEgAAoH2h7nOh/y2quo2t
80ZYLBYde45mZmZWLi4uHUNDQ7MnTJigqKio2LN+/fpvP/vss/2rEdOmTZuc
mJgYLpPJXAwNDcGLfAPgRb70IZW3k9DtBG/R5XhvPCe16GayD3Er2YfXGO8l
/GaIi2d1N36/GIlZptBQcw46PNtQTqM80XjpPbYO9iL/YNBo91h02l0cdPsu
Xocee4gfV7V99oa2eB2uKfkLyna+AWfBcJHp6IouvJDDg519GuM8RXdSfXl/
oKBtFFxP9BFdxzUik3wEeF+wK3k1Qf3HFbxIAACA9wulZ4jnpf4bn3/O9hwG
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
Va+5nRz8doZIXU5HuUtuJfsIH6b7kvfTfEm8f7g+5iXlHN5qdx7BiwQAAHjH
MOg0hiaLxmYyXvcirY2ZpgmBhj0+mWiTd3kJuYn6TPIryrU/1ooeXFTViTyv
nKeawLlaKye+rlOQixoUZA5KRKOC6N0o5wc0ynmuKPaNcgcjtMQRNsh5IfVy
flGdgviiVkFcf4MXuRulqKGGCEFxalTwbVFQHzwBihTFGcVF2beCj+OBntcZ
ZXhdDVGItuWzC3LiAur7OXYjz1WTVP1CkrqzSvic+lT8kPpcfPfGcsHxLwps
l43qbxQn5LKJV/cf14nU0aRrsrHGBJ/37xzwIt9tdrXUe4zIV/qRymVkfqua
j5NedSpfto1qVSvyZVvx29q2Dn7O1uG5jluG5Si9yO+Sys1PZszT+TV9tiFq
51QWGB3TV+C51ERL74JG85zZT1Geox8oikNnXtVlae4z19avcDSxyQgRePXJ
7TDIe+XAEeL9sUXk0aRp/G+Tyvj746YQO5XzdedK8D6BFwm0NeBFAkDboO5z
oQAAAAAAAACgbsCLBAD1AV4kAABA+0Ld50JbeJsXaWlpKe7evXt6VlbWpvLy
8rr58+c/njZt2v38/PxzEyZMODhp0qRNpaWliilTpkzKzMwc0KNHD5uWtrq6
uhZSqTQ+PDwce5EPlyxZ0rR27dqnaHkMtZmbkpIS3blzZ08rKysTNPar1zzA
i3wF8CJ9BA/TZYIn6X5C7EWeinIXbO4nlhT62vmEESYDPcx0crk67I3aLMY5
dDio1tFnM853szHYUOBrO25HiLR7bawHcSvV1/Rxuszsj1Rf21spvsTtZF/i
booP/26KLw/1z0chcPD81jeTfMiraHvw/NbXEn2EeB5vtC189JjgTLSHdGd/
ieesjg6dU50s+/VzMAzrxNWPRUnuaWuYOJBnHBUrNg8d584NnNXBQbY+SOh6
JMwZz80tupGM+/IRojEF11Ve5BXwIl8AXiQAAB8S2Itkq7xI9HlH0+bQ6cZ6
DJalEVOrg1TbccIgk8TNebaLz1aTP91eLbpzZ7WIurRYQJ1eQFDHK3gPzyzg
37wgJ07XKYg99QpC0aAgx6OEoXRoVBCujXK+uFHO46NYNMod9NDSoJUXWYzb
1SqIm2/wIveiFDfUEINQ3BoVfJ4yzV6kCPeh6tcOrbdEMUfPs0PxQYlA21KO
+t6B+j59toq4daKCuH+qkv+sYRFJ3VoppO6sFlJ1CvLh7kK7r6dEmBYHeeh2
tTJiGhrpMrQ5LBqr5figD3m2RrPXpPy8p0HdyHcGeJHvwIVE+7VLtW97ogvI
L2MKiX2xRfz9sUU8FP4+dB/PZY0eE+7GedlO6VFiH1LVVoCe9+e2sUWobSG5
N1rVPqqg9bit60eKdkROwnUcHfH9A7FTuF/FFxujvrlLQjL9x/oPGNmV57zZ
VFv/BvrvAkVHQT9G+LtwkzaTU2ulY/SJs5ldfhDfbVCaR0+fssBI8erQkQK0
fWLUlxjXnETbIVDWtIzMF+0CLxJQA+BFAkDboO5zoQAAAAAAAACgbsCLBAD1
AV4kAABA+0Ld50JbYLPZWm/yIm1sbIR9+/ZN/Oijj5bPnTv3KMrJvLy8I7Gx
satCQkJKwsLCxkVFRSVGREQEI5wCAgK0cDuCIGjOzs7Snj17jk1OTj4wZcqU
x3K5/PmyZctuKRSKvSUlJQVofUinTp0kXC5Xn8lk/umaB/Yh8UTaaAHXslS0
Vy/y0ksvUvggTSZ4lC4T3U7xFZ2J8iC395eQ5f72rtEisyA/C72xNrrsdRwG
/U9eJK6Ro8NiXHY20d4dJjApn+xrG7EuSOj73VBX+2tov59n+plQIzuYUaM6
mFIjAsypLH+rZ5l+tmi9XVOmv/3TDD8eGpe4keSDvUhcS1JyFR2j60ne4isJ
XuKz0R7Sw4OdXNYHibzmdeL5F/jadB7vwQ0c72EdlO9l06tEZtd9TkdehyWB
pPfmfmKXQ4OdpMcj3EQNcV5C1IcQ14xEEVxD/V9N9GoOeJFKwIsEAOB/Hfy7
u2VeaOxFYg8Q10Q00KazhFy2ThdnbbPBAXrEuFDjfouzucUHSx12n6kir1xa
IqQuLxFgn5A6VclvOlHBu3hmAf+bWjl/db2CX9yg4Kc2KIiQRgUR0CAnnBrl
fAFKs7so55k1yh100FIfhWyQ8/rXy/lT/sKL3KPyIkNfepE8B9xW5Ua29GuJ
1htj3xKNb4qeR6Lnd0LbEV9XQ5Sjvj85W00cO1nJb0R5gmtb4jm1sduJa0h+
O92hdt147prC4WbpQzvqyzpJtYXWxkwTjWaXSUPjpdOkPGYMOjp84Ea+E8CL
fJPnqKzbqPT/VHUfVTUfVXUfX3+usqYjrtOIfcbDCVNtv00q4x5NnmZ1NKnc
+khiqf1X8cUEegx7j9h/VLZtGQP1q5yTel9MIf+r+BK7bxLLrFFb7vfJ06y/
Syq3O5IwlXcorpjE7fdGT37hROK5tXEfKqcSZTI+3o54ez8b+hGxMnQkf07v
eLcxfv1DB4h9S50t7A8YcLTvYy+SQadT6KXH34cfGXF0f3U2s1sYLPBKG+HT
t/O0wCjh0pBMu0/DJ/B2ROaJ0X45onHFeIxdkc3b/Ve1K8GLBP4twIsEgLZB
3edCAQAAAAAAAEDdgBcJAOoDvEjgfaapqQkCafN86Kj7XGgLHASu0fjqentE
aGjooIKCgimVlZWLZ8yYsSgjI6OkW7dusUKhsJtUKvVzdnZ2dXJyIlDMvL29
tbt27arZv39/fnR09MCsrKz5ubm5v0ydOvXp3Llzn1RXV9dWVFRsKCoqGpWY
mNitY8eODhYWFq9ds1B5kQzwIl/SHr1I7AdeUs0tjb3E+2m+wodpMvGtFB/R
2WgP4osBjvy5HXmOqY4WgV2tDbId9DnLNZn0ExqtvEgGjUZpMug3LLVZRx2N
tZf3tDWYOMLNatCSHgKv3yLc7J5hL3JsJwNqfGc9akxHI2qEv2VTpr8tleVv
j9OU5cdDY+J5rrGf6Vgf5+nUEKecb9uxMc4T133EnqP02zAXpy8HOrps6y9x
+6yf2OPzfmKv7cESzy9CpO77Q51cjgxxdvxxmKvkVJS7qC7WEzuWwmtoH7Eb
iXOtZZ/V7zuCFwkAAPCOYKLf2QzV720GnYY+0GhMTRSuEVO7h6uOxdgBxk5V
6ZY9t31sM+b7mbxVp6uIX84ryAct3mKtAs9LTdw/W8X7/kI1f1GdnDeqQc4P
RpE1yvkuKNLmOpF8kcphdHilXiT2Ivup5tHejfq78RYvckpDDTEQxUU5h7ZC
6UESqj4JVb82KFYqP5KrdCdr+E4NCn6X+hoiEuXjC3JiDdreH85WE/ewF4m9
zgsoeA7w89XkjePzeF8fLLGvXJxtlT42xDjIX6QlRMdFS3W4aKooj5VyTm06
uCvvAvAim9N6PmulrxiRL94ekSfeNjxX0pw85f3mWokvncBWXqR4d3SB4EBs
Ee9IQqnN98nTLH9ImWFxLGU697ukMrvD8SXEAaUXWfhnL1I1V7bSi4wt4h9O
mGp3NKmci9pa/Zgyg4va26L2Dl8noPZxUwR7YyYrtxV7kaitaDsK3oZ9MYWC
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
zBirHj166HC53Jb5u1+Mr/Ii4XpFK9qjF4m2T3g10Ut4JdFL1FLD8UaStxjX
bryS4E2ej/EkjoW7iLYFS9wXdOF3GeXGDe/nYDTeyUS7xkKLdZhNp13SaDWn
NsoTlEscBv07FxPtjUOFpnPzvG3yZnfiZVV25SdUdOZFTu9gP2yKzC4MJWR6
gEMPRTciYGuwxPV4hBv/XqqvBTWyg7Fyvu3RHUypEf7cpkw/+6Ysfz6V7U9Q
IwMIagRKdgCB1z3N8OM9zvDjP0qX8R+myYj7ac1upLL+ZNJL9xO8SPAiAQD4
8GA2e5EcNov22t9/oPXag/31Oq4bbz3p1irhHmqP4xnqC8cbjzaInmNf8fh8
/r2TFcS589XEkToFubChhhjRKOd3bZQr57fWRdFS1YS0V/mKbv/Bi/w79SL/
youUtPIinVUuplC5Pco5tfk2uG5kYw3RFfWRUF9DlKGxNp+tIo6dWkBcxl7k
jRXCZ083ih9Rn4lvPd0o+rZWTlRtn2QTXxZt5hUfaGjW20NHU2zDfjHnOItB
Qwua8rOfTm+us9nWr+GHAniRL2tD4iV2FXGdxsPxJQ7fJpbZfZ88zRbF7ruk
cocjiaX8Q3HF2I1s2RfBvphCvM7uQNwUh+0ReZKlA7I6TO0eOWCMX//odO/e
cVk+fcPzOoX1nNkr3mtRSJZk3ZCxws+G5Sg9TFwL8nBCicPB5rbi5QNH+E7v
GdP7o4CBYRneQZGpXr3DR8qC+07qHN4BtXdbgtpvCp+A59/GdSNFOyPynT4f
luO6LSJPirbX5mTmPL0LIxZoom21lAendhzqFDDGWs9oA3opj6NcRrmH8gz9
7DyiYSdSQ+OoFpO1wsXMPi/RIzB8YXCG7HD8VBL1wz2eMYeL9tde5UVKt0bk
isGLBNQNeJEA0Dao+1woAPxdWi4HrP2GoiIWUFTaEopKXgSB/LtJXUxRkVUU
tf/kn9+HwJ9pOSzVe9HPJzpeqfDzCWmDpCymqFg5Rf1Yp3ofNqnrJwD4EAAv
EgDUB3iRwPtGi4tWV1dHMZnM1m4JBPKvx8DAgPr999//9F780NB4z+FwOAwT
ExMtW1tbPXt7e11ra2tNY2Pjt15fcnFx4cbExHQqKSnJkMvlSxUKxfE5c+Y8
x17kzJkzL6N1G5cuXZpWUVHhOmbMGK0ePXowuVwu7g/nxfUJ7Giizxy4jtWK
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
hpephUBNThGN331N6s/903tS4/HQ95mp6vQnWnkWDYYVeB/I6zA7O1+kcX7+
iNo3xT16+7NbaDtSqy23pVZbvAi+yC2JVeItmC/yYBZ329Ec/sIPU9s4a8Pm
Pe6hxt8hXx6h/y+QfVK+sbGxT1BQEHfevHlfC4VC8bp168Tr168X9/f3ixct
WnQiPDxcSCaTg2FdhSdsL4uVjQvX/7wk/S0UF66nFe6LxJEEuC/y6YT7InEk
Ae6LxPUshfsiceGSnHBfJK6pJtwXiSMJcF/k1BIaZwh5I0kkEgJ5I2WlpaVl
Ji9Hy1RVVTXs7Oy8EhISyqqqql4fGho6u379+vvIF8nn838uLi7+yMvLq1ZD
Q8MZ2/T3v13hvsi/r1BdOcKwm6H68TgrtrjAOV1cOuaLPDLhizz3Evoi0bjU
Z7PGfZGXcpzMr+dxLG4WcCyR7xDWoZ3IcDA7kmRruj/W2mzHDEvmpjCW3YpA
ule3Fzmy3NEoJ42lsyTQRK3LXltpgKIit0JbTvp1RRJhFzTAg3BIfwB+lPr3
96ubwEl5EvGwlrz0Lpqa/DoXPRXeDKrmnNm2BjN4nmS310NZVocTbemwf7Sf
ilzGxtX+udiVeTPfhXEJ+w0Xc5wkfmyfuy9yjqf45wKXGx/FWG2tsdddaKdC
QL7IJ1376G+XuBcGFy5cL4qe6IsEyQbYKjoPFevPOzNC2yTeanlavNPq1oNN
5r+dX0Z/+G0/9cdv+2hfnRiivX5mhF5/doSWck5E9cA8hygGoxbmjdTH/Ipm
2NQYm054Jc2wdeUAecyfGHRmmFr7b3yR24FqqDMYoEG92udEY3UZTfJAmkwa
y3siPVH3xDpG2DjayBtpOL4/VOezIuqMMyJ6GdS76vgQ7fCxQdqV8XiRrPu/
vmb545315oc+76GMDBXqFEY5SXOUpaUejwGHRJDC+4d/V6htPskPJGutbuRR
4jC9ZnXUXOSL/OmLAsGU9UXu+t0XOT5uNmIH1Lkvs5H6cU6b8eH8Tt3PCrp0
DuS2G+7NqKduSam02JpSbfFeZiMd8sz2Z7dSXotfZFPvm+gfae6cYaquUwXH
QAisBtYpS8sPuxoyG0qdw7JWzpjtcyivg3x+/ojS5YVLpb8uFmhsGo8XmRbO
cOokq+u+QSKQ9hIJhHdkCKQhmF8UynCIX+wZPW1ZVInjdtg3qNdoa3KVtii8
yGwOJyzQ29SiwUBZY78sSfq2oozsT05GtE/nu0W0vJ6wyOebWQL103OHpL8s
EmggX+T62AW2wtA85xqfON9se98kbzOLGjM1nVfhzexb2NffpP7cL0Vjcx+S
JhBXszQNl2Syp0XDfrCPFvL0LpctU7tatlzteGm/3oG8Dsqe9DrkJzWfOF9w
PNFY5GN+06nsizyUxd32RTZ/4ccp7c5rQ+Y+yfeG6+XQX/m4SXp6ej4BAQEd
c+fO/Qr5IpEncsOGDWO+yLKyshMhISFCY2Nj5IuUf8L2+P9b4cKFSdLfQnHh
elrhvkgcSYD7Ip9OuC8SRxLgvkhcz1K4LxIXLskJ90XimmrCfZE4kgD3RU5d
ofCR0tLSyBf5e/yGCV+kioqKpp2dXVBCQkJTVVXVu0NDQ7fXrVv3cNWqVcgX
eaOkpGSHn5/fIn19fYe/KFcOykF/r8X/7v1fKMJQ8V/jRZa+fPEiJzMea9Fp
bFxqxCU0PnWuM4obicbRRsvp57Md6aczHWmnMx1oZ7Ic6acyHVnfptlbfxxv
4/haKMuL62EWNstGP3EGRTPbXV9ljoW6fI2xkgxfXZa0UpogtRUO62fAWanx
+Dt/dc/6hUQg3JYlEi4qy5K+0lGQ2cFQk+/3NFCdk8bSiWx2NXHdHGZu9V2q
PfN2IYf5oMSdeX+WG4obiXyRY+OAX3wxx9X++/EikS9ypvXWOkf9hU4aMk5S
eLxIXLhwvfiSlnqC9wxubkqBtorTevP1Gr4WUt6//7r5HfHb5g9+2sh6dH4p
Xfz9AO3q9wP0A6eG6SvPjtDLz47Q4s6JqG7nhqkszIdogGHyWLxI8qSYjUws
vqMeFitSGS0/O0wJecp4kWEAC+rVPyca81+aYfVQJ8WJpEyqlzxpX6iT/JMm
WBryqJbnRDSvsyJ66ulhevvxQfqOYwO0M2O+yHWsRw82Wdz/6RXzH77po746
OkuvbKaLvLe6gpTGE44rSQp/Fvxd/WW8SFttM88XMF7kWKzIiXiRezPqaR9k
NZuhWJGfjMeLNN2VXkvfklxpsS21xuK9rCb6gdw28v7sFuqmhMXWrQGpXgnW
nvEWusYLpUmkXjgOm4C9skTpbba65GV59oGLRBFFIShe5Jl5w/KXFo4Svyru
1tiUUG5X65OQHMF0biar66LxrLfBdm/By8uIgYpmdRDdLq3cKyZgZfQcJ+Td
3J5SbbYiqtS0wiPaNoRmH2+iotUlLy3zIZFAuKIkI3eJY0R/b45rWP26mfOn
HSns0jo1d0j6uxKh6ruZjdTlM0qdKr1jA+MsXVMdDCiVukoqSxWkZVGsyPNS
f+6Poljmx2SJpDf1FFWbXA0ZqYUOQV4jEcUs+M3G35f26R+f3a//ZVE3Gkuc
tnvcF8n643jWjPE8zt3f9UXi8SL/J/SX8SKNjIz+Y7xIMzOz6VJ4vEhcuP6t
JP0tFBeupxXui8SRBLgv8umE+yJxJAHui8T1LIX7InHhkpxwXySuqSbcF4kj
CXBf5NTVk3yRE5KTk1O3srIKjYuL666qqjoyNDT0AP2dYtWqVY/4fP650tLS
14KCgkrMzMxskZfyCeU+N18k1EWA/SUoKCgQFBUViRPA/JRFSVGBpKasKI0Y
z1P8HWMNFWIiy0B2mT9T5/tke4cHBa5ZD2e5Dz/AfJHnX0JfJAL5H6+NwUEw
IM24+sdy1qVcJ/RbUAxJ819muTIflrjTfpvlSr2ez6F+kWxH3xxubiXwIjss
sjd0z2DpBEeQ1eN8jVQLnHWVl1hqKPApqnJrjZVlt+spyhzSkCcdV5YhXVGQ
Jt6SJRLuShMIPxPG/wY9+f71E0GKcFyeRNxmoCgj4Ogql2Sa60QKvSlu+2da
W13IdmL+XOxK+6XYjXqzwIWO+SLN/9d8kY+KXcXiErexcbQPxrG3tntSFvmT
tTkqSoq/31egXRMUFRRI6spKCqpKinIoLelrEAcH5/kx+dkMkP4C4lR6hisp
KkqrqijJI8bn5YnKirJEFUUZkqmOrHa8h2rYQKEe73AX+dPrqxn3f97IFN9c
yxSfW0oX/zBEu3R8iL7/tIg+enaEvvjsCC3xnIjqe26Y6oCNpc3CMAesARts
aoVNbQF7LJ+KxZVEPkqrs8OU6DPD1ObTItquUyLatcd8kTfPjND3Am1QZzzg
BPUyzonGxuS2BNhYmVaT6rJ+bH5iXywxrP5Yh8o+J6K5nxXRY08P02uOD9Lf
ODZAOwH1PrqxhiH+7TWW+N4G5sVv+2nbVs83qcsM0A6iGirromfAxLMAjiVB
TUVRDgGPBGlJn+e/apMKU/g5hfZPRUlZTk1ZRWEsT1Fh/PjCVENFTcmbauO9
yDOmbl3Mgn0fZrbeO5LLEx/M6pjSvkgUN3J3eh0Dgea3pVRbvJVUYf1GwmJb
FNPxjYRy27eSllhtS61mvZvZRD2Y12FyOL/TBPNFWnEDM1wy7fxCnI0ZBRoK
yl0kInELvI98QSIQv2ZqGu2Ks3TvbA9IjduSXMn4srhb/uScAeLRQp4GlGvX
6JuUMMPcpYaqqb8MXls2w6FErNBWUmv2p7Hzyr1iQtbEzBvzRb6VWE7tDsqy
yGD7+Nhom+bLEEj9sO5+4KSKnMJ3rsbMd0pdQitXzJg97VBeh86ZecPEU3OH
FA7ktpusiJ7tPMclLMbDhLVQU0FpCLbZBXwDXIf9FBMJhEdwIh/C/EMigXhL
VVZhP0VNp8fdmJWbYOnuv8gtyqF3eo71htgFtm8nV9rDsbDZmlJl+RYanzux
3OKdpErW9tRq7HjW/R6Lc6r5IrcmVqF2OOaL/CSrfcenOV2L30tvc18TvUBt
ocdMIrRfgpaqOmrrMsDv9whVZRXU7klT4fmA8/+7XykrK8urqKhA93/svvr7
twGUb2lp6RcVFdVVVlb2dU9PD/rWIF69erUYeSTLy8tPxMbG9rPZ7FA1NTWV
P94rFNCzBP0fpyIqA+qQ+LME57m1p39BXl6eKCMjg3uoQZL+FooL19MK90Xi
SALcF/l0wn2ROJIA90XiepbCfZG4cElOuC8S11QT7ovEkQS4L3LqasK/iHjC
YmU6nR4RHR09VFlZeXx4eHgsdsPq1at/5fP5X82ePXs0ODg4i0KhWCJf4hPK
lUXjdEv9w75IWVlZgqamJgn2Q8ba2lrO3t5e3sHBQcHW1lYB5hWsrKzGplMN
to21gj3bRhFhbW0jb2XDlre0sUVTBU97tkLJNAflNdEuRl9nurveKfTM+7nY
feTnAtcvruU4/3Yh00l8McNJfPkF90WiGJFo/Gw0Rf7HG/kc5q0CF+Zt4E4h
TIGbBRzmj/kc1vV8jsXVPGer68DdQheLhyVuTPEcD6p4rofpgxI3IyjH8LNE
W+N3IszNlvnTGZ0eZnY1TsYeZfaG02ez9ePzrfQKMix0KhKZ2u2RFI1BHyPV
9bbaSlupqnLvastLH5QnEdAYhheAu1L/eg9D819LEwnbDJVke/2MVWdDmZHr
g5mczxLZrAvZTmTYP9PreRwq7APrUs7Y8WZdnfwbp8Cxfpa+yMtZnJrzmc5b
L2Y5X7mV6yx+UOAsfljoLL6X63T9SLLjtqEwu/I0d7aHnY2NsgXbloiwtGHL
2FhbKzqwbdTtbKxVUVrS1yAODs4/ivwENjY2Cmw2WxFQgmezMqACaVVAbQKU
hy1D66B1FdB2z3u/bTDG5m3QPtupsG1t0T1LwYHNlHezM1OcZq+nOsNNi1YR
p5O4YaFR/xE++ciFpfT7yBd4ZSVDfHaULj4xTL8EIF/kMjSm9ZkRWtZZETXq
7DA18OwwZRrgNYlpGD4YKO0PBAC+gAvABmzR8jPDlMzTw1TeaRFt7ykR7fIp
Ef3hJF/kbajvY5gOQJ2zgHCo1+usiOIB23pj5T1e1+T5yXnek+Z9x+epPmdF
tOAzInra6WF644khxps/DNLHfJHXVtHEP22giW+vpf34/QD9vdermB1lieZR
fm5WplbWbBkLazuipbUtCfo8cvZ21qr2ttaqtmxrJUm0T9S2AEVACdqa8uPt
EQHLVAFltI71H8+siXYt0esL7butDVvFnm2rjuatbKxlLNk2RCu2DcmBbaeZ
4B7o3xiS0bAxfvG+D9Kb7xzK7BB/nN6KfGjibck157al1GzamSZ5X+RY/MXU
GhaaonGm38tqIqMYkcgb+WpcmUN/WL5/s19KdMO0xNjOwIyw5VGlbmhs6MMF
XfrflfRqfV0sMNif3UKDda06gzLs8x2DvaZRbBKN1XSalWTld5CIpHPwGnLT
SEXrWy9Ti1XFTsE5A6H51jtTa5UO53dKH8xr19ycWGHbFpA2M97Ko5ypZTgI
7zCvEQmEzTBdq6mozPOl2Mwu94qJXDtzHgfFtNwUv4jR6pfiMIPlHGGsorUA
+ohLgfeALzUVlA94mpqvL3UJXbh8Rikas1sHvatcXriM9GVRt9762PnOsCzN
Xp/cTiIQ3pIa90ReQn1NGRJJTCIS70P6VzQvR5I5SdfQfzWEZr+gxGl6YL1P
ArvNL4Xd4pfs1eCbGFHrkxDb4JsU3hGY7t0bkucwGjkL+SVZbydXwLGtQ/E2
Eb/7TMfjR0reF7kzqUa8PbFavB2me1Lr73yQ1bprf15H1Y6cFt9VKYv1qiMz
5WO9guScbO3hHgz3Bxu49mzG270d21bRDp4lkng24Py9+xX2nNewHr+XjsV3
hCkB5QcEBARnZGR0V1RUfNPd3S0eGRkRj46OigUCgbi6uvpkTk7OUHBwcJSd
nZ02bEPEtoVnibU8KhO7X+PvFS838tg3HXnUP7S3t1dEoDSDwZDX19eXQR7J
f/Kb04sgSX8LxYXraYX7InEkAe6LfDrhvkgcSYD7InE9S+G+SFy4JCfcF4lr
qgn3ReJIAtwXOXWF+RflEU9YrEyhUKKjoqJWVlRUXBCJROINGzYgX+RNPp//
fmlpaUdQUFCsmZkZ7S/iRU74Ip+JoCjC4/UgKSkpEel0usy0adMU4+Li1DIz
MzWys7O1UlNTtRISErRiY2O1IF8rPj5+bH6qkAgkJ8RrI+ITEjRnJiZpxiSm
aM5MSNLKSozTakyP1n0tJ5x+tCBo2sWiabNuFHosv5nn8tW1bOf7lzORJ9JR
fCXT6SbyRV7O5gxezuEUXMl9gX2ReeO+SOSJvFvowrpX5Mr6qcjVHNLmkGfx
Yz7H8lqesyWsh9LmsJxxf5Yb9WGJm9lvs9xMbuZzjE5nOhp/nmRrsj/Whrwj
ypL1ZhjL5rVQltNrISzPjSHMwLXBjBmjAfTELk+z7IUOhnMSGdpV3oaq7Qx1
+UENOdJGaFz7oEkhf+SPUv96H7sO/KAoTdplqanQG0/XKmpxNQ16PZRlczCe
bXYiw8HkYo4T9Uoux/xaHsfiej6HdTWXA7/NCcW4HPuNkj7Wz9gXWXsh22Xb
pWzO1ZvZjuJfcuzFv+XYie9kO1z7JtNt+8Y0v+rq5Ej/pIR43RlJqXJRSWmy
MxOTlaHda6ckxBlCm9dHaUlfgzg4OP8c8MzVREAaoZ2UlKSbnJysl5KSYggY
A2YwT4F8CkzJMG8Cz20jQB/SupCvM6ms5/YMT0yI0wbG0nHxyVqxCam6cQDK
y04K05yb5qlbnWlD7synua4rMyt4v9Vs9Fsh5ci5UdrPl1bQxReW0cVnRuni
kyL6VeDgaRF9w2kRrQNYcFpEzTsjomacEVHSgJRJpGGkTgKtlwWkA/FAFAZa
thjKGjklon0AXAQenP7DF3kP+ALqfRXqbAVKYF1URjK27UQ9KZPmH687bdI+
/sv86WEqzNNyoNxFp4bp/SeGGbuPDzHPIl/kleVk8a3VpuIbK83uHRtiHtzR
5tDHm++XXJA+w3xmfIpyVFyGTExcmkJcQqJ6clK8fkpSnD48J3Sex3n903lO
TNQGdAF9aGtGgClARu0RgwzLTAEjWB89syb2c6JNT5QlqWeZdlJCol5yQqIh
mo9NSlCamZwgOzMpQT4lIcm4LDEnVJg8t+WNlKp3301pvP1xSrP4g5RG8Z6U
evGO1NrzO9Lq3tiZVi9xXyTyRG5LqbJA032ZDdRPctsMD+V1GOxJr6ctiyrx
KvOYkRZr6V4eznSqzbD1ndPilxL5dnKF1dfFPZpn5w0rHysV6n6Q1cx4JXaB
dVdQpnWpS7h9OMs5xFLXrFxbUW2LDEnmKurHqcopXqOo624LpNgsnOcS5jYc
VqizPaVa8f2sJp13kirZ3cHZkWm2PnOtdU26pUmkddJE0pvAK+rySn0+ZKuy
xR4zYtfOnOeCfJGvxy9iNfkmuUQwHeMNlDUqofwVwG4igfCxnpL6Tl+ytWiu
a3jpyhmzvT7N5+pMvK98O6tH+9W4Mte5rmEFdvoUkRRB6hOsf3kP+A3eclCs
SOSJvANcUJFT/MjT1KJ7vltEgii8iL0uZh6jLySXs9AtMj7e0n1+IM2uMoTu
UJpi4xM7zzXSq80/3XY0ssR8U2L5WKzI9zIbGYg9GfUM5CXdnlqNPKjP3xeZ
VhsCba56R0rtFuSL3JVYK96ZWCPelVQr3p1af2d3VtPenfktjW8UNoUuL6yi
teXO05iTlquWkpikFZeYoBMHbT0Oa/fQ5lG7x/uPLx7ofmuA3U/R+VMESIAM
ys/NzY1asGBBX319/XednZ1jcSIRXV1d4sbGxtMLFy4czcvLS0D3adhGFiAC
CoAmKhOVkYC/V7zUxMXFaaJvOqhfCX1GrYyMDJ3MzEwdaBPaISEh6uj/abS0
tGT+P9+QXkZJ+lsoLlxPK9wXiSMJcF/k0wn3ReJIAtwXietZCvdF4sIlOeG+
SFxTTbgvEkcS4L7Iqat/Fy8SzpsGi8VKmjlz5sbKysrrk+JFnuPz+W+WlpYu
CQwMnA7n1eQvypV5lr5IFJMSfdd+PF9dXZ3k6OiokJKSor5kyRK99vZ2o46O
DrPGxkYy7Dd58eLF5PLycnJFRcXY/FShCqiuqKAgKiqrzBZV15ourK43XVRV
Q66vKCcPLC6hvTk/w/bA7OjQH4qDFpzP91p7Jdf1m6vZzvevZjmJr2Y6iq9l
Ov34IvsiJ7yRaIriK6IxtK/ncVg38jmsm4gCjjnyQMI88huaXx3/DWPevWvj
PkoGLKcDNNiOBmXRzmc70c5kOtJPpDswv0+zNz+W7mBxOsPR8lyWo/WZLEe7
b1LtHT6IteasDmJ4N7iYhGaZ68T5G6vmWWjIV+rISwsVSMTNRILUEWha16T+
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
kQfySfuB8s/BPiBgfTpsawz7of9rsavpN6n2dksD6JEpLO0yqqrccqj/E+Ay
8ADbH/S37GPQsreSVeT4M2maRT3elJBDCWx7zBdp8rDEzfRl90VexnyRaBzt
2xls8Z0MG/FVNI52od+Hu+Yndy2tnh8Lbduiup2nVdnB16hr4xpBu2e1NzdZ
tzU3WaK0pK9BHByc50draysLMG9ra7MG7Nvb210AL8AX8Af8IN8bcIP1HAEb
2M68ZfyZTceYKO8fu3+0tTSxECj9f+ydB1xT19vHyQ57E1bIuJkk7EAYsgVU
EFGRvWcYgnswFBmK4F5AgrbW3aq1Tty7arW2areTYautWrW2to7mPScESy22
9F806Ht+H3/efc65Jyc3N5dvnqeypp4zvXoet6JmLlzPa6gbL9g0P8nl8JKQ
gZ82SNK+aRJWX1VwNrYqsPPAd2EO7T/yaHNuAZ8B68F29mLgWcAzgecCLwFe
BrxUva0nL1Xvs0R9zCy14bb3WpuxU6Cemz1wkT+DbV90MpRsBXC9ul44XaQu
s6vcF9XdUzvgdD5wrbodC0Adq68quIevKPjXVHm0V9gpf3jLqiuP9i8nlgXs
f3d+aunC2aX+M2rmWJVWLdKfVj3ftHpmLat2VrVo9qwq8ayZNQINjUc4FkXA
TmDsuQP7AAfAcah2ANjmA+wO9nUCx9irj+0ai133kpr6LOPPqpkpqq2ZKYbL
VbNnWlXUzzKaUTfLvLZ6puPSkuqktaMrl27PmHF2f0LFk8Mwj3bc9FfGRfaG
m9zXyU3ydieV8/eC6cHUGdyj6dU8YMge8jbHTsYaImRYie8ocaJjYLAfw0HG
M7VdbKZt2AK+YXys1RnP+zCFQFjlYGFXke4cmLxkcFbAzoRSEcyNvTFmMlYX
kuaY6RLiH8hyGuZEYyU4mNuletvyk+PsfYZX+MUErB0xxulwWhV2OruOcTKr
lnkwtZLTAtqzM7FM0JLUuxzTkPkE+9tDH0iZwTmVVWv7Se4cS8h/vjdqgnO5
36hhYZjLZCs9Y/hbm5PA3wE/gveURDzhNwKecJNEIJ41pOq+xzSyqJJYstP9
6MIRHlZYJsPAbC6ZQDgM9m010ta97M8UbS3zix4D+sb9dHa9yXnZfD1QHw3m
xgbnLQZtEO3p1u4u3lHNPP4X7rHPuMj9cBxCx6vG4k8t6TMOf5BbOXNDUdXw
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
rePdVHORjy41Yj9fVWBXrzVjLa3N7DltCnZKu5wlVXOIpupYjHR1zmqBOo81
W81Ddl8H2UkDYEO4HZQxpE3OntGqwPa8II/2PuDK9mZsGLCoQ8G27VCoGEdW
t5zZ7G51Yd2WOd1ybUOG0lLNRNqCesWg3sGtCnYRqLfxqhw7Bs7xxsUG7DGo
98mdNbx7D98TfH53HW/juUWscnk+bVi0ty7fXL/HeJE99ivSvxIR18P9OEEL
R3WjsQeM8YiYtiZq7EGYR/t8zoJXlEd7Oq8laRp/V1K56pij6dWcExmzMDjd
lVDGf2vYaIdy/xjPBLH/IG+6MAEzsSwy0darAl8gGgk43CYSHn/AgKx9jGFg
vtvVEls+CHOdmOYcHF7iO8p+8eAc2rvRE8xaksqt96dUcPckTXPcGj/VfUP0
eO93oop8V0aN9l4zfIzbu6MmiLfETuHvSCiFnKYqJuThtCpoDvSh1EpVLm1Y
xr7kim45sXt5jkmd7OeuxHIYE5N7NL2GeTKr1g6cI3tL3GSHuaGpQenOQake
1twqC13D9wwpOucpRNKP4OtRFxcJ72mvUomUI44WzGWpToG588PSAzbHTBLu
TZrO2ZVYJn5v1ASft6MKQ+RD80KWRxYMWDtijNPOhFLWycxZFhfyFpick80z
B21hLxycIU13CRzlYcMpNdPRX0Ulkk6Asq8AdwB/CbzbgKS9RGxOL4oT+Qyb
FZTotSlmouhYRg12JruOeSJzFnN/ygxQJ2RZVZxnr1/rvsqjfbozj/bE40m1
0jVDx+o9N5xRHu03Ry/Mo81gMGAe7fq/yaO9BMOwQeA9hPJoIyH9jTT9LBQJ
qbdCXCSyJoy4yN4JcZHImjDiIpH6UoiLRELSnBAXidTfhLhIZE0YcZH9R924
yD/9XUJXVxdvYmKi7+LiEhETE9NUUlJyedmyZb+tXbv2t3Xr1v3W0NBwZsqU
KUujoqJSBAKBmEKh9MRFkkHZxP7ARYJ24MC469cmEvB4KolAgH5+m4UOGReN
mZGWB2BmF+OcXZ/mStN+L/RuevoGcJHfqbnI29kevHu5Ut79XKngdo4Hvy3N
DTsT68jcPJjPrfdmeOaKaHEBNobVDAPKVm0i/msCDvcTeGl/01Ln1FZPfwH+
FvgTAk5rqwmFsNjRVGfSSMw0tdKDHr4lnO//eaKz560cd8ltmVTyQ7a7x1dJ
LtJDI0TS1aFcr2opPThNYJHga2VQQtcjvUMi4E6qy/tV68/XMRjb51cwsK9K
aHpby9zpU49Hi0Me5nkyleN9jZRjfEx+yZPSv82UCMB5iK9nSISvEQ/ZN1zk
6E4u8lS0w66ZXnYT/WwMPchEwp/iwsCBrk0iUilEAhnOa/o9iIyMjPx3Bp/T
OCq4swEmwmXCM+NwZgZESpSnPr0hj+Z7YREz+8G7vIVPtwgOPNjAu96xgvP7
xUZM+Q3wZQX2y7Vm7FxrM/udNgV7TLucFaRmD2lq5pCljiHpoJ5CFlIILAZ2
VK/rihkJOUoBKGNYm5xd3arA9l9TYLd74CL3A9e0N2MjgJ07FGxWh0JVD+Qd
Rd3q6apL2G3ZXl23SN1OW3XcSAwynaDehFYFuwrU+/5VOfYFOMefvl6Gqeq+
u4535+n7gtO/buKtAOc/ZtVY65CkQCOMbkbWgf3X9VkA5ymgT2G/EmHP9oPX
+nUzuM/Fk4kkMhX86963UDpkqo4XXeA33mvY9LXDxx2CXOS57PmvjIuEsRVb
1FzkobRK3pG0at6h1Er+7sRy3obo8byFg7NEUwZEu2U4D/SP5HsM82UIsxws
6NOt9Y2XaxNJe+E9HfB5cJaHLHSMVzhbYhOH8aXDi6WR3vPC0p3XR48Tw9iM
xzJqOCezamEsSptj6TX0oxnVDDBlHk2vxkB93P0pM/7IeZ30LOc1v1v8x/+F
/1NxkTsTS+13JJSKIBd5KqvW5kLefLNPcuZYgvXCWUGJ4RE8ySSartEacB5n
gG8CP+p2P3kL+FNdEvVdVyusUuYWlrg8ssAbtvuL/EUWXxQsNP44p94cnJ/N
wdRK5oHUGRwwhYwpF5wrdix9Jm9bfInj4sFZ/jluIXHu1uzJBhQqzJsN++4r
CoHUbqyte9HGwPQQz8RqqdSKIxvB9xg43nOo07Ih2bytcVMgI8oDZfFAf6li
ZsK+2ZX451zhr4qL/Ci9bvfZzHmTjiXXeq4ZNs6gaxzrUbThWIdXiGffkygk
Mhz3+Nfhex7yn69XJBKJQiaTtcHyn+IEw/VcLjcwIiJizvjx41VcJMxVAdlI
yEVOnjz5yvDhw5cKhcLBVCr1T9wsLBuWCcsgEP76fRr5zTW8BnS/DvxPD4ze
QGn6WSgSUm+FuEhkTRhxkb0T4iKRNWHERSL1pRAXiYSkOSEuEqm/CXGRyJow
HnGR/UaQWQSvBxHGdexax2Aw8M7OzhR/f39aXFxc5NixYxfU1tZ+1Nzc3Pru
u++2bdy48eqKFSu2V1RUVMbGxo4Qi8U8HR2dnrhIEvybhCa5SNAGHIlEUhnO
92eTSUS8DoVEgH5+m6UeFTeKY05aEcgx+yYecpGe6ZCLfPKac5GgfbwbWRLe
jUwJ/1a2Bw/ykHeyPYQ/ZHvwv8twZ19MdmWcHOXA3jSE7zjPhxmcI6Jl+tsY
zGYaUDcbkAkfg5e4FfiB1l+vM5CPvAp83IRCeM/FTLchlmNWU+ZuW9oUiE3c
OIQ/blOEYOx7g/njm4OwCbO9GRPGuVhPiuOaTfex0l9kp0/ZTMKr/g5/p4ey
oX8EvkIl4PeD9iys82Gmn09wkiqLfGyVk/yNleN9zX7N97SDOcKvpbmKO9Ld
nnGRP2i6z181FznKcdcsb8Ykf1sjDyqZROo+rsECXpdCpmqTSWQ4r+n3IDIy
ssaM74U13cbOz2kq+JymwktZ5zoSkYAHqwk0IyI5doC+2cpiS+E1OWuIcit/
inKncNNvG3nXrr/FUX7dgCm/WoYpL8kx5dVm7HJrM3tzmwIrbZezwzvkbBGw
jZo55HRjIMVqLlGkXnZWzzPVTCSM2yhsl7Oi2uTsGjUXeacHLvIA8Mz2Zmwk
sEuHgs3uUKhiQQq6MY9dPGRXffbd5h3U+/E6mUw2tD1o+8B2BVbQ1ozJQb0n
Lzdh3365FHv8+RJMeUXOUd5fz7up3C7Yp9zOn3VzJRa7eYqNS2aIsRWTRqXC
viN061tt0K+6oF/J5H7xWvf7sfi8wX0unkqmkHUonX0L3XUfrEfV0fG2E/pN
8I6qWDvi1XORKjZSzRweSJ3BO5hayd+fMgMyd9wtsVOwlVHF3EWDsoQzg5Id
S32jpUXS8EHJjn5pAUxRBcPQbBU4jcNanfmfL8D7Om0i9V3MxLp+INu5ONct
LGZWcFLAquHFji1J5YwTWbXmn+TONYJ5pc/nzbP4NHeu9ensOubxjBourHcf
aDtkIXcmlvF3JpQKdiaUCXYllglanrGRvTuvfWrD+d2J5YLt8SXirXFTHfYm
TeeeyamnXSpaqvtN4RL9Q6mVWN3AlGGhmPMsXRL1kFZn3MaHXfeTOC0c/H1P
K3ix9htSdBdLrXlFoz2GRK4eXuwG2s26Wtxgeq24UfergkU64Jz0Ps2dZ/Sp
bJ7Fxzn1jKPpNcLtCSXuyyMLQsv9RsXHiQeMkVhjtfoU6lugzK3ARwwoOqeE
ZrZHA1niLSOEnguTHPwKclwGhk32HuY4Z2AKa9XwIsaOhFIM9s3R9GrBobQq
HoyZCfpC5b1J/xsr+l+4yFNqLvJoSq3XmmHjDcZ7Dsf52NnjDLR14biGevY9
SZtCheMe/zp8z0P+8/WKAkSlUrWJ6mtq1/UKrufxeEFDhw6dO2HCBBUXCfNV
QDYScpFTpky5MmLEiKX29vZDdHR09LofCw3LhGWAOv7yfRr5zXX35z1dfORL
fsz0WkjTz0KRkHorxEUia8KIi+ydEBeJrAkjLhKpL4W4SCQkzQlxkUj9TYiL
RNaEERepWXX9pr5rGaKRMGwknKfRaDhPT09iTEyM/ujRo5kVFRURdXV1FYsW
LXqvubn54Lp16w5v3Lhx98qVKxuqq6tHx8fHh4jFYiaVSiU9Xw8RCHKRr/Lc
/k6ajmPwT/7HeJHsZ/EiXWC8SOUbEC8S+qbanbygBx+0WQCW+WAZu5npzrqa
6sY+G+co2B4hdJ0/gBmcK6YlB9kalnEMKSt0iPiDWp38Y1fcne5+CnybhMdd
oemQPnUw1TkWTDc8MJJjuidFYL4r1d5iV7LAvGUUx3T3EKbxHl9rg71OZjqH
7fQpHxuQCTDn4L0eyoSGsSO/Bt5jqUNaEskyLlrkxxpyPsHJ8WmhF0M53tdS
OXaA9S95nszvMiWC1jQ3UUeGm+D/LRf5R7xIdxQvEhkZ+XU2jBepDa5WwKrP
6c57i86QkeYGBEKsj57O6jE0s2+XsxyVO/gpyhah/PEm/peQi4RM5JfL2MpL
TZjymgK71tqMbW9TYNXtCiymQ4FJOxRsboeczVKzh10son03VhEuO70gXmTk
v4gX6dTLeJHCbssiNRcJ9mdjwKCNmAdod3S7gjO9fTm2BdRz5XITdv+zJdjv
5xaylRcbMOW9dbxryh2Cdcpd/IIfV2NeW6daW2WHGOozzMlEVYfC/9R9S1X3
K5Go+df5dfQ/xYv0tOX7aiJe5B98ZCdfty+lgrc/pYIPprAM7o6EUs7GmEm8
NSPG8lYPH8NbNbxYsGJYocv8sLSgIml4UjDLodxC12AFOI39Wp1cJLw/+4pE
IB5lGVuuCmQ6lGa6DBxZFZjo9nZUEWNX0jTzE5mzzM7mzLH6VDbX5mxOPR0s
sw+nVarqhW3/a7zIaaq4iP8mXuS+znPhwnmYQ3tr/FSHLbFTHGHZMLbjleIG
ypWiBurxjJnseaFp0YM5Lkv0yNqfaXXmzIb3p5CJVBJw+J/Am+EclUBcb6lr
XOZvJ4of5znUf/XwYoeTWbXsrwsXW31VsMgcnIvpmZx6k09l84w/z19g8knu
HBuYN7wpQjaoWBqRG8xynMk0slipS6bsAGUfAj4Ivk7scLJkrU4Q+9aX+kaP
nReWHrtkcFYgsEtjeA5/5bBC9uaYSSzQfg7sm4OpMwQHUmbwIRcJz2PP/85E
/ud4kZ/8ES9Sv2sco3iRb477Il6kQCBA8SKRe/T/+KjojZSmn4UiIfVWiItE
1oQRF9k7IS4SWRNGXCRSXwpxkUhImhPiIpH6mxAXiawJ4xEXqVHBvx0R1bEV
ukm1DF4TXFhYGKmoqMh49uzZ3KVLl4YsXrw4b/78+TMXLly4rAnorbfemt/Q
0DC5vLw8Ljo6WioQCKxhTIbn61Fjkfjn1yP1LDxOC0cm4PDQPW0fyTIhLvdn
m16Mc3L5/Q3iIrv7BowfmSHhw+mdHA/OvVwp98ccD963GRLe+Xhn/rYIgWje
AKZXrsgyKtjWYCxmQG3sxkY+i7/T3WBgPybjcQ91SYT7xhTiPXNt0l2ajso/
wilcNqES7xpSiHf1wD5UAv4XEh73GLwePV2/YFyfq3gcbi84brHEQm90pr3F
MHkg5nk21tH+Xq4HRznam/U78E8yKQbOg9+RIRF+mynha7pvNclF1njSJw6w
0ncn4nHE7mMavDY4CgFPAf1NwqmvQUhISEj9WRQiDgfdbRVBba3hHrp4ucyc
+M1iO9qTjZxQ5Qf8mQ838E5dX8F5+k0DpooZebmTi2wD3tOq4CxqU3AK2hWc
8A4F5t4ZN/IZn8hXM5L8bmyig3obHdgE2BTu0y5nDW2Ts6taFdi+v+Eiq9ub
seHAjh0KNqNDoWIrud34R163+gQvWAe5SAFoqwtocyhwPnBD23LOh6Ce+1cU
nCeQ/4TxIuF53l3LPafcwlug3MyNapMzGevHWZJSAvQJtiaq3+bg1f2m6kvS
X/sV6V8IxmYn4gkkMoFIeX4blUjWltrwfMd5RmqMi3yRWxLLedsTSgTb4qcK
didNw46kVcE4iMxdiWXCxgiZT4H7oFGettxJBmRqs1Zn3Eh4v/cDcJupjsFh
BwvGwnCue2q+e7i0LiSVvWbkOFtQDiyDcyJzJvd4Rg0H5tDemzyNvzv5f8+V
/SI2site5I6EzniRe5Kmcz/Kmm3xZcEi7c/yFhiAfexnD0xODee6vmOirQ9j
nKuYSC2tTi6SjCd+r0eiHqTpGCwSmdFlw7juYaUDRritHl4sOJhWyT2dU4ed
yqrFDqdXYYdA35zKmg15T3NQh+37sZNcqwLjo4cJpGUMQ/OVYAhAdhTm6T4N
vJtrYtUcJx4wuW5g8sjNMZM8QD/APOaslqRyzgdxUwQfxE4R7Ews5e15dj4V
z86pD9w3XGTkH1ykWvCa8ex7EolAhOMeXTdeM8HrFYFAIBOJRKrWc/f/cD2G
YYHh4eEv5CKjoqKW8vn8wWQyWff5smGZsAz4u89XdkJISP1Umn4WioTUWyEu
ElkTRlxk74S4SGRNGHGRSH0pxEUiIWlOiItE6m9CXCSyJoy4SM3qBVykSpCL
DAkJIRUUFBjV1NRgc+bMkVZXV0eWlJSkTp48ubCsrKy4srIyu7y8PEYmkwWG
hYXZs9lsU1DeX/72ANchLrL3QlxkJxf53R9cJO9BnpT/S56n4L7Mg9eRLmF/
HOvI2DyEz5k7gOlW6GgZOZRlPEFioduIGVF2WumSz5prk64YU4jfGZIJt3RJ
hLskPA7m036s9e+vU0/BGwTykXd1iPhbRhTiDQttUpudPuUcx1C7xclMd2mA
jUFxEt982HR3W+/1YTyHs7GOAhgf8oFMyv85z5P3Y46UezPTnQ+ZyBuIi0Rc
JBIS0hshyO+RuvF7YAZCOX/6bcjOEkvql4vs3L5bwR574y3OtrblnB8uy7GH
V+ScR9cU2O/AN6/KsZPXFJz1bQpOXbuCk9ehwCI65GwPNX8IYznaqeNCYt3i
OnbnIk1fIhfZtY6jbgvM283u3J8NjscCQJuTQdurr8k5W67KOd/AOttXcJUd
K7i/d7zF++3mO9wHt1dz9916B5t6eRnTZ/90a4PufYSDtz24P7hI4nP9ivTv
9LpykXtAWbuTpgn3JU8XHM+YiZ2XzbP5omCR5dncOTY7Ekp5c0NTvVKc/KM9
rLEpVvrGK2l6Rh+a6RhcNNcx+JptTNsvsebMj+B5pOS6DfasCkzkLY8sZG+J
mwLbJz6YOkN0MGWGYE/yNP6uxDL+rqSyPuMiVfnB1fEU1Tm1YR/ZH0yp5B5L
r7EG52IO+cwVkYX+E72HTQhmOWwFbf6eCL4D4zuftUA+8pE2kXzZStd4k6O5
3bRBbOdRMtdQz7qBycJ1I8ZywfGCQ2mV9vtTKhx2JZU7tCSVCw6nVbFOZdVa
H02vYWyIHicp9x81KoInKWMZWbylQ6LsMqTqHAb9s5tlTFs5lCcpL/cbNXLj
qAniM9n1phcLl+p8VbjY6OOcejooRwDaK4Kv7b5n5zSN19s84oiLRPovQlwk
EtKrkaafhSIh9VaIi0TWhBEX2TshLhJZE0ZcJFJfCnGRSEiaE+IikfqbEBeJ
rAkjLlKzwuP/nEe7u8zNzXESiYQYFRWll5mZaZWTk8NNSUlxjo6O9gLrAkeO
HBkcGxs7ACxLwsLCBM7OztY0Gk2vJ/4R3yn0t6peCnGRz7hIXhcX+ZNMKvgl
31Pwc56Udzvbg3klxdX21CgH220RAs7yYMxjljdjxHgX69EZ9hbVIzDThiBb
w7Vu5rpbeUbUvVY65A/1iPhzWp05F28CPwD+Xevvr08wHiTMn/0t8Fc6BPxp
G13yQRcz3R1hDKN3kwTmTXkOljWgzvxyd9vIeb5Mr1UhHIf9USL+54nOMK6l
ELRbeDdXygftVeUHh+dyU4N9irhIJCQkpJcnPF6LCP38ernMnN0yzSbu7Dzm
0ouN2JnW5Zy2629xf+xYoWIj719pwi5elXM+bFVwPmhTcOa3K7B84LAOBVsM
bNshZ1kAW6mZRL46j7WTmo9kqHNoQ/P/JRcJ82gzOxSqcnndcnV3xYi0V9ch
UnOTsC4bcAwdmNehwDw7mrFRoLyp1+Scdy42YB99uRT7Hpyj8tuVXOX99fzf
ft0k+P6X9/hfXV/BeetUnV3qmjGWgooYkz+xo+CeBw/uHCEJidiVPtDrwkXu
Sf4jp3ZXWftSKoQHU2fwYd7oC7L5tl8VLLa8kDff8nBatd3qEcX2VYFxvlmu
wXGRfPfJ4Ty3ZWGY84YQttO7ETxJQ5x4wASZZFBUqe8oyfywTP47w4u5W+Km
CHcnTRODckWQt4R5slsSy1Q5s/uCi4Tn0KIqs1yVk/tQaiXneEYN93jGTN6R
tGru7sRp3HUjx4rmhqb5FnmEp0cJPBY70hgnDam6P4HXqIuLhPebtw0pOqfF
5nZNkVxJXrFHeFD9wBT7d6JGs7bETmbvSiqDTKcY1OO4I7HMcVdimf2B1Bmc
Yxk1dqBO1sZRE1zqQ1KH5LiF5oI+meFly1sUwBQ1gvn50fZeJZO8o5KbImQ+
oA/oF/IW6F4paiBfHL3U4Jxsns2HmTNhu+33g9ca5jTv4jz/Y+5sxEUi9UqI
i0RCejXS9LNQJKTeCnGRyJow4iJ7J8RFImvCiItE6kshLhIJSXNCXCRSfxPi
IpE1YcRF9m9ZW1vjhUIh2dXVVd/Nzc3Y0dHRAixb8Xg8Wz6fTwfz1gKBwILN
ZhvTaDRdIBL8+8bz5fS0DunFQlykO+9m5h8c4a1sd96POR78+7lS/n2ZlHsn
x4N9PUPCuJjiwjgf78w+Hetof3SkWLorUhi6Low3YqEfK2Wiq01BPNdscqCN
QaWDqc58Wx3ycn0SYRPovq7cgt8AdwB/r9WZhxHykteBYW7Di8AXgE8B7yPi
tN4zpxIVLma69bFcs7IKD3rhyhBuyvahwqj9w0VBB4aL3A+PFIlPjHIQXEhw
5l5Lc+PCuJC3sj0Et7M9+D9kq88pC3GRiItEQkJ6EwU/t4kE8I+AIzy/LdZb
z6wm0cx/a6ntuM8Ws9d8u5L74e3VvGs3VnIftCo4jy43YncuN2Ht1+TY160K
bGebAqtvV2DJHc1sKTCzQ8G26FCwLNVcJOQWHYFd1HwkS81NQgva5azIXnCR
Ne3N2IjnuMiuOJRdbGT3fN0Oqu2qfdm2wCzQLqeOZmxIx3KsGJTXeEWOHfpy
Kbvt/CL2zzB/9s13uL8/3iy4pdxuf+7XTfytFxaxypYXWoZmDTS0fr5/CHhw
vwORJjxiV/pCrwsX2cUVds3vS66AXCT/YOoM3rH0GuxU1mzmmZx6+kdZs2FM
Q+a2+KnclVGjnRYNzvCdFZw4tCYoIbkyMC53RkCsrDooIbVuYErkwkFZPoqh
+Q5rRozlvR87mbszsYyvioOYUiHYp27r7qRpKvdFPEQY43JXYrlgZ0KpYE/S
NP6x9Gr2mex65sc59awjadX8DSPHuVYHxoclOvhledry63mm1rssdA2uUgik
39RM5BPgu8BfW+kbbwtiOVSNkUaMWjYkx+39mEkMUKY16BfG7uRyQUtimQjU
JW5JmmYP+c79KRWcQ2mV7AMpM7Bt8SWiVcOLPRcMygirCIiNnjpgRNI0v1Gp
oH8SZg9MHqYYmhewKWaSI+hbxkfZdeaf5s41PZs7x/JUVi3jaHo192BqJSyP
D/Nn70XxIpFeoRAXiYT0aqTpZ6FISL0V4iKRNWHERfZOiItE1oQRF4nUl0Jc
JBKS5oS4SKT+JsRFImvCiIvs/yKRSDgKhYKHJpPJBLDcZWLXvDpPNg7xj30j
xEX+1T9AZ3ca8njfZUpgTEYemHJvZXtwf8yR8r7PdhdeSXUVH492cFkdwvWu
lNIHZtlbDItgGiV50fTyRcbaJQw98hxzKnG5HomwUZuI30Uh4PcDHwTeB5Zb
dEn4bYZkwkZTKnGVGZXYZEElzqHrkcudzXRGD2ebJE33oId/EC7w+TrJxelO
tofwQZ6K0+TCHNmtaW6CjnQ3/o1+0F+Ii0RCQkJ6dSLgwec2EUckEf/KRWI0
kl5qoKH9yjFWIz5fwp52bz1v/cP3BB/fWcP7HvKKFxuwpxcbscdX5div1xTY
l60K7L22ZqykvRkbBuyi4hBhvuvOPNoCNQ/poGYXYY5tM7X/bbzI7nm0n48X
yVdPuxhJHtgXA+aC45yBQ0Ebs4HnXmvGdlxpxr7+phH7+cul2NPLTRzlD6t5
Pz3axP/6yWbBtutvc2q3l9kmjok0dnZkUoye7x8iuNehkHBEAuIi+0SvExfZ
k1W5qFMquPuBD6TMANMZXLgMWT0Yl3FHQqlwe3yJCNhhW3yJEzSYd9yeUCqC
23Z1xoPsy3iH/8RFCncmlNpDLvJ4Rg3zbM4c649z5tjCvlk2JMc/0yU43cWS
PVufrL2VhCd8AYb7XVxn7mz43fBn4FYCnnCIa2rVGCPyGT0nJDUEnI/wZGat
zZnsOqtj6TUMmP8b1gHr2qPu886c3RXcfZ0cI4xZKQDnbw/6Q7w1firom6mO
YN5he0KJGPQJjJvJB/vC/uRAlhKYA/sY9C1v38vtJ8RFIr1QiItEQno10vSz
UCSk3gpxkciaMOIieyfERSJrwoiLROpLIS4SCUlzQlwkUn8T4iKRNWHERSIh
/VWIi/yDhYTTrhzUkIUE5gMLgO1/yHa3v5crFTwp9OYoi33slGN8rB8XeNG+
zZBYnoh2oK8L43HrvRmOE12svbKEFiFxXNORw1jGGWF2hmMDbQyn+9sYzAae
B7wAeC5cDrQ1qBloazg9xM5wcgjdsAg4K5xhHJvEMxtS4mbjszqUJ76Q4Gz3
MM/TQjlugLlygi9NOWaA3W8FnpwfczwEt7LdBT9ke6gYQhjz8ubrmzsbcZFI
SEhIvRTkIiHbRyY94yLhdQx+huO0yXhKlFTP6u1iK2mrAktWbuXXK7cJW37a
wL96rZnz+5dLMeXXDZjyihxTXlNgd8A+J9qasWbgcW2QX1SwvTsUbMcOOVsI
zFczjFx1rEgasAGwITCnXc6K+BdcpAMo165DoWIrMTULCcvlqMtmqLlLaDbY
1x7YExw3FLQr/6ocm31Zjm0E/qR1BXb7+ttc5Y2VXOUPq3hP76zhfffDKu6h
iw3sBS0z6Cm1KeYDBrnp2ulq43XUffOMaYJcJOw3xEX2jV5nLhKyjzCWI+Qf
dyaUCiHnCKe7k8oFB1KexZG0+zin3upszhwY89DoE2CwbHo6u84Kxj88njGT
cyStincgdYYq/uGzvNB9kDe7B0Me0X5XQqkIcpFH06vtQPvMj2XMpG2KmcSv
DIgbNITrOomma7QedP85rc745I+BleBW/wkY+t+D1+mMAVV3lZs1VprjFhaz
PLLA82h6DfezvAW2F/IW2JzInMWE3OOOhBL7nYnlgi4uEtYH+6UrdiSomwnq
tgH9QTsnm2emjglpdia7zvLDzJn0Q6mVGDgGxrYUb48vEW9PKBHtTCgTwr7e
/fL6B3GRSH8rxEUiIb0aafpZKBJSb4W4SGRNGHGRvRPiIpE1YcRFIvWlEBeJ
hKQ5IS4Sqb8JcZHImjDiIpGQ/irERf49FwnmBWCd/e0cD+EDmZT/e6E3phzj
Y6scO8BSWeRt9pNMano5xdXiRLSDzbYIAXN1CEfQGMB2XuDL9J7tbTew2pM+
rEJKj5vuQU+dLqVnAmcBZ4DltAqpbVIl2FblSR8JPBTMh870svNd5MeSrAvj
2R+PdmBcz5BYKEd7GyvH+ZooJ/hagHrpTwq9MFAvH+b7vqXmIm90ywXe/Xxe
QyMuEgkJCelvROzkIglk0rPP7WdcJPwsHy7V01s/3op5+x0sQLlbUKRsEb79
YAP/7KUmzoPzizDl50sw5eUmTNnajP3W1oxdBj4EvAIsl7cp2GntCmxQhxyT
Att3yNnY9U5m0QbYuEPO1AZTfTUXCeNFVrcqsP2QsexFHu2ueJGYmrfsYiLp
oB7IXJp25vFmszuaQf3N2CjQrkmg7MaLDextXyxlf/TVMnZb+1ucX++v5yuf
bBYoH20W/Pr9Kt7nZ+YyV64eay2bNNLUfaS3PpNnQzaAXaXuG5JWJ9eEI+Bx
OBLoIzyKOd4ner25yE6G8a9c5DTBwdRK7oeZs1hncuptz8nmWQAbnZfN1zuf
N18Pzp/NnUM7nT3b7kTmLOxoejUP5oZ+GVzkHjW/Cef3pUzn70mabt+SVC6G
jOK+lAr63uQKs/fjplosC88VFbgPGeFpy6/VJVEPge6/Cfyrlvo7MBjyv2kT
Kd+YaOt/wDS2rAphOydN9B7uv2bEWPGHGbPYn+UvYIDzY4DzYXdykTAWpoqL
VNUNeciWZ1zkDA6MKwnZ0POyeWaf5y8w/ixvgRHoG+NPc+ean8qqtTmSVs2C
rxfoT9GfuMikcv5L5EYRF4n0t0JcJBLSq5Gmn4UiIfVWiItE1oQRF9k7IS4S
WRNGXCRSXwpxkUhImhPiIpH6mxAXiawJIy4SCemvQlzkXw3Zwm6xF/k/AN/O
9uDfzfXg/Zznif2W78l8VOBFf5jvaXMvV2rzXabE9nKKq91nCc6sj+McOSdH
OQiORYsdjowQuxwcLvLYP1zkDey7b7jIHzgATsGyH/CAA2AbsCewO7DroREi
x+PRDvafxDlxL6W4MkHdtr/keVo/KfSyflroRQf1Mh/kSTHYFtCmrlzfnW3u
B32HuEgkJCSkly8KSRX3sPvn9rNrWfwAPeLGiZZGt1ey7ZU7+SOVOwTV99fz
dn7TyLl6bhH28DPIRcohF8l50rYcu9PajLW1KrDT1xTYJjCd067g5HUosAhg
d2DBdTkbsou2wCbduEhuu5w1rE3OrvkbLvKAmoscCfNhq3N0M9U8ZFcsSkwV
I1LBpgGbtivYlh3NbAd1Xu+pbc3Y6qty7MRXy9iXLixiX/98Cfve9bc4T37b
JFAqd9grn74vvPFNA7Zn1Rjr6TmhRsGuGNWcTSPp6uvgid36haz1ByOpuu/B
4dC1vy/0OnORz9jDJFXcSBgPEcYyVNVxIHUG90haNXY8YybzROYsOrD1ycxa
S2gwbwPW2x1Nr2YfTqviHkyt5O1PqeB35Yfeo3bftG06bzdkCEEbYR37VX00
XdySNE2wPaGEsSF6PG3JkFzbqQOiJdH2PmkiC0ajDolyXquTiVTlz4bPWMgE
0k+m2vonMWOrZV50QVaig39gZWCCeH30eAycA3Ymu44DjB1Lr+HAencmlgkg
L/oHnzkN8ox8OIV5xg+lVrKPptdAjpJ+MqvWBvQL7B8Yb5IO14M+wSAnChlT
yFN2MZUvkYdEXCTSPwpxkUhIr0aafhaKhNRbIS4SWRNGXGTvhLhIZE0YcZFI
fSnERSIhaU6Ii0Tqb0JcJPLzhq8/5BZf5jhAXCQS0l+FuEjkfmbERSIhISH9
g8hEHI5E/FPMQ5xWt+vZ24UWlC8X2tk8WIv5/PYeN+fHNdxlrc2cg980cq5c
auLcu9bMeQz5xWvNqnza0PeBv2pVYDvaFJy5kI0EhmykT4ec7dIhZwk6Y0Yy
YQ5tI8g0qrnI6l7m0XbsjBep4iK56vKE6ikPrMeg4X7Ag9qasTGg3LdBuWeB
78L4lt80dMa5/P4d7pNfNwp+ebxZ8N13b3NP7Jlh1zB5hGmyK5vKe76f8Hgt
cLHHkYkEHBFd7/tebwIX2Z+tyvOtjrF4MHUG72h6Nf9IerVwX0oF//3YyazG
CJldie8oQZJjwEA/hngs29hqvR5Z+6rWc9+BwWvxPd3AbKfUhj8t2t5n6Hiv
KIeFg7IY746awABlcw+nVQlB2YJDqZWqelu6MaKvmREXifRCIS4SCenVSNPP
QpGQeivERSJrwoiL7J0QF4msCSMuEqkvhbhIJCTNCXGRSP1NiIv8b/xgT9Z0
u/7rOXVf7uIX+9qIi+z/IhAIOCKRiCORSHgwJRC7CawjqtfhoXAoB2KfCHGR
/+yu3NrfZkj4HRkSQXu6mxDYviNdIvouUyL6IdtddDfXw/6BTCp4mO/Je1Tg
xX1S6MV+WujNVI72tgO2BbYGtlLbWm0b9Ta6ej/m76O92Y8LvDiwHFCmqs9A
neLWNDdoURuo+zpogzrH95sSIxJxkUhISEj/UkTCH/dBkJOkdIsfOW2UMX7d
GJrhyVm2vCuNzNAfVmJFP67mLru9mrf/+3e4l66/xf3pipyjvNiIKS81dsaP
vCrHHl5TYF+0Kjib2xScOuDR7QossV3OjmyXswKBnTrjRrItgPlgPcyjPaNV
ge0Gx93qgYvcBzyjvRkbCizsULBtOhQYAxzLAxZ1dJbnCsr1aFewBwCHgLJi
QVnjrzRhjRcb2ccuNbJhPEvld29zlT+s4invrOEp767hPf7+HV7r18uwQzun
0Rvq0ywKI931fI11CSbP9xGVjMPrUvEkMsSYUIzIPtebxEV2j/cImUCYR3pn
YhnMr20PLAIWQ+9MKBPtAuvhdjU/+NLyQoPyeaAuwW4wPZxWyT2VVcv5KLuO
eyS9mrcpZiK3PiTVPtMlxCeQ5ZggNLertdQz2atLpt4k4Qkwdzb8PghjRj7U
IVEuC8xs1kTw3AvHekb6zgvNYK0aPoa2JW6KLSgfxswU70+pEO1PrlD1MYxR
uee5/t7XbV6VVzuxXAj6p6tvVN4J+gr2DYwPuUfNVe577ljERSJpSoiLREJ6
NdL0s1AkpN4KcZHImjDiInsnxEUia8KIi0TqSyEuEglJc0JcJFJ/E+Ii/5kT
hAwfgUBQmUgkqgznn+cgu/bt2qdrP7juZcdf7At3sYq6urrKpqYmpYuLy5/W
v4y6EBfZvwXZSLXxhL/q/9g7D7imrjYOQyBMERcqIgokgQBupnvVVm2te7E3
OHCvVqZ7VK22dYBW3Hu0tbLcta5a29rWr6114QZ3XTh4v3NucjCBAEFDbiDv
8/P/u5hxV84N8ObhPfQ2pkXi51EaAL1I9bxIOq82dRHlbqTrtVBP6ie63Qr3
crsb6e36MNpH+mSYr8vz4b6SlyNai16PbO1YENumMec8jmpjR2JLUl8eW3ka
cPe9cSPp4x1fjWwtout5FO1D5/B2Jdt0ox6m3MWk/3e5Fe5ZlebORi8SQRDk
HTATKnuRlMj3qpvMC6xdOz2+gfOl5Y5d8rdJomGXy5fPtjofuZUmuf33MhH8
/oUT/PmlCOjX1I+8uEKUeylF9NOVVNH2nFTxlzmpopkkk3NSnKJIel1NcWp1
LUUkIWl2NUXUR+5FZlxOFeVyfSdXipS9yFRxEu07SeJ6LVVkTyIiz20qm6Ob
upCO7+WkOPa5kuIUcjnFaQLZ/gKyH5v+95XT4d+XOF75k+wfXd/DTc7wepcU
CnZL4d5658c/L3Q8unZMg0XjetcK6Otr1V7a0LQx+alQqHD43Hu7ibGhgJwb
I2PyMw6+32uequRFKoY6fdR5pO6jzIGMc1NMhqITyXmRFbMf6WQb3/tN5bb1
Q+gM8Zno+Y6/xSx0PBY+S7J1wPimCR0Htevt4jPQ1cZ+io1ljQ3VTMx/NTES
PjJ6UwOg82nnVjezOOltJ/kiomW3wAXvh7baMmBCA3Jstcl+28ncy/gm5Fjc
9wUmSpkbqsb5Iecm3rXI+XGl50Y+ZzYf/SbRi0RKBL1IBNEOfNdCEURd0IvE
8BH0ItUDvUgMH0EvEtEk6EUiCH+gF4noGuhFFvcfy+sBltd5fJdtVVTYflSv
Xh327NnDjYm//voLpFIpdzvd14rYHnqRlQdDFfC9T1UN9CLL70feCveivRpd
bssdvjuR3s73orxpf0fJw2gfyaMYH/F/MT6ixzE+TiSOT4b5OMjTWCHcbY9p
yGPkoY8XkeeK6XroOu9Ectt1YduUb5f3c4FeJIIgiO5gKiw2r7aBpL5Q0MvD
QjgvqLbViTkNuTm14Rvn4a92OK/NXSP+86+lote/LXaCP75Q8iIfX0wRXbmc
IjpzJVV0gOTby6miDWT5Ocn4nFRR/6upoo4kXUgCyf/nkNuzVXiRD3JWig/l
pIpnX00VDyLxJmlC4kme1/laqrgnWfbPSXUKvpLqNO5yitNnl1KctlxYITp2
fpno/LkvRTfOLnF88scSJ8hZJYan21wAvnPlvEiyfxc3jW+QFvVBjcBmDqbO
9nWENlbmAguFQzeSh/sZRyCgP07ie31FUFW9SOYGUrev5FT8Psi9SFe5F+n0
S/Rn9mdjFtkfDZspWd93tNe41h/36dDIfVxdS+vlpkbCI0YCo2vkJck3lP3u
S3tF3iP5s161Grvfc2qWNKVd/74b+o1peiB4WoMT4bPrkHXake1I0v3i3Mk2
3LLLMXd2yeeH1/nO0YtESgS9SATRDnzXQhFEXdCLxPAR9CLVA71IDB9BLxLR
JOhFIgh/oBeJ6Br67kVSP08oFKo8Znqfra0tdOvWDYKCgmDSpEmwcOFC2LRp
E2RlZcGRI0fg6NGjcPz4cTh27Bj39eHDhyEjIwPWrl0Lc+fOhbFjx4Kfnx+0
a9cOatasqXI7rA8lX46kYp9I5kS+fPmSW166dAmaNm2qcTcSvUgEKQ56kRry
JeXOpKI3+S65XTXnyEYvEkEQpAKgXqTivNoGMo+n8P8bxtQT/G9JI7tH6526
Pd0kSri7Vvx9zkrRpYsrRM+upIqfX/1a/IImZ5X42ZWVoieXU0X3SG6QXLiU
KvqVLLOvpIpW5aSK46+miqNJIkgm56SKUsjtR8n9d4t4kf/lrBSfJI9fQR43
mmQASS+SgSRhJCPJcyddSXWaQULW4ZSZs0r0z9VV4ufXvqbPl8ClVDFcShG/
vr1G8uLxFpfnz7Y6P7uxWnxt/7RGGfGD6kzxlph7Gii4ShTqQJqbGJqZGJP3
d3QhK5yq7EXqQmhPRjo3NV0eCZ3heDpynu3pyPn19wUliZd/FN0u0qNbaMv6
jgsshKbp5JT/TfLQQOZD0t8Fn5BL4JLAULDfsWb9L/u5+o6c3TXwg++GftLk
p8h5jX6NWWB7PHx2I7IuyV4/Wa/HrHJ4kToa9CKREkEvEkG0A9+1UARRF/Qi
MXwEvUj1QC8Sw0fQi0Q0CXqRCMIf6EUiuoa+eZFs7mtVPR5FIhF07twZRo8e
zXmNf/75Jzx58qTw2nsXqGf48OFDOHXqFCxbtgzCw8OhTZs2YGdnV8wX1Oac
28xPrFatWjEn8tWrV9zy/Pnz4ObmpvR4TW0XvUgEeQN6ke/uRN5SmGP7uizS
azShsvm22RzYJYU8xo09loR7Ll0PXSddN9tWng4cL3qRCIIguoeJsaGhkaDQ
i6Tfz5W8SErayLqmx2c1lF5e3njw3TWiOY82inc+2ex8/OlWl18eb3U5f3+j
863ba52fXP1aDJdSRfDvChGcX06yQvTfhRTRlUspomOXU8TbSJaTfEHy9ZVU
0V6SPy6nih5eUfYin+asFP+Vkyr+/mqqeClZTqNO5ZVU8QzyvIWXVoiXXVgu
Svt3udPOiylOP+asFOXcTBPD3fXO8N8WF3i6Tcr1iHy8xeX+g03O52+mSX76
fYnjwW+nNtw8N7ju9H6trXrXtTauX/Q8mAoNjS3NBGZkaUIdSS2cer0GvUjN
J0vp6wTXDH+ul6PrgeBkhx9CZ9Y9EDTNZuvACaJZXQO6DnRvM1ZSy3YDufTP
klOeR/LCgNYeDAwLyOuSa25sctLarNrqFvWdJgW36DJwSY+ItnSdv0R/5nQ2
ZmGjExFzHKgX+b1fnOte/6nc/Nd8Hz96kUhFgV4kgmgHvmuhCKIu6EWWM+sK
YNS61zBq7SuIXfsSYtcoZK0s9L5Ra19zjxu9voD/fdbBoBepHuhFYvgIepGI
JkEvEkH4A71IRNfQFy+SHhPtyVj09ubNm3M9Hbdu3Qo3btwo81zR65D6gtQd
pEtVYffRx5bl+v3zzz+wevVqiIyMBEdHx2L7THs0VtTroTh3dnp6Orc/zIVk
sP//+++/4O7uzj1e1Xl8222jF4kgb0Av8t29SHmPSBKZy8gljPMkpQpxVRGp
ihSuQw/mzEYvEkEQRPPQ9zWV39PnBdaulZ3QoNW1VIeBBTsk4+F76XySlfCN
9Lsn21xO561zvn31awlcSBHDX0tFcO4rEfyPLP9ZJnpxfrnoxr/LxX/+u0x0
8vwy0dELy0WnLqaIztG+kldW0j6TYlDIi5yV4tskf5L8cCVVnH45Rbzn4gpx
xr/LRQf/WSo6+r+vnH4iOXd+mdPtKytFBbfWSODRZhd4vVsKsNcNINM9H/a4
nnuwyXnPzwsdvvo61jYu9sOaoR95VuvuZm8qNTE2LObiGZOfZUyFhkKyNMJ+
kRUPepEV4UUmcG7kvsAkGtrDsQmd45rEYY/f1Lqb+4+v+3n3COkon496dXVs
lmxnVTuLnO5ckqcG7Hd5Q8FrS6HZ+bqWNXaJazVI6ubUcvBon17tU3oNb5pN
1ns6ap74l+j5TsfDZ4v2BSU57/WPk6aTZAYk8H786EUiFQV6kQiiHfiuhSKI
uqAXqV6o5xi75gX39bjNABO2A0zaCTB5F8lu2ZL+f+IO2X3jtgCMIeeSupH0
eZwryXmS/B+LLgS9SPVALxLDR9CLRDQJepEIwh/oRSK6RlX3IlX5kM7OzpCU
lAQ//fQT3L17V+l8MLeROY2adPXY+phbWbQP5c2bN+HgwYMwbNgwqF+/fjE/
UpPnhXmJ5ubmhX0iizqRDLafdE7tJk2aaGSMoBeJIMVBL7KCXMl3DN/HwGPQ
i0QQBHkXqPxRghPY29PS5PPQOjY/z28ofbZZ1A72uPSF71xinm93mZW33nnT
1a8lZy6tlDyiXuQ/y0Tw9zLOieT6Rv67QvSc5NG/y0X3Se5dWCG6fylF9Ohy
KudEviriRb4meZ6zUvyILO9cSRXfupQqvnkxRXyLPDf3/DLRHbLuuyR0fa/p
nNk5q8Rwe60Enmx1AfjOFSDT7V/41vW7yytFc7dMtAuJ/qBG+6aNTZ3qWhvb
VDMTUC9F5THSn2vQidQO6EVq2IkMSHCmPRvpfNbkfDgfDJ4mPRic7J4dkOj6
nd+njhv6jW2w6IOwRuPb9PHo79omoKWt05La5tV/Iqc730A+fzZXhxAYPa9t
Uf0n5zoNl3Zo3CQ8sFnn9kmdhrqu6TNKRNYv/jFspsuJ8NnOP4TOlOwj2033
j3PJCIhzyeLx2NGLRCoa9CIRRDvwXQtFEHVBL7LkcH0h1xVwjtCEbQCTv5Hd
FrroEgxJPgF9JmfCR2N2Qc9RW+HD0Tug94Q90HdKNgxKOg7BC/6FmJQHnEM5
5RuZL0m/pusq7Dm5Tn97SaIXqR7oRWL4CHqRiCZBLxJB+AO9SETXqKpeJJsr
m/3fzMwMevXqBevXr4fnz58rnQPW41ET82WXF7rNFy9eFHMC79y5AwsXLoRO
nToV8wk15SQq9olkc2eXBLuf9rf08vJ653GCXiSCFAe9SIyOBb1IBEGQd4DO
qW1hKptTW2BY2DuShrstult1oy3j6ln++bl93ZurHJ2vrXRsf+5LR//TCx3i
fv3ccf355aJT178W37iVJrl/e43k0a01kqc30iQvbqzmAuRrLtfJ13TObeoz
FnEiC3NZ4eur5HHXyOPpOm6S55N10xSQdVEv8ukfXzg9OLPIMe/3JY43rqwU
/Xp7rWTnpVTR7H3T7YOn+dXxbutqUbPosZL3dyNzE4GpmdBQaCRQ3SMTqTjQ
i9S8F5keEO9C3cgDQcnOR0NnOh8LnyU9HDzd5duhn4hWfDTMcUq7/u6Dm3To
1sbedYxTzfobqpta/k0uczB88zvva/Ka3LerXjvb116aPLRJh95T2vZv8kWP
SPvNA8bb7/WPF+8PTnI7FDLN9VDwNBfqRWZy24xHLxK9yCoNepEIoh34roUi
iLqgF6k6dD5s6jGO3wowYvUzzn9s0jUaGkg7gHVdJzAxsyrxcxehaTWwqt0I
bBxaQqOm70Oz94ZB14iVMHTGGYhNy5f1m9wm8yT5Pk6+gl6keqAXieEj6EUi
mgS9SAThD/QiEV2jqnmRRftD1qxZk9ZO4fjx48WOW515rrUF25+i+0R9xH37
9kFISIhSz8i3ncua+YhWVlawd+9ebhvq+KBs/yh+fn7cOt6lhyV6kQhSHPQi
MToW9CIRBEHeAeZFmpkYGpLv8fR7O3V66Pug0vvd8mgbw03j6luuH1O/0Yrh
9b2WDavfe9cndqN//dzh87vrxNtf7XDOgt0ux17ucPn9yVaXnEebXfJInj/e
6sL1dHywyRly1znDtdUSzn+kPR8vpyo4kalvbqNOJHUh76x3hv+2uMCLHVKA
b1wBdrvS9d36d4Xo9+xpjfavHm27bWlM/bS1Y2wXbZ5oNyltjO3gmYE2rQe3
q25bwrEKLUwFZuRY0YvkAfQiNRvqQ8rmtI6XHgyeJjkZMVd0Jnq+6ET4bMm3
Qz9xXvhBaLOIlt06tW/cJEhUy3ZeHYvq2ebGpjdoLULuRdKekU+ERsaXnGs3
2NrLxXvMpLZ9O33ZI8pxy4DxNt8NndqArFucGRDvTrbnvj8oSUq9SNnc3ZV+
Dm30IpFSQS8SQbQD37VQBFEX9CKLh/ZynLidnI9lt6DdkHlgVacxkG9tKj5j
IT97CoxAIDDmlmV9pkd+LSDragRuHUKhZ+xWCP/iKoxZr589I9GLVA/99CIL
uHnrqZPs2i4IzK3qgIV1Pdmyel1u6do+iLtfo3PTryuAsZsBopffBet6Ttx2
zK1sZNutYcstu4/YCJN3A8SueaED56nigl4koknQi0QQ/kAvEtE1qpIXqdgf
kvqQMTExcPny5cJjZfNXVwbo61K0hyOd9/vjjz8GoVBYeLzlea3Y+bGwsIDv
v/+eW2dZfSLZvlDouYuKiip2rt/ltUIvEkHegF4kRseCXiSCIIjmUOwXqZJB
batZ9PGpVn9weyvnGf512uxPbtj37hqnGNjj8ilkShfC99INL3dJ9z3ZKv35
6TaXiy92Su+83CnNp27k3Q3OXN9I6kVeTJF5kIpe5MUUUaEXSftD3iePz9/u
ArDHFSDb/RlkudP1HfltseOalBH1E6K71wz/2Lta/4FtrXoOaV+97YA2Vm4f
tLJs0MzB1ELVvlMXUmhsaGxsZGgkwLmztQ56kZr2IuNdvveb6pruHyc9FDxN
/HPUfIffhy1sfCpirmj34MlNZnT269BX6uvnUrthfA2zalvMjU3OGgmMHhq8
+X33GckNCxPTkx62TsvCW74Xtrh7uM+uQZMb7g9Krn0weJot2Y44IyDePUPm
RkqzOS+S/2NHLxKpaNCLRBDtwHctFEHUBb1IZS+KLsdtAW5u7Jq2UqXPUzj3
USHUhxQYsQgVIr9NYFzoTBqo+HxG2i5I5rlx29UvPxK9SPXQdy/SseVHKq8d
x1a9KsyLjFqWB0IzS+Vtyj8Dfo+8SU75Br1IBFEXOnZevAJ4TZb71PQit5+S
Pf5l5VBJEESnQS8S0TWqghdZdM7s4OBgOHXqlNIxUqdP094dXZ+qaHobRV3O
PXv2QM+ePQuPl/ZtLOs1Y70dra2t1Z47m8L6V9LHRkdHa2x8oBeJIMVBLxKj
Y0EvEkEQRIvUtjIS1KpmJHSsKzTzb1/Nek1s3Ybnv2zk/mq7uCN86zzk1Q7n
Cfc2ShbeSJOsvblGsufOeucf7m1wPpu3zvnKzTTJg6tfi18xD1KhX+SryyvF
zy6niB5eThU9yEkV/5ezUvTk6irx07x1kv+eb3e5BXtcf4fvXPfeWS/5IjPZ
fuTEfrXe85KYiWtWM6pN9qlGnepGVmRpTmJqbSkQlrT/huhD8gZ6kZr2IhOk
e/3i3NL94+gc106no+Y3/C1mod3x8FlOW/qP85jSrl+fLo7NJtazrLHKSCD4
UWBoeJ2c6nwD2e+6L0nukpytbWG1s5OD+7SJbfoM3NB3dKvDIdMbnY6cV/d4
+By7A8HJYrJ+ug032p+S72NGLxLRFuhFIoh24LsWiiDqgl4ki8xNHLMJwLt3
XOHnL5zTqPBZDHMiDdT6DMaQ8yTfrMOQWxoZm3C3SdsGcP7Rm+3zfQ60F/Qi
1UPfvUiRR1/umhEYC7klu5ZEnv0q1Is0rVZTds3SPrF0+0JTbtktajV6kQii
BnTMvC4ybg79DyC8DC+S3v/NGYX1QPH1IAiiPuhFIrpGZfciFedybteuHRw9
erTw2DTlQjI3kbqBL1684FJa30n2OLqk0dR83YpzWdP1b9myBZycnFS6oYpR
1SdS3bmzGcOGDePWQefvRi+yfJS3donoL+hFYnQs6EUiCIJUAEJjQ0P5XNNG
Bm88H5XvgXs+qW/8x+eN6l5Y5tD8zyUOPY/Naxx6YEbjCQdnNp5+dI7D4mNz
HVafXuC4948vnM7+u0KUl7NS/Ora17K+kHIvMj9nlfjmtZWi33NWin68sMzp
4NnPHQ4dn9P48I9zGh/89XPHvf8ud1p7fpnTzKNzGkd8GV2vU782Vg1K2X0j
8ruA0NjIUCg0onNmGxqhD8k/6EVqNlkBCXQObbcM/zjXg8HJjici5tiejJhT
l56T1F7DfEd4dQ/2biBZUM3EPIuc4n9IHpEUGMh+L39CfpS/IDQyzmxcw2Zx
L2evEdM7D+2+e/Dk5qci5jqejVlo91PkvEZyL9L1exL0ItGL1CfQi0QQ7aCp
miarRbPadmlRfFxZ69RGrwGkcoBepCzUrxq3GaBlj7GFn/UYKnzWU3QebTq/
rk3jlmDv3hUcW3wIYs9+4OTRGxo16Qb1HD3Bqra9yt4idD2c40X+j14kepFl
gV5kH9lnmUbGStehyLNvxXqRljUK3WZu+8Ym3BK9SAQpGTpM6FhRHC6PnwNc
yAX4LQdg2X7ZuHrzfa/4uIsh93+1D+DcdYAb94usvwDHIoKUF/QiEV2jsnqR
ih5g9erVYdq0aZCfn88dy7vMl13eOg7d5rNnz7hQV7Gsx5dn/SWh2Ofx1q1b
EBYWVsw3LPp/eo727t1b7PklwfaPHhObO1vRQX3XoBeJIMVBLxKjY0EvEkEQ
pAIwMaZWSDEvskQWh9UxXBFTt84XkXVdZwfZtE4aavN+sp9N35kBNv6zAm0i
U0fYzkpPsN95drHj/659LX6au1YCN9MkkCNzIx/fWC3+IzdNtPv6Kqclfy52
SM5MsEtIGV4vcU6gTfzCsLqTl8bUH7Y0un7/GQE2bcK7WTu0EpkZl7Y/BlQ9
MTI0IcdhQpbkrb30/UcqHvQiNeBCBiZwkf9fmhWQ4J4ZkOC2PyjJ8VDI9HrU
7ds8YHzjOV0D2/s17TDC3aZRmqmR8Cw5xbdJ8g3lNQqhkXFeNRPz43UsrFe2
qO80NqBpxz4L3g/x/d5vqtvpyHmiszELHagfeSA4WSLzIqe6ZgbE83786EUi
2gK9SATRDu9ay2RzB70t7/JcRL9ALxJg1NpXMHEHQOeQpbLPvYr2iDQ0kn82
IwRp20DoMXIzBMz+DWJS7sPYTQATtwPnSk3eBZxXNXzlfxD82T/Qd0omtPdf
yM0FTH4leLM+gYDzvKTtAtGLRC+yVNCLRC+Sj6AXiZSXoj0dbz4A2PUzwJw9
AOPl82MPX1OyE6k49oanyR4bR763Lj8AcOqCbC5uRlH3EkGQkkEvEtE1KqMX
qej+dejQAU6ePFl4PG/jG7JaT0ku5eXLl2H37t2wePFi+PTTTyEiIgL69esH
Xbt25bZP+1TSdOzYEd5//30YNGgQxMTEQFJSEixduhQyMzPh9u3bKtfNekq+
zT4r9nzcsWMHiMXiQn+xqDfK5s5Wxxdl66VLNne2OnN1v81riF4kgrwBvUiM
jgW9SARBkIrDUCFl8qGHpVlPD8s6nZtZ2LZzs2jc3s1C0sHdwq1jE4vmEd1q
DP4qut78Y3MbH7mxWvzg0SZnuLPeGa6u4tzIB7lrxEcerBcvuLXaMfj0PPsu
q4bXbTusu3W795pbtO3azKL1By0tW5I4k/XZthSZVVNn36nXKRCQGNLps/H9
m2/Qi3x3JzIzQBZy7M77g5Kl+4OS3OixZwUkOO7xm1pvY/9xNos+CBeP9un1
fndRq0+catT/VigwovNn/0fyUkB//yapZmJ20daq1i43m0bx3cWt+o/y/sh3
6YfRrnv945xPhM+RnI6aJz4ePlt0IDjZOcM/Tkpul3Lb1YHzgF4kog3Qi0QQ
7fAudUzFejOt1V64cAF27twJEyZMAHJ9QvPmzcHR0REcHBygadOm0LlzZ64O
vnLlSjh37lyhE1lSD0hWh1eVt+1zgFRe9N2LpE7k+K0FEDj/HJhb1eG8K8Xe
kGzO7IauXWDojNMwhpyfiTsBxm8D7mvqUtF1UE8qds1LztOit4/bAjCJPI76
lrFrX0LYkhzoHPIV2EragLHQglunS+uh6EWiF1kq6EWiF8lH0ItEygNzIl+S
H1//uAaQcoh87yPXUsxq2TiiY4r+bFGWE6k4/mhGrgWIJuuIXQcwjVx3GWcB
7jx6s10clwhSNuhFIrpGZfMimU9HPb3ExESuTyPlbebMZvNjK3Lv3j346aef
YMGCBTB48GBwcXGBmjVrvlOvRBMTE+7c0roR7e2YmpoKf/75Jzx58kRp2+96
DNS9DAgIUDpP5ubmhXNnq/O3umz7ik6kpubOVvU6oheJIG9ALxKjY0EvEkEQ
REewMhcYW1sKzCxMDYWmQkNjGjOhoZDEpLWLuUfcwNpj902z//ZWmjjv2TYX
eLDJBa59zXmRd+6uE+95slk8Pi/NsfWPM+1qzvavbdq1mbmptYXA1MzE0MLc
xNCMhK7LqJq5AF2SSgh6ke/uRWYExLvQ7AtKcj4UMt35SMh01wPB06R7/eJE
G/qPbfjZ+6GNR/t83Kqv1HdIq/qiBfUsax4zMjR8Sk7xa5ICeb/I17XNrX5x
rWO/vKtTi/CwFu+1Te401Hl179jGe/ymish6XX4Mmyn9IWSG836ynUz5NhX6
VFaVoBeJlAh6kQiiHd6mfqnYa4DOH7R+/XquNl6tWjW16720htyrVy/Oo1Rc
L+P+/fswYMAA+Pjjj6F3795KobedOHGi2HOQqo2+e5Gj6fzZWwBadh+r5F8Z
KHxGR/s6jlrzjHMhR60v4DxH6kKOWkddxqI+YwF3O/W12OOo3zFuE8AEuUs5
IG4/SHwGQfP3RnDbl7ki6EUixUEvEr1IPoJeJKIOiuPiyh2AL/fJxg3t9Uhd
Rvo+TzPmHcbhWLlLSR1JOsf2JHKNZv9Bvavi+4AgSHHQi0R0jcrkRdLaCl3a
2NjAli1bCo+hPH9LWpILuW3bNhg3bhy0aNGixO3T80L9SLofLPT/ilG8j7p/
JZ1Lel+nTp04tzMjI0Npn1TtY1koOo8zZ87ktmFpacn1qix6f0kozp0dGRmp
5C9qOuhFIkhx0IvE6FjQi0QQBNECdF5tUyEX8oZoaETnpiY3C+WhXxsppBii
+kKHUR/WCEtPaLj1dpr41oudLvDf5kIvMu/eevH251vEkXfSHMVq7pLASGAg
JPtlSvbHhIRzMYXGhkZGAkND+vOKRg4c0RjoRb67F5keECelob7i0dCZtKej
5EjIDOdvh3wi+erDKOcxvr1afuTs9WGzeo4TbavV2mJhbHrRQPl33ALyQvzX
wKrWgTb2rjOCmnfpk9BhcJNlH8bYbR04ocEevzinrMBEtwNBSe4Hg5I5/zIr
IMGF9opELxK9SH0CvUgE0Q7lrV0q1qHpdefp6VmsjstCa92KKXofe86QIUMK
509i6z916lSp9eLff/+de1xVrREjxdFrL5J6UJuoB3UHzKrVLnSgaFifyHpO
3jDi66fc46jj+HbbeuNK0iXtIUnXF/nVbW4feD8PPAS9SPVALxK9SD6CXiRS
FmxM0F6RWX/IfEXqLY7doH5fyHKNyfWydVPfkm5nSTZAzl1+zwGCVAbQi0R0
jcriRbJ+jW5ubnD69Glun8vbX7Goa/j3339zLqRUKi3mP6qq9bztvquqFSne
LxQKoVWrVjB37ly4efNm4f7Ra748fx+r+He9mzdv5nxLdntZKJ5HOveJgYKH
WhFBLxJBioNeJEbHgl4kgiCIFqBepDwCE5l7SN8rWZgHVOKc241thPYje9YI
SU9ouJl6kS+Vvcjce+vF255vFYfdWePooOYuUffRmHqRJCYmQkPqSBoLjei+
GaAXqYOgF/luyQxIcEn3j5PS7A9KlhwPn+10OnKe449hs8Q7B09ynf1egMdg
93YfNKnbOMbazPIrgaHgODm1TwyUf8d9Tm6/LK5Zf+vHLt7jPm03oEvqR8NF
uwZPtsnwj6+XGZjglBGQ4JYVkNBkX2CidJ/cx6yCTiR6kUipoBeJINqhPHVL
Vi+/fPkyDBo0SKl2W9IcQqXVy1mvAPp1y5YtIScnp3BbKSkpxXoN0Lo4XdK5
uR8+fMg9rqrWiJHi6LMXSZ0q6lZ9NGZ38WtMYMQ5WD1GboHJOwFi0zTnQcVS
v1LuYPF9DvgKepHqgV4kepF8BL1IpDTYeLj5QOYnUk+R9YfUxtik26HbpHN1
7//zzTzeOE4RpDjoRSK6hq57kaxHI/26e/fucP36dW5/1el/yCjqF+7duxcG
DhzIzW+tuB1ah6mo/oiqwmo/irfRObtHjhxZOG8I2//y1IMUj1WdvpNs3fSc
sj6R7zJvuDpBLxJBioNeJEbHgl4kgiCIFqE/B9AYvnEgFd8X6dcqfz6Q2pmI
x/aqGZWZaL/9Vpr4dv4OF3ik2C9ynXjnsy3imDtpjtJy7A7dF4FCyK9L+D6t
q6AXqREv0pXmQFCy+ET4HIczUZ81OhY222n7oIlNEjsN6tBT0mpoQ+vaieSU
biP520A2f7bi77i5psYmx5vXc/gqtGWX8CXdI9p8N+RThx9CZ9gcDZtZb39w
smO6f7wb2YZ7VmCClO9jRi8S4Qv0IhFEO6hbs2R146ysLHByciqskauaA0nR
YTQoUuMtertiPd/Ly4ubP5vWfYcNG6ZUF2brpcuPPvqocH+qao0YKY5ee5Fr
X8GE7QAeH07k/CfmXLFekTXqiSH8i+swdlOBZv0rLgXyebj5Pw98BL1I9UAv
Er1IPoJeJFISzEE8fwvgk60yP3FMBfWILGuMjiJLcknCxuMK82rzdmYQRDdB
LxLRNXTdi2R1En9/f3jy5Am3r+rOMV10Pmpa4+nRo0ex9Zc237U2wmpFivtA
nc2QkBA4e/Zs4f6Xpz+mur0m2WOoExkVFVWsNlXRryt6kQjyBvQiMToW9CIR
BEF0APr+SOfWNhUamgoExd1ID5FZsyn9asVmJ9vvvpUmzn2+3QUebir0Iu/c
XSf+9ulm8ei8NEePozPsLIo8XckzovN5C40M8f24koFepMa9yMY/R31mfyxs
tuOOQRObTus8pEtvF68QUa16M02NjXeQ0/o7yX0DOne27PfbByRna5hV29bW
Xpo0xvejwWv7jPI+EjLD6Zfoz2x/ipzX4FDIdKd0/3jXvX5T3TID4tGLRC9S
b0EvEkG0gzr1StZzgF5jZmZmSo6iQZEarqpacUnupOJtbH2jR4/mtuXj41Os
9szmK/rkk0+4x5Rn7iSk8qPvXiSd09pJ7l4V9SLtpB25+a5lc13rr8NYEUEv
Uj3Qi0Qvko+gF4mogjmR564BTCTfG0eu1U6PyBLH6fo330vSjqAbiSCqQC8S
0TV01YtU/LvSiIiIQr9R3dqI4uN+/fVX6NevH5iampZaz9GVKNagatSoAbGx
sXDt2rXC49KUP8jWQ5eKc2dr4/VHLxJBioNeJEbHgl4kgiAIz9D5tc2EhgJL
M4FJdQuBhbmpoYmpkHMkhfKY+LqYe0wdUHvsvmn2395KE+c9K+5F7nmyWTw+
L83R98eZdjVn+9cy7drU3NTaQmBKnm9O1m9mJluXcTVzgTHdnkCA78mVCfQi
392LzPCPd6WhXuSPYbMcTkbMbfRD6Eynb4ZMbrLog9CO0R7dhnRxbDJZWqfB
MvvqtffUtbQ+WcOs2u+WJmZ/mgtNT5HlrkbWdT/rLm45YmqHAR9uGzCh1cnw
OeI/hi2y/zlqvv3hkOmidP946fd+U10zAuKr3DlELxJRF/QiEUQ7lFWrZHX2
bdu2lehEFvUemzdvDmFhYTB79mxYu3Yt7NixAzZt2gSLFi2C6OhoaNasWbG6
L6vBW1lZwaFDh8DNza1EL3L9+vXcPpVnjiik8qP3XuROAFuXtnIfkl03smui
cbPuMGlXAcSuecn7vla1oBepHuhFohfJR9CLRIpSoNAnUhecSMWw7ydrj8rc
SByvCPIG9CIRXUNXvUhWiwkPDy+sh6jjRNLjYY97/PgxJCYmFvqQrNaiC8dX
Vug+sroQjZ2dHaxevbrwONXtmVkSzK988eJF4dzZ2nRF0YtEkOKgF4nRsaAX
iSAIwjO0d6OJsaHAwlQgrGYuMDc1MRSS24xIjIXGsvg4m7f6dECtMXIvMleF
F/nd083icXlpjj4/zrCznuVXS9ilibnQykwgJM83I+s3MZGty8jSTGBkKkSf
pLKBXuS7JSsg0SUzIEFKsz8wSXI4eLrTkdAZjgeDp4lpf8f1fUd7ze8W9P7Y
1h/5+TVtP7q7uOV034YuS9xsGqU0tq77dQOr2ssaWded2cpWHDukSbtBM7v6
d9w5aFKzkxFzxGdjFjY+HTmv8aGQ6WLqRZL1ke2gF4lepP6CXiSCaIfS6pSs
pvzDDz9wvqKBipqwoiPZs2dPSE9Ph9zc3FLrn7dv34a0tDRo1KiR0jpZHb51
69ZQv359pdvY0tzcHI4ePaq0f4h+oO9e5KSdAPWcvGTXg7xPJFvau3eVuVdr
qXuF/SI1GfQi1QO9SPQi+Qh6kYgi7PW/dhdgylaZE6ntebPLCvuesu2UbF/R
ykIQGehFIrqGLnqRzAcMCAiA58+fK7mOZR0LOx5aS/H19VXy8Pg+rrcJ3WfF
2tTAgQPh4sWL3DG+7bwi7BzR59O/52XnXJvnB71IBCkOepEYHQt6kQiCIDoA
/fmA+o9mJuQt08iAznJtqBhPsVnzT/rVGlXGPNpj8tIcPY/OsLOcMbSWYUd3
M0Nzao4YGhiTFK6TbIP+LILvx5UM9CI14EYGJrjQ7CNf7w9MEu8LSpJkByZx
x5vhH+/2zeDJLdb2HdV64Qeh701u27dPULPO/t3FHmGtG7pGt2ogjvJtKA38
UOLVd5hXj/cWfBDivXPQZPejoTPEpyPnOZ4In8M5lhmy+bqpF8n78aIXifAF
epEIoh1KqlGyWvLly5dBIpFwtVlVfSLpkvqNtB+kYv2Z9i6gf2NPl9RfpKFf
K/Z4vHDhAnh7eyutq6SaM7vf2dkZrl+/rrSPiH6AXiSAnbSD7DoRKM+jXbuh
O0SvuA9jNhbAqHXoRWoy6EWqB3qR6EXyEfQiEUXo60/VqsWZADFputMnUmnM
ysft8DUAZy7J9vs1jlsEQS8S0Tl0zYtk9ZAePXrAs2fPlPaxNNj1Qesx06dP
BxMTE158v4qK4rzi9G9raV1K3XOj6jWnNayoqKjCc8TX64xeJIK8Ab1IjI4F
vUgEQRAdgL4/Ghtxc2ebCgQGxX5G8BCZNZvSr1ZsGV7k6Lw0R4+jM+wsijxd
yTMi2zAUohdZ6UAvUsOOZECCc3pAPO0h6XIwKFlyLGyW06mIuY5Hw2Y57vGb
KlnZa7h7YschraI9urce5N6+Qx+pb+eB7u06RXl80D6uwyDfpR9GtdgxaJLb
gaAkyY+hM8U/hM4QHSDr4ebrJuul6+f7GNGLRPgCvUgE0Q6q6pOs7wCtCXfr
1k1lTZjVnjt06FD4d/kUWm8vy1ek9zM/8sqVK9zcRwYGpbuRbPvvvfce93x0
IvUPffciJ24HkPgMkl8jrDeGIfc1+dEeek9K59zJkWn5vO9vVQp6keqBXiR6
kXwEvUiEwdzCrN8BYlbrphOpOG5HrAVIJN+zHz6V7TeOXUTfQS8S0TV0yYtk
tRepVFr4N6LqzJ3Bai53796FIUOGFFtfVYmiG0mTlJSk9BqqA3sfGTZsGK/n
CL1IBCkOepEYHQt6kQiCIDoAepFIWaAXqdlk+Me77PWPk2YExEtpn8dTEXMb
n41ZaHc2ZlH94+Fz6n079FPblF7DG83qEiia0q6/y7jWvd0nt+vfbHpnvxaL
u0c0X9NnlPuuwVPIeUtwPhQ8TULWIdkfmOScRdadSW7LDuD/GNGLRPgCvUgE
0Q6q6pOsJjxr1iyl2qxBkVpt165d4dGjR9xj32ZOa/acLVu2FJsHqWhYXTom
JoZ7DnU2Ef1Cr73Ida9hwjYA376JQL5BKn0mpziX9sg1zzgHKzbtBedO8b3f
VSHoRaoHepHoRfIR9CIRCnMiL+cBTNhExv06WV9GvsdnaaHfW6JXA6z7Ubbv
OHQRfQe9SETX0BUvkm2zZs2acObMGW6f1PkbUeZEnjt3rnCOjqrSI1JVWC3J
0tIStm3bpvZ5YrDHrlixgltXabUpbRwHepEI8gb0IjE6FvQiEQRBdAD0IpGy
QC9Ss5H3dZTS5QFZv0jH05HzG/0c9ZndifA5ttmBSbY7Bk2yW9NnVKPlHw1z
+KpnlGj5RzGSr3uPlG7oN9Z15+BJ0u/9prpQL3J/UBKXffJ1Z+nA8aEXifAJ
epEIoh2K1iaZq3jq1CmwsrLi6rKKtXPmJzZt2hRyc3OVnlNeWF/K/Px8ru+k
4vqLhu0DvcYpivNxI/qBvnuR47cA9J96SH5NGBa5PmSfn4i9B0Dk0qswaRfA
2E1vnkv7TXJLdCXLHfQi1QO9SPQi+Qh6kQiFvu755MfCL7LkvSIr0fvPyLUA
P1+SHQfOp43oM+hFIrqGLniRrA+iqalpoeunTu2FPebAgQPQsGFDbl18zAmt
rTCX0NraGrKysrhjf5v5RdhrHhcXp7RePo4FvUgEeQN6kRgdC3qRCIIgOgB6
kUhZoBep2WRxSXChy32BSc4Hg5PFh0Omi0icDgVPc9wXlOSY4R/vtGfoVKdv
hnwi2j1kipgsJd8N/dT5e7+ptN8kdSu5de2Th+9j0nLQi0RKBL1IBNEOinVJ
RU+RXF9cPVbRU2R1+Vq1anHeJOVtnUgGez69dotuT3G7dEmuZzh69Cj3eJxH
W//QZy+S+lfU8xi+6gnUbOAi7xlZ5HMa+XVSo54EWg+YBqGLLnNu5LgtABO2
y5bUIaKOJHWlZK4kepJlBb1I9UAvUrUX6eTRG8ZszIeRq59BbFq+ZrL6OYxa
nw8RX95ALxK9SL2HveZnc3R//uyiYT0jF2UCPH8pex/FMYzoK+hFIroG316k
4tzQCQkJ3L7Qvw0ty5Fjfz+6Z88ezhMsqcZSVcI8wurVq0NGRgZ37G9bK6Ln
ltan6NwkvXv35uXcoReJIMVBLxKjY0EvEkEQRAdALxIpC/QiNR9Fl1HeP9Il
w5/2kIyXZgUmSvcHJUkPBCdLDwVPkx4KmeZCli4Hg5OdDwQlK/WH1NOgF4mU
CHqRCKIdFOuSrH68a9culTVgVqOdOXMm9zhN9GxkXuTJkycL6/ZFP29g/6ef
Rzx8+JB7fFWtDSMlo99eJHD+FZ1Lu2PQl7Lr0ah4zw82pzaNiZkVN7d2h4BF
MDDhKIR+fglGfP0UJu4Azpei6xqzEYr0kkRPUpW3gl5k2aAXqdqLdG49FBKy
yDX3LcAn32koZF1xGWT7ZGyaVaspv+bRi+TGIV6fesuy/QDD18jGBN/jslxj
eL1s3u+/b8qOA3tGIvoKepGIrsG3F8lqL23atCn0IcuqgbDaCnUi6XzSiuup
imHHVq1aNUhPT+eO/V1rVOz95NKlS2Bra8u95ny87uhFIsgb0IvE6FjQi0QQ
BNEB0ItEygK9SM07kbRPJF1mBSY4Uydyr3+cdK/fVNd0/zg38hi3g8HJrj+E
znD9MWym9FjYLJcfScj/nQ+HTHc+EJzsvC8oiVsXfT4N38ek5aAXiZQIepEI
oh2K1ibp38Y3a9asWA2dfU3ve/78ucZqs2w99+7dAzc3N24bRX1MVof29vbW
yDaLbp/WvlUF0S303Yscve41jNn4Gkauvg+2kjZyB0tY7LMUQ3KtFuslSWJZ
wxbs3bpAs24joVPwF9D/0wPcPLwTt8scScV+khqd87eSB71I9UAvUtmLZJ5i
TVsX8O0fB969p4J3nzjNpHcc+PSLg1Y9x4OR0Ez5s1T0IhF9Qv56X7sHMJ56
/uv4H5PlDesZufEYr2cSQXgHvUhE1+Dbi6Tbor7fmTNnuP0oqz6hOHd2jRo1
itVzqlpYzYgea3Z2ttI5KOt1VdcvXbNmjdbPI3qRCFIc9CIxOpayvMjGeWHe
TUk+JuMukYzBDBVe5N2TA5runelrPwG9SARBkLcDvUikLNCLrBg3MjtQNqd2
Yb9I2isyIEG6LyjJ5WDwNJfDIdM5F/Jo6ExnspQcCZkuORQ8TUJ7Rip7kfwf
j5aDXiRSIuhFIoh2YDVJVvvdunVrqXXn7du3c4/TpDfI1tWpUyelbRkUqQ0P
Hz6ce9y71IXZ3Ei0j4Am+l0i2kPvvcj1sp6R47YCBH/2N1Sv4yi7PjgPS9Vn
dLLeFrSHpKGKz3KMTSyhuo0j2Lt3gTYDZ0HAnD8hdm0+50nS+bdj177i/Xh1
IehFqgd6kUW9SH6CXiRvlwDCA6y34rZTADFplWsObcWMIplAvu/efSw7HhzG
iD6CXiSia/DpRRoby36enD17NrcPZfl+7Br4448/uB6HqmoqVSmsPkR7Yr7N
3Nll1ZPY385SBg0apNXziV4kghQHvUiMjkUT/SKZF4n9IhEEQd4S9CKRskAv
UvvOJPUe93Ph5s6W7OeSxN1Oe03yvY88B71IpETQi0QQ7cBqkrTWnp+fD926
dePq/Yp1X/Z169at4b///uNqxJqszTI/sUePHiprzuz/K1eu5B6nbs1bsRdk
Sfv76NEjbo4kxZw/fx5u3bqlmYNDNAZ6kXJ/Qu5hBc77HWwatyy8TkrqE1l4
P7mPOpK0x6TifNuKaejaifOpYlLucfNtj15XIJ9fm//j5ivoRaoHepGqvUh6
3RkZm3C+osajol8sepG8XQKIlmGv9aOnADO/lc2hXVm9SBq6/1l/KB8bgugT
6EUiugZfXiSrfXTs2JGrvdA6TWm1Fzb+Hzx4AD4+Plp1+PgI8watra0hMzOT
O3Z1/t6VnUPmmJZVz2I1pH///RcaNGjAvfba6BuJXiSCFAe9SIyOpSwv0j4v
zNud5CMy7uLJGNyrwou8f3JA04yZvvaT0ItEEAR5O9CLRMoCvUjthvaAzAxI
UOwjyYX+n96uh/NmF807e5E/BM7xXY9eZJUEvUgE0Q60HsnqyEePHgVzc3NZ
jzl5zV+x/rtkyRJQfLymYOsbMmSIyjo+2/7Jkye5x71Lr8qcnBz45ptvIDk5
GQYPHgxeXl7g5ORUGIlEAo0aNYLw8PDC51SFOjTzXuk86ZU1+fmy5fZTr/Xa
i6RhLtaw1DuyuXSNTd94WOR6oW5WaY4kF+46F8ij/Bkf9S0/GL6W6xtJ/Ta6
Pb6Pma8wL/LI/14pjUNMketTvlx16DV6kXx+VqynXuQvl17i9alneS5/rf++
8ZobB3yPxXcJ/T4Tsxpg6X7y8xr5mfg5jmOMHubZs+fcMvPwKbW8yD37jxU+
7/lz2XNP/fY/tbzIdTszZc+VPw+DURX2u/PFixe15kWy2ouJiQkcP3688Pf4
kmBzQtPQ2oaqWkpViionUp25s1n9iC5DQkIgKSlJreey+2mdWRuvv+IxNmzY
EG7cuKE0FqtaDBBETcrhRbYoiPYJLsWLPIFeJEYDKc2LbCT3It1IPiTjLk7u
Rd4u4kU+ODmgaabci/RGLxJBEKT8oBeJlEU5vMiDx0PnPC7Fi+yOXmTZyVJ0
Iv0VIncj6f187yPPKZcXmaHgRZ4MmZt5OuyziYf9Z/ms/WgMepFVEPQiEUQ7
KNZ7qStIb2LzNhko1GXr16/POYWKcwppCuZF+vn5Favls9pzvXr14MqVK0p1
7bK4du0aHD58GBYtWsStWyqVQo0aNZSOr6S8//77heupCl5kVSLjHEB4qn57
kTTUx6Le4vgtAIFz/wS3DqFQraad8mdr3BzaRjJHkruWSv8shz5OIHhzfUjb
BcKwlAcwbgvdnn72jaS+CvVwz97ke+RXDjaeJNfnKvQiFb+H0dsqJILi38v0
0YukPlnOI75HPsIXv14HCKvkPxMwv3f2Hr7PJoLwz/Ff/oIR8YtK9SLp/YdO
ni323PM5t8h9n5fqRY5KWgLb04/wcGRIZeXp06dgY2OjFS+O1V6CgoK4bZdV
92B1nOnTpxer41S1sHNjYWEB6enp3HGXt09kVFRU4bp27dqldA5Lez71Eps1
a6a0HxV9nA4ODmUeW2XHAEHURE0vspaCF7m8FC9yOXqRmHdMWV5kw1K8yAKI
bVMg9yIz0ItEEAR5e9CLRMpCTS8yoRQvcndWQNIUuRfplh2U1DgbvchSkxUo
8yOLRQf2TQeijhe5lyRX5kXGQ4bcizwRMifjp9D5Ew/4zfBJ+2gUepFVEPQi
EUQ7sDrx48ePoVWrVsXmBxIIZL3k+vbtyz1O004khdWz6TboNlXN4d25c2fu
MwlKaZ4iu4/2Dfnggw9KrTfTzw1o6Dbo/1lvBrrs1atXsXVWRtjrRf3Q2bNn
w+effw4LFy6spFkE8+fNhbiUnyF2A8CY9frbw5Bl1LrX3DzX4zYDN+912OIc
6BTyJTj7Dgar2o1KHP/Mfyypp6TMpZR97ldf5AORS6/K3Mh1+nfOx6wvgNiN
AMnLssn4m8ONQ/6vBd3Mgs/mwycr/+auz9F6cX1iv0j+Q14DMt5mfLmb+/6A
16f+ZMECms9g2uqzMLIK/EwwimTChhfw2bLN3PeaBTiWMXoWek3PnTMbps37
AibOTlHpNbJMnL0Ckud9yT2ePo8+f+7cOTBz/pJSnzuFZNKcFEic9xV5Lr3O
+D9ujO5mwYIF3DIhIQEsLS3lv0NVnBfJ6jD07zjPnTtX5t+jsvuOHTsGVlZW
XE1DG/0M+QirCdWsWROys7O541bHiWRzYdPehGFhYdw6hEIhd55EIhHk5uaq
fZ63b99eWEeqyGNlryEdB9R3VRyLVSX0eOhcNAYIoiY4jzZGx1LWPNqN8sK8
m5D0IuMugYzBdBXzaN87OaBp+kxf+4k4jzaCIMjbgV4kUhY4jzZGx/LW82if
DJ2XeSZswaQjAbN91/Uai15kFQS9SATRDqzO+9tvvynNn21QpC67bt26CukV
SWE1bdqj0cBA2YukdWu6jImJUapLl4Si59mxY0duXXQdzO9knzco3q54vKzH
Anl/KbbOygj9DIBCz5+BBuv1fMa7/yw98X3K4VOsKyjsHzl5t6xXX9jiy9A/
7jB0CFgEzq2HQk1bFxCaWhZzIUucc5teLwLZtWjv1hVGrn4MYza84rbF9/Fq
M7FrX8LkXQCO3n68j/3KkK5R62DKbnp9vuT9tav4lOxFsmvKTtoBhkw7CgPi
j8DAhKOaSfwPMDj5KHw8YQ8IzarJz73se7W+eZHU1Z64HaCOuBPvYx/DT3qM
2cONAXot8j0e3+W9ROb4vgIbl5L/pgeD0Ye08O0MyV9shImzlqp2IsntyV9s
AO+O3Ys9t5HYHZLIfSU/dxkkLl4HH/QL4v04MZiiYTWQMWPGcPUHdfoYPnv2
DLy8vLjnVbSvx1fYcVH3k82drU5NitVw6GMjIyO5dbBaD1tnaGhometjbiWt
WdH6kuJrhXnnIIhaqONFruzoVOefIc09Xkf7hBaMbJOiwot8kBvqdSw3zGup
ghfpRFI3F71ITPlS1IukX9MxQ71Ih7xwb8e8MO/mJH3JuEsmYzDzRohnXhEv
Mu/kgKbfz/S1H9/O1soTvUgEQZDyg14kUhZqepFJG/uOO3w8dM5TFV7kzqyA
pEn7gpLfJ5FmByXZZ6MXiXn7qPIiaRS9yD0ktzKHxsPewVNh75A4OBQw7dGZ
8AWZ56K+mPxz6MI2O/tNqV5kOKMXWQVALxJBtAOrAS9dupSrTarqMUB7KF6+
fFmpvqwp6PqYb+nr61uszsxq13QubArz/EpbH+XJkyfQpUsXrubNegKU1D9B
8TOEqupFTpo0iXsdzc3NufNRGWNiYsotOwct5ty/qu77vK0jxJ0X2kNyC8CE
7cA5W2O4+UVfQ9iSq9Br7Lfg2Wsy2DftBpY1bAvH/pu5totcH3LPy6t3vMw9
0UMvctJOgBbdhimNQ4xiTLj3F/r1R6O3waRd6EUyL1LiMwg++U52LdKerhoJ
WdfkbwBGrn4OptVqyq9V/fUiJ2wDkHj1wetTnyJ/v6lWsz7ELM+TfY+r5N+b
6LX6ybcArfsncO+ppmaV9+c1DOZtYmZmxl3b7d7rBUlL1pfqRdL7O/fszz2e
Ps/UlDyXXDfNPNtA4uLSnrsMEj5fC338o7nHy57H/7FjdDvamJua1Srq168P
58+fV7uHYVxcXLH6SVUKq9NYW1sXOpHlmTub1kLCw8OV6jzsfLP+mrQPJKU0
D5Xdt3fvXm5MlFZb0uSYoPvM9/ivqFSvXp0eJ4KoRVleZF+HmsYpHRxtzg1q
6pkf6RX+ckTrlJfRPtSLzL8W7FlwQ+ZF3s8N9fpRwYvskBvhJcqVOZH1c9GL
xKgfRS9SonAb/VqUR/6fF+7lQzL0VojnnGshHgduhHjeeRTpAzCiDfnFry08
jfK5fnJA010zfRuNbmdr1Qq9SARBkPKDXiRSFmp4kR3G+X6cvLHvuCPHQ+c8
+y1yUcHpsPkF6EViKihFvcg68kiyAxJ7UC9yn1/id9l+iTfpHNp7Bn9a8P2Q
qXQ8PjgbuSjz4vDlU/4X9VXb9EEJRb1I+l5V+P5kgl5kpQS9SATRDqymPmjQ
oGKOIPva29ub60WgWGPWFGz7eXl54OrqqrRdVmumvs33339fZr1acf+oF9m+
fXuVNWapVAoDBw7k5pVev349NG/evHC7VdWLJO+VxT4PqGxhnlHHgEXoRZaZ
Atkc22tfvZn7egNw/SSpw0X7H9Jl4Nw/oUvocqjr6FnsPL+JIedLmphbQdC8
v2DsZv2aT5t5kU27RJVwfjB0jLD3656xW9CLVBgn9PZxm19x71fc9aiJkHM7
ZuMriPzqFpha1nhznRrorxfp1KoXXp/6FPn7jYV1Pc4PHrOB/7H4ruG8SHLN
th0yR3YtG1Xen9cwmLcJ87radPlQLS+yY/e+hc8TyPubu7f0UcuL/HiorHcc
ex4Gw3dY/WP06NHc7+6lOZGsHnL69GmwsLDgnlsVe0WyY6LzSbO5s8uqBSme
O+pPMidS1flh7znOzs5w8+ZN7nnq9I3s1KlT4RwkfJ+jyhw6dg0QRE3U8SJX
tHe0+XNgU8/nEV5hL4b7Mi/y+fU3XuQDBS8yOjfcq2NuhJc4F71ITPnD+kPS
r+kYkijcJ8mL8GySF+7ZkSTsVqjH4mshHkdvhHjeV/AiXz2J9Dl/on/TjTN8
GsW0tbVqZiwwNFIc03Iv0kQoMDRGLxJBEEQ16EUiZaGmF6nYL7KoF4nzaGM0
GUUvsjGJTfYbL7Knai8y7rXci8y4IPci96IXWSVBLxJBtAPr10iul2I1Y1Yr
pvMOVRSKdf2aNWsq7QNb2tnZwYULF5Tq3CXBHManT59Cr169wMHBAXr06AFT
p06F3bt3w7///gv3799XqqnT2jY7XvQidTfoRWog6wrkPSVfcn4V9bmo8zdi
9SPoEvoVmJhZyc+3cv8LNp92yx5j9ch5kwW9SHWCXmSJXqRnX+5+jbrE5Dqm
fnLUsjz0ItGL1M8wL7KGbZXx9Om1Sq/ZDv6LZGMZfS2MngW9SIy+h/6e/tdf
fxXOp6EKxfsGDBjAPa8q9opkdSBLS0vIyMjgjrc8TqSqubNLOud0Sf9etqxt
sHVv2rSJe05F94us6kEvEikP6syjvaqjU+3zQ5q3LIj2CYGRbVaomEf7YW6o
1/HcMK9lCvNoUxfSJhfn0caUL0W9SEU30iUvwrNFXrjneyQxt0I9ll0L8Th5
I8TzoYIX+fRJpM+ZE/2bpszwaRTS1tbKDb1IBEGQ8oNeJFIWas6jnbix77hD
x0PnPFExjzZ6kRhNRtU82rWylefR/p7kdtbQBEgfEkfHIRwMmPboVOi8zF/C
F076IXCO7/qPx1kVGc44j3YVAL1IBNEOtLZ748YNsLW1VapB09D5behy4cKF
ateiywvz9rZu3Vq4fVZjZjX+Fi1acNsu7TMCBruf9ge4dOlSYZ9LVdB1Pnjw
ANq1a1e4PfQidTfoRVaAU7T2Feev0V5bk3YADEw8DhbW9eVzgyn2jqXXoiHU
dfSAmJSHVWLOUnWDXqQ6QS8SvUh+gl6kfoa931jWbFAlekXS0GuV/mzTMWiJ
7BjR18LoWdCLxOhr2Njv06dPYd2hpPoDc/MOHz5c2Ceyqvl5rB5F/2aW9YlU
Z+5s1s8xPz8fwsLClM5tSWHzYdNa2PXr10s99+z2R48egZOTk9K+Ysof9CKR
8lCKF8l9XjREVMdoY1eJ9a0gD3eIbesPY9ovg+FtfrsX7vX6apAHkBTcDPF6
nBvq9VNumNcKksjccK82uRFeDUlq5srcSAcSN5ImuTI/km/3DqO7UeVFsttd
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
1kckmzo4uxD9ygv8Y8s131UFRC7SNJCLRC5SCpGLBAzxuH/1IyHxVaTPSFa7
bNzvJPrZnvt30f0AoDqCXCQwNyoqFyn+BtTDw4Ncv36dX0dpYzWL89h9NBpN
kXaZqqK4r7Vr1ya7du3i9+dxxs6+e/du4djZlbXvYnsQy2IaZ1PLOj6snatm
zZrlto3IRQJgGsb9obB+I63lnELJyeT29H9NaqjkHZ3tbbs3qlk7yr1e59Xd
W+j3Dm23LivC68CNGO2VG7Fawo+pHeFN/hfu/fclnfpMdqT6GzrvPeoy6oxc
vTqRGkZlGck+1K7UTjnR6pZCLpLlIe2ottQaRvnImrDKyY6ffeFxjNLUy43S
ulBbU1vl6rVNqY3p5ebUjtQAWiMTcvSaVdmRms8v69QHsnTq3y9EeP91Nsz7
wemQzuQ3Kr2dkHFdcsjkHhlkYrfluTrvqDd6tPTp3aRWndJq2kbBKaw5mQK5
SAAAMA3kIsHjwr4/Kji5nFoiF/lMc0/7CdqB7d4aOG7kXl36/F/iV3/6c/zK
Hw9Ept/8OjiJfB44jXwROP3+10FJ1zKDU8/tDJm9PzMk9eOM4JTlGSEpU6mR
mSEpgzNDU3pSvamtM0JTGghZyBpUO6q9UT6yJqzyOggaroenOmaGp9bNDJ/d
lOqWGTbbi9bIs7Qugqgv7gxJXUr9mLp/e3Dy6S9GzcjZPHJaPsvc7o2YT07G
riC/Jbzy4FjU0nOfDp+6MblbYPQgN617p/rNbVo61S98/5HTGlbSf/RPIHnx
OgZVF+QiAagcjH+Hz3KPVlalj28tngMYNGgQycrKKtKeyR7Lfi/PpsXbbG/c
uEFSU1P5/hCsrIr+jr60/g7E21jb8qlTp/hllHae4GlBLrLqgVwkIe2fieXz
kPQTsjALxeeZi2Uk2XU7xwbEqVFbUq+lmjRq04U09uhJGrTyJXWbe5Fa9VsT
a3unYq+9Yn3FCplIW4e6ZETSd2QSP3529cpEMpGLNA3kIpGLlELkIgGjQPBe
HiFLtxlqYoKZZyP52n2HkMN/CPuA2gXVHOQigblR0bnInj178ssvaywOsa7/
+9//Ent7+3Jbf2Up5vtYO1BmZmaRfTLleWf3Ne4nsrK3W61Wk5s3bxbZptK2
k2UXW7ZsWeSx5bF+5CIBMB0FJ5Nbyzklm4rzlEIfkp2c7RpN7tSo9/YA95dy
I7035o/xO0LN+SdGm5elU7NsZMGlSPW9bL06O0ev/iknUr0zN1L9AXUlNTVX
r55IjcmNUo+mPp8TrfbNMYyrzcZSbkJtnGMYe1kcd7mFcBs0b1sYHStxLG3D
cYzSeORGaTW5em0Xqh/Vi9qRqqUOyNFrx+dEal6l7qb+lh2pyabTm3T6QKgp
3mtR2vsk0e8oGdflFZLgG/7b6I7qtV1b1OvfzFFVWh2zelVxOFcJAACmglwk
eFxYLlLJMmXU4rfVs6+l7Neqc/05PYK8twTOCDoStXTeidjlWw5GLjyTGZJa
wPcXOXpWwY6Q5Hx6/T71ckZwynHqduo71EWZwSmTMkNSIqiDMkNTumSEprTP
MIynzMZYbpJhGHNZHGe5hXAZVi1bGB07l4yHY2c3zwhPbZkZnuqeGT7bm9oj
M2z2IFoneloXSdRXqRnU3+i8mztoDW0bnZT/5aiZZHtwMtmvSyug9XbnRMzy
i7uCZ3+3sk/00tEeXYe0cKzf2HgceAbL9aroP+QiLQvkIgGoHFh7pPib/c2b
N/NtzmWNTyS24bM22tWrV5OTJ0/yv+EvDmu/3bt3L1mwYAFp1qxZkTZesZ23
efPmJC4urkT7sbheFxeXxxqv+3FBLrLqUe1zkZ8S4uo7qshrhWWvDBous34k
xVyWKcrYa5LdX+gnUlyeeLtjwzZkVOpeQyby3XzJnwcpRC7SNJCLRC5SCpGL
BCLisT+ba/7fD9j2xb1FyNvfGbabjZ+N0gXVHeQigblR0bnIwMBAfvll9Z8o
1jXLFBo/riootu84OjqSjIyMR+5naft87969wn4iK3vscHEMFZZFPX/+fJFa
KF4f4lgp4rgoyEU+HlYAlBOsn0gbOadUGuUiRRrYKu0TPOp7Zgz0GH03zmcu
mdj9I+pBMsb/7N+x2ptsPO1swSuR3vlXdN5XsnXex7N16oycSPWH1PXUpfR+
s6kTs6PU+uwozQjqAGo/al/q89QA6kBhOqCKG5ATXejAYhrfNiBH+m194n00
OlbPGxmQrdeMyNFrw3MitdFUPTWUGkSNzI7UTrkSqXnlik6dma3TnMnVa25f
i9KSv2N8yN04X3I/3rfgTrzvzTtxvll3Y31O3orxef9ShHrsTyM9fTf3dXNO
6tyYr1EnawWf22X5XbHvUxXHD6KNzA0AAJgIcpHgcTHKRYrHlh1T8VjL3J2b
2IV79my05LlIzafDXwrbHTZ3+b6ItG/26tKu7ImYd+e78Hlkd9gckhGSwmfZ
vg5K+nt7UPLZHcEph6hfZgSnvJkRnLyYOi0jJDl2R0jyqB2hyQOpz1P7CQ4Q
5gUIl2HVMsDo2PUXNNwWljIwIyxlREZYajg1MSM0dXpGSOpSWhcfZgQlf789
KOnC9tFJhI3Lvit0Dvk2bB5hNbVXt+Cf/bq0S99HzD/51aiZ29f1i1s9Tj0g
0aeRm7+SUzga1Sr/HoRcpGWCXCQAlQNrj2TtrCyDyNqfhw4d+sj2Z+O23rp1
6/L9HIwePZpvtw4JCSEBAQGkU6dORR4vti2L81hfkDt27GCv1RJt/OLy+/fv
T8RtqwiQi6x6VOdc5Ph3H5CJHxIyZOp20kozjChtapR6Dof18chyWeI426bI
379YlpKj8z17jyExa7KqbT+RoshFmkZ1z0W6akbwrz+FypafyhXW/NRVO7JC
c5G2NesKr3uVYf3W9vy0T9w7yEWCascD4fhvO26+70PsMyXxHUKSPiXk2j/C
dkv3lAFgNiAXCcyNispFiu0d48eP55f/b/1Frl+/vtwyd5WhuJ1s7OydO3c+
ch9L21/jTKRUWVBxH44dO1Zk24oj7leXLl3KbXuRiwTg8WGDyNkq+HG0S5zn
qWer5Ma0a9h4z5AOXcjYLmFk2jMpZFqvN8mL3XaQRN9fbsZo/r4apSZX9Gpy
McKLnA/3IhfCvf66FOF9NitCfTRLp/42S+e9nbqZ+v6lSO/1lyLVy6jp1PmC
C4TrC4VplTWLSp+LRdlRmsW5UZol1KXUZYJLhXnstkU5UZqF2XpN+mUz2O6n
dIFgGn9dp15Gj/tqevzX8eo0qy/rNKvodP3FCPXG8+HqHefDvU/QGsllY2X/
Fa0lefG+hIzzJ2RC19u0tk6T8V0zSLzvGxdCvV78eoD7Myv8XRpP6NCg8Ny1
g1Ius5Vzcmu5jJPLkLMBAIAnAblI8LjwuSMZRz97OfFYsmPMxtTmP6Nr29bg
fBq72Y1u163hjC4j/N8IGBOfEZTy2tGoJQd+il1+6Vj0ErInYh7ZFpREtgRO
Z+Nqk62jZ+Z9PTop5+ugpF/p9CCd7qB+Qn2D3u/lbcFJC6kLqPOFabowb6Fw
GVZd0wQN10OSFn4dkrT865DktdS3vw5O/mR7UHImrYXj20bPyv4ycAbZMnIa
YX2PfhM+lxyOWkxOxC7PPx6z7Py34fP2bhw68b35PYNTdJ69Qnq5dOjZxKFO
S1qW1ka1yr8nsa+PLBuJjJtlgVwkAJWD2CYptvX+73//49tgrR7R9m6ccXyU
xv1Oivd3cnIiX375Jb8uHx+fEusRL8+aNYu/D3KRQKRa5yIF+XzVhgckauUl
0jfxfeLqM5I41nclKttaZb4OjfuR5POSsrLOqXHEoU4z0r5XDAlJO04m/oc+
xxurdyZSzLAgF/nvVOtc5MeENHHvVerrqonHM0J/q+Wfi4xZk13m675X5Foy
fQtykaD6wWqA+c4ew3v3i2Y0njar1zEbCJlMP1tPZz3cXgAAcpHA/KioXKS4
jLS0NH75ZWUGxfXPnj37kW0z5qS4jTVq1CjsJ/JxMpHsvlKMnV3WfmzdurXI
9hVH3Lfhw4eX2zFCLhKAx4flIW0Mfe+Vep5nomfjmnuHdmxFErv6k6nPjCBT
e04gE7ouf5Dos+WvGPUvuXp1XlYkG//Yi5wLo/LZSO87lyLUudSLFyO8z1F/
p/5CPU79gXqAul+QXT5o5AGzVke3UbTYbZd06oOXI9WHs/WaI7l6zdHcKM2P
vHrBKM0x6hHq4Ry95tCVSPXBLPoYuqyy1yP1/pZuWceKzTt8MUJ9hHpM8Cit
g6N0euJCuPrUuXDv07RO/qA1kk33/+61aA25E+dDyFh/+sdn13Nkcvet5MVu
i+7FaKP3DWnXfZ62qUv/Zo62xevSmtarioUzkIsEAIAnArlI8CTIBISrRXKR
jLp2NbnWTg1tnm3u2Wyyz+DnPhj84qTDkYs2nI5fffDn2Jf/3KdbQLYGzSKb
Rr5ENo+cRr4cPYONr523bXTSX9tGz8qhly9Sz9D7/EynR+n0IPUAdb8wPSDM
O2h0HVYdH3XsDm4LmvUD9Tj11LagpN+pF2ld3GBjsG8ZOZ1sGjGVfDFqBvk2
fB45EbOc/Ja4Ovd4zPL9nwdOf3N2j6AJg920vdvWady6UY3aDW0VKgerh+9D
hXXK6pfvctwK70mWBHKRAFQOxu2SYnsvGwOb9QVpZWVV5pjaVkKbrZglVCqV
vOwym8f3XSfcLt6/c+fOZN++ffw6rl69ShwcHMpsB2ZjehtvU3mDXGTVA7lI
IVv1PuH7jmQZycmfGMbYHj3nMHkmci3fx2PzTgOIc7OOxK5WA77fuFJfu3S+
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
6Bk03CdgbGz/mBVTwpK/nDNmxQ8vT1h7asP4NT9vS3z5yOG4pft+i13y/cW4
ZftzElYc/FPwmiC7fFXwT1jlZccxl12OX37wBj3mf8Ut23c9YcWhq2NfOX5x
/LpTv4595cT+6IXffjli0oY3egYlze/cWze+4zOhUd59o0ar+8X069grROPm
3a+1c+M2jqUVpVyh5ORKa7nQdymwUJCLBACAqgP7rQL9dJZbK5QKRRnjF3eq
17zGUDet6wRNQLfVfWNHfRk4a8KhyMVpp+JWrT0d/8pHv8St2nk8etmhI/rF
x45GLfnpx+ilJ3+MXnaK+t8fY5ZdoOZQr1FvUK8Ll68K/mnuHotddu1oLL/N
f57UL83+Rbc061Tk0sts/q7xS299NH1Jwep5i8i8xSwXmU5msFzkkoVk1fxF
ZOOMxSRz/NLbR+OWXfuZPoY9li2DLYst85iw3ComO265wlQ8rjeEy1eORC89
80P04qPHYpbt/jlu5aZfE155ndZK+mH9kpe2jU6OWf98wrBJPoO6DW/j665u
0MqptJpTcJzcWq5UKjlDx6UV+yoA5oDUbaEAmApykVAKkYs0DeQioRQiFwkA
AJYBcpHA3EAuEkohcpEAPD3Wck5mr5TLbRUyORs326qUHNr67i3svhvs4X40
0HPUkZGeS74b2n5b5qB2Bw+P8Dx2Ltz7l1uxPmcLEv3OFYzxv/wg0e/avXjf
f+7E+dyl5t+N8yX0etU1zkjDvALqA3b5dpwPuRmjJdeitGIOktcoF0lyItV8
PvJqlCaf9Sv5T6xPQanPSdF1VFnpvuXT437nbpzPzbwE36u0Li5Rz9yP9z2V
G6k5+vPojt98O6TdRxkDPZYeGOaZcCTQq8eh4Z0aftrXo3jdKQT588Asv6uU
l91fjjkjVyhknFwhbjvbH3HfCukbsVA2fPw7DUdOeq/HkBdeT+gf9/LSgMTV
H46c8l5G+OytB6IXfns8bsne32KX7L1IL1+PSt91W5+2635U+u6C6IW7SfTC
b2A1kB5vwV389ZjFe/JoTfwTs/j7XP2CzHNBMz89OWT869/3j1+xZWDi6veG
TXxr1YhJG2YNTFit6zZ88rOtOj3byraGk7Vx7bGeqBRKlVypslXIFSp5Jb0s
gAQgFwkAAFUH1k+ktVypsFVaswxaic9nl5p1FSPa+rWc3yO47weDXxybEZS6
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
0quEsqwO+SVyD6Eqe1+kKluDzEIuFCnLZyNTaWfS4v1ZtKlgqzfN6H1OQibQ
W3S8LBONi7WEsnQ7shaNmW+QaLyU3CDI4vsCxY5Hcel4je2dlCxXczN5xdGz
KSuPl8ly1MvGz1gnDh4m5to6+fRiW3Z84mcJusi2CXSRAAAA5suzukgrlgXD
2rKTZWQ/7+AFoRNn4SbyuHTZma+TVl8/GV9E7REuocpi06nS2MWPcOemEShv
Ia8hf1PzyTrkWeQh5HYNn9yAzNEIyEXo/jkaoTKVdqaRs2hTzV01oRfv7+Yr
U/fFkql7kfhYSULWrP/Mzp61eVHurDWq3LTl2XlpRTl5aatVeWmbXsud9d6c
7Fm70NdUi5Spe+NI3WP38J9+3lYmft/S6O0MZDIyhX5f56oFZAYaB0XIt5CV
aCycqhEo69BYuFkVl3kXjaGHpWgs7RZmUZ/Jl1FfJq+ijssL726f/upn6VHT
ioY6+4/s2alLdzQmLVjoD4sd6L/fsJlMKxaDadEB5otsk5j6WigAAAAAAAAA
AADQfoEuEgDMn53qQ9TcJeupjOXbqMXLtjxlRtE2ak7WOurY52efeuyBY1/o
7sNf87zHVh04boJXBpgCU18LBdoOLCaDacnE1cuTXeTL/bp1nB1o7/j+CM8X
/08UkkalRW6h5g0+QKVFaa8lhlLoGPWdYCD1gzD43i+ikAvnxSFnfpVwDl+Q
cirrZZz3tXLOhgYZZwlyLlKulXFitTLupAY5dzxyHO1Y2nGNjrcmjV+D4XVM
QE5swgnPef2t1fFG4tcymnYs/Xqjtfj9l3PmIdF44G68KON9jLZ4vfHjFyTc
7+oknIu/iEMe/EgMpM4KBlDfItGYuUXNijhJLRi6mZo3NOmCODRy0xD3fi/1
7W68pvbjMduRzWRZMRmsDmYIk23BYltYNnlufd25nYZMX9xXpKyInL3hm6S5
m77dnLzy0xOEquRG9KL/UNGvvkfFLf6IEih2UMLMXfVEZslpgiytIJRlWwhl
eT6hKn9FpCxLRoqQ0SKyfKJIWT6Odiwt3h9POw5s9eL3cQK9Pwq95yORo/TH
y2LQuEgmcB9Jlq4TkiUfE+SufcLMnWfRGLqIxtK9mEXvU/yMTyhJTjWVvPLo
1dS1p79KXnH0o7jFHy8eJswa7T9ououDB6djr75ejz/LZmJYFiwGs3WuXQ80
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
3ULefc7X3GAzGT85WVudiLC3Vk9x6/n2zED7HFWok3Tji/0H7xjj5bl3sl+/
03FBfX8UB7ui88TfUz907r5ILy1+Lfp5JFvjutrQRba9LtIlsfCwY8KyWmd8
fJRsWXjg4LhpNn29FqKXvBm99P0d9HOl4p8L3BLfQP4PWdnD1nmFX+S0hFHS
pS823UXu/ItdpNF56btIfF4RgYNjDee1pYN+3lfj88I/29/pz8tlhX/k9AT0
GMN5Ofz184IuEjBPoIsEAAAwLdBFtl0NczpWEZle5bp1s9Px99/zsCzX+fPk
FXZfzVjV52h8gesn0QvD8oYJpsgGDksZ5R78ygi3oAUj3AYkTPeLmDg7bFzU
spdFA9+dPMevUqDwOiDJdq+V5eC1tfF76lkpVHhVCjO9/qF1taGLBJqFqa+F
AgAAAAAAAAAAAO0X6CIBwHyBLhJoCUx9LdQY3EIa9vH8jOj242vcEomEuXjx
4t55eXnBBQUFQpVKVZCenr4deRTtf4+ONxQWFl5ftWrV/XXr1lHr16+n8Hb1
6tXU8uXLqWXLllFLly59hLyP9m+j7Y3c3NzLSqVSi57je4VCsTsnJ2cVeu64
7Oxsnzlz5nQy/NpdunTB5/JEF8lmsxnG59segC4SN5Ecrzok3l5O5HncTAn1
vJEc5n1BzvU+HRfk+dFoLx9VqCOP72kzKaxPl0XO1lYfdLNkf2XFYl6yYDKu
shiMmwx974i9Q3uzg35tbC2yDvlTB31TdaaDfg667+n7muwj0ftyrxObeb27
Fes3204W33j36Fw5rF/3pfF+toL8cKfQ/470cD8w1d/pW2KgK17z+1Iiz/dK
Is/nUgJP10SiY55Ga2y3JqGLbGtdZM5ul8Rlh/T9ITo+Wl4YHjRUML2Pk/8i
C6vO29BLP9RBPxejYX7V28gfGExmda++nisDBscljJYV6vvDZYf6JhYetkfP
+c90kYbzytiFzysiaCgfnZcfPq830TkcbuK8vkdvIDovr5WB+LzkRUPp83L4
6+cFXSRgnkAXCQAAYFqgi2z7Vuu6yHS8JrYvvn1Enuf4RcpKG+xeyRLPTeNS
RiSFjJgV1tdzhc0L3d7s2anLtp6drAs9ezvMGeMZEj0vfPyLG8clBZfz070P
yfL6fxpf4HJQmtMfP1eFIMOrQqDwhi4S+Dcx9bVQAAAAAAAAAAAAoP0CXSQA
mC/QRQItgamvhRqwsrJiPqszfPHFFy1mz55ts3LlygFvvvlmzFtvvZW7cePG
slWrVn1XVFR0E3ePaEvl5+dTKpXqbkZGxrXXXnvtt8WLF9dnZmZqs7OzLxYU
FFwrLCy8tWzZsju4jUTiTlLXS6Lj1Nq1axu2bNmifvvtt7M2b948Bj3GVSgU
dgwICDB8toTPzbiLZBp3m+0B6CK5nnVyjvc5KccHt5HXknluj2aFu1Jpka7X
k0PdTvODvLcMc+fE+9qO49h2SbPtZPEGGtHHOui7xydaRjRybnaxYNXbdLL4
sZ+11Zf9u3U84tG9027P7p0qvXp0LPbq2fFjn54dP0R+7NmjY6lLV6t99i9Y
nu7Zkf0TetzFjizmZfQ+3EDP33i+yYfIH+w6W+6MtLdWSX1sowsjnSPKx/v6
fEsMdL+SyHO/OzPM4/aMMPerSTx3PPfleSnH+1foIqGLNMsusih84Eui6fau
AxZ1fKHbNvQNOYRe+6/I+0gKfRtuI39gW3WqsnX2WxH0IpEwOn75v9BFFkUM
fIkwnNeb6LwON3Fe37OtOqPz8l8x4EUhOq8V0EVCF9lmaekukgFdJAAAwHOB
LrI9qFtH26dCkKHrIg9Isp2OyPP77JUs6fv+tHkDModER4/2CM5x6NJzO3rb
DyJrkaWWbItNAXbO6aKgoYIVI6VDSvnpvnj97ROJy/oekuXh99UTz0NZIVD4
QBcJ/D975wHW1PX//+RmsveGQJKbyV4JSwTcExRB9t7IcIuIgsqQKaggMtyr
rlqtq9ZtXW0drdU6wW1x173u/5wQlCK2fv+/WhDO63nez82495xzb0LGzYvP
+S/p6HOhCAQCgUAgEAgEAoHoviAvEoHovCAvEvE56OhzoS0wGAwanKu67e2q
qqoUd3d3nTFjxtjPnz8/YPXq1XkrV678pr6+/gy4/qyqqoqoqakhwGVi1qxZ
TWPHjj0VFhb2va+v7wY/P79VsbGxqzMzMzeUlpbuBOscAjk5Z86ci+Xl5Q9m
z55NwIDrsjaWLVt2Yc2aNevBcmJhYWG/0NBQrkgkUmlvvDQaDf7yRCGTu89v
88iLdORfi7IXNUbYm1+PchA+SZSaEaNdDYhx7npEiovxmRAb83kenL4+HM1k
Q0X6PAqZtAccluukD2s8/knFyJfNVJiHexqpbgoUaC9OtNSvSLE2KEiy0p8R
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
b3f49FaBt03n7QzNht6fSD6PNvtQdL7RnvAZrKXD063HOA8d6moqGqOvol6k
q6xWIjXmT0p3GuK3xm+czW9J5Xo3xtSpXkqt0jkQmctZ7JNiO8ltuKe30NGf
p2U4gYphcA5r+Bn0tDJN4SeJIX9tssOAjPqhyb0ORxcYNKbNxxrT51OOxRbq
LRue7jLW2Tvaw8yiWEtRZT2pudb5fpDNmgpK1W4sQcYoxwEBC4YkuOwJn46f
Ta7Qu5BSqXcivoQFxs6rGZJkkeE2QjrSoscQFxNxGq5lWKWpoLKPTqXewsBn
Xwr8/Esmy+YcALc1qDOVv8W1DHI92ZahcfZ9PEv6Rtiu858gAvstOBydz4O1
MuGx2S6vrfkleJEn48oenogrk3mR5X2jU/2FLu7GSpofeJHy5zqN9JFzE4jO
T0efC0UgEAgEAoFAIBAIRPcFeZEIROcFeZGIz0FHnwv9VGBtSEpzzTR4/psu
zwe/ZSsrK9O5XC5HKpX2HDx4cHhcXNyMrKysleXl5Ufr6+vvwHmzwRLOm03k
5uY2jB8/fkdERMSsAQMGBNva2kq1tLS02+sfzqILQvmP5s4mkzrn7/StvUhy
m5AG6jGp1c4mWuf8LW2JBKcIIsW1+m2is8yLvNpVvEi5GwmXTbHQjXTk34l1
lHmGDRH2/FNBNqL9vhYWmweLrFf249tXebBd851NB0y0MwyKFOmOHmiqXuio
q7yEq8b8RotJ3UPHyCfAoWsA+QPkCenv/SvoW8G6IKeUaJQdLGX6MlsdpbLe
JmpTg/jaaWnWBuGzXFjeq/rzex4baWXZFOPIIlJc9Ig0V903Kc6G0JOEtS6v
RNiLr8nm1HYUNDXvB+8LrSH5f/Mi09yIZ/HSe4eGm2+dZqc33lYVk5Caf09u
+9yGXmK7rzefGbK83xYvsnWoKrpciXWviPFDU+ZvjSr4/l5SxTGZFxkl9yKD
pnQPL1L+23BHBP49PieRyS8xCvU1RqW9JWMUeDt0nO+BnEFeZLMXGVu0/2RC
+bHq6KL9Eb7jV9g6+YzV0uU6tniRbZ/bHelFfsp7b9vxtpcviRaPpvX7ugxL
Y5LKVD8V3k/FrP7EN8JxxE6LpcQm8cnbS3iPT89hE6dms9+ereS8uFzDfXyl
Fr/dWIdfBjkD60SCHG1o9hkPf8SHPNpOWruRLcuj8jZ+kLuRR0FfJ6/W4b9f
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
V7y/L7zim93RlSJf5HAc49fh18QXuT2unLwNQL5I5OX7KLne8AC91mhLbCml
LzDHiuEZ7ZRqO8sziOI8e5ah7RwfIzu/CFO3WTlUP8/a6TSXgaA8G3SczzM5
6j/O7ZT/KpunvI1WbtrknRARYeLSaKCkvgWe0Y4CHwMfyEvLNrvoUDJzHH0D
+P6ZLkO0MpO9STXam6JLpvJ8UnVSbWZNs9ckFU2Wlv0Atv9RkkC4YDJV+6Mk
K09OT0CW/5HURtWR3/jH05uVBoLzZqbbz6y3UtM7IC0heQ6Kz06UkB6yUNMv
oVl6Tm/yTiKui1youiehShvaShEEZDnkOfr5uOqapKrKKTTg8fj1sM+XwF3x
b7rR3sjLBBz+4GTpiQKyitaCEFPHsNrpMc5rIwrNt9LKTFeGzreq9Yp1gjp7
xZi7z8x28PPkzKLbfxC9yOQgvc7wSCrTAKZGyBeJrjG61q+DLxLYCTEo8kXu
jqkU7omqvL87qvLk9njGexuyakuWLWT6dTWw9bm8FukmiGsU2xDXkjxOizzE
uyLEvvx4339j4XA4v7/T6ejokOvv7580MDAwqb29XW7hwoUy/v7+Uvr6+q/1
/8S+Co33u1BMmDBhwoQJEyZMmDBhwvTuCvNFYsL0+grzRWJ6GRrvd6EjQqkZ
Ry2+0BNpaGhImD59unJaWppRXV2dF5/PT126dGndkiVLNvT09Hzf2dn5oK2t
Tcjj8e5xudwfm5ub9zY0NCwpKysrycrKCg8ODrYyNzdXeMG5CWjMbJC0BOjP
zv9PSUVFBe/p6Skzf/58+a6uLpW1a9eqr1u3TnP58uXa0A6tjo4ObWiLNrRP
tPy60NvD1+7ld+sg+D29mu19A+q8/mUaMNVa0tWuta6pgri7LNXy0/xA3x8z
phVeSKauuEy3/+ZqssOja8kOwmt0B+FVusNN5Iu8nOzQ/Sb6Ii+nOJAvAchD
eC3NgYQ8jL9mOer/lu2k9zDHWReNlw3zOveznHTvZjoSb2c4GtxKpxrdTKeS
b6RTTWBqCmUm9zIdKbAN6UG2k+GTXBdd4TxXLWGBmwagLsx3Vf0103HqD/E2
artDTHUGZ5JITa561gtsNb1STFUjQwyV8zw15ZlWU2SXEydL71WbKPmVkrTE
OXkpwr+kCPixY2tfV5GR2BdqoNzU5qEffjjcwvJnup3W9XSq+o00KvFyqj3l
Uor979f6spjxvs4vwxd5WeyLvE63Fd6JNxPeizMRXk+yvnUm23v3R6X0mvXN
DD8Bv1uvpX+5InfJCsUOwYASxL12H7/LAJWj+Vd8z2nDfaYHGIjq0dutNNDb
obikt1MRlbPaB/wWNa+uSa/7YDeNseVWVMWQMLpyaJQvcvO74ItEeRl/IEhK
bVYjWjBtZ6XGBef1UtNYhzTn8b+Xn9fzw6Tc1s+V01iHtVIa9uumNh7USW8+
rIF8iX/NYQ3YVjuFuV+0fW7b51PgeIr53d8qpzIPaMM5rBxmpwVoGtoWQL0E
E56N7z06j+W76ovsFvsibyZUbRGKeRRfuembxMqNK1IZ6wrzalf7ljQts2xs
7Sd2dvdqQVxrQUxr9PV2qff29GhCbKP+RecV3m+jz6MpBs3r9Pb26gEGAoHA
GDAFLAArMZawzgy2IwOGABHt8yf11h6H74+/g46gp1uvr6fLAPp3nU7+gFIL
f6UCAq1f21Pps7eH1vC1wPHwuV7inSsCVeElgbrwF4Ee8kU+OC0gXz4rMD71
k8DoC7Ef8iOxNxJ5F0+8RG+kyBcJdTgBnDwjIJ89LTC5CtN/IV/kJYHGE6jr
k/O92re/67U9erAnjLuuZ3EIaiePv0KR271KoZ0/iL7ftVAZXAP47F6v560X
MBKXqJ5EiD0SYILiELABbMVxaQ5QYB2KSV3xPhpiXvd4xMDA+B/o5UO/1d2j
h6Z8QY9655Je5Y4BgXK3oFe9n9dpvKqSO21jbn3CUDyjbmdE+Ye7I8p/2BVd
cR/5InfGMdB42t+Mty8S5TAcopVRttBK4fgVxgfptYZHUxuJh1PqDT6MWWzC
801xzHbwme1tYB1DUdHJMlDSKCSr6CygapLzIs1cE0qmhc9ZGjTX4WByPfFM
frfilQVLJp6d1624L6mG3Oab6ptg4TnfVEW7Ez8B9yE8p+0DdgPvkaZosuOs
PHJbfVP9oB5mJzLYynBeufcjFyqVu0c5zDSwKZoiKz8M294EnmjJK/8Yaebc
2zknPfiTtKbfx3f+NIMt3x+U45to7dVmqKz27YRnvkb0TPgR1LMq1tLTs3km
XeOD6MXyexNr1IdopaZtvike8VaesWQV7VI8Ho+edfcDp3ETcPfwONzj0b/r
5KSkfyIqqq530aUsjraYFlLkEjStcWa8C88nxbthRlxYkUtwYripS6qTFjnV
RZuSEGXmFlTjFeu2LqrY7KPkBv3j6Sy9w8n1BsMJDOOttFIKnJ8y4o3cMc6+
yJ1iX+SumErhrsjy34ajyr8fSmBs/CC3vmZ1BSdySUunDb+3R61jSa8SxLYS
xPVUiHVdgIim433/jaW7u1urs7NTq6urS2tgYEB7zZo1uu+//75ef3+/NoPB
UA0NDVUwNDSUepnvnN4Ejfe7UEyYMGHChAkTJkyYMGHC9O4K80ViwvT6CvNF
YnoZGu93oSOSkJDAi72RCPyEF3gTAwIC5DMzMy0rKyvDOBxOeVdX10o+n7+7
s7Pzx7a2tkdo3GxY/pdAIPgKpmtZLFZtcXFxMo1Gm+nh4WFuYWExVVVV9bnj
orGyCQQCskT+Y/kiUVvQeOAvyns5ZcoUAtRHLj8/X7W9vV1v5cqVxqtXrzYb
GBiwgjZYt7S02PB4PBtYZ42WASsx1uNJJ6K9zQbR3tFp2dLdY8HpFli2dPGt
+G0t1isaK+03l2d5HiqIjP4ie1blmbRp6y6kOP5wJZn66Hqyg/A63V54jW5/
45kvktp9OYWa8Sb4IkdyQiK/IPJEorGzYZ58PY1KupfpaPAox1lXONdFS5jv
qoHGpxaR56LxNNdZ6zGse5DjpP+vbCeje1mOxnczHSkI2M/4fpaT0YNsJ/0n
uWh/Vy3hPNh/Huw710Xtt2ynqXAeta9p1pqHwi10dwSZktb7ka2XziS5t7gT
/UrttWLoJlNzZuko1lmryA3qTZberywtcUkCjxvri3wkQ8B/bq8q15NhrpbW
4WHgtg2O9SXNWvc83c7gGrTj5jO/JsphaXwp1V40NvhlYLyv+//qi7zyb1+k
/yhf5FWRLzLBXHg3zlR4Lcnmzo/Z3gcPLk5ir2WWx3a1t9ux+P2GTT1LDFq6
eo0h7m2621sdutrb7ND8K77n0H1mBziI6tHZZtzb2WLQ08kzROUNLYLY4saV
7PTa9QfjGJvvIE9kzL99kVdH+SL93wFf5BY1PeSLTIkLzu2hwv5a87q/k5/H
/35SDu8z5bSmQ1rJ9Xt1UxsP6KSzDmmKvIl/ySFN2FY7mblXtH1O22dT4HiK
+V0nlVOZ+7XhHFb2s1MDNA0wX+QoX2RGPGOTyBcZx9hyI36ULzKR8eEPyYz1
6zKr1lTOq10WXdrY78nk8u1b2zutuzrbrfidrZbdna0W0MdYQmyjuH/V99oI
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
gxeWu0fkoTG010UWU/cl1aB6qh9La1Lfn1SrszF6kZ0gMDsQ6pix2C20eIFr
0IIil6CMSs+o4M45GXabY8vUPk1vlv42p03uoxSmsSAgOyLB0qNdX1H1c6jH
fTz8fgOeAkIpgsSvk6RlTilOnHRIRU5+jbmaXnUgxSExw35mQLrtzEhoQ4me
wtT1sN8PwDX8BPx3Nur6a+ItPeYzvWk+gyF51huiik02x5aYbI+rMNmbWE0+
nNJgdCS1EeXiNPoYkdJgeCi5zmh/Uo3RnsRRvsj/bVztv+OL9PlTX2RU+W87
YspPbaEzdqzPq+OvqGCX9HHa6BDLoa19fB+Ia5/Onu4gFOsjMT/e999YoE8O
bW9vD4E+OrSvry9y1apVcWvXrk0QCASRlZWVM0NCQiwMDQ0xXyQmTOOop0+f
iv6W+fjxY+GjR49EPHz48Pd5VP4E+5slJkyYMGHChAkTJkxvrTBfJCZMr68w
X+TL0ej3IOgdyOj3IGgdelfyNmu834WOiEAgoPe/eBUVFTyVSpWIiYlRKC4u
Nm1sbET5bdgtLS0H2Wz2TSaT+RsaPxvR1NR0o6Oj46O+vj5Bb2/vfNjWPz09
3czd3V1FU1NTevLkyX/IPykhIYG8l8j/KPJAIi/kiB8SgcbWFvsi/xH9xTja
Ei4uLvIZGRlaLBaL0t/fbz84OOguHkvbl8vlzoE2z4F5P7QM+IjxHW/aW1v9
EK1t7T7czq7ZnI5un5b2Tt8OXotvf1PtnDWMooitC5OzD+WHNX+dNWvLT2lu
p64kUx+NjKN9LcnuBvJFXk6mdr8JvkjRuNJ0exM0tvTNdKrhoxxn3Sd5ztp3
Mx0NvoixtlnibeSbbqaW5qQ2qVJrklS76kTJpTqTpAZNlCb2WqnIcahqk0pn
6SimJZuoBje66Hls9jex/S7OxhR5Iu9nOxndy3I0upZGJaHxtZ+NX/0Hnx/K
UWl8PY0q4moalYK4k+Go/zjHWf1RnovKrXSq1rEoK+sOT4OQCKMpZXqTpdZA
iH0KXAWeTHjm0boLfCOBm/Ch/mTppnBD5bQ2d/1Zx6IsreFYhsK5LrpPcp31
bsP82+yL/EO+yAQL4e14c1G+yO+zvY/tW5TUt7qhLL+jleff1C1wauzuo3I6
+Z7oHuxsbQmE8oBR9+OrAt1nAUCgqB7tPE9+O5fa3c51gjL/ek5vfnHjir70
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
p6KYvQ1ykQk1XOSaWi5yoPjvuMiNSi5SWXOatyJqgGhxRF+n5VH9HWAezKNp
w61OZ442A/HSZ3bKlqS4towVmtmW4nAaK0F8J4BvAb8C125vSHjCXQqBcEyb
SPndStuowMmUoWhGs+/QnOHY0c2SnWKta1ShSSQv0KdornCzYk3pLmmXtSSi
r/ulbuNrxy9OZY7WBW20XhLZlz2lY6ZDcVBMQKJzYEIATVRgp2c8E1wnLgOr
wf+lm2BM1e0LthseY+/vX9gs2mleaA/Bpvg87p6kUvaexBLWFlm+kq9crap9
/rW4yJV1ucjUkY+OpIyEXOTUEUHyzBCmu9SEoKXfGH0H6euqscdCkX5s1eUi
NerkPejUqZNyTP/8+fP/uo2tW7dinp6e9dhIda7J1NRU5b0GuB90Tw8JCQkJ
CQkJCQmp6QlxkZ8uNRc5YMCAv+Ug4fP29vaYUChEXCTSZwtxkZ8n9WdTeHh4
7TiIuh/q6upi06ZN+9vXHj58GPPx8XmvdoapqSl24cKF2jGQpqxvPvj5N1Io
FDxgSWpqalyPHj3Ggs/U/+Xn578oKSmBTCRWVFT0GPgimN9ZVla2sLS0dDxY
Xtq3b9+hGRkZQ+Lj4/NiYmKKwLRELpeXJCUllSQnJysN5xMTE4vB9ovAsnyZ
TJYLH4PXjQKfwVXZ2dlV4LnyVq1apfH5fG8dHR2jhvHBHJLg/SciLvKfNdnb
Vv9CuNgBS/0x8kXeSnTnXVO4CSAr+CDVg12dJaW/y/aCuRvZR6KdRJODWD4y
gVm4g7HWAGMqcQ6FgDsKThKYn1HJRZLwuBdgek2fQthmo0Oe4WSindeBYSjv
42zVYk5LrsPJGGeb6kxPE6yXryGW428IpiZYNy/L6kyp7asMT1vIRmJdvayw
Hj7mWG8/c6ynr8XbLKnpFZmrydoOQqtKb7p9otCsg7+13kCmHvV3HRLhDAGH
ewD2Xw1jAGcrBp67Y6dDWeNhrpMfzTHpUuhpK1kazOefinXiPEjx4L7M8OS+
yPDk3E/x4EAeEuaMBO1ubObxi3ORf5Mv8v6eMNGqPDfLXu5GZJe/Oa0JwI3V
73Gq/b8nQyuei3MLRa+OXSeukpdsvJ8+at+PnC+y7we4yHcajc9F9v0AF6mO
6yfnIuvU0VbniyzfERfWZ56DNDQH3dtuAnKi4ShDIwzs/ldJC8CW8rOxjaLp
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
ihV3aRIraHc5TfxLmrl5iFT3PRaSgNcgaJLxRC0KTglJfLUjgISEhPQd6kfh
Iv/KITmYtzoGehAfek2sknfkb0rI422TFXJ3KIrYuxJLWMDMnYpixnZ5EXOL
rIC1MT6PU5/7+/IxrgHbXRU9ULAqZqBgc3w+a39ymd3RtOG2+5LK6Isj+grz
AiJ923Fdo+0MzIaQiMS54C3YD/ynRg0PWQ38AviSPkVrpZ+d6P/snQdYU9cb
xiUB3HWLOEFkg6gkIK66R63/atWqGYyEoda9WhVI2IqKA8HV1lpbO6wbUIZ7
VFpXa2trrdbWUQ3uLYrnf85NLoahoiJJ4P09fZ+bnZubc2xy8uP74j7uOEjy
/dCp4kNB8S1OjF7Y8EjIXOvdflEt06ShLqkjZrhuK+RF8q8pS875o6xWpf2e
gOhW9Di0/EEZZ0PTgp62oceJHg8161HunKZ1LFmfbyfdfe1Z3sR7CC8SlBRD
r4UCUBz8bwUbN27k6kIWdiI7duzI/d6A/tkAAAAAAAAYFvZ5fGP6PrLo83Vk
6VebyZLVG18qyas3kGVrNpO45C/JlNgl5OPZy4t1pz6evYy7Pnbxau727H7J
9P7s9Jxl3+juW/R+3H1pptLrIxeuyr/vy+7nki83kcWr1pOvNmSSBw9zDX3Y
Xwi8SMC4d/8BWb0+nSz+Yj03hl91fkYv+oKbQ8+cY3TesjkYv3SN3vzk5/ZX
JZrbMXpz+2X3c+lXm8iilevIlqz9hBhgWOv3vHZ1dS3iRe7atYu7/mW9SH4e
29vbF/Eit2/fXuA2poThVkELYm5uzn7J4bGgsdSlcqEUd9mrxtLCwsJS93z5
bqShj4WxAi/yGV6krg7jJaWY8w9ZX20aZ3rahV7veiPEy+XuqPZOD0f7sB7b
NmRsB+ZENiCTO9cmU7vUIJM6V78/qn2tU/K2DXYNcm2y5V2n5pnvuTT7ZUQb
K3rfWmRix2r0dpXJlC5VyMRO1cj4jtXJuI416LYGmdCxFt3WpbEi4zo0Yz2z
749u70jv53yZHscLCpEz258LnBcp4hxCtr/8Ppt44EWWNy8yPKVAX2m/yHR7
RcwOu8DZe22C5/zQNGRedqORCT/Wp6lDU1uXuiPn/dggaM5+a2XsruZ+kRlP
+1OHbXF62qM6raz3q87IedkNguL3Wyve1H7BiwRlT4nel6UhDap8OrqhTVJw
w45z/Bp8ECtrMD7Ot0F0vF/DxfH+DT/RZYUuy2gWx/s1SKCJi/dtoIqTN5hC
7zOSnh6RGGTV79Mxjbw+GdOo5Wy/BnUCetYq9jOIUGDGvEiLqpXN6Ac6eJEA
gIpFefMit8nCHNOkoU6pkpnOLKzfM+uxvds/yvGAMs7+p6D4loeD59qwPtuH
gue0yA6cZbNPEdNyp1+krnd2ONdrmj2W1gMsRS9SGuaUMmKGC90vl11+kXbH
QuY1PjV2cYNfRy1oQi9zVXcd1q97S/eJtapW/5Qe/gM0Z2humXG1Is3u0NPn
hZXM9jWo+tbSnratx6m6fPDO5uHTW/88MqHFn2MWW9NtE1Yjk7mX7Hl0TujT
46M7zZxH1sN7b0C0/Q/KuJb0mLQ4GjK36VG6P/SYNKXHyYbV3KT765IimenG
9o0dR3p/R76eZmkeF3iR4GUx9FooAIXh60QeOHCANGzYsMjaf8uWLcmZM2e4
25ji+j8AAAAAAADlBd4FOv3PBTItbimZHJ1MpsQkc9sSR3f7qbFLi3WmCofd
Lv9+uvsyp6ok9+X3cfKr7CPNhMjFXM9u/ddurMCLBPz7++PRE1y9VDZPXmrc
68/PuJLOzyVF5ufUEs7PAnP7JfZxSswSMikqmfMr/zl/qcBrL+tjffv2beLm
5lbEi9y5cyd3/avWiyzOi+RrUJriuojhVkELwko1CooiLKMI+FqRqBf5bOBF
PtuNZNvLOjeS1YxkoeedrgSJna4HezneGuntcHdU+1b3R7e3ffhh++Z5Y3wa
k3EdrMj4jvVZDci7o7wbXlSIrE/K2jb9ReLR/IS0TbN//T0b3wrxbvhkrE89
zn0c16EevW09et/6jz70qf+YbunphnTbiKZJ7oc+Lejj290Z6c16eTvS/XIs
sD+oFwkv0ti9SF1dRll+XcZt9v5Rma0UsTtbKmftbhE4e29TmsY0jQJn77PS
pRG7TBm3q1lAdJatX9G6jKXwup65X7aG3S94kcB4GSCqXqNfu+qNe7au5tTN
vZq4e+tqXXu0rt63h0f1dwulP03fHq2r9aLpRtO5u3u19t3cqrWlp537tq1u
O0Bcw+pdcY2a9Hyx44bB/o1mPiQnSOCzHACgglFevMh8/09XM5LrV023rPYj
66+9yz/Sfm+AtlbkQeWslgcDZ9nS07bMiWQu4Y4yqBe5lfMip7umSGa67vKL
avnLyASrM+OS65z4cJE1vc5D3XXYsK42brOrV66SSQ//BZrrNA+ZF2luJtBY
mAkO1zCv/GXLWg2n/89eNDSy64iOm4Z97Hw4eI7tr6MXND8cMrcFfZ2t0iTM
C53hrO9F8m4k53r66upFcsckutUBRawtPR7MEW3+gzKuOT1Otjv9IlqxXtn0
OLIe487putqTWdqgXiQwKIZeCwVAH/43giNHjhBra+v83+9Y2OkGDRqQgwcP
crcxxbV/AAAAAAAAyhu8t7Pz4FEyIWox1xOX1YV72ZTEm9KvTVcgr3PfEmTG
nBVkQmQiWbdtT4HXbMzAiwQM/j3+LmUn5/UaYn6+1twuQabHLycT6b89+376
hXuteXllP6754/zgwQPi4eGR70UWru34ql4k+/vQSoW8yH379nHXmeLaiOFW
QYGpAS/y1ZxJVpvxChcv+6vatLrGEuxld52Gben1dvT2rS4pRa3+U9DQ7WV6
nl2uu13La7rb0vsXl1a6x7a/Un7qQcKLrHBeZOGkOfiqWbbas97VrBe1LnaF
0orehibNvmzqLxrrfsGLBMZDjSoCs+pVBObVKwssq1UWVKGpRlOdnq9RTKrr
Uo2majVtKtNY0sewoI8lpIH3AAAAz6C8eZHFJUvnAm73VdtrE6GL9jy7riz2
g7mFqZIZrqnSUNedfpGsbmXD30YvrP1T8JzG338wzXt6p/eDO7dw+axG5SrH
K2n7Zj+meUJDqgotztayrJrWvGa9uPbWreS+7l3ent1D5rFu6FSHvQExrA5m
q4OBs+x2+EWwOo9cH3FW9/K5x0Su1jsuEfY7fCNabefyRntlw4sEr42h10IB
4OF/Hzh58iRp1apVkfoK9erVe+XeUwAAAAAAAIA3A/N2mIf0MPcRWf51CpkY
lcS5Vy/jQhlzmHfF6tfNXf4NuX3nHvd6TcEnhBcJGPx4vXHrDpm9dA1XW/Fl
XUVjDnstEyMXk8++SyOP6ZjPM9D85I8zi0gkyl/PsLCw4E5v3bqVux3fH6Ok
j8lgrmWLFi2KeJFHjx7lrocXCcoz8CJfLqx+JKvReEkpcmD1Gi8quH7WTrre
1i7/Bni6/uvv6XYuwNONXueaEyh2uR7s5XwzxNuZ9cG+EiR2ofdzPRcgcmO3
o7fnbkvv63ZeIdJuA0Suuriwx2WPf1HbM5t7fkMfA3iRrwG8yPz+1dKwzU7S
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
qTorS6JaniVVTc6Uqd7LlKva6Xy2xpnaXtrwIpGS5FleJBs/LjTt6RgbQDMm
S6pOypCE76Fj8BIdi3n7/GLzjgTO1RxSzt2fPjw8aX4vRdAwl04+NrUb1i8y
5uFFmjyGdPVeBrZuyn7junDhAtcLm/mPhXtn6zuR/v7+5OrVq/n35z1I/nEK
wy5j17Hb5ebmFrlNdnY2+d///kfWrVuX/3jAtFnxdQqZvWSNoXcDAAAAAAAA
8BJ8sS6dq0s3PX4F51+x3tqJn6/n/CwAgOFgzuOCz9aSydHJnA/JzU86V9ds
yjL0rgEjw7ArocCUeJEXOcimjsWyzjYNfxvqLnoQKA7IHdV+6aMQ78NXleJ7
F/w88y76ez65FCB6pFGIfqf5UqMUjdUEijvTNKWprdHWjIQXiZQ0TpqnXmQr
GjuN1o901CjFrjlKsThHIX6XZjwddyvO+3lmX/QX3bgV5E3Ihx0IGdvxwd0g
7z8ODnb/Mtq7eUhH65qtzQVmBX5L1nmRlhYCM3Mj9CL1+2gfK8aL3C8P37zI
V5WioHmbxl2udR/1HUh7PecNXiTyvBTnRbKakWwM9aKZLFenrqH5XRq++ZEk
dB3zIvP8orbdGzn/xwMTl/05e8LSPwYoorc36+03y9K+XV9+TAt04aDj3Uwo
tIQTCQAAALwEz/Uia9StNdDBy2N2N9nwzUOnR2b7zVp7SDH38D6/2AuZEtXN
rcPDbqaPCL+SKVUfofkuU6ZWZ8pUwzLlKrHOabPO1PbShheJlCTP8yLd6Njq
lCVVDc6SqKbQ7WcZkvCDdAxeyZConuzzjXl0WDnn3I8B8Zlpw0LnJPTwl3/g
3MHTplbDukXGvEA75uFFmi6GXgstKbynOHLkSM57LOxE6l/28ccf59/vWR5k
SZ6PdyXz9H5fu3Pnzuu/mDKE7zl36PhJ8um3qeSrjZlk9YaMipv12u1n36aR
aXFLSfyyr8mXGyr4MUEQBEEQBEEQE8gX9LM8++ye9MUGMjV2KeddsZ69U2KW
kHmffKf9rrPe8PuJIBUy69PpHMwi81Z8y81Jfn5Opd+7k77YSOcum8Ppht9P
xMDjJIN8s3k7vEhQYl5YL9K2rsWKLrYNTg5r3e5xsJdf3mif5Mcj2x/W1ov0
fHLB35NcChA90ShEZ2m+1yhFkzWB4m40zTWoF4m8fJgTyY+RlhptD3bmRjIv
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
4XGr8yItLbR/YIPPjeUAA2t7JWLw4MHP9CJr1KhBbty4wd0OXiQojpVrt5K4
pK/Iw9xHht4VAAAAAAAAAAAAgAqNYVdCgalTRSgQWD7tMcy2Qt22ksLJynzL
Oy5Vbyk7OJEJXX3JhC5f5I70OX/B35OclrUlZ33bkUsBooc5CvGVHKX49xyF
aJdGIfqKZpZGIR5FLx+Qo/DypnHOUXrZaJT59SKba57WESzuPFI+wmqE2uje
W/beF/JfRU1ylCIXmp40o64oRUuuKMR76bi5cNFflHNW7nn7jKzdYzqWnpDR
PrfIhE7nyLiO2ZoA0efr+zqODnGxErvVqVbTuppFgd/VWG94OqbN9WtGGgOc
FilkmBfxIutY2VZ2EPVz6PLB9EGDJ62K8I9OXxsYv+do4KydV/wimRe5KU8W
vumuTJVyXa5OPU6zQa5Kma3rqd2LpjVNi2K8OVY7kNWKtKFh1xu6piFSumku
f1oLtGC9SHWqFedERqTY0XjRDJWrU2bSfE6zk15/wjcy7aJvROpduXozkYSu
I8Onf0voOCNBs3b/Ozbxl1Xjkn71VcbscuofuLCaa4f3LWrWbczcDL4XPO9F
mrEakmU8nQAAAIByDf2KZlaZ1WQ2K/p3B3a1G5kHeHSvt+q9cR6HA+cMP/1h
8tzfQhbu2esXc33L8Blk49CPSerwmQ8zJarb26Xqf7dLIg5kSVRruJ7aElVA
llTVLVPG9c5mjlxdmnq606x+oI0uhq5niLzZsPfYVvees/eejYG63GmZyp6O
kS50rPjSMJ/2i+3SiF00f2VKVddSh4feoWMsd8sHM8huedTN4yELDtAxmHgs
aF7w14MmdRrl2beJU/0mloXHLfujGjammfNbNrMIvGkMvRZaEt55551nepG1
a9cmjx7Bd3sRzBl9nJfH9RqvCHn06DG3/f2vf8h4dSLZ++PP3HHI1V2OIAiC
IAiCIAiCIAiClH0MuxIKTB1LocDMQudFMo9MaGYmNH9aP5Lj2Aft6t1Q+nS9
H9JBdT/YZ+eNQK8bGoX4bo5C/PiKUkzoaXI5QHz7skL0r0Yh+olmA72M1f0b
l6PwGkLTPUfpJdYoxR6aQHFrXdxp3HSnPXRpjZSbuOu9t/x5ljY07WhEmkBR
hxyl6B2aEI1SNF8TINqpCRBfZX2zryi8CD1NtD20ve8/HuXz7/1R7Q9eVYi/
3Pf/9u4Drqr6/+M495x7L+DeihPNTA1lXZAhjsyRezMvd7FkOktlXBygIKiA
mNiwTOtXuQVFcct0l+XI6peZA3OUVprr+/9+z73XLkOl37+8Au/n7/F6nHsv
V6Pf+ZJw78fvGfPq7PnO7Ua5t6rfmS5Pw4yhSN8LPhepu+aw8cO6ROLWLzm0
ch0V5TJhxlpF0KL85ND0YznBqQVnlfNyf/eN3Uh8YjayfSOJPD7nFu0LuTZ7
ndE1tUfS+si1OU40B5qtXHfN5B60nvr7PY3uo+pf+XNpuG8nFJ9j5x+fLfOf
k/0azZvGZiLX0EpoF+XxW2/T4336OFHMzSH+c3Puy+dk31HO33E7YOH+A0HJ
BfHq+bv7T5z6cdNyS5n++SDCXCQAAMC/iM1FStiezEZzkew2e7xLk9YibxsP
i9SBytabPWe6FygTww6pk9cWKBK/3eM3516eT/yjXX7xZLfvHJLnq32Y56O9
RDu0y0f7GW3BLl9tQJ6fdnCeXCujdaO9oj/2pNnRbGk99PdRzauH/hzb6e8b
rwEHujYGsL1F6VqZy+Zp6dopyvPWXqBr6cEu33jCyqPt8Z37MF+RcOGQOmlD
kXLBlGyv2b3TB2uslD37C3v509UrrF/OsMc4PdI1TX9Iwx7jNYWJx/WqpH//
/k+ci2zRogXmIqvgIZuLfPBQmI0UjjW4+8LxgTALumLtFjJn6Qfkj7t3Tf55
IYQQQgghhBBCCNXqMBcJ/yAxJxJZ8BxvIeZ448czPTpLd46w6XLGx3H8rxqX
RBLqlvso1O3Y3RDXa78EOJNLShn50d+RXFA4PrikdCy9opIdL1U5bb6qkmVe
VTvF/sz2jtQ4eV/VOI2iDaW9QRuij90fThumv41qTm/oG6o/v6NpnjTFVY0s
oFQjCy9Vy6LpellG1822nxQO/71A11GpSkZuB/Yif05yJXStkYehrjfpOjvy
pbfdR1uHdp2R7Np+9ISXmtq3rSttZrRM2Syv8B6bhOPYVX35F3Iukn5mYonU
8PVluG698Lm3tLap7z566ku+0RsHhC/7InRy1pnlk5Ye2quct/1Hr+jP73jN
/oz4xG4SZiP9tNnX5Nrso/7a7PX+8dkZ/vE5cf7s+sjanECaguZJG0UbRhtK
e0PfUFTTyja+P5I2lj42keYr127VyOO3TJNrtyygxzV+2i1FtIt+cZsf+MZu
ID4xG4T9IZXzc4kmad8vgSn5Z2mFqoRdGV4z13kPD87o4jH2LUm5dcyxjU/N
XpDr0wMAANRUYuFyw49vc+a8hJPyYuHvr/W37iEKdBhYN76vZ6f3R4QN3+YV
M79QkbjnqGbRxSPq5LuFygVkj98cst07huR4RpPtXjGlO7xjj+30jtuQ56Nd
utNXOyPPT6uijaMNpw3VN0x/fKPcfVT9K39uhxrdZ2uArQV2rfWpdI0somvl
P3TNFNO18xNdQw/oGhNmIguUieSwOpkc1aT8VqRacCLXOzbzw5ER4+f3824/
yXHw47//JeUlPF2zYrp2eRG+b6yRTD2vVxUDBw584lxks2bNMBcJlfr2h4tk
6rxMcuLUOVN/KgAAAAAAAAAAQHAdbfjn6OciOSlf8dpWM+3bNdowpHv383Kn
QSTcYxqJ6vMeCe/95a3AXuS8vwM552tPvpPbkx8VjvcuKh0vXVbKTlxRyXZf
VTt99rPaacXPGqfEq2rZ7Ksa2RRaJC1C32TaVP3jk1G1bopRUUbnmR2n0WJo
SbTlpWrZqitqx//QdZL9k8Kx4Ly/4zff+dnfZuvokkJG7oa4EhLZm5DJfcij
UNf/nva237hqQOeZYT1aDRzcrtEr3RpbtrTkOQv98mTrVaw/mvFsW0aR2Qt5
fTb9XKTx5/Z4n8vWLzlK+oyf1cxfu80m6u3TI6auPDdj0tJDq/znZBdOnPnJ
hYlvfXzfO3od8WWzkXFbHsi1Wy/7x2ef9I/POeA/JyebHj+Vx+d8INfmLKcl
ybXZMbRptEhauP4YRZti1GRU7TKctyh9usfjc6bQ3qLF0fuJftqtaX5xm9/z
i9u03jd24y6/uI1H6do5T/vNN2YD8Z79GfGc+alw/Wxlwg4SvKT4+7BlJzYH
LylJ8Y7ZJB+kTHKwH6BoXGENM7yEF2GvHwAAgOdCZCYS6eci2S7Nj7+PdGrd
mRvYybZhhNNQh5VDQzT7fOdmnQpKKzgTknH5aMAisttvDtniOYtsmvAW2Tpx
9oNtXtFXc71iT+7widu90yfu0zxfbRYtmRZLm06bTIukRdCiaFOEGTndcTKq
1hmfyyj9OY7U356Wp1sDSbQsujb+Q9fIjlzv2KPbPGMu0LXzx8bxb5FNE2cK
+0Qe1iST0yEZD2k/HFQkbHt/RHj01F4j+7zR2b6+8bple0XSNSvBXGTNZerX
Qqti5MiRT5yLbNCgAbl7966pP8UXFtsnkvn6mx/I+u37SfbuIrJ1V2GNbsuu
AuG45L3PyfSEt8mG3APCY4bHEUIIIYQQQgghhNDzbUteIdm2txhzkfCPYXOR
5rxwAeIK71t4WDXk5zh1sCwYY9vkTpCbM4nsE0bCPTb8FuRy7YLCkXwvtyfn
FQ7C3pGXlbLfS1VOV0tVsvNX1bJTtGLaNtp/aO/SVtDe1h/fob2nf/wdVK17
16iV+nO8nJZFW0VbR9tFO1Kqlp2+QtcH7QpdLzcvKmR//CB3fPi93IFcoWvo
PtsrMqo3m428cl3tdCB7aLeUMJtWo19tUqddI3OxhaWYYxfuFdYpXa1ijjOT
0FvC+8SGx19ET7jmsHC/fVdXUZ9xM+v4ztrYNnTJUVnkspMTg1OLYhVzc9Z4
RX9e6DX78wu+sRvv+Wm3ELlwPe3se/7x2bf95+TcoF2Sx+f8QDtNO0LbRT++
jraKtoK2nPY2bSXtXaPeQdUuw3lj5zJLf2T336N9pD/vuX7arUXy+K2n6Hr5
yU+7+To9/kr7g3af7RHpG7Oe0DVF2DXaVYl5t4OXluyblH40Ub1w74SRESt7
Og4ObNqqk624whrmeLqGpZzIaA8rAAAA+Pfo5yJ5KS8Ws9vGH2tqWV/cr4NN
+1luYweuHztj6jF1yqrTwenFxwNSru/1m0eyPWcLs5Fsr79c79j7O3ziftnp
o7200yfu2zwf7Qnaftpm2ke0lbS39WXR3qW9pz++g6p1xucyq9x5Xk3bRNtL
O87WBl0jF+nxOl0zd+naebRl4iy6jmYLe5Ae1aQ8OBWSfuF44OL9dG1lavt4
Kgd1suvRsm5Dafm1S9csm4sUYy6yZjLx2F6V+Pj4PHEusk6dOuTixYvC89h1
k6Esdo0iZuOOg0T9ZhKJmrOMRGjTanjpwnHq/EwyM2kliYxPL/M4QgghhBBC
CCGEEHq+hcelkekJyzEXCf+YSuYi2ZyZRH987NgE+wbX1C79/wh2m3snyHX/
r4HOl34JcL52O6jXb78F9XrI9pC8GeBMrmlk5Kpa9qhULbtdqnK8UKqSfVWq
m5E8oC+fVkQruap7vAhV64qNKqQdpO1n55me+8O0M7QrdA3c/VktI9c1ToRd
h51dM/s3Gls3vwQ43b0d6PzLvRCXK7dDXM5eUTntPTjGZsVClw7B/Vs3tKfL
U1J+zdaRcFI2J0k/9kLuEWmMbZfC82JR2cfEInPL+qK2XXqJnIdMkowIWtbY
d/bGjpqEPe4BC/fL1Ym745Xzd65WJuw8oErM+06VkHdLOX/HfcW87cR/7jbi
PyebzUiya2sLR3l8zl3aFXr7DO0wLZ+2n3aQVkgrNqoIVbsM542dywL9kc1A
lsi1W4/RTtH7F/zn5Nym64TQ9UJUibt0R33qxF331Al59OM7r9H7lzQL95Zo
kvZnKubm+o2ZssrGY+Kshh3tBhjWKTvy+iPmIgEAAJ6zSuYiH+83znRo0Lyx
Zzd3m5TXFKM2jXtrer484d1i5cK9+f6J3+yTz7u8Xz7v5kH/hLs0Qm+TvX5z
hesh5/loH+30jvuF9sNO3YxkYZ5uTvIArYBWTCvRH4tQtc74XBboz7Fwnnd6
a9n11b+jXaf3H+zyiSe76Rqha4ccVCQQYd34z/ud3r+er0i8UKJK+qJAuSB3
i2f08rTBmsnyHn0HdW5s1cFM9/0ip09Yn5iLrNlMPLb3VIY5xxkzZlSYizQk
kUjIoUOHyjwf/mKYi8zZW0yi5mSQ6JT3yKzkd2pFbCbyrYVZ9PZKk38uCCGE
EEIIIYQQQrW5mUnvEO2SVZiLhH8MX/H9CvbeBtv3ocL7GNuH23T8xlc29rdA
10QS5v45ifDYSyI9zpAI91sPJ7mS34N6kRsaJ3JF5Uh+UjqQnxQsxzuXlI7X
Lytll1n09lXaNdoN9rj+Nqq+XTfq58tKx1LaZXa8qHS8Sc//nzRCb5NStUyY
nb0b7EJImBuh64btD3mfRLpdImGuX94McNpz3Nt2zfohryTMd26vmdi5Wd+O
9c1blV+HEt1cpMRCzInZ9bP/pS+NfxUvMRdJLeoKX2NdHN4QyQYFWrzmpW08
JuLdl/y1OX2Ckgt8Q5cemR2WfmxlaNrh3ODUwlOahXuvsZk3/zk5xE+7Wdjz
j11f2zduM2H7Sfppt7Ljn35xm2/SSmmX9cefadeNuoaqXYbz9jM9x7rofXr+
r9N1cJPG9oQkirnbiWbhHhKUkk+CFxeRoNQCEkhvs2PIkpIbdD19HZp2bE/I
4kPrNAv2pnjNXqcaGrTU2WVkRJNyS5StzcfXqWd0b2/jOtoAAADPA5uF5EUc
J1yPuJK5yDoSc3Mnq5dayW369ox1Hz/k/WFhgdu8YuKLFEkrT2gWb/oqKK3o
ZFDajycCFj8oUSUJc267fePJDu9YYR9J1navmN9yvWN/3uEdd4k+fjnXK5Zd
c/s67Yb+eA1V64zP5VV2jum5vkzP+VV67m9t84x5RCP0Y4TNRe73n0+KVQvJ
8cBUcjJ46d2vQ9K++zJoycFD6uT1O321y1ePioqN7+OlUtm+Nsi17SvdG5jX
aaxfjuz7RcN8pBmbieTZX6bBXGSNZNKhvWd4+FA305eRkSHsD8nzfIW5SPb4
2rVrhec9ePDAlJ/uC8kwF5m9p0j4u/nsdWg2K4gQQgghhBBCCCGE0PPqzQVZ
JDb1PcxFwr/J8L5GBTPt29XbOvTVLpcVzoNJRJ9JZFr/JDKt3xYS5XGWhLrd
+S3ImVxTy8glpSM57+9AfqCxI7vm9kWF4yPaQzYjh2p27Fyz4wV/R2EN/CB3
ID/S25dVMnIjwJncYXOR4W6ETPEgZEafK2S6xxES7rrxrK/d4lWvdw4NfrXl
kL6tG/R8pZFl23oS3qKytSjhRJyYVh3fb2PX1ObF0jKft1VHO+5lh8HS3qOn
NR43+cPOQUn5blHLT42dsvKbqMjMk4tDlpRs1izc86Vi3vbf5fFbhZlIn+h1
tPXEJ2aDMB8pXCeZzUkK85Ko5sZmYXXnmZ17wzpgjyvmbiOahXtJcGohmbT0
kG42MqWABC0u/CM049jpqBVnNk3J+iYpPP3EJEX8tmFvaBb3sB+gaNmmi1OF
a2ebGe37AwAAAM+fSPgbCWW+1xUZf6xl3YaWNs3aN3utQw/rSNkw23eGhvXZ
75cw4XTQsin/DcvKPDfp7b1fBS29eEiVRA7I5wv7RW73ihGus83K8Yw2zEc+
pD0yzEuimhk7x/qEc7914mwh9rGdPlphr0g2F/ll0FJyLmz5hfORWTvPhWam
F6kWTPloVNTE6a6j+7FrZ/ds0aGDVb3GTXiOkxqty8ffN3Ki6vkzGlSNicf2
nsowF5mXlyfMQJafizTsHzlt2jTheffv3zflp/tCwlwkQgghhBBCCCGEEDJ1
mIuEfxvbEUzCVf4+Rr/WDUULXKylh8bZtbgT6G5PIvp6knCPxHvBrtnX1c6n
r6hkv5QqZaRUJSP0tjAHd0VfqVFXUI3taee5VO1keM7dWwHO10io6zkS5V5A
It0+ua6RJeaO6KqcbNvKxaaJZUtLMSel65BdfFr//poZXZccz9WA99jYXCTH
Syr99+jqNEI6UJ7YRB6TbR26+Ih9ePqJIcEpRYHK+TsT/bRb1vlpN5+Ux28V
ZiPl2i366O14VCvTGq0Dep/tJaqYl0tUCTuFa2ez2/I5Ob/6z9t+WpO0f2to
2rGE8PQvPAMX5tuPm/xhS5eh4eZtOjtWOgcv7A+J62YDAAC8MMQiTsQb/dnM
9pOU8mK+qWU98Wsdekhnu0+ou27sW+0OKVPcvgpMDziuWbyswD9x726f+B/y
vLV38ny0wvzbDp84oZ1CWlQr062BHd5/rYEdNHZN7YOKhJ+OB6buPT0pfemJ
wFR1ttdsj/n9fToN7ezYuGXdhubs2u48xz3eU5yuSY6uTcxC1hImHtt7KsP+
j2fPniX16tV7vD+kmX4u0jAn2bdvX+G5hjlK+AvmIhFCCCGEEEIIIYSQqcNc
JPzbzHlOVFfCiyx4thmfsO8D20eM7QVRZnameKxd/TM+MtvTXg4+h8f3nJ8/
xmbt8Ym2ey7IHY/dDux1+l6I63f3J7leoMcrd4Jdrv8e1Evoj2CXG7TrqMZ2
4/cgdr5drt8NcblG18BV2qU/g13O39Q4n/vWz+GLw+N7HKTrJeeEZ89PTvva
LTvjazt77+hufilu7d0Gt2/YovyaFHMivq6YM68r5tmsZKUzXNVJubnIMtdE
bGXdk11T23xYQFpDz+mfWHnP/Lz7+Kmr+40MW+43KjwrbuKba9f4z8kp0CzY
ezow+cDZgOQD5zQL936vXrD7v6rEXefp8bJ6wZ5rtBu0m/oj6zqqISXu1kVv
ByTtu0HXwPWA5P0/08dK5fHZP3q+9ck3Y6LePTky/O3jI0KXlQwLSd81PDRj
7ZjJ7yd4zfzM13vWeruxUR/Ur2xpskQijmP7mUqklhX2NQUAAADTMaffP1pK
zDkJx3NPe97akdOabxg30/3TMdODPxgesXjV8PB1n4+ZfmCnt/ZEviLxbLEq
6fsSVdJPRcqFV+n9G/mKhOu6Y+KNAkXiddo1/RHVkPTn9/pB3bm+XqRccK1E
nVRK+6lAmfhDnq/23LrxM06vGhFe/P6I8E2fjpu2ePPEmQGfj5vutnSw2kpt
91qla07M8WxN8nRt0lXJ4fvGWsDEY3tP9ejRI+F469Yt0rt37wp7Rhr2i2za
tCn54osvhOfiWtplYS4SIYQQQgghhBBCCJk6zEXCv02q3yvSnBc2fDCei6zw
XkiqW6dmKa4dHec5tx+9oFeH4E8HvRL9tad98r1gt+Ukqs9qMrXvRjK5Tx6J
cC8gYW7FQuG0CPdCWr7wuO42qr4VGFVIz28RPc+sQhJJz/EUj31kap8d9PbG
XzXOHxWPtcl4t99Lc+c4tZ26wKV9SErvDr6p7h3eiHZsI/N+uWm7ro0sKlzP
lw1qsf0jLcSchO1g969/EfzLOJ433oevzFwk09Gmn8iuv7/YdXiEpdvIyU17
DQ3t6DBQJXMfPXXk8OD0cH9t9oLQJYdXRC7/6t2IzJOrJ6Ud+SQwtXB9YEr+
1qDUwt3Bi4vygxcXF9GK9cdCWoFRhajapTtvqUWFQSmFBYEpBewcF4amHyuJ
WH6yJDzzy6KglIJ93rPXbxoSkPKe66ioFMeBqvn2ryvi7Qb4v0WPwU5DQ8a6
jZ7iRNdR8yctTV10dYolIrHE/In7mgIAAMDzJ+XFInOxhBM/Yy4yzHEYN9V5
VLtI2XD3YPtBE6c6j4xIG6jRbp0QnXpEnZJ1JiRzzdlJmVu+Ck7beywgtfCI
ZlHJkYCUEnq7+HhAagEtX38sRNW6AkO685xSdFizqOgovU3P/cFzoZl7zoVl
5pwIXLwu1zv2w8w3gjJnuIyaH+QwKDLSeZjndJdRrlHOw9rKe/aVPmmtsblI
tibp2uRqwr7+8GwmHtt7JsO1sadPny7MQEokkjLX0haLxcJx4cKFwvMwF1kW
5iIRQgghhBBCCCGEkKnDXCQ8Z4aZrUrfe+tt1VDa26pBM5eW9TsOatfIJsax
ncvuETav3w50HUum9FOR6a9NJ1P7JpCI3ukPw1zfpq0g4W5vk3D3DFoaLV1/
G1Xv0v86l26ZD8LcMh+FuS0jUb3TybQ+KWR63/kk0n3mZX/H4M8Gvjx+0qst
+7u1qm9Ps+ndun6X3lb12zu1qNusW2PLuk9aiLpJQnaBNrNa835bK2tbkVUn
O2lL6x71mrfr1uxlhyEv9Z0wy9n7rc/fCFtydOKUrHPyqBVnA0PTjkUELMqf
oUnerw1clJ8UlFqUFpRanElbrj8uo6Xry0DVuJSijMDk/LSA5ANL2f3wZV+s
iMo6+07kilNZgckHF4+Oem9Wr+FhcusefQe2aN/dla6bXs3adnVs3q7rq606
2r7U5mVZi9adHcyfsfRqzdcYAABAdVPVPfnsW3aqY9vCupVN8/adX+vQw3aK
00j3NSOnDDmkXDTx20krgr4Py5p5Kjgj6agmZVmJOmnFIU3yiqMBqctp6bQ0
/TEDVfvS9S07pF6UWaxKyjyiScn4OiQ97YeIrOTzkVnxJwIXT183foZmlvvY
MYM72fV9tXl7W9uW1p0dWnVqadfS2rIqaxIzkbWHicf2nskwF5mbm0ssLCyE
62gbX0vbsGdkx44dyc2bN4VraRv2mYS/5iJz9haTyXMySHTKe2R28js1ollG
R/b6+syklSb/nBBCCCGEEEIIIYRQxWYlvUO0S1ZhLhJMRsqLROxa2+Ufb24h
4cZ1bGb+bt+XG571dmx7P9jdhoR59Lsf4jb2msZZ+ZPSMYgWfEUlC7yqdlLR
FDSl/jaq3ikN5/KySqa5oJRpLipl6l8DnZUk1NWXhLmNuxPgNOjwGBunBc7t
Onm0qt9QKlym3Yy9gfZ4LdF1xUm42v2eGsfxT7x2cVOrLhK7fv4NRgRlWqnm
5HUKST3cPSilxFE5f5e7d+zm172iN4z0id3s5afNVvhpczS0AP1RTVPqU6Fq
XFy2yidms8I7eqM/u69esC84KLUkPHBRYahPzCb/AfKEwV2chner19iqgf7L
63Ecu76hmP4X/K+9SgEAAKAGkfBikbiSP+fb1m/Kj+3iYrGov7LJtomx1oeV
KfZH1akD8/0TPXd4x6lzvKKDt3nHBO/w0Qbs9NEqaQr9UYWqfew8Kum5VW/z
itVke0Zrcr3jVAcVCYrjAaneJwJTR+32jX9t2ZAAO18bj7YvNWpZV1Tu78iw
nSDZfpC8CNfJhhd/LpLNOLLYvKO9vb0wE2mYhTQrNxsZHR0t/BrsGfkXw1zk
hh0HiXpGEomakyHsG1nTYnsOTE98m4THmf5zQQghhBBCCCGEEEJlC4tLI9Pm
Z2IuEp47NgvJicx4elNi9oTrahsrGGNbp2S8XZuCsT1f3T6ie69Nw7r2pnlk
D+/qvm1ENxeaM62X/jaq3vUynMutw7u60vPstnlYV9ddo7r3Khnfw7FkfE+b
/SO7dVzp0bGpoksz/hlLjROLRBK63iQSTiRme0SWf2+uJuJ5iYjTvY+tv5bx
0/+dhwemc2OjPrAcHfl+42HBGa0GqpKsX1ckdhukSrIfoklxprnpc9XXS58L
qsapU1wGKZOcByoWOLH7I0KXe4yOev+10ZHv9B+kXOhsP1DdqVVHW4sqLDm2
xiT6xLxYQpefuMZ/nQEAANQUIorn2N8p4tnEGv1DXMR+PmN7QrPjU/9MXzUs
quGHI6Kss4ZOsl0yUO2a8rrCI3Wg0mPJII3b0kGaXjRn/dEFVfvYeexFz61r
6usqt0UDFG6LB6pdVgwLcf5oVJT9mtFR3TIGB7SPch7W4GnLTb+upHStSdjf
tKFrj8cekbWTicf2qoTNRDIrVqwoMwdpyDArWadOHXLw4EHhuffu3fvHPw82
b1nd9qI0fL7fnb9IdhUcJQdKviD7i0/UiPbpj3uLjpO5aR+QxOVrdI+VmP5z
QwghhBBCCCGEEEJ/xV6zyT/8JeYi4bnT7+PHZmnE+p75Pki0rL3FTIe2TaJs
W7cO69GqHa19RM9W7SJ7WrWmWemPqAYV3rNVm9AerdrQc91mql3r1tGObVpG
y9o2fdPOqp7fy82eOktrwOZv2UykmBOxnUmr9GuqO/Z2tm4E9NkzkcbsB6hE
Pft6S7u7j6vbzW1MY3ps8WrvCVa0NrS2+iOrNaoBuU9o3d1tnFV3t7HsHLe2
7e/X3v51VUf7AQpr9li7rq71qrh02BpjM8rsv+U8XX8ch30kAQAAqg2R8J0j
x/aHZPv4Gf5Ml+iPz6S2fb2uvEe/5p7d3duM7+bWfkJ3t/ae3Xu3pbWmWemP
qObUZkI397b0XLed2N29NT33Vhq711sE2L/e2PtVjzpVWDLCGqNrjf6MxvP0
yMYi8b1jLWTisb0qMcz23b59m9jY2FQ6G2m4b21tTU6dOiU8/5+ajWRzmYbr
ecOL5/LVG2TK3GWk6NhXpv5UAAAAAAAAAADgKUz6QijUdiKzKs5t9WxaV2TT
pI6kW2NLi1caW1rS6nSlR3Yf1cy66s4zy6J7E0uLnk3rmNMkNk0s/9Z8o0hU
9hrb8HQNW3TgGjZvL27UooOUZkGzNMoC1aCad7Cg59qc3W7cqpNlE6vOdZtY
vVSnUfP2FnUaNP+7c8RV/u85AAAAvLBEZn/zz/TOja24To1bSa0btrDo0LB5
HZZ1oxaWNAtUM+vQsIUlPc+W7JzTc2/xchMrKU3csVGLqq4bYY3pfkyD2srU
r4VWleHa2OvWrSNisViI7RNpVslsZPfu3cmJEyeE5xuuwc2q6l6PT/o1+/fv
J6dPn378nOrkIf182TW1HzysIdF/l/t0TbBj+qr1ZMHyteS3P+789bipPz+E
EEIIIYQQQgghVCHTvhIKoMMJ+5QIsd0kDdf/Nex3h/dLoDLCnohsH0i2bvSx
nRLZjiNYM+U8/grT7SVZWQDliXQLhyuf8VoCAACAGqzMz2lm+DkNnsmwLsr9
jIYZSCjL1PN6VfVImOt7IOzbKJfLhflHNhtpZjQXaWY0G9miRQuSlZVV4fdg
e0iy34P1QJire/D4PvuY4ZrdxoqLi0lISAixsLB4/Hti/0jTMpyn09+eJ1Pn
ZZKDh77UP1695lUBAAAAAAAAAGoTU74OCsCY85zIguc4mpgmEXMiKX3YELt+
W624/jH8bewabBJzXmRO1w1LytYPXU/sutkc3nvT4XmJiBdLWRyNpxmuX2+I
/f/4t665DbUG+0qS0jVjoYt+eYml9L5Eol9LbE1h3QAAANRQ9A999o0ATxOz
bwjo99eGn9EM19nG9wFQHlsTYpGZiH3TaM7Wjblu/fASjsd6gcdM/Vro32HY
o/HatWvEzs6u0utpl3/M3d2drF+/nly8eLHK/5xbt26RM2fOkJUrVxIPDw9i
aWn5+Pdbs2aN8BzMRZoem4HM+ngrmZv+IblHz0c128ITAAAAAAAAAKDWMdmL
oAB6Ek4k0sfReE5UYV4LoDLsfTVezInEkr9i99k7btgzUo+j/29wvNgQR++z
rynD1xbmIeEZ6H+TOV6iT6yPPcYZ1pWpP0MAAAD4d4jp95E0jsazzMr+vRp8
DwBPIvy8Qb9pFBvWDltHPPYaByOmfi307zLsE3j27FlibW0tzCpKJJKnzkay
2HOVSiVJTk4mH3/8McnNzSX79u0T2r59O1m7di1JSUkhkyZNEmYpy/+ebK9I
dt3u1atXC/98zEWajmE+9pv//kQitemk6NjXZR4HAAAAAAAAAIAXk4leAgWo
lAjXY4O/ia0ZQ6b+XABqJpGobAAAAFDb4Oc0+LvwMxo8jalfC/1fGGYjT5w4
QTp37vx4NpLNLZqVm49kj/E8X+FxqVRK6tatK1TZXKWZfraS/XqW4TmYi3xx
vL1mM1mQuZbcufuncB9jkQAAAAAAAAAALzYTvPwJ8LeIOZHIKA7V6nTrQCQS
4TrZ/wxhP0lOLNIdy8Sh2pvuSvT4GgMAAIDK0e8Y6Pflukz/nQsyZWJdbB2I
sCckVJWpXwv9Xz148EA4nj59Wtjf0azcLKNZJTOOYrH4qfOT7GMsNkdp/Bx2
29zcXPg9MBdpWo/3ivz+AomKzyAFR74S7rNragMAAAAAAAAAwIvNNK+AAlSN
Oc+JLHRxLHqfR7Uzi7/ipPoZSVOvz+qO4yUiXiw1xOmSGOJ1SVGNTMI/+RxL
eE64Ij3e1wYAAICK2PW1pbzYEEfjUe1KUvExtg44+lMEZiOhSkz9Wuj/h2Hf
yFu3bpE333xTmHs0088ystvl5xvNjOYcK6v8c9ivL7+X5KpVq4R/JuYinz82
E2lo+UebhL0i/7j7p7BPJKYiAQAAAAAAAABefKZ5BRSg6sRl94tkewVyjyv/
MVRzoueX153nCh/jhf0icU22f4LIaI9IUeVxRj3pOaiaZ7zrj/CYsCMrZo8B
AADgydj8m2GPQH1G31mWeRzVrMqeY6O9Itn/TL0uoXow9Wuh/1+G2Ujm8OHD
ZPjw4aRevXoV9onkjK6JbfaEOUn2HDYLyZ5f/nkvv/wyiYmJIVevXhX+WY9w
0ebnznCuz3z3I5kydxnJP/yl7nGcCwAAAAAAAACAasFkL4ICAAAAAAAAAABA
rWLq10L/CWxG0Xg+sqCggERERJCePXtWmIH8Ozk4OJCAgACydu1acvfuXRP+
G4Jhn8g/790ny1dvInPTV5N72LMTAAAAAAAAAKBaMcHLnwAAAAAAAAAAAFAL
mfq10H9S+fnIX375hZw8eZKsXr2ahISEkAEDBpCOHTuSRo0aEalUKlwju2nT
psJjdnZ2ZMKECWTevHlk06ZN5Ouvvya//vprmd/f+PcG0/jz3j2SuXojKT5+
SriPfTsBAAAAAAAAAKoPU78WCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC1x/8BtiuvwA==
    "], {{0, 600.}, {2630., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{2630., 600.},
  PlotRange->{{0, 2630.}, {0, 600.}}]], "Output",
 CellChangeTimes->{{3.893853691365773*^9, 3.893853705540855*^9}},
 CellLabel->"Out[235]=",
 CellID->1091805473,ExpressionUUID->"5e0570ff-9c2a-4941-9477-de9cce80cdae"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->132008035,ExpressionUUID->"f0969c8b-ec27-4ea2-af6f-87c33deaff2c"],

Cell[CellGroupData[{

Cell["Contributed By", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ContributorInformation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Contributed By", "ContributorInformation", "TemplateCellGroup"},
 CellID->430591647,ExpressionUUID->"4fce881b-9e8b-488a-b618-55986021c49d"],

Cell["Wolfram Research, Quantum Computation Framework Team", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.890955218040729*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->744260130,ExpressionUUID->"763382d8-d594-4a60-897c-720f44948d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the example in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bc60503f-b551-4da9-9fbb-42271a8defbf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->973908638,ExpressionUUID->"0276bd08-483a-4c73-901e-5381a80d5ef8"],

Cell["Quantum circuit", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893853718859898*^9, 3.893853721380803*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->12473014,ExpressionUUID->"3c9ac8e1-2f23-456f-a7cf-1fa7586749b1"],

Cell["Wolfram quantum framework", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893853718859898*^9, 3.8938537246596937`*^9}},
 CellID->301189823,ExpressionUUID->"61a55717-b883-4d29-953b-6a4171d330e3"],

Cell["Qiskit", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.893853718859898*^9, 3.8938537266822*^9}},
 CellID->1413175084,ExpressionUUID->"7cd5a37f-7d65-4f00-9284-966c20a0bef1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categories",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Categories", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Choose categories that best represent your example. These choices \
determine which pages your example will appear on when published to the \
repository.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCategories"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7b97c29f-da08-4232-851c-fb4bd1895772"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->405271300,ExpressionUUID->"826f6508-3b7f-4d85-922d-a57cbfb8b77a"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Algebra"}], "\" \"", 
           StyleBox[
           "\"Algebra\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Calculus"}], "\" \"", 
           StyleBox[
           "\"Calculus\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Complex Systems"}], "\" \"", 
           StyleBox[
           "\"Complex Systems\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Control Systems"}], "\" \"", 
           StyleBox[
           "\"Control Systems\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Engineering"}], "\" \"", 
           StyleBox[
           "\"Engineering\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Food & Nutrition"}], "\" \"", 
           StyleBox[
           "\"Food & Nutrition\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
           StyleBox[
           "\"Graphs & Networks\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
           StyleBox[
           "\"Machine Learning\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Optimization"}], "\" \"", 
           StyleBox[
           "\"Optimization\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Puzzles and Recreation"}], "\" \"", 
           StyleBox[
           "\"Puzzles and Recreation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "System Modeling"}], "\" \"", 
           StyleBox[
           "\"System Modeling\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Video Processing"}], "\" \"", 
           StyleBox[
           "\"Video Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[
           False, {False, 
             DefinitionNotebookClient`PackageScope`$$customInputField}], 
           "\" \"", 
           StyleBox[
            DynamicModuleBox[{$CellContext`input$$, $CellContext`update$$}, 
             InputFieldBox[
              
              Dynamic[$CellContext`input$$, ($CellContext`input$$ = #; \
$CellContext`update$$[#])& ], String, BoxID -> 
              "574d2def-48b9-4645-9bdb-323c906ef357", ContinuousAction -> 
              False, FieldHint -> " Enter a custom value ", 
              ImageSize -> {250, Automatic}, FieldCompletionFunction :> 
              DefinitionNotebookClient`PropertyCompletionFunction["Example", 
                EvaluationNotebook[], "Categories"]], Initialization :> 
             DefinitionNotebookClient`PropertyCompletionFunction["Example", 
               EvaluationNotebook[], "Categories"], 
             DynamicModuleValues :> {{
               DownValues[$CellContext`update$$] = {HoldPattern[
                    $CellContext`update$$[
                    Pattern[$CellContext`s, 
                    Blank[]]]] :> 
                  DefinitionNotebookClient`InsertCheckboxItem[
                    EvaluationCell[], 
                    If[
                    And[
                    StringQ[$CellContext`s], $CellContext`s =!= 
                    ""], $CellContext`s, None], "MoveCursorToInputField" -> 
                    Automatic]}}}, SynchronousInitialization -> False], 
            FontSize -> 12, Editable -> False, StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Astronomy"}], "\" \"", 
           StyleBox[
           "\"Astronomy\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cellular Automata"}], "\" \"", 
           StyleBox[
           "\"Cellular Automata\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Computer Science", {False, "Computer Science"}], 
           "\" \"", 
           StyleBox[
           "\"Computer Science\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Creative Arts"}], "\" \"", 
           StyleBox[
           "\"Creative Arts\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Finance & Economics"}], "\" \"", 
           StyleBox[
           "\"Finance & Economics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geography"}], "\" \"", 
           StyleBox[
           "\"Geography\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Image Processing"}], "\" \"", 
           StyleBox[
           "\"Image Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Mathematics", {False, "Mathematics"}], "\" \"", 
           StyleBox[
           "\"Mathematics\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Physics", {False, "Physics"}], "\" \"", 
           StyleBox[
           "\"Physics\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Signal Processing"}], "\" \"", 
           StyleBox[
           "\"Signal Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Text & Language Processing"}], "\" \"", 
           StyleBox[
           "\"Text & Language Processing\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
           StyleBox[
           "\"Visualization & Graphics\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Audio Processing"}], "\" \"", 
           StyleBox[
           "\"Audio Processing\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Chemistry"}], "\" \"", 
           StyleBox[
           "\"Chemistry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Computer Vision"}], "\" \"", 
           StyleBox[
           "\"Computer Vision\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Data Science"}], "\" \"", 
           StyleBox[
           "\"Data Science\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Finite Element Method"}], "\" \"", 
           StyleBox[
           "\"Finite Element Method\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Geometry"}], "\" \"", 
           StyleBox[
           "\"Geometry\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Life Sciences"}], "\" \"", 
           StyleBox[
           "\"Life Sciences\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks & User Interfaces"}], 
           "\" \"", 
           StyleBox[
           "\"Notebooks & User Interfaces\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Presentation & Publication"}], "\" \"", 
           StyleBox[
           "\"Presentation & Publication\"", FontSize -> 12, Editable -> 
            False, StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Social Sciences"}], "\" \"", 
           StyleBox[
           "\"Social Sciences\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
           StyleBox[
           "\"Time-Related Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Quantum Computation", {False, "Quantum Computation"}],
            "\" \"", 
           StyleBox[
           "\"Quantum Computation\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 CellEditDuplicate->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdjlsKwjAQRQVba63oSrqIEvwoiBWnG4jtqMHmQWYCZvdGEUR/D/\
dwblPVkAPHCWHRBXaBayjEDYc7jpcZZXtFieQtoyYqm8BWS1ZDDcujtw49R1gJyXi1XiElt3OsrPnd\
FsJOQf/BTWsYvfPI8mVA2ZgI4UyYepUIlIatSX8o633AL3s/yQ7WJLY+IdngB+\
yjQyh2D6ndlPhWWJ1UHD9hMX8CfjpRvg=="},
 CellChangeTimes->{{3.890955242209421*^9, 3.890955251150724*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->824188810,ExpressionUUID->"ddeddf16-a747-435e-b064-dbd7550952ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Documentation Pages", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "RelatedSymbols"},
 DefaultNewCellStyle->"Item",
 CellTags->{
  "Related Documentation Pages", "RelatedSymbols", "TemplateCellGroup"},
 CellID->462881783,ExpressionUUID->"cf341b90-66a2-40d9-8708-1a92358f1b74"],

Cell["Symbol name or documentation URI", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->303988514,ExpressionUUID->"8e3499cd-4134-4a53-80c5-295007a565f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this example.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d09df89b-76f1-43e1-92fb-91dedb621408"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->685983561,ExpressionUUID->"37b35d13-b70c-4fda-aaa5-2e8ec3d7d14c"],

Cell["Resource Name (resources from any Wolfram repository)", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->121377300,ExpressionUUID->"a27cdd58-f004-4d28-b02c-0e9e47517968"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Original Source References and Attributions",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
example and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "33a1992d-8d73-4756-b62c-a61335a674d8"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Original Source References and Attributions", "Source/Reference Citation", 
   "TemplateCellGroup"},
 CellID->239086869,ExpressionUUID->"17f5ab99-db6b-40c6-8193-0e2f778ef400"],

Cell["Source, reference or citation", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->190772471,ExpressionUUID->"21091063-27a9-418f-85b4-87cfaaf0e386"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the example.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "dc13cebd-7392-442d-831b-ae61365d95bc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->934758141,ExpressionUUID->"e7d82e12-d306-4016-8210-91bc438a0595"],

Cell["\<\
https://resources.wolframcloud.com/PacletRepository/resources/Wolfram/\
QuantumFramework/\
\>", "Item",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.890955295272344*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->210331081,ExpressionUUID->"fb82ab81-f6f5-4096-8c2d-aebe3bfe8b8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your example to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "03b16559-0a19-478f-85c9-1e68f55161bd"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->786803182,ExpressionUUID->"f2f65fee-205c-4e82-aebd-1a93972b20a2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1c97a0be-1aea-4bde-a79f-7c35524c3150"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->389299396,ExpressionUUID->"fb2d1069-6011-48f9-bd78-f413ff329cee"],

Cell["13.2+", "Text",
 CellTags->{"DefaultContent", "ScrapeDefault"},
 CellID->824809146,ExpressionUUID->"2ae58b10-e547-44b2-bbe1-e72317ab99c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your example is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "74c2ca06-4bd4-4f37-bdd9-a9125d04e8a0"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->495572721,ExpressionUUID->"35b5b862-e4e9-4f3f-879b-9119ae06598b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Windows", {False, "Windows"}], "\" \"", 
           StyleBox[
           "\"Windows\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", 
           StyleBox[
           "\"Mac\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Unix", {False, "Unix"}], "\" \"", 
           StyleBox[
           "\"Linux\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFT11OwzAMlmi7MYY4AVfoIaoKpEobRTMIXrvOg4jEiWJHNLfHfWh5s78/+\
2vuaqhAskXY9ElCkhq27TeOP3i5FlweDAtsPwxd/C/D5jiMPXxC+U5mUmMn6HiRXW+\
4PCUNWuXLsDKF+peQFawOhtK0ZN6+Rh8wSobH1rswiDkbayT3CupCX5BZr+qXfRDjiXnXJPFOuXF+\
3dvkiNuihoeOBGOIKMMshF1DGdKZUSvu28Rq6kgLc/U8WMZ/cC7F5Ysnxe5PyD7FEd9y0GZP0+\
CCxT8UO2rm"},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->266496668,ExpressionUUID->"698c697c-4e40-4538-b90c-ad637d941c10"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your example is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b06b204c-20b4-45d6-9223-33efa44e261f"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->984950825,ExpressionUUID->"fc1e3c69-5bee-4f1e-aa7b-98ffa204f36b"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Session", {False, "Session"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"Session\"", "\"Local or cloud interactive session\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebEvaluation\"", 
              "\"Cloud evaluation initiated by an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Script", {False, "Script"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{
             "\"WebAPI\"", "\"API called through an HTTP request\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {
         TemplateBox[{
           CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
           StyleBox[
            
            TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
             "PrettyTooltipTemplate"], FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]},
        {"\<\"\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdlug0AMlFoSQq+P6DsfQRCVqKomiiv1mcMRKHtp7Y3K33dpYaF9Wntsj2e82V0KG+\
BBIGwPjo3jFOK8w+aC7Tmm6K0nhhiQqNcKttDY3jAk4OoLWoUCHj+xLq6VcBX/dPg0O5a+o+\
mwdQJb2O0rbrpXXftNJaOkmfd8Q9HJtyz8cxAq88LpDfhKwBKG6j9Nf9OFe5I6vSvuIH0JQzW4Wfva\
Ha02aHmA51xL4/fUveh5WLYW6tpbrSSq8cAHM2JESeZYS9/QjFfXwklF+W0KT6VitMYi/\
zpIMjV4m4R++D535IdK5f+KNi+VIFzA8bwUvWvlsYcTkna2wY/B+BsXX5U0Ar8BBlWssA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->962996741,ExpressionUUID->"cdfbb4d2-7953-485d-82ce-47bc658dbd79"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your example is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "8fda60d5-9065-40fe-9255-2c0b39e29bb1"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->706896916,ExpressionUUID->"74aba099-d0ba-4cf0-8327-72aea3129a12"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[True, {False, True}], "\" \"", 
           StyleBox[
           "\"Supported in cloud\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxFjkFqwzAQRUlx4iQNXXTXXS7gQ6SiBUNpSiYXUOwJFZE0g2YG6ttXhoZuH+/x/\
2HbwRJ0igiroymbdtC6bxxuOF4X0nwEUWnOxbB6vWKSO70+\
SHOy2j2DMVNRHPch74dINt6L9VchxqITvDhK7DVcQgw6uVn6y+\
rekTVQFtkcTClVa5hPULSUxS06eOqzYuGC6mcR2leiiD538OhMatLnelyW7z4K/\
sP5rTSflCvbnVDIyoDniRHatx+fOOIvUvJZAA=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->705317916,ExpressionUUID->"0e93d89b-2228-4140-acbf-b93bc05df417"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your example."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "bf30f052-d2f3-4711-b48a-6f4800232137"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->128722862,ExpressionUUID->"5f0f3af8-fce6-48ba-8d68-b81230e5fa69"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Notebooks"}], "\" \"", 
           StyleBox[
           "\"Notebooks\"", FontSize -> 12, Editable -> False, StripOnInput -> 
            False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
           StyleBox[
           "\"Parallel Kernels\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     TagBox[GridBox[{
        {
         TemplateBox[{
           CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
           StyleBox[
           "\"Cloud Access\"", FontSize -> 12, Editable -> False, 
            StripOnInput -> False]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle", ShowStringCharacters -> False},
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Top}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlj0FOwzAQRRFNSAMVYsO+F8ghIotKEaitai7guBMR1fZYnhkJ3x5HSAXEbv6b/xevv+\
90rTk70HcH4Sjc6UZ9gL3Aebqh6m2mQuqBwdO0+s7TLVUnKYt2jwwj4oV+ndfv09Ek4xy47SukAI7+\
k2t3oxzKedtbC0R/U6fXx4QREmf9rNBHw/M4u5nzDgxLgtJoDpFnDERtL4y+\
NOyigU58ILXq9OMQGFJMwGYp6rYPWctIUOQelFAZDaHIU70zjuAHLt5U7TEUtjkBoSQL7zmCbl4+\
jY8OvgA43nBJ"},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->359275078,ExpressionUUID->"06ea075a-61bd-4618-a647-9e5041e4db19"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the example documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a6cae47c-4c64-4f2f-a58c-afab4c598a4a"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->50433876,ExpressionUUID->"9afd40bf-fdfd-4035-ba6b-b8bb412dbcb4"],

Cell["Additional information about limitations, issues, etc.", "Text",
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->3773185,ExpressionUUID->"58ce48af-4e66-4a71-b339-5de3e52f5a3e"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1091, Automatic},
WindowMargins->{{174, Automatic}, {Automatic, 50}},
TaggingRules->{
 "ResourceType" -> "Example", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "2023.03.30", "CreationTimestamp" -> 
  3.89095521294848`16.34263122102222*^9, "UpdatedTimestamp" -> 
  3.890955212948555`16.342631221022227*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "Contexts" -> {"ExampleResource`", "ExampleResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged", "HintPods" -> True, "LoadingMethod" -> 
    "Paclet", "PacletName" -> "ExampleResource", "SourceID" -> 
    "d65b3f47f2a6f9c214c0e62149d7041d2c6177bd"}, "ToolsOpen" -> True, 
  "StatusMessage" -> "", "SubmissionReviewData" -> {"Review" -> False}},
CreateCellID->True,
DynamicEvaluationTimeout->60,
FrontEndVersion->"13.3 for Mac OS X x86 (64-bit) (July 27, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], WindowToolbars -> {}, DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.14902, 0.51765, 0.54902], CellTags -> {"MainDockedCell"}, 
       CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}], 
   Cell["Hint Styles", "Section"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell["Template Boxes", "Section"], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.62744, 0.62744, 0.62744, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.62744, 0.62744, 0.62744, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.090909], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.045818], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4oSnF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dp8u+SYJzFB0kGQJ49MtUnBYIKV/V4UNRis5GHKskYl6AlOnDNUHM0cFaq4I
nD/niMKGogx+OB+oO8X6Phtcf/+hrxox/Qxw80HKftZ9sYfZ/7BKZJ37w1f2
MPfB+DD3w/h+SQIRlluE4foh9vDBzYfQHHD7izMmvq2xZ4K7r9CW6/rigr/2
MPfD+DD/wfgw/8P0w8IHZj4s/GD2w8IX5j708AcA2Xetpg==
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQ3b48/JRRi4jD3qBpin2m8g5n6j32194VhvNZnvdo
vPUVdoh2sntxM0feQfiT4/m0q0IOQNnSwtvyDmxCIvbHYoQcMhnyG1lUFRyk
eR/oTlAAym/iKVyTjeAf2aiXt/gggt+odqhtubgiXP+k00CLYxXh5mdrf5t+
d7Ii3P5LDPeYOE8pwt33vfTBHMGnig4w98P4j5fOPqJgIArn539oPRlyUBSu
/9OGgOxZ5mJw88sKgS5aKwa3XzOm/9DXF2Jw98H4MPfD+DD/wfTD/A8zHxY+
MPth4QdzHyx80cMfAIsMpwk=
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQXTFnkfJOGwmHsNp125Lq+R1g/G8aMf2HvvI4KP39
VvrgjgAGH6b+c19wicp0IQeBKrPVduICcL6EWjDr4ksCqPLTBeH8211/U7+n
CMH5S+7v45tjLAznX773gHvySwS/qdhtyrc2ETj/04aA7FnfReH8RxHi2y8e
EIPzNUHOzRCH8x8vnX1E4QOCP+/98mPe5RJw/o9goAoWSTj/6vMs7W/TJR0O
X9ZOlVwk4PB2no3OlVsI/jKgcRs+STlonhY4vstCzCFoh1zr64syDkBXssXP
EHO4WvFSzbADwa9JNAo1yJKA82H+gfFh/oXxA29JA7Ug+GY2e4OmJQrB+f83
VX/aMEEQzrerjFhhelYAzofFB3r8AgApYdcE
                "]}]}, {
              FaceForm[
               RGBColor[0.99998, 0.99998, 0.99998, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.98824, 0.41961, 0.20392], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.66667], 0], 
                    Thickness[
                    NCache[2/45, 0.044444]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
          RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                 TagBox[
                  GridBox[{{"\"Insert ResourceObject\"", 
                    GraphicsBox[{
                    Thickness[0.05], {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {
                    18., 18.328}, {17.328, 19.}, {16.5, 19.}, {4.5, 19.}, {
                    3.6716, 19.}, {3., 18.328}, {3., 17.5}, {3., 3.5}, {3., 
                    2.6716}, {3.6716, 2.}, {4.5, 2.}, {16.5, 2.}, {17.328, 
                    2.}, {18., 2.6716}, {18., 3.5}}}]}, {
                    FaceForm[{
                    GrayLevel[0.34902], 
                    Opacity[1.]}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{5., 12.}, {5., 11.}, {2., 
                    11.}, {2., 12.}}, {{2., 10.}, {2., 9.}, {5., 9.}, {5., 
                    10.}}, {{2., 14.}, {2., 13.}, {5., 13.}, {5., 14.}}, {{2.,
                     8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{2., 6.}, {2., 
                    5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {2., 
                    17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 
                    3.}, {5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 
                    15.}, {5., 16.}}}]}, {
                    FaceForm[{
                    GrayLevel[1], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 
                    18.}, {16.5, 18.}, {16.776, 18.}, {17., 17.776}, {17., 
                    17.5}, {17., 3.5}, {17., 3.2236}, {16.776, 3.}, {16.5, 
                    3.}, {4.5, 3.}, {4.2236, 3.}, {4., 3.2236}, {4., 3.5}, {
                    4., 17.5}, {4., 17.776}, {4.2236, 18.}, {4.5, 18.}}}]}, {
                    FaceForm[{
                    RGBColor[0.86667, 0.06667, 0.], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQrbtp7vvlx3QcGMBA1aH5wKmFrt/0He77907Pm6Th
kCQQYbnFQ9shxRokoulw+KtGTP8hbQenhKcXlKL1HEIeL519JEHdASydpwPV
r+Iw54jChiIPAwdlr+pm/R4luPyd643FbiEyDue/Bz9eCtTv8bBKZJ27rMOn
S75JAjM0HZRyKqqWvhF2+FWXtadksoaDKlvjVGdvKbj7zq06fzUMKB8FclCu
osMuTx4mbaD+qxUv1QwzFBwOrlji5xAs4+CSmf+h1VPcAey9biWH3LDadduU
pOHum/i2xt70npDDcW/zTkeg+yWmXuHMAMrD/Afxtzjc/w3bHZoepSvAw2fj
w5dTN+UoOgAARNmGkQ==
                    "], {{14.809, 9.3454}, {13.744, 9.7099}, {13.017, 
                    10.654}, {13.953, 10.307}}, {{11.371, 7.1364}, {10.712, 
                    6.0044}, {10.712, 7.177}, {11.398, 8.1788}}, {{9.8213, 
                    12.979}, {8.6908, 13.381}, {8.0367, 14.264}, {9.2241, 
                    13.743}}, {{11.738, 13.743}, {12.925, 14.264}, {12.271, 
                    13.381}, {11.141, 12.979}}, {{13.177, 12.7}, {12.603, 
                    11.886}, {12.637, 13.113}, {13.309, 14.019}}, {{10.481, 
                    7.6484}, {9.6004, 8.9331}, {10.481, 10.128}, {11.361, 
                    8.9331}}, {{8.8261, 11.306}, {8.782, 12.866}, {10.249, 
                    12.344}, {10.249, 10.826}}, {{10.712, 12.344}, {12.179, 
                    12.866}, {12.137, 11.306}, {10.712, 10.826}}, {{7.7855, 
                    12.7}, {7.6538, 14.019}, {8.325, 13.113}, {8.3587, 
                    11.887}}, {{10.114, 10.394}, {9.2339, 9.2003}, {7.7378, 
                    9.6414}, {8.6871, 10.875}}, {{9.5648, 8.1792}, {10.249, 
                    7.177}, {10.249, 6.004}, {9.5887, 7.1366}}, {{10.848, 
                    10.394}, {12.275, 10.875}, {13.224, 9.6414}, {11.728, 
                    9.2003}}, {{15.126, 12.009}, {14.018, 10.766}, {12.711, 
                    11.252}, {13.495, 12.364}}, {{10.481, 15.384}, {11.321, 
                    13.946}, {10.481, 12.872}, {9.641, 13.946}}, {{5.8362, 
                    12.01}, {7.467, 12.365}, {8.2511, 11.252}, {6.9436, 
                    10.767}}, {{7.009, 10.307}, {7.9452, 10.655}, {7.2182, 
                    9.7099}, {6.152, 9.3459}}, {{6.2515, 8.9006}, {7.3612, 
                    9.2795}, {8.5462, 8.9302}, {7.5545, 8.6165}}, {{7.776, 
                    8.2109}, {9.1027, 8.6306}, {9.1365, 7.2193}, {7.6098, 
                    6.5491}}, {{11.824, 7.219}, {11.859, 8.6305}, {13.185, 
                    8.2104}, {13.351, 6.5484}}, {{13.407, 8.6159}, {12.415, 
                    8.9301}, {13.6, 9.2795}, {14.71, 8.8998}}}]}}, 
                    AspectRatio -> Automatic, ImageSize -> 12, 
                    PlotRange -> {{0., 20.}, {0., 20.}}, PlotRangePadding -> 
                    0, BaselinePosition -> Scaled[0.2]]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Center}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                 StripOnInput -> False], 
                "\"Insert an icon representing the ResourceObject\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1728928931864632482; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "InsertResourceObject"; 
                    DefinitionNotebookClient`InsertResourceObjectIcon[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1728928931864632482]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7071186616034202283; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7071186616034202283]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4937992391498864149; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4937992391498864149]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5468327008079127585; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5468327008079127585]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                  "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                  Interleaving -> True]}, Background -> 
              RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               RGBColor[0.94118, 0.94118, 0.94118], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6873451360295576381; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6873451360295576381]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6172106006839516455; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6172106006839516455]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3926450748983119469; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3926450748983119469]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4086190758423840734; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4086190758423840734]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8662206799689618007; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8662206799689618007]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4246462567992284997; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4246462567992284997]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[0.32941, 0.32941, 0.32941], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[0.83235, 0.83235, 0.83235], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJytlD0OgkAQhYk2lnbW3sLW0tafjgYiEgswQRNjRcUdOAANR6Gj4RJg4Q3w
M6PEGJGN7Esgw9s3L7Mzy07tw3I3MAzjOOK1tM7zILAuqzEfG/+4d31nu/BP
jusEM3sIOXk+j7jugooG3PqhzSTP8zRNoyhyXiCGgVcxqaoqjuN1O1hF88Ok
KArP81CappkkSZZl1xeIYeBZRYPyqwn+4hCGYVmWX7sHz6r4NPW8m8gu0HQO
QnzQf5jQMdlFWw0f9ci+pM+NCZ2HZNedDgKU6Ml6N2GCkHRP0QQlerLIldNI
wEmAZAqKJijRkyUmoL+JlkpqfT3RMh0t50TLidX172j5i3XdJw163mx/oHMQ
tdptfwflbjTJ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJytlDFPg0AYhokujm6dnbrYsYmTiWNXWqMrRKAO0AQ0ps4yObKQ0LUD/4aF
X8HSf1Cf5quEYCkXuS8HOd57vyd33x13Y69M98IwjOiKl2l9PIShtZ5f8/EY
RK9e4LzMgjfHc8I7+xJxdHwO/X1fqHiI3bDoghRFked5HMfOb9BHQVeBVFWV
pumiOxjFcwZSlqXv+zjNp+f798/p1/dtspFGHwWdUTw4T0LgC2HmLidJNs62
fxs6o8Kp59OEyCrwnExvNuHgb0GomKyiaw6t+ci6pM41hMojsupegjSc+Mlq
QthBRKqnCMGJnyxy5TTS4SQgsguKEJz4yRIIMRyiZSYaa6Jld7ScEy0nVte/
o+Uv1nWf1DHwZvtHqFzjKrf9D0PJGfA=
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJytlDFuwkAQRS3SUNJRR0oDLU2aFOmgNZAGCnCyIEDeIIOEcgDfwVfwbdz4
FG64QXhoEssCjFd4R2Nr/PfP18x4d5+9b3fRcBxn1+Tlzg/vQTD/Gbb4GOvd
aqnV10Dv1VIFr94TYPvvOce/VWbCwY71rEwkSZI4jsMwVP9GDAJuIpJlWRRF
o3JjFc4dkTRNfd+H6Y4/3mafPbXubLbixCDgrMKBeVMEfVHoT6bdzfZF768d
nFXRyespikgXcG6mF1104F+IMDHpoqyGi3qkL5lzLsLkAem6UkEcJnyyiiL8
QUCmZygCEz5Z5MpuJGAnAHYMehGHCZ8sEcHqi1ipxOJMrPwdK/vEyo61dXas
nGJb90luNW+2B8zkGje57U/Hw9ZQ
                   "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
                   Interleaving -> True]}, Background -> 
               RGBColor[0.94118, 0.94118, 0.94118], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                RGBColor[0.94118, 0.94118, 0.94118], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7544339529118446740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7544339529118446740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1923617830619908649; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1923617830619908649]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7488386888561581898; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`StyleToggle["Excluded"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7488386888561581898]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as hidden\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7435904361823047122; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as hidden"; 
                    DefinitionNotebookClient`StyleToggle["HiddenMaterial"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7435904361823047122]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {1 -> RGBColor[0.94118, 0.94118, 0.94118]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.0375], 
                  StyleBox[{
                    
                    JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{
                    0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                    0}}}, CompressedData["
1:eJxTTMoPSmVmYGAQBmImKAYDAWcHH/NOx4RSLwg91cMBLP7A1QFdHswvcIfw
VR0w5GfkCTUfyLJzyJj4tsZ+qi12/Qo2EHoCpvlgfaUGDltOlO2bP8sNwje1
hPK9MeTR7SMkD7bnKNSeUCOI/Re8IeJfnbDLf3Bx0L+rwtZ4VYU4eaA5YHtf
GWLY/50tfobPVUmIuJc1RD8DH4Re4IIhf1Hp9s+6LBW4eYT0Q9TrQfz/ywF7
fDjoQ+gGRWg8G0DNM8Mu72Dv8JZ3n8HMVaIE5cHmdEHjl0HPAQBjMcGK
                    "], 
                    CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                    0, 0, 0, 0, 0}]}, {
                    CapForm["Butt"], 
                    JoinForm[{"Miter", 10.}], 
                    Thickness[0.023438], 
                    RGBColor[0.6, 0.6, 0.6, 1.]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{45., 10.417}, {45., 8.6907}, {43.601, 7.2916}, {
                    41.875, 7.2916}, {40.149, 7.2916}, {38.75, 8.6907}, {
                    38.75, 10.417}, {38.75, 12.142}, {40.149, 13.542}, {
                    41.875, 13.542}, {43.601, 13.542}, {45., 12.142}, {45., 
                    10.417}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{22.292, 8.75}, {22.292, 5.068}, {19.307, 
                    2.0833}, {15.625, 2.0833}, {11.943, 2.0833}, {8.9583, 
                    5.068}, {8.9583, 8.75}, {8.9583, 12.432}, {11.943, 
                    15.417}, {15.625, 15.417}, {19.307, 15.417}, {22.292, 
                    12.432}, {22.292, 8.75}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{40., 29.583}, {40., 24.291}, {35.709, 20.}, {
                    30.417, 20.}, {25.124, 20.}, {20.833, 24.291}, {20.833, 
                    29.583}, {20.833, 34.876}, {25.124, 39.167}, {30.417, 
                    39.167}, {35.709, 39.167}, {40., 34.876}, {40., 
                    29.583}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{59.167, 37.917}, {59.167, 35.961}, {57.581, 
                    34.375}, {55.625, 34.375}, {53.669, 34.375}, {52.083, 
                    35.961}, {52.083, 37.917}, {52.083, 39.873}, {53.669, 
                    41.458}, {55.625, 41.458}, {57.581, 41.458}, {59.167, 
                    39.873}, {59.167, 37.917}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{22.083, 45.208}, {22.083, 42.102}, {19.565, 
                    39.583}, {16.458, 39.583}, {13.352, 39.583}, {10.833, 
                    42.102}, {10.833, 45.208}, {10.833, 48.315}, {13.352, 
                    50.833}, {16.458, 50.833}, {19.565, 50.833}, {22.083, 
                    48.315}, {22.083, 45.208}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{7.2917, 41.25}, {7.2917, 39.294}, {5.706, 
                    37.708}, {3.75, 37.708}, {1.794, 37.708}, {0.20833, 
                    39.294}, {0.20833, 41.25}, {0.20833, 43.206}, {1.794, 
                    44.792}, {3.75, 44.792}, {5.706, 44.792}, {7.2917, 
                    43.206}, {7.2917, 41.25}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{51.458, 32.292}, {51.458, 29.76}, {49.406, 
                    27.708}, {46.875, 27.708}, {44.344, 27.708}, {42.292, 
                    29.76}, {42.292, 32.292}, {42.292, 34.823}, {44.344, 
                    36.875}, {46.875, 36.875}, {49.406, 36.875}, {51.458, 
                    34.823}, {51.458, 32.292}}}]}, {
                    FaceForm[
                    RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{30.625, 43.125}, {30.625, 41.744}, {29.506, 
                    40.625}, {28.125, 40.625}, {26.744, 40.625}, {25.625, 
                    41.744}, {25.625, 43.125}, {25.625, 44.506}, {26.744, 
                    45.625}, {28.125, 45.625}, {29.506, 45.625}, {30.625, 
                    44.506}, {30.625, 43.125}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{44.792, 52.917}, {44.792, 49.235}, {41.807, 
                    46.25}, {38.125, 46.25}, {34.443, 46.25}, {31.458, 
                    49.235}, {31.458, 52.917}, {31.458, 56.599}, {34.443, 
                    59.583}, {38.125, 59.583}, {41.807, 59.583}, {44.792, 
                    56.599}, {44.792, 52.917}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{12.083, 27.292}, {12.083, 24.185}, {9.5649, 
                    21.667}, {6.4583, 21.667}, {3.3517, 21.667}, {0.83333, 
                    24.185}, {0.83333, 27.292}, {0.83333, 30.398}, {3.3517, 
                    32.917}, {6.4583, 32.917}, {9.5649, 32.917}, {12.083, 
                    30.398}, {12.083, 27.292}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{19.375, 22.292}, {19.375, 20.911}, {18.256, 
                    19.792}, {16.875, 19.792}, {15.494, 19.792}, {14.375, 
                    20.911}, {14.375, 22.292}, {14.375, 23.672}, {15.494, 
                    24.792}, {16.875, 24.792}, {18.256, 24.792}, {19.375, 
                    23.672}, {19.375, 22.292}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{31.042, 15.}, {31.042, 13.619}, {29.922, 12.5}, {
                    28.542, 12.5}, {27.161, 12.5}, {26.042, 13.619}, {26.042, 
                    15.}, {26.042, 16.381}, {27.161, 17.5}, {28.542, 17.5}, {
                    29.922, 17.5}, {31.042, 16.381}, {31.042, 15.}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{59.792, 18.333}, {59.792, 14.882}, {56.994, 
                    12.083}, {53.542, 12.083}, {50.09, 12.083}, {47.292, 
                    14.882}, {47.292, 18.333}, {47.292, 21.785}, {50.09, 
                    24.583}, {53.542, 24.583}, {56.994, 24.583}, {59.792, 
                    21.785}, {59.792, 18.333}}}]}, {
                    FaceForm[
                    RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{29.167, 55.208}, {29.167, 53.022}, {27.394, 
                    51.25}, {25.208, 51.25}, {23.022, 51.25}, {21.25, 
                    53.022}, {21.25, 55.208}, {21.25, 57.394}, {23.022, 
                    59.167}, {25.208, 59.167}, {27.394, 59.167}, {29.167, 
                    57.394}, {29.167, 55.208}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{51.667, 43.75}, {51.667, 42.369}, {50.547, 
                    41.25}, {49.167, 41.25}, {47.786, 41.25}, {46.667, 
                    42.369}, {46.667, 43.75}, {46.667, 45.131}, {47.786, 
                    46.25}, {49.167, 46.25}, {50.547, 46.25}, {51.667, 
                    45.131}, {51.667, 43.75}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{17.917, 33.958}, {17.917, 32.463}, {16.704, 
                    31.25}, {15.208, 31.25}, {13.713, 31.25}, {12.5, 
                    32.463}, {12.5, 33.958}, {12.5, 35.454}, {13.713, 
                    36.667}, {15.208, 36.667}, {16.704, 36.667}, {17.917, 
                    35.454}, {17.917, 33.958}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{11.875, 17.917}, {11.875, 16.996}, {11.129, 
                    16.25}, {10.208, 16.25}, {9.2879, 16.25}, {8.5417, 
                    16.996}, {8.5417, 17.917}, {8.5417, 18.837}, {9.2879, 
                    19.583}, {10.208, 19.583}, {11.129, 19.583}, {11.875, 
                    18.837}, {11.875, 17.917}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{39.583, 17.917}, {39.583, 16.996}, {38.837, 
                    16.25}, {37.917, 16.25}, {36.996, 16.25}, {36.25, 
                    16.996}, {36.25, 17.917}, {36.25, 18.837}, {36.996, 
                    19.583}, {37.917, 19.583}, {38.837, 19.583}, {39.583, 
                    18.837}, {39.583, 17.917}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}}}, {{{36.25, 5.4166}, {36.25, 2.6552}, {34.011, 
                    0.41662}, {31.25, 0.41662}, {28.489, 0.41662}, {26.25, 
                    2.6552}, {26.25, 5.4166}, {26.25, 8.178}, {28.489, 
                    10.417}, {31.25, 10.417}, {34.011, 10.417}, {36.25, 
                    8.178}, {36.25, 5.4166}}}]}, {
                    FaceForm[
                    RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                   False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 32}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Example Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {
                    2 -> RGBColor[0.32941, 0.32941, 0.32941]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> 
                 RGBColor[0.32941, 0.32941, 0.32941], StripOnInput -> 
                 False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Example Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> 
               RGBColor[0.32941, 0.32941, 0.32941], StripOnInput -> False], 
              "https://resources.wolframcloud.com/ExampleRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Open Sample\"", 
                "\"View a completed sample definition notebook\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1953775238739395670; (
                DefinitionNotebookClient`$ClickedButton = "Open Sample"; 
                DefinitionNotebookClient`ViewExampleNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1953775238739395670]]& , 
              "\"View a completed sample definition notebook\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring resources\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 4428028526384162518; (
                DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
                DefinitionNotebookClient`ViewStyleGuidelines[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[4428028526384162518]]& , 
              "\"View general guidelines for authoring resources\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 12, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0.05]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 1908941340027841465; (
                DefinitionNotebookClient`$ClickedButton = "Tools"; 
                DefinitionNotebookClient`ToggleToolbar[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[1908941340027841465]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.96667, 0.98431, 0.97059]], "Grid"], 
            TemplateBox[{
              
              TemplateBox[{
               "\"Check\"", "\"Check notebook for potential errors\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 3941141659801008137; (
                DefinitionNotebookClient`$ClickedButton = "Check"; 
                DefinitionNotebookClient`CheckDefinitionNotebook[
                  ButtonNotebook[]]), 
               DefinitionNotebookClient`ButtonCodeID[3941141659801008137]]& , 
              "\"Check notebook for potential errors\"", False}, 
             "OrangeButtonTemplate"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 6058522267645278627; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[6058522267645278627]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3749335217312873674; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3749335217312873674]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"For my cloud account\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7250853967221918483; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "For my cloud account"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPrivate"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7250853967221918483]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4892365933713591120; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4892365933713591120]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], 
              "\"In this session only (without documentation)\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7309290475811609296; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only (without documentation)"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7309290475811609296]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             Alignment -> Right, StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your example submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    2169377100431483360; (
                    DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   2169377100431483360]]& , 
                  "\"Submit changes to update your example submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your example to the Wolfram Example \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    850153740503147579; (
                    DefinitionNotebookClient`$ClickedButton = "Submit"; 
                    With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]]), 
                   DefinitionNotebookClient`ButtonCodeID[
                   850153740503147579]]& , 
                  "\"Submit your example to the Wolfram Example Repository\"",
                   True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.93333, 0.96863, 0.94118], 
              RGBColor[0.14902, 0.51765, 0.54902]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.93333, 0.96863, 0.94118], 2 -> 
              RGBColor[0.14902, 0.51765, 0.54902]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.93333, 0.96863, 0.94118]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.0375], 
               StyleBox[{
                 
                 JoinedCurveBox[{{{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 
                  2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                  0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{
                  0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 0}}, {{0, 2, 
                  0}}, {{0, 2, 0}}, {{0, 2, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGAQBmImKAYDAWcHH/NOx4RSLwg91cMBLP7A1QFdHswvcIfw
VR0w5GfkCTUfyLJzyJj4tsZ+qi12/Qo2EHoCpvlgfaUGDltOlO2bP8sNwje1
hPK9MeTR7SMkD7bnKNSeUCOI/Re8IeJfnbDLf3Bx0L+rwtZ4VYU4eaA5YHtf
GWLY/50tfobPVUmIuJc1RD8DH4Re4IIhf1Hp9s+6LBW4eYT0Q9TrQfz/ywF7
fDjoQ+gGRWg8G0DNM8Mu72Dv8JZ3n8HMVaIE5cHmdEHjl0HPAQBjMcGK
                  "], 
                  CurveClosed -> {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
                    0, 0, 0, 0}]}, {
                 CapForm["Butt"], 
                 JoinForm[{"Miter", 10.}], 
                 Thickness[0.023438], 
                 RGBColor[0.6, 0.6, 0.6, 1.]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{45., 10.417}, {45., 8.6907}, {43.601, 7.2916}, {
                  41.875, 7.2916}, {40.149, 7.2916}, {38.75, 8.6907}, {38.75, 
                  10.417}, {38.75, 12.142}, {40.149, 13.542}, {41.875, 
                  13.542}, {43.601, 13.542}, {45., 12.142}, {45., 
                  10.417}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{22.292, 8.75}, {22.292, 5.068}, {19.307, 2.0833}, {
                  15.625, 2.0833}, {11.943, 2.0833}, {8.9583, 5.068}, {8.9583,
                   8.75}, {8.9583, 12.432}, {11.943, 15.417}, {15.625, 
                  15.417}, {19.307, 15.417}, {22.292, 12.432}, {22.292, 
                  8.75}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{40., 29.583}, {40., 24.291}, {35.709, 20.}, {
                  30.417, 20.}, {25.124, 20.}, {20.833, 24.291}, {20.833, 
                  29.583}, {20.833, 34.876}, {25.124, 39.167}, {30.417, 
                  39.167}, {35.709, 39.167}, {40., 34.876}, {40., 
                  29.583}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{59.167, 37.917}, {59.167, 35.961}, {57.581, 
                  34.375}, {55.625, 34.375}, {53.669, 34.375}, {52.083, 
                  35.961}, {52.083, 37.917}, {52.083, 39.873}, {53.669, 
                  41.458}, {55.625, 41.458}, {57.581, 41.458}, {59.167, 
                  39.873}, {59.167, 37.917}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{22.083, 45.208}, {22.083, 42.102}, {19.565, 
                  39.583}, {16.458, 39.583}, {13.352, 39.583}, {10.833, 
                  42.102}, {10.833, 45.208}, {10.833, 48.315}, {13.352, 
                  50.833}, {16.458, 50.833}, {19.565, 50.833}, {22.083, 
                  48.315}, {22.083, 45.208}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{7.2917, 41.25}, {7.2917, 39.294}, {5.706, 
                  37.708}, {3.75, 37.708}, {1.794, 37.708}, {0.20833, 
                  39.294}, {0.20833, 41.25}, {0.20833, 43.206}, {1.794, 
                  44.792}, {3.75, 44.792}, {5.706, 44.792}, {7.2917, 
                  43.206}, {7.2917, 41.25}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{51.458, 32.292}, {51.458, 29.76}, {49.406, 
                  27.708}, {46.875, 27.708}, {44.344, 27.708}, {42.292, 
                  29.76}, {42.292, 32.292}, {42.292, 34.823}, {44.344, 
                  36.875}, {46.875, 36.875}, {49.406, 36.875}, {51.458, 
                  34.823}, {51.458, 32.292}}}]}, {
                 FaceForm[
                  RGBColor[0.23529, 0.4549, 0.55294, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{30.625, 43.125}, {30.625, 41.744}, {29.506, 
                  40.625}, {28.125, 40.625}, {26.744, 40.625}, {25.625, 
                  41.744}, {25.625, 43.125}, {25.625, 44.506}, {26.744, 
                  45.625}, {28.125, 45.625}, {29.506, 45.625}, {30.625, 
                  44.506}, {30.625, 43.125}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{44.792, 52.917}, {44.792, 49.235}, {41.807, 
                  46.25}, {38.125, 46.25}, {34.443, 46.25}, {31.458, 
                  49.235}, {31.458, 52.917}, {31.458, 56.599}, {34.443, 
                  59.583}, {38.125, 59.583}, {41.807, 59.583}, {44.792, 
                  56.599}, {44.792, 52.917}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{12.083, 27.292}, {12.083, 24.185}, {9.5649, 
                  21.667}, {6.4583, 21.667}, {3.3517, 21.667}, {0.83333, 
                  24.185}, {0.83333, 27.292}, {0.83333, 30.398}, {3.3517, 
                  32.917}, {6.4583, 32.917}, {9.5649, 32.917}, {12.083, 
                  30.398}, {12.083, 27.292}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{19.375, 22.292}, {19.375, 20.911}, {18.256, 
                  19.792}, {16.875, 19.792}, {15.494, 19.792}, {14.375, 
                  20.911}, {14.375, 22.292}, {14.375, 23.672}, {15.494, 
                  24.792}, {16.875, 24.792}, {18.256, 24.792}, {19.375, 
                  23.672}, {19.375, 22.292}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{31.042, 15.}, {31.042, 13.619}, {29.922, 12.5}, {
                  28.542, 12.5}, {27.161, 12.5}, {26.042, 13.619}, {26.042, 
                  15.}, {26.042, 16.381}, {27.161, 17.5}, {28.542, 17.5}, {
                  29.922, 17.5}, {31.042, 16.381}, {31.042, 15.}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{59.792, 18.333}, {59.792, 14.882}, {56.994, 
                  12.083}, {53.542, 12.083}, {50.09, 12.083}, {47.292, 
                  14.882}, {47.292, 18.333}, {47.292, 21.785}, {50.09, 
                  24.583}, {53.542, 24.583}, {56.994, 24.583}, {59.792, 
                  21.785}, {59.792, 18.333}}}]}, {
                 FaceForm[
                  RGBColor[0.40784, 0.67059, 0.71765, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{29.167, 55.208}, {29.167, 53.022}, {27.394, 
                  51.25}, {25.208, 51.25}, {23.022, 51.25}, {21.25, 53.022}, {
                  21.25, 55.208}, {21.25, 57.394}, {23.022, 59.167}, {25.208, 
                  59.167}, {27.394, 59.167}, {29.167, 57.394}, {29.167, 
                  55.208}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{51.667, 43.75}, {51.667, 42.369}, {50.547, 
                  41.25}, {49.167, 41.25}, {47.786, 41.25}, {46.667, 
                  42.369}, {46.667, 43.75}, {46.667, 45.131}, {47.786, 
                  46.25}, {49.167, 46.25}, {50.547, 46.25}, {51.667, 
                  45.131}, {51.667, 43.75}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{17.917, 33.958}, {17.917, 32.463}, {16.704, 
                  31.25}, {15.208, 31.25}, {13.713, 31.25}, {12.5, 32.463}, {
                  12.5, 33.958}, {12.5, 35.454}, {13.713, 36.667}, {15.208, 
                  36.667}, {16.704, 36.667}, {17.917, 35.454}, {17.917, 
                  33.958}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{11.875, 17.917}, {11.875, 16.996}, {11.129, 
                  16.25}, {10.208, 16.25}, {9.2879, 16.25}, {8.5417, 
                  16.996}, {8.5417, 17.917}, {8.5417, 18.837}, {9.2879, 
                  19.583}, {10.208, 19.583}, {11.129, 19.583}, {11.875, 
                  18.837}, {11.875, 17.917}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{39.583, 17.917}, {39.583, 16.996}, {38.837, 
                  16.25}, {37.917, 16.25}, {36.996, 16.25}, {36.25, 16.996}, {
                  36.25, 17.917}, {36.25, 18.837}, {36.996, 19.583}, {37.917, 
                  19.583}, {38.837, 19.583}, {39.583, 18.837}, {39.583, 
                  17.917}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}}, {{{36.25, 5.4166}, {36.25, 2.6552}, {34.011, 
                  0.41662}, {31.25, 0.41662}, {28.489, 0.41662}, {26.25, 
                  2.6552}, {26.25, 5.4166}, {26.25, 8.178}, {28.489, 
                  10.417}, {31.25, 10.417}, {34.011, 10.417}, {36.25, 
                  8.178}, {36.25, 5.4166}}}]}, {
                 FaceForm[
                  RGBColor[0.58431, 0.81961, 0.63922, 1.]]}, StripOnInput -> 
                False]}, {
              ImageSize -> {Automatic, 12}, ImagePadding -> {{5, 0}, {0, 0}}, 
               BaselinePosition -> Scaled[0.25], ImageSize -> 32}], 
             "Wolfram Example Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentReplyIcon"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.076923], 
         FaceForm[{#, 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{1.5, 7.5}, {6.5, 11.5}, {
          6.5, 3.5}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJw9U2tIVEEUvq5iVkttZmdfuo/ZbQukJGKVqPBLUTGJ0h9hVLIJRYhUVJj2
AjGRWCKiF0llZWRCSEnZExEJ06CotaiQyH7EIrthT3u6NXPn3jswnDlzzzlz
vu8711u9vWJzsqIoSXwv5tuk6IsgrQvOnLf+1CRC5ZKbg3WJAIJV90rNJoJF
XOR6sebI6W3pyXq8DxccIoGwa+uxj/v/McxNbTxZOJ3w4Rkb+ZVgWGk2ZbcQ
Yfm0V+07Jhm6St7vzVhI2JfBT78ZCkI8cj2hqe/xxaIJJm0PoWEssCgtzvCc
lzlYYwXP5iUYHpXlHV4xasXLeh4wyKCWX2fDqcJwbfQ+w4F83vGQDT1fJ1/U
dzJ842bsih1XB3hiI0NzrPyOq9mBPb1tjpyNDBXci5U7MVQnLhji4nMsE+9W
c6ARL3i3XSWbXNiiLi8EzPxbbqydsaD73LgHJ2wp/OiFoKVJ8Ui+Chha6M3T
H8NZUMPm+XB9p8h0QtATjvtxqUh0SBgV76QHZN+lszReA5pNQ66o1+8HV6O3
rdWCBIcTuKHxHJ4NQdO1sx4Nxxy4VYBug2dVt4lMnB/vGCi7TSgWz/504Etk
VbXlNSGkCmWHqFYbJXziYXlT7VKXEdLq2DDMwyvvksTZZ5W4OgiCjmCVFTUP
dh+3HSKJ8y9hqUogIfqn83PkCUndQoTLQsZ2gpperL3fQJLXIMEn5F5GaD3D
l50g2O3OIkhiCUf7v8/fMJOMuRPTmT2FjLlU+0ghY471+dV93epzr/sPPaJz
u3Ev65sNX/8//gP5Ei2u
          "]]}, AspectRatio -> Automatic, ImageSize -> {13., 13.}, 
        PlotRange -> {{0., 13.}, {0., 13.}}]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11], "\[SpanFromLeft]"}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9], 
            ItemBox[
             ButtonBox[
              TagBox[
               StyleBox[
                TemplateBox[{"\"Reply \[RightGuillemet]\"", 
                  StyleBox["\"Reply \[RightGuillemet]\"", "HyperlinkActive"], 
                  BaseStyle -> "Hyperlink"}, "MouseoverTemplate"], FontSize -> 
                9], 
               MouseAppearanceTag["LinkHand"]], BaseStyle -> "Hyperlink", 
              ButtonFunction :> (SelectionMove[
                 ParentCell[
                  EvaluationCell[]], After, Cell]; 
               DefinitionNotebookClient`CommentInsert[]), Evaluator -> 
              Automatic, Method -> "Queued"], Alignment -> Right]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.83235, 0.83235, 0.83235]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 2045406886999866622; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[2045406886999866622]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYnFYwIEANUAVWI1BGg+MSbAzYG7B9kQ/L7A6i80
Q4AhRpIJEAAJZ7ghwJAnwxCgLmRDgDFIhiFAXUC9kNQIZABTAhmGAHVBDAEC
yg2hikuoGCZUiR2qpBOqpFhq5R2q5GJqlSfUKtnILmPxA2JKewB9E9G3
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYkFqgwKj7ArrTJt6daZPAeCgGygCFAcKAtUA1SJ
1RCg+RATPNMydCfPVp+9FBMBxYGyEHPg7kE2BOILoBqs2pERxBygejRDgCEG
8QUuN6C5B+IvSDjDDQGGPFAQ6GuCJkAQUCVQPVAXsiHAGAQKAkOPSEOAKoHq
gbqAeiGpEcgApgSgIDAWiDQEqBKoHqgLYggQUG4IVVxCxTChSuxQJZ1QJcVS
K+9QJRdTqzyhVslGdhmLHxBT2gMANFwcQQ==
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True], "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAQK2lhxKEyxD9qgbrvCK35DT/yCgIArKBIkBxYgzRaO52
yMwJwQ2AskA1eAzRrW7yjYkFqgwKDbNNSDZOzdLMLoAgIBsoAhQHygLVAFVi
NQRoPsQEj+gYrewClbwSTAQUB8pCzIG7B9kQiC+AarBqR0YQc4Dq0QwBhhjE
F7jcgOYeiL8g4Qw3BBjyQEGgrwmaAEFAlUD1QF3IhgBjECgIDD0iDQGqBKoH
6gLqhaRGIAOYEoCCmkT4BYKAKoHqgboghgAB5YZQxSVUDBOqxA5V0glVUiy1
8g5VcjG1yhNqlWxkl7H4ATGlPQC4Vtih
             "], "Byte", ColorSpace -> "RGB", ImageResolution -> 144, 
             Interleaving -> True]}, Background -> 
         RGBColor[0.14902, 0.51765, 0.54902], Method -> "Queued", 
         ImageSize -> {All, 23}, Evaluator -> Automatic], FrameStyle -> 
        Directive[
          RGBColor[0.14902, 0.51765, 0.54902], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.055556], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh8qXaoYcOfoO
m+a+X37stKZDTP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4Pw5RxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA/Dn+d
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.1753, 7.4169}, {
             7.7969, 11.308}, {7.7969, 13.38}, {10.12, 13.38}, {10.12, 
             11.308}, {9.7415, 7.4169}, {8.1753, 7.4169}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQDQFKDg+rRNa5P+RzKPOXE8vSVYTz8z+0ngxpVHCA
qBNwmPd++THv7/IO8q2vA3fICTpUvlQz5Hgj52DLdX1xga2QQxoYyDmcYLed
HTpfGM6/k8GQ3+giCue7M1dwq7wQg+vnmbyyKdBTAm6+tsTUK5wZknD7Pec2
qB1qk4K772Y8iCXtAHM/jP/bquBcxyUEfyJ/ldnqOmW4/qw9JZMlWFTg5tfa
m8bt6lSB23/2DAiowN0H48PcD+PD/AfTD/M/zHxY+MDsh4UfzH2w8EUPfwD5
N5G6
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> True], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["HintPodTitleBar"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{
            Offset[{0, -3}, {1, 1}], 
            Offset[{0, -1.3443}, {1, 1}], 
            Offset[{-1.3443, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{-3, 0}, {1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{3, 0}, {-1, 1}], 
            Offset[{1.3443, 0}, {-1, 1}], 
            Offset[{0, -1.3443}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], 
            Offset[{0, -3}, {-1, 1}], {-1, -1}, {-1, -1}, {-1, -1}, {1, -1}, {
            1, -1}}]], 
         InsetBox[
          FormBox[
           StyleBox[
           "\"Notebook Analysis\"", FontColor -> GrayLevel[0.4], FontColor -> 
            GrayLevel[0.4], FontFamily -> "Source Sans Pro", FontWeight -> 
            Plain, FontSize -> 13, StripOnInput -> False], TraditionalForm], 
          Offset[{8, 0}, {-1, 0}], 
          NCache[
           ImageScaled[{0, 1/2}], 
           ImageScaled[{0, 0.5}]]], 
         TagBox[
          TagBox[
           TooltipBox[{
             GrayLevel[0.6], 
             DiskBox[
              Offset[{-13, -10}, {1, 1}], 
              Offset[6]], 
             GrayLevel[0.97], 
             AbsoluteThickness[1.5], 
             CapForm["Round"], 
             LineBox[{{
                Offset[{-15, -8}, {1, 1}], 
                Offset[{-11, -12}, {1, 1}]}, {
                Offset[{-15, -12}, {1, 1}], 
                Offset[{-11, -8}, {1, 1}]}}]}, 
            FrameBox[
             StyleBox[
             "\"Close analysis pod\"", "Text", FontColor -> 
              RGBColor[0.53725, 0.53725, 0.53725], FontSize -> 12, FontWeight -> 
              "Plain", FontTracking -> "Plain", StripOnInput -> False], 
             Background -> RGBColor[0.96078, 0.96078, 0.96078], FrameStyle -> 
             RGBColor[0.89804, 0.89804, 0.89804], FrameMargins -> 8, 
             StripOnInput -> False], TooltipDelay -> 0.1, 
            TooltipStyle -> {Background -> None, CellFrame -> 0}], 
           Annotation[#, "Close analysis pod", "Tooltip"]& ], 
          EventHandlerTag[{"MouseClicked" :> NotebookDelete[
              EvaluationCell[]], Method -> "Preemptive", PassEventsDown -> 
            Automatic, PassEventsUp -> True}]]}, AspectRatio -> Full, 
        ImageSize -> {Full, 20}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 0}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterTop"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {4, 0}}]& )}], 
   Cell[
    StyleData["HintPodDelimiterBottom"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         AbsoluteThickness[1], 
         GrayLevel[0.85], 
         CapForm["Round"], 
         LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
        PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> {{0, 0}, {0, 0}}, 
        ImageSize -> {Full, 2}, BaselinePosition -> Scaled[0.1], 
        ImageMargins -> {{0, 0}, {0, 4}}]& )}], 
   Cell[
    StyleData["HintPodFooter"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.97], 
         FilledCurveBox[
          BezierCurve[{{-1, 1}, {-1, 1}, 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 3}, {-1, -1}], 
            Offset[{0, 1.3443}, {-1, -1}], 
            Offset[{1.3443, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{3, 0}, {-1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-3, 0}, {1, -1}], 
            Offset[{-1.3443, 0}, {1, -1}], 
            Offset[{0, 1.3443}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], 
            Offset[{0, 3}, {1, -1}], {1, 1}, {1, 1}}]], 
         InsetBox[
          BoxData[
           FormBox[
            TemplateBox[{
              StyleBox[
               TemplateBox[{3}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False], 
              
              StyleBox[#, FontColor -> GrayLevel[0.4], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 12, 
               StripOnInput -> False], 
              StyleBox[
               TemplateBox[{5}, "Spacer1"], FontColor -> GrayLevel[0.4], 
               FontFamily -> "Source Sans Pro", FontWeight -> Plain, FontSize -> 
               12, StripOnInput -> False]}, "RowDefault"], TraditionalForm]], 
          
          Offset[{5, 2.5}, {-1, 0}], {-1, 0}]}, AspectRatio -> Full, 
        ImageSize -> {Full, 21}, PlotRange -> {{-1, 1}, {-1, 1}}, 
        ImageMargins -> {{0, 0}, {0, 3}}, 
        ImagePadding -> {{0, 0}, {0, 0}}]& )}], 
   Cell[
    StyleData["HintPodMenuItems"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       TemplateBox[{#, FrameMargins -> 3, Background -> GrayLevel[1], 
         RoundingRadius -> 0, FrameStyle -> Directive[
           AbsoluteThickness[1], 
           RGBColor[0.75686, 0.82745, 0.88235]], ImageMargins -> #2}, 
        "Highlighted"]& )}], 
   Cell[
    StyleData["HintPodActionMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], #2}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          Dynamic[
            If[
             CurrentValue["MouseOver"], 
             GrayLevel[0.96], 
             GrayLevel[1.]]]}, "Highlighted"], ButtonFunction :> 
        ReleaseHold[#3], 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["HintPodDisabledMenuItem"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        TemplateBox[{
          TagBox[
           GridBox[{{#, 
              TemplateBox[{7}, "Spacer1"], 
              StyleBox[#2, FontOpacity -> 0.4]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], FrameStyle -> 
          None, RoundingRadius -> 0, FrameMargins -> {{5, 2}, {2, 2}}, 
          ImageSize -> Full, ImageMargins -> {{0, 0}, {0, 0}}, Background -> 
          GrayLevel[1.]}, "Highlighted"], ButtonFunction :> Null, 
        Appearance -> {
         "Default" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
          Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0, 0, 
             255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 0}, {0, 
             0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {255, 255, 
             255, 255}}}], "Byte", ColorSpace -> "RGB", 
            ImageResolution -> {72, 72}, Interleaving -> True]}, Method -> 
        "Queued", Evaluator -> Automatic, Enabled -> False]& )}], 
   Cell[
    StyleData["HintPodActionLabel"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[#, FontColor -> GrayLevel[0.2], FontFamily -> 
         "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, LineIndent -> 
         0, StripOnInput -> False], FrameMargins -> 0, ImageMargins -> 0, 
        BaselinePosition -> Baseline, ImageSize -> Full]& )}], 
   Cell[
    StyleData["HintPodMenuDelimiter"], 
    TemplateBoxOptions -> {DisplayFunction -> (PaneBox[
        StyleBox[
         GraphicsBox[{
           CapForm["Round"], 
           GrayLevel[0.9], 
           AbsoluteThickness[1], 
           LineBox[{{-1, 0}, {1, 0}}]}, AspectRatio -> Full, 
          PlotRange -> {{-1, 1}, {-1, 1}}, ImageMargins -> {{0, 0}, {2, 2}}, 
          ImagePadding -> {{5, 5}, {0, 0}}, ImageSize -> {Full, 2}], 
         LineIndent -> 0, StripOnInput -> False], FrameMargins -> 0, 
        ImageMargins -> 0, BaselinePosition -> Baseline, ImageSize -> 
        Full]& )}], 
   Cell[
    StyleData["HintPodIconChevron"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.2], 
         AbsoluteThickness[1.8], 
         CapForm["Round"], 
         JoinForm["Miter"], 
         LineBox[{{-0.5, 1}, {0.5, 0}, {-0.5, -1}}]}, AspectRatio -> Full, 
        BaselinePosition -> Bottom, ImageMargins -> {{0, 4}, {0, 0}}, 
        ImageSize -> {5.6, 7.7}]& )}], 
   Cell[
    StyleData["HintPodIconPopOut"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIlIGYC4h1yra8Dd6g4rHN/WCWip+KwRiYqxXq+isNk
CZYwvlwEDROHqYPpKwUrUHFgAIEDKg5nzwDBG2VU/hlluPogMEMCzm9kOdpv
aC6OJi/mINR84NRCVwQfIq8M519wufHhi5Yymn4lNPOVHNLAQBHO/6YR03/o
K5eDB9Ab69wFHJoeHZ+xexqng8r0/xPqfvM5cG9dVnl8JacD0FO6m+byOPxL
/f4kUZHbQZr3ge4EBW6HD2IeAX9m8Dhkzyqfs2gxp8ONxmK3Kd/4HOYsUt75
p50Tbi6YesgF9b8ShJ+oCOfD3Anjw/zx9JP8pXx7hD9h4QfjqxtyAKNCBU0e
EY4wPqr5iHh4/nvlx0tnVRyYObvkk98pOwA9+X75MRUHWWD03udHxCssngGf
XO7X
          "]]}, AspectRatio -> Automatic, ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconWrench"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         GrayLevel[0.4], 
         AbsoluteThickness[1], 
         Opacity[1.], 
         JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGYCYmWv6mZ9n3/2cmJZvp/5BBzci37yv9wu6/Au
ysnuhaQynG8at8uT55AGXJwBDHQdPl3yTRKIUIfzo1Ks7/vzajiosjVOdfbW
ccjaUzJZokUFrv8ySLmlqoPbts9/r1iowsVh6mD6zp4BAh4NnPbA3AHTr+ss
8/rRNoS7YXyYv2D+7H/ySf5SPrdD7D/nX29ff7H/6hXZZnGNGc6HqYPRMPED
b+bZ6FxBqAPpOprL7YAefgCtVISU
          "], CurveClosed -> {1}]}, AspectRatio -> Automatic, 
        BaselinePosition -> Scaled[0.2], ImagePadding -> 0.5, 
        ImageSize -> {16., 16.}, PlotRange -> {{0., 16.}, {0., 16.}}]& )}], 
   Cell[
    StyleData["HintPodIconInfo"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{6.81, 13.}, {
           3.3914, 13.}, {0.62, 10.229}, {0.62, 6.81}, {0.62, 3.3914}, {
           3.3914, 0.62}, {6.81, 0.62}, {10.229, 0.62}, {13., 3.3914}, {13., 
           6.81}, {13., 10.229}, {10.229, 13.}, {6.81, 13.}}, CompressedData["

1:eJxTTMoPSmViYGCQB2IQbct1fXGBrbRD6+vAHXKtvA7r3B9WiayTdoCI8zgc
/qoR039IHkoLOjCAgYKDB0iZu4CDPFijgsOsmSDAC1UnCzWPE0rLQMXZHV6x
mAia1Ug56E1Y8MMwjdXh685bXX9VJRx4Jq9sCvRkcTh7BgREHfoPgTSwOAQB
db8OFHYAO4eLFeo+IQcRMIMLzoe4h9dBW2LqFc4MYYd4zdMCx38JOviYdzom
pIo4PJgjuHSvo6jDkgKQz0QdCsEelHDQjAHZJAa1VxIqLwH3Jzofok8S4i9W
RQews67LQsJhnoKDMRjIQ9Q3wMJJwQFMJULDSRJmrhzUPKh6Blmof+QcwM6K
kXb4Bgq2rzJQcXFovMhA5UUdciqqluo0SztsKMqY+NZG2OHV1E08hTrSDquA
oTmXQdABPX4BaWq/EA==
           "], {{8.81, 9.79}, {8.8101, 9.5122}, {8.5878, 9.2854}, {8.31, 
           9.28}, {7.51, 9.28}, {7.2283, 9.28}, {7., 9.5083}, {7., 9.79}, {7.,
            10.62}, {7.0054, 10.898}, {7.2322, 11.12}, {7.51, 11.12}, {8.35, 
           11.12}, {8.6239, 11.115}, {8.8447, 10.894}, {8.85, 10.62}}}]}, 
        AspectRatio -> Automatic, ImagePadding -> 0.5, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconNone"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (
       GraphicsBox[{}, AspectRatio -> Automatic, ImageSize -> {16., 16.}, 
        PlotRange -> {{0., 16.}, {0., 16.}}, BaselinePosition -> Scaled[0.2], 
        ImagePadding -> 0.5]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreAlways"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYCYpF17g+rROQcbLmuLy6wlXaoBguoOvQf+qoR
w6/i8CZwh1zralWH4oyJb2vsVRx0N819v/yYqoO0/l0VtkYEv/U1UOFRBP/D
8mPe5pyqcP0z8oSaD3ipws2H0famcbs8fVQd2BqnOnevUXUAa+dWdUgSiLDc
ckLVwQPounXHVeB8kK1TmxH8gN7peULOKnD9EP+owM2H+QvmzyUFIBEeuHxC
mb+c2CtuuP75NjpXZj3jgpsP0s11nRPO5+feuqzyOAec73dxYsy/w+xw/WDr
uNjh5n9MPhPr7cEG93+V2Wq78Nus8PCB8WHhB+PDwhemHxb+MPNh8ZMGBhJw
f8Lkv2nEAJXwOGyu/rQh4DWrwwrTs9Z+F7kdvHiYtNunsTrYgrwpy+XQteHh
y6lGbA6HxNWCWRdzOJwKObhiyTk2B3fmCm4VDXaouRwOEaeMjmzUY4OHhybI
eA02eHgt/GH4bJ0qm4PT+bSrz4Hh+Z0tfobPVDZ4eIOVx7DD3QlzNwMYIPx1
smzffCl9FUg4u7M5hPEBU1S+isPs0Pmr195gdTAGgc0qUHewOswDJhfv7yoO
/g7CiYcvszoAU9vrQAtVh6V+QAFnNqg9iHj5dMk3SWAGIt78wBGJiFcYH+ZP
GB/mT5h+WLqBmQ/zJwC4F0s3
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInCell"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
           0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
            0}}}, {{{11.69, 13.37}, {7.57, 13.37}, {7.57, 12.37}, {7.76, 
           12.37}, {11.19, 8.93}, {11.19, 1.25}, {7.57, 1.25}, {7.57, 0.25}, {
           12.19, 0.25}, {12.19, 13.37}}, {{9.17, 12.37}, {11.17, 12.37}, {
           11.17, 10.37}}}], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIjIGYCYo+HVSLr3EUdbLmuLy6wlXZYUgBiyTlAxJUc
kt9FOdllyDuU6yrKf1mD4LM879F466sMV28MApuVHX7yv9y+3lkOQj9WdngU
Ib794gFZh/Dojfvf/FN22CHX+jrQAsHvf/JJ/tJ6GTgfbI+ODFz/2TMgIA03
vxroqodVQg5gSkQO6m4mVPubGR1E7I/d2fpE2cHy2tFckwYGB2n9uypsjCoO
YG89/GcP4wd5zm1QO/QHzr9wNeyN/u5f9jD9kHD4aQ8zX+z36XcnD3+3v8fE
2SXfrOygvqBzw8OX3+yDQAxHBB/srr9KcL7mW959BjuV4PrnCi7de7BcCW4+
LLwhND88PmDyEHcLOjg2PTo+Y/d3+/21shbpLYIOTglPLyjd/mZ//wH35JVM
CD4knATgfL0JC34YPuOH688Nq1237REf3HzNmP5DXzX4HLhVNOp6dv6yP3xZ
O1UyiRcePrlH/22q/sQDD79vGiANPA5yy1946NUzOOy61fU39TuPw5GNenmL
GxkdwPal8cLjB2Y+LP7SwEDCgQEMZODyf7+VPpgTKOOw9ldM7tE6XgfmCqCL
9sk43PfvnZ4nxAuJZ2NZB5j9UV933uraK+swf/XaG/HfeCDudZJzuA1yTgov
PH3CzBcAJg/mdHmHVElQyuSH851lXj8ykxKEq4eFNwCKHGBr
          "]]}, AspectRatio -> Automatic, ImageMargins -> {{0, 0}, {0, 2}}, 
        ImageSize -> {14., 14.}, 
        PlotRange -> {{-0.5, 13.62}, {-0.5, 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconIgnoreInNotebook"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         FaceForm[
          GrayLevel[0.4]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJTIGYC4qAdcq2vAwUcbLmuLy6wFXdYUgBiSTp4PKwS
Weeu4GCgtVL4AouUw1zBpXsPlis4vDlgqexlLeWg+ZZ3n8FOBB+s/y+CH6S+
oHODoyJc/z0mzi75ZkW4+cYgsFnRoanYbco3N0kHEftjd7Y+UXRYeM3kvcVR
CYeQx0tnH2FQgroLwb9pWxmxYqs4nP9zQfrmV8bicP0g1VzXxeDmf9OI6T/0
lcsB6Bmgj6QcGMDggz1MvoTnRNz7f2/sf/K/3L7+saLDzmCriP/PX9iHR2/c
/+YfzL1P4Pz+Xoc96+IfwPkrVqZm1068AdcPtAxo4yW4+ccenln/jOGkPcz/
MjWJRqEGh+xh4QPjw8IPxoeFL0w/LPxh5sPiB0KzwuNPHhibO+Su2h8GKTvE
7aAYeYAl7+5Z+/rfVgXnOLgdPu6qO5h345j9voPiasGsXHA+JJw44Hy9CQt+
GD5jh+vPDatdt+0RG9x8TZByDTYH/uky5V7st+21JaZe4cxgdZgp5PnFqOuh
vQY/99ZlP1kcIO54CjWfxeFeX0HUh0Uv7bdEft15i4vVoa2/Q3Oiy1t77Xax
m+fKWeHxAzMfFn9pYCACj1+YfMeX29cbgfF/+LJ2qmQSKzx95B79t6n6Ews8
/cDsB3O5JB1Upv+fUPebxeHIRr28xQeB6e+Cy40PX1gdnjTPO7uKX8qh/8kn
+Uv57A4sYXy6m2KlHDjBCY3DwV9OLMvXGJjeda7MejaXC56eYeENAPSkchE=

          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJdIGYC4qAdcq2vL6o52HJdX1ywVwtC24rB+YdTViWE
XBKE86tF1rk/rOJxMAaBzxpwPkReDY2vCDVPCMpXhvPB+jerwfnPf6/8eOms
ukPDdoemR+wiUHkNuHtgfJh7YXy2xqnO3W/U0eQ14ObB+DD7YHzNmP5DXzWY
4PzY3KP/NlX/toeZBxYP/GIPsw/GBzuHSxrOX7TF/MchFSkH9g9iHgF/Ptmb
vrdwdTeSdNjZywYU+WQPcb8E1B+f7H8EP146m0XcYeE1E6DKT/Z9IGUXRB02
V3/aEJD92R5s7A4Rh1kzQeCr/YQFPwyfvRN2+Put9MEcwe/2894vP+ZtLuxw
3793ep7QT3uIOiEHkC651t/2YH8a80LtY3NA5TPB+RPrflsVnPtkL/8lJ6xW
T8jhTSDYo1DzxOB8BjBQh/O/aQADzlQTTV4bbh6MD7MPxoeFfwDI2czaDmfP
gAA0nCdqOTglPL2gdFvDweNhlci645oO8iAPzdOEmPNXw+EPMDp9k7Qc4nZ5
8jC9VncAG39KywE9/QIAH6UuJw==
          "]], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{
          5.63, 11.05}, {5.63, 10.44}, {6.0569, 10.539}, {6.5048, 10.49}, {
          6.9, 10.3}, {9.53, 10.3}, {9.53, 11.05}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{7.92, 3.73}, {
          8.0396, 3.4994}, {8.0784, 3.2353}, {8.03, 2.98}, {9.41, 2.98}, {
          9.41, 3.73}}}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}}}, {{{6.73, 6.21}, {6.2, 5.82}, {6.67, 5.46}, {11.22, 5.46}, {
          11.22, 6.21}, {6.73, 6.21}}}], 
         FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{8., 8.7}, {
          8.0514, 8.4458}, {8.0162, 8.1818}, {7.9, 7.95}, {10.25, 7.95}, {
          10.25, 8.7}}}]}, AspectRatio -> Automatic, ImagePadding -> 0.75, 
        ImageSize -> {15., 15.}, 
        PlotRange -> {{0., 13.62}, {0., 13.62}}]& )}], 
   Cell[
    StyleData["HintPodIconHint"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         EdgeForm[None], 
         FaceForm[#], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4,
            3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
            3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
           3}, {1, 3, 3}}}, {{{9.015, 17.37}, {4.4559, 17.37}, {0.76, 
           13.645}, {0.76, 9.05}, {0.76, 4.455}, {4.4559, 0.73}, {9.015, 
           0.73}, {13.574, 0.73}, {17.27, 4.455}, {17.27, 9.05}, {17.27, 
           13.645}, {13.574, 17.37}, {9.015, 17.37}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQbcixRiYqRcVh3bak+pu23A5rf8XkHt2n7OC/fkpq
x2MOB8+5DWqHnik5nP8e/HjpbHYHj4dVIuvYlRyAiisjVrA78Bau6b6toegQ
ApQ9soDdQepAtIJjoILDJ8fzaVefczgs6Nzw8GWoPNx84yMb9fIeyzr831T9
acMFXod1N+LL/OVkHV5uX8/8/IyAw7Fck4btDrIOZQ/mCC7dK+TAXMGtomEn
6/DP+dfb1w0iDkIi9sfufJV1ePRy6iYeQzGHac7dOc+t5R3SwEDcwe7FzTW/
bBQc9kybwF+1TcLh7TwbnStSig7Hd+3oZSuQdDjab1iuy6jk0MIL8qGkg8f+
WlmL50oO9uHRG/fnSDr4fu4LLjmi7HDw1ELXbZslHGDhAzO//9BXjRh+VQeG
iXW/rQzEHKzv+/dOz1N1uFfY1fekSMRhzhGFDUUZqhB/LhaCmFOs6sC0h1VI
ZL+Ag8g6d2AIqjqYCJrZ7L3E64Ae/gDrrapT
           "], CompressedData["
1:eJxTTMoPSmViYGBQBGIQ/emSb5KAhJoDAwg0aDhYbjlRtu++isNudX7urWpK
DrX2pnG7Tqo4TFPsKy2sVnRQvv2zLqtGBULfUXAI6J2eJ8Ss4mDSsN2hKUnB
Ia0jOfZOmrKD/l0Vtsar8g5Gz9apPlms5GDgs4zLLVXeweLHoZRVDxQdnNdm
3ivskneQW/7CQ09e0aHEbco3tnh5h+jLex6LxCo4FErzPtC9IO+wVfT36Xed
8nDzH5tJHYheIOeQBxJ4pOCgu2nu++Vscg75Qs0HTjUqOjDkN7IcPS/rcObd
ycNOukoObqqlTLM4ZOD+O7JRL2/xQWkHHibtdrFITYeb8WX+ctOkHQ6eWui6
zVjLQfD4rh29bdIO/Ye+asTwazuAnJswRdohaIdc6+uL2g6qbI1TnbtlHGy5
ri8uqNVxEIgAhtg3WYj5B3QcgKEkzcsAdOfS2UcUDHQdEp5eULotqehw89z3
4Mepug63pGsSjUyVHMr3zZfSj9V1uKKdKvkoQtmhOGPi25p6XQeQ8p91KhB9
lroOIGH7UlWH+qw9JZNn6EDs54bGF4OOA9AVtlzhag6KG4oyJupqO4CCYaGr
mgM4XiO0HK5WvFQz9FBzuAzi7tR0cNv2+e8VCzUHJ5AF0poO6PEPAFdvzZk=

           "]}]}, AspectRatio -> Automatic, BaselinePosition -> Scaled[0.1], 
        ImagePadding -> 0.5, ImageSize -> {14., 14.778}, 
        PlotRange -> {{0.76, 17.27}, {0.73, 17.37}}]& )}], 
   Cell["Documentation", "Section"], 
   Cell["Usage", "Subsection"], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell["Details & Options", "Subsection"], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, StyleMenuListing -> None], 
   Cell["Examples", "Subsection"], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell["Links", "Section"], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell["Annotation", "Section"], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["HiddenMaterial"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.3, 0.7, 0.6], "Thickness" -> 2}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"hidden\"", "HiddenMaterialCellLabel", StripOnInput -> False], 
           "\"Hidden input cells will be closed on the published web page but \
will remain open in the downloadable example notebook\""}, 
          "PrettyTooltipTemplate"]], "HiddenMaterialCellLabel"]}, {
      None, None}}, StyleMenuListing -> None, Background -> 
    RGBColor[0.8, 1., 0.9]], 
   Cell[
    StyleData[
    "HiddenMaterialCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.3, 0.7, 0.6, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.88072, 0.61104, 0.14205], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.36842, 0.50678, 0.7098], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.56018, 0.69157, 0.19488], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", 
    PrivateFontOptions -> {"OperatorSubstitution" -> False}, FontColor -> 
    GrayLevel[0.5]], 
   Cell["Special Input", "Section"], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 8263526385974082686; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Example", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "FileOpen"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[8263526385974082686]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False, DefinitionNotebookClient`$ButtonCodeID = None}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                Annotation[
                DefinitionNotebookClient`$ButtonCodeID = 5263076252613204070; 
                 DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                   ReleaseHold[DefinitionNotebookClient`$ButtonCode = HoldForm[
                    If[$VersionNumber >= 13., 
                    DefinitionNotebookClient`LocalFileInputDialog["Example", 
                    ParentCell[
                    EvaluationCell[]], "Type" -> "Directory"], 
                    MessageDialog[
                    "This feature requires Wolfram Language version 13 or \
later."]]]]], 
                 DefinitionNotebookClient`ButtonCodeID[5263076252613204070]], 
                DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
              Null]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell["Misc", "Section"], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["RelatedSymbol", StyleDefinitions -> StyleData["Item"]], 
    DefaultNewCellStyle -> {"RelatedSymbol", FontFamily -> "Source Sans Pro"},
     DefaultFormatType -> DefaultInputFormatType, FormatType -> InputForm], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Example", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["Code"], CellProlog :> Quiet[
      (Block[{$ContextPath}, Once[
         ReleaseHold[
          CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
         "KernelSession"]; If[$VersionNumber >= 12.2, 
         Needs["DefinitionNotebookClient`"], 
         Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
       DefinitionNotebookClient`LoadDefinitionNotebook["Example", #]; Null]& )[
       InputNotebook[]]]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.94118, 0.94118, 0.94118]]}, Visible -> False, FrontEndVersion -> 
  "13.3 for Mac OS X x86 (64-bit) (July 27, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"a839f5e5-7cb6-4d83-8150-2e5dc6aa769f"
]

