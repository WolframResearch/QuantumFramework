(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[   1458445,      30655]
NotebookOptionsPosition[   1441385,      30351]
NotebookOutlinePosition[   1441808,      30368]
CellTagsIndexPosition[   1441765,      30365]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"PacletInstall", "[", "\"\<Wolfram/QuantumFramework\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.880200433042694*^9, 
  3.880200433053657*^9}},ExpressionUUID->"23bc57c9-e021-4291-94b5-\
3d65148896c8"],

Cell["Or", "Text",
 CellChangeTimes->{{3.8802004445108833`*^9, 
  3.880200444706802*^9}},ExpressionUUID->"675d263b-4b27-46e9-be08-\
afaf94b4644e"],

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  RowBox[{"\"\<https://wolfr.am/DevWQCF\>\"", ",", 
   RowBox[{"ForceVersionInstall", "->", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880200445397478*^9, 
  3.8802004454115562`*^9}},ExpressionUUID->"4c8932e5-9c63-412e-8357-\
4f49d74ec75a"],

Cell[BoxData[
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]], "Input",
 CellChangeTimes->{{3.880200320238676*^9, 3.8802003245852013`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d06eded8-d7db-416b-b3ab-1571da186742"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", "\"\<Left\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.88020044645048*^9, 3.8802004702154083`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"501e1e0a-b961-4cb7-aead-e1a1c6ae2a50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9305922366257597, 0.8469861212030925, 
                0.9737292166074241}, {0.9830819177678848, 0.8576708995389304, 
                0.8515145793994304}}, {{0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}, {0.9259872820156498, 
                0.966476579071109, 0.8129958068362867}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"L\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "L", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9305922366257597, 0.8469861212030925, 
                0.9737292166074241}, {0.9830819177678848, 0.8576708995389304, 
                0.8515145793994304}}, {{0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}, {0.9259872820156498, 
                0.966476579071109, 0.8129958068362867}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"L\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "L", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {2}, 0, {
    1, {{0, 2}, {{1}, {2}}}, {
     Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "L", 
     "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880200471977647*^9, 3.88020047868052*^9}},
 CellLabel->"Out[2]=",ExpressionUUID->"58ee4b21-9393-4d08-a731-19ca174fede1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<Left\>\"", "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8802004832037153`*^9, 3.880200484341362*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"615ac495-36c3-4fec-9f56-5f9b18793bb4"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"L\""}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {
      Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "L", 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.880200484584402*^9},
 CellLabel->
  "Out[3]//TraditionalForm=",ExpressionUUID->"6c9a0537-d2bb-47ff-8132-\
d3392d57b5dc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8802005248230467`*^9, 3.880200527159253*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"928a825d-5655-4f90-94be-f1cf1049bd2d"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"+\""}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "+", 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880200528040078*^9, 3.880200529669043*^9}},
 CellLabel->"Out[4]=",ExpressionUUID->"74710721-ea39-430f-be67-c00242413c3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", " ", 
  RowBox[{"QuantumState", "[", "\"\<Left\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8802005669948387`*^9, 3.880200569850472*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a18cc5af-2a1e-47ba-afae-31a56820e897"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
        SqrtBox["2"]]}], "+", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"L\""}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {-2^Rational[-1, 2], Complex[0, 1] 
       2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "L", 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802005702384367`*^9, 3.8802005728206577`*^9}},
 CellLabel->"Out[5]=",ExpressionUUID->"dd454699-b5f8-4a1e-aeae-06a26cf38577"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<Left\>\"", "]"}], "==", 
  RowBox[{"I", " ", 
   RowBox[{"QuantumState", "[", "\"\<Left\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.880200588848959*^9, 3.880200591101514*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"275f1639-9af9-4b32-aa4a-f36487892844"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8802005928842077`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"66feff97-d07a-4c20-a1ff-72b4b4e6badd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8802006398712263`*^9, 3.880200661647224*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"47f438c2-7416-4bda-9ba6-369cc1b993d2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9830819177678848, 0.8576708995389304, 
                0.8515145793994304}, {0.8422490251060636, 0.9484525156743584, 
                0.9584544175886779}}, {{0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}, {0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"H\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "H", "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"2", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1", "\"\[RightArrow]\"", "1"}, "RowDefault"], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9830819177678848, 0.8576708995389304, 
                0.8515145793994304}, {0.8422490251060636, 0.9484525156743584, 
                0.9584544175886779}}, {{0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}, {0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"H\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "H", "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Arity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"2", "\"\[RightArrow]\"", "2"}, "RowDefault"], 
                  "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"1", "\"\[RightArrow]\"", "1"}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Hermitian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "1", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", "1", "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Unitary: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["True", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{
                    RowBox[{"{", "2", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", "2", "}"}]}, "RowDefault"], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumOperator[
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
      2^Rational[-1, 2], 2^Rational[-1, 2], 2^
       Rational[-1, 2], -2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
      "ParameterSpec" -> {}|>]], {{1}, {1}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880200664079426*^9, 3.880200677457426*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"92fc202b-fad2-4cb0-beb3-772428e0c3ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8802006795299253`*^9, 3.880200680834837*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"447bba47-fb3b-4e90-88d4-3fae15e43c72"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]], 
       SqrtBox["2"]], "-", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"H\""}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}], "\[Rule]", 
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {4}, 0, {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
       2^Rational[-1, 2], 2^Rational[-1, 2], 2^
        Rational[-1, 2], -2^Rational[-1, 2]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
       "ParameterSpec" -> {}|>]], {{1}, {1}}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.880200681107781*^9},
 CellLabel->
  "Out[8]//TraditionalForm=",ExpressionUUID->"f921c02b-16a4-491e-802d-\
6504a256b977"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "@", 
  FormBox[
   InterpretationBox[
    TooltipBox[
     StyleBox[
      InterpretationBox[
       StyleBox[
        TemplateBox[{
          RowBox[{"0"}]},
         "Ket"],
        FontWeight->"Plain"],
       Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]],
      ShowStringCharacters->False],
     RowBox[{"Column", "[", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{"\"0\"", ",", 
             RowBox[{"Row", "[", 
               RowBox[{"{", 
                 RowBox[{"\"QuantumState: \"", ",", 
                   RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
         RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]],
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0", 
       "ParameterSpec" -> {}|>]]],
   TraditionalForm]}]], "Input",
 CellChangeTimes->{{3.880200683612153*^9, 3.880200690911955*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ef5a859e-9979-4e39-a8ba-f123009bdb39"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"\"H\"", "@*", "\"0\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
      Composition["H", "0"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880200687470354*^9, 3.880200693481838*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"fb94f9d4-94c6-4eb6-8096-3700487063f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "@", 
   FormBox[
    InterpretationBox[
     TooltipBox[
      StyleBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]],
       ShowStringCharacters->False],
      RowBox[{"Column", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"0\"", ",", 
              RowBox[{"Row", "[", 
                RowBox[{"{", 
                  RowBox[{"\"QuantumState: \"", ",", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]],
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0", 
        "ParameterSpec" -> {}|>]]],
    TraditionalForm]}], "==", 
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.880200726121642*^9, 3.880200728666235*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"902802dd-d7db-42b3-bdc7-463e5e60ab42"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.8802007298545513`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f979b6b6-c62b-4b34-921a-7a4c6ed147e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}], "[", "\"\<Norm\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.880200770585273*^9, 3.8802007727787313`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"c14ed831-2149-4aad-92f6-842beb6eac12"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.880200773370964*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"4ea0cde0-a517-413d-bc3b-54df1eba4872"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FormBox[
     InterpretationBox[
      TooltipBox[
       StyleBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]],
        ShowStringCharacters->False],
       RowBox[{"Column", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"\"0\"", ",", 
               RowBox[{"Row", "[", 
                 RowBox[{"{", 
                   RowBox[{"\"QuantumState: \"", ",", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]],
      Wolfram`QuantumFramework`QuantumState[
       SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
       Wolfram`QuantumFramework`QuantumBasis[<|
        "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
              
              Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
               False], 1} -> 1|>], "Output" -> 
         Wolfram`QuantumFramework`QuditBasis[<|{
              Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
            SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
              Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
            SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
         "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0", 
         "ParameterSpec" -> {}|>]]],
     TraditionalForm], "+", 
    FormBox[
     InterpretationBox[
      TooltipBox[
       StyleBox[
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]],
        ShowStringCharacters->False],
       RowBox[{"Column", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"\"1\"", ",", 
               RowBox[{"Row", "[", 
                 RowBox[{"{", 
                   RowBox[{"\"QuantumState: \"", ",", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]],
      Wolfram`QuantumFramework`QuantumState[
       SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], 
       Wolfram`QuantumFramework`QuantumBasis[<|
        "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
              
              Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
               False], 1} -> 1|>], "Output" -> 
         Wolfram`QuantumFramework`QuditBasis[<|{
              Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
            SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
              Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
            SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
         "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "1", 
         "ParameterSpec" -> {}|>]]],
     TraditionalForm]}], ")"}], "[", "\"\<Norm\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880200780731287*^9, 3.8802007889135637`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7b794c68-14c8-44a4-a016-d86080b6fc21"],

Cell[BoxData[
 SqrtBox["2"]], "Output",
 CellChangeTimes->{3.8802007892639236`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"63639ae1-26f3-4137-8222-a43323b3cb75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}], "[", "\"\<Amplitudes\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.880200809562435*^9, 3.880200811847837*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f61693c6-4c33-4096-8df4-482605146451"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], "\[Rule]", 
    FractionBox["1", 
     SqrtBox["2"]]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], "\[Rule]", 
    FractionBox["1", 
     SqrtBox["2"]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8802008122166653`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"2fa87f71-9ae7-4680-9a7c-02b42dbf9086"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}], "[", "\"\<Probability\>\"",
   "]"}]], "Input",
 CellChangeTimes->{{3.880200817639332*^9, 3.880200826211059*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"676893d0-f3c5-4feb-8fb9-7e1332fc5c04"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], "\[Rule]", 
    FractionBox["1", "2"]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], "\[Rule]", 
    FractionBox["1", "2"]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.880200820445801*^9, 3.880200826701084*^9}},
 CellLabel->"Out[18]=",ExpressionUUID->"3edf9b74-4a6d-4603-b965-f5eebc69a0ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<RY\>\"", ",", "\[Theta]"}], "}"}], "]"}], "@", 
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.880200896493905*^9, 
  3.8802009264184227`*^9}},ExpressionUUID->"46eade2b-4bc9-425a-8552-\
5580d88c6742"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]]}]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]]}]}], 
          SqrtBox["2"]]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}], "-", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]]}]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]]}], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            SuperscriptBox["\[ExponentialE]", 
             FractionBox[
              RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]]}]}], 
          SqrtBox["2"]]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          RowBox[{
            SubscriptBox["\"R\"", "\"Y\""], "[", "\[Theta]", "]"}], "@*", 
          "\"+\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {2^Rational[-1, 2] (Complex[0, 
            Rational[-1, 2]] E^(Complex[0, 
              Rational[-1, 2]] $CellContext`\[Theta]) + Complex[0, 
            Rational[1, 2]] E^(Complex[0, 
              Rational[1, 2]] $CellContext`\[Theta])) + 
       2^Rational[-1, 2] (Rational[1, 2] E^(Complex[0, 
              Rational[-1, 2]] $CellContext`\[Theta]) + 
         Rational[1, 2] E^(Complex[0, 
              Rational[1, 2]] $CellContext`\[Theta])), 
       2^Rational[-1, 2] (Complex[0, 
            Rational[1, 2]] E^(Complex[0, 
              Rational[-1, 2]] $CellContext`\[Theta]) + Complex[0, 
            Rational[-1, 2]] E^(Complex[0, 
              Rational[1, 2]] $CellContext`\[Theta])) + 
       2^Rational[-1, 2] (Rational[1, 2] E^(Complex[0, 
              Rational[-1, 2]] $CellContext`\[Theta]) + 
         Rational[1, 2] E^(Complex[0, 
              Rational[1, 2]] $CellContext`\[Theta]))}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[
        Subscript["R", "Y"][$CellContext`\[Theta]], "+"], 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880200910279627*^9, 3.8802009116997232`*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"197b5019-b6f7-4c1f-8e14-d64e737548b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<Simplify\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880200927593566*^9, 3.880200930447156*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"0373dbbd-5e3f-46c8-8121-80d2bc383050"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], "+", 
          FractionBox["\[ImaginaryI]", "2"]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[ImaginaryI]"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], ")"}], " ", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}]}], ")"}], " ", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
       RowBox[{"2", " ", 
        SqrtBox["2"]}]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          RowBox[{
            SubscriptBox["\"R\"", "\"Y\""], "[", "\[Theta]", "]"}], "@*", 
          "\"+\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[Automatic, {2}, 0, {1, {{0, 2}, {{1}, {2}}}, {Complex[
         Rational[1, 2], 
         Rational[1, 2]] 2^Rational[-1, 2] E^(Complex[0, 
           Rational[-1, 2]] $CellContext`\[Theta]) (Complex[0, -1] + 
        E^(Complex[0, 1] $CellContext`\[Theta])), Rational[1, 2] 
       2^Rational[-1, 2] E^(Complex[0, 
           Rational[-1, 2]] $CellContext`\[Theta]) (Complex[1, 1] + 
        Complex[1, -1] E^(Complex[0, 1] $CellContext`\[Theta]))}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[
        Subscript["R", "Y"][$CellContext`\[Theta]], "+"], 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880200931526741*^9, 3.8802009331794157`*^9}},
 CellLabel->"Out[20]=",ExpressionUUID->"f4dcd6a3-d0ed-477e-9ecd-da5f46c78497"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<RY\>\"", ",", 
     RowBox[{"Pi", "/", "4."}]}], "}"}], "]"}], "@", 
  RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.880200949920974*^9, 3.880200958029208*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"ddd02443-e500-4cb1-bc3c-28ac5df864a3"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.3826834323650897`", "\[VeryThinSpace]", "-", 
         RowBox[{"1.9626155733547187`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.9238795325112867`", "\[VeryThinSpace]", "-", 
         RowBox[{"3.925231146709437`*^-17", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          RowBox[{
            SubscriptBox["\"R\"", "\"Y\""], "[", "0.7853981633974483`", "]"}],
           "@*", "\"+\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[Automatic, {2}, 
     Complex[0., 0.], {1, {{0, 2}, {{1}, {2}}}, {
       Complex[0.3826834323650897, -1.9626155733547187`*^-17], 
       Complex[0.9238795325112867, -3.925231146709437*^-17]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[
        Subscript["R", "Y"][0.7853981633974483], "+"], 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880200951879331*^9, 3.8802009598458357`*^9}},
 CellLabel->"Out[22]=",ExpressionUUID->"c75ee927-c058-4aaa-863a-62fb0acf1ef0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "\[Theta]", "<", 
    RowBox[{"2", "Pi"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"QuantumOperator", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<RY\>\"", ",", "\[Theta]"}], "}"}], "]"}], "[", 
       RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}], "]"}], "[", 
      "\"\<Probability\>\"", "]"}], "//", "Values"}], "//", 
    "FullSimplify"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880201025613513*^9, 3.880201095473576*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"10d2095a-f412-45f8-b23e-351adddc4b17"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Theta]"}]]}], "]"}], "2"]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8802010268909283`*^9, 3.880201095911652*^9}},
 CellLabel->"Out[33]=",ExpressionUUID->"30f80287-7bb7-4987-988d-d7b5c54479ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RY\>\"", ",", 
      RowBox[{"Pi", "/", "4."}]}], "}"}], "]"}], "[", 
   RowBox[{"QuantumState", "[", "\"\<+\>\"", "]"}], "]"}], "[", 
  "\"\<Probability\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.88020100272686*^9, 3.880201006775742*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"8094f20e-f5fb-4039-a42a-7842b6933e0f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], "\[Rule]", 
    "0.1464466094067262`"}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], "\[Rule]", 
    "0.8535533905932737`"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8802010071705627`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"ed1373b8-7ae4-4b90-aeeb-9f5b985a17f3"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"beamSplitter", "=", 
   RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"topPath", "=", 
   FormBox[
    InterpretationBox[
     TooltipBox[
      StyleBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]],
       ShowStringCharacters->False],
      RowBox[{"Column", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{"\"0\"", ",", 
              RowBox[{"Row", "[", 
                RowBox[{"{", 
                  RowBox[{"\"QuantumState: \"", ",", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    RowBox[{"{", "2", "}"}]}]}], "}"}], "]"}]}], "}"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]],
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0", 
        "ParameterSpec" -> {}|>]]],
    TraditionalForm]}], ";"}]}], "Input",
 CellChangeTimes->{{3.880201150656404*^9, 3.880201160615773*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"648f2881-de0f-4a2e-adbc-e7df98b5b93b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"beamSplitter", "@", "topPath"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8802011632822247`*^9, 3.880201173384097*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"1a70061c-25cd-45a6-8a0a-7a367fb49d6c"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"\"H\"", "@*", "\"0\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
      Composition["H", "0"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880201137186211*^9, 3.880201173623969*^9}},
 CellLabel->
  "Out[38]//TraditionalForm=",ExpressionUUID->"ccc132e3-92c3-45f4-b8a5-\
9a5fe666da9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880201184002164*^9, 3.880201212333384*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"6a078076-07d4-4b21-b20e-0d8f412be026"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      InterpretationBox[
       RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0"}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]}],
       Wolfram`QuantumFramework`QuditName[
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{"1"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{"1"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]], ")"}]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"\"P\"", "[", "\[Alpha]", "]"}]}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}], "\[Rule]", 
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {4}, 0, {
      1, {{0, 2}, {{1}, {4}}}, {1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
       "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880201213979067*^9, 3.880201215222555*^9}},
 CellLabel->"Out[39]=",ExpressionUUID->"b1768bc2-a180-4d15-8aa4-3d538d56fa2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"output", "=", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], "]"}], "@", 
   RowBox[{"beamSplitter", "@", "topPath"}]}]}]], "Input",
 CellChangeTimes->{{3.880201232728155*^9, 3.880201233179915*^9}, {
  3.880201290958221*^9, 3.880201292800467*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3e0dcc4c-6076-4d36-a454-e49442bfd054"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], " ", 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
          "\"0\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {
      2^Rational[-1, 2], 2^Rational[-1, 2] 
       E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[
        "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802012343427153`*^9, 3.8802012358798018`*^9}, {
  3.880201293239654*^9, 3.880201295249711*^9}},
 CellLabel->"Out[41]=",ExpressionUUID->"7a458725-5801-449d-9eb4-eec4b6f45f66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurement", "=", 
  RowBox[{
   RowBox[{"QuantumMeasurementOperator", "[", "]"}], "@", 
   "output"}]}]], "Input",
 CellChangeTimes->{{3.880201267562812*^9, 3.880201306625486*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"d5be708f-ff22-4fca-b040-afd26118f958"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], 
              RowBox[{"None", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition[None, 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], 
              RowBox[{"None", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition[None, 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["Indeterminate", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {4}, 0, {
       1, {{0, 2}, {{1}, {4}}}, {
        2^Rational[-1, 2], 2^Rational[-1, 2] 
         E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[None, 
          "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]], {{
      0, 1}, {}}], {1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880201299285603*^9, 3.88020130700851*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"6082161a-014d-4ae1-ae62-caf602107584"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "\[Alpha]", "<", 
    RowBox[{"2", "Pi"}]}], ",", 
   RowBox[{
    RowBox[{"Values", "@", 
     RowBox[{"measurement", "[", "\"\<Probabilities\>\"", "]"}]}], "//", 
    "FullSimplify"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8802013199564753`*^9, 3.880201363624278*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"5be1625a-70e1-49ec-bde4-038936b854ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.880201322181302*^9, 3.880201364176064*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"0bb3599d-52bf-45ff-b291-0480334c730c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "\[Alpha]", "<", 
    RowBox[{"2", " ", "\[Pi]"}]}], ",", 
   RowBox[{"FullSimplify", "[", 
    SuperscriptBox[
     RowBox[{"Abs", "[", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], "]"}], "2"], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880201403717762*^9, 3.8802014220113897`*^9}},
 CellLabel->"In[48]:=",ExpressionUUID->"1eb53e6e-0fd3-4240-9837-c5c2f059728b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.880201407557253*^9, 3.880201418708806*^9}},
 CellLabel->"Out[48]=",ExpressionUUID->"f0919fa4-bf49-42f8-9bcb-ee0ea8ac7ffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"beamSplitter", "@", "output"}]], "Input",
 CellChangeTimes->{{3.880201462441238*^9, 3.880201465264838*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"8eac3b1a-af94-462c-953d-61a4cb309574"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], "2"]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], "2"]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"\"H\"", "@*", 
          RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
          "\"0\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {
      Rational[1, 2] + Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]),
        Rational[1, 2] + 
       Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition["H", 
        "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802014656296873`*^9, 3.8802014672122173`*^9}},
 CellLabel->"Out[49]=",ExpressionUUID->"49545521-868c-4865-8f74-eb67b485b6f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurement2", "=", 
  RowBox[{
   RowBox[{"QuantumMeasurementOperator", "[", "]"}], "@", 
   RowBox[{"beamSplitter", "@", "output"}]}]}]], "Input",
 CellChangeTimes->{{3.880201482187065*^9, 3.8802014853211527`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"d88032ca-8b58-47f4-a45b-7a9c06eab8a0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], 
              RowBox[{"None", "@*", "\"H\"", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition[None, "H", 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], 
              RowBox[{"None", "@*", "\"H\"", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition[None, "H", 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["Indeterminate", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {4}, 0, {
       1, {{0, 2}, {{1}, {4}}}, {
        Rational[1, 2] + 
         Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]), 
         Rational[1, 2] + 
         Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
        Composition[None, "H", 
          "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]], {{
      0, 1}, {}}], {1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880201489728853*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"480fef6e-2090-497c-af14-0c116a47b078"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{"0", "<", "\[Alpha]", "<", 
    RowBox[{"2", "Pi"}]}], ",", 
   RowBox[{
    RowBox[{"Values", "@", 
     RowBox[{"measurement2", "[", "\"\<Probabilities\>\"", "]"}]}], "//", 
    "FullSimplify"}]}], "]"}]], "Input",
 CellChangeTimes->{3.8802014957520437`*^9},
 CellLabel->"In[51]:=",ExpressionUUID->"416f47c4-219c-4feb-84c3-f83e962354c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Cos", "[", 
     FractionBox["\[Alpha]", "2"], "]"}], "2"], ",", 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     FractionBox["\[Alpha]", "2"], "]"}], "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.880201496181592*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"508e7c85-7357-41c0-81fe-c02bd18f28fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880201524726025*^9, 
  3.880201556395734*^9}},ExpressionUUID->"c3359e99-8046-4a83-819f-\
04dd47a6e056"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}, {0.9137653193736024, 
                0.27452152355638126`, 0.24314158972109917`}}, {{
                0.9830819177678848, 0.8576708995389304, 0.8515145793994304}, {
                0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"0\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "0", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}, {0.9137653193736024, 
                0.27452152355638126`, 0.24314158972109917`}}, {{
                0.9830819177678848, 0.8576708995389304, 0.8515145793994304}, {
                0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"0\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "0", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0", 
     "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.880201527825952*^9, {3.880201630128838*^9, 3.880201645590106*^9}},
 CellLabel->"Out[52]=",ExpressionUUID->"911928f9-4a96-4b03-8049-804e458f59bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", "\"\<0101\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880201657875965*^9, 3.880201659149992*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"22d436c4-bcf4-4927-ab4d-701e9d961e1c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vP2o+Kj4
qPio+Kj4qPio+Kj4qPio+Kj4qPio+Kj4qDjl4medD5tmlL63/8XCYcdV9Nr+
+rlLDbPtXw86d46Kj4qPio+Kj4qPio+KDz9xAM39r7I=
                "], {{0, 0}, {16, 16}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"0101\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "0101", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vP2o+Kj4
qPio+Kj4qPio+Kj4qPio+Kj4qPio+Kj4qDjl4medD5tmlL63/8XCYcdV9Nr+
+rlLDbPtXw86d46Kj4qPio+Kj4qPio+KDz9xAM39r7I=
                "], {{0, 0}, {16, 16}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "\"0101\"", LabelStyle -> "TextStyling"], 
             Annotation[#, "0101", "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{6}}}, {1}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1, {
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 2} -> 1, {
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 3} -> 1, {
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 4} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "0101", 
     "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880201659743191*^9, 3.88020168450531*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"96e4503d-aab8-425e-9309-8e16a2cea3f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"QuantumState", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RandomPure\>\"", ",", "2"}], "}"}], "]"}], ",", "3"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880201788727048*^9, 3.8802017907053947`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"606b44a8-6282-4408-8def-cd68f632e9c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["QuantumState",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAGzndn7JU+Q/TMYgsITF6D+L
kU9CpRjuP+0rNurT9+s/6SZVhtp04D8sga0VPdHrP3Bhl0iGbuE/dKbQReRO
7D+UssFKHBflPx6yesMEre0/EgrR5wjl2D9T/O/vBDTXP+4k1XeWB+8/1tnq
osiF7j+hN+TucD3pP3dDG0G3Heo/bNtOUtRm7j90CF/T0I/sP1i5PBdESu8/
FAek2BkH6j9jwVxD+MTpPx5MmRudL+Q/1BttZFoP5j/qWlKkSuXuP8gjp1NF
w+0/bfDBWYTp6j80N+THgRnvP7efneZ+bO8/Wtyt9BEn6z+7KDoSZfHqP5RF
L/vIAOs/gKTpaGys7D/ter3c/0vvP+Zw5Z3RUu0/UGKWhWnC7D89PPPlsY3e
P81DwzVode8/+gQIPgpy6z/XztKAmz/rPzdi2/+sqO0/Y+5NOtPl7j+QnYGb
ftDpPxPMW6f8cu4/2zo23/KY6T8k0NZAcAnuPziSuyeMh+I/jjYeo/kv7D+O
uYLMNK/oP3ymzNE=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}}, GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAGzndn7JU+Q/TMYgsITF6D+L
kU9CpRjuP+0rNurT9+s/6SZVhtp04D8sga0VPdHrP3Bhl0iGbuE/dKbQReRO
7D+UssFKHBflPx6yesMEre0/EgrR5wjl2D9T/O/vBDTXP+4k1XeWB+8/1tnq
osiF7j+hN+TucD3pP3dDG0G3Heo/bNtOUtRm7j90CF/T0I/sP1i5PBdESu8/
FAek2BkH6j9jwVxD+MTpPx5MmRudL+Q/1BttZFoP5j/qWlKkSuXuP8gjp1NF
w+0/bfDBWYTp6j80N+THgRnvP7efneZ+bO8/Wtyt9BEn6z+7KDoSZfHqP5RF
L/vIAOs/gKTpaGys7D/ter3c/0vvP+Zw5Z3RUu0/UGKWhWnC7D89PPPlsY3e
P81DwzVode8/+gQIPgpy6z/XztKAmz/rPzdi2/+sqO0/Y+5NOtPl7j+QnYGb
ftDpPxPMW6f8cu4/2zo23/KY6T8k0NZAcAnuPziSuyeMh+I/jjYeo/kv7D+O
uYLMNK/oP3ymzNE=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}, {
                 RowBox[{
                   TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox[
                   "\"Von Neumann Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[Automatic, {4}, 
      Complex[0., 0.], {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {Complex[-0.9828110201020235, 
       0.21513012748346627`], Complex[0.1864343817817229, 0.9550420568446887],
        Complex[-0.5377074335524537, -0.6814029232938661], Complex[
       0.2802883617352374, 0.054412727414289375`]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1, {
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 2} -> 1|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
       "ParameterSpec" -> {}|>]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumState",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAHIrNC9Eku8/KZfc7toz6z/8
/Qkx9QroPwoBEjXYlO0/2kaausod5j+AtpaEZQbtP5A9+ZQXieo/FRKhobbj
6z+LZ/Ny0HrvP3L/o+R5F+8/BO+3c9Bb6D/defR/MwfoP95mpFiDD+o/HhjA
KV4q7j+kJq0LCoDtP/cPuISKsO0/zXQLcFyN7j9ah3TqDZvnP81DwzVode8/
+gQIPgpy6z/XztKAmz/rP7nsKGEvS+k/LMj5kD1Y7j+bGWwBfZjrP1htoYdQ
euw/wW5DfxA97j+m3P1E0gfmP8RtFFBJ/e4/gnLb5Xt/5z+zNl03VyHnPwOW
q6qWb+0/n/OaHaDS6D9FEBA7poPuP8+bx5HeeO4/1kRfo6fA7T8NjK9etInl
P+Qk0ur7NO8/eWeAPQ9U6T/fRxwfLwrpP+p5yZsRiOw/s4OgTZW75z8z9Ief
ZXnuP5sqcqkHjuo/3R4ciWFX7T+rM3zv8s/uP6rgfBQb5e4/mtJ901oF6D+m
HcNL5RLqP0JtxNo=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}}, GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAHIrNC9Eku8/KZfc7toz6z/8
/Qkx9QroPwoBEjXYlO0/2kaausod5j+AtpaEZQbtP5A9+ZQXieo/FRKhobbj
6z+LZ/Ny0HrvP3L/o+R5F+8/BO+3c9Bb6D/defR/MwfoP95mpFiDD+o/HhjA
KV4q7j+kJq0LCoDtP/cPuISKsO0/zXQLcFyN7j9ah3TqDZvnP81DwzVode8/
+gQIPgpy6z/XztKAmz/rP7nsKGEvS+k/LMj5kD1Y7j+bGWwBfZjrP1htoYdQ
euw/wW5DfxA97j+m3P1E0gfmP8RtFFBJ/e4/gnLb5Xt/5z+zNl03VyHnPwOW
q6qWb+0/n/OaHaDS6D9FEBA7poPuP8+bx5HeeO4/1kRfo6fA7T8NjK9etInl
P+Qk0ur7NO8/eWeAPQ9U6T/fRxwfLwrpP+p5yZsRiOw/s4OgTZW75z8z9Ief
ZXnuP5sqcqkHjuo/3R4ciWFX7T+rM3zv8s/uP6rgfBQb5e4/mtJ901oF6D+m
HcNL5RLqP0JtxNo=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}, {
                 RowBox[{
                   TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox[
                   "\"Von Neumann Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[Automatic, {4}, 
      Complex[0., 0.], {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
       Complex[-0.09714938681288121, -0.8114909278593072], Complex[
       0.695824930300196, -0.12344047615613718`], Complex[
       0.33775646018795413`, 0.9503973432975972], Complex[
       0.19896544392643678`, -0.7279462412736213]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1, {
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 2} -> 1|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
       "ParameterSpec" -> {}|>]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumState",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAGOtl+tLSec/2reiOsIV7T88
KPjvzLrgP0zEyGD9luc/mdTdl9tZ4j9I573UWIDuP1nYJpxDees/dJ2M7L4n
7T8snbqNCkjvP81DwzVode8/+gQIPgpy6z/XztKAmz/rPzLRorjuieg/XZjf
Z76J4z9khBx/8ozuP3rH9eb4Xu4/tG33JMfU6j/PlMR9vRvdP0AUEliMY+8/
4tbJ3svb6j+muJ553aLqPyu0qK+Aweo/VJjbV/CG7j8mAUZOxBvtP/FXVmEF
J9s/pGVnhS0h5D+K8GkR2TbtP6F7CS7AkO0/iduMemgJ1z8aBsXe0UPVP5qB
vjmLmew/Gkq/XZOm3T8K8MkSdsvoPxxPNbMLguU/hgR1co6h7D9okecvrhPd
P+zcPQfmwO0/blPQO4cz2j9LNkQh+5DYP1nlJA1JBNU/1A1EPr4L6j+/p+v5
wNjjP5gmrAQ60eY/2BHlSND17D+KkZEbZB7gP1KE4gEF4+g/u7B6SVQA5D+q
qT7h9JPuP0rizBw=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}}, GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              TagBox[
               TooltipBox[
                GraphicsBox[
                 RasterBox[CompressedData["
1:eJwBlQFq/iFib1JlAwAAAAQAAAAEAAAAAwAAAGOtl+tLSec/2reiOsIV7T88
KPjvzLrgP0zEyGD9luc/mdTdl9tZ4j9I573UWIDuP1nYJpxDees/dJ2M7L4n
7T8snbqNCkjvP81DwzVode8/+gQIPgpy6z/XztKAmz/rPzLRorjuieg/XZjf
Z76J4z9khBx/8ozuP3rH9eb4Xu4/tG33JMfU6j/PlMR9vRvdP0AUEliMY+8/
4tbJ3svb6j+muJ553aLqPyu0qK+Aweo/VJjbV/CG7j8mAUZOxBvtP/FXVmEF
J9s/pGVnhS0h5D+K8GkR2TbtP6F7CS7AkO0/iduMemgJ1z8aBsXe0UPVP5qB
vjmLmew/Gkq/XZOm3T8K8MkSdsvoPxxPNbMLguU/hgR1co6h7D9okecvrhPd
P+zcPQfmwO0/blPQO4cz2j9LNkQh+5DYP1nlJA1JBNU/1A1EPr4L6j+/p+v5
wNjjP5gmrAQ60eY/2BHlSND17D+KkZEbZB7gP1KE4gEF4+g/u7B6SVQA5D+q
qT7h9JPuP0rizBw=
                  "], {{0, 0}, {4, 4}}, {0, 1}], {
                 DisplayFunction -> Identity, PlotRange -> All, 
                  DisplayFunction -> Identity, Background -> 
                  RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
                  False, FrameLabel -> {None, None}, 
                  FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                  True}], "None"], Annotation[#, None, "Tooltip"]& ], 
              GridBox[{{
                 TagBox[
                  
                  TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, 
                   "RowDefault"], "SummaryItem"], 
                 RowBox[{
                   TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Vector\"", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["4", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
                 ""}, {
                 RowBox[{
                   TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox[
                   "\"Von Neumann Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}], "SummaryItem"]}], ""}, {
                 RowBox[{
                   TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}], 
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[Automatic, {4}, 
      Complex[0., 0.], {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {Complex[-0.21774845639101503`, 
       0.262722871577699], Complex[0.24412848176982038`, -0.1134538719498619],
        Complex[0.9177499192365048, 0.47522731843710364`], 
       Complex[-0.6870560643456658, -0.8629995851130015]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1, {
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 2} -> 1|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
       "ParameterSpec" -> {}|>]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{{3.880201785057926*^9, 3.880201791011614*^9}},
 CellLabel->"Out[62]=",ExpressionUUID->"52c0ce6f-04aa-4f28-95e6-f61c91d4534f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{
   RowBox[{"QuantumState", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<RandomPure\>\"", ",", "2"}], "}"}], "]"}], "[", 
   "\"\<DensityMatrix\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.88020172525384*^9, 3.880201781189396*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"7b18fbff-f2cb-4c6d-8d85-427f01d49fb4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.3302986861740874`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.22047214552654135`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.641981432978004`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.23541187271438058`"}], "+", 
       RowBox[{"0.4241720584845742`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.1943882596326707`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.05333454641082988`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.22047214552654135`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.641981432978004`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"1.3949438690734777`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.9815732249810937`"}], "-", 
       RowBox[{"0.1744237261311567`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02608974390466376`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.41342106725484024`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.23541187271438058`"}], "-", 
       RowBox[{"0.4241720584845742`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.9815732249810937`"}], "+", 
       RowBox[{"0.1744237261311567`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.7125086924805202`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.07005259440298892`"}], "-", 
       RowBox[{"0.2876476887785543`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.1943882596326707`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.05333454641082988`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.02608974390466376`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.41342106725484024`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.07005259440298892`"}], "+", 
       RowBox[{"0.2876476887785543`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.12301402041439655`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, Complex[0., 0.], {
     1, {{0, 4, 8, 12, 16}, {{1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {
       2}, {3}, {4}, {1}, {2}, {3}, {4}}}, {Complex[0.3302986861740874, 0.], 
      Complex[0.22047214552654135`, -0.641981432978004], 
      Complex[-0.23541187271438058`, 0.4241720584845742], Complex[
      0.1943882596326707, 0.05333454641082988], Complex[0.22047214552654135`, 
      0.641981432978004], Complex[1.3949438690734777`, 0.], 
      Complex[-0.9815732249810937, -0.1744237261311567], Complex[
      0.02608974390466376, 0.41342106725484024`], 
      Complex[-0.23541187271438058`, -0.4241720584845742], 
      Complex[-0.9815732249810937, 0.1744237261311567], Complex[
      0.7125086924805202, 0.], 
      Complex[-0.07005259440298892, -0.2876476887785543], Complex[
      0.1943882596326707, -0.05333454641082988], Complex[
      0.02608974390466376, -0.41342106725484024`], 
      Complex[-0.07005259440298892, 0.2876476887785543], Complex[
      0.12301402041439655`, 0.]}}]]]]], "Output",
 CellChangeTimes->{{3.880201729771508*^9, 3.88020178164246*^9}},
 CellLabel->
  "Out[59]//MatrixForm=",ExpressionUUID->"5e173311-92db-42dd-9d90-\
dba42e05795c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumState", "[", "\"\<01\>\"", "]"}], "[", 
  "\"\<Association\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880201868804532*^9, 3.880201893365178*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"52f13635-f93f-444c-9d4d-2109e22879c3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    InterpretationBox[
     StyleBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      FontWeight->"Plain"],
     Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], "\[Rule]", 
    
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.880201878786338*^9, 3.880201894438978*^9}},
 CellLabel->"Out[64]=",ExpressionUUID->"a0cfab65-057a-47c1-b3dd-fbc423b4c5fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "@", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], "]"}], "@", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "@", 
    RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8802019203707457`*^9, 3.88020194035532*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"f3789dc2-7034-441d-bbac-664d4abf5cc3"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], "2"]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox[
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "\[Alpha]"}]], "2"]}], ")"}], " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"\"H\"", "@*", 
          RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
          "\"0\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {
      Rational[1, 2] + Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]),
        Rational[1, 2] + 
       Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition["H", 
        "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802019274465723`*^9, 3.88020194281811*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"08d8f294-9369-4af7-b2de-b176d3eac2e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Composition", "[", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], "]"}], ",", 
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], "]"}], "@", 
  RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8802019591347933`*^9, 3.880201966795796*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"cbaa32e3-77ab-430c-ad36-ab9768a3d800"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9783277750658763, 0.8130482440308133, 
                0.792482442210422}, {0.9914567336251527, 0.9258060892399838, 
                0.8057508553599579}}, {{0.9849376374155485, 
                0.8159259088337427, 0.6592331722247367}, {0.9940169026342276, 
                0.9315662788010912, 0.8285298740955575}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{"\"H\"", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition["H", 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9783277750658763, 0.8130482440308133, 
                0.792482442210422}, {0.9914567336251527, 0.9258060892399838, 
                0.8057508553599579}}, {{0.9849376374155485, 
                0.8159259088337427, 0.6592331722247367}, {0.9940169026342276, 
                0.9315662788010912, 0.8285298740955575}}}, {{0, 0}, {2, 2}}, {
                0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{"\"H\"", "@*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "@*", "\"H\"", "@*", 
                "\"0\""}]], Annotation[#, 
              Composition["H", 
               "P"[$CellContext`\[Alpha]], "H", "0"], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[
   Automatic, {2}, 0, {
    1, {{0, 2}, {{1}, {2}}}, {
     Rational[1, 2] + Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]), 
      Rational[1, 2] + 
      Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition["H", 
       "P"[$CellContext`\[Alpha]], "H", "0"], "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880201967677046*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"75d6d215-a737-4bfd-bfd0-f8f905298561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Composition", "[", 
   RowBox[{"f", ",", "g", ",", "h"}], "]"}], "@", "x"}]], "Input",
 CellChangeTimes->{{3.880201980188336*^9, 3.8802019845681973`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"b4820eb0-8ffa-4304-811b-b0ace3847dd5"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"g", "[", 
   RowBox[{"h", "[", "x", "]"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.8802019848181343`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"c54dcacb-34f6-476d-85e5-769a5242dd6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
    RowBox[{"QuantumOperator", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], "]"}], ",", 
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8802020185390368`*^9, 3.8802020251617603`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"55a25004-9ece-4a1c-b923-f3c8d379334a"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{1.625, -1.375}, {2.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", "\[Alpha]", ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->10,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "3"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 2}, {{1}, {4}}}, {
           1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
     RightComposition["H", 
       "P"[$CellContext`\[Alpha]], "H"]|>]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202026998049*^9, 3.880202035529812*^9}},
 CellLabel->"Out[69]=",ExpressionUUID->"41508a7f-579f-421a-8365-4d1fe7b58f0b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\""}], 
   "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.88020208146587*^9, 3.880202086263711*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"71621db4-abc0-47ac-8314-9955ed7ad15c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumCircuitOperator",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13., {0., 13.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 RGBColor[0.537254, 0.537254, 0.537254], 
                 Opacity[0.3], 
                 LineBox[{{0.375, -1}, {0.625, -1}}], 
                 LineBox[{{1.375, -1}, {1.625, -1}}], 
                 LineBox[{{2.375, -1}, {2.625, -1}}], 
                 LineBox[{{3.375, -1}, {3.625, -1}}]}, {{
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.560181, 0.691569, 0.194885]], 
                  FaceForm[{
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{1.625, -1.375}, {2.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{2.625, -1.375}, {3.375, -0.625}, 
                   RoundingRadius -> 0.1]}}, {}}, ImageSize -> Tiny], 
              RowBox[{"\"H\"", "/*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "/*", "\"H\""}]], 
             Annotation[#, 
              RightComposition["H", 
               "P"[$CellContext`\[Alpha]], "H"], "Tooltip"]& ], 
            InterpretationBox[
             TagBox[
              
              GridBox[{{""}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], "Grid"], 
             
             Grid[{{}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
              Alignment -> {Left, Automatic}, Spacings -> {2, Automatic}]]}}, 
          AutoDelete -> False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13., {0., 13.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 RGBColor[0.537254, 0.537254, 0.537254], 
                 Opacity[0.3], 
                 LineBox[{{0.375, -1}, {0.625, -1}}], 
                 LineBox[{{1.375, -1}, {1.625, -1}}], 
                 LineBox[{{2.375, -1}, {2.625, -1}}], 
                 LineBox[{{3.375, -1}, {3.625, -1}}]}, {{
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{0.625, -1.375}, {1.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.560181, 0.691569, 0.194885]], 
                  FaceForm[{
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{1.625, -1.375}, {2.375, -0.625}, 
                   RoundingRadius -> 0.1]}, {
                  EdgeForm[
                   RGBColor[0.368417, 0.506779, 0.709798]], 
                  FaceForm[{
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.15]}], 
                  
                  RectangleBox[{2.625, -1.375}, {3.375, -0.625}, 
                   RoundingRadius -> 0.1]}}, {}}, ImageSize -> Tiny], 
              RowBox[{"\"H\"", "/*", 
                RowBox[{"\"P\"", "[", "\[Alpha]", "]"}], "/*", "\"H\""}]], 
             Annotation[#, 
              RightComposition["H", 
               "P"[$CellContext`\[Alpha]], "H"], "Tooltip"]& ], 
            GridBox[{{""}, {
               RowBox[{
                 TagBox["\"Gates: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {4}, 0, {
         1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
          2^Rational[-1, 2], 2^Rational[-1, 2], 2^
           Rational[-1, 2], -2^Rational[-1, 2]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
          "ParameterSpec" -> {}|>]], {{1}, {1}}], 
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {4}, 0, {
         1, {{0, 2}, {{1}, {4}}}, {
          1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
      
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[
        Automatic, {4}, 0, {
         1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
          2^Rational[-1, 2], 2^Rational[-1, 2], 2^
           Rational[-1, 2], -2^Rational[-1, 2]}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
          "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
    RightComposition["H", 
      "P"[$CellContext`\[Alpha]], "H"]|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880202086678433*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"ed54606e-494c-4595-b6cd-417afc38ad8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{
   "\"\<H\>\"", ",", "\"\<Z\>\"", ",", "\"\<X\>\"", ",", "\"\<H\>\""}], "}"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.880202114428197*^9, 3.8802021228512793`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"c9cb7e6f-478a-465c-9e01-5ed06982a3e4"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{1.625, -1.375}, {2.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Z\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{RGBColor[
        0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"X\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}}, InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->10,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "4"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, -1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "Z", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[Automatic, {4}, 0, {1, {{0, 2}, {{2}, {3}}}, {1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "X", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}]}, "Label" -> 
     RightComposition["H", "Z", "X", "H"]|>]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202115116447*^9, 3.880202128347484*^9}},
 CellLabel->"Out[72]=",ExpressionUUID->"5ba784e2-6e60-4496-961a-1a6399248245"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", ",", 
    RowBox[{"{", "1", "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8802022048834352`*^9, 3.880202206661421*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"f64d6b7b-3e91-44f3-b3c5-fe654f3c2192"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {4.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {4.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{1.625, -1.375}, {2.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", "\[Alpha]", ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{4.151690686445303, -1.0772902651951612`}, {
          4.212366961023424, -1.0332063712732258`}}], 
         LineBox[{{4.116904337848513, -1.0409065970372444`}, {
          4.163666072987917, -0.9822692358521422}}], 
         LineBox[{{4.073692193435111, -1.015088542646603}, {
          4.103169070809155, -0.9461239597052442}}], 
         LineBox[{{4.0251687373408105`, -1.0016969196685122`}, {
          4.035236232277135, -0.9273756875359171}}], 
         LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
          3.9647637677228653`, -0.9273756875359171}}], 
         LineBox[{{3.9263078065648895`, -1.015088542646603}, {
          3.896830929190845, -0.9461239597052442}}], 
         LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
          3.8363339270120824`, -0.9822692358521422}}], 
         LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
          3.787633038976576, -1.0332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{4., -1.1875}, {4.17024643740233, -0.853372553429362}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{4., -0.625}, {4., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{3.90625, -0.2109375}, {4.09375, -0.2109375}, {
            4., -0.0234375}}]}}}}}, InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->10,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "4"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 2}, {{1}, {4}}}, {
           1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 1}, {{4}}}, {1}}], 
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], {1}]}, "Label" -> 
     RightComposition["H", 
       "P"[$CellContext`\[Alpha]], "H", None]|>]], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.880202207099071*^9, 3.880202226376623*^9}},
 CellLabel->"Out[73]=",ExpressionUUID->"0d8604cf-a33b-4ac0-ae5d-55fbc66d1541"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<RY\>\"", ",", "\[Theta]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", ",", 
    RowBox[{"{", "1", "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880202259206002*^9, 3.8802022627777767`*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"57bd0572-9fa3-482c-89e7-4cae17ee6dc9"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {4.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {4.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
        0.528488, 0.470624, 0.701351], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{
            SubscriptBox["\<\"R\"\>", "\<\"Y\"\>"], "(", "\[Theta]", ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{1.625, -1.375}, {2.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", "\[Alpha]", ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {2., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{4.151690686445303, -1.0772902651951612`}, {
          4.212366961023424, -1.0332063712732258`}}], 
         LineBox[{{4.116904337848513, -1.0409065970372444`}, {
          4.163666072987917, -0.9822692358521422}}], 
         LineBox[{{4.073692193435111, -1.015088542646603}, {
          4.103169070809155, -0.9461239597052442}}], 
         LineBox[{{4.0251687373408105`, -1.0016969196685122`}, {
          4.035236232277135, -0.9273756875359171}}], 
         LineBox[{{3.9748312626591895`, -1.0016969196685122`}, {
          3.9647637677228653`, -0.9273756875359171}}], 
         LineBox[{{3.9263078065648895`, -1.015088542646603}, {
          3.896830929190845, -0.9461239597052442}}], 
         LineBox[{{3.8830956621514874`, -1.0409065970372444`}, {
          3.8363339270120824`, -0.9822692358521422}}], 
         LineBox[{{3.8483093135546973`, -1.0772902651951612`}, {
          3.787633038976576, -1.0332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{4., -1.1875}, {4.17024643740233, -0.853372553429362}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{4., -0.625}, {4., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{3.90625, -0.2109375}, {4.09375, -0.2109375}, {
            4., -0.0234375}}]}}}}}, InsetBox[
       StyleBox["1",
        StripOnInput->False,
        FontSize->10,
        FontSlant->Italic,
        FontColor->RGBColor[0.537254, 0.537254, 0.537254],
        Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
       ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "4"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {Rational[1, 2] E^(Complex[0, 
                 Rational[-1, 2]] $CellContext`\[Theta]) + 
            Rational[1, 2] E^(Complex[0, 
                 Rational[1, 2]] $CellContext`\[Theta]), Complex[0, 
               Rational[-1, 2]] E^(Complex[0, 
                 Rational[-1, 2]] $CellContext`\[Theta]) + Complex[0, 
               Rational[1, 2]] E^(Complex[0, 
                 Rational[1, 2]] $CellContext`\[Theta]), Complex[0, 
               Rational[1, 2]] E^(Complex[0, 
                 Rational[-1, 2]] $CellContext`\[Theta]) + Complex[0, 
               Rational[-1, 2]] E^(Complex[0, 
                 Rational[1, 2]] $CellContext`\[Theta]), 
            Rational[1, 2] E^(Complex[0, 
                 Rational[-1, 2]] $CellContext`\[Theta]) + 
            Rational[1, 2] E^(Complex[0, 
                 Rational[1, 2]] $CellContext`\[Theta])}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["R", "Y"][$CellContext`\[Theta]], 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 2}, {{1}, {4}}}, {
           1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 1}, {{4}}}, {1}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], {1}]}, "Label" -> 
     RightComposition[
       Subscript["R", "Y"][$CellContext`\[Theta]], 
       "P"[$CellContext`\[Alpha]], "H", None]|>]], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.880202263092478*^9, 3.880202264211125*^9}},
 CellLabel->"Out[74]=",ExpressionUUID->"ebbab385-b67b-4f78-8f51-e3b339aa7455"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", 
     ",", 
     RowBox[{"{", "1", "}"}]}], "}"}], "]"}], "[", 
  RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.88020231969433*^9, 3.880202323225799*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"9a615b77-4aef-48cb-ab9b-cb38178ebdea"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["Indeterminate", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {4}, 0, {
       1, {{0, 2}, {{1}, {4}}}, {
        Rational[1, 2] + 
         Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]), 
         Rational[1, 2] + 
         Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
        "ParameterSpec" -> {}|>]], {{0, 1}, {1}}], {1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8802023236165237`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"7618aa96-e410-4db2-9169-4c5916af8530"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", 
     ",", 
     RowBox[{"{", "1", "}"}]}], "}"}], "]"}], "[", "]"}]], "Input",
 CellChangeTimes->{{3.8802022955936832`*^9, 3.8802022975541487`*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"41a926ba-3a89-4154-9cba-98604d551097"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 GrayLevel[0.55], 
                 RectangleBox[{0., 0.}, {0.87, 1.}]}, {
                 GrayLevel[0.8], 
                 RectangleBox[{1., 0.}, {1.88, 2.}]}, {
                 GrayLevel[0.65], 
                 RectangleBox[{2., 0.}, {2.88, 3.}]}}, Background -> 
               GrayLevel[1], ImageSize -> {Automatic, 29.029}, AspectRatio -> 
               1], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "1", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["Indeterminate", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {4}, 0, {
       1, {{0, 2}, {{1}, {4}}}, {
        Rational[1, 2] + 
         Rational[1, 2] E^(Complex[0, 1] $CellContext`\[Alpha]), 
         Rational[1, 2] + 
         Rational[-1, 2] E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1|>], "Output" -> 
        Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[
              Interpretation[
               Tooltip[
                Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> False], 
             1} -> SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
        "ParameterSpec" -> {}|>]], {{0, 1}, {1}}], {1}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880202298970549*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"97e5a186-7ab3-4286-96c3-cf9a419af432"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<H\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", 
      ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "]"}], "[", 
   RowBox[{"QuantumState", "[", "\"\<0\>\"", "]"}], "]"}], "==", 
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<H\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", 
      ",", 
      RowBox[{"{", "1", "}"}]}], "}"}], "]"}], "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.880202331598392*^9, 3.8802023319268*^9}},
 CellLabel->"In[77]:=",ExpressionUUID->"26457aca-4d44-429e-ba23-3261db6c4638"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.88020233257088*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"c4c858e6-6f3a-4fd0-a5a4-35482f60263f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", "\[Alpha]"}], "}"}], ",", "\"\<H\>\"", ",", 
    RowBox[{"{", "1", "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880202442291359*^9, 3.880202522246002*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"594e2b1a-4f0d-4e3b-a306-347b20e08b62"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{0.375, -2}, {1.625, -2}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}], 
       LineBox[{{5.375, -1}, {5.625, -1}}], 
       LineBox[{{2.375, -2}, {5.625, -2}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{1.625, -2.}, {1.85, -2.}}], 
          LineBox[{{2.15, -2.}, {2.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{2., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{1.85, -2.}, {2.15, -2.}}], 
            LineBox[{{2., -2.15}, {2., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
         LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{2., -1.}, 0.09375]}}, {}}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", "\[Alpha]", ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{4.625, -1.375}, {5.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{5.151690686445303, -1.0772902651951612`}, {
          5.212366961023424, -1.0332063712732258`}}], 
         LineBox[{{5.116904337848513, -1.0409065970372444`}, {
          5.163666072987917, -0.9822692358521422}}], 
         LineBox[{{5.073692193435111, -1.015088542646603}, {
          5.103169070809155, -0.9461239597052442}}], 
         LineBox[{{5.0251687373408105`, -1.0016969196685122`}, {
          5.035236232277135, -0.9273756875359171}}], 
         LineBox[{{4.9748312626591895`, -1.0016969196685122`}, {
          4.964763767722865, -0.9273756875359171}}], 
         LineBox[{{4.926307806564889, -1.015088542646603}, {
          4.896830929190845, -0.9461239597052442}}], 
         LineBox[{{4.883095662151487, -1.0409065970372444`}, {
          4.836333927012083, -0.9822692358521422}}], 
         LineBox[{{4.848309313554697, -1.0772902651951612`}, {
          4.787633038976576, -1.0332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{5., -1.1875}, {5.17024643740233, -0.853372553429362}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{5., -0.625}, {5., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
            5., -0.0234375}}]}}}}}, {InsetBox[
        StyleBox["1",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
        StyleBox["2",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
        2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 2}, {{1}, {4}}}, {
           1, E^(Complex[0, 1] $CellContext`\[Alpha])}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[$CellContext`\[Alpha]], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[Automatic, {4}, 0, {1, {{0, 1}, {{4}}}, {1}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1}, {1}}], {1}]}, "Label" -> 
     RightComposition["H", 
       Subscript["C", "NOT"][{1}, {}], 
       "P"[$CellContext`\[Alpha]], "H", None]|>]], TraditionalForm]], "Output",\

 CellChangeTimes->{{3.880202494307407*^9, 3.880202523581002*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"056456ac-a20f-4a81-a313-5751a7886afb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", 
     RowBox[{"\"\<I\>\"", "->", "2"}]}], "}"}], "]"}], "[", "]"}]], "Input",
 CellChangeTimes->{{3.880202595110704*^9, 3.880202604510795*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"f51d473b-f40e-4f01-b77a-12526a2c64e3"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"None", "/*", "\"H\"", "/*", "\"I\""}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 2}, {{1}, {3}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
      RightComposition[None, "H", "I"], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202590169499*^9, 3.880202605697166*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"ae7ba513-c33e-4aa3-83fc-1542fd4efe85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", "\"\<CNOT\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880202649836852*^9, 3.880202652095818*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"be811de7-a5d0-4f0c-a4ab-44f307a1eadb"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      InterpretationBox[
       RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0", "\[InvisibleSpace]", "0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0", "\[InvisibleSpace]", "0"}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> True]]}],
       Wolfram`QuantumFramework`QuditName[
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False], 
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> True]]], "+", 
      InterpretationBox[
       RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0", "\[InvisibleSpace]", "1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"0", "\[InvisibleSpace]", "1"}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> True]]}],
       Wolfram`QuantumFramework`QuditName[
        Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False], 
        Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> True]]], "+", 
      InterpretationBox[
       RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1", "\[InvisibleSpace]", "0"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1", "\[InvisibleSpace]", "1"}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> True]]}],
       Wolfram`QuantumFramework`QuditName[
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False], 
        Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> True]]], "+", 
      InterpretationBox[
       RowBox[{
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1", "\[InvisibleSpace]", "1"}]},
           "Ket"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
        InterpretationBox[
         StyleBox[
          TemplateBox[{
            RowBox[{"1", "\[InvisibleSpace]", "0"}]},
           "Bra"],
          FontWeight->"Plain"],
         Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> True]]}],
       Wolfram`QuantumFramework`QuditName[
        Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False], 
        Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> True]]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{
          SubscriptBox["\"C\"", "\"NOT\""], "[", 
          RowBox[{
            RowBox[{"{", "1", "}"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                SubscriptBox["2", "1"], ",", 
                SubscriptBox["2", "2"]}], "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{
                SubscriptBox["2", "1"], ",", 
                SubscriptBox["2", "2"]}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {16}, 0, {1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1, {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            
            Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
             False], 1} -> 1, {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
       Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 2}, {1,
     2}}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202652812448*^9, 3.880202654360641*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"780045eb-8da2-4e64-b63f-71dffe29968a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\""}], "}"}], "]"}], "[", 
  "]"}]], "Input",
 CellChangeTimes->{{3.88020257424864*^9, 3.88020257642801*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"58ea2005-0cc7-4c04-aa89-d009d413ae9a"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"0", "\[InvisibleSpace]", "0"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"1", "\[InvisibleSpace]", "1"}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{
        RowBox[{"None", "/*", "\"H\"", "/*", 
          RowBox[{
            SubscriptBox["\"C\"", "\"NOT\""], "[", 
            RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}]}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {4}, 0, {
     1, {{0, 2}, {{1}, {4}}}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
      RightComposition[None, "H", 
        Subscript["C", "NOT"][{1}, {}]], "ParameterSpec" -> {}|>]]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202574995767*^9, 3.880202579003827*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"19b145f7-7d09-4432-bbb6-b4c5d0266975"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", 
      RowBox[{"Pi", "/", "4"}]}], "}"}], ",", "\"\<H\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellLabel->"In[96]:=",ExpressionUUID->"374a2332-10aa-4773-a8f4-ce086e524232"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{0.375, -2}, {1.625, -2}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}], 
       LineBox[{{2.375, -2}, {4.625, -2}}], 
       LineBox[{{5.375, -1}, {5.625, -1}}], 
       LineBox[{{5.375, -2}, {5.625, -2}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{1.625, -2.}, {1.85, -2.}}], 
          LineBox[{{2.15, -2.}, {2.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{2., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{1.85, -2.}, {2.15, -2.}}], 
            LineBox[{{2., -2.15}, {2., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
         LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{2., -1.}, 0.09375]}}, {}}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", 
            FractionBox["\[Pi]", "4"], ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{4.625, -2.375}, {5.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{5.151690686445303, -1.5772902651951612`}, {
          5.212366961023424, -1.5332063712732258`}}], 
         LineBox[{{5.116904337848513, -1.5409065970372444`}, {
          5.163666072987917, -1.4822692358521423`}}], 
         LineBox[{{5.073692193435111, -1.515088542646603}, {
          5.103169070809155, -1.4461239597052442`}}], 
         LineBox[{{5.0251687373408105`, -1.5016969196685122`}, {
          5.035236232277135, -1.4273756875359171`}}], 
         LineBox[{{4.9748312626591895`, -1.5016969196685122`}, {
          4.964763767722865, -1.4273756875359171`}}], 
         LineBox[{{4.926307806564889, -1.515088542646603}, {
          4.896830929190845, -1.4461239597052442`}}], 
         LineBox[{{4.883095662151487, -1.5409065970372444`}, {
          4.836333927012083, -1.482269235852142}}], 
         LineBox[{{4.848309313554697, -1.5772902651951612`}, {
          4.787633038976576, -1.5332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{5., -1.6875}, {5.17024643740233, -1.3533725534293621`}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{5., -0.625}, {5., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
            5., -0.0234375}}]}}}}}, {InsetBox[
        StyleBox["1",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
        StyleBox["2",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
        2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, E^(Complex[0, 
               Rational[1, 4]] Pi)}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[Rational[1, 4] Pi], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {16}, 0, {1, {{0, 3}, {{6}, {11}, {16}}}, {1, 2, 3}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}], {1, 2}]}, "Label" -> 
     RightComposition["H", 
       Subscript["C", "NOT"][{1}, {}], 
       "P"[Rational[1, 4] Pi], "H", None]|>]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202826069495*^9, 3.88020282738561*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"10cabe06-1b3a-4939-85ae-d4e37e6c6139"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Phase\>\"", ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", "\"\<H\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "[", "]"}], "[", 
  "\"\<ProbabilityPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880202724494124*^9, 3.8802027583474007`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"5e2ccd76-4009-4a02-85d0-42de0615213b"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.25}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{71.36731575832715, 
            146.89535393927468`}, {-133.404499093832, 114.2843177608932}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.25]& ,
         TagBoxNote->"0.25"],
        StyleBox["0.25`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.25}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{154.37124749556764`, 
            229.89928567651518`}, {-133.404499093832, 114.2843177608932}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.25]& ,
         TagBoxNote->"0.25"],
        StyleBox["0.25`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.25}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{237.37517923280814`, 
            312.90321741375567`}, {-133.404499093832, 114.2843177608932}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.25]& ,
         TagBoxNote->"0.25"],
        StyleBox["0.25`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.25, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 0.25},
              "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{320.3791109700486, 
            395.90714915099613`}, {-133.404499093832, 114.2843177608932}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.25]& ,
         TagBoxNote->"0.25"],
        StyleBox["0.25`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.25, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{4.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.88020272586662*^9, 3.880202758634706*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"03eb73e5-49de-41d1-a919-ffd0385ed387"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", 
      RowBox[{"Pi", "/", "4"}]}], "}"}], ",", "\"\<H\>\"", ",", 
    RowBox[{"\"\<H\>\"", "->", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880202980502102*^9, 3.880202980658493*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"01221fca-692b-4c96-9cc4-052f08183c6c"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{0.375, -2}, {1.625, -2}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{2.375, -2}, {2.625, -2}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}], 
       LineBox[{{3.375, -2}, {4.625, -2}}], 
       LineBox[{{5.375, -1}, {5.625, -1}}], 
       LineBox[{{5.375, -2}, {5.625, -2}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{1.625, -2.}, {1.85, -2.}}], 
          LineBox[{{2.15, -2.}, {2.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{2., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{1.85, -2.}, {2.15, -2.}}], 
            LineBox[{{2., -2.15}, {2., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
         LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{2., -1.}, 0.09375]}}, {}}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", 
            FractionBox["\[Pi]", "4"], ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{3.625, -1.375}, {4.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{2.625, -2.375}, {3.375, -1.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -2.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{4.625, -2.375}, {5.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{5.151690686445303, -1.5772902651951612`}, {
          5.212366961023424, -1.5332063712732258`}}], 
         LineBox[{{5.116904337848513, -1.5409065970372444`}, {
          5.163666072987917, -1.4822692358521423`}}], 
         LineBox[{{5.073692193435111, -1.515088542646603}, {
          5.103169070809155, -1.4461239597052442`}}], 
         LineBox[{{5.0251687373408105`, -1.5016969196685122`}, {
          5.035236232277135, -1.4273756875359171`}}], 
         LineBox[{{4.9748312626591895`, -1.5016969196685122`}, {
          4.964763767722865, -1.4273756875359171`}}], 
         LineBox[{{4.926307806564889, -1.515088542646603}, {
          4.896830929190845, -1.4461239597052442`}}], 
         LineBox[{{4.883095662151487, -1.5409065970372444`}, {
          4.836333927012083, -1.482269235852142}}], 
         LineBox[{{4.848309313554697, -1.5772902651951612`}, {
          4.787633038976576, -1.5332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{5., -1.6875}, {5.17024643740233, -1.3533725534293621`}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{5., -0.625}, {5., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
            5., -0.0234375}}]}}}}}, {InsetBox[
        StyleBox["1",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
        StyleBox["2",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
        2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, E^(Complex[0, 
               Rational[1, 4]] Pi)}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[Rational[1, 4] Pi], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{2}, {2}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {16}, 0, {1, {{0, 3}, {{6}, {11}, {16}}}, {1, 2, 3}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}], {1, 2}]}, "Label" -> 
     RightComposition["H", 
       Subscript["C", "NOT"][{1}, {}], 
       "P"[Rational[1, 4] Pi], "H", "H", None]|>]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202980928006*^9, 3.880202981967024*^9}},
 CellLabel->
  "Out[101]=",ExpressionUUID->"3acd0058-ef4c-4fa4-979e-9d5e90c43d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", 
      RowBox[{"Pi", "/", "4"}]}], "}"}], ",", "\"\<Barrier\>\"", ",", 
    "\"\<H\>\"", ",", 
    RowBox[{"\"\<H\>\"", "->", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8802028928812037`*^9, 3.880202926343049*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"356c6767-6fa1-4d69-a7b7-061855c6dae9"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{0.375, -2}, {1.625, -2}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{2.375, -2}, {3.625, -2}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}], 
       LineBox[{{4.375, -2}, {4.625, -2}}], 
       LineBox[{{5.375, -1}, {5.625, -1}}], 
       LineBox[{{5.375, -2}, {5.625, -2}}], 
       LineBox[{{6.375, -1}, {6.625, -1}}], 
       LineBox[{{6.375, -2}, {6.625, -2}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {6.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {6.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{1.625, -2.}, {1.85, -2.}}], 
          LineBox[{{2.15, -2.}, {2.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{2., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{1.85, -2.}, {2.15, -2.}}], 
            LineBox[{{2., -2.15}, {2., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
         LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{2., -1.}, 0.09375]}}, {}}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", 
            FractionBox["\[Pi]", "4"], ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{3.625, -1}, {4.375, -1}}], 
         LineBox[{{3.625, -2}, {4.375, -2}}]}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Thickness[Large], Opacity[
         0.8], Dashing[{Small, Small}], 
         LineBox[NCache[{{{4, Rational[-5, 2]}, {4, Rational[-1, 2]}}}, {{{
             4, -2.5}, {4, -0.5}}}]]}}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{4.625, -1.375}, {5.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {5., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{4.625, -2.375}, {5.375, -1.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {5., -2.}], {{{1, 0}, {0, 1}}, 
          Center}]}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{5.625, -2.375}, {6.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{6.151690686445303, -1.5772902651951612`}, {
          6.212366961023424, -1.5332063712732258`}}], 
         LineBox[{{6.116904337848513, -1.5409065970372444`}, {
          6.163666072987917, -1.4822692358521423`}}], 
         LineBox[{{6.073692193435111, -1.515088542646603}, {
          6.103169070809155, -1.4461239597052442`}}], 
         LineBox[{{6.0251687373408105`, -1.5016969196685122`}, {
          6.035236232277135, -1.4273756875359171`}}], 
         LineBox[{{5.9748312626591895`, -1.5016969196685122`}, {
          5.964763767722865, -1.4273756875359171`}}], 
         LineBox[{{5.926307806564889, -1.515088542646603}, {
          5.896830929190845, -1.4461239597052442`}}], 
         LineBox[{{5.883095662151487, -1.5409065970372444`}, {
          5.836333927012083, -1.482269235852142}}], 
         LineBox[{{5.848309313554697, -1.5772902651951612`}, {
          5.787633038976576, -1.5332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{6., -1.6875}, {6.17024643740233, -1.3533725534293621`}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{6., -0.625}, {6., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{5.90625, -0.2109375}, {6.09375, -0.2109375}, {
            6., -0.0234375}}]}}}}}, {InsetBox[
        StyleBox["1",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
        StyleBox["2",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
        2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, E^(Complex[0, 
               Rational[1, 4]] Pi)}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[Rational[1, 4] Pi], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       "Barrier", 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{2}, {2}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {16}, 0, {1, {{0, 3}, {{6}, {11}, {16}}}, {1, 2, 3}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}], {1, 2}]}, "Label" -> 
     RightComposition["H", 
       Subscript["C", "NOT"][{1}, {}], 
       "P"[Rational[1, 4] Pi], "H", "H", None]|>]], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202897372199*^9, 3.8802029280650787`*^9}},
 CellLabel->"Out[98]=",ExpressionUUID->"8e92a164-cf38-4f5a-a167-ff03aedf438b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumCircuitOperator", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Phase\>\"", ",", 
      RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
    RowBox[{"\"\<H\>\"", "->", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880202943048791*^9, 3.880202955870693*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"d45a31d5-778d-4e11-8979-62072fb6c502"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    GraphicsBox[{
      {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
       LineBox[{{0.375, -1}, {0.625, -1}}], 
       LineBox[{{1.375, -1}, {1.625, -1}}], 
       LineBox[{{0.375, -2}, {1.625, -2}}], 
       LineBox[{{2.375, -1}, {2.625, -1}}], 
       LineBox[{{3.375, -1}, {3.625, -1}}], 
       LineBox[{{2.375, -2}, {3.625, -2}}], 
       LineBox[{{4.375, -1}, {4.625, -1}}], 
       LineBox[{{4.375, -2}, {4.625, -2}}], 
       LineBox[{{5.375, -1}, {5.625, -1}}], 
       LineBox[{{5.375, -2}, {5.625, -2}}]}, {
       {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
        LineBox[{{0.375, -0.0234375}, {5.625, -0.0234375}}], 
        LineBox[{{0.375, 0.0234375}, {5.625, 0.0234375}}]}, InsetBox[
        StyleBox["\<\"c\"\>",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
       {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{RGBColor[
        0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
        RectangleBox[{0.625, -1.375}, {1.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox["\<\"H\"\>",
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
          LineBox[{{1.625, -2.}, {1.85, -2.}}], 
          LineBox[{{2.15, -2.}, {2.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.15]}], 
           DiskBox[{2., -2.}, 0.15000000000000002], 
           {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
            LineBox[{{1.85, -2.}, {2.15, -2.}}], 
            LineBox[{{2., -2.15}, {2., -1.85}}]}}}, 
         {RGBColor[0.880722, 0.611041, 0.142051], 
          LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
        {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
         LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
         LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
         {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
          RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.8]}], 
          DiskBox[{2., -1.}, 0.09375]}}, {}}, 
       {EdgeForm[RGBColor[0.560181, 0.691569, 0.194885]], FaceForm[{RGBColor[
        0.560181, 0.691569, 0.194885], Opacity[0.15]}], 
        RectangleBox[{2.625, -1.375}, {3.375, -0.625},
         RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
          StyleBox[
           RowBox[{"\<\"P\"\>", "(", 
            FractionBox["\[Pi]", "4"], ")"}],
           StripOnInput->False,
           FontFamily->"Roboto",
           FontSize->11,
           FontColor->GrayLevel[0],
           Background->GrayLevel[0, 0]], {3., -1.}], {{{1, 0}, {0, 1}}, 
          Center}]}, {{
         {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
          RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
          RectangleBox[{3.625, -1.375}, {4.375, -0.625},
           RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"H\"\>",
             StripOnInput->False,
             FontFamily->"Roboto",
             FontSize->11,
             FontColor->GrayLevel[0],
             Background->GrayLevel[0, 0]], {4., -1.}], {{{1, 0}, {0, 1}}, 
            Center}]}, 
         {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
          RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.15]}], 
          RectangleBox[{3.625, -2.375}, {4.375, -1.625},
           RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
            StyleBox["\<\"H\"\>",
             StripOnInput->False,
             FontFamily->"Roboto",
             FontSize->11,
             FontColor->GrayLevel[0],
             Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
            Center}]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{4., -1.375}, {4., -1.625}}]}}, 
       {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
        0.7367, 0.358, 0.503], Opacity[0.15]}], 
        RectangleBox[{4.625, -2.375}, {5.375, -0.625},
         RoundingRadius->0.1], 
        {Thickness[Small], 
         LineBox[{{5.151690686445303, -1.5772902651951612`}, {
          5.212366961023424, -1.5332063712732258`}}], 
         LineBox[{{5.116904337848513, -1.5409065970372444`}, {
          5.163666072987917, -1.4822692358521423`}}], 
         LineBox[{{5.073692193435111, -1.515088542646603}, {
          5.103169070809155, -1.4461239597052442`}}], 
         LineBox[{{5.0251687373408105`, -1.5016969196685122`}, {
          5.035236232277135, -1.4273756875359171`}}], 
         LineBox[{{4.9748312626591895`, -1.5016969196685122`}, {
          4.964763767722865, -1.4273756875359171`}}], 
         LineBox[{{4.926307806564889, -1.515088542646603}, {
          4.896830929190845, -1.4461239597052442`}}], 
         LineBox[{{4.883095662151487, -1.5409065970372444`}, {
          4.836333927012083, -1.482269235852142}}], 
         LineBox[{{4.848309313554697, -1.5772902651951612`}, {
          4.787633038976576, -1.5332063712732258`}}]}, 
        {Thickness[Medium], 
         LineBox[{{5., -1.6875}, {5.17024643740233, -1.3533725534293621`}}], 
         {RGBColor[0.537254, 0.537254, 0.537254], 
          LineBox[{{5., -0.625}, {5., -0.2109375}}], 
          {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
           FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
           PolygonBox[{{4.90625, -0.2109375}, {5.09375, -0.2109375}, {
            5., -0.0234375}}]}}}}}, {InsetBox[
        StyleBox["1",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
        StyleBox["2",
         StripOnInput->False,
         FontSize->10,
         FontSlant->Italic,
         FontColor->RGBColor[0.537254, 0.537254, 0.537254],
         Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
        ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
     ImageSize->Medium],
    TemplateBox[{"\"QuantumCircuitOperator: \"", 
      RowBox[{"\[LeftAssociation]", 
        RowBox[{
          RowBox[{"\"Depth\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"Width\"", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}, 
     "RowDefault"]],
   Wolfram`QuantumFramework`QuantumCircuitOperator[<|"Elements" -> {
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {
          1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
           "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 4}, {{1}, {6}, {12}, {15}}}, {1, 1, 1, 1}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                
                Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
                 False], 1} -> 1, {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           Subscript["C", "NOT"][{1}, {}], "ParameterSpec" -> {}|>]], {{1, 
        2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {4}, 0, {1, {{0, 2}, {{1}, {4}}}, {1, E^(Complex[0, 
               Rational[1, 4]] Pi)}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
           "P"[Rational[1, 4] Pi], "ParameterSpec" -> {}|>]], {{1}, {1}}], 
       Wolfram`QuantumFramework`QuantumOperator[
        Wolfram`QuantumFramework`QuantumState[
         SparseArray[
         Automatic, {16}, 0, {
          1, {{0, 16}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {
            11}, {12}, {13}, {14}, {15}, {16}}}, {
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[-1, 2], 
            Rational[1, 2], 
            Rational[-1, 2], 
            Rational[1, 2], 
            Rational[1, 2], 
            Rational[-1, 2], 
            Rational[-1, 2], 
            Rational[1, 2], 
            Rational[-1, 2], 
            Rational[-1, 2], 
            Rational[1, 2]}}], 
         Wolfram`QuantumFramework`QuantumBasis[<|
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
              SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
           "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Superscript["H", 
             CircleTimes[2]], "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}], 
       Wolfram`QuantumFramework`QuantumMeasurementOperator[
        Wolfram`QuantumFramework`QuantumOperator[
         Wolfram`QuantumFramework`QuantumState[
          SparseArray[
          Automatic, {16}, 0, {1, {{0, 3}, {{6}, {11}, {16}}}, {1, 2, 3}}], 
          
          Wolfram`QuantumFramework`QuantumBasis[<|
           "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
                 Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
               SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
            "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
            "ParameterSpec" -> {}|>]], {{1, 2}, {1, 2}}], {1, 2}]}, "Label" -> 
     RightComposition["H", 
       Subscript["C", "NOT"][{1}, {}], 
       "P"[Rational[1, 4] Pi], 
       Superscript["H", 
        CircleTimes[2]], None]|>]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880202946947672*^9, 3.8802029573861303`*^9}},
 CellLabel->
  "Out[100]=",ExpressionUUID->"65ec9d38-a25c-4c16-aa4d-dce08fc53a74"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Phase\>\"", ",", 
        RowBox[{"Pi", "/", "4"}]}], "}"}], ",", 
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "[", "]"}], "[", 
  "\"\<ProbabilityPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880202984370924*^9, 3.880202989770177*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"6edbde60-9645-4dfc-88d3-a0586aef4055"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.42677669529663687`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{65.09730676202634, 
            141.87002450918544`}, {-136.18377266927854`, 
            115.61055568214238`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.42677669529663687`]& ,
         TagBoxNote->"0.42677669529663687"],
        StyleBox["0.42677669529663687`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.42677669529663687`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.0732233047033631}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{149.4805323204198, 226.2532500675789}, {
            71.89171184132081, 115.61055568214236`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0732233047033631]& ,
         TagBoxNote->"0.0732233047033631"],
        StyleBox["0.0732233047033631`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0732233047033631, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.0732233047033631}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{233.8637578788132, 310.6364756259723}, {
            71.89171184132081, 115.61055568214236`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.0732233047033631]& ,
         TagBoxNote->"0.0732233047033631"],
        StyleBox["0.0732233047033631`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.0732233047033631, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.42677669529663687`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{318.2469834372066, 
            395.0197011843658}, {-136.18377266927854`, 115.61055568214238`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.42677669529663687`]& ,
         TagBoxNote->"0.42677669529663687"],
        StyleBox["0.42677669529663687`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.42677669529663687`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{4.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.880202985088299*^9, 3.8802029900357513`*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"ed3fcd40-25a6-4ed1-8bfb-514e74e7e8d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Phase\>\"", ",", 
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "Pi"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "[", "]"}], "[", 
  "\"\<ProbabilityPlot\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.880203039030541*^9, 3.8802030501155233`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"5627a1c7-40b2-413d-8073-417e27964c9a"],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], 
    PointBox[{{0.0195484340859432, 0.}, {4.902403495994173, 0.}}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{0.5487982520029133, 0.}, {1.4512017479970867`, 
             0.33768243883225013`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{71.36731575832715, 
            146.8953539392747}, {-132.80041252820345`, 114.88840432652174`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.33768243883225013`]& ,
         TagBoxNote->"0.33768243883225013"],
        StyleBox["0.33768243883225013`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.33768243883225013`, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{1.5487982520029133`, 0.}, {2.4512017479970867`, 
             0.1623175611677499}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{154.37124749556767`, 
            229.8992856765152}, {-4.4954992852127305`, 114.88840432652174`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.1623175611677499]& ,
         TagBoxNote->"0.1623175611677499"],
        StyleBox["0.1623175611677499`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1623175611677499, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{2.5487982520029133`, 0.}, {3.4512017479970867`, 
             0.1623175611677499}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{237.37517923280816`, 
            312.90321741375567`}, {-4.4954992852127305`, 
            114.88840432652174`}}],
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.1623175611677499]& ,
         TagBoxNote->"0.1623175611677499"],
        StyleBox["0.1623175611677499`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.1623175611677499, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            
            RectangleBox[{3.5487982520029133`, 0.}, {4.451201747997087, 
             0.33768243883225013`}, "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{320.37911097004866`, 
            395.9071491509962}, {-132.80041252820345`, 114.88840432652174`}}],
          
          "DelayedMouseEffectStyle"],
         StatusArea[#, 0.33768243883225013`]& ,
         TagBoxNote->"0.33768243883225013"],
        StyleBox["0.33768243883225013`", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.33768243883225013`, {}], 
        "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.0195484340859432, 0.}, {4.991036562272396, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5487982520029133, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5487982520029133, 0.}]}],
          LineBox[{{4.451201747997087, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.451201747997087, 
            0.}]}], {{}, {}, {}, {}, {
           LineBox[{{1.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.4512017479970867`, 
              0.}]}], LineBox[{{1.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {1.5487982520029133`, 
              0.}]}], LineBox[{{2.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.4512017479970867`, 
              0.}]}], LineBox[{{2.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {2.5487982520029133`, 
              0.}]}], LineBox[{{3.4512017479970867`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.4512017479970867`, 
              0.}]}], LineBox[{{3.5487982520029133`, 0.}, 
             Offset[{-7.347880794884119*^-16, -4.}, {3.5487982520029133`, 
              0.}]}]}, {}}}, 
        StyleBox[
         {Thickness[Tiny], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {1., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {2., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["0", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {3., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}], InsetBox[
           TagBox[
            InterpretationBox[
             StyleBox[
              TemplateBox[{
                RowBox[{
                  FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                  FormBox["1", TraditionalForm]}]},
               "Ket"],
              FontWeight->"Plain"],
             Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]],
            Short[#, 0.2]& ], Offset[{0, -2}, {4., 0.}], NCache[
           ImageScaled[{Rational[1, 2], 1}], ImageScaled[{0.5, 1}]], 
           Automatic, {1, 0}]}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.0195484340859432, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.880203040752859*^9, 3.880203058353682*^9}},
 CellLabel->
  "Out[110]=",ExpressionUUID->"364f846b-b106-427c-a7c0-1d5b33a4e716"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"QuantumCircuitOperator", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Phase\>\"", ",", "phase"}], "}"}], ",", 
        RowBox[{"\"\<H\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "[", "]"}], "[", 
    "\"\<ProbabilityPlot\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"phase", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.880203285843986*^9, 3.880203293886249*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"c032f260-d692-410f-95b3-c027a78d30ae"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`phase$$ = 5.509774963954967, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$, 
    Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`phase$$], 0, 2 Pi}}, Typeset`size$$ = {
    450., {143., 150.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`phase$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Wolfram`QuantumFramework`QuantumCircuitOperator[{
        "H", "CNOT", {"Phase", $CellContext`phase$$}, "H" -> {1, 2}, {1, 
         2}}][]["ProbabilityPlot"], 
      "Specifications" :> {{$CellContext`phase$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{504., {199., 206.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.880203294158723*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"14147316-52b0-4f66-a733-282b0ad4d16b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], "[", "\"\<Matrix\>\"",
     "]"}], ".", 
   RowBox[{"(", 
    RowBox[{"state", "=", 
     RowBox[{
      RowBox[{"QuantumState", "[", "\"\<RandomPure\>\"", "]"}], "[", 
      "\"\<StateVector\>\"", "]"}]}], ")"}]}], "//", "Normal"}]], "Input",
 CellChangeTimes->{{3.880203430183188*^9, 
  3.88020346411544*^9}},ExpressionUUID->"4ddc506c-1b3e-47bc-b8c3-\
cfea497d8a96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.20182667741703755`"}], "-", 
    RowBox[{"0.7289336199186822`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.44650250909942624`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.47807664595016797`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8802034381167793`*^9, 3.880203458492681*^9}},
 CellLabel->
  "Out[114]=",ExpressionUUID->"7880005b-9f08-4366-88f1-f00048b70454"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      FractionBox["1", 
       SqrtBox["2"]]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], ",", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], "}"}]}], "}"}], ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.17301193977507534`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.8534851439576416`", " ", "\[ImaginaryI]"}]}], ",", 
    RowBox[{
     RowBox[{"-", "0.45843796422694955`"}], "-", 
     RowBox[{"0.17738266740107364`", " ", "\[ImaginaryI]"}]}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.8802034665608788`*^9, 3.8802034851342907`*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"81d05123-afa3-46b8-bc8b-fd762afb141a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.20182667741703755`"}], "-", 
    RowBox[{"0.7289336199186822`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.44650250909942624`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.47807664595016797`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.880203476371663*^9, 3.880203486025125*^9}},
 CellLabel->
  "Out[120]=",ExpressionUUID->"04d49b01-bae1-460a-82bd-2dededfde561"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", 
   RowBox[{"\"\<H\>\"", ",", 
    RowBox[{"Range", "[", "4", "]"}]}], "]"}], "@", 
  RowBox[{"QuantumState", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<RandomPure\>\"", ",", "4"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880203526845922*^9, 3.880203535457922*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"783a6884-43be-4c47-82a6-2cb05db0add9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJwtl3lYTe//9VUkpEEqaZASSYNokj5W0ogkRUQjqahUvkhIIooM0aBQSpmn
EmVoQKXSSGmu06kz7XP23okIyW8/1/X8sa9r/3ff93tY67Xm++/bFCAxadIk
uf///b//H28fegQfoBH1WLipZzOFDyUup/Q3EajeMjdIDgT6J8mHrtpI4XBn
4rFedRIPNDQSUzbQ4DY+Kb57QwTiVoda6SgHH+J2XngvMYjux5H5qakEpmfN
3batW4ST6Rd6Kipo9Hh12Z/yFMFrinupQioPa4MPKnd+pBDs2FDPj+LC7XBf
XbsjD7PCc094TxGCvUGYmHtAhNbRXGm7PTQCNzQFLTlNgBWa6Nd1mEKQj0r5
0oUEJA/XBt01ICA19ducHTNIeM1P87eJ7sMby+7pW2MEqD3xzdZPmYLgXsDJ
rK1c7OHVHf4s4ELJsm0i2UyAF0Je2FNVGiuNbo07PaNwNlBxxjqpIbBeL95R
+puFyu7kYw9UKBiHVOxIN+MhncsNdKoQobK2xsKoV4S72Qq2ju6t+H16Q2nE
igHwgjQs9i+i8S1r0vDBnzycDjyetzOQgyKRTfP6rTS2ucl16B0j4E933Fhg
TeBq4Ond/SdpTHDDohQXi0ArL4gbrOaACMk5XunKwQWFrN07VpLokHg8dY2H
AO2nY+3OnKMRvGVag8BKgJH/TbxbbstCZnxV4MvYLrh/vnp+43cBjvoZPZ4i
RuBX0kFNS6ZfYq0rW+ap8vHPNle+KI8NyZkxqws6SMhdvUar2LOwzsz+7vl/
g/CVP1zNq+KitPzoWPwLAjqsZS6xzhTCPfCgZYiLyudXH2T6kDjF8ysQuzqI
XPfmGC0zIaJ787fVKojgu6DAJbWiBdrSTys45ny06qNO/58Iu6ctuGkb1Y/z
2u+bZv0ZQPdQ8JTxPTzYls2f3H2fZOo7++SCahLa1ur99nrduHxvzv1cqgsd
/8s8YqIiQkFM0USezQAS3ocIlywTQePIc8NGgRAR+4semWyqhYl4r6/+rwFU
pAsXa1lSqPL5nl2gOACtvMsuieEsHO6aa9B9h0LP5n9Jlpc4cJbnhn3u4MLg
xJ93uSECrBJ7IhPRJcS/Ey9kqz80wSn4X1Jlfic0wq74OdXwcPb9utzhECGg
rKn4OY7AO+0yqUceQrQ62qqckniH1uzvxbHTO8CaTDbtFR8AX/tNXqoChRe6
0wrkzohwo/vErTgFAuOTHm4Xetcit898gVcaBX0/MllHeQCHpWmNqeafEBEv
5j7l3wC87c7EH13Wj/CA+ZJGwRT8InZM3LnZhpGmopkJ+wlM89a1WvmDjbh7
XXVjHzvgtLi37UgAgf0rVHvdrBsQr+XSqab1BQXlyYP+icx+mD5lW6f3wtey
fOLbexbId/6Wy2y6EHfJaKayOYWuXO2B2aY0dKdv1PJcxoFjfp95hlU1pt7D
scvpIuxSvZIniRZ4GMbeWt/KgkKR2va/60kc1T8e5Jj6CakDlvP9sppx5pZe
oOQEhUTRS625s7mwDYg8vdauDrsfVh7qU6SxtdR6mdXVIchFWTyxedkKYrlB
w7wiAl6vDdtLoiio9jmmKpbz8aAhzUH8tQCbVPyifSSEUDum5zQaRjNzs6PE
9A8P0T9/F8lGklCwejWSX8uGD1t7s38Sszfz3oxmRbDx1PWDuksZhat0cbrH
XwILdWtCdXpIuDt3D0sYDuHVlqyI1wIKpY2ew76nhShQ4mevU2TjwJ2qogNH
RVBP3lyseZyPCOLE1b8VFNb/ryw3/ykPB82W6R51InFAtWGlTSWJsQ/b/RLj
+vCQrjKiRUKMu7UdXvdhCM7szbE3mT1OSUloVR8SwWpDi1f3XiGKtebFFGxk
9iotc1Unhw12hv61qXdI5A+9yVn1VoSi5aOF9e+EsCxJNXw25Qtsj5zkFRAU
Wvb2vlMY5KL34huDJTFcSBQsGm3VpLGmwLVZPGkI5ioS3fbvWlCRNhjyzJvE
6bnLnuZMIbHg0rzSD9NYsBfnPor7ToE31aJJOpdE7v5p27O/clEUu6TykQYN
/cmDv57GElg787kML4eF7L7+yQ9rWBgjN0/WHBaiwyPvfkM/F2FdP0aaGR0L
LGu+MaeUh9pZtFjXknbcl8oIjHvYig22pyXkRvl4k+FNSTH9a4z/VeiiS0NU
ds3nFOMT9ev3bDr+rRvtTl23ZQNI2I9vnzq4oRPz90Ueks5ngTtrZLUXm42z
tZ9tp8zhQ2XC5w/xjsTmFe4v/zD+ghmyLcYOIiSMH1pgktaHbYLuL651Ang9
/KXgFiNE+faoS7K7qyF1UstUbDoHa8+X20VPFoGa6WsaEtYG+2ptOliqDzPl
Zb8aqHLQkX/mQXoQibkdj25Yp5Loerr+38LN7ZguX6/afrkNT1NCwlYwflTn
+8pxWkkHNInXVk5RBEqs/fKv8YS4F2cevJZfiY8pVvryr1n4aFhIGI+RyCv7
2fNmcS/uDzsMkk2dyPvy93C9FoW++0fVuA4DmGoUyP6XyYbznVOesTQPCwrs
/BWZ+x9aGjPr/SEKG6e/dXFNJ+Fg+kKjd/EQxEUGMmsthJi8XYLQF7JRfrDG
waFEgH3dck2JqiTSVZ7MLVxMgrDvf7IruANfW3aHeyawobbbvKq5io3Vey+Q
PnlCLKsRN30QL4KBk6mbj9QAht8c0DbTFiF10HHgpM4QCMtqm856Cnq1W6x0
NbmQ32Wgr2DAReOZqdHplQRMWPkbzshzsHFvN7WR0dmU7Lb0XZFsDBdnvdxP
DaCEVxbXfIkCaywn/m8tD1u/VBdfuzIIbujGWaIvFMTSbbauWUHhlPxdRR+Z
AdA2O59yglhISl47MSO0A5JOM47PPkHAPF9vTXDPELrmEz7VKgTCvoYaNOqT
uBNfv/WIKgurjr50yFjYiYMqS3TWnmK4INCl8JnSZwyf/6/8bmk/bB3x/GKQ
EOa1So1iW3nwbLYWLBkYgiQ/QDzRisTxyLADvmV8pP9aq+gZSIFoi5buXcOH
4rOzXaO0CGPJC7IOzaNx73l07Tp3EgerJU1Su7l4qOLyzH9chO4VY1P/DLJx
WTo7bm2mEN0jYzHn7xGI6vSyqD0twoOR5vqmjHZE7A3SERaLcOzHp6JbV4aw
bPkSS8EuEtneXvcLcnm4+f38Mm13Dm6ZjtqLJjF88Eqx9L0tgfPiUrHrFlNQ
GFpk187wkdm0Bw7m/jRSl+77acoTYIzVJ2O+n4f2Yg+3y49ImJwmP+xd04do
qydl85wGsdRraZZsC4X++YedQ2Zw0dWmUWV0g4PfP6vobIZHxjbVlRS2i/Ak
7Z6OlKgfOZK/RsqKuWiDV8E3oz4MbaObVheTiF11Q9K4jAt+03bZv+ZCcHIT
J9+cTUHGh185rNMH6dTwyIhkFnJ37tBT96CQee2G8zlLATKmfTf99IsNvcQF
A1vmUHB6cZd3cYKATb5WhVUiHxeLQr4Yu9Mg1s7wvilOYWynpG9JPhtBFwOu
t3J5+DP2WvNNHuPzX+plB/QYTjHRzNK61Ie4fX5achwR9tc9+LQzqBPThlLe
uqdwkNCRkRThz4bSoYUhLzcL8czpu7793QZ02JNZ1w+J4FwQUl/woxvR4SG1
mz34sAnzUR5R5MHu4CT1IbVe9P11Vryzk8Tul/eVrv8YxPSz6vfYT0SIddVk
a7UMQs9jtr7SZRrLm7c7rtwvwF6tI5/DNrDQ4Zp3e2kpiRdrxjfOH+1E8HUf
e7ZLB3pTG/f/laExuLo2+kkOB8UmURmeG/tw96/mygatPhAWCrp/AoXQHZk/
o/dTP9Jr9ae2xPLh4nfQVYdswa2cvYWljG+l2V13u8X4mfTClKK6NA4kjTcF
jDP7KWkX97a7moXGt8HFHRHtcHPeJBOxgML0en0y/QPjm8pdzkdGvkC8wfoB
a7cQF/6Ld1y8goDSrocm8bPYWDSrPD8zkERnduOsi+EUqtMrVCM0GR5165P6
GkPBcQ19jGa4PfB3yqnKDSSW+PqLnTEV4F+QropmpwiOVebDkwc5eLdyU5AX
o8/7TorkHsWQkNqcl9y7SwT5FM9522X60H/Nq1/3rAjNwX4hK5i+5hZq2i09
w8xP5sLv1q58xI70zqkK5WMuXcBTMqPxKs5BPmM+Ccmpe+r171NwdpqlLh/P
h8kv+Wc+9jTsLIe9tnMFWHNAzLQpVwAXWV5aZgYJ3Xkz/pjMYWHRNeMbpZVc
qE0zlh5lU1g+siGx/QwPmQ3Kt1K4fMT082x/r2LyTfjsF3cvkHCRT82piWej
79LblpvDHFyZKVVxwpvRy61TFSveUQgVbbBvLOHBvXXhkSaQMN8T/rXuMwmz
Srl5FRk90FngYfSD0Tcb3rtdpW0kfGsGXr4e5+O3TtxcAyUuLq0RnL2tTsN8
6+zZX+4LIaen+WHzP0ZHTS6W6jLcb9EyndrxUQjj5rsrW4+QiFYlHkoz73z7
qrimgTm/YjS+oOmyAEqdiqkcExJvhAFGfSZ8pIxLc3q/CvGpX6LOLYBC1NJy
88QpFKI9HlqVcgfQE2oSMLuXg9azc/VxjY+nNwNjp68hsZiafviPOoUdt5Yc
dFzN3O+Ds/OpcyRuKluXvf/MR7KN3CmBN42X+57bf2S4bEp9iphBNIGs4hqn
efYkxrtWRG/rFiDK2qF0rojCs+OGG3RCuLD6lh1wOYqDy5+bZF59Y/Q0OLLc
k9Hf2N+5z7PO8xGyLNF3hhENzb+6KpOHKRzToW+lfeLih0/msGcNB/s7bJzX
j7EQrmZReu4p867txiP1snw0V+TPaDQUIbPI8pzFFgrv69IKFGu4YHtKR509
2wOJyV0DY9JCmK08Z+EW1wlPtW2/Fl7kIPx088TGYREu8Hce2F9FYN8CQcF1
CYYzc973FkZSSCt9lDjZToSthMPJt48oaGwkdD8+IJG1v7DhoRwXsYEN5r/3
MHln6pq9ryeRyDz5z8BluQiGo075WozO/e/CKpOJR0LcXzdi0buVhUsOR0sf
d/dD9+aj9QvieBi5PHe9dxnjq/fUXh2ypPG5XOxWoqoQKvt6G/cy8+Xd617Y
w/RtLEE39Aozf82nKp66Dw/gF3Uu/AbDPbfDkzQMIwVwU2mJP2FLY6bkkTN+
kVxMZFQH/IwgYUvPT1oSxsNVJ1ntMx0cmMVf/jpHTIQRss0i4Vwrw3fzumau
40DmNfeF6g8R1Fgd7DzjQRyaJTlXemAQ7i3mtyWcOShxeUDGt1HY5RPG/1xJ
4daiO/T4okFk+STKKxl0YndJj7dPKAn1qL5gviEb973JTx+LBaBLyusK+SIc
Glf4Fe76CfIm0cyK9ECUs9Bh8hwaUs225KRFXKjcuJjwxIEFv4xHenILadT/
iLl71Jjhw2RpTxU7LkybI7Pd02l0vBzmzn8pxPu3nbVmJwV4+2yv56fNApj2
yMYH6jM56veJj6f9BTilo6z6TotGgmv7rhfveahXeBS2eTYHvgf2bsmn+rGr
Ufys9F0hpPMdhcvSudB3UD+hw8zbxg3qJcNyPPgfs/kj8ZgLC2+f0y+Z3Jk5
x8jymTsbVOhQdYeyABPyqbLCAOZ+Dw/ZjSWSKPuSvHn7QxLi9wvqP0Uwfqn5
kbNlDQXDb7pZW5Zz4bgv5UIEM5eex89FrztJwOzDKGd7ZDccBe37PLJJXA3X
KxjtIhFxfn7AfJdBHHgu7RFUzsYe88IZ3AdCLJU6+CP1sAhXD6jBOozEqpR1
Js5F3XigWaVcu2oQ5J6Fxh5hQnxnZV3LCORCbuPcHwf2MdzV8yFJfQ2BLveS
pMVSjbCUsP4nM52PRKLbbXA+hZGVZjHh6WzY+5mvkjfkYia5s+VeCYWTNbVe
LlE8rEoKXCpHMVx1+3vMkTdcaFtu5V9k5mmH5J+IKCanHZispafDcKzur2MS
RPUATn1OxQcLLjTer6zbIcbG3iUBy2eeG8K4jJ1O8gvGL3Sab+8sIxEVkdi0
YVoXeG6vltG7OkDxNYtP72bjmF3ns118LmJkpyQoqVK4K/NRUtm1h9lT051f
rxPQOl8fYdDEA7966+ExZxqdug/KA0geYqScKh4zuZ5wuJjyTkaExyvTunzG
+5H39uCUmf8xelrDCnWqHMIz6xT5tas6USe2XfnYNaaOIa/Xyn8ToJDK41k6
9MI+MhitngyHGe3+kszkEUicMNC7wsGxVVVnx9524LNMsE9zaBsmnnVOPxzN
R9762XZZxwmoq904s5+pY0LoSt1pRiK80ti6L39dP94ksN4umdKItv8cb/gO
C/DpbV9KCrcf3OLB9uct3bicmrdNW1qA9dG1bXf/J8SVojQiZgMzZzZiyjNy
hbCO39O1x1CIQm6hupkLDeuizsXVHQIc05aPFz7n4z+19NCzTXzsXrPQT3yE
hPFg5Tvxn1xckc5xVclj6v21SlwveQgL0/5MXJo1hLpI3+HmY71gZ6nI6TG6
FPfdbPfKmEHsm83be/w6BYuv98m/VhxkHzwV75LBhXTkh66fzYz+rXpRf+IF
Cylt3zNTJQkEb8LT97480NHbSrb4M3mobInXSVUR7J2X6snGkqCm9uy6I81w
xsL2aYvODOHS9Ms9GsY0/PeXP/p5k4/+uavTnr7qhFy4+PNAM2bv6l79kC4X
YVTNuurlJjYOTq2Xf1wzgFmzruwxSBfizZh5dT3DHfUnRsUcmPskVX3J/O/J
F1x/uMjv0KYhJAUd/uZ+VYDg6FOxHx5zoPZtvCie8fXM6qVJ1i/40D32wqKh
vwGGT5SWqhwioBkqm2vD9N/KwjDNSobho/J1qdqXudgqnaTPWk6hcqejdNU4
B2vefbu62orh9ooYjbUyJFYbhifkZAvxK4JYPPc6jfsN6jspPxpXdgW4GjcS
OPLvtdPDFALes4cU1u8h8GSbUbrwMh+PXavvFrky/dvrPq3Ml0br9YuHn+3k
I8fk5ffMoQHEn4gKrX1CgO5zGP5nQ8Dq1dz6ghAaxrxRw59qTC4Zv7S7ki3E
WE6nQOsPidnN33cn7aNRbrS45dUkCvWuJVZGxwWo2dRou4TxW6OP26UctQUI
9V1/M91YhFV3VCMmXRSiplOodX3OANZuPEbOYbj5wNGJoi7mvR095/xOSPDg
JjFTztWRycErbGIV6ijMjHHmJlwQYecMTaU/okEIfl3dr2I4CAdPbsZXKx6G
viasineh4H2nZHynLR8j/APpRkqMT+a7Z69PI/BV3P/1003tWFismtNzVgDl
uitbo27woW98pWCGBg8/bq6ssXvM9O0XudRxlIK83d/1JwkCQ1nn31Urkjgn
benWIEejJdo2acoFph77Zf01Vosg/WT5rTxlEUzPF9IVeowucpc5zhugIB4a
QmzbQuBigu+nSA0aMZf67ebw+HAL1bvdulqA8aszaxIThmDjZ6ZkPiHCbcMM
2eq9XFycvmZqvSYN6czXfXsSBODHJz7xHiDgu+xSYdBHEv7an4IVjnMxfvGj
WGQPc+4iyi55qRCG6lv6sm5QODT0aeRWNIlXI/ODxEeY/Hq81H+UyVUX1ilp
N+QIcE7qd9JYGg3LnzVskSoBvkQKr76FDXLBpFk/DGgUxK69QtYy56wdjUtU
5kPmwm3RJ5KLsyWGMdEbSRStN72/64oQKWZnZvzbwfiE4t0p0ldZ0JA6e/XA
f3w4Jn8I9xIJmXdNXAo0J1DRqmC2+CiNIwnXkpc94uP70ZPnw1u/QK3pLzfs
lRAe3x/c+bmBQlFbTPyv5xzsuNK+qe8ygR1C1Z9vmb3psvXIiWDm98gPyb7s
xyT+D2frV2k=
                "], {{0, 0}, {16, 16}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{
                TemplateBox[{"\"H\"", 
                  RowBox[{"\[CircleTimes]", "4"}]}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "@*", "None"}]], Annotation[#, 
              Composition[
               Superscript["H", 
                CircleTimes[4]], None], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJwtl3lYTe//9VUkpEEqaZASSYNokj5W0ogkRUQjqahUvkhIIooM0aBQSpmn
EmVoQKXSSGmu06kz7XP23okIyW8/1/X8sa9r/3ff93tY67Xm++/bFCAxadIk
uf///b//H28fegQfoBH1WLipZzOFDyUup/Q3EajeMjdIDgT6J8mHrtpI4XBn
4rFedRIPNDQSUzbQ4DY+Kb57QwTiVoda6SgHH+J2XngvMYjux5H5qakEpmfN
3batW4ST6Rd6Kipo9Hh12Z/yFMFrinupQioPa4MPKnd+pBDs2FDPj+LC7XBf
XbsjD7PCc094TxGCvUGYmHtAhNbRXGm7PTQCNzQFLTlNgBWa6Nd1mEKQj0r5
0oUEJA/XBt01ICA19ducHTNIeM1P87eJ7sMby+7pW2MEqD3xzdZPmYLgXsDJ
rK1c7OHVHf4s4ELJsm0i2UyAF0Je2FNVGiuNbo07PaNwNlBxxjqpIbBeL95R
+puFyu7kYw9UKBiHVOxIN+MhncsNdKoQobK2xsKoV4S72Qq2ju6t+H16Q2nE
igHwgjQs9i+i8S1r0vDBnzycDjyetzOQgyKRTfP6rTS2ucl16B0j4E933Fhg
TeBq4Ond/SdpTHDDohQXi0ArL4gbrOaACMk5XunKwQWFrN07VpLokHg8dY2H
AO2nY+3OnKMRvGVag8BKgJH/TbxbbstCZnxV4MvYLrh/vnp+43cBjvoZPZ4i
RuBX0kFNS6ZfYq0rW+ap8vHPNle+KI8NyZkxqws6SMhdvUar2LOwzsz+7vl/
g/CVP1zNq+KitPzoWPwLAjqsZS6xzhTCPfCgZYiLyudXH2T6kDjF8ysQuzqI
XPfmGC0zIaJ787fVKojgu6DAJbWiBdrSTys45ny06qNO/58Iu6ctuGkb1Y/z
2u+bZv0ZQPdQ8JTxPTzYls2f3H2fZOo7++SCahLa1ur99nrduHxvzv1cqgsd
/8s8YqIiQkFM0USezQAS3ocIlywTQePIc8NGgRAR+4semWyqhYl4r6/+rwFU
pAsXa1lSqPL5nl2gOACtvMsuieEsHO6aa9B9h0LP5n9Jlpc4cJbnhn3u4MLg
xJ93uSECrBJ7IhPRJcS/Ey9kqz80wSn4X1Jlfic0wq74OdXwcPb9utzhECGg
rKn4OY7AO+0yqUceQrQ62qqckniH1uzvxbHTO8CaTDbtFR8AX/tNXqoChRe6
0wrkzohwo/vErTgFAuOTHm4Xetcit898gVcaBX0/MllHeQCHpWmNqeafEBEv
5j7l3wC87c7EH13Wj/CA+ZJGwRT8InZM3LnZhpGmopkJ+wlM89a1WvmDjbh7
XXVjHzvgtLi37UgAgf0rVHvdrBsQr+XSqab1BQXlyYP+icx+mD5lW6f3wtey
fOLbexbId/6Wy2y6EHfJaKayOYWuXO2B2aY0dKdv1PJcxoFjfp95hlU1pt7D
scvpIuxSvZIniRZ4GMbeWt/KgkKR2va/60kc1T8e5Jj6CakDlvP9sppx5pZe
oOQEhUTRS625s7mwDYg8vdauDrsfVh7qU6SxtdR6mdXVIchFWTyxedkKYrlB
w7wiAl6vDdtLoiio9jmmKpbz8aAhzUH8tQCbVPyifSSEUDum5zQaRjNzs6PE
9A8P0T9/F8lGklCwejWSX8uGD1t7s38Sszfz3oxmRbDx1PWDuksZhat0cbrH
XwILdWtCdXpIuDt3D0sYDuHVlqyI1wIKpY2ew76nhShQ4mevU2TjwJ2qogNH
RVBP3lyseZyPCOLE1b8VFNb/ryw3/ykPB82W6R51InFAtWGlTSWJsQ/b/RLj
+vCQrjKiRUKMu7UdXvdhCM7szbE3mT1OSUloVR8SwWpDi1f3XiGKtebFFGxk
9iotc1Unhw12hv61qXdI5A+9yVn1VoSi5aOF9e+EsCxJNXw25Qtsj5zkFRAU
Wvb2vlMY5KL34huDJTFcSBQsGm3VpLGmwLVZPGkI5ioS3fbvWlCRNhjyzJvE
6bnLnuZMIbHg0rzSD9NYsBfnPor7ToE31aJJOpdE7v5p27O/clEUu6TykQYN
/cmDv57GElg787kML4eF7L7+yQ9rWBgjN0/WHBaiwyPvfkM/F2FdP0aaGR0L
LGu+MaeUh9pZtFjXknbcl8oIjHvYig22pyXkRvl4k+FNSTH9a4z/VeiiS0NU
ds3nFOMT9ev3bDr+rRvtTl23ZQNI2I9vnzq4oRPz90Ueks5ngTtrZLUXm42z
tZ9tp8zhQ2XC5w/xjsTmFe4v/zD+ghmyLcYOIiSMH1pgktaHbYLuL651Ang9
/KXgFiNE+faoS7K7qyF1UstUbDoHa8+X20VPFoGa6WsaEtYG+2ptOliqDzPl
Zb8aqHLQkX/mQXoQibkdj25Yp5Loerr+38LN7ZguX6/afrkNT1NCwlYwflTn
+8pxWkkHNInXVk5RBEqs/fKv8YS4F2cevJZfiY8pVvryr1n4aFhIGI+RyCv7
2fNmcS/uDzsMkk2dyPvy93C9FoW++0fVuA4DmGoUyP6XyYbznVOesTQPCwrs
/BWZ+x9aGjPr/SEKG6e/dXFNJ+Fg+kKjd/EQxEUGMmsthJi8XYLQF7JRfrDG
waFEgH3dck2JqiTSVZ7MLVxMgrDvf7IruANfW3aHeyawobbbvKq5io3Vey+Q
PnlCLKsRN30QL4KBk6mbj9QAht8c0DbTFiF10HHgpM4QCMtqm856Cnq1W6x0
NbmQ32Wgr2DAReOZqdHplQRMWPkbzshzsHFvN7WR0dmU7Lb0XZFsDBdnvdxP
DaCEVxbXfIkCaywn/m8tD1u/VBdfuzIIbujGWaIvFMTSbbauWUHhlPxdRR+Z
AdA2O59yglhISl47MSO0A5JOM47PPkHAPF9vTXDPELrmEz7VKgTCvoYaNOqT
uBNfv/WIKgurjr50yFjYiYMqS3TWnmK4INCl8JnSZwyf/6/8bmk/bB3x/GKQ
EOa1So1iW3nwbLYWLBkYgiQ/QDzRisTxyLADvmV8pP9aq+gZSIFoi5buXcOH
4rOzXaO0CGPJC7IOzaNx73l07Tp3EgerJU1Su7l4qOLyzH9chO4VY1P/DLJx
WTo7bm2mEN0jYzHn7xGI6vSyqD0twoOR5vqmjHZE7A3SERaLcOzHp6JbV4aw
bPkSS8EuEtneXvcLcnm4+f38Mm13Dm6ZjtqLJjF88Eqx9L0tgfPiUrHrFlNQ
GFpk187wkdm0Bw7m/jRSl+77acoTYIzVJ2O+n4f2Yg+3y49ImJwmP+xd04do
qydl85wGsdRraZZsC4X++YedQ2Zw0dWmUWV0g4PfP6vobIZHxjbVlRS2i/Ak
7Z6OlKgfOZK/RsqKuWiDV8E3oz4MbaObVheTiF11Q9K4jAt+03bZv+ZCcHIT
J9+cTUHGh185rNMH6dTwyIhkFnJ37tBT96CQee2G8zlLATKmfTf99IsNvcQF
A1vmUHB6cZd3cYKATb5WhVUiHxeLQr4Yu9Mg1s7wvilOYWynpG9JPhtBFwOu
t3J5+DP2WvNNHuPzX+plB/QYTjHRzNK61Ie4fX5achwR9tc9+LQzqBPThlLe
uqdwkNCRkRThz4bSoYUhLzcL8czpu7793QZ02JNZ1w+J4FwQUl/woxvR4SG1
mz34sAnzUR5R5MHu4CT1IbVe9P11Vryzk8Tul/eVrv8YxPSz6vfYT0SIddVk
a7UMQs9jtr7SZRrLm7c7rtwvwF6tI5/DNrDQ4Zp3e2kpiRdrxjfOH+1E8HUf
e7ZLB3pTG/f/laExuLo2+kkOB8UmURmeG/tw96/mygatPhAWCrp/AoXQHZk/
o/dTP9Jr9ae2xPLh4nfQVYdswa2cvYWljG+l2V13u8X4mfTClKK6NA4kjTcF
jDP7KWkX97a7moXGt8HFHRHtcHPeJBOxgML0en0y/QPjm8pdzkdGvkC8wfoB
a7cQF/6Ld1y8goDSrocm8bPYWDSrPD8zkERnduOsi+EUqtMrVCM0GR5165P6
GkPBcQ19jGa4PfB3yqnKDSSW+PqLnTEV4F+QropmpwiOVebDkwc5eLdyU5AX
o8/7TorkHsWQkNqcl9y7SwT5FM9522X60H/Nq1/3rAjNwX4hK5i+5hZq2i09
w8xP5sLv1q58xI70zqkK5WMuXcBTMqPxKs5BPmM+Ccmpe+r171NwdpqlLh/P
h8kv+Wc+9jTsLIe9tnMFWHNAzLQpVwAXWV5aZgYJ3Xkz/pjMYWHRNeMbpZVc
qE0zlh5lU1g+siGx/QwPmQ3Kt1K4fMT082x/r2LyTfjsF3cvkHCRT82piWej
79LblpvDHFyZKVVxwpvRy61TFSveUQgVbbBvLOHBvXXhkSaQMN8T/rXuMwmz
Srl5FRk90FngYfSD0Tcb3rtdpW0kfGsGXr4e5+O3TtxcAyUuLq0RnL2tTsN8
6+zZX+4LIaen+WHzP0ZHTS6W6jLcb9EyndrxUQjj5rsrW4+QiFYlHkoz73z7
qrimgTm/YjS+oOmyAEqdiqkcExJvhAFGfSZ8pIxLc3q/CvGpX6LOLYBC1NJy
88QpFKI9HlqVcgfQE2oSMLuXg9azc/VxjY+nNwNjp68hsZiafviPOoUdt5Yc
dFzN3O+Ds/OpcyRuKluXvf/MR7KN3CmBN42X+57bf2S4bEp9iphBNIGs4hqn
efYkxrtWRG/rFiDK2qF0rojCs+OGG3RCuLD6lh1wOYqDy5+bZF59Y/Q0OLLc
k9Hf2N+5z7PO8xGyLNF3hhENzb+6KpOHKRzToW+lfeLih0/msGcNB/s7bJzX
j7EQrmZReu4p867txiP1snw0V+TPaDQUIbPI8pzFFgrv69IKFGu4YHtKR509
2wOJyV0DY9JCmK08Z+EW1wlPtW2/Fl7kIPx088TGYREu8Hce2F9FYN8CQcF1
CYYzc973FkZSSCt9lDjZToSthMPJt48oaGwkdD8+IJG1v7DhoRwXsYEN5r/3
MHln6pq9ryeRyDz5z8BluQiGo075WozO/e/CKpOJR0LcXzdi0buVhUsOR0sf
d/dD9+aj9QvieBi5PHe9dxnjq/fUXh2ypPG5XOxWoqoQKvt6G/cy8+Xd617Y
w/RtLEE39Aozf82nKp66Dw/gF3Uu/AbDPbfDkzQMIwVwU2mJP2FLY6bkkTN+
kVxMZFQH/IwgYUvPT1oSxsNVJ1ntMx0cmMVf/jpHTIQRss0i4Vwrw3fzumau
40DmNfeF6g8R1Fgd7DzjQRyaJTlXemAQ7i3mtyWcOShxeUDGt1HY5RPG/1xJ
4daiO/T4okFk+STKKxl0YndJj7dPKAn1qL5gviEb973JTx+LBaBLyusK+SIc
Glf4Fe76CfIm0cyK9ECUs9Bh8hwaUs225KRFXKjcuJjwxIEFv4xHenILadT/
iLl71Jjhw2RpTxU7LkybI7Pd02l0vBzmzn8pxPu3nbVmJwV4+2yv56fNApj2
yMYH6jM56veJj6f9BTilo6z6TotGgmv7rhfveahXeBS2eTYHvgf2bsmn+rGr
Ufys9F0hpPMdhcvSudB3UD+hw8zbxg3qJcNyPPgfs/kj8ZgLC2+f0y+Z3Jk5
x8jymTsbVOhQdYeyABPyqbLCAOZ+Dw/ZjSWSKPuSvHn7QxLi9wvqP0Uwfqn5
kbNlDQXDb7pZW5Zz4bgv5UIEM5eex89FrztJwOzDKGd7ZDccBe37PLJJXA3X
KxjtIhFxfn7AfJdBHHgu7RFUzsYe88IZ3AdCLJU6+CP1sAhXD6jBOozEqpR1
Js5F3XigWaVcu2oQ5J6Fxh5hQnxnZV3LCORCbuPcHwf2MdzV8yFJfQ2BLveS
pMVSjbCUsP4nM52PRKLbbXA+hZGVZjHh6WzY+5mvkjfkYia5s+VeCYWTNbVe
LlE8rEoKXCpHMVx1+3vMkTdcaFtu5V9k5mmH5J+IKCanHZispafDcKzur2MS
RPUATn1OxQcLLjTer6zbIcbG3iUBy2eeG8K4jJ1O8gvGL3Sab+8sIxEVkdi0
YVoXeG6vltG7OkDxNYtP72bjmF3ns118LmJkpyQoqVK4K/NRUtm1h9lT051f
rxPQOl8fYdDEA7966+ExZxqdug/KA0geYqScKh4zuZ5wuJjyTkaExyvTunzG
+5H39uCUmf8xelrDCnWqHMIz6xT5tas6USe2XfnYNaaOIa/Xyn8ToJDK41k6
9MI+MhitngyHGe3+kszkEUicMNC7wsGxVVVnx9524LNMsE9zaBsmnnVOPxzN
R9762XZZxwmoq904s5+pY0LoSt1pRiK80ti6L39dP94ksN4umdKItv8cb/gO
C/DpbV9KCrcf3OLB9uct3bicmrdNW1qA9dG1bXf/J8SVojQiZgMzZzZiyjNy
hbCO39O1x1CIQm6hupkLDeuizsXVHQIc05aPFz7n4z+19NCzTXzsXrPQT3yE
hPFg5Tvxn1xckc5xVclj6v21SlwveQgL0/5MXJo1hLpI3+HmY71gZ6nI6TG6
FPfdbPfKmEHsm83be/w6BYuv98m/VhxkHzwV75LBhXTkh66fzYz+rXpRf+IF
Cylt3zNTJQkEb8LT97480NHbSrb4M3mobInXSVUR7J2X6snGkqCm9uy6I81w
xsL2aYvODOHS9Ms9GsY0/PeXP/p5k4/+uavTnr7qhFy4+PNAM2bv6l79kC4X
YVTNuurlJjYOTq2Xf1wzgFmzruwxSBfizZh5dT3DHfUnRsUcmPskVX3J/O/J
F1x/uMjv0KYhJAUd/uZ+VYDg6FOxHx5zoPZtvCie8fXM6qVJ1i/40D32wqKh
vwGGT5SWqhwioBkqm2vD9N/KwjDNSobho/J1qdqXudgqnaTPWk6hcqejdNU4
B2vefbu62orh9ooYjbUyJFYbhifkZAvxK4JYPPc6jfsN6jspPxpXdgW4GjcS
OPLvtdPDFALes4cU1u8h8GSbUbrwMh+PXavvFrky/dvrPq3Ml0br9YuHn+3k
I8fk5ffMoQHEn4gKrX1CgO5zGP5nQ8Dq1dz6ghAaxrxRw59qTC4Zv7S7ki3E
WE6nQOsPidnN33cn7aNRbrS45dUkCvWuJVZGxwWo2dRou4TxW6OP26UctQUI
9V1/M91YhFV3VCMmXRSiplOodX3OANZuPEbOYbj5wNGJoi7mvR095/xOSPDg
JjFTztWRycErbGIV6ijMjHHmJlwQYecMTaU/okEIfl3dr2I4CAdPbsZXKx6G
viasineh4H2nZHynLR8j/APpRkqMT+a7Z69PI/BV3P/1003tWFismtNzVgDl
uitbo27woW98pWCGBg8/bq6ssXvM9O0XudRxlIK83d/1JwkCQ1nn31Urkjgn
benWIEejJdo2acoFph77Zf01Vosg/WT5rTxlEUzPF9IVeowucpc5zhugIB4a
QmzbQuBigu+nSA0aMZf67ebw+HAL1bvdulqA8aszaxIThmDjZ6ZkPiHCbcMM
2eq9XFycvmZqvSYN6czXfXsSBODHJz7xHiDgu+xSYdBHEv7an4IVjnMxfvGj
WGQPc+4iyi55qRCG6lv6sm5QODT0aeRWNIlXI/ODxEeY/Hq81H+UyVUX1ilp
N+QIcE7qd9JYGg3LnzVskSoBvkQKr76FDXLBpFk/DGgUxK69QtYy56wdjUtU
5kPmwm3RJ5KLsyWGMdEbSRStN72/64oQKWZnZvzbwfiE4t0p0ldZ0JA6e/XA
f3w4Jn8I9xIJmXdNXAo0J1DRqmC2+CiNIwnXkpc94uP70ZPnw1u/QK3pLzfs
lRAe3x/c+bmBQlFbTPyv5xzsuNK+qe8ygR1C1Z9vmb3psvXIiWDm98gPyb7s
xyT+D2frV2k=
                "], {{0, 0}, {16, 16}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], 
              RowBox[{
                TemplateBox[{"\"H\"", 
                  RowBox[{"\[CircleTimes]", "4"}]}, "Superscript", SyntaxForm -> 
                 SuperscriptBox], "@*", "None"}]], Annotation[#, 
              Composition[
               Superscript["H", 
                CircleTimes[4]], None], "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                TemplateBox[{"\"Pure\"", "\" \"", "\"state\""}, "RowDefault"],
                 "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Vector\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["16", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1.`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity", SyntaxForm -> Mod], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
   SparseArray[Automatic, {16}, 
    Complex[0., 0.], {
    1, {{0, 16}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {
      12}, {13}, {14}, {15}, {16}}}, {Complex[-0.32426261026448067`, 
     1.4408475260959874`], Complex[
     1.2365197750589771`, -0.10782320674800638`], 
     Complex[-0.24753969192571745`, 0.7191537908240032], Complex[
     0.3472432075946231, -0.2140657558787432], Complex[-0.4640415089452504, 
     0.7762403791187752], Complex[-0.6366467647789137, 0.17910452470910532`], 
     Complex[0.6920954107312528, -1.0149828692411371`], Complex[
     0.9485806664759132, 0.6247369886299757], Complex[0.14450304767766153`, 
     0.3793217776560439], Complex[0.5637626602490019, 0.6245000344047552], 
     Complex[0.3071344508602524, -0.509503225449827], 
     Complex[-0.2777694249950732, 0.18550466197090365`], 
     Complex[-0.749276909096383, -0.4854184569447849], 
     Complex[-0.13902958928333542`, -0.007341547572444651], 
     Complex[-0.4812795884090352, 0.3518798055970248], 
     Complex[-1.0930747315117526`, 0.49934207780999784`]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> Composition[
       Superscript["H", 
        CircleTimes[4]], None], "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880203529467387*^9, 3.8802035357318363`*^9}},
 CellLabel->
  "Out[122]=",ExpressionUUID->"26679b7d-4073-44d9-8c22-05ad85838764"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"QuantumOperator", "[", 
    RowBox[{"\"\<H\>\"", ",", 
     RowBox[{"Range", "[", "4", "]"}]}], "]"}], "[", "\"\<Matrix\>\"", "]"}], 
  "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.880203544212535*^9, 3.8802035506017933`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"828a9f54-1077-4a4d-acf2-de4bdf33856b"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgGIQGwI+2D+sElnn/vCWPUxES75p1cXVF+yTBCIst5y4
Zn9bWGXb7vY39rjESTUHl3pau4da7qS1e6hl70CFG63DgdbuGaj0MNjUDzZ7
aZ0eBps4rcOHWuE2UOYPNvcMV3eOtPplsJXDI61+GSrig62+oHU6GWzl83B1
/0ClN1LdM1zdP9LS22BzP63jcbClt8Hm/qHerhvq5g9Xfw0V80fVj/YLRoI4
ALZ7e2g=
   "], {{0, 0}, {16, 16}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{15.5, 
       FormBox["1", TraditionalForm]}, {11.5, 
       FormBox["5", TraditionalForm]}, {6.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["16", TraditionalForm]}}, {{15.5, 
       FormBox["1", TraditionalForm]}, {11.5, 
       FormBox["5", TraditionalForm]}, {6.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["16", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {15.5, 
       FormBox["16", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {15.5, 
       FormBox["16", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{192.69062499999964`, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic, "DomainPadding" -> Scaled[0.02], "RangePadding" -> 
    Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.880203543061841*^9, 3.880203550887619*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"3b20161f-6a63-41f3-b4ec-66fa7fe8c06e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]], "Input",
 CellChangeTimes->{3.8802036480657463`*^9},
 CellLabel->
  "In[130]:=",ExpressionUUID->"63afffe7-1937-404c-a0b1-0c715f34b9fc"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"0"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[0, "Dual" -> True]]], 
       SqrtBox["2"]], "-", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{"1"}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[1, "Dual" -> True]]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"H\""}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}], "\[Rule]", 
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {4}, 0, {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
       2^Rational[-1, 2], 2^Rational[-1, 2], 2^
        Rational[-1, 2], -2^Rational[-1, 2]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
            Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
          SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
       "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> "H", 
       "ParameterSpec" -> {}|>]], {{1}, {1}}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802036489654703`*^9, 3.880203649891531*^9}},
 CellLabel->
  "Out[130]=",ExpressionUUID->"326fcd05-8a16-4040-b595-9ce264b83092"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", 
  RowBox[{"\"\<H\>\"", ",", "\"\<X\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8802036089877996`*^9, 3.8802036150729647`*^9}, {
  3.880203661061556*^9, 3.8802036613576527`*^9}},
 CellLabel->
  "In[131]:=",ExpressionUUID->"b79b4f17-a753-4c72-a4bc-2bb04c23acf1"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> True]]], 
       SqrtBox["2"]], "-", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> True]]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"H\""}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}], "\[Rule]", 
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {4}, 0, {
      1, {{0, 4}, {{1}, {2}, {3}, {4}}}, {
       2^Rational[-1, 2], 2^Rational[-1, 2], 2^
        Rational[-1, 2], -2^Rational[-1, 2]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "-"]], "Dual" -> True], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {-2^Rational[-1, 2], 2^
              Rational[-1, 2]}}], {
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "+"]], "Dual" -> True], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2]}}]|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "-"]], "Dual" -> False], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {-2^Rational[-1, 2], 2^
              Rational[-1, 2]}}], {
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "+"]], "Dual" -> False], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2]}}]|>], "Picture" -> 
       "Schr\[ODoubleDot]dinger", "Label" -> "H", 
       "ParameterSpec" -> {}|>]], {{1}, {1}}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802036154237947`*^9, 3.880203616701043*^9}, {
  3.880203661782168*^9, 3.880203663058166*^9}},
 CellLabel->
  "Out[131]=",ExpressionUUID->"4c411384-fe76-49b8-b883-67ddca7fe334"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumOperator", "[", 
  RowBox[{
   RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", "\"\<X\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880203664957794*^9, 3.880203665244416*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"4bf1c3ae-f4f1-4439-b192-4e36ee53713c"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                SubscriptBox["\"\[Psi]\"", 
                 SubscriptBox["\"x\"", "\"-\""]]}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[
            Subscript["\[Psi]", 
             Subscript["x", "-"]], "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              RowBox[{
                SubscriptBox["\"\[Psi]\"", 
                 SubscriptBox["\"x\"", "\"-\""]]}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[
            Subscript["\[Psi]", 
             Subscript["x", "-"]], "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> True]]], 
        SqrtBox["2"]]}], "-", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> True]]], 
       SqrtBox["2"]], "-", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"-\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "-"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "-"]], "Dual" -> True]]], 
       SqrtBox["2"]], "+", 
      FractionBox[
       InterpretationBox[
        RowBox[{
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Ket"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> False]], 
         InterpretationBox[
          StyleBox[
           TemplateBox[{
             RowBox[{
               SubscriptBox["\"\[Psi]\"", 
                SubscriptBox["\"x\"", "\"+\""]]}]},
            "Bra"],
           FontWeight->"Plain"],
          Wolfram`QuantumFramework`QuditName[
           Subscript["\[Psi]", 
            Subscript["x", "+"]], "Dual" -> True]]}],
        Wolfram`QuantumFramework`QuditName[
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> False], 
         Wolfram`QuantumFramework`QuditName[
          Subscript["\[Psi]", 
           Subscript["x", "+"]], "Dual" -> True]]], 
       SqrtBox["2"]]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"\"H\""}, {
        TemplateBox[{"\"QuantumOperator: \"", 
          RowBox[{
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}], "\[Rule]", 
            RowBox[{"{", 
              SubscriptBox["2", "1"], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumOperator[
    Wolfram`QuantumFramework`QuantumState[
     SparseArray[
     Automatic, {4}, 0, {
      1, {{0, 4}, {{1}, {2}, {3}, {
        4}}}, {-2^Rational[-1, 2], -2^Rational[-1, 2], -2^Rational[-1, 2], 2^
        Rational[-1, 2]}}], 
     Wolfram`QuantumFramework`QuantumBasis[<|
      "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "-"]], "Dual" -> True], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {-2^Rational[-1, 2], 2^
              Rational[-1, 2]}}], {
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "+"]], "Dual" -> True], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2]}}]|>], "Output" -> 
       Wolfram`QuantumFramework`QuditBasis[<|{
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "-"]], "Dual" -> False], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {-2^Rational[-1, 2], 2^
              Rational[-1, 2]}}], {
            Wolfram`QuantumFramework`QuditName[
             Subscript["\[Psi]", 
              Subscript["x", "+"]], "Dual" -> False], 1} -> 
          SparseArray[
           Automatic, {2}, 0, {
            1, {{0, 2}, {{1}, {2}}}, {
             2^Rational[-1, 2], 2^Rational[-1, 2]}}]|>], "Picture" -> 
       "Schr\[ODoubleDot]dinger", "Label" -> "H", 
       "ParameterSpec" -> {}|>]], {{1}, {1}}]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880203638952752*^9, 3.880203666992288*^9}},
 CellLabel->
  "Out[132]=",ExpressionUUID->"63049e58-bb27-481c-bf6e-35dee41ccd51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"QuantumOperator", "[", 
   RowBox[{
    RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}], ",", 
    RowBox[{"QuantumBasis", "[", "\"\<X\>\"", "]"}]}], "]"}], "==", 
  RowBox[{"QuantumOperator", "[", "\"\<H\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.8802036229001503`*^9, 3.880203633717626*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"bd7f2342-024e-40ec-abb5-a51eb2dc253c"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.88020362608572*^9, 3.8802036343675137`*^9}},
 CellLabel->
  "Out[128]=",ExpressionUUID->"8b67f2b8-ac55-4d36-a7f6-fad5ce843157"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "phase"}], "}"}], ",", 
     RowBox[{"\"\<H\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], "[", 
  "\"\<TensorNetwork\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ContractTensorNetwork", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.880203871733324*^9, 3.880203892233199*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"a1717ae6-7c31-4a3f-9d5b-8e6693bc6541"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{0, 1, 2, 3, 4, 
      5}, {{{1, 2}, {2, 3}, {1, 3}, {3, 4}, {4, 5}, {3, 5}, {5, 6}, {5, 6}}, 
       Null, {{
         Superscript[0, 1], 
         Subscript[1, 1]}, {
         Superscript[1, 1], 
         Subscript[2, 1]}, {
         Superscript[0, 2], 
         Subscript[2, 2]}, {
         Superscript[2, 1], 
         Subscript[3, 1]}, {
         Superscript[3, 1], 
         Subscript[4, 1]}, {
         Superscript[2, 2], 
         Subscript[4, 2]}, {
         Superscript[4, 1], 
         Subscript[5, 1]}, {
         Superscript[4, 2], 
         Subscript[5, 2]}}}, {AnnotationRules -> {1 -> {"Index" -> {
             Superscript[1, 1], 
             Subscript[1, 1]}, "Tensor" -> 
           SparseArray[
            Automatic, {2, 2}, 0, {
             1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
              2^Rational[-1, 2], 2^Rational[-1, 2], 2^
               Rational[-1, 2], -2^Rational[-1, 2]}}]}, 2 -> {"Index" -> {
             Superscript[2, 1], 
             Superscript[2, 2], 
             Subscript[2, 1], 
             Subscript[2, 2]}, "Tensor" -> 
           SparseArray[
            Automatic, {2, 2, 2, 2}, 0, {
             1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {1,
               1, 1, 1}}]}, 5 -> {"Index" -> {
             Superscript[5, 0], 
             Superscript[5, 1], 
             Superscript[5, 2], 
             Subscript[5, 1], 
             Subscript[5, 2]}, "Tensor" -> 
           SparseArray[
            Automatic, {4, 2, 2, 2, 2}, 0, {
             1, {{0, 1, 2, 3, 4}, {{1, 1, 1, 1}, {1, 2, 1, 2}, {2, 1, 2, 1}, {
               2, 2, 2, 2}}}, {1, 1, 1, 1}}]}, 3 -> {"Index" -> {
             Superscript[3, 1], 
             Subscript[3, 1]}, "Tensor" -> 
           SparseArray[
            Automatic, {2, 2}, 0, {
             1, {{0, 1, 2}, {{1}, {2}}}, {
              1, E^(Complex[0, 1] $CellContext`phase)}}]}, 0 -> {"Index" -> {
             Superscript[0, 1], 
             Superscript[0, 2]}, "Tensor" -> 
           SparseArray[Automatic, {2, 2}, 0, {1, {{0, 1, 1}, {{1}}}, {1}}]}, 
         4 -> {"Index" -> {
             Superscript[4, 1], 
             Superscript[4, 2], 
             Subscript[4, 1], 
             Subscript[4, 2]}, "Tensor" -> 
           SparseArray[
            Automatic, {2, 2, 2, 2}, 0, {
             1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 
               1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 2}, {
               1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 
               2}}}, {Rational[1, 2], Rational[1, 2], Rational[1, 2], 
               Rational[1, 2], Rational[1, 2], Rational[-1, 2], Rational[
               1, 2], Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
               Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
               Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}]}}, 
       GraphLayout -> "SpringElectricalEmbedding", 
       VertexLabels -> {
        3 -> "P"[$CellContext`phase], 5 -> "Measurement", 4 -> 
         Superscript["H", 
           CircleTimes[2]], 2 -> Row[{"C", "NOT"}], 1 -> "H", 0 -> 
         "Initial"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 0.43588369151553563`}, {0.14239569201160318`, 
         1.1512095202431096`}}, 0.03246646657332464], 
        ArrowBox[{{0., 0.43588369151553563`}, {1.037262217335924, 
         0.6097078466553857}}, 0.03246646657332464], 
        ArrowBox[{{0.14239569201160318`, 1.1512095202431096`}, {
         1.037262217335924, 0.6097078466553857}}, 0.03246646657332464], 
        ArrowBox[{{1.037262217335924, 0.6097078466553857}, {
         1.7608898683274368`, 0.}}, 0.03246646657332464], 
        ArrowBox[{{1.037262217335924, 0.6097078466553857}, {2.254504852340988,
          0.6710561860421608}}, 0.03246646657332464], 
        ArrowBox[{{1.7608898683274368`, 0.}, {2.254504852340988, 
         0.6710561860421608}}, 0.03246646657332464], 
        ArrowBox[BezierCurveBox[{{2.254504852340988, 0.6710561860421608}, {
         2.743398456922243, 0.9735788319743243}, {3.3164202648406125`, 
         0.9268571501530736}}], 0.03246646657332464], 
        ArrowBox[BezierCurveBox[{{2.254504852340988, 0.6710561860421608}, {
         2.827526660259356, 0.6243345042209105}, {3.3164202648406125`, 
         0.9268571501530736}}], 0.03246646657332464]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.43588369151553563}, 0.03246646657332464], 
         InsetBox["\<\"Initial\"\>", {-0.03262588722462307, 0.40423670859062605},
           ImageScaled[{1.0383448128197088, 1.0221923615968667}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.14239569201160318, 1.1512095202431096}, 
          0.03246646657332464], 
         InsetBox["\<\"H\"\>", {0.12406687704005862, 1.1928032047058046}, 
          ImageScaled[{0.8024353758452383, -0.1863183251504723}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.037262217335924, 0.6097078466553857}, 
          0.03246646657332464], InsetBox[
          TemplateBox[{"\"C\"", "\"NOT\""},
           "RowDefault"], {1.0483713215430828, 0.6537824181128353}, 
          ImageScaled[{0.31669376272214045, -0.2272543044733617}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.7608898683274368, 0.}, 0.03246646657332464], InsetBox[
          RowBox[{"\<\"P\"\>", "(", "phase", ")"}], {1.7662504399081789, -0.04513584293852371},
           ImageScaled[{0.4115476650681468, 1.244765858807386}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.254504852340988, 0.6710561860421608}, 
          0.03246646657332464], InsetBox[
          TemplateBox[{"\"H\"", 
            RowBox[{"\[CircleTimes]", "2"}]},
           "Superscript"], {2.2480105556268515, 0.7160428969202868}, 
          ImageScaled[{0.6071594137776828, -0.2423050990252077}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.3164202648406125, 0.9268571501530736}, 
          0.03246646657332464], 
         InsetBox["\<\"Measurement\"\>", {3.3606093326312876, 0.9375016949171521},
           ImageScaled[{-0.22914355599484193, 0.3243592451872378}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.880203870168497*^9, 3.880203892664907*^9}},
 CellLabel->
  "Out[135]=",ExpressionUUID->"db30e9d9-380b-457e-9271-ea8679bbd2ad"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["4", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.25`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"\"", "SummaryItem"]}]}, {
               TagBox[
                TagBox[
                 GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "+", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "phase"}]], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]]}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "-", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "phase"}]], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]]}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"3", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "-", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "phase"}]], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]]}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{
                    FractionBox["1", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]], "+", 
                    FractionBox[
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"\[ImaginaryI]", " ", "phase"}]], 
                    RowBox[{"2", " ", 
                    SqrtBox["2"]}]]}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[
  Automatic, {4, 2, 2}, 0, {
   1, {{0, 1, 2, 3, 4}, {{1, 1}, {1, 2}, {2, 1}, {2, 2}}}, {
    Rational[1, 2] 2^Rational[-1, 2] + 
     Rational[1, 2] 2^Rational[-1, 2] E^(Complex[0, 1] $CellContext`phase), 
     Rational[1, 2] 2^Rational[-1, 2] + 
     Rational[-1, 2] 2^Rational[-1, 2] E^(Complex[0, 1] $CellContext`phase), 
     Rational[1, 2] 2^Rational[-1, 2] + 
     Rational[-1, 2] 2^Rational[-1, 2] E^(Complex[0, 1] $CellContext`phase), 
     Rational[1, 2] 2^Rational[-1, 2] + 
     Rational[1, 2] 2^Rational[-1, 2] E^(Complex[0, 1] $CellContext`phase)}}],
  
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.880203870168497*^9, 3.8802038926751003`*^9}},
 CellLabel->
  "Out[136]=",ExpressionUUID->"3550f8a8-46c1-4ac0-bffa-36ef8fb33fad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumDiagramProcess", "@", 
  RowBox[{"QuantumCircuitOperator", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<H\>\"", ",", "\"\<CNOT\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Phase\>\"", ",", "phase"}], "}"}], ",", 
     RowBox[{"\"\<H\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880203918660287*^9, 3.8802039226161623`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"52aac6bb-8e60-43d1-bc8c-9ba131dc47e5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["DiagramProcess",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             NamespaceBox["NetworkGraphics", 
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                  Graph[{
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>]}, {{{3, 
                    1}, {3, 2}, {4, 3}, {4, 3}, {4, 3}, {5, 4}, {6, 4}, {7, 
                    4}, {8, 5}, {8, 6}, {9, 8}, {9, 8}, {10, 9}, {11, 9}, {12,
                     10}, {13, 11}, {14, 12}, {15, 13}, {16, 14}, {16, 15}, {
                    17, 16}, {17, 16}, {18, 17}, {19, 17}, {20, 18}, {21, 
                    20}}, Null, {
                    1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 3 -> 3, 1 -> 1, 1 -> 2, 1 -> 
                    3, 1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 1 -> 1, 1 -> 2, 1 -> 1,
                     1 -> 1, 1 -> 1, 1 -> 1, 1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 
                    1 -> 1, 1 -> 2, 1 -> 1, 1 -> 1}}, {
                   EdgeShapeFunction -> {DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 3 -> 3] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 2 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 3] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 2 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 2 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& )}, GraphLayout -> {"Dimension" -> 2}, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    10 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], VertexCoordinates -> {{
                    Rational[-11, 8], 0}, {
                    Rational[11, 8], 0}, {0, 
                    Rational[-13, 8]}, {0, 
                    Rational[-29, 8]}, {
                    Rational[-11, 8], 
                    Rational[-21, 4]}, {0, 
                    Rational[-21, 4]}, {
                    Rational[11, 8], 
                    Rational[-21, 4]}, {0, 
                    Rational[-55, 8]}, {0, 
                    Rational[-71, 8]}, {
                    Rational[-11, 8], 
                    Rational[-21, 2]}, {
                    Rational[11, 8], 
                    Rational[-21, 2]}, {-1, 
                    Rational[-97, 8]}, {1, 
                    Rational[-97, 8]}, {-1, 
                    Rational[-113, 8]}, {
                    Rational[11, 8], 
                    Rational[-55, 4]}, {0, 
                    Rational[-129, 8]}, {0, 
                    Rational[-145, 8]}, {
                    Rational[-11, 8], 
                    Rational[-79, 4]}, {
                    Rational[11, 8], 
                    Rational[-79, 4]}, {0, 
                    Rational[-171, 8]}, {0, -23}}, 
                    VertexLabels -> {DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> Placed[
                    Tooltip["H", 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> None, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    Superscript["H", 
                    CircleTimes[2]], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> Placed[
                    Tooltip[None, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> None, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    Subscript["C", "NOT"][{1}, {}], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    "P"[$CellContext`phase], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> None}, 
                    VertexShapeFunction -> {DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    ({Black, 
                    DiagramProcess`PackageScope`Wire[
                    Apply[Sequence, 
                    If[
                    And[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], "circuit"], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                    0], {# + {(-Part[#3, 2])/2, 0}, # + {
                    Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                    0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium]]}& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 3], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 3], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329520, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2, 3}, 
                    Cycles[{{1, 2, 3}}]], {1, 2, 3}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329537, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2}, 
                    Cycles[{{1, 2}}]], {1, 2}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    3, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329566, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2}, 
                    Cycles[{{1, 2}}]], {1, 2}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    ({Black, 
                    DiagramProcess`PackageScope`Wire[
                    Apply[Sequence, 
                    If[
                    And[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], "circuit"], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                    0], {# + {(-Part[#3, 2])/2, 0}, # + {
                    Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                    0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium]]}& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& )}, 
                    VertexSize -> {DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> {3, 
                    1}}}]]}, 
               TagBox[
                GraphicsGroupBox[{{
                   Arrowheads[{{0.08682189744860044, 0.8}}], 
                   Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -1.125}, {-0.75, -0.625}, \
{-1.375, -0.625}, {-1.375, -0.25}, {-1.375, -0.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -0.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -1.125}, {0.75, -0.625}, {
                    1.375, -0.625}, {1.375, -0.25}, {1.375, -0.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -0.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -3.125}, {-0.75, -2.625}, \
{-0.75, -2.625}, {-0.75, -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -3.125}, {0., -2.625}, {
                    0., -2.625}, {0., -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -3.125}, {0.75, -2.625}, {
                    0.75, -2.625}, {0.75, -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -5.125}, {-1.375, -5.}, \
{-1.375, -4.625}, {-0.75, -4.625}, {-0.75, -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -5.125}, {0., -5.}, {0., -4.625}, {
                    0., -4.625}, {0., -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -5.125}, {1.375, -5.}, {
                    1.375, -4.625}, {0.75, -4.625}, {0.75, -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -6.375}, {-0.75, -5.875}, \
{-1.375, -5.875}, {-1.375, -5.5}, {-1.375, -5.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -5.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -6.375}, {0.75, -5.875}, {
                    0., -5.875}, {0., -5.5}, {0., -5.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.375, -5.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -8.375}, {-0.75, -7.875}, \
{-0.75, -7.875}, {-0.75, -7.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -7.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -8.375}, {0.75, -7.875}, {
                    0.75, -7.875}, {0.75, -7.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -7.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -10.375}, {-1.375, -10.25}, \
{-1.375, -9.875}, {-0.75, -9.875}, {-0.75, -9.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -9.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -10.375}, {1.375, -10.25}, {
                    1.375, -9.875}, {0.75, -9.875}, {0.75, -9.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -9.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -11.625}, {-1., -11.125}, {-1.375, \
-11.125}, {-1.375, -10.75}, {-1.375, -10.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.1875, -11.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1., -11.625}, {1., -11.125}, {
                    1.375, -11.125}, {1.375, -10.75}, {1.375, -10.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.1875, -11.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -13.625}, {-1., -13.125}, {-1., \
-13.125}, {-1., -12.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -13.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -13.625}, {1.375, -13.5}, {
                    1.375, -13.125}, {1., -13.125}, {1., -12.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.1875, -13.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -15.625}, {-0.75, -15.125}, \
{-1., -15.125}, {-1., -14.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.875, -15.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -15.625}, {0.75, -14.75}, {
                    1.375, -14.75}, {1.375, -14.}, {1.375, -13.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -14.75}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -17.625}, {-0.75, -17.125}, \
{-0.75, -17.125}, {-0.75, -16.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -17.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -17.625}, {0.75, -17.125}, {
                    0.75, -17.125}, {0.75, -16.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -17.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -19.625}, {-1.375, -19.5}, \
{-1.375, -19.125}, {-0.75, -19.125}, {-0.75, -18.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -19.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    BSplineCurveBox[{{1.375, -19.625}, {1.375, -19.5}, {
                    1.375, -19.125}, {0.75, -19.125}, {0.75, -18.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -19.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -20.875}, {
                    0., -20.375}, {-1.375, -20.375}, {-1.375, -20.}, {-1.375, \
-19.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.6875, -20.375}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -22.875}, {0., -22.75}, {
                    0., -22.375}, {0., -22.375}, {0., -21.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -22.375}]}}}, {
                   Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, 0.}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, 0.}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -2.125}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -2.125}]}, {
                    PointBox[{0., -2.125}]}, {
                    PointBox[{0.75, -2.125}]}}, {{
                    PointBox[{-0.75, -1.125}]}, {
                    PointBox[{0.75, -1.125}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["None", 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -1.625}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -4.125}, {
                    0.75, -3.625}, {-0.75, -3.625}, {-0.75, -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -3.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -4.125}, {-0.75, -3.625}, {
                    0., -3.625}, {0., -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.375, -3.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -4.125}, {0., -3.625}, {
                    0.75, -3.625}, {0.75, -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.375, -3.625}]}}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -5.25}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {0., -5.25}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -5.25}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -7.375}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -7.375}]}, {
                    PointBox[{0.75, -7.375}]}}, {{
                    PointBox[{-0.75, -6.375}]}, {
                    PointBox[{0.75, -6.375}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -6.875}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -9.375}, {
                    0.75, -8.875}, {-0.75, -8.875}, {-0.75, -8.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -8.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -9.375}, {-0.75, -8.875}, {
                    0.75, -8.875}, {0.75, -8.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -8.875}]}}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -10.5}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -10.5}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -12.625}, {-1., -12.125}, {-1., \
-12.125}, {-1., -11.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -12.125}]}}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {1, 1}, {
                    Rational[3, 4], 0}}, {{0, 0}, {0, 1}, {1, 1}, {
                    0.75, 0}}]], {0.5, -12.625}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{1., -12.625}]}}, {{
                    PointBox[{1., -11.625}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"P\"", "(", "phase", ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {1., -12.125}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -14.625}, {-1., -14.125}, {-1., \
-14.125}, {-1., -13.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -14.125}]}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -13.75}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -16.625}, {
                    0.75, -16.125}, {-0.75, -16.125}, {-0.75, -15.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -16.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -16.625}, {-0.75, -16.125}, {
                    0.75, -16.125}, {0.75, -15.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -16.125}]}}}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -18.625}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -18.625}]}, {
                    PointBox[{0.75, -18.625}]}}, {{
                    PointBox[{-0.75, -17.625}]}, {
                    PointBox[{0.75, -17.625}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{
                    SubscriptBox["\"C\"", "\"NOT\""], "(", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -18.125}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -19.75}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -19.75}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -21.875}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{0., -21.875}]}}, {{
                    PointBox[{0., -20.875}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["\"H\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    SubscriptBox["0", "1"], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -21.375}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {0., -23.}]}}}}], 
                MouseAppearanceTag["NetworkGraphics"]], 
               AllowKernelInitialization -> False]], {
             FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
              Dynamic[{
                Automatic, 
                 10 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              DefaultBaseStyle -> {
               "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                Hue[0.8, 1., 0.6]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   FormBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {}}], 
                    "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {}}], 
                    "Tooltip"]& ]}], ")"}], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["None", 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"3", "1", "2"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"2", "1"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"1\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"P\"", "(", "phase", ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"1\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"2", "1"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    RowBox[{
                    SubscriptBox["\"C\"", "\"NOT\""], "(", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["\"H\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    SubscriptBox["0", "1"], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    SubscriptBox["0", "1"], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             NamespaceBox["NetworkGraphics", 
              DynamicModuleBox[{Typeset`graph = HoldComplete[
                  Graph[{
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>]}, {{{3, 
                    1}, {3, 2}, {4, 3}, {4, 3}, {4, 3}, {5, 4}, {6, 4}, {7, 
                    4}, {8, 5}, {8, 6}, {9, 8}, {9, 8}, {10, 9}, {11, 9}, {12,
                     10}, {13, 11}, {14, 12}, {15, 13}, {16, 14}, {16, 15}, {
                    17, 16}, {17, 16}, {18, 17}, {19, 17}, {20, 18}, {21, 
                    20}}, Null, {
                    1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 3 -> 3, 1 -> 1, 1 -> 2, 1 -> 
                    3, 1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 1 -> 1, 1 -> 2, 1 -> 1,
                     1 -> 1, 1 -> 1, 1 -> 1, 1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 
                    1 -> 1, 1 -> 2, 1 -> 1, 1 -> 1}}, {
                   EdgeShapeFunction -> {DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 2 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 3 -> 3] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 2 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 3] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 1 -> 2] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 1 -> 1] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1},
                     "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 2 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[3, 4], 
                    Rational[1, 2]}, Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 1 -> 
                    1] -> ({Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
                    Rational[-3, 4], 
                    Rational[1, 2]}, 
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, -1], {0, -Rational[1, 8]}], "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], 2 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
                    Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
                    "ArrowSize" -> {1}, "ArrowPosition" -> 0.5, "Multiply" -> 
                    1, "MultiplyWidthIn" -> Rational[1, 10], 
                    "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
                    Thickness[Medium], "Append" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& ), DirectedEdge[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 2] -> ({
                    Black, 
                    (DiagramProcess`PackageScope`Wire[
                    (# + Normalize[#2] ({
                    Rational[1, 4], 
                    Rational[1, 4]}/2)& )[
                    Part[#, 1], {0, 
                    Rational[1, 8]}], Part[#, -1] + {
                    Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
                    "spider", "topological"}], 
                    Part[#, -1], None], "Prepend" -> If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>], {
                    "spider", "topological"}], 
                    Part[#, 1], None]]& )[
                    SlotSequence[1]]}& )}, GraphLayout -> {"Dimension" -> 2}, 
                    ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    10 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], VertexCoordinates -> {{
                    Rational[-11, 8], 0}, {
                    Rational[11, 8], 0}, {0, 
                    Rational[-13, 8]}, {0, 
                    Rational[-29, 8]}, {
                    Rational[-11, 8], 
                    Rational[-21, 4]}, {0, 
                    Rational[-21, 4]}, {
                    Rational[11, 8], 
                    Rational[-21, 4]}, {0, 
                    Rational[-55, 8]}, {0, 
                    Rational[-71, 8]}, {
                    Rational[-11, 8], 
                    Rational[-21, 2]}, {
                    Rational[11, 8], 
                    Rational[-21, 2]}, {-1, 
                    Rational[-97, 8]}, {1, 
                    Rational[-97, 8]}, {-1, 
                    Rational[-113, 8]}, {
                    Rational[11, 8], 
                    Rational[-55, 4]}, {0, 
                    Rational[-129, 8]}, {0, 
                    Rational[-145, 8]}, {
                    Rational[-11, 8], 
                    Rational[-79, 4]}, {
                    Rational[11, 8], 
                    Rational[-79, 4]}, {0, 
                    Rational[-171, 8]}, {0, -23}}, 
                    VertexLabels -> {DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> Placed[
                    Tooltip["H", 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> None, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    Superscript["H", 
                    CircleTimes[2]], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> Placed[
                    Tooltip[None, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> None, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    Subscript["C", "NOT"][{1}, {}], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> Placed[
                    Tooltip[
                    "P"[$CellContext`phase], 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> None, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> None}, 
                    VertexShapeFunction -> {DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    ({Black, 
                    DiagramProcess`PackageScope`Wire[
                    Apply[Sequence, 
                    If[
                    And[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>], "circuit"], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                    0], {# + {(-Part[#3, 2])/2, 0}, # + {
                    Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                    0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium]]}& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 3], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 3], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329520, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2, 3}, 
                    Cycles[{{1, 2, 3}}]], {1, 2, 3}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329537, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2}, 
                    Cycles[{{1, 2}}]], {1, 2}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    3, #3, 3], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`coord$, 
                    DiagramProcess`ProcGraph`PackagePrivate`v$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$}, 
                    MapThread[
                    
                    Function[{
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/
                    2}, DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                    DiagramProcess`PackageScope`edgeSideShift[
                    DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                    DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                    Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2},
                     DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 
                    Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                    Boole[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ShowProcessArrows"]]], 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                    With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                    If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                    DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                    And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "AddTerminals" -> 
                    False, "Interactive" -> False, "ShowWireLabels" -> False, 
                    "ShowWirePoints" -> False, "AddTerminals" -> True, 
                    "ArrowPosition" -> 0.5}, "ThickDoubleWire"]], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                    2], 
                    Thickness[Large], 
                    Thickness[Medium]]}, {Black, 
                    DiagramProcess`PackageScope`Wire[
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                    DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                    DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                    "ArrowSize" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                    "ArrowPosition" -> 0.5/2, "Multiply" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> 
                    DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
                    If[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`ProcGraph`PackagePrivate`q$1329566, 
                    "circuit"], Apply[DiagramProcess`PackageScope`reorder, 
                    DeleteCases[#, 
                    Apply[Alternatives, {}], All]]& , Identity][{
                    Permute[{1, 2}, 
                    Cycles[{{1, 2}}]], {1, 2}}]]][
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    ({Black, 
                    DiagramProcess`PackageScope`Wire[
                    Apply[Sequence, 
                    If[
                    And[
                    DiagramProcess`PackageScope`procTagQ[
                    DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>], "circuit"], 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                    DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                    0], {# + {(-Part[#3, 2])/2, 0}, # + {
                    Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                    0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
                    "ArrowPosition" -> 0.5, "Multiply" -> 1, 
                    "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                    Rational[1, 10], "Style" -> Thickness[Medium]]}& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Trapezoid"]& )[
                    SlotSequence[1]], {
                    GrayLevel[0], 
                    PointSize[0], {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[
                    2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}]}}, {{
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}, {
                    Point[# + {
                    DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                    Part[#3, 2] Rational[1, 2]}]}}}}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& ), DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> ({
                    FaceForm[
                    GrayLevel[0, 0]], 
                    (DiagramProcess`PackageScope`procShape[#, 
                    Part[#3, 1], 
                    Part[#3, 2], "Shape" -> "Disk"]& )[
                    SlotSequence[1]]}& )}, 
                    VertexSize -> {DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1221|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1223, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                    SlotSequence[1]]& , None], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2, 3}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{3, 1, 2}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1238, "Permutation" -> 
                    Cycles[{{1, 2, 3}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[Permute[{
                    SlotSequence[1]}, 
                    Cycles[{{1, 2}}]]& , 
                    Subscript["\[Pi]", 
                    Row[{2, 1}]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"permutation", "topological"}, 
                    "Id" -> $CellContext`pi1233, "Permutation" -> 
                    Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[Identity, "1"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"id", "topological"}, 
                    "Id" -> $CellContext`id1227|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                    SlotSequence[1]]& , 
                    Subscript["C", "NOT"][{1}, {}]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                    SlotSequence[1]]& , 
                    "P"[$CellContext`phase]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> {1, 1}, 
                    DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2}, 0, {
                    1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                    SlotSequence[1]]& , "H"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> {3, 1}, 
                    DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[0, "\[EmptyCircle]"], {}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Tags" -> {"spider", "topological"}, 
                    "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> {
                    Rational[1, 4], 
                    Rational[1, 4]}, DiagramProcess`Proc[
                    Labeled[
                    Part[SparseArray[
                    Automatic, {2, 2, 2, 2}, 0, {
                    1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                    SlotSequence[1]]& , 
                    Superscript["H", 
                    CircleTimes[2]]], {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                    "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> {3, 
                    1}}}]]}, 
               TagBox[
                GraphicsGroupBox[{{
                   Arrowheads[{{0.08682189744860044, 0.8}}], 
                   Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -1.125}, {-0.75, -0.625}, \
{-1.375, -0.625}, {-1.375, -0.25}, {-1.375, -0.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -0.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -1.125}, {0.75, -0.625}, {
                    1.375, -0.625}, {1.375, -0.25}, {1.375, -0.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -0.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -3.125}, {-0.75, -2.625}, \
{-0.75, -2.625}, {-0.75, -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -3.125}, {0., -2.625}, {
                    0., -2.625}, {0., -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -3.125}, {0.75, -2.625}, {
                    0.75, -2.625}, {0.75, -2.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -2.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -5.125}, {-1.375, -5.}, \
{-1.375, -4.625}, {-0.75, -4.625}, {-0.75, -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -5.125}, {0., -5.}, {0., -4.625}, {
                    0., -4.625}, {0., -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -5.125}, {1.375, -5.}, {
                    1.375, -4.625}, {0.75, -4.625}, {0.75, -4.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -4.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -6.375}, {-0.75, -5.875}, \
{-1.375, -5.875}, {-1.375, -5.5}, {-1.375, -5.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -5.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -6.375}, {0.75, -5.875}, {
                    0., -5.875}, {0., -5.5}, {0., -5.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.375, -5.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -8.375}, {-0.75, -7.875}, \
{-0.75, -7.875}, {-0.75, -7.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -7.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -8.375}, {0.75, -7.875}, {
                    0.75, -7.875}, {0.75, -7.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -7.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -10.375}, {-1.375, -10.25}, \
{-1.375, -9.875}, {-0.75, -9.875}, {-0.75, -9.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -9.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -10.375}, {1.375, -10.25}, {
                    1.375, -9.875}, {0.75, -9.875}, {0.75, -9.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -9.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -11.625}, {-1., -11.125}, {-1.375, \
-11.125}, {-1.375, -10.75}, {-1.375, -10.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.1875, -11.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1., -11.625}, {1., -11.125}, {
                    1.375, -11.125}, {1.375, -10.75}, {1.375, -10.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.1875, -11.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -13.625}, {-1., -13.125}, {-1., \
-13.125}, {-1., -12.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -13.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -13.625}, {1.375, -13.5}, {
                    1.375, -13.125}, {1., -13.125}, {1., -12.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.1875, -13.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -15.625}, {-0.75, -15.125}, \
{-1., -15.125}, {-1., -14.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.875, -15.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -15.625}, {0.75, -14.75}, {
                    1.375, -14.75}, {1.375, -14.}, {1.375, -13.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -14.75}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -17.625}, {-0.75, -17.125}, \
{-0.75, -17.125}, {-0.75, -16.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.75, -17.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -17.625}, {0.75, -17.125}, {
                    0.75, -17.125}, {0.75, -16.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.75, -17.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1.375, -19.625}, {-1.375, -19.5}, \
{-1.375, -19.125}, {-0.75, -19.125}, {-0.75, -18.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1.0625, -19.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{1.375, -19.625}, {1.375, -19.5}, {
                    1.375, -19.125}, {0.75, -19.125}, {0.75, -18.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {1.0625, -19.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    BSplineCurveBox[{{0., -20.875}, {
                    0., -20.375}, {-1.375, -20.375}, {-1.375, -20.}, {-1.375, \
-19.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.6875, -20.375}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{Small, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -22.875}, {0., -22.75}, {
                    0., -22.375}, {0., -22.375}, {0., -21.875}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -22.375}]}}}, {
                   Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, 0.}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, 0.}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -2.125}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -2.125}]}, {
                    PointBox[{0., -2.125}]}, {
                    PointBox[{0.75, -2.125}]}}, {{
                    PointBox[{-0.75, -1.125}]}, {
                    PointBox[{0.75, -1.125}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["None", 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -1.625}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -4.125}, {
                    0.75, -3.625}, {-0.75, -3.625}, {-0.75, -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -3.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -4.125}, {-0.75, -3.625}, {
                    0., -3.625}, {0., -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-0.375, -3.625}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0., -4.125}, {0., -3.625}, {
                    0.75, -3.625}, {0.75, -3.125}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0.375, -3.625}]}}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -5.25}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {0., -5.25}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -5.25}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -7.375}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -7.375}]}, {
                    PointBox[{0.75, -7.375}]}}, {{
                    PointBox[{-0.75, -6.375}]}, {
                    PointBox[{0.75, -6.375}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -6.875}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -9.375}, {
                    0.75, -8.875}, {-0.75, -8.875}, {-0.75, -8.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -8.875}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -9.375}, {-0.75, -8.875}, {
                    0.75, -8.875}, {0.75, -8.375}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -8.875}]}}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -10.5}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -10.5}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -12.625}, {-1., -12.125}, {-1., \
-12.125}, {-1., -11.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -12.125}]}}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {1, 1}, {
                    Rational[3, 4], 0}}, {{0, 0}, {0, 1}, {1, 1}, {
                    0.75, 0}}]], {0.5, -12.625}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{1., -12.625}]}}, {{
                    PointBox[{1., -11.625}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"P\"", "(", "phase", ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {1., -12.125}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.5}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-1., -14.625}, {-1., -14.125}, {-1., \
-14.125}, {-1., -13.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {-1., -14.125}]}}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -13.75}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {{
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{0.75, -16.625}, {
                    0.75, -16.125}, {-0.75, -16.125}, {-0.75, -15.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -16.125}]}}, {
                    GrayLevel[0], {{{
                    Arrowheads[{{0, 0.25}}], 
                    Thickness[Medium], 
                    ArrowBox[
                    
                    BSplineCurveBox[{{-0.75, -16.625}, {-0.75, -16.125}, {
                    0.75, -16.125}, {0.75, -15.625}}]]}}, 
                    InsetBox[
                    FormBox[
                    StyleBox["\"\"", Bold, 
                    GrayLevel[0], FontSize -> Small, StripOnInput -> False], 
                    TraditionalForm], {0., -16.125}]}}}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -18.625}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{-0.75, -18.625}]}, {
                    PointBox[{0.75, -18.625}]}}, {{
                    PointBox[{-0.75, -17.625}]}, {
                    PointBox[{0.75, -17.625}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    RowBox[{
                    SubscriptBox["\"C\"", "\"NOT\""], "(", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -18.125}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {-1.375, -19.75}]}}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {1.375, -19.75}]}}, {{
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    PolygonBox[
                    NCache[{{0, 0}, {0, 1}, {3, 1}, {
                    Rational[11, 4], 0}}, {{0, 0}, {0, 1}, {3, 1}, {
                    2.75, 0}}]], {-1.5, -21.875}]}, {
                    GrayLevel[0], 
                    PointSize[0], {{
                    PointBox[{0., -21.875}]}}, {{
                    PointBox[{0., -20.875}]}}}}, 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["\"H\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    SubscriptBox["0", "1"], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], 
                    TraditionalForm], {0., -21.375}, BaseStyle -> 
                    "Graphics"]}, {
                    FaceForm[
                    GrayLevel[0, 0]], {
                    EdgeForm[
                    GrayLevel[0]], 
                    GeometricTransformationBox[
                    DiskBox[{0, 0}, 
                    NCache[{
                    Rational[1, 8], 
                    Rational[1, 8]}, {0.125, 0.125}]], {0., -23.}]}}}}], 
                MouseAppearanceTag["NetworkGraphics"]], 
               AllowKernelInitialization -> False]], {
             FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> 
              Dynamic[{
                Automatic, 
                 10 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              DefaultBaseStyle -> {
               "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                Hue[0.8, 1., 0.6]}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Process: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   FormBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {}}], 
                    "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {}}], 
                    "Tooltip"]& ]}], ")"}], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["None", 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"3", "1", "2"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    TemplateBox[{"\"H\"", 
                    RowBox[{"\[CircleTimes]", "2"}]}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"2", "1"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"1\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox[
                    RowBox[{"\"P\"", "(", "phase", ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"1\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    SubscriptBox["\"\[Pi]\"", 
                    TemplateBox[{"2", "1"}, "RowDefault"]], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox[
                    RowBox[{
                    SubscriptBox["\"C\"", "\"NOT\""], "(", 
                    RowBox[{
                    RowBox[{"{", "1", "}"}], ",", 
                    RowBox[{"{", "}"}]}], ")"}], 
                    TemplateBox[{
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
                     "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                    "}"}]}, "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    RowBox[{"(", 
                    RowBox[{
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[CircleTimes]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], ")"}], 
                    "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["\"H\"", 
                    TemplateBox[{
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    SubscriptBox["0", "1"], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
                    "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ], "\[SmallCircle]", 
                    TagBox[
                    TooltipBox["\"\[EmptyCircle]\"", 
                    TemplateBox[{
                    RowBox[{"{", "}"}], "\"\[RightArrow]\"", 
                    RowBox[{"{", 
                    InterpretationBox[
                    FormBox[
                    TagBox[
                    SubscriptBox["0", "1"], HoldForm], TraditionalForm], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
                    "RowDefault"]], Annotation[#, 
                    Row[{{}, "\[RightArrow]", {
                    DiagramProcess`SystemType[
                    HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}}], "Tooltip"]& ]}], 
                    TraditionalForm], TraditionalForm, Editable -> True], 
                  "SummaryItem"]}], "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Input: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  DiagramProcess`DiagramProcess[
   DiagramProcess`Proc[
    Defer[
     Composition[
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1179, "Phase" -> 0|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Labeled[
       Part[SparseArray[
         Automatic, {2, 2, 2, 2}, 0, {
          1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
         SlotSequence[1]]& , None], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Id" -> $CellContext`$1169, "Tags" -> {}|>], 
      DiagramProcess`Proc[
       Labeled[Permute[{
          SlotSequence[1]}, 
         Cycles[{{1, 2, 3}}]]& , 
        Subscript["\[Pi]", 
         Row[{3, 1, 2}]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|
       "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1238, 
        "Permutation" -> Cycles[{{1, 2, 3}}]|>], 
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1180, "Phase" -> 0|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Labeled[
       Part[SparseArray[
         Automatic, {2, 2, 2, 2}, 0, {
          1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 
            1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 2}, {1, 2, 
            1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}}}, {
           Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
            Rational[1, 2], Rational[-1, 2], Rational[1, 2], Rational[-1, 2], 
            Rational[1, 2], Rational[1, 2], Rational[-1, 2], Rational[-1, 2], 
            Rational[1, 2], Rational[-1, 2], Rational[-1, 2], Rational[
            1, 2]}}], 
         SlotSequence[1]]& , 
        Superscript["H", 
         CircleTimes[2]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Id" -> $CellContext`$1168, "Tags" -> {}|>], 
      DiagramProcess`Proc[
       Labeled[Permute[{
          SlotSequence[1]}, 
         Cycles[{{1, 2}}]]& , 
        Subscript["\[Pi]", 
         Row[{2, 1}]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|
       "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1233, 
        "Permutation" -> Cycles[{{1, 2}}]|>], 
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1174, "Phase" -> 0|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[Identity, "1"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1227|>], 
         DiagramProcess`Proc[
          Labeled[
          Part[SparseArray[
            Automatic, {2, 2}, 0, {
             1, {{0, 1, 2}, {{1}, {2}}}, {
              1, E^(Complex[0, 1] $CellContext`phase)}}], 
            SlotSequence[1]]& , 
           "P"[$CellContext`phase]], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Id" -> $CellContext`$1167, "Tags" -> {}|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[Identity, "1"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1221|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1172, "Phase" -> 0|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Labeled[Permute[{
          SlotSequence[1]}, 
         Cycles[{{1, 2}}]]& , 
        Subscript["\[Pi]", 
         Row[{2, 1}]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|
       "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1223, 
        "Permutation" -> Cycles[{{1, 2}}]|>], 
      DiagramProcess`Proc[
       Labeled[
       Part[SparseArray[
         Automatic, {2, 2, 2, 2}, 0, {
          1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {1, 1,
            1, 1}}], 
         SlotSequence[1]]& , 
        Subscript["C", "NOT"][{1}, {}]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Id" -> $CellContext`$1166, "Tags" -> {}|>], 
      DiagramProcess`Proc[
       Defer[
        CircleTimes[
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
         DiagramProcess`Proc[
          Labeled[0, "\[EmptyCircle]"], {}, {
           DiagramProcess`SystemType[
            HoldForm[
             Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
            "Field" -> Complexes]}, <|
          "Tags" -> {"spider", "topological"}, 
           "Id" -> $CellContext`spider1171, "Phase" -> 0|>]]], {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes], 
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Tags" -> {"parallel composition"}|>], 
      DiagramProcess`Proc[
       Labeled[
       Part[SparseArray[
         Automatic, {2, 2}, 0, {
          1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
           2^Rational[-1, 2], 2^Rational[-1, 2], 2^
            Rational[-1, 2], -2^Rational[-1, 2]}}], 
         SlotSequence[1]]& , "H"], {
        DiagramProcess`SystemType[
         HoldForm[
          Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, {
        DiagramProcess`SystemType[
         HoldForm[
          Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|"Id" -> $CellContext`$1165, "Tags" -> {}|>], 
      DiagramProcess`Proc[
       Labeled[0, "\[EmptyCircle]"], {}, {
        DiagramProcess`SystemType[
         HoldForm[
          Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
         Complexes]}, <|
       "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1177, 
        "Phase" -> 0|>]]], {}, {}, <|"Tags" -> {"composition"}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8802039330933313`*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"c42a6791-b0f1-4dbb-be0d-252bb5fe5090"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8802039352029543`*^9, 3.880203936473288*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"39b54443-b8f4-4147-bbd6-a6d4c87cbb0e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1178, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1179, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[
        Part[SparseArray[
          Automatic, {2, 2, 2, 2}, 0, {
           1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
          SlotSequence[1]]& , None], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|"Id" -> $CellContext`$1169, "Tags" -> {}|>], 
       DiagramProcess`Proc[
        Labeled[Permute[{
           SlotSequence[1]}, 
          Cycles[{{1, 2, 3}}]]& , 
         Subscript["\[Pi]", 
          Row[{3, 1, 2}]]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1238,
          "Permutation" -> Cycles[{{1, 2, 3}}]|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1175, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1176, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1180, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[
        Part[SparseArray[
          Automatic, {2, 2, 2, 2}, 0, {
           1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1,
              1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 2}, {1, 
             2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}}}, {
            Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2], 
             Rational[1, 2], Rational[-1, 2], Rational[1, 2], Rational[-1, 2],
              Rational[1, 2], Rational[1, 2], Rational[-1, 2], 
             Rational[-1, 2], Rational[1, 2], Rational[-1, 2], 
             Rational[-1, 2], Rational[1, 2]}}], 
          SlotSequence[1]]& , 
         Superscript["H", 
          CircleTimes[2]]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|"Id" -> $CellContext`$1168, "Tags" -> {}|>], 
       DiagramProcess`Proc[
        Labeled[Permute[{
           SlotSequence[1]}, 
          Cycles[{{1, 2}}]]& , 
         Subscript["\[Pi]", 
          Row[{2, 1}]]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1233,
          "Permutation" -> Cycles[{{1, 2}}]|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1173, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1174, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[Identity, "1"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1227|>], 
       DiagramProcess`Proc[
        Labeled[
        Part[SparseArray[
          Automatic, {2, 2}, 0, {
           1, {{0, 1, 2}, {{1}, {2}}}, {
            1, E^(Complex[0, 1] $CellContext`phase)}}], 
          SlotSequence[1]]& , 
         "P"[$CellContext`phase]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|"Id" -> $CellContext`$1167, "Tags" -> {}|>], 
       DiagramProcess`Proc[
        Labeled[Identity, "1"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1221|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1172, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[Permute[{
           SlotSequence[1]}, 
          Cycles[{{1, 2}}]]& , 
         Subscript["\[Pi]", 
          Row[{2, 1}]]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"permutation", "topological"}, "Id" -> $CellContext`pi1223,
          "Permutation" -> Cycles[{{1, 2}}]|>], 
       DiagramProcess`Proc[
        Labeled[
        Part[SparseArray[
          Automatic, {2, 2, 2, 2}, 0, {
           1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {1, 
            1, 1, 1}}], 
          SlotSequence[1]]& , 
         Subscript["C", "NOT"][{1}, {}]], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes], 
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|"Id" -> $CellContext`$1166, "Tags" -> {}|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1170, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1171, 
         "Phase" -> 0|>], 
       DiagramProcess`Proc[
        Labeled[
        Part[SparseArray[
          Automatic, {2, 2}, 0, {
           1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
            2^Rational[-1, 2], 2^Rational[-1, 2], 2^
             Rational[-1, 2], -2^Rational[-1, 2]}}], 
          SlotSequence[1]]& , "H"], {
         DiagramProcess`SystemType[
          HoldForm[
           Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, {
         DiagramProcess`SystemType[
          HoldForm[
           Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|"Id" -> $CellContext`$1165, "Tags" -> {}|>], 
       DiagramProcess`Proc[
        Labeled[0, "\[EmptyCircle]"], {}, {
         DiagramProcess`SystemType[
          HoldForm[
           Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
          Complexes]}, <|
        "Tags" -> {"spider", "topological"}, "Id" -> $CellContext`spider1177, 
         "Phase" -> 0|>]}, {{{3, 1}, {3, 2}, {4, 3}, {4, 3}, {4, 3}, {5, 4}, {
       6, 4}, {7, 4}, {8, 5}, {8, 6}, {9, 8}, {9, 8}, {10, 9}, {11, 9}, {12, 
       10}, {13, 11}, {14, 12}, {15, 13}, {16, 14}, {16, 15}, {17, 16}, {17, 
       16}, {18, 17}, {19, 17}, {20, 18}, {21, 20}}, Null, {
       1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 3 -> 3, 1 -> 1, 1 -> 2, 1 -> 3, 1 -> 1,
         2 -> 1, 1 -> 1, 2 -> 2, 1 -> 1, 1 -> 2, 1 -> 1, 1 -> 1, 1 -> 1, 1 -> 
        1, 1 -> 1, 2 -> 1, 1 -> 1, 2 -> 2, 1 -> 1, 1 -> 2, 1 -> 1, 1 -> 1}}, {
      EdgeShapeFunction -> {DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1233, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 1 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1233, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
              SlotSequence[1]]& , None], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1178, "Phase" -> 0|>], 1 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1178, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                  SlotSequence[1]]& , None], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1171, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
                1, 1, 1, 1}}], 
              SlotSequence[1]]& , 
             Subscript["C", "NOT"][{1}, {}]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                  SlotSequence[1]]& , 
                 Subscript["C", "NOT"][{1}, {}]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1171, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2}, 0, {
               1, {{0, 1, 2}, {{1}, {2}}}, {
                1, E^(Complex[0, 1] $CellContext`phase)}}], 
              SlotSequence[1]]& , 
             "P"[$CellContext`phase]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1167, "Tags" -> {}|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2}, 0, {
                   1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                  SlotSequence[1]]& , 
                 "P"[$CellContext`phase]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1233, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {
                 2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {
                 2, 2, 2}}}, {
                Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                 1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
              SlotSequence[1]]& , 
             Superscript["H", 
              CircleTimes[2]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1168, "Tags" -> {}|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                  SlotSequence[1]]& , 
                 Superscript["H", 
                  CircleTimes[2]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1233, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1223, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 
           DiagramProcess`Proc[
            Labeled[Identity, "1"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1221|>], 
           1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Identity, "1"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"id", "topological"}, 
                 "Id" -> $CellContext`id1221|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1223, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Identity, "1"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1221|>], 
           DiagramProcess`Proc[
            Labeled[Identity, "1"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1227|>], 
           1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
              Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Identity, "1"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"id", "topological"}, 
                 "Id" -> $CellContext`id1227|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Identity, "1"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"id", "topological"}, 
                 "Id" -> $CellContext`id1221|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
                1, 1, 1, 1}}], 
              SlotSequence[1]]& , 
             Subscript["C", "NOT"][{1}, {}]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1223, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 2 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1223, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                  SlotSequence[1]]& , 
                 Subscript["C", "NOT"][{1}, {}]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
                1, 1, 1, 1}}], 
              SlotSequence[1]]& , 
             Subscript["C", "NOT"][{1}, {}]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1166, "Tags" -> {}|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                  SlotSequence[1]]& , 
                 Subscript["C", "NOT"][{1}, {}]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
                1, 1, 1, 1}}], 
              SlotSequence[1]]& , 
             Subscript["C", "NOT"][{1}, {}]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1166, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1223, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1223, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 
                    1}}}, {1, 1, 1, 1}}], 
                  SlotSequence[1]]& , 
                 Subscript["C", "NOT"][{1}, {}]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1166, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {
                 2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {
                 2, 2, 2}}}, {
                Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                 1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
              SlotSequence[1]]& , 
             Superscript["H", 
              CircleTimes[2]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 1 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                  SlotSequence[1]]& , 
                 Superscript["H", 
                  CircleTimes[2]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Identity, "1"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1227|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 1 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Identity, "1"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"id", "topological"}, 
                 "Id" -> $CellContext`id1227|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1175, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1175, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2}, 0, {
               1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                 Rational[-1, 2], -2^Rational[-1, 2]}}], 
              SlotSequence[1]]& , "H"], {
             DiagramProcess`SystemType[
              HoldForm[
               Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1165, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1170, "Phase" -> 0|>], 1 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1170, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2}, 0, {
                   1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                  SlotSequence[1]]& , "H"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 1 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1223, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1172, "Phase" -> 0|>], 2 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1172, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1223, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1180, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 1 -> 3] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1180, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1173, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1233, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1233, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1173, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
              SlotSequence[1]]& , None], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1169, "Tags" -> {}|>], 2 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
              Rational[1, 2]}, Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                  SlotSequence[1]]& , None], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
              SlotSequence[1]]& , None], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1169, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1179, "Phase" -> 0|>], 2 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1179, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                  SlotSequence[1]]& , None], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {
                 2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {
                 2, 2, 2}}}, {
                Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                 1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
              SlotSequence[1]]& , 
             Superscript["H", 
              CircleTimes[2]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1168, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1176, "Phase" -> 0|>], 2 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1176, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                  SlotSequence[1]]& , 
                 Superscript["H", 
                  CircleTimes[2]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2}}]]& , 
             Subscript["\[Pi]", 
              Row[{2, 1}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1233, "Permutation" -> 
             Cycles[{{1, 2}}]|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {
                 2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {
                 2, 2, 2}}}, {
                Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                 1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                 Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
              SlotSequence[1]]& , 
             Superscript["H", 
              CircleTimes[2]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1168, "Tags" -> {}|>], 2 -> 2] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 
                    2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 
                    1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 
                    2}, {2, 2, 1}, {2, 2, 2}}}, {
                    Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
                    1, 2], Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                    Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
                  SlotSequence[1]]& , 
                 Superscript["H", 
                  CircleTimes[2]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1168, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{2, 1}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1233, "Permutation" -> 
                 Cycles[{{1, 2}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
              SlotSequence[1]]& , None], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1169, "Tags" -> {}|>], 3 -> 3] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                  SlotSequence[1]]& , None], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {}, {
             DiagramProcess`SystemType[
              HoldForm[
               Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1177, "Phase" -> 0|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2}, 0, {
               1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                 Rational[-1, 2], -2^Rational[-1, 2]}}], 
              SlotSequence[1]]& , "H"], {
             DiagramProcess`SystemType[
              HoldForm[
               Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1165, "Tags" -> {}|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, 1], {0, 
              Rational[1, 8]}], Part[#, -1] + {0, -Rational[1, 2]}, "", 
            "ArrowSize" -> {1}, "ArrowPosition" -> Automatic, "Multiply" -> 1,
             "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
            Rational[1, 10], "Style" -> Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2}, 0, {
                   1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}], 
                  SlotSequence[1]]& , "H"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1165, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1177, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[Permute[{
               SlotSequence[1]}, 
              Cycles[{{1, 2, 3}}]]& , 
             Subscript["\[Pi]", 
              Row[{3, 1, 2}]]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"permutation", "topological"}, 
             "Id" -> $CellContext`pi1238, "Permutation" -> 
             Cycles[{{1, 2, 3}}]|>], 
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2, 2, 2}, 0, {
               1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
              SlotSequence[1]]& , None], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes], 
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1169, "Tags" -> {}|>], 1 -> 1] -> ({Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {
              Rational[-3, 4], 
              Rational[1, 2]}, Part[#, -1] + {
              Rational[-3, 4], -Rational[1, 2]}, "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2, 2, 2}, 0, {
                   1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 
                    3}}], 
                  SlotSequence[1]]& , None], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1169, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[Permute[{
                   SlotSequence[1]}, 
                  Cycles[{{1, 2, 3}}]]& , 
                 Subscript["\[Pi]", 
                  Row[{3, 1, 2}]]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"permutation", "topological"}, 
                 "Id" -> $CellContext`pi1238, "Permutation" -> 
                 Cycles[{{1, 2, 3}}]|>], {"spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& ), DirectedEdge[
           DiagramProcess`Proc[
            Labeled[
            Part[SparseArray[
              Automatic, {2, 2}, 0, {
               1, {{0, 1, 2}, {{1}, {2}}}, {
                1, E^(Complex[0, 1] $CellContext`phase)}}], 
              SlotSequence[1]]& , 
             "P"[$CellContext`phase]], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Id" -> $CellContext`$1167, "Tags" -> {}|>], 
           DiagramProcess`Proc[
            Labeled[0, "\[EmptyCircle]"], {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, {
             DiagramProcess`SystemType[
              HoldForm[
               Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
              "Field" -> Complexes]}, <|
            "Tags" -> {"spider", "topological"}, 
             "Id" -> $CellContext`spider1174, "Phase" -> 0|>], 1 -> 1] -> ({
          Black, 
           (DiagramProcess`PackageScope`Wire[Part[#, 1] + {0, 
              Rational[1, 2]}, 
            (# + Normalize[#2] ({
                Rational[1, 4], 
                Rational[1, 4]}/2)& )[
             Part[#, -1], {0, -Rational[1, 8]}], "", "ArrowSize" -> {1}, 
            "ArrowPosition" -> Automatic, "Multiply" -> 1, "MultiplyWidthIn" -> 
            Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
            Thickness[Medium], "Append" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[0, "\[EmptyCircle]"], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Tags" -> {"spider", "topological"}, 
                 "Id" -> $CellContext`spider1174, "Phase" -> 0|>], {
               "spider", "topological"}], 
              Part[#, -1], None], "Prepend" -> If[
              DiagramProcess`PackageScope`procTagQ[
               DiagramProcess`Proc[
                Labeled[
                Part[SparseArray[
                  Automatic, {2, 2}, 0, {
                   1, {{0, 1, 2}, {{1}, {2}}}, {
                    1, E^(Complex[0, 1] $CellContext`phase)}}], 
                  SlotSequence[1]]& , 
                 "P"[$CellContext`phase]], {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, {
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes]}, <|
                "Id" -> $CellContext`$1167, "Tags" -> {}|>], {
               "spider", "topological"}], 
              Part[#, 1], None]]& )[
            SlotSequence[1]]}& )}, VertexLabels -> {DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1221|>] -> 
         None, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2, 3}}]]& , 
            Subscript["\[Pi]", 
             Row[{3, 1, 2}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1238, "Permutation" -> 
            Cycles[{{1, 2, 3}}]|>] -> None, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, "Id" -> $CellContext`id1227|>] -> 
         None, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1223, "Permutation" -> Cycles[{{1, 2}}]|>] -> 
         None, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2,
                 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2,
                 2, 2}}}, {
               Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2],
                 Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
             SlotSequence[1]]& , 
            Superscript["H", 
             CircleTimes[2]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> Placed[
           Tooltip[
            Superscript["H", 
             CircleTimes[2]], 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
             
             SlotSequence[1]]& , None], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> Placed[
           Tooltip[None, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1233, "Permutation" -> Cycles[{{1, 2}}]|>] -> 
         None, DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 1, 2}, {{1}, {2}}}, {
               1, E^(Complex[0, 1] $CellContext`phase)}}], 
             SlotSequence[1]]& , 
            "P"[$CellContext`phase]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> Placed[
           Tooltip[
            "P"[$CellContext`phase], 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> None, 
         DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
               2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                Rational[-1, 2], -2^Rational[-1, 2]}}], 
             SlotSequence[1]]& , "H"], {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> Placed[
           Tooltip["H", 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}]], Center], DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
               1, 1, 1, 1}}], 
             SlotSequence[1]]& , 
            Subscript["C", "NOT"][{1}, {}]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> Placed[
           Tooltip[
            Subscript["C", "NOT"][{1}, {}], 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}]], Center]}, 
       VertexShapeFunction -> {DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, 
            "Id" -> $CellContext`id1221|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           ({Black, 
            DiagramProcess`PackageScope`Wire[
             Apply[Sequence, 
              If[
               And[
                DiagramProcess`PackageScope`procTagQ[
                 DiagramProcess`Proc[
                  Labeled[Identity, "1"], {
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                  "Tags" -> {"id", "topological"}, 
                   "Id" -> $CellContext`id1221|>], "circuit"], 
                DiagramProcess`PackageScope`typeArity[
                   Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                 DiagramProcess`PackageScope`typeArity[
                   Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                0], {# + {(-Part[#3, 2])/2, 0}, # + {
                 Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                 0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
             "ArrowPosition" -> 0.5, "Multiply" -> 1, "MultiplyWidthIn" -> 
             Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
             Thickness[Medium]]}& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
             
             SlotSequence[1]]& , None], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Trapezoid"]& )[
            SlotSequence[1]], {
            GrayLevel[0], 
            PointSize[Medium], {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 1, #3, 3], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  1, #3, 3], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 2, #3, 3], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  2, #3, 3], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 3, #3, 3], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 3], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  3, #3, 3], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}}, {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} 
                Rational[1, 8]]}}}}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2,
                 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2,
                 2, 2}}}, {
               Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2],
                 Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
             SlotSequence[1]]& , 
            Superscript["H", 
             CircleTimes[2]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Trapezoid"]& )[
            SlotSequence[1]], {
            GrayLevel[0], 
            PointSize[Medium], {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}}, {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} 
                Rational[1, 8]]}}}}& ), DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, 
            "Id" -> $CellContext`id1227|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           ({Black, 
            DiagramProcess`PackageScope`Wire[
             Apply[Sequence, 
              If[
               And[
                DiagramProcess`PackageScope`procTagQ[
                 DiagramProcess`Proc[
                  Labeled[Identity, "1"], {
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, {
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, <|
                  "Tags" -> {"id", "topological"}, 
                   "Id" -> $CellContext`id1227|>], "circuit"], 
                DiagramProcess`PackageScope`typeArity[
                   Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 1]] 
                 DiagramProcess`PackageScope`typeArity[
                   Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, -1]] > 
                0], {# + {(-Part[#3, 2])/2, 0}, # + {
                 Part[#3, 2]/2, 0}}, {# + {0, (-Part[#3, 2])/2}, # + {
                 0, Part[#3, 2]/2}}]], "", "ArrowSize" -> {0}, 
             "ArrowPosition" -> 0.5, "Multiply" -> 1, "MultiplyWidthIn" -> 
             Rational[1, 10], "MultiplyWidthOut" -> Rational[1, 10], "Style" -> 
             Thickness[Medium]]}& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1233, "Permutation" -> 
            Cycles[{{1, 2}}]|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           
           Function[{
            DiagramProcess`ProcGraph`PackagePrivate`coord$, 
             DiagramProcess`ProcGraph`PackagePrivate`v$, 
             DiagramProcess`ProcGraph`PackagePrivate`size$}, 
            MapThread[
             
             Function[{
              DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
               DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
              With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                   Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/2},
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                  Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2}, 
                DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                 Boole[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ShowProcessArrows"]]], 
                DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                  If[
                   And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                   DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                  And[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                   2], 
                  Thickness[Large], 
                  Thickness[Medium]]}, {Black, 
                DiagramProcess`PackageScope`Wire[
                DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                 DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                 "ArrowSize" -> DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                 "ArrowPosition" -> 0.5/2, "Multiply" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                 "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                 Rational[1, 10], "Style" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
             If[
              DiagramProcess`PackageScope`procTagQ[
              DiagramProcess`ProcGraph`PackagePrivate`q$1336010, "circuit"], 
              Apply[DiagramProcess`PackageScope`reorder, 
               DeleteCases[#, 
                Apply[Alternatives, {}], All]]& , Identity][{
               Permute[{1, 2}, 
                Cycles[{{1, 2}}]], {1, 2}}]]][
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 1, 2}, {{1}, {2}}}, {
               1, E^(Complex[0, 1] $CellContext`phase)}}], 
             SlotSequence[1]]& , 
            "P"[$CellContext`phase]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Trapezoid"]& )[
            SlotSequence[1]], {
            GrayLevel[0], 
            PointSize[Medium], {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}}, {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} 
                Rational[1, 8]]}}}}& ), DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2, 3}}]]& , 
            Subscript["\[Pi]", 
             Row[{3, 1, 2}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1238, "Permutation" -> 
            Cycles[{{1, 2, 3}}]|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           
           Function[{
            DiagramProcess`ProcGraph`PackagePrivate`coord$, 
             DiagramProcess`ProcGraph`PackagePrivate`v$, 
             DiagramProcess`ProcGraph`PackagePrivate`size$}, 
            MapThread[
             
             Function[{
              DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
               DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
              With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 3], (-
                   Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/2},
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 3], 
                  Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2}, 
                DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                 Boole[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ShowProcessArrows"]]], 
                DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                  If[
                   And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                   DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                  And[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                   2], 
                  Thickness[Large], 
                  Thickness[Medium]]}, {Black, 
                DiagramProcess`PackageScope`Wire[
                DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                 DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                 "ArrowSize" -> DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                 "ArrowPosition" -> 0.5/2, "Multiply" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                 "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                 Rational[1, 10], "Style" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
             If[
              DiagramProcess`PackageScope`procTagQ[
              DiagramProcess`ProcGraph`PackagePrivate`q$1335993, "circuit"], 
              Apply[DiagramProcess`PackageScope`reorder, 
               DeleteCases[#, 
                Apply[Alternatives, {}], All]]& , Identity][{
               Permute[{1, 2, 3}, 
                Cycles[{{1, 2, 3}}]], {1, 2, 3}}]]][
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1223, "Permutation" -> 
            Cycles[{{1, 2}}]|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           
           Function[{
            DiagramProcess`ProcGraph`PackagePrivate`coord$, 
             DiagramProcess`ProcGraph`PackagePrivate`v$, 
             DiagramProcess`ProcGraph`PackagePrivate`size$}, 
            MapThread[
             
             Function[{
              DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
               DiagramProcess`ProcGraph`PackagePrivate`toIndex$}, 
              With[{DiagramProcess`ProcGraph`PackagePrivate`fromShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`fromIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 2], (-
                   Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2])/2},
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$ = {
                  DiagramProcess`PackageScope`edgeSideShift[
                  DiagramProcess`ProcGraph`PackagePrivate`toIndex$, 
                   DiagramProcess`ProcGraph`PackagePrivate`size$, 2], 
                  Part[DiagramProcess`ProcGraph`PackagePrivate`size$, 2]/2}, 
                DiagramProcess`ProcGraph`PackagePrivate`dir$ = (1 - 2 Boole[
                    DiagramProcess`PackageScope`dualTypesQ[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]]) 
                 Boole[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ShowProcessArrows"]]], 
                DiagramProcess`ProcGraph`PackagePrivate`multiply$ = 
                With[{DiagramProcess`ProcGraph`PackagePrivate`arity$ = 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]]}, 
                  If[
                   And[
                    TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                    DiagramProcess`ProcGraph`PackagePrivate`arity$ == 2], 1, 
                   DiagramProcess`ProcGraph`PackagePrivate`arity$]], 
                DiagramProcess`ProcGraph`PackagePrivate`style$ = If[
                  And[
                   TrueQ[
                    OptionValue[
                    DiagramProcess`ProcGraph, {
                    "AddTerminals" -> False, "ParallelComposeDistance" -> 
                    Automatic, "Size" -> {3, Automatic}, "Interactive" -> 
                    False}, "ThickDoubleWire"]], 
                   DiagramProcess`PackageScope`typeArity[
                    Part[{
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], 
                    DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes]}, 
                    DiagramProcess`ProcGraph`PackagePrivate`fromIndex$]] == 
                   2], 
                  Thickness[Large], 
                  Thickness[Medium]]}, {Black, 
                DiagramProcess`PackageScope`Wire[
                DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`fromShift$, 
                 DiagramProcess`ProcGraph`PackagePrivate`coord$ + 
                 DiagramProcess`ProcGraph`PackagePrivate`toShift$, "", 
                 "ArrowSize" -> DiagramProcess`ProcGraph`PackagePrivate`dir$, 
                 "ArrowPosition" -> 0.5/2, "Multiply" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`multiply$, 
                 "MultiplyWidthIn" -> Rational[1, 10], "MultiplyWidthOut" -> 
                 Rational[1, 10], "Style" -> 
                 DiagramProcess`ProcGraph`PackagePrivate`style$]}]], 
             If[
              DiagramProcess`PackageScope`procTagQ[
              DiagramProcess`ProcGraph`PackagePrivate`q$1336039, "circuit"], 
              Apply[DiagramProcess`PackageScope`reorder, 
               DeleteCases[#, 
                Apply[Alternatives, {}], All]]& , Identity][{
               Permute[{1, 2}, 
                Cycles[{{1, 2}}]], {1, 2}}]]][
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
               1, 1, 1, 1}}], 
             SlotSequence[1]]& , 
            Subscript["C", "NOT"][{1}, {}]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Trapezoid"]& )[
            SlotSequence[1]], {
            GrayLevel[0], 
            PointSize[Medium], {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  1, #3, 2], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  2, #3, 2], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}}, {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[1, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} Rational[1, 8]]}, {
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes], 
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 2], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[2, #3, 2], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} 
                Rational[1, 8]]}}}}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& ), DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
               2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                Rational[-1, 2], -2^Rational[-1, 2]}}], 
             SlotSequence[1]]& , "H"], {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Trapezoid"]& )[
            SlotSequence[1]], {
            GrayLevel[0], 
            PointSize[Medium], {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[
                 1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[
                  1, #3, 1], (-Part[#3, 2]) Rational[1, 2]}) + {1, -1} 
                Rational[1, 8]]}}, {{
              Point[# + {
                 DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                 Part[#3, 2] Rational[1, 2]}], 
              Text[
               Style[
                Part[{
                  DiagramProcess`SystemType[
                   HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                   "Field" -> Complexes]}, 1], Bold, 
                GrayLevel[0], FontSize -> Small], (# + {
                  DiagramProcess`PackageScope`edgeSideShift[1, #3, 1], 
                  Part[#3, 2] Rational[1, 2]}) + {1, 1} 
                Rational[1, 8]]}}}}& ), DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> ({
           FaceForm[
            GrayLevel[0, 0]], 
           (DiagramProcess`PackageScope`procShape[#, 
            Part[#3, 1], 
            Part[#3, 2], "Shape" -> "Disk"]& )[
            SlotSequence[1]]}& )}, VertexSize -> {DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 8, 16}, {{1, 1, 1}, {1, 1, 2}, {1, 2, 1}, {1, 2, 2}, {2,
                 1, 1}, {2, 1, 2}, {2, 2, 1}, {2, 2, 2}, {1, 1, 1}, {1, 1, 
                2}, {1, 2, 1}, {1, 2, 2}, {2, 1, 1}, {2, 1, 2}, {2, 2, 1}, {2,
                 2, 2}}}, {
               Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[1, 2],
                 Rational[1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2], 
                Rational[-1, 2], Rational[-1, 2], Rational[1, 2]}}], 
             SlotSequence[1]]& , 
            Superscript["H", 
             CircleTimes[2]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1168, "Tags" -> {}|>] -> {3, 1}, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1170, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, 
            "Id" -> $CellContext`id1227|>] -> {1, 1}, DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2, 3}}]]& , 
            Subscript["\[Pi]", 
             Row[{3, 1, 2}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1238, "Permutation" -> 
            Cycles[{{1, 2, 3}}]|>] -> {3, 1}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1174, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[Identity, "1"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"id", "topological"}, 
            "Id" -> $CellContext`id1221|>] -> {1, 1}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1175, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1223, "Permutation" -> 
            Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1179, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
               2^Rational[-1, 2], 2^Rational[-1, 2], 2^
                Rational[-1, 2], -2^Rational[-1, 2]}}], 
             SlotSequence[1]]& , "H"], {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1165, "Tags" -> {}|>] -> {3, 1}, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1173, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1178, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1172, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, "Field" -> 
             Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1177, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[Permute[{
              SlotSequence[1]}, 
             Cycles[{{1, 2}}]]& , 
            Subscript["\[Pi]", 
             Row[{2, 1}]]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"permutation", "topological"}, 
            "Id" -> $CellContext`pi1233, "Permutation" -> 
            Cycles[{{1, 2}}]|>] -> {3, 1}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1180, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 2, 4}, {{1, 1, 1}, {2, 1, 2}, {1, 2, 2}, {2, 2, 1}}}, {
               1, 1, 1, 1}}], 
             SlotSequence[1]]& , 
            Subscript["C", "NOT"][{1}, {}]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1166, "Tags" -> {}|>] -> {3, 1}, 
         DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2}, 0, {
              1, {{0, 1, 2}, {{1}, {2}}}, {
               1, E^(Complex[0, 1] $CellContext`phase)}}], 
             SlotSequence[1]]& , 
            "P"[$CellContext`phase]], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1167, "Tags" -> {}|>] -> {1, 1}, 
         DiagramProcess`Proc[
           Labeled[
           Part[SparseArray[
             Automatic, {2, 2, 2, 2}, 0, {
              1, {{0, 1, 3}, {{2, 1, 2}, {1, 2, 1}, {2, 2, 2}}}, {1, 2, 3}}], 
             
             SlotSequence[1]]& , None], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes], 
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Id" -> $CellContext`$1169, "Tags" -> {}|>] -> {3, 1}, 
         DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1176, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}, DiagramProcess`Proc[
           Labeled[0, "\[EmptyCircle]"], {}, {
            DiagramProcess`SystemType[
             HoldForm[
              Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
             "Field" -> Complexes]}, <|
           "Tags" -> {"spider", "topological"}, 
            "Id" -> $CellContext`spider1171, "Phase" -> 0|>] -> {
           Rational[1, 4], 
           Rational[1, 4]}}, VertexCoordinates -> {{
          Rational[-11, 8], 0}, {
          Rational[11, 8], 0}, {0, 
          Rational[-13, 8]}, {0, 
          Rational[-29, 8]}, {
          Rational[-11, 8], 
          Rational[-21, 4]}, {0, 
          Rational[-21, 4]}, {
          Rational[11, 8], 
          Rational[-21, 4]}, {0, 
          Rational[-55, 8]}, {0, 
          Rational[-71, 8]}, {
          Rational[-11, 8], 
          Rational[-21, 2]}, {
          Rational[11, 8], 
          Rational[-21, 2]}, {-1, 
          Rational[-97, 8]}, {1, 
          Rational[-97, 8]}, {-1, 
          Rational[-113, 8]}, {
          Rational[11, 8], 
          Rational[-55, 4]}, {0, 
          Rational[-129, 8]}, {0, 
          Rational[-145, 8]}, {
          Rational[-11, 8], 
          Rational[-79, 4]}, {
          Rational[11, 8], 
          Rational[-79, 4]}, {0, 
          Rational[-171, 8]}, {0, -23}}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        Arrowheads[{{0.08682189744860044, 0.8}}], 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -1.125}, {-0.75, -0.625}, {-1.375, \
-0.625}, {-1.375, -0.25}, {-1.375, -0.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.0625, -0.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -1.125}, {0.75, -0.625}, {
           1.375, -0.625}, {1.375, -0.25}, {1.375, -0.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.0625, -0.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -3.125}, {-0.75, -2.625}, {-0.75, \
-2.625}, {-0.75, -2.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.75, -2.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0., -3.125}, {0., -2.625}, {
           0., -2.625}, {0., -2.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0., -2.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -3.125}, {0.75, -2.625}, {
           0.75, -2.625}, {0.75, -2.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.75, -2.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-1.375, -5.125}, {-1.375, -5.}, {-1.375, \
-4.625}, {-0.75, -4.625}, {-0.75, -4.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.0625, -4.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0., -5.125}, {0., -5.}, {0., -4.625}, {
           0., -4.625}, {0., -4.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0., -4.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{1.375, -5.125}, {1.375, -5.}, {
           1.375, -4.625}, {0.75, -4.625}, {0.75, -4.125}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.0625, -4.625}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -6.375}, {-0.75, -5.875}, {-1.375, \
-5.875}, {-1.375, -5.5}, {-1.375, -5.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.0625, -5.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -6.375}, {0.75, -5.875}, {
           0., -5.875}, {0., -5.5}, {0., -5.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.375, -5.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -8.375}, {-0.75, -7.875}, {-0.75, \
-7.875}, {-0.75, -7.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.75, -7.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -8.375}, {0.75, -7.875}, {
           0.75, -7.875}, {0.75, -7.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.75, -7.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-1.375, -10.375}, {-1.375, -10.25}, {-1.375, \
-9.875}, {-0.75, -9.875}, {-0.75, -9.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.0625, -9.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{1.375, -10.375}, {1.375, -10.25}, {
           1.375, -9.875}, {0.75, -9.875}, {0.75, -9.375}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.0625, -9.875}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-1., -11.625}, {-1., -11.125}, {-1.375, \
-11.125}, {-1.375, -10.75}, {-1.375, -10.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.1875, -11.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{1., -11.625}, {1., -11.125}, {
           1.375, -11.125}, {1.375, -10.75}, {1.375, -10.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.1875, -11.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-1., -13.625}, {-1., -13.125}, {-1., -13.125}, \
{-1., -12.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1., -13.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{1.375, -13.625}, {1.375, -13.5}, {
           1.375, -13.125}, {1., -13.125}, {1., -12.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.1875, -13.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -15.625}, {-0.75, -15.125}, {-1., \
-15.125}, {-1., -14.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.875, -15.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -15.625}, {0.75, -14.75}, {
           1.375, -14.75}, {1.375, -14.}, {1.375, -13.875}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.0625, -14.75}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-0.75, -17.625}, {-0.75, -17.125}, {-0.75, \
-17.125}, {-0.75, -16.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.75, -17.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0.75, -17.625}, {0.75, -17.125}, {
           0.75, -17.125}, {0.75, -16.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0.75, -17.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[
           BSplineCurveBox[{{-1.375, -19.625}, {-1.375, -19.5}, {-1.375, \
-19.125}, {-0.75, -19.125}, {-0.75, -18.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-1.0625, -19.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{1.375, -19.625}, {1.375, -19.5}, {
           1.375, -19.125}, {0.75, -19.125}, {0.75, -18.625}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {1.0625, -19.125}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0., -20.875}, {
           0., -20.375}, {-1.375, -20.375}, {-1.375, -20.}, {-1.375, \
-19.875}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {-0.6875, -20.375}]}, 
        {GrayLevel[0], 
         {Thickness[Medium], Arrowheads[{{Small, 0.4}}], 
          ArrowBox[BSplineCurveBox[{{0., -22.875}, {0., -22.75}, {
           0., -22.375}, {0., -22.375}, {0., -21.875}}]]}, InsetBox[
          StyleBox["\<\"\"\>",
           StripOnInput->False,
           LineColor->GrayLevel[0],
           FrontFaceColor->GrayLevel[0],
           BackFaceColor->GrayLevel[0],
           GraphicsColor->GrayLevel[0],
           FontSize->Small,
           FontWeight->Bold,
           FontColor->GrayLevel[0]], {0., -22.375}]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 
             0.125}]], {-1.375, 0.}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {1.375,
            0.}]}}, {
         {FaceForm[{GrayLevel[0], Opacity[0]}], 
          {EdgeForm[GrayLevel[0]], 
           GeometricTransformationBox[
            PolygonBox[
             NCache[{{0, 0}, {0, 1}, {3, 1}, {Rational[11, 4], 0}}, {{0, 0}, {
               0, 1}, {3, 1}, {2.75, 0}}]], {-1.5, -2.125}]}, 
          {GrayLevel[0], PointSize[
           Medium], {{PointBox[{-0.75, -2.125}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"4", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -2.25}]}, {
             PointBox[{0., -2.125}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"3", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.125, -2.25}]}, {
             PointBox[{0.75, -2.125}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"3", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -2.25}]}}, {{
             PointBox[{-0.75, -1.125}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"4", "0"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -1.}]}, {
             PointBox[{0.75, -1.125}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"4", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -1.}]}}}}, InsetBox[
          TagBox[
           TooltipBox["None",
            TemplateBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"4", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
               "\"\[RightArrow]\"", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"4", "0"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"4", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                "}"}]}, "RowDefault"]],
           Annotation[#, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 0]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[4, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}], "Tooltip"]& ], {0., -1.625},
          BaseStyle->"Graphics"]}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{0.75, -4.125}, {
            0.75, -3.625}, {-0.75, -3.625}, {-0.75, -3.125}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0., -3.625}]}, 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{-0.75, -4.125}, {-0.75, -3.625}, {
            0., -3.625}, {0., -3.125}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {-0.375, -3.625}]}, 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{0., -4.125}, {0., -3.625}, {
            0.75, -3.625}, {0.75, -3.125}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0.375, -3.625}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 
             0.125}]], {-1.375, -5.25}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           0., -5.25}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           1.375, -5.25}]}}, {
         {FaceForm[{GrayLevel[0], Opacity[0]}], 
          {EdgeForm[GrayLevel[0]], 
           GeometricTransformationBox[
            PolygonBox[
             NCache[{{0, 0}, {0, 1}, {3, 1}, {Rational[11, 4], 0}}, {{0, 0}, {
               0, 1}, {3, 1}, {2.75, 0}}]], {-1.5, -7.375}]}, 
          {GrayLevel[0], PointSize[
           Medium], {{PointBox[{-0.75, -7.375}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"2", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -7.5}]}, {
             PointBox[{0.75, -7.375}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"1", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -7.5}]}}, {{
             PointBox[{-0.75, -6.375}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"3", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -6.25}]}, {
             PointBox[{0.75, -6.375}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"3", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -6.25}]}}}}, InsetBox[
          TagBox[
           TooltipBox[
            TemplateBox[{"\"H\"", 
              RowBox[{"\[CircleTimes]", "2"}]},
             "Superscript"],
            TemplateBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
               "\"\[RightArrow]\"", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"3", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"3", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                "}"}]}, "RowDefault"]],
           Annotation[#, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[3, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}], "Tooltip"]& ], {0., -6.875},
          BaseStyle->"Graphics"]}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{0.75, -9.375}, {
            0.75, -8.875}, {-0.75, -8.875}, {-0.75, -8.375}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0., -8.875}]}, 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{-0.75, -9.375}, {-0.75, -8.875}, {
            0.75, -8.875}, {0.75, -8.375}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0., -8.875}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 
             0.125}]], {-1.375, -10.5}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           1.375, -10.5}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.5}}], 
           ArrowBox[
            BSplineCurveBox[{{-1., -12.625}, {-1., -12.125}, {-1., -12.125}, \
{-1., -11.625}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {-1., -12.125}]}}, {
         {FaceForm[{GrayLevel[0], Opacity[0]}], 
          {EdgeForm[GrayLevel[0]], 
           GeometricTransformationBox[
            PolygonBox[
             NCache[{{0, 0}, {0, 1}, {1, 1}, {Rational[3, 4], 0}}, {{0, 0}, {
               0, 1}, {1, 1}, {0.75, 0}}]], {0.5, -12.625}]}, 
          {GrayLevel[0], PointSize[Medium], {PointBox[{1., -12.625}], InsetBox[
             StyleBox[
              InterpretationBox[
               FormBox[
                TemplateBox[{"1", "1"},
                 "Superscript"],
                TraditionalForm],
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes],
               Tooltip->FormBox[
                 TemplateBox[{
                   TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], TraditionalForm]],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontSize->Small,
              FontWeight->Bold,
              FontColor->GrayLevel[0]], {1.125, -12.75}]}, {
            PointBox[{1., -11.625}], InsetBox[
             StyleBox[
              InterpretationBox[
               FormBox[
                TemplateBox[{"2", "1"},
                 "Superscript"],
                TraditionalForm],
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes],
               Tooltip->FormBox[
                 TemplateBox[{
                   TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], TraditionalForm]],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontSize->Small,
              FontWeight->Bold,
              FontColor->GrayLevel[0]], {1.125, -11.5}]}}}, InsetBox[
          TagBox[
           TooltipBox[
            RowBox[{"\<\"P\"\>", "(", "phase", ")"}],
            TemplateBox[{
              RowBox[{"{", 
                InterpretationBox[
                 FormBox[
                  
                  TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                   SuperscriptBox], TraditionalForm], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], Tooltip -> FormBox[
                   TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
              "\"\[RightArrow]\"", 
              RowBox[{"{", 
                InterpretationBox[
                 FormBox[
                  
                  TemplateBox[{"2", "1"}, "Superscript", SyntaxForm -> 
                   SuperscriptBox], TraditionalForm], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], Tooltip -> FormBox[
                   TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
             "RowDefault"]],
           Annotation[#, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[2, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}], "Tooltip"]& ], {1., -12.125},
          BaseStyle->"Graphics"]}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.5}}], 
           ArrowBox[
            BSplineCurveBox[{{-1., -14.625}, {-1., -14.125}, {-1., -14.125}, \
{-1., -13.625}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {-1., -14.125}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           1.375, -13.75}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{0.75, -16.625}, {
            0.75, -16.125}, {-0.75, -16.125}, {-0.75, -15.625}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0., -16.125}]}, 
         {GrayLevel[0], 
          {Thickness[Medium], Arrowheads[{{0, 0.25}}], 
           ArrowBox[BSplineCurveBox[{{-0.75, -16.625}, {-0.75, -16.125}, {
            0.75, -16.125}, {0.75, -15.625}}]]}, InsetBox[
           StyleBox["\<\"\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontSize->Small,
            FontWeight->Bold,
            FontColor->GrayLevel[0]], {0., -16.125}]}}, {
         {FaceForm[{GrayLevel[0], Opacity[0]}], 
          {EdgeForm[GrayLevel[0]], 
           GeometricTransformationBox[
            PolygonBox[
             NCache[{{0, 0}, {0, 1}, {3, 1}, {Rational[11, 4], 0}}, {{0, 0}, {
               0, 1}, {3, 1}, {2.75, 0}}]], {-1.5, -18.625}]}, 
          {GrayLevel[0], PointSize[
           Medium], {{PointBox[{-0.75, -18.625}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"0", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -18.75}]}, {
             PointBox[{0.75, -18.625}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"0", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -18.75}]}}, {{
             PointBox[{-0.75, -17.625}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"1", "1"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {-0.625, -17.5}]}, {
             PointBox[{0.75, -17.625}], InsetBox[
              StyleBox[
               InterpretationBox[
                FormBox[
                 TemplateBox[{"1", "2"},
                  "Superscript"],
                 TraditionalForm],
                DiagramProcess`SystemType[
                 HoldForm[
                  Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                 "Field" -> Complexes],
                Tooltip->FormBox[
                  TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                   SyntaxForm -> SuperscriptBox], TraditionalForm]],
               StripOnInput->False,
               LineColor->GrayLevel[0],
               FrontFaceColor->GrayLevel[0],
               BackFaceColor->GrayLevel[0],
               GraphicsColor->GrayLevel[0],
               FontSize->Small,
               FontWeight->Bold,
               FontColor->GrayLevel[0]], {0.875, -17.5}]}}}}, InsetBox[
          TagBox[
           TooltipBox[
            RowBox[{
             SubscriptBox["\<\"C\"\>", "\<\"NOT\"\>"], "(", 
             RowBox[{
              RowBox[{"{", "1", "}"}], ",", 
              RowBox[{"{", "}"}]}], ")"}],
            TemplateBox[{
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"0", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], "}"}],
               "\"\[RightArrow]\"", 
              RowBox[{"{", 
                RowBox[{
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"1", "1"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], ",", 
                  InterpretationBox[
                   FormBox[
                    
                    TemplateBox[{"1", "2"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                   DiagramProcess`SystemType[
                    HoldForm[
                    Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                    "Field" -> Complexes], Tooltip -> FormBox[
                    TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]]}], 
                "}"}]}, "RowDefault"]],
           Annotation[#, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes], 
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[1, 2]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}], "Tooltip"]& ], {0., -18.125},
          BaseStyle->"Graphics"]}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 
             0.125}]], {-1.375, -19.75}]}}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           1.375, -19.75}]}}, {
         {FaceForm[{GrayLevel[0], Opacity[0]}], 
          {EdgeForm[GrayLevel[0]], 
           GeometricTransformationBox[
            PolygonBox[
             NCache[{{0, 0}, {0, 1}, {3, 1}, {Rational[11, 4], 0}}, {{0, 0}, {
               0, 1}, {3, 1}, {2.75, 0}}]], {-1.5, -21.875}]}, 
          {GrayLevel[0], PointSize[Medium], {PointBox[{0., -21.875}], InsetBox[
             StyleBox[
              InterpretationBox[
               FormBox[
                SubscriptBox["0", "1"],
                TraditionalForm],
               DiagramProcess`SystemType[
                HoldForm[
                 Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes],
               Tooltip->FormBox[
                 TemplateBox[{
                   TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], TraditionalForm]],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontSize->Small,
              FontWeight->Bold,
              FontColor->GrayLevel[0]], {0.125, -22.}]}, {
            PointBox[{0., -20.875}], InsetBox[
             StyleBox[
              InterpretationBox[
               FormBox[
                TemplateBox[{"0", "1"},
                 "Superscript"],
                TraditionalForm],
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes],
               Tooltip->FormBox[
                 TemplateBox[{
                   TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                  SyntaxForm -> SuperscriptBox], TraditionalForm]],
              StripOnInput->False,
              LineColor->GrayLevel[0],
              FrontFaceColor->GrayLevel[0],
              BackFaceColor->GrayLevel[0],
              GraphicsColor->GrayLevel[0],
              FontSize->Small,
              FontWeight->Bold,
              FontColor->GrayLevel[0]], {0.125, -20.75}]}}}, InsetBox[
          TagBox[
           TooltipBox["\<\"H\"\>",
            TemplateBox[{
              RowBox[{"{", 
                InterpretationBox[
                 FormBox[
                  SubscriptBox["0", "1"], TraditionalForm], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], Tooltip -> FormBox[
                   TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}], 
              "\"\[RightArrow]\"", 
              RowBox[{"{", 
                InterpretationBox[
                 FormBox[
                  
                  TemplateBox[{"0", "1"}, "Superscript", SyntaxForm -> 
                   SuperscriptBox], TraditionalForm], 
                 DiagramProcess`SystemType[
                  HoldForm[
                   Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                  "Field" -> Complexes], Tooltip -> FormBox[
                   TemplateBox[{
                    TemplateBox[{}, "Complexes"], "2"}, "Superscript", 
                    SyntaxForm -> SuperscriptBox], TraditionalForm]], "}"}]}, 
             "RowDefault"]],
           Annotation[#, 
            Row[{{
               DiagramProcess`SystemType[
                HoldForm[
                 Subscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}, "\[RightArrow]", {
               DiagramProcess`SystemType[
                HoldForm[
                 Superscript[0, 1]], "Dimensions" -> {2}, "Dual" -> False, 
                "Field" -> Complexes]}}], "Tooltip"]& ], {0., -21.375},
          BaseStyle->"Graphics"]}, 
        {FaceForm[{GrayLevel[0], Opacity[0]}], 
         {EdgeForm[GrayLevel[0]], 
          GeometricTransformationBox[
           DiskBox[{0, 0}, 
            NCache[{Rational[1, 8], Rational[1, 8]}, {0.125, 0.125}]], {
           0., -23.}]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.880203936846377*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"56f3e925-17c1-4404-a8eb-9e64fb0223b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<UniformMixture\>\"", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.880204228333715*^9, 3.880204240950288*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"540c4e0d-b92d-4725-8dfd-34a5d5ad7ce5"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "0"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "0"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "1"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "1"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "0"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "0"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "1"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "1"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "0"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "0"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "1"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", 
                "1"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "0"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "0"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> True]]], 
        ")"}]}], "+", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       RowBox[{"(", 
        InterpretationBox[
         RowBox[{
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "1"}]},
             "Ket"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False]], 
          InterpretationBox[
           StyleBox[
            TemplateBox[{
              
              RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", 
                "1"}]},
             "Bra"],
            FontWeight->"Plain"],
           Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> True]]}],
         Wolfram`QuantumFramework`QuditName[
          Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False], 
          Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> True]]], 
        ")"}]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", 
              RowBox[{"2", ",", "2", ",", "2"}], "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
   SparseArray[
    Automatic, {8, 8}, 0, {
     1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {
       8}}}, {Rational[1, 8], Rational[1, 8], Rational[1, 8], Rational[1, 8], 
       Rational[1, 8], Rational[1, 8], Rational[1, 8], Rational[1, 8]}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1, {
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 2} -> 1, {
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 3} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.880204235498889*^9, 3.880204242164542*^9}},
 CellLabel->
  "Out[140]=",ExpressionUUID->"395540e4-f8bc-4e75-92bc-6a47b7da744c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<UniformMixture\>\"", ",", "3"}], "}"}], "]"}]], "Input",
 CellLabel->
  "In[141]:=",ExpressionUUID->"e6ffce3b-0752-42ef-b1a9-e1b28c81936b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumState",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {13., {0., 13.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = True), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggGIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vP1gEz/r
fNg0o/S9/S8WDjuuotf2189dapht/3rUnaPuHHXnqDtH3UmmOADwbrc+
                "], {{0, 0}, {8, 8}}, {0, 1}], Background -> 
               RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
               False, FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
               PlotRangeClipping -> True], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}},
              AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {13., {0., 13.}}], Appearance -> None, 
              BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDggGIQ22Z77JEJtm/t+xzzdh6aeNFeSVW4xln+vP1gEz/r
fNg0o/S9/S8WDjuuotf2189dapht/3rUnaPuHHXnqDtH3UmmOADwbrc+
                "], {{0, 0}, {8, 8}}, {0, 1}], Background -> 
               RGBColor[1, 1, 1, 0], DisplayFunction -> Identity, Frame -> 
               False, FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic}, PlotRange -> All, 
               PlotRangeClipping -> True], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               TagBox[
                
                TemplateBox[{"\"Mixed\"", "\" \"", "\"state\""}, 
                 "RowDefault"], "SummaryItem"], 
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Matrix\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Purity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.125`", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Von Neumann Entropy: \"", "SummaryItemAnnotation"],
                  "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "2.9999999999999996`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity"], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"2", ",", "2", ",", "2"}], "}"}], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"ParameterArity: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumState[
  SparseArray[
   Automatic, {8, 8}, 0, {
    1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {
      8}}}, {Rational[1, 8], Rational[1, 8], Rational[1, 8], Rational[1, 8], 
      Rational[1, 8], Rational[1, 8], Rational[1, 8], Rational[1, 8]}}], 
   Wolfram`QuantumFramework`QuantumBasis[<|
    "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 1} -> 1, {
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 2} -> 1, {
          
          Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
           False], 3} -> 1|>], "Output" -> 
     Wolfram`QuantumFramework`QuditBasis[<|{
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 1} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
          Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
        SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
     "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
     "ParameterSpec" -> {}|>]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.880204246509677*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"7a7cad8f-15f2-41fc-867b-94e2a755eb37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myBasis", "=", 
  RowBox[{"QuantumBasis", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Alice\>\"", ",", "\"\<Bob\>\""}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.880204254435143*^9, 3.8802042706570377`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"d991a930-60b2-45e9-bcd1-5098042d13e4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumBasis",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}, {0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}}, {{
                0.9830819177678848, 0.8576708995389304, 0.8515145793994304}, {
                0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[
               
               RasterBox[{{{0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}, {0.9830819177678848, 
                0.8576708995389304, 0.8515145793994304}}, {{
                0.9830819177678848, 0.8576708995389304, 0.8515145793994304}, {
                0.9137653193736024, 0.27452152355638126`, 
                0.24314158972109917`}}}, {{0, 0}, {2, 2}}, {0, 1}], {
               DisplayFunction -> Identity, PlotRange -> All, DisplayFunction -> 
                Identity, Background -> RGBColor[1, 1, 1, 0], DisplayFunction -> 
                Identity, Frame -> False, FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
                Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic}, PlotRangeClipping -> 
                True}], "None"], Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Picture: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Schr\[ODoubleDot]dinger\"", "SummaryItem"]}], 
               RowBox[{
                 TagBox["\"Rank: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimension: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Qudits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Element dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "2", "}"}], "SummaryItem"]}], ""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumBasis[<|
   "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
         Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
          False], 1} -> 1|>], "Output" -> 
    Wolfram`QuantumFramework`QuditBasis[<|{
         Wolfram`QuantumFramework`QuditName["Alice", "Dual" -> False], 1} -> 
       SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
         Wolfram`QuantumFramework`QuditName["Bob", "Dual" -> False], 1} -> 
       SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
    "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
    "ParameterSpec" -> {}|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.88020426501336*^9, 3.880204271031962*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"803ac11c-10c8-49eb-a16a-53c06201e179"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantumState", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], ",", "myBasis"}], "]"}]], "Input",
 CellChangeTimes->{{3.8802042723661327`*^9, 3.880204281650289*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"77b3f9ce-914c-46c1-a8f5-ee1739c7cc36"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   TooltipBox[
    StyleBox[
     RowBox[{
      RowBox[{"a", " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"\"Alice\""}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName["Alice", "Dual" -> False]]}], "+", 
      
      RowBox[{"b", " ", 
       InterpretationBox[
        StyleBox[
         TemplateBox[{
           RowBox[{"\"Bob\""}]},
          "Ket"],
         FontWeight->"Plain"],
        Wolfram`QuantumFramework`QuditName["Bob", "Dual" -> False]]}]}],
     ShowStringCharacters->False],
    TagBox[
     GridBox[{{"None"}, {
        TemplateBox[{"\"QuantumState: \"", 
          RowBox[{
            RowBox[{"{", "1", "}"}], "\[Rule]", 
            RowBox[{"{", "2", "}"}]}]}, "RowDefault"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
      "Column", 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
   Wolfram`QuantumFramework`QuantumState[
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {$CellContext`a, $CellContext`b}}], 
    Wolfram`QuantumFramework`QuantumBasis[<|
     "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
           
           Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
            False], 1} -> 1|>], "Output" -> 
      Wolfram`QuantumFramework`QuditBasis[<|{
           Wolfram`QuantumFramework`QuditName["Alice", "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
           Wolfram`QuantumFramework`QuditName["Bob", "Dual" -> False], 1} -> 
         SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
      "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> None, 
      "ParameterSpec" -> {}|>]]], TraditionalForm]], "Output",
 CellChangeTimes->{{3.8802042770061417`*^9, 3.8802042829698887`*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"785976fa-a456-4c53-9049-fae067b18d1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CloudPublish", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<WQF_Guide.nb\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.880204321907881*^9, 3.880204341215748*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"f66d3762-a052-4dda-8033-4634a42706da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"CloudObject", "[", 
   TemplateBox[{
    "\"https://www.wolframcloud.com/obj/nikm/WQF_Guide.nb\"", 
     "https://www.wolframcloud.com/obj/nikm/WQF_Guide.nb"},
    "HyperlinkURL"], "]"}],
  CloudObject["https://www.wolframcloud.com/obj/nikm/WQF_Guide.nb"],
  SelectWithContents->True]], "Output",
 CellChangeTimes->{{3.880204333271391*^9, 3.8802043432730827`*^9}},
 CellLabel->
  "Out[147]=",ExpressionUUID->"e17065e7-b078-4d7c-964f-146ebc15e32e"]
}, Open  ]]
},
WindowSize->{1440, 847},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1.25 Inherited,
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 21, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"397f992e-69b1-4bf4-be88-529f890f5080"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 226, 5, 37, "Input",ExpressionUUID->"23bc57c9-e021-4291-94b5-3d65148896c8"],
Cell[790, 27, 146, 3, 44, "Text",ExpressionUUID->"675d263b-4b27-46e9-be08-afaf94b4644e"],
Cell[939, 32, 294, 6, 37, "Input",ExpressionUUID->"4c8932e5-9c63-412e-8357-4f49d74ec75a"],
Cell[1236, 40, 215, 3, 37, "Input",ExpressionUUID->"d06eded8-d7db-416b-b3ab-1571da186742"],
Cell[CellGroupData[{
Cell[1476, 47, 221, 3, 37, "Input",ExpressionUUID->"501e1e0a-b961-4cb7-aead-e1a1c6ae2a50"],
Cell[1700, 52, 10385, 212, 93, "Output",ExpressionUUID->"58ee4b21-9393-4d08-a731-19ca174fede1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12122, 269, 263, 5, 37, "Input",ExpressionUUID->"615ac495-36c3-4fec-9f56-5f9b18793bb4"],
Cell[12388, 276, 2094, 56, 90, "Output",ExpressionUUID->"6c9a0537-d2bb-47ff-8132-d3392d57b5dc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14519, 337, 219, 3, 37, "Input",ExpressionUUID->"928a825d-5655-4f90-94be-f1cf1049bd2d"],
Cell[14741, 342, 2028, 52, 72, "Output",ExpressionUUID->"74710721-ea39-430f-be67-c00242413c3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16806, 399, 245, 4, 37, "Input",ExpressionUUID->"a18cc5af-2a1e-47ba-afae-31a56820e897"],
Cell[17054, 405, 2133, 55, 72, "Output",ExpressionUUID->"dd454699-b5f8-4a1e-aeae-06a26cf38577"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19224, 465, 318, 6, 37, "Input",ExpressionUUID->"275f1639-9af9-4b32-aa4a-f36487892844"],
Cell[19545, 473, 153, 2, 42, "Output",ExpressionUUID->"66feff97-d07a-4c20-a1ff-72b4b4e6badd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19735, 480, 222, 3, 37, "Input",ExpressionUUID->"47f438c2-7416-4bda-9ba6-369cc1b993d2"],
Cell[19960, 485, 11081, 225, 76, "Output",ExpressionUUID->"92fc202b-fad2-4cb0-beb3-772428e0c3ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31078, 715, 263, 5, 37, "Input",ExpressionUUID->"447bba47-fb3b-4e90-88d4-3fae15e43c72"],
Cell[31344, 722, 4745, 126, 90, "Output",ExpressionUUID->"f921c02b-16a4-491e-802d-6504a256b977"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36126, 853, 1793, 42, 42, "Input",ExpressionUUID->"ef5a859e-9979-4e39-a8ba-f123009bdb39"],
Cell[37922, 897, 2084, 54, 72, "Output",ExpressionUUID->"fb94f9d4-94c6-4eb6-8096-3700487063f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40043, 956, 1901, 44, 42, "Input",ExpressionUUID->"902802dd-d7db-42b3-bdc7-463e5e60ab42"],
Cell[41947, 1002, 154, 2, 42, "Output",ExpressionUUID->"f979b6b6-c62b-4b34-921a-7a4c6ed147e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42138, 1009, 262, 5, 37, "Input",ExpressionUUID->"c14ed831-2149-4aad-92f6-842beb6eac12"],
Cell[42403, 1016, 149, 2, 42, "Output",ExpressionUUID->"4ea0cde0-a517-413d-bc3b-54df1eba4872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42589, 1023, 3499, 81, 42, "Input",ExpressionUUID->"7b794c68-14c8-44a4-a016-d86080b6fc21"],
Cell[46091, 1106, 162, 3, 43, "Output",ExpressionUUID->"63639ae1-26f3-4137-8222-a43323b3cb75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46290, 1114, 266, 5, 37, "Input",ExpressionUUID->"f61693c6-4c33-4096-8df4-482605146451"],
Cell[46559, 1121, 733, 24, 65, "Output",ExpressionUUID->"2fa87f71-9ae7-4680-9a7c-02b42dbf9086"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47329, 1150, 267, 5, 37, "Input",ExpressionUUID->"676893d0-f3c5-4feb-8fb9-7e1332fc5c04"],
Cell[47599, 1157, 725, 22, 59, "Output",ExpressionUUID->"3edf9b74-4a6d-4603-b965-f5eebc69a0ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48361, 1184, 331, 8, 37, "Input",ExpressionUUID->"46eade2b-4bc9-425a-8552-5580d88c6742"],
Cell[48695, 1194, 5308, 133, 92, "Output",ExpressionUUID->"197b5019-b6f7-4c1f-8e14-d64e737548b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54040, 1332, 214, 3, 37, "Input",ExpressionUUID->"0373dbbd-5e3f-46c8-8121-80d2bc383050"],
Cell[54257, 1337, 3666, 91, 81, "Output",ExpressionUUID->"f4dcd6a3-d0ed-477e-9ecd-da5f46c78497"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57960, 1433, 369, 8, 37, "Input",ExpressionUUID->"ddd02443-e500-4cb1-bc3c-28ac5df864a3"],
Cell[58332, 1443, 2631, 64, 45, "Output",ExpressionUUID->"c75ee927-c058-4aaa-863a-62fb0acf1ef0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61000, 1512, 625, 16, 37, "Input",ExpressionUUID->"10d2095a-f412-45f8-b23e-351adddc4b17"],
Cell[61628, 1530, 618, 17, 59, "Output",ExpressionUUID->"30f80287-7bb7-4987-988d-d7b5c54479ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62283, 1552, 427, 10, 37, "Input",ExpressionUUID->"8094f20e-f5fb-4039-a42a-7842b6933e0f"],
Cell[62713, 1564, 703, 22, 47, "Output",ExpressionUUID->"ed1373b8-7ae4-4b90-aeeb-9f5b985a17f3"]
}, Open  ]],
Cell[63431, 1589, 1938, 46, 68, "Input",ExpressionUUID->"648f2881-de0f-4a2e-adbc-e7df98b5b93b"],
Cell[CellGroupData[{
Cell[65394, 1639, 254, 5, 37, "Input",ExpressionUUID->"1a70061c-25cd-45a6-8a0a-7a367fb49d6c"],
Cell[65651, 1646, 2106, 56, 90, "Output",ExpressionUUID->"ccc132e3-92c3-45f4-b8a5-9a5fe666da9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67794, 1707, 279, 5, 37, "Input",ExpressionUUID->"6a078076-07d4-4b21-b20e-0d8f412be026"],
Cell[68076, 1714, 3391, 82, 45, "Output",ExpressionUUID->"b1768bc2-a180-4d15-8aa4-3d538d56fa2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71504, 1801, 425, 9, 37, "Input",ExpressionUUID->"3e0dcc4c-6076-4d36-a454-e49442bfd054"],
Cell[71932, 1812, 2419, 62, 72, "Output",ExpressionUUID->"7a458725-5801-449d-9eb4-eec4b6f45f66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74388, 1879, 285, 6, 37, "Input",ExpressionUUID->"d5be708f-ff22-4fca-b040-afd26118f958"],
Cell[74676, 1887, 7299, 154, 79, "Output",ExpressionUUID->"6082161a-014d-4ae1-ae62-caf602107584"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82012, 2046, 425, 10, 37, "Input",ExpressionUUID->"5be1625a-70e1-49ec-bde4-038936b854ce"],
Cell[82440, 2058, 262, 6, 59, "Output",ExpressionUUID->"0bb3599d-52bf-45ff-b291-0480334c730c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82739, 2069, 492, 12, 41, "Input",ExpressionUUID->"1eb53e6e-0fd3-4240-9837-c5c2f059728b"],
Cell[83234, 2083, 173, 2, 42, "Output",ExpressionUUID->"f0919fa4-bf49-42f8-9bcb-ee0ea8ac7ffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83444, 2090, 210, 3, 37, "Input",ExpressionUUID->"8eac3b1a-af94-462c-953d-61a4cb309574"],
Cell[83657, 2095, 2729, 69, 66, "Output",ExpressionUUID->"49545521-868c-4865-8f74-eb67b485b6f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86423, 2169, 319, 6, 37, "Input",ExpressionUUID->"d88032ca-8b58-47f4-a45b-7a9c06eab8a0"],
Cell[86745, 2177, 7419, 157, 79, "Output",ExpressionUUID->"480fef6e-2090-497c-af14-0c116a47b078"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94201, 2339, 402, 10, 37, "Input",ExpressionUUID->"416f47c4-219c-4feb-84c3-f83e962354c8"],
Cell[94606, 2351, 370, 10, 56, "Output",ExpressionUUID->"508e7c85-7357-41c0-81fe-c02bd18f28fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95013, 2366, 199, 4, 37, "Input",ExpressionUUID->"c3359e99-8046-4a83-819f-04dd47a6e056"],
Cell[95215, 2372, 10369, 210, 93, "Output",ExpressionUUID->"911928f9-4a96-4b03-8049-804e458f59bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105621, 2587, 221, 3, 37, "Input",ExpressionUUID->"22d436c4-bcf4-4927-ab4d-701e9d961e1c"],
Cell[105845, 2592, 11323, 228, 93, "Output",ExpressionUUID->"96e4503d-aab8-425e-9309-8e16a2cea3f5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117205, 2825, 339, 8, 37, "Input",ExpressionUUID->"606b44a8-6282-4408-8def-cd68f632e9c0"],
Cell[117547, 2835, 35621, 713, 181, "Output",ExpressionUUID->"52c0ce6f-04aa-4f28-95e6-f61c91d4534f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153205, 3553, 362, 8, 37, "Input",ExpressionUUID->"7b18fbff-f2cb-4c6d-8d85-427f01d49fb4"],
Cell[153570, 3563, 3669, 77, 123, "Output",ExpressionUUID->"5e173311-92db-42dd-9d90-dba42e05795c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157276, 3645, 268, 5, 37, "Input",ExpressionUUID->"52f13635-f93f-444c-9d4d-2109e22879c3"],
Cell[157547, 3652, 1916, 65, 47, "Output",ExpressionUUID->"a0cfab65-057a-47c1-b3dd-fbc423b4c5fa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159500, 3722, 506, 11, 37, "Input",ExpressionUUID->"f3789dc2-7034-441d-bbac-664d4abf5cc3"],
Cell[160009, 3735, 2726, 69, 66, "Output",ExpressionUUID->"08d8f294-9369-4af7-b2de-b176d3eac2e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162772, 3809, 535, 11, 37, "Input",ExpressionUUID->"cbaa32e3-77ab-430c-ad36-ab9768a3d800"],
Cell[163310, 3822, 10875, 222, 93, "Output",ExpressionUUID->"75d6d215-a737-4bfd-bfd0-f8f905298561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174222, 4049, 268, 5, 37, "Input",ExpressionUUID->"b4820eb0-8ffa-4304-811b-b0ace3847dd5"],
Cell[174493, 4056, 235, 5, 42, "Output",ExpressionUUID->"c54dcacb-34f6-476d-85e5-769a5242dd6b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174765, 4066, 504, 11, 37, "Input",ExpressionUUID->"55a25004-9ece-4a1c-b923-f3c8d379334a"],
Cell[175272, 4079, 6408, 121, 136, "Output",ExpressionUUID->"41508a7f-579f-421a-8365-4d1fe7b58f0b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181717, 4205, 366, 8, 37, "Input",ExpressionUUID->"71621db4-abc0-47ac-8314-9955ed7ad15c"],
Cell[182086, 4215, 11509, 234, 130, "Output",ExpressionUUID->"ed54606e-494c-4595-b6cd-417afc38ad8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193632, 4454, 328, 7, 37, "Input",ExpressionUUID->"c9cb7e6f-478a-465c-9e01-5ed06982a3e4"],
Cell[193963, 4463, 7886, 144, 114, "Output",ExpressionUUID->"5ba784e2-6e60-4496-961a-1a6399248245"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201886, 4612, 400, 8, 37, "Input",ExpressionUUID->"f64d6b7b-3e91-44f3-b3c5-fe654f3c2192"],
Cell[202289, 4622, 9774, 179, 178, "Output",ExpressionUUID->"0d8604cf-a33b-4ac0-ae5d-55fbc66d1541"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212100, 4806, 459, 10, 37, "Input",ExpressionUUID->"57bd0572-9fa3-482c-89e7-4cae17ee6dc9"],
Cell[212562, 4818, 10722, 197, 178, "Output",ExpressionUUID->"ebbab385-b67b-4f78-8f51-e3b339aa7455"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223321, 5020, 483, 11, 37, "Input",ExpressionUUID->"9a615b77-4aef-48cb-ab9b-cb38178ebdea"],
Cell[223807, 5033, 6872, 145, 79, "Output",ExpressionUUID->"7618aa96-e410-4db2-9169-4c5916af8530"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230716, 5183, 436, 10, 37, "Input",ExpressionUUID->"41a926ba-3a89-4154-9cba-98604d551097"],
Cell[231155, 5195, 6870, 145, 79, "Output",ExpressionUUID->"97e5a186-7ab3-4286-96c3-cf9a419af432"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238062, 5345, 782, 20, 37, "Input",ExpressionUUID->"26457aca-4d44-429e-ba23-3261db6c4638"],
Cell[238847, 5367, 151, 2, 42, "Output",ExpressionUUID->"c4c858e6-6f3a-4fd0-a5a4-35482f60263f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239035, 5374, 419, 8, 37, "Input",ExpressionUUID->"594e2b1a-4f0d-4e3b-a306-347b20e08b62"],
Cell[239457, 5384, 13292, 241, 215, "Output",ExpressionUUID->"056456ac-a20f-4a81-a313-5751a7886afb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252786, 5630, 335, 7, 37, "Input",ExpressionUUID->"f51d473b-f40e-4f01-b77a-12526a2c64e3"],
Cell[253124, 5639, 2494, 59, 72, "Output",ExpressionUUID->"ae7ba513-c33e-4aa3-83fc-1542fd4efe85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255655, 5703, 224, 3, 37, "Input",ExpressionUUID->"be811de7-a5d0-4f0c-a4ab-44f307a1eadb"],
Cell[255882, 5708, 5878, 137, 45, "Output",ExpressionUUID->"780045eb-8da2-4e64-b63f-71dffe29968a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261797, 5850, 312, 7, 37, "Input",ExpressionUUID->"58ea2005-0cc7-4c04-aa89-d009d413ae9a"],
Cell[262112, 5859, 2702, 65, 72, "Output",ExpressionUUID->"19b145f7-7d09-4432-bbb6-b4c5d0266975"]
}, Open  ]],
Cell[CellGroupData[{
Cell[264851, 5929, 400, 9, 37, "Input",ExpressionUUID->"374a2332-10aa-4773-a8f4-ce086e524232"],
Cell[265254, 5940, 13991, 249, 233, "Output",ExpressionUUID->"10cabe06-1b3a-4939-85ae-d4e37e6c6139"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279282, 6194, 559, 13, 37, "Input",ExpressionUUID->"5e2ccd76-4009-4a02-85d0-42de0615213b"],
Cell[279844, 6209, 8570, 217, 309, "Output",ExpressionUUID->"03eb73e5-49de-41d1-a919-ffd0385ed387"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288451, 6431, 514, 12, 37, "Input",ExpressionUUID->"01221fca-692b-4c96-9cc4-052f08183c6c"],
Cell[288968, 6445, 15789, 284, 233, "Output",ExpressionUUID->"3acd0058-ef4c-4fa4-979e-9d5e90c43d05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[304794, 6734, 541, 12, 37, "Input",ExpressionUUID->"356c6767-6fa1-4d69-a7b7-061855c6dae9"],
Cell[305338, 6748, 16290, 293, 211, "Output",ExpressionUUID->"8e92a164-cf38-4f5a-a167-ff03aedf438b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321665, 7046, 549, 14, 37, "Input",ExpressionUUID->"d45a31d5-778d-4e11-8979-62072fb6c502"],
Cell[322217, 7062, 15866, 290, 233, "Output",ExpressionUUID->"65ec9d38-a25c-4c16-aa4d-dce08fc53a74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338120, 7357, 646, 17, 37, "Input",ExpressionUUID->"6edbde60-9645-4dfc-88d3-a0586aef4055"],
Cell[338769, 7376, 8910, 221, 314, "Output",ExpressionUUID->"ed3fcd40-25a6-4ed1-8bfb-514e74e7e8d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[347716, 7602, 750, 20, 37, "Input",ExpressionUUID->"5627a1c7-40b2-413d-8073-417e27964c9a"],
Cell[348469, 7624, 8942, 223, 312, "Output",ExpressionUUID->"364f846b-b106-427c-a7c0-1d5b33a4e716"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357448, 7852, 790, 21, 37, "Input",ExpressionUUID->"c032f260-d692-410f-95b3-c027a78d30ae"],
Cell[358241, 7875, 1723, 36, 428, "Output",ExpressionUUID->"14147316-52b0-4f66-a733-282b0ad4d16b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360001, 7916, 471, 13, 37, "Input",ExpressionUUID->"4ddc506c-1b3e-47bc-b8c3-cfea497d8a96"],
Cell[360475, 7931, 464, 11, 42, "Output",ExpressionUUID->"7880005b-9f08-4366-88f1-f00048b70454"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360976, 7947, 836, 27, 64, "Input",ExpressionUUID->"81d05123-afa3-46b8-bc8b-fd762afb141a"],
Cell[361815, 7976, 462, 11, 42, "Output",ExpressionUUID->"04d49b01-bae1-460a-82bd-2dededfde561"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362314, 7992, 411, 10, 37, "Input",ExpressionUUID->"783a6884-43be-4c47-82a6-2cb05db0add9"],
Cell[362728, 8004, 27948, 504, 93, "Output",ExpressionUUID->"26679b7d-4073-44d9-8c22-05ad85838764"]
}, Open  ]],
Cell[CellGroupData[{
Cell[390713, 8513, 365, 9, 37, "Input",ExpressionUUID->"828a9f54-1077-4a4d-acf2-de4bdf33856b"],
Cell[391081, 8524, 1942, 43, 264, "Output",ExpressionUUID->"3b20161f-6a63-41f3-b4ec-66fa7fe8c06e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393060, 8572, 203, 4, 37, "Input",ExpressionUUID->"63afffe7-1937-404c-a0b1-0c715f34b9fc"],
Cell[393266, 8578, 4754, 125, 72, "Output",ExpressionUUID->"326fcd05-8a16-4040-b595-9ce264b83092"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398057, 8708, 311, 6, 37, "Input",ExpressionUUID->"b79b4f17-a753-4c72-a4bc-2bb04c23acf1"],
Cell[398371, 8716, 7107, 194, 72, "Output",ExpressionUUID->"4c411384-fe76-49b8-b883-67ddca7fe334"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405515, 8915, 302, 7, 37, "Input",ExpressionUUID->"4bf1c3ae-f4f1-4439-b192-4e36ee53713c"],
Cell[405820, 8924, 7114, 194, 72, "Output",ExpressionUUID->"63049e58-bb27-481c-bf6e-35dee41ccd51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412971, 9123, 418, 9, 37, "Input",ExpressionUUID->"bd7f2342-024e-40ec-abb5-a51eb2dc253c"],
Cell[413392, 9134, 181, 3, 42, "Output",ExpressionUUID->"8b67f2b8-ac55-4d36-a7f6-fad5ce843157"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413610, 9142, 657, 16, 64, "Input",ExpressionUUID->"a1717ae6-7c31-4a3f-9d5b-8e6693bc6541"],
Cell[414270, 9160, 6753, 137, 178, "Output",ExpressionUUID->"db30e9d9-380b-457e-9271-ea8679bbd2ad"],
Cell[421026, 9299, 10605, 227, 76, "Output",ExpressionUUID->"3550f8a8-46c1-4ac0-bffa-36ef8fb33fad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431668, 9531, 579, 14, 37, "Input",ExpressionUUID->"52aac6bb-8e60-43d1-bc8c-9ba131dc47e5"],
Cell[432250, 9547, 695691, 13891, 133, "Output",ExpressionUUID->"c42a6791-b0f1-4dbb-be0d-252bb5fe5090"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1127978, 23443, 219, 4, 37, "Input",ExpressionUUID->"39b54443-b8f4-4147-bbd6-a6d4c87cbb0e"],
Cell[1128200, 23449, 278660, 6091, 561, "Output",ExpressionUUID->"56f3e925-17c1-4404-a8eb-9e64fb0223b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406897, 29545, 282, 6, 37, "Input",ExpressionUUID->"540c4e0d-b92d-4725-8dfd-34a5d5ad7ce5"],
Cell[1407182, 29553, 10379, 268, 60, "Output",ExpressionUUID->"395540e4-f8bc-4e75-92bc-6a47b7da744c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417598, 29826, 216, 5, 37, "Input",ExpressionUUID->"e6ffce3b-0752-42ef-b1a9-e1b28c81936b"],
Cell[1417817, 29833, 10924, 228, 173, "Output",ExpressionUUID->"7a7cad8f-15f2-41fc-867b-94e2a755eb37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1428778, 30066, 316, 7, 37, "Input",ExpressionUUID->"d991a930-60b2-45e9-bcd1-5098042d13e4"],
Cell[1429097, 30075, 9064, 182, 76, "Output",ExpressionUUID->"803ac11c-10c8-49eb-a16a-53c06201e179"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1438198, 30262, 294, 7, 37, "Input",ExpressionUUID->"77b3f9ce-914c-46c1-a8f5-ee1739c7cc36"],
Cell[1438495, 30271, 2042, 52, 45, "Output",ExpressionUUID->"785976fa-a456-4c53-9049-fae067b18d1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1440574, 30328, 300, 7, 37, "Input",ExpressionUUID->"f66d3762-a052-4dda-8033-4634a42706da"],
Cell[1440877, 30337, 492, 11, 46, "Output",ExpressionUUID->"e17065e7-b078-4d7c-964f-146ebc15e32e"]
}, Open  ]]
}
]
*)

