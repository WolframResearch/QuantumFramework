(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3230023,      59140]
NotebookOptionsPosition[   3198157,      58405]
NotebookOutlinePosition[   3198738,      58424]
CellTagsIndexPosition[   3198695,      58421]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["QPU Service Connection", "Title",
 CellChangeTimes->{{3.934638726677017*^9, 3.934638729367371*^9}, {
  3.940938193758276*^9, 3.940938197701689*^9}},
 CellID->563242627,ExpressionUUID->"a819cbfe-67e2-5e45-95db-a6e7753a7510"],

Cell[TextData[{
 "The ",
 ButtonBox["Wolfram Quantum Framework",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/quantum-computation-framework/"], None},
  ButtonNote->"https://www.wolfram.com/quantum-computation-framework/"],
 " is a toolkit for ",
 ButtonBox["Wolfram Language",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.wolfram.com/language/"], None},
  ButtonNote->"https://www.wolfram.com/language/"],
 " that offers quantum simulations. The Framework brings quantum \
experimentation to anyone and opens the door for more research and \
development of quantum algorithms. "
}], "Text",
 CellChangeTimes->{{3.940933713841095*^9, 3.940933770745137*^9}, {
   3.940933812829016*^9, 3.940933812829016*^9}, 3.9409382282237396`*^9},
 CellID->837691791,ExpressionUUID->"b42b0f5f-e178-df48-82c2-0497807012a6"],

Cell[CellGroupData[{

Cell[TextData[{
 "This can also be used to connect with external cloud services such as ",
 ButtonBox["IBM Quantum",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.ibm.com/quantum"], None},
  ButtonNote->"https://www.ibm.com/quantum"],
 " for an even closer look at what running on quantum hardware could be."
}], "Text",
 CellChangeTimes->{{3.940938230734064*^9, 3.9409382334984875`*^9}, {
  3.940959215130195*^9, 3.9409592159898663`*^9}},
 CellID->49816071,ExpressionUUID->"6c7d0b09-9efb-7e44-b491-2303b01a1e8f"],

Cell[BoxData[
 RowBox[{"<<", "Wolfram`QuantumFramework`"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.933099827063155*^9, 3.933099835615725*^9}, {
  3.937665232458446*^9, 3.937665236136028*^9}, {3.939822160699209*^9, 
  3.939822164710018*^9}, {3.940938242724407*^9, 3.940938242974388*^9}},
 CellLabel->"In[1]:=",
 CellID->727584899,ExpressionUUID->"d8398bea-2b63-6046-a083-2b56be253d83"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First time users", "Section",
 CellChangeTimes->{{3.923062812727927*^9, 3.923062833320769*^9}, 
   3.923062903675715*^9, {3.932124975499813*^9, 3.932124979707176*^9}, {
   3.9409383007263412`*^9, 3.940938307856655*^9}, {3.940938386326084*^9, 
   3.9409383980992184`*^9}},
 CellID->823812336,ExpressionUUID->"3ed3d4ff-fafa-0d4a-a26a-cde495d6731e"],

Cell["\<\
Connections to external services (such as quantum hardware access) can be \
utilized by establishing a service connection. \
\>", "Text",
 CellChangeTimes->{{3.940936909916411*^9, 3.940936934238985*^9}, 
   3.941023344230318*^9},
 CellID->411472949,ExpressionUUID->"373c6636-86bc-064a-a6e4-0c4bfbd15f31"],

Cell[CellGroupData[{

Cell["IBM-Quantum Connection", "Subsection",
 CellChangeTimes->{{3.9410233715341587`*^9, 3.941023392813315*^9}},
 CellID->83339160,ExpressionUUID->"66b20415-95b7-d840-b041-1b9e3901c646"],

Cell[CellGroupData[{

Cell[TextData[{
 "If you want to use an IBM backend, create an ",
 ButtonBox["IBM Quantum account",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://quantum.ibm.com/"], None},
  ButtonNote->"https://quantum.ibm.com/"],
 ". To create a new connection to IBMQ, you can use the following code:"
}], "Text",
 CellChangeTimes->{
  3.940937380805325*^9, {3.94102334777326*^9, 3.941023349140819*^9}},
 CellID->164825640,ExpressionUUID->"876cf592-7508-7443-a00d-ff06d0a1a309"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "=", 
  RowBox[{"ServiceConnect", "[", 
   RowBox[{"\"\<IBMQ\>\"", ",", "\"\<New\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907675995307843*^9, 3.907676008018921*^9}, {
  3.907936237974274*^9, 3.907936239695857*^9}, {3.913640177285644*^9, 
  3.913640196727107*^9}, {3.9136566577798357`*^9, 3.913656672841668*^9}, {
  3.94093738563089*^9, 3.940937392275877*^9}},
 CellLabel->"In[2]:=",
 CellID->157969475,ExpressionUUID->"7f291366-f779-f54e-94a8-8e0950a9f01d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
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
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
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
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd416fefc57295d58fdae00998b8667b"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {
                  64.5046875, {0.11249999999999982`, 7.10625}}], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
D86IpM+1+Ou9ib7Hpm56+A4jSZIkSZIkSZL0J/TPdMy5ydANPQdj3k0PzSaD
35szI5Fun4n0HfBeSTW0WPczwZyTHpIkSZIkSZIkSXqF/lmOOTcZuqHnYMxP
00KzyOD35czkUUVJP9SC3/+zIulnMvh7a+ZNhiRJkiRpZhn8d0u/v0qSJGlF
9Duw8TvGFeg5GPNJemgGGfyunB2JcPsMpHffOyWxWqz9WWCuSw//uSxJkiRJ
mlUG/73yiuQxdUmSJElvo9+Bjd8xrkDPwZhP08OfcVeXwe/J2cmDupLe1YLf
+zMj6c8y+Ltq1kuGJEmSJGk2Gfz3Sb+zSpIkaUX0O7DxO8YV6DkYM5oWqiqD
348rIl2pB7/z3ieJ0WL9zwDDpofv1pIkSZI0kwz+u+QVyWPqkiRJkt5GvwMb
v2NcgZ6DMUckQxVl8Lvh/mklLfh9PzuSnsvg76fZJy0kSZIkSTPI4L9DXpE8
pi5JkiTpbfQ7sPE7xhXoORhzVHqomgx+L66KdAV6z71LEuP2jkPfTbNfekiS
JEmSqsvgvz9ekTymLkmSJOlt9Duw8TvGFeg5GHNkeqiSDH4n3D2tIoPf8ysi
6bcW/J00e6eH/+5RSZIkSaosg//ueEXymLokSZKkt9HvwMbvGFeg52DM0emh
KjL4fbgy7YjSpBfo/b4qkv7Sgr+PxvxKC0mSJElSRRn8d8YrksfUJUmSJL2N
fgc2fse4Aj0HY85ID1WQwe+Ce6cVZPD7fVUk+d9Lb2omQ5IkSZJUTQb/fdHv
pJIkSVoR/Q5s/I5xBXoOxpyVHqJl8HtwddoBvUmP6L2+MtLubu8v9D005lV6
SJIkSZIqyeC/K16RPKYuSZIk6W30O7DxO8YV6DkYc2Z6iJTB74A7p9ll8Ht9
ZaRdtfB3Rs0c6SFJkiRJqiKD/554RfKYuiRJkqS30e/Axu8YV6DnYMzZ6SFK
Bj9/Im28Ounf0Pt8daQdteDvnjE/SQ/fdyRJkiSpggz+O+IVyWPqkiRJkt5G
vwMbv2NcgZ6DMVckQ4QMfvZE+gHdSTe3XaL3+epIu2nB3ztjPk0LSZIkSRIp
g/9ueEXymLokSZKkt9HvwMbvGFeg52DMVWmhq2Xwc3ffNKsW/B4TkXbSgr9z
xoymhSRJkiSJksF/L7wieUxdkiRJ0tvod2Djd4wr0HMw5sq00JUy+JmTkUb0
4HfYeyOdpwV/34w5Ki0kSZIkSYQM/jvhFclj6pIkSZLeRr8DG79jXIGegzFX
poeulMHPnEyOFqhtteD3l4q0gxb8XTPm6LSQJEmSJF0tg/8+eEXymLokSZKk
t9HvwMbvGFeg52DM1emhq2Tw86YjfeL2OUXvrndGOkcL/p4Zc1ZaSJIkSZKu
lMF/F7wieUxdkiRJ0ttyktDv6o/pBTp5Jy10Q++LMURa6AoZ/Kzp5GCH2k8L
fm/JSCtrwd8xY85OC0mSJEnSVTL474FXJI+pS5IkSVoO/a7uu/vc6H0xhorO
l8HPuUKkn+jB76z3RTpeC/5+GXNVWkiSJEmSrpDBfwe8InlMXZIkSdJy6Hd1
393nRu+L+3OtfBJ65lT65zXqTRn8nCskx2rURlrw+0pHWlEL/m4Zc3VaSJIk
SZLOlsF//7sieUxdkiRJ0nLod3Xf3edG74v7U0vGPn/PcEs7oDO9lsHPuEqk
d9B7WiHSalrw98oYKi0kSZIkSWfK4L/7XZE8pi5JkiRpOfS7uu/uc6P3xf2p
LWPt/87kflhTeiaDn3GV5FCT2kEGv6cVIq2kBX+njCHTQ5IkSZJ0pgz+u98V
yWPqkiRJkpZDv6v77j43el/cn3lkrPk7pHlcRXqQwc+3UtpImVoevZ9VIq2k
B3+njKHTQ5IkSZJ0lgz+e98VyWPqkiRJkpZDv6v77j43el/cnzll8LtyZHSO
DH62ldKH2tTKMvj9rBJpFbfPfPo+GVMlPSRJkiRJZ8jgv/NdkTymLkmSJGk5
9Lu67+5zo/fF/ZlbBr8z7l1dGfxsq6UN9Kl10XtZKdIKevB3yZhqyZAkSZIk
HS2D/77nd0pJkiSJQ7+r++4+N3pf3J819OB3ZzQ6XgY/12rpI4VqSRn8XlaK
NLsW/D0ypmpaSJIkSZKOlMF/17sieUxdkiRJ0nLod3Xf3edG74v7s44W/P64
e7Vk8HOtmPZ5pVoQvY/VIs2sBX+HjKmeFpIkSZKko2Tw3/OuSB5TlyRJkrQc
+l3dd/e50fvi/qynB79Hn0bHyuBnWjF9oFOtZebPy7MizYy+P8bMkB6SJEmS
pKNk8N/zrkgeU5ckSZK0HPpd3Xf3udH74v6sqQW/S+4fL4OfadW0j1vVKlrw
e1gx0qx68PfHmFnSQ5IkSZJ0hAz+O94VyWPqkiRJkpZDv6v77j43el/cn3W1
4Pfpk+g4Gfw8q6Z/XqsWcdsBeg8rRppRBn93jJktLSRJkiRJozL473dXJI+p
S5IkSVoO/a7uu/vc6H1xf9bWgt8pd5CTwc+zcvLTYjW9Fvz+VY00mxb8vTFm
1kiSJEmSxmTw3+2uSB5TlyRJkrQc+l3dd/e50fvi/qyvBb9XP0k/pYU9ZfDz
rB7t6fY5Q+9e1Uiz8T4b83l6SJIkSZJGZPDf7a5IHlOXJEmStBz6Xd1397nR
++L+7KEFv1s/STujhA1l8LOsnvywW82rBb93lSPNJIO/M8bMngxJkiRJ0qcy
+O91fneUJEmSOPS7uu/uc6P3xf3ZRwt+v9zDa2Xws5wh2ksPfucqR5pFC/6+
GLNKWkiSJEmSPpHBf6e7InlMXZIkSdJy6Hd1393nRu+L+7OXDH7H3o3GZfBz
fPx8qfZMfu7tJYPft1/p//o8vcCz3EeaRbW7Y8zM6SFJkiRJ+kQG/53uiuQx
dUmSJEnLod/VfXefG70v7s9+evB79k7aSeffSQY/x/tUfa77Z9Pa6D179hmX
BZ7Fu6DZZPB3xZjVkiFJkiRJ+qkM/vuc3xklSZIkDv2u7rv73Oh9cX/2RO+Z
u3iNDH6O97lHP4v7tp8Mfs9+pRd9rsd7KlXUgr8nxqwaSZIkSdLPZPDf5a5I
HlOXJEmStBz6Xd1397nR++L+7CmD37V3ojEZ/AxfzbPas93S3q9WE6L369Wu
ZYHneXVPpYp68PfEmFXTQ5IkSZL0Exn8d7krksfUJUmSJC2Hflf33X1u9L64
P/vqwe/bn9LOOvwmMvgZ3ucR/TyP6W83q9lk8Pv1as8qPduzeypVksHfEWNW
TwtJkiRJ0rsy+O9xVySPqUuSJElaDv2u7rv73Oh9cX/21YLfN/fxXBn8DO9T
/fluae9Vq8nQe/XdjmWBZ/runkqV0PfDmF0iSZIkSXpPBv8d7orkMXVJkiRJ
y6Hf1X13nxu9L+7P3nrwO/dd+nlH30IGP8P7PEM/kzu3vgx+r77br0rP9+qe
ShXc7g99P8zv3OaRT/In7cX/P/o85mvyb5OTJEmSJD2TwX+H83uiJEmSxKHf
1X13nxu9L+7P3lrwO/en6HMZ/Pz+NMtqz3hL+3O1mkQLfp/+tFtZ4Ln+dE8l
Wgv+buyc/Ne074Z0oBb+PmmFSJIkSZL+LIP//nZF8pi6JEmSpOXQ7+q+u8+N
3hf3R/TO/SnttJOvL4Of331eoZ/rMf2PzWoWt1nS+/SnvcoCz/bOPZVIle7y
Dsmo950go97n5erpb8xFkiRJknaXwX9/uyJ5TF2SJEnScuh3dd/d50bvi/uj
DH7v3MlzZPDzu88sz3lL+75aTaAFv0fv7FQWeLZ37qlEacHfix2SMc+ffS3q
fXaumvbOQCRJkiRpYz34725XJA/qS5IkSVoN/a7uu/vc6H1xf3RD7507eY4M
fn73+Q79bI/pf3he1XebIb1H7+xTFni+d++pRKh0l1dLxvy/F9jCHTkz/e1J
SJIkSdKe6O9tVyUP6kuSJElaDf2u7rv73Oh9cX9004Pfve+iz2Tws3t3jtWe
9Zb2h2dWXS34/Xl3l7LA8717T6WrteDvxIrJ90cwlQy+2xXT3h+BJEmSJG2H
/s52VfKgviRJkqTV0O/qvrvPjd4X90c3GfzufRd9JoOf3U/mSD+fu7eOHvzu
/Er/w7NmgWd051UVfR9WS/6o/Xll8F2vlP6j9iVJkiRpHy3472xXJQ9pTJIk
SVoP/a7uu/vc6H1xf3TTgt+979LOOvjiMvjZ3We25/UzcU4t+L2Zee+lKjL4
+7BK8kfNryOD736VtB81L0mSJEl7yOC/r12VPKQxSZIkaT30u7rv7nOj98X9
0S/07rmXx8vgZ3efd9DP+Olzq44e/M785LMrCzyn+66K6LuwQvqPW19Pi1p/
Lswad0mSJEmS/m6n75t5TGWSJEnScuh3dd/d50bvi/ujX3rw++deHiuDn919
Znxm928uGfy+zL7zUgUZ/F2YOT3890M+asHPZfa0H3YuSZIkSaujv6ddmTym
MkmSJGk59Lu67+5zo/fF/dEvGfz+vUo/79hLy+Bnd5930c858uxi0Xtyn3zz
mbPAs7rrqqYHfxdmTf+g7524W+6WJEmSJB0hg/+edmXyiNIkSZKkBdHv6r67
z43eF/dHv2Tw+/dd9HMZ/Nw+mWG15/azcQ4Z/J6ssO8SrQV/D2ZN+3Hbe2rB
z2rWtB+3LUmSJElror+fXZ08pDVJkiRpPfS7uu/uc6P3xf3RPXr/vot+LoOf
26czpJ/VHZwPvR/3yR88dxZ4XvdclfTg78FsuXXWPuh6Zy34uc2Y/kHXkiRJ
krSaDP772dXJA3qTJEmSVkS/q/vuPjd6X9wf3aP377vo5zL4uX06w2rPfkv/
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
Xga/H+/9MUrw85y5/N/KN0MfAD03upXRs6fTPno/dKrR+6DL5gnqFXqvdNk8
wWuj90O3EnrWdKrR+6BTjd4H3SzoOT2WXZ9WR6PPi+dHv6LP6hW+P3rL4Hfh
Xs6R4e5mlcHfTXets9Dne7SyaZoaRQZ/lkbrqjL42dLpvQx+P2TZOsCBbMHP
c6YyrrF/eo50K6NnT6d99H7oVKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3
QacavQ+6WdBzeiy7Pq2ORp8Xz49+RZ/VK3x/9JbB78K9nMfvhTll8HfTe6qz
0Od7tLa2cWoQ9DkasavK4GdLp/cy+P2QZesAB1GCn+UMbTHff0/0L/RM6VZG
z55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NONXofdLOg5/RY
dn1aHY0+L54f/Yo+q1f4/ugtg9+FezlPhnubUQZ/N923zpLBn/HRKg3zFK8E
f4ZGKxvmOboMfr50ei+D3493v10GP8uRy18HOwF6tnQro2dPp330fuhUo/dB
l80T1Cv0XumyeYLXRu+HbiX0rOlUo/dBpxq9D7pZ0HN6LLs+rY5GnxfPj35F
n9UrfH/0lsHvwr2cawu/E2aTwd9N76nOksGf8dHKhnmKd/T37hUqLQMdXAY/
Xzq9l8HvhyxbBzgIeo6jlg0znQU9Y7qV0bOn0z56P3Sq0fugy+YJ6hV6r3TZ
PMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vnR7+iz+oVvj96y+B3
4V7OVeK4fW3nfvRlZfB303uqM9FnfMQ0L/rsjNiVZfDzpdN7Gfx+yLJ1gAPI
4Oc4Wltc+38PcI+eNd3K6NnTaR+9HzrV6H3QZfME9Qq9V7psnuC10fuhWwk9
azrV6H3QqUbvg24W9Jwey65Pq6PR58Xzo1/RZ/UK3x+9ZfC7cC/n2+KYfZWT
P/eqMvi76T3VmY76GXWlsmWgwmTwZ2e0tpaBTiCDnzGd3svg90OWrQMcAD3D
0cqmac6HnjfdyujZ02kfvR861eh90GXzBPUKvVe6bJ7gtdH7oVsJPWs61eh9
0KlG74NuFvScHsuuT6uj0efF86Nf0Wf1Ct8fvWXwu3Av5yvRvqvt7A+9sAz+
bnpPdaYM/pyPmOZDn5kRy5aBTiCDnzGd3svg9+P9/10JfoYjVVqGOSl65nQr
o2dPp330fuhUo/dBl80T1Cv0XumyeYLXRu+HbiX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPj35Fn9UrfH/0lsHvwr0wtmjbVTn9E68rg7+b3lOdqQR/zkes
/D5SATL4MzNiV5fBz5hO72Xw+yHL1gHCMvgZjlJpmuS86LnTrYyePZ320fuh
U43eB102T1Cv0Huly+YJXhu9H7qV0LOmU43eB51q9D7oZkHP6bHs+rQ6Gn1e
PD/6FX1Wr/D90VsGvwv3wvl1TxvxYReWwd9N76nORp/zEfNn71zo8zJqV5fB
z5hO72Xw+yHL1gHC6PmNUmmc48zo2dOtjJ49nfbR+6FTjd4HXTZPUK/Qe6XL
5gleG70fupXQs6ZTjd4HnWr0PuhmQc/psez6tDoafV48P/oVfVav8P3RWwa/
C/fCyXBPM8jg76b719ky+LM+YuX3kepEGfxZGbH8faTTyODnTKf3Mvj9+DPg
NyX4+Y1QaRvj9Oj5062Mnj2d9tH7oVON3gddNk9Qr9B7pcvmCV4bvR+6ldCz
plON3gedavQ+6GZBz+mx7Pq0Ohp9Xjw/+hV9Vq/w/dFbBr8L98LyO2B8Gfzd
9J7qbCX4sz5qGh99RkatNMx0Fhn8nOn0Xga/H7JsHSAog58f3dY6xAugd0C3
Mnr2dNpH74dONXofdNk8Qb1C75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2n
x7Lr0+po9Hnx/OhX9Fm9wvdHbxn8LtwLK8MdjS6Dv5ueARHosz5q2TBT9ZfB
n5FRW0EGP2c6vZfB74csWwcIomc3QuJ3QLcyevZ02kfvh041eh902TxBvULv
lS6bJ3ht9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86Ff0Wb3C90dv
Gfwu3AvPn/9jy+DvpvdUhAz+vI+axlSCPxujlj9PdS4Z/Kzp9F4Gvx9/Dnyv
BD87umyc4VXQe6BbGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvQr+qx6hv+Wwe/jPjFKuJ+RZfB303Mg
Qgn+vI/a9vtY1dFtL/TZGLXy+1inksHPmi4bZ3hlGfx+PBvfy+BnR6d/0Hug
Wxk9ezrto/dDpxq9D7psnqBeofdKt7WP8NLo/dCthJ41nWr0PuhUo/dBNwt6
To9l16fV0ejz4vnRr+iz6hn+Wwa/j/vE2WJ/NwX7ZMrg76b3VBT6vI9c+X2s
6qAEfyZGbiX0rOmyeYLXlcHvx7PxvS342bm3MdC7oFsZPXs67aP3Q6cavQ+6
bJ6gXqH3OkJ6j94N3UroWdOpRu+DTjV6H3SzoOf0WHZ9Wh2NPi+eH/2KPque
4b9l8Pu4T5wS7/eycR9L4T3V2jL4Mz9yGgd9FkYufx/rlOh502XzBK8rg9+P
Z+N79NzoSvMEr4PeBd3K6NnTaR+9HzrV6H3QZfME9coW/G7p9B69G7qV0LOm
U43eB51q9D7oZkHP6bHs+rQ6Gn1ePD/6RQn+rHqG/5bB7+M+sbZ4vZcCfiZ5
T7W2EvyZH7nt58nqSO++P+2fys+TnRM9b7psnuB1ZfD78Wx8j54bnf5D74Ju
ZfTs6bSP3g+davQ+6LJ5gnolg98tnd6jd0O3EnrWdKrR+6BTjd4H3SzoOT2W
XZ9WR6PPi+dHv8jgz6pn+G8Z/D7uE6vE80428gPpf2Twd9N7KhJ95kev/DxZ
HSGDPwOjtxp63nRb+wgvK4PfD1m2DhCQwc/NnY2D3gfdyujZ02kfvR861eh9
0GXzBPVKBr9butI4w6sqwe+GbiX0rOlUo/dBpxq9D7pZ0HN6LLs+rY5GnxfP
j36RwZ/Vd5VuTz2fDH4f94mX4X0ZTQZ/N72nImXw5370yo+zVZsS/O5HL3+c
7czomY+QXqP3QpfNEzxfBj83dzYOeh90K6NnT6d99H7oVKP3QZfNE9QrGfxu
6bJxhleVwe+GbiX0rOlUo/dBpxq9D7pZ0HN6LLs+rY5GnxfPj36RwZ/V2b87
zpDB78PdjOfffWz0B9H/yODvpvdUNPrcj54/rxn03mdoRfTMR0iv0Xuhy+YJ
ni+DnxtZaR3gxdD7oFsZPXs67aP3Q6cavQ+6bJ6gXsngd0uXjTO8qgx+N3Qr
oWdNpxq9DzrV6H3QzYKe02PZ9Wl1NPq8eH70iwz+rM7+3XGGDH4f7mY8Ge5j
JBn83fSeirYFf/ZHb/t5uvqFZ9Iz+Q499xHK1iFeUAl+L3TZOEMCPTM61eh9
0K2Mnj2d9tH7oVON3gddNk9Qr2Twu6XbWod4Ube50LuhWwk9azrV6H3QqUbv
g24W9Jwey65Pq6PR58Xzo19k8Gd19u+OM2Tw+3A3Yyr0B9D/yeDvpvdUtBL8
2Z+h7cf56ju3OdO7nqHy43xnR899hLJ1iBeUwe+FLhtnSKBnRqcavQ+6ldGz
p9M+ej90qtH7oMvmCeqVDH63I6Rn9E5GaCX0rOlUo/dBpxq9D7pZ0HN6LLs+
rY5GnxfPj36RwZ/VV20dn3lGGfxO7pP0LIO/m95TjYA++7O0/TpgfeQ2X3rH
s7Qqeu4jtDVP8XpuM6H3QpetQwTQM6NTjd4H3cro2dNpH70fOtXofdBl8wT1
Sga/2xEqbWO8nBL8TkZoJfSs6VSj90GnGr0PulnQc3osuz6tjkafF8+PfkGf
U8/vZzL4ndwn6VkGfze9pxpBBn/+Z2n7bcT6w22u9G5nKX8b8SV4Tv5JNXof
I5StQwTQM6NTjd4H3cro2dNpH70fOtXofdBl8wT1Sga/2xHKtjFeTga/kxFa
CT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOjX9Dn1PP7mQx+J/dJepbB303v
qUZBn/+Z2n6csV67zZPe6UytLIOf/wiVtjFeSga/jxHKtjGeLoOfGZ1q9D7o
VkbPnk776P3QqUbvgy6bJ6h36N2O0NY8xWuh9zFKK6FnTacavQ861eh90M2C
ntNj2fVpdTT6vHh+9Av6nL6rdHzmGWXwO7lP0rMM/m56TzWKLfg7MFPbb2PW
A8+d5+4bGfwORijbxngptztB72OEsnGOZ8vgZ0an/5Tg90G3Mnr2dNpH74dO
NXofdNk8Qb1D73aU9I8MfhejtBJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R9/K4M/p7N8bZ8ngd+J+pH0Z/N30nmoUJfg7MFvbL4PW/7nNj97hbJVfBn0h
GfwORkl+b92XTZM8XwY/Mzr9J4PfB93K6NnTaR+9HzrV6H3QZfME9Q6921HK
xjlexRb8LkZpJfSs6VSj90GnGr0PulnQc3osuz6tjkafF8+PvpXBn9PZvzfO
ksHvxP1I+zL4u+k91Ui24O/BbN1mVn6Y9cpK8Hubse2HWV9NBr+HUSpNk7yG
252g9zBK2TbK02XwM6PTfzL4fdCtjJ49nfbR+6FTjd4HXTZPUO/Qux2lrXWQ
F1CC38NIrYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L50be24M+pZ/czGfxe
7pP0LIO/m95TjaQEfw9mrXw97TWV4Hc1a+XraV9PBr+HUdraRjm9EvwORipb
hgnI4GdGp/9k8PugWxk9ezrto/dDpxq9D7psnqDeoXc7Uqvbgt/BSK2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dG36DPq2f1cBr+X+yQ9y+DvpvdUo9mC
vwuztv0w75V4tjxbR6B3MVIro2c/Wtk0zfNl8DOj038y+H3QrYyePZ320fuh
U43eB102T1DvZPD7HaVsmuTcMvj5j9ZK6FnTqUbvg041eh90s6Dn9Fh2fVod
jT4vnh99I4M/o7N/Z5wpg9+LO5L2ZfB303uq0ZTg78LMbeF/F/JRCX4vs1e+
nPmV0bsYqWwb5bS24Gc/WtkyUEAGPzM6/YfexQitjJ49nfbR+6FTjd4HXTZP
UO9k8PsdqRWV4Oc+YiuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvSNDP6M
zv6dcaYMfi/uSNqXwd9N76lGRN+FK7R9PfVrus2B3sUV0n/oXYzWakrwMx+x
/H2kiAx+ZnT6D72LEVoZPXs67aP3Q6cavQ+6bJ6g3sng9ztS2TLMSW3Bz33E
VkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86Bv0+XzX1vOhJ5bB7+Y+Sc8y
+LvpPdWIMvj7cJXyq8lfRwY/+6uUX03++rbgdzJS2TTNuZTg5z1q+fNUGRn8
zOj0jxL8LkZoZfTs6bSP3g+dahn8TsiydYB6K4Pf72itZAt+3qO2EnrWdKrR
+6BTjd4H3SzoOT2WXZ9WR6PPi+dHnyrBn0/P7Xcy+N3cJ+lZBn83vaca1Rb8
nbhS+dX055XBz/pKbV9Nfw0Z/F5GqzTMcya3+0DPetTy97EiMviZ0ekfGfwu
Rmhl9OzptI/eD51qGfxOyLJ1gNpF73e0smma88jgZz1yK6FnTacavQ861eh9
0M2CntNj2fVpdTT6vHh+9Kkt+PM5+/fF2TL43bgnaV8Gfze9pxpVCf5OXLH8
fAVTyeBne8XK5ytYRga/l9HaWgY6idsz0nMeufx5sowMfmZ0pXGGV0HvYZRW
Rs+eTvvo/dCplsHvhCxbB6hd9H5HrLQMdAIl+BmP3kroWdOpRu+DTjV6H3Sz
oOf0WHZ9Wh2NPi+eH32KPptX+L44Wwa/G/ck7cvg76b3VCPbgr8XVy1j/j+D
L+EZ6dn28SbWksHvZsTy95EO73YX6PmOXv46XEgGPzO6bJzhFZTg9zBKK6Nn
T6d99H7oVMvgd0KWrQPULnq/I7Y1TXRsGfx8Z2gl9KzpVKP3QacavQ+6WdBz
eiy7Pq2ORp8Xz48+kcGfTc/s9zL4/dwn6VkGfze9pxpZCf5erFDGPO+Qlhjv
Z+dVK58sZFH0bkatNMx0RCX4mc5S/jRhTgY/M7psnOEVbMHvYZRWRs+eTvvo
/dCplsHvhCxbB6hdGfyOR2xrmOmobs9Ez3WWVkLPmk41eh90qtH7oJsFPafH
suvT6mj0efH86BP0udyr9Hvs6WXw+7lP0rMM/m56TzW6Lfi7sVIZ4/07QcZ4
Py+v3vbBXlZG72fkyu9jHUoJfpYzlb8MGZTBz2yEVlaCn/9IrYyePZ320fuh
Uy2D3wlZtg5QuzL4HY/a9vtYh3N7FnqeM7USetZ0qtH7oFON3gfdLOg5PZZd
n1ZHo8+L50d/yeDP5RW+KwgZ/H7clbQvg7+b3lONrgR/N1Yu49z/HmkJ3xMd
obK3JPl3PX9Ufp7sGNzv9+UvgwZl8DMbodI2xqltwc9/pFZGz55O++j90KmW
we+ELFsHqF0Z/I5Hrvw62EGU4Gc4YyuhZ02nGr0POtXofdDNgp7TY9n1aXU0
+rx4fvQX+kx6Xn+Xwe/oPknPMvi76T3VDDL4+2H/tcV/73be94lX/3fbAM9k
9X61L4Pf0+iVH2dLKsHPbdby62mzMviZjVC2jXFaJfjZj9bK6NnTaR+9Hzo9
o3dClu3j0x/oHY/e9vtoUbfPTc9u1lZCz5pONXofdKrR+6CbBT2nx7Lr0+po
9Hnx/GjPFvyZ3Kt0e/JryOB3dJ+kZxn83fSeahb0/TBbJf0tg9/TDJXfxnu6
EuP/u+/o5Zczp5XgZzZKqynBz3zEVkbPnk776P3Q6Rm9E7JsH5/+QO94hraf
p3u+DH5es7cSetZ0qtH7oFON3gfdLOg5PZZdn1ZHo8+L50fvlODP41W+JygZ
/I7cl7Qvg7+b3lPNIoO/I2ZXL0Ofonc1S9uvAz5BCd8XPar8avJjoGc2Stk4
x9lswc98xFZGz55O++j90OkZvROybB+f/rAFv+cZus2p/DbiU2TwM7pKK6Fn
TacavQ861eh90M2CntNj2fVpdTT6vHh+9M4W/Hn0rLbJ4Pd0n6RnGfzd9J5q
JqP/fmI2c1voG/S+Zqv8NOU+Svh9cnT5xfxHQc9spFaxBT/rUVsZPXs67aP3
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd416fefc57295d58fdae00998b8667b"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject["IBMQ", "ID" -> "connection-bd416fefc57295d58fdae00998b8667b"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940937498731636*^9, 3.940938843258087*^9},
 CellLabel->"Out[2]=",
 CellID->85962062,ExpressionUUID->"fec3ba20-3164-ef43-a471-181fdde2a7d1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The first time you attempt to connect to a service that requires an API \
token, you will see the following window appear:\
\>", "Text",
 CellChangeTimes->{{3.9409374120462055`*^9, 3.9409374178886814`*^9}},
 CellID->553629132,ExpressionUUID->"528b0439-96a1-c34a-ae00-0f08b8cd6e7e"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQd0FUe2733Xu++9735rve/NnfHMOIwBmywQSEKJJBA555xzztFgcjYY
TM4mGUzGJuecFMkiCYksgVAEBJJA0v7qv/vUUZ+jo4QDZrx/rOIcdaiuqu7T
9e+9d1V/2XVQ057/4z/+4z+G/Zf6r2mXr6oMHdpldLP/Vn+0GDisT6+BPbrX
GTi8R68eQ8t2/U+18H+qbWur9D/V94SEOJIkSZIkSZIkSfqzpxcvEujJk0i6
dOnyey+LJEmSJEmSJEnSHyU9fx5PISEh770ckiRJkiRJkiRJf6QUHx+b/TZK
QyU8T6CEF5aEv3/lMkCn6fRb1NGa9/P3396SJEmSJEmSpA84QVMkvqT4uBiK
jXhIMffDKebhPYp79pSev3xOCUi/IH+tWWJV/s9UnlFRT/gzTv0N398v1Uo6
/5iYZ5w3UnR0FK9D/u+9fSVJcpBwbSYlvaLk5Nf8+fp14m/23PBnSWhTtOOr
Vy/5O54Jze2s1+n15n3R9omJL9Q2WP/C4bnAMuyLfF6q++Lz55mPj2OZjyfn
VJKkP35yaD9Sv/F4pSsij+yn+9PH0/2B3ehup6Z0r2dbuj9uGD38cTXF3AtX
+unFOx0T9wbolesh1yg4KID8/M7RuXNnyN/vPAUHB9GdO7dZJ73rPQT7PX78
kK5cuUSBgf50/vxZzj8gwI8uX75IDx/et2z3/ttfkiQk3Q/fvRtG+/btoQ0b
1tPGjT/SqVMn6enTSF6Xo633A0ioJzRETs8oud0uu4T2Qrs9evSAzpw5TWfP
nuHv0DphYaG0Z89u2r59G504cYzX+an7T1jYbT62fkaLjY2hS5cu0LFjRyhI
3avwDKfPBRLKiHuNv/95On78KN24cZ2X6+cz6CYca//+fbR+/Q98To8fP0aR
kY953fs+H5IkScp9gm0o5kE43Z0xnh53aUHPurei2D4dKHZAF4rr14mie7Wl
J12a090hPSny/Gm2MeUlf9x37t+/x5ro8qWL6n4SQrdv36TQ0Fv8ef36Nb4P
QddERT3N0/1R6ynoLr/z5+jq1ct08+Z1zjs09DbdunWDlwWoe9m1a1cs+kie
4yS9v6RtGbh2d+78mVq1akVVqlShChUqUMWKFalatWo0etQouq2uXdgd8Nxg
3j8737T98uy2y01+uVmf1TaoJ8oPvTdmzBhavnwZPXhwj20q5jphOyw7d+4s
TZgwnhYvXsiaEXYX83a5KQdsx0TpdPToEapbty41bNiAtRBYsWI5t2/lyr5U
o0YNqlWrJtWvX58aNWpEs2bN5GO+fZvC2mfEiOFUtmxZdW5aqvKf4OUoCxK+
b9r0IzVo0IAqVfKh7+bMZg2FOqAumzdvptatW5Ovr6/1nFavXp16dO9Op1Ve
opEkSfpAkrpPx0Y+orCxwyiyQ1OK69+ZYlWKUbootm8nilEpFt/VsugebSis
Wyt64ndWaarc2ZFwL7t//y6dVc9y0EHQQzdvXVca5gbrGCRoGOgZ2HmgoeAT
y40dyaqNVL7YD3kj3bppm//t27fUMW5SYIA/ayXs9+/wXC7pw0y49tD3Hz58
kOrVq6v668rUtGlT+uqrkdwv16tXj8qWK0cDBw6gO3dCrRoJdgsk9MVI+G5v
Y9K/CSyHBsN2+m/zNtpeguXIG7rCbLvRGg59eWxsNEU9jaQXFnuXuS7mPGAf
Rr6w1ej1b1KSaMP6H8jd3YO6dOnCv8fU1DecJ2/DNpk4evsmhbZu2aw0iTe1
a9uOrl29Qmlpb63b4RiO6m7ftlofHT58iDVQnTq16fjxI6yPli5dTOVUuzZt
2oTGjR9HM6bPoM6dO6ntqpOPjw+tXLGCUpX2efIkggYNGkjly5fn5YsWLrTq
WRw3KiqSRo36SukeH6WPKtGsmTO57kRpShttUsesw/sZ5/QrPo/QYdBKbdu0
4ftQypskuQdJkvQHT/CXPdywiiI7NWNtZOiijkoXdbR+WpNFI937ejDFqftl
Qi7sPLi/wccF+w60y42bIWw/gk3a+Ayhm0iw+Sgdc/HiBYudJ2d9hHvW48cP
2M7NuuiWoYl0nvoYWoPdUpoJZbl37y7f5+T+JOn3TtARsDPA1zJu3DhycytD
HTt2oJMnj1GK0hLYZsuWTVStWlW2O6xZvYp1Aq51/C7mzfuOhg0bymnx4kV8
bUM/QSsEBQXStClT6fvvV9Lp06eUHlhCgwcPom+/naV+V8Gcf0TEI/b5TJ40
iQ4e2Ef79+/lvh7a7Kefdih9gWcTQ/OgjPANjRw5UuUzmGbO/IYCAwPUupdW
P1Z09FO2gY0Z8zWXafr0aXTw4H5eHxcXy3n26N6DbWLNmjVluxj8TtqXbviz
omnv3j3Uu3dvtrM0adKEvlLH3LtnN+sdlBvPNQsWzOdjDB82jBYuWMD3FNTd
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
PDZiXkUbSfqjJt3fm7VNdtv+nmMv9btIfuk2v1Y7fSjjTs3v29VaKArvR1Fa
UnSRJEkfWIItP/ElvzskOvSG0kMX6dn1qxTz8B4lPE/ItU8tq6TnktXPmvDD
41kQz8s5vXcyN0k/6+G5DXZ/zBeM7/pZ7723ryRJkv606de4x0mSJOk9J+gk
PMfClgwbNrTFr/i7Nr+H+7e4Z/yWeUuSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEl5SY7G2EuSJEmSJEmSJP2Z05MnkXlLT/O4veT1x8xLkiRJkn6P9Ee9B0pe
klcOecXGxv7yFPcr5CF5SV6S16+Tj+T1/vL6ta4HSZIkvfckCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCMKHS/qbN0Rpae+7GIIgCIIgCH8I0pKS
6MGsSfQi2M9YkJ7+fgskCIIgCILwnkk4d5ICnD+l0IFd+e90sSMJgiAIgvAn
JjXxBd3o3Iz8i35EQe5fUsye7cYKsSEJgiAIgvDvhtI3r0Jv0nP4zFJTHW+T
lkZPf1xF/k7/pEC3/BRQ4mMKaVadUl8kwIjkcJc3UVEUd+wApb1J+Q0LLwiC
IAiC8NsQd3QfBXl8QXcGd6O4E4coLTnJZn1K5GO6UtOTAkp9qvRRAQoo/RkF
On9GEcu+MzYw+dmS7odTxNI5dLmGB93q1oLS36aKH04QBEEQhA+OlxcDKMiz
IPk7/UNpn39RSKvaFLV5Db2Jfqr0zVt6MHMC+Rf7iALLfEFBrvko0DU/BTh/
QherlaHkB3dZ/zwPPE93xwyiiz7OFFDs7+Rf/B8UPmYg5y/6SBAEQRCED42k
8FC6ULEkBSptFOii9E/JT9iHdrWhD90dPZAuVixhrGNtlE9ppPxqu8/Vss/o
ZvcWFDqgEwUp7RTg9LFa9rlhX1J5PJwzhfMXfSQIgiAIwofGm9houlTd3dA1
rgWsOiiw1Gesk4KUFgrSuog/DRsS/23ZBrpIrw8o9S8KKPkxPVmz1DjAn0Qf
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
tImOF4a/x9u7rGXeRDelZVvSqlXf0+w5s3m+Kp7HxxLbrOff1GXl+OyS2dmP
LPHZjvxrBYz47MFDstBHxQz7EeY618AGg3m29fybtWvXoqXLlnJd9u7Zy7FX
sFdibJ257X74YR2Xs0wZNy4T5ljAXEWY56k9z+OeYQMCiB2Cbkb5YAPs07cv
bdu+3ZgnyzKXOM5PnTp12DfpaplTCeMMkA/G+/PclU7Fee5M89h/lLWy+NcE
QRB+FTDHY/Ljh/Qi8Bw92bCSwkb04XfLXvJxZruS4QfLx3ahyzU86WaXpobG
cctvE29t1kaBJr1k1kr4vKC0kJFPM47ljj28h17fCqHU5/G5LjN8MxiHxnGz
qv/B8zTGYtu/AwQxL26qX9YxRnq+YXN8CPrMtWvWsq5AnwW7VNfOXahVy1a8
D/p89Hk3LD4Mva8eLwZbRF3Vlx3Yf8CaJ/QR4msd2Y8wvh9j0VB2/Y4U+/5r
//79ljHarqwjMCckdIJ7GXfWa9Bd6Fu1LtPlQf+NOmAOIJBJHxUrRjVq1sgU
t2s/fs1eHxn7H+P3kWD8HDShnmsSdhPM4Yjv0JHwWWm9ArsGfEHYFtvouZ+x
D8oPGxree4L66nOhy6rjouE/so/r0fYj2LTgl7PVR6vZ9sb6aJDSR68z9FHK
mxSah/ijosXYPqPtRzpflANtq8uHsiIGDJ+Yawnj4hz5cTE3BMqKa43r6GzU
Ed+hc9uo833fMvdjbGycaqMRvBzzX2IbXCt4v+8uy7g4lGfr1i1sq8MzgC4L
xvS7Wd4DDHvoxk0bbdrt9CmljypVZnsofK25jRUTBEEQcgfGsr0OvUW3erZh
XRSkbUWW+Y2CXO3fV5thSzLHY5s1E/x3F8oV5fessR/tF4D+A7Gx8IWgD9Fx
JPb9AHw8sLdo3aP9FPZjr5Af+uSWLVtw36/7fYzlHj9+fKZ3iwD4WTA+H3NV
Ynv46TTQR7APVfGtkmlcO+bqwXwBsDVAOzgqN/Jes2a1Me8S5o9WfSPmX4IN
C7YcaBks03FPuq7QieZxbWZ9hDl7UE7EYOlxfhm+yER+rxpsXhgTD/9aWlp6
pna6ExZGk9Wx0ZY4jn5HBj7RzrCB2L+fFm2LcVWtlM5x93Dnd6/wu8eUNujb
r5/VPmbWYygrdAN0Vfv27a0+K61j4M/EMdEGGFNonv8IcU6Iy8G7SWAfMvvD
oCMwt7VzqZKsr8aOHZfp2Ij/gUZEHJKH5R0xeN9blSpVafKUKRnzPZq0OGx7
mAMdY+2N97wZdYSWRXsi7hyb6vKHhd3hud0xhyOuX4zhQ3m13U+fF1w7nbt0
sZZD542xcjrePd3y/kFw9uwZnvcLmr6FuhYwLs/R9SUIgiC8O7ArhQ7oYpkr
0t5Xls/m70Ab/5q9TjI0UoDzJ0ofFaMXQZY5qH/h+59g44iOfsb2GP2ekUx1
UMeAXQnP+PBr5TRPHuwd8HFgzBDekYr3qWXXt6DvDfAP4LhcPfZK91fRz6Ip
NiaWbRZmUAZdJvO8z/ZgO7yrBGOVMFb+esh17t+RP+qrY2HM22OuJn5vveUd
W/btpdvBfv4inSfGyOl38WYF1qFdYBfbu3cfv/8E/bCeozqrfVEmzImA+iBO
BprTXH77sqIeSGgr+3OAvLAO9cF683nFOcRyrEcsjz1oc71el9kenD/EDJ0/
d45tSvDdQoNldy2g3jge9BXi1HD9oI6O2lrXAToa7Yfzi/0cXQ/YH/N+w68H
DY93kGTXbji/qB+uhdy+Q1gQBEHIPXiH2vVWtSmg5KdW+5HtO2vNWii/jQ/N
1oZk0U+lPuV1sYd2GwdIlzl9BUEQBEH4sEh99ZIu1/IyYqltYrEt4/9tdJHZ
16Y+EdftYquR8L412JAwlwAj7zwQBEEQBOEDIyXyMV3yLU0BlrH6rI+cPzPe
PeJR0GRTshuzr7RTsFpvxHR/YrybDfuXMt5xG7HUeIeXvENcEARBEIQPjVc3
rlFw+eKGPnL+hAKcPqarDXwoYvk8enkl2OJ7+4TfY2u2EeEz6sdV9PzcSbrd
pz2P3fd3+odFH31M96cac/qIPhIEQRAE4UPj+fnThq3INT9db1efon/eRG9j
nhkr09Mp7thBpYc+sY7zD7K8L+RWtxaUnvqWLAN26OXlYLo/YyzPF+Bf9G8U
2r+TEaMq+kgQBEEQhA8JpV/iTxym0L4dKP74IUpLwRgs23FJ6UmvKXRAZ55T
MsitgNJSn1GwVxFKOH/KmoeZlIf36dF30yj86wGUhjFdEp8tCIIgCMIHRtrr
1zwPUna8CrlMF8oWs8Zeh48ZxMuz9J0pzZT68oX41gRBEARB+LcFfrRHC2aS
X8H/S5dreFDSg7vEdqZfOLeRIAiCIAjChwzeTXKlTjmO22bENiQIgiAIwp+c
dLzL9WIgvY2Oet9FEQRBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEN4zaWlpkiRJkiRJkiRJf+qUnp5uo48iIiMpMjJC
fUaoz0jrZ2SEXpbxN39iG3yPyFimt4uIyCGviEhTXhF5zsvI493zspb/nfOK
fIe8IhznFfHL8rJp43fKK/IX5RUR8WvmFZG7vCId55WR5zvmFRHxi/KKjPg1
84rIZV7695GLvCIy52Xkb5uX9Zi5zsvUjjZ11MvympdpH9P9xiZ/07m3Lbex
XueVsU92een2y3wOdXvmLq/ITHmZ73162whTuTN+P3Z5We+5GdeW7X00Iy/H
7f5b5BXxC/OK+GV5Rf6WeUXkLa+I95tXROQvy8vadr92XnmuY8Zv8F3zsulT
3ymvCJu8Ih5HUEpKio0+evv2rSRJkiRJkiRJ0p862duPBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQBEEQhD83
aWlplJiYSK9fv6b09HSbdSkpKbzOPr19+zbHfLGN3v7Nmzc5bs/HeqnK8ep1
rsocERFBt2/fpps3b9KjR494f0EQBEEQhF8DaIyOHTtQ586dKSQkxLo8NTWV
Vq5cQS1atlTrO1KHDu1V6kAd2negnj160tChQ2nVqlWsUxxx6dIlatOmDbVt
25YmT57My6BrHJGUlETjx4+nFi1aULeu3ejatWu83F6voUwnTpygAQMGUJ06
dahc2XLk6eVJ1apVo+7du9NPP/3Eusx+P0EQBEEQhLxw8eJFcintQqVKlaLT
p09bl0NnjB83ngoVLkylS5cmZ2dnI5V0phIlSlDRokX5E9rk4KGDvI9Zl5w8
eYrXY5/KlSuzncd+G83169epXLlyVLx4cSrj7q72PcnLzXoqOTmZ5s2bR25u
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
U8Cij8R+JAiCIAjvG1v7kQuPo9L6KMhhH2/vUzLbTmy1lCMN9Gvm5ciWZK/F
fp287OO7zcvfPS+b5ayP/iX6SBAEQRD+ANj714z4oy9MvjXbft+RPyvz2KzM
scmO/G055ZU5tsdWY2S212S22+SUl71WyUteQQ72eee8ynxhiT8S/5ogCP/e
pL59S28+gDlx09PTKSUlhVItc+C8K29VfePj4+nly5fqtv773NdRZpT99zre
vyO28dkuSh99ZBOfndn2Yatz7H1pjmKzc5dXZr+c4zjvrGwyjvPKnO/7yyso
U14mW5Ml/uiC6CNByJHExESKioriz39HkpKSKDIykl69evW7HRP9aXR09G/e
psmqbitXrKB+/fvz8UD67zCXya1bt2j37t307NmzHI+p112/fp26detGW7Zu
5b+hc3KLzgPH7d27N5UuXZpatmxJ165d4+W/VHPlxJ69e6hzp07k7+f/uxzv
t0S35e3bt2nv3r382zAv/82Om8X4texiiDLH+pjtI/bx1I5sTI40UW7yylpn
ZGdjcjR+LS95Za5PTraw3OZlWibx2YKQI3j+3r9/Py1cuJBmz55NC+YvoC1b
ttDDh4+s90o8M+M+Gh8X/7uVC7YQ9Lvnzp2jY8eOUUJCQp7zQPmDgoJowIAB
VK9ePapUqRLVr1+fZs+ZQ9G56NPN+aD/uHHjRq5sByjrkqVLqUWLFlS1WjWq
U6cOjR07lu7cuZPrY+YGnQ80H/L38fGh+/fv87Jf08bx4sVzuhpyzeYcQPON
HDGSPvv0U9qwYQMvy07r6LL6+/uTp4cHzZ07l//Orc1L7/9a1XWcqquTkxNN
nDiRdu7cybrevM0vJTk5ma933ZY631WrVpGrqwsdOLCf/86LtvsjoeuTnpZO
kyZNoo8++hutW/cDL/ut62Svj/yL2s5/5Diex6yT8vNc0QElPyH/4n8n/2If
UYDTPymw9L+y8Ws59sfZ2KUw77SNrspsj7LXXOYY6IASH3M5eBuVl7/6HlD8
H1zGACSUsdSnRlkwV7j6zutKfMJzYNvXEfXxd/qHsR+vt9RDLcex0G6ou3/J
j405tB2Wy1Zj2rSD6CNByBbonu3bttGUKVPU/XEdHT9+gnbt2kWzZs2iRYsW
0fPnz3m7p0+f8jZBgUH892/9jIl79JEjR+ibb2bQpMmTaN68eRQREZGnY+PZ
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
cS5rqs/a7G9DfBTsPWgDHG+QxT6F/HRdoKdRZlznEZER/IwwevRodeyMc4jz
AbsQMOLQqtjMKWW+1nEfgG+3WrXqVFuVo4YqD/QhNNWIkSMc2uXMZDX/Ueb5
ekyfFn0U0qoWvY2Ppbgj+5Qu+CddrFSKXgT56ZzZHnOjXQPWT29joulq/Yo8
Bh7+rXtTDL1/f/JI8ito6KMgz0J0Lt//S7d6tWF9FPn9Qjr3yX/S40Wz2F50
Z3B39sFBT11vVZveJsSz/w0aDHFC/F4UG31kiT/ycaaUiEf08lIQxzZBb0Wu
XMD+MfgHg9VxH86aSOlvUynsq75so0p78YKu1Pamh5b4qvCRfZXu2cl2oUsq
P2hAcHfsEParsW8P+sjpnxT//7P3FtBxXdu6Zo/R3aN7jB7v9r39Lrz3cm7O
PTkxo2RmZseMMcSMcWKGmCFmZuaYmZnZMsjMJDNbsmXJsjx7/bNqbe0qVcmy
TxxD/s+jRnnT2gu2av4151yrtm3QfjldtYT32NcSeI5/4vUhGV8j5N3AZyN8
GNu8Pnd/fQRgp5C/sWb1Gs3zhD3D5zReT5881c9H1UGzZsv48eM0ZmU/ZxE/
QO4GPpuDfc8ECf6jd9NH8PfAvwDfSPhxj9/Cfl7Hxr7S/JCiRYsY3fPS6LxL
anu6de+u39uvXL0iN67fUH0HHxnqh/bZ+FpS8/vhL4CNRzwEJFcfWTt9+HCY
ZMiQUfsV/Xjl8hWtxzXzuv/ggdYD+TXQcu5Yi86v69VLbTr8L+j3AQP6q93D
nLM7t+/ItavXtCy8rH/C6h5oFou/Pooz9mz69GmqMwLF1+BPsXFX5JSh/cg7
j/auYwDfF+ph/UcJ+siTT2XjenjHOZ00ZymNPm/uPkzsP/LoIzxLuCa/aft1
v7UNpk6bqvpti/c5tvoIeVLufre49RH8j336JE8fIQ/bak70SS7TPuTg4W/i
ijkeYeqF2CbGPdBcL/ffBeJzyPVBH6xZs1qvy2/05o/m+cM46vNwLWEsUWe8
Q6MgB8ti27Z37x7Jkye35hlBF+Yx+nP58uXOeVrfXLlUZ4GBAwdKXnPOvn37
A/Y/YuXIfUIfPjF6AflMGBPUAXHjt85tTPT7Iv/it36271qG2A4zxw+k+Bc5
USaP5is/Px0ux4qEapwK+5BXZP1DZ2qVVX8KtEp46dwae9v3l/9LrvZsr/e9
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
vXG8SKhnzR9dC+k/9XUw/f+SI7nT6DpJJ8sX9Mzrx/qQ/vEmzPXK6MnDOVm5
mISXyu2J52ENANyjfAHVNEfypPWsL+mso+27ljaOH82fzjuv7GuNmWFtSfUn
eXO2dT6+d/1JaB3MSwvL9q0njwjX5E+vekVzvs3rSJ405roMnnW10R8ZvtI2
oDy0+1S1kp64oiEqPEx/k+Rgyn/1rFsZJJfLd/4a848I+VjgMxNr+o4bN1Z/
K+tD/24bIeTTJvj62f65R1/7aSa3vf/au8b1//L85mvGrzy6yJ1j49UYug42
1pTW31f7SyJ95JSr62D/T9fv3Hp01qH0X3n3/yXRNe7fOtPfJMmY8Btunvzp
rxJe3t+YdXw7mTy/NeupF/xQXzvnJbTxK13D2/d3dP9T96F85EZh+9a4IRIx
op8czZ3as+5BiG/+kf9v9Hp+r4X+I0I+JtBHyGnFXCX3/H5CyJ+TYL9P6/97
GL6/teobL/L/DZJA277a4O1lJV5LMcBvlvmV5R/HSqqspH5/N/HaT4HLSrzW
49eqlTSmmO5/ejXi10mU5V4fkvPXCPmYwEePnAvMh05qHj8h5M+B//rZutai
Vx8lmrfms36Pr8/H//drE+cs+WqD36Osw0HL8j/+j5b1nwHL8vVZvXtZPvud
/GzqI0IIIeRjk3j9o/9P9VFCbM3X7geKZyWem5U4l/uw6/rkluWrnRL/zkli
309iH9Dbygr0+ynJLetwgGveuyxvvhbja4QQQsjHxzc/G7+/9t/91of09334
6hz/WJqvRvBfIyCpshLH5QKV5V/G28pKXO7HKyvxvLXE62fz99cIIYSQj0/w
9Y+C5xAlzvVx+0d8/SiBfUyBNFFyygquM5LyMfnnl79rWYnb8zZfWHLLcu1j
fjYhhBDyyZDU79P66yLfvJpgsSX3u2+uT2A/TPLLCn4sUFnB5ooFO+afZ+SO
E/rGDJPWXu9XFvURIYQQ8ukQbP5aoBhaQn6zr/5JnN8TaF5bIF/K137/Dxyr
SjwXLXBZh/7wspLjL3KX5R9vc/Uv1z8ihBBCPhnexLn1UQY//1HCnPTAeUSJ
Y0aB4m++PihfX0ugsgLF8vzPS7qsxPG0wDnTf2xZ/rnrPmVZfZQjpbw4S31E
CCGEfEzeeNcFjzpyUNd7PvDtP/v8/pp/HlKgmFnS8a+v31LWfwYpK3GudnC/
TfLK8vft/KNlBfKNvXdZWf5LDqb9dwkvnl1eXr7gHRzqI0IIIeSjgDXQvOug
XevXRfb//f/12OsQ37WCfHWRb55PoHMC5QO9a1mJfVEJ/z/spzMSx7f8///7
l5U4jvh+Zem1RpPu+/r/kYhRAyQ+NiZhbAghhBDycfDGcV7dvysX2zSS/Sn+
RQ6k+Xc5mPrffF4HEv3/X/V1wLudeN+/el/ucv41ibL+LVFZB3zKSig/UFkH
3quswPX6I8pyzk33Hzpv8GKHZvLqgec3EKmNCCGEkE8A+zu4z6Pk/uI5cqld
U7nYtolcat/U8/92TfTd/t/zaup94ZjnddF7ziW/4xe9+5Iuq4lTlu81CWVd
cu2/6FNWk49QVtPfqaxm8mDFQol/Ge0zFoQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCyJ+N+Ph4ef369ceu
xtt5I/I6/rXEv4n/2DUhhBDyJyQ6OloePnyo7+TLZ+XKlVK/fn05e+asbkMv
fWgiIm7I+nXr5ObNW7r95s2boOfaY9evX5fWbVrL5MmT/7B6EkIIIc9fvJCN
mzbJ+PHjZcTw4TJu3FhZunSp3L5927FRr169ksuXLsuzp8/+kDrhvteuXZPN
mzfL3LlzZcWKFXL27Dn1ISRlUy2wobi2Zo0aUrtWbaleo7rUqFFTqlStal5V
ZP78BXpecv0n0S+j5fyF8/Ls2VNbw/dt2icDxjtVylSyZ+8e3f49fUkvzDN1
8eJF1dsWjNuo0aPkn//ln2XkyJG6Ly4uLmgZVgedOXNGChQoIJ06dnLqmZxn
gBBCCHlfoHuWLV0mffv2kWnTpqmmWLpsqQwcOFDGjh1r9IBHD929e1f69e0n
hw8f0u0PaZ9gF/fs2SP9+/eXESNGyKxZs2TYsGHSf0B/OXQoefeHDYWuSp06
jTRp0lR69OghXX/5RX7p0kVfGzZscO6VHI4fPy4hISGybt06p/zPnYkTJ0q6
dOlk3759uv17tMmOy4EDB1TTzJw5Q7etDjpx8oQMHzFcwsPDdTup/rfHzp49
K0WKFJEuZvxsPamPCCGEfEjw/R5aaN68eRIbG6v7YHuuXLkix44dc+zQjes3
jD4ZIIe9+sTfrmH7yZMnAWNzblsG24bzkvIboB7LVyyXRYsWGn0WqWXfunVL
Ro0aJVOmTJGXL1++1T7imjlGH2XJkkV2794dsM7B7v38+fNE+6HLMmfOLJs2
bQpYFrZx3ds0RkxMjERGRiZ5Dtr24kW0aWdMkvWMfOZbDuoAvw3uEQz0+wtv
+9CX6dOlD6iPcF5UVNRb+1nPM+XZ8+w79G2ePHnkt99+c857G2gT7uluDwik
j+y9nr94rm0mhBBCfk/u3r0nffv2lQULPfEmf3sIGwV9MXr0aBk0eJBqlAkT
JsjGjRud46dOnVLfE3w9Y8aMkfXr1zs6Cf6p1atXy/Lly+Xw4TC9FudNmTJZ
NQfuF8gGx72Kc/Sabhv7inKGDBkijx49ClhX/3rPnTtHsoRmceJHgfTRzh07
pWWLlurX+LX/r1KqVCkpU6a01hHnQ4vNmTNHSpUuJdmyZTPHykiNGjU0NmXb
t2vXbqlXr57a8MqVKsmMGTMcPQAtCP2J3BloBpxTp04duXjpYqI6Wb9ZkyZN
pHjx4lK2TFlz7SB5ZDQsdAPGAHGp/fv3S4kSJaRq1apy+fJlvTb8eLi0aNFC
ihQtImXLltVzoRtsH+H/s2fPlvLly0uJ4iWkTZs2+kKbrH4E6POlS5dJlSqV
pXDhQlK7dh3ZsGG9c/zq1avSsWNHWbBggfrSKpn2Fi1aVH7++We5cOGCnrNk
yRLdlyNHDu1P1NPG0+CfrFe/vuzYuVO30S5ozh9//FH7Fteh/EvedgGrj37p
8ouz79y5c+aeP+l+9EWnTp3k5MmTeuyZ0Z943taY58U+IfQ3EUIIeRdgN6dO
nSr9+vXTHB/kHLltNuwKbNG06dNk4KBBMsvYWNjFI0eO6PHTp0/Lr7/+qmUc
PHhQ1qxZo9tr167V47C3sMt9+vSRocOGqsaBjRwxYrgMGDBAtZW9T1KgnHm/
/aYxv+T4NVQfzZkroaGhsnXrFvWp4Dq3fwVlIEcZOTiwsdA9Q4cONTa/sqRP
n15Wr1qt561du0aqVqsmWY2WaNy4kfTu1UvtL9i0eZNkyphR6tatqz64jsZO
Zw4JcXKJ7927Jw0aNJBcuXJJuXLl5IcfftC+evzkcaJ2I+aXIUN6KW20GHRm
t27dVF9AD6He0DNoT9my30nNmjX1HpGmTUePHpW8efKq9kEdEAfNkjWL9DZ9
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
nejoaKlWrZp89dVX0rx5c7X7tt/w/ttvc+Xbb7+V0qVLS42aNaVcuXKSI0cO
yZYtm0yaNMk5b8mSpZIyZUpZu3at7gukjy5evChFiySMxbv4gPbt2yeZMmWS
qVOnOvf8mFAfEUII+VyhPno7x44dk3z58kmNGjWkcOFCcu3aNecYNMD8BfMl
c+bM2n+xsbG65ua5c+ekXr16qpHsulLLV6zQ8zZs2OBc68+ZM2ckQ4YM1EeE
EELIR4T6KGnQP+PHj5cipn+2bN4q2bJmkzlz5jjHVR/NXyAhIZllz549Ptfu
2rVL0qRJI3PnztXtFcuXqz5avz6xPsJ9tmzZqutMZwnNIk2bNpW+ffvK6tWr
nXOhM4YPGybNmjeTDu07yKpVq320BvRRxkwZffQRdBrKWblylXMefgvtt99+
k1bmXrgf2hMd/cK5BvlLEyZMkHv37sm8efP0nHZt2zrrOwLoQMQVzxo9598W
d98A6iNCCCGfG9RHSYPYWtWqVaRly5aqCSpWrCgNGzbUY7D/jj4yumfPbl99
tGPnDtVH0BhgRRL+I/zmxvTp09VPlTVrVilZsqRqiokTJ+px+JVKlCgh2bNl
1/uXL1de0qdPr/nYtpwEfTRFt+/cuSOVK1eWvPnyysmTJ3VfZOQz/V1i+Jka
N2osjRo1NNouRH75pYseRxtnG72U0RyvU6eOeS6K6DvqlDdPXjlw4ICeh1wq
3L927dry7NlTpy/cUB8RQgj5XKE+Shr8nir0w+LFi9Xejxw5UnJkzyFXrlzR
4+i/+QsWqO7ZvXu37oPGuHL5stSrX09yZs8pp06d0mtXLPfoo/VB4muvXr2S
hQsXqnZZuXKlvIyJ0X34XTz8Rh40yq6du/S6R48eSZcuXSQjYnHbtun18F/h
2pmzZpl6vZY2bdtI9uzZnXohX3vRooWSIUNGvY+95yxzPuKA9rdj4VtKmSKF
tDCaENoG7UF9UqdOLSNHjNRzLly4IN9995106NBB/VHoB+ojQgghXwrUR8GB
nhg8eJBqDMydB3u9OT7WJ4RzFi5YqDlDyOFu0qSJ1KxZU3Lnzq16BvPYAPoZ
GsPjP1qv+wLpiTVr1mj5GzdudPafPXtWcuXKJd26dXPuCZDLncPUDToJQB+F
hoaqHwoxM9Rp6dKlTjnQWfgd4goVKsizyGe6De2D8gsWKujE5WbMmKF1OHYs
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
wrxu+r0innjeX7z6MvRDvPfvcOuFh1J9zlHJM3a/VJ55VMIinvkcBw9fxKqG
evU68d/ug+exci8qRl7H8++akC8dfO7Wr19fcubMJblz5zavXFK4cGFp2LCh
rF27Vn0ktPG+2P549OihVKxYUapUqarb0EsNGjSQb/72jeokADtJPi3s+EFX
bN26VU6cOOGz/33KWrZsmRQqXEiWLV+m2xcvXtS/q0yZM0u+/Pkld67cUqhQ
YdXTmzZuUs1jn41du3ZJSEiINGnSRG7evKn73M/NtGnTJGXKFDJkyBDdxt8k
ePjwoQwePFjy5csnWbNmlSxZskiZsmVkydKlzvWB2mS1wMbzD6TcjCNSauph
KT8jTCqY/1eceUT/X3raYd2/5MRdbznv3DWfDLbusUbvdF57TgpPPCjTDkWo
NnoaHeecY88btvOq1Jx7XM7ci9Lt1+aAlUO9N12UuvPD5drjaN2O/5w7hhCS
JLARVSpXkTJlysry5ctlxYrlMn7CeClfvrykT5dOFi9arOdRIyWQoI8eSeUq
laV6jeq6/SrulZy/cF42bdqkPjn3ueTTweoL6KJChQpJ/19/1e338Zna8V24
cIFqlAULFuo2fDnfffedlCpVSlatWm1eq2Ts2LG6DS20fNkyp4xt27ZJ6tSp
JUeOHLJhwwbdZ/1A0EvQVP/+7/8uv5p6Wt1z5/ZtadGiuaRIkUJatWpl/m5X
yG+//SZVq1SRVKlSyfjx4536+T+DdhM2ftnJu7Ly9F2ZfeSm1PztuFSfc0xm
Ho6Q1afvyaLjd+TsPe9z/M498+lgNcz957HSaPFJabH0tNyLivUe85yDN9sv
A7deVo0YfjtStz36yHOw67rzUnnWUbn88IVP2YSQL48nT55IpcqV1O8B7Gcp
vv/myZNHfmr1k27Dz4T4gD/4HMexQLYF8YDn3muioqLUZiDuZO2Tvd/zF8/1
XPz/+vXrcu7cOY05WKA1Ll26JFeuXAkaP8C1yAU6c+aMvie2CW/Uv3P27Fm5
f/9+QN2CNuD+58+fD9hWgNgj6nLr1i0tp3r1alLDq49guxBnsW2x+9B264e7
c8fYnHNnNd7i7m/7f2guxEquXruq10G/ov1v01mI7WEc/P1VuC/KcbfH9hX6
4t69ez7jYctC/dz7US72BYsB2XJRB/TP5cuXA44Vyrx7946cOnVSIiJuOm1E
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
bo/DVsLvnzVrFrly9YpqBtwDWgGayJ4HPxb8N+3be/I07Pdk5KvA7sCu4jPf
2vJgc5BgO1EH3BNxh1WrPbmyKBd289q162qf0a7FS5aYPlgl69etVx9RYaMH
4cNAnWF7EaeCtrJ1Qa4QtF716p78o0D6CHYZ8T7E3Sxoc/fuPdS38dhoJZQ5
oP8AyZsnjzN/CXa6efMWUrFSRc37Ts48wqNHj2nsqr/XboaHh2scDX48MGfO
HO0LO7fOxuDgm4GOHT1mtG7D7mJ8Lvj5j3LkyC7DhgX2HwHoEmizyZMnq08I
Nhx5//fv31NdDK2GcbO5UNBH0KhWc+NZbNumjRmXIj6aGP4XPJ8VKlbUMcQc
gk2bN2uf5jTtXWS0CXyAeF7q168nmzdvkeXLlssW8963bx+Nq27YuNFps9UK
e/bs0TqOHDnSuRf8hPBjWs1mx9rOTUSM2epA95gk9h9dNOeWU220Zs1a1fHz
5y+Qzp076zwz+IKgXwH+5jBOu3fvlt/mzjN/C2VUX/Xo0UN9R/CtVahQXv1F
4ODBg3p+3759ddtfH0ET4XmtUb2Go8OSp4/Oqj6y/iNr5xeG35ESUw6rblh7
9r4sOXFH/SXNlp4yeuao5g3tvfZE54XNP+bRY1ZbIce53LQwjcVZoE1wn5bL
Tsuzlwk5ZPBRlZ9xRE56dQnic/BZIWcI5d585pv7Zv1byE0qO/2wDNt1xWdO
/r3IWKn923H14SCPCdqknrlvh9XnVNt4+s5zbnL1kfUfWR2Ge+Yff0BamL6A
z+qh0Ya2nJGmzYirTdx/w+m35eacGnOPaQwSMUt3HQghnxaaf1S5ksaTgP0c
xfvESRMlXfp0jj1FzCLE2FfMk4EtRPwAcSz3dRbrP4I9duegeHTTCP0ufvLU
KS2nQYOGaneiohL00fHjx726xmPrrZ2CbYWegraB76Vdu3bqd0F+jv9cnTfm
8xN2Ml269GqroKswFx8v2OUWLVpoLKKJ+b6eIX161YnVqlZVzQM7jhfiRbCH
iH/gO7k7l8R//prVRzlz5vDVR7lzayzJgjb37NVL8hp99OjhQ923c8dOyZUz
l9FN3Yw2vKRzutH+od54VlI5tu756oipQEvgHrNnz1abjZwXMHr0aAnNEqrx
KTsWAJoAPkPkIQGPPspq9FGC/+jIEY/2CqaP0I/QD9CZeEc/lDc2vWSpko7m
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
OuitCJc/KzIyUu0aYnnHjh0LGMdDmbj/okWLJEuWLDJ8+HD1E6BfcH637t0k
f7588uDhQzlv6rR27RrZsWOH49MB8EEgRmltPYA/Ljw8XO+9efNmuXnzpnM/
/34ZMmSIpEmTVubPn6/7rP8J4/PIm+Nlr8M+lLt69Wqtx72793yOo17orxcv
Xuj/t23bpudeuXLV5zzUFbn22L5+/Zps2LBeNm3cJPfuJ9Yr6Af0LcZi9+7d
jr/HfQ7agXMQG8Q9rd6AtuvWvYfkzZtPVhotgr7FvTHGFy9d1ONvJEF3vjb9
dtlo1fXr18u6desS+RXRNzZHDqDf0b69e/eqfzJQHwfj4MGDMmnSJLlz545u
u59B6NO1pi1olwXtmjZtmjx58uSd7kMIIeTzwvo94oP4RZLiTfwb1QXW7r8N
qzUyZMhg7OwKTxkB7onyWrZsqf6GnDlzSubMIRIaGiJz5szR45s3bVY/z6zZ
s3zK2LBhg2TMmFF1DsD3/Jo1a0qIuRZlZQkJlc6dO6uPx+0HehX7SiZNnKT1
yp49m8a24MexsbKePXtKjhw5pHfv3pIvX16NCaZKlVq1HtoPjhw5otcMGzZM
t7F/7NixGkfEvREnK1iwoLG3a/U4bLw7D6dYsWLyvalrrBmPpLQqdEn37t01
Jok6ofySJUuq/rJAM+XPn1/rXadOHY3TpUmTRn100BD2/siVymc0y4iRI/QY
tGHKlCmlVu1acvPWTZ97du3aVcvJkyePhJjxqFWrlpw/d9455/btO9KmTWtP
vXLmMOOTXqpXqy5bt2yRtm3amv5KqfUNNffInj2HzJs3X/uoSpUq0rBhQ0eX
QNNNmjhR+ytr1mza19DT06ZNN3WO03MizfhhHL8rV04GDRxk7pfL9H0Wc49U
8ssvvzh6Jlgf2v2PnzyWBQsWyPbt23Xb3x8Ejbl9+w5TXoKmRl/ABxrsGkII
IV8Gqo9uXDc24/38R7BxEcnUR+DQoUPGPmaXUGNre/TorrrCrRXADVOfFi2a
y8yZs9RPgHMQY4INh31CnnSRIoWlUaOGzjXwHXXu0lnt98OHD9VvUq9ePc2r
Rhzv0aPHMtPoAdjn6eb7P3DnCMF/MMroBOgw+HKQq4t4W+yrWOnbr698myKF
VKhYQX0jiH1Bv0GLwZcCDh8+rPpixIgRug0fiSevqpXWB36asePGqd/H9p0l
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
mzWOpDVTy14vbc2Pmec0Mvkfk5amRUdL6o/y8qm6Ojr+KC7gj5w5FHNsINQH
WrftcYmupuPCa5ljQO2tZfUrzdfytFLLa9FrvpY97tOeWl6JH52G+BEAALQh
bvVH5hqdsGO9wtRmu431j0jLHG8K63HMWi46dj9UoAXnzW6ulh4/yo9a/Cgu
OL7fGSuwexLrdtewfWekWtZ64Mi17NfQplp9upDnsnP1OaJctJznbvl1tUTL
G1Ut52/VmJbXpuUNxI/gjwAAoO0I54+cY9LsnsU6pyPPpVhcXExFRcVUWFgY
qulxHd/mpuXuc5xzFTWhZZxT4j95dOjQIRmnXxBWy++uFRy/1jp/VKv8UYrF
Hzn7brdalWDf2bcrxV9yNiVccpY+r7IjvtKYlrPe1/y5tY9uRy3ljXzX96CU
u64m31Xd9TmmXbQS+nSW5xDf4xcUf/EvZZ5Ep6ds+XXZ/RTrx1/8K32+a4c/
iuQencdbc5ct08L4fgAAaHtcx/f7/ZZ1PDRbvszwFFyvVHi4UPbHxu6ipUuX
0KpVKykpOTGwvlmhLd8WXsuyFog5F2efb9ui5e61+D7Kyspo7dq1NGXKFPJ6
vWq7NJA/tK0pYqkVN8W/Av4quvXZ51tiAlY/ZOs/+8XoPqHfeZQ9bpRqI2Xt
Nk/vTjKHsjX2EE7LPYZiruvxOo5rKy3rtvEZ16zHXfhzOjTpRar159O+x/6g
PNDZVj2eM/rScyj5jivo0OvjqGjh51Qw+33KGPYX8Qocd7Kf235dbv7H8cw5
hsXtcqXZ+xzaP2oA5c2YTEk3X0YJrudwarjdY7hn0lKtUP0R4kcAANBWuMaP
TH5F01xiM+JN8mUd16ys/TRjxgwaNHAQjRk9hkaPGkVPDh1KCxYsEL3CgsKQ
rrGebBhtY51YWWvWHuOxf9ceazLWwFXn4njRkSNHaL66hqeefpq2b99O5Wo7
3+yPzPdoy/Xp/siv+6MWrsFmjh+Z/ZH72G97PiZGfEN8j1/RnofuUh7rkKzl
tu9vf1Sf/TLgj0J1KZ4+nXWPwPElfm/EX/p2Dq3jdVnnYO6K41AJapubt0+X
oFYoZhXIdfU51+IzQtdrPTZBju0SvH6v4TWMtcT4XC5ahv/bdd5PSZvxljyv
zCF/pvieZ6pj9OvisVrxl55N6f3vp+PZmXLMycoKaqjR43oFn35AvqsukHXJ
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
+CE988wzlJSYRMePH1e+K4FGjhxFi5cskTjSiBEjaO7cuVRdXS3akyZNohdf
HEu5uXnqnCuUlxpJ27cb+TXrmnCW+Qls91jA64vI/EfRW582FD9y7/eMWmRZ
X+uiM6h09TIlxH3ubyjtvl+Lbylbv1LyQhyPqNi5lU7V1UlOalfnH9PuB+6g
E6UlVJmwQ85VvGoR/8CU9fwwirvwDMlxcWzk+IEMSrnzKtpxxo+kzpnJfOpx
8s+aLu+zXx5DO3/1I0r7wy1yTo6h+K67WOI2HNNJ6HkmZY8fLR5qz0N3KA/z
M/FqjP/jaZKXq96dQifKSmjPo/dQbKf/kFgWs3/MIDrw3JMSqylaNFe8Uly3
n1HRki9kf8agR5U/0uNH4hNjfqKua5q+b+if5dzinYxaHuUr4nr8gtIHPSwe
i30ix9Z2df0vyp08Qb6XM+kF2c/+puybdXreUHk8eX7K46T9/iY5/sj2zcrD
HKQk5afYl5WsXCTekv1R+uBHJIZVtmG15Ok4/1YZt12+n3RrH3Xf+rPb89Cd
kq/k3GKdP1/ia3xs/owpsv/guJG089wfK/91i1zPkW83iJdNCOQBnd45FGM0
mi+wvgj8EQAAtB2u9Ufm+Ip5jFjgPcePKpUf+nr9eho27Enlk9ZY/BEfo4/z
1/Njhw7l0IoVK2nKW1NosvJGHP/h/Bvn3bZu3Uojhg+nDV9/Lf6Ij3/rrbfp
9ddfp9TUFMmZvfvuuwHNIonzJCUlSQ5t8dLFUufEx8yYMV1iUiNHjqThw0dQ
eno6ffXVatk26o/ytdD82db4kb3+PNrzZ99giR9Za49sdUfqGK7HSb37GonJ
cE5tt+pzfdf2oKPJPmo4XkNp998i3oBzd5zz4f6cc1Ycbzmec5Aqfbskv1O6
bgWdVB4l7Q830c5z/jelP3G/xJo4RnI02Sv9O8dXmLx/TlJ99UbxUzX70yWH
xDGmUydPUvWeVKm34dych/N6gdpvjudU7vpOjjdiV+wTfNddRDVZGXQ0JZGS
bupNO8/+X8qjDZf9B/7fsGA8iL0S5+12nfffwc8yhv4p4I/Uc2J/dN5PSPvw
n7Ivc/hjodzb5YHx/upZsbfJe2eSrjlqgMS62Eel3nMtnTx2lIrmz6GM4X9V
z+445U19TWq/Yzv/HxkHx/e7+8HbKe7iX1FF7DZ55qn3Xid+smTlwpA/GvSQ
xJvy3p4o9x6rzlm05F9yTo69Gf6Ifys9fnSe+KMqX7y8L1e+jOHfsyoxQXJz
rHdMPTsZH8d1TJYabWeuLfi3g/psAABoc+zj+zVTLY5j3bTA2C72RzwebMfO
nfTUU09JnQ/XQ/P3uX46JzeX1qxeQ9u+3SbHTps2jUao4z6dPVtiTa9MfEXy
ZNnKH21R/mj4iBG0Xnkt9jA8X8BbU96iN9+cTL7ERKlH4toj9lq8T6/XLqRq
9f/ec+d+TkOGDFZ+6i2aOXMmvf/++/TBBx/QnM8+oxzlyZYvWx7IrwXiR3J/
mqmeyn3sWmj+o3yqjnJ9tteWU7OOXeqq12Urv5D79qvUUKPHrjhPxHk0jl8w
OW+Ok5gD1wexx2EPwrVD/Bmfr8oXJ3GZ0nXLlT8qlbhSbKf/lNwXx4M458W1
PKWrl1LxioVUqt7vf7o/VSV5JAZTvnmd8gaL9f3L54t3SbzxEr3fVx6M65/y
2c+oezya4qPcf75K/lnvitfgeBTHV9gfVaclUfItfSR+lG3yR/nTJ8v7/aMH
Sq0Ox2ryDX8k9dkBD8S5PPXcDgViUzlvjg/kovQxYMm3X04Fn8+kjBGPKQ/1
jv79J/+i12lferbMp8T5scML58kx7C3zp72pnk1X8VTij9Q9sD9KcPijnwf9
UbL4o4fFz3ANFf9O/BsVLTb7oxnyfs+Dd6jz62PpJH6k/BHHwbj2qV4927JN
a9RzXUIla5ZR0dIvZdwe15l5gjVI9rp955wFPqxPCwAAbU7Y+SFN8wzZYy0c
JyouKZEa6hfHjlV+ZyIdyMqiEvXZkYoK2hUXJ3VJX3zxBSUkxCuPMlJyYFwT
xOdhHzNq1Gg6ePCQHj9S/mid8kdcQ83+iv3OpEmvSQxo8pQp9Morr0qerqKy
kg4cOCBj5eLj4mnFshU0bNgw2rhhI1UcqaCi4mI6pDzXgQNZEouyj1/Lt9QY
mWuQNEsMSX9fIPdZEzV/dHpgfRH7PMmmtSWUpzHmIqzYuY3qK48ov/Ee5Ux+
mXLemii+gmM/HLNh31GxfSudKC2W/j22849lzFZdgSb1x+KP1q6gk+Xsj26T
/Xwc+yWuW5banvN+KvXS/LnEODatpVMnTtC+J/4oviT+ol9S2h9upqTbLpfr
kutWniX+wjOUB0uQHBnnprb/7EeUPvAB+a7/sw9lnFxNVrrFHx0I+KOs54ZS
9vgx8p69CueiOJbD4/SZjMGPyvg1yaFdoc516VlSW82+jmMu7NN4zkb2Jzlv
jJPvaOq5ZL8wQnKNnN9jzxXb5f9S1uhBsp+PSx/4oPhMPpZja2Z/lKbun2Nj
Feq51mp5Ei/a1f00a34t4I/yg/7oJ6H40R39QjEu5UHZWyXecInU1HP8iOc/
4Fom9rtcC88153HKz6b9/mb5zUJj/Z11R67j/8UfnQZ/BAAAbYh1/JqRHwvF
Viz5KFO9Dnsp9kNLly6V+uqp77xDnoQE+m77dho/frx4nsSkJNqze4/EcMZP
mEDbtm1TnmUBDRkyhEY+/TTt359JW7ZsUccOp/Xr1+nxI+WPuM7673//O+Xm
5tLqNaslhzZ79mxKTUuVGu3HH/+bxJuylCd74YUXpD6JfVZSchJNnjyZpk6d
Kv5m+fJlevzIqD8K1mFrLvEjzTLev6DAH5X4UWj8mrk+O8bikwyvpM95dAbt
e/wPUkvMtUacC+Kxb1yfIjUxqp9l9v31d5Tz5svyvjJ+B2VPGENHtmyQbZ43
kPtQya+p/p1rjblP5piMUcPMsRHORXGciHNo+/rfT1nPDpE41bHMdMoeN1p8
BY97Yx+ReM2FgfhRd9FiL8XwODX2OZzXY4oWz1PeoKfkjbgmXPzROf8h/oU5
9Mrz4glqDmUF4jlvkDZjsvg8Jr3/QxRvniv8Cj3fWLJikeyv2LFV5svkfCDX
fLNf3P3A7TLHwbGMvcrvnFI+cop6Hs/IGDbez7U+fH+nTp5Q55usz7kk/miu
nl97+E6KU8+W5zviZ6F9OJWSbrpUnXNBmPhRF4pV/qx4qV4zxXGq7LFPiT/k
nOShV1+gim3fiHZlQqzM+c25wYa6Won58fXnTHlZf7aL5uk1XZd1No1Rs9an
mWuQQuPXUH8EAABtSdj1aU21ONb1ykJzBEmNjvIQy5cvp2eefVZ8z2DVxil/
9O233wbnMVq2bJnk4XieJM6XsfcZM2aMzGvNvoZjPBs2fC0ehr/D49i4Ppv9
D8+VxHEorlkaPGiw8lUjacmSJZK34zkGuEZ74sRXZPzbkCFDacKEl+XcPL6f
j+M8XuzO2GB+zX3NEpd5uAPri1S3cv5s8/h+X2B9Wns/GHyVcWv/Tdr7/5Dv
cj/KeR+9Vrm71DFnPTNE+mHOY3EMqHDuR7LNcKyK+2Qem+W58jzxQHXK56Xd
d6PEXLjGhcdRla1fJV6BYf9QOPs9PX92ydmU+8Z4iXvIPSg/wGO1dj/yG90b
8XWwX1Hv2VMcTfEG7/doYoJ4q/KtG2R+RfYJR71xlHzzZRR77n/KWDy+zpzX
X5LYVMbwx/XrVXBO71jmXvFL+564X19LxXguPM9Tn85yfYXzZlHD0aPBc3Jd
FPsWj6w7cibte+w+qkr0yDNg6goLKHNUf9rV/XQZW8/5rbx/vCq6HP8pnPex
1Ejz+DWOR2U9O1Tia8yB54dR4RezqU55Za694phafU2NjP9j78b+qOjLT6lB
fT9N/b7sWaTGyPjd83OovuKI8qqbxI/xs82ZPF7mV+Lr47ruqsR4qVfyXNYp
GDd0X5fEWqvt4/p9zJ8NAABtivv8R27NtHasKS/FHokbjzvj8fxpqWkS9+F6
IaPOmWM5nIvz+XzieXj//qz94nHy+P3+/ZSbl6vPn630sw8ckHyazAd5uFA0
MjMzKDExSb1myrol+tolfjqszsP1TqlpaZSmGo+JY09WqL7Da69lKu283Lzg
3NuaY0ye/R5Dc3nz+Y9Fcfyaz5Rfs49dC9beqr4+ieduVH0y57I8fU1eqq8e
O+B6F15rhGu4eVwVzyXE80NmDvuLzC1dtm6l+CnvNd3V5/1kTiKZt5G9BtfG
KA2e84drZVJuv0LvmwNN5ldUnoZzbqm/vUHG0Ifmig7Nf8THJV5/scwLxOPr
ueYo6da+Mpbee0WMaCTd3FufK6mP7u9kHslre+ga/P2besnc1DynE2vxtcrc
ln27OP1jYO7q5Fsvp71/uVfG1rGWMc+kXBOPG7vmIqlfZ12eJzIhMJ8468pz
u76H/szV8/DdcIk8N2NcITf2knv/fK9cj++Gnnr+q9/54kWNOTM9gXnKk/j7
SpPnRZd5I6/ups59K+1VfjLxpt7qWfSVewzOm62uNVFdE/ux1Huv1+eTvKyT
Y8yac3yjNabkk/khUZ8NAABtiev6a4Hx7+a10hzrxRpeQwvFW8SX8LzXBaZY
kzEerNAv+ww/pfsmv8lDmcaPyVoi5vH2fpkP0vi+3d9wLsw4N5/HPCbNrG2Z
EzI4xt/plazr00Zv/TVPoD7bvuaWo28MjFsPeZIYq0dSOrti/kvyWnwejlFw
nopjMEz22JFSnyxrikhti3WOZmPND+mbA3XBwesy1igx1hdxeBVT/y19fie9
Ba+5sxybYKwvErzuLvKZZQ0SdayM2+rTObD2mX2eRFudVuAcMg93wC9Z12vR
1/iQ9U56nxuYm9r5TIPXHzxnQMNYmyQwJ7bxneC+4JolgesyXXPwHvn78lxD
z8NSc20824DntHsft78Jx5o0gfhRBeJHAADQZrjVZxvju6xrnGnW9ddcxn6F
1p011zBpzdMyey6TltaUlrnuulEtfwRa6pXnP5L1RaIRP9LH9/uC64uEn/8v
/FpnJp/EcaDLukicSfvgHzK/I+eOarIzKWfSi6H1yPrFNK3l8Gf2+uBmXFcE
Wu7rz0WiFePQbVqra9S0vC24Lo9DKyY6Whi/BgAAbY7FH+Wb6o9sniXoLcye
xuI/zDXcoTruZmtpIZ/i5nusNVBmLS10Tjctf4RagfxhAc+DGeX4Uaj+yDqm
35lXccZq3PyD5I4u66zntm7qTYnqVeYZNMVEItWyjyv3Wvrq1mtZvUfztawe
IVItewym5VrmnOj3peX2t8HvfajPBgCANsd9/mxrHs1Ru+z3B9dzDfoSm58J
vWoRa/mb1IrguoJ5Pev8lm5arjlDU84vevND3kjxMv9RN5cYhdNDhNYbccZj
HLmXYB7Ims+y1q1EqGW6Lmeup7VazvttnlbXVmmZW8u0YjqMlrG+COJHAADQ
doQdvxbMTzk9i91bOHNU1phNc7Ts9dLW/Ji5psnkf0xamhYdLak/kvVFojk/
ZDdbf2nNQZn7QOu2PS7R1XRceC1H7VI7aln9SvO1PK3U8lr0mq9lj/u0p1Zo
/mzUHwEAQFsRbn7I0BzTYcZ6WdZnC+95ItYyx5vCehyzlouOzQ9pjtxa5Fp6
/Cg/avEjY/5se99nzQXZ/YHVp9j7zki1rPW/kWvZr6E9tZzHf79a3qhqOX+r
xrS8Ni1vcH1a+CMAAGgrws6fba/lccR4tLDewlLT4+Kh3LXcfY5zrqImtDR3
LxRey++uFRy/1vr5IVMs/sjZd7vVqnhd+1RnbU3jWs56X2i1VMvujyLRch4f
DS3dH2F8PwAAtCXO+bMNnxGaL1vTXOIwmjk/5TfNi2Ru9nxbtLUa8VpmLX84
rZBHMsesQvm1aNdnn2/qA+1+KMbRV4aLBXlt+8JpucVz2k/Luu0Wj4lMy+kZ
ItGyx2PaS8sbBS1fIL+G+SEBAKDtcI0fmfyKptl8THDMmdbI+DWTD2mOlt+m
ZY7x2LVs+TnN7HkcWv7ma/H6Inmtnx+yNkf5o9+Gxq85x3LZa5FjTJ+759pC
/WtTWl07jJanlVqeVmqZvUlLtOxxvehdVwvukec/uuB0fQ0TAAAAbYLhj6qr
q/VxZFoonhKMvWimmiBNC41ds8xNZPYYoWOap+WSF9NC5wjFlkxafpOW38UH
NaXlD6/F+2tqWuaPjHUmThwuoD2P3CX1IpwXsfaZ9toUa58Zih3EOPpOZ//b
MbQ8YbRC+a6WaTnjKi2/x5ZoecNqNf8eI9dy+ij5jOck79WJqjyx0fpnAAAA
QBjq6+uppKRY5kT0+435E805J9N8RprfNd5jmY+okTH+jWoZdd5htexj/K1a
9hiRm5ZbzZNZS1+bNo9KSkvkubQUXuuUyZ8+mRIuPYcSeG0PntvRFkewxglC
+RS3GpTw+Tc3rZhWanV1aHk6iJZ7TCe8VrgYTsfWcsbweM7P+B6/oIyBj8ja
eQAAANqe2tpaWQ+W65A4hsLrjfCYfy1f05vm1gLHWLb17+YH30eule/QNrS0
oFbwfGF1GtfSmtDi+y8qKqITJ+pa90ADsTleAzV73GhZlz6h5y/110vOVK9n
yqvx3m073rQdej3Lclw4rfgOpBXfzlrunzdH66z21eqpXi89S77Da97VZO+P
wn/xAAAAIuVk/UmqVP9fWlZaRmVl3EoDr8b7QFP7S7kF9pUGto1j5XPZX6p/
XtqEVplVK3ScVSui6zJ/t0mtUosWH19ZWdWquJGFgEc6VVdHJV8toaznh1Pm
qAG0f8wgaVnyOtj0PrTNr1nSzPsGuX7XTStL3kdXK6uFWlmWe2y9VlaztQaH
vcfwWoM6jtYz+rZ/5lQ6WV4anb9NAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAITl1KlT7X0JAAAAAAAdihMnTrT3JQAAAAAAdCh8Pl97XwIA
AAAAQIfB7/fT+vXr2/syAAAAAAA6BKWlpbRp0yZKSEho70sBAAAAAGh32Btt
3ryZdu7cSampqe19OQAAAAAA7QbXYu/fv582btwo3igtLU3avn37qKqqiurr
6zGeDQAAAAA/aNjrsOeprq6m9PR02rp1q3gjzqmlpKSIN9q9e7fk2datW0ff
fPON+KakpCT5nL/DfopbZmampWVkZFgaH8s+y/y6d+/e4Ct/Zn4N1/bs2SON
z29s86t529hvfrV/bm58n27fCff6fWlFqtFRtcJ9ry20eLs5WuHed3StSJ9b
c66rqet0O74ttSK955ZqmV8j0XL7vK21mvrv5vvWamx/R9GK5N+MttQKt7+5
Ws35NyTSv3m37Y6kZTRzn268unkAwyuYfYO5sa8wmuE/DC9i9ynsX7KysqQZ
fiQxMZFiY2PF83ANNnugHTt2yOfsjTivZtyD1+sVz8T7t2zZQl9//bV8Z/Xq
1bRq1SpasWIFrVy5Ul6XLVtGS5cupcWLF9PChQuDbcGCBdK+/PJLmj9/Pn3x
xRfS5s2bR//617/kldvcuXOD7fPPP5f22Wef0aeffirN/H727NmW148//lje
f/LJJ/JqNN5nfMbHzJo1S175M6MZ3zU+52Pc9pv1W6tlbIfTMj63a5m/25iW
+Zwt0TI+a4kWN+O5N1fL7Z4i0XJ79pFosU4kWsb3m9Ky/z3Yn3FrtMzfa0zL
/lt831rG/n8XLfszCKdlPs5Ny/gN21LLftz3oWVudi3jubrpmPe7HWP+mzf+
W4uGVnOvy+0ezZ9HquW2z943NaUV7rm3h5Zb39YSLbd+2bxt9Onc5syZ4+jr
+T17Ad5n+ALDJxjegX0EN/YVhs8wvMeiRYuk8TZ7E8OnLF++XBr7F/Yya9as
obVr19KGDRukxmj79u0UHx8vvig5OVkaeyNuRvzo/wPl3NlW
    "], {{0, 387.}, {438., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{234.75, Automatic},
  ImageSizeRaw->{438., 387.},
  PlotRange->{{0, 438.}, {0, 387.}}]], "Input",
 CellID->158548638,ExpressionUUID->"d088023b-cafa-5d4a-9b30-83fc407070bf"]
}, Open  ]],

Cell[TextData[{
 "If you choose to save the connection, you can simply use ",
 ButtonBox["ServiceConnect",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/ServiceConnect.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/ServiceConnect.html"],
 "[\[OpenCurlyDoubleQuote]IBMQ\[CloseCurlyDoubleQuote]] the next time that \
you want to connect on the same system."
}], "Text",
 CellChangeTimes->{{3.94093751190857*^9, 3.940937523595108*^9}},
 CellID->243253306,ExpressionUUID->"e6cc6ca8-1d1f-f244-b9d1-280b1879d85e"],

Cell[CellGroupData[{

Cell["To make sure you are connected, request your account info:", "Text",
 CellChangeTimes->{{3.940938909854051*^9, 3.940938935240652*^9}},
 CellID->76120046,ExpressionUUID->"d3f9ab20-80f8-0647-9ebf-14584d7844eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<Account\>\"", "]"}], "[", 
  RowBox[{"3", ";;", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.940938940884995*^9, 3.940938946722798*^9}, {
  3.940938977466183*^9, 3.94093899001746*^9}, {3.940939031310812*^9, 
  3.9409390348373137`*^9}, {3.940939082029654*^9, 3.940939083513138*^9}},
 CellLabel->"In[15]:=",
 CellID->384436077,ExpressionUUID->"916b67e7-b7f7-1840-87f7-87b9e1f48c7e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "userType" -> "Standard", "firstName" -> "Sebastian", "lastName" -> 
       "Rodriguez", "institution" -> "Wolfram Research"|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[179.20000000000002`]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "firstName", "institution", "lastName", "userType"]], 
       TypeSystem`Atom[String], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[179.20000000000002`]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "firstName", "institution", "lastName", "userType"]], 
       TypeSystem`Atom[String], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["userType", 
                  Style[
                  "userType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["userType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["userType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Standard", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["userType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["firstName", 
                  Style[
                  "firstName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["firstName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["firstName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Sebastian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["firstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lastName", 
                  Style[
                  "lastName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["lastName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lastName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Rodriguez", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["institution", 
                  Style[
                  "institution", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["institution"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["institution"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Wolfram Research", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["institution"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{311.70000000000005`, {59.8544921875, 65.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{311.70000000000005`, {59.8544921875, 65.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.940938950056002*^9, {3.9409389834255543`*^9, 3.940938991402907*^9}, {
   3.940939032293738*^9, 3.940939035441307*^9}, 3.940939084054825*^9},
 CellLabel->"Out[15]=",
 CellID->556924449,ExpressionUUID->"859e29ea-e509-2242-8c9f-3b096d43dc7c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If the outcome was not what you expected, it means you are not connected. Try \
repeating the same steps.\
\>", "Text",
 CellChangeTimes->{{3.940939183037155*^9, 3.940939229660567*^9}},
 CellID->34648820,ExpressionUUID->"06c27415-a62e-c344-aa1e-e984524aed6b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Amazon Braket Connection", "Subsection",
 CellChangeTimes->{{3.9410233715341587`*^9, 3.941023392813315*^9}, 
   3.941023471086067*^9},
 CellID->286395207,ExpressionUUID->"6370f11f-5070-bd44-8d00-27a9cdfd9739"],

Cell["\<\
Let\[CloseCurlyQuote]s jump in and explore how to utilize the power of Amazon \
Braket\[CloseCurlyQuote]s quantum computing resources using Wolfram Language.\
\>", "Text",
 CellID->76296984,ExpressionUUID->"950f64d3-7e83-b444-a351-1b13b74eb401"],

Cell[CellGroupData[{

Cell["\<\
Connect to AWS using your credentials (using your access key ID and secret \
access key) so the following code will evaluate correctly in your own \
notebook.\
\>", "Text",
 CellChangeTimes->{
  3.940937380805325*^9, {3.94102334777326*^9, 3.941023349140819*^9}, 
   3.94102389694874*^9, {3.941023928910225*^9, 3.941023944782238*^9}, 
   3.941024620229954*^9},
 CellID->198476487,ExpressionUUID->"2fc6a2e6-03d8-0241-9199-8060cef48f62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"aws", "=", 
  RowBox[{"ServiceConnect", "[", 
   RowBox[{"\"\<AWS\>\"", ",", "\"\<New\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907675995307843*^9, 3.907676008018921*^9}, {
  3.907936237974274*^9, 3.907936239695857*^9}, {3.913640177285644*^9, 
  3.913640196727107*^9}, {3.9136566577798357`*^9, 3.913656672841668*^9}, {
  3.94093738563089*^9, 3.940937392275877*^9}, {3.941023951121626*^9, 
  3.941023955315499*^9}},
 CellLabel->"In[6]:=",
 CellID->175296243,ExpressionUUID->"f2c102b8-444b-f845-aa2b-db50cc4fa2a2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-503cb4e9ab82c1c27e419fd5b1acfb94"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-503cb4e9ab82c1c27e419fd5b1acfb94"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject["AWS", "ID" -> "connection-503cb4e9ab82c1c27e419fd5b1acfb94"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940937498731636*^9, 3.940938843258087*^9, 
  3.9410246037797203`*^9, 3.941644364831272*^9, 3.9417122263061275`*^9},
 CellLabel->"Out[6]=",
 CellID->11060011,ExpressionUUID->"a6500326-5bf2-2c4c-b118-1433fd1f6e1d"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "If you choose to save the connection, you can simply use ",
 ButtonBox["ServiceConnect",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/ref/ServiceConnect.html"], 
    None},
  ButtonNote->
   "https://reference.wolfram.com/language/ref/ServiceConnect.html"],
 "[\[OpenCurlyDoubleQuote]AWS\[CloseCurlyDoubleQuote]] the next time that you \
want to connect on the same system."
}], "Text",
 CellChangeTimes->{{3.94093751190857*^9, 3.940937523595108*^9}, {
  3.941647400120994*^9, 3.941647400461643*^9}},
 CellID->25792858,ExpressionUUID->"a2e1ab00-736c-ac4e-ae6a-52992329fb2e"],

Cell[TextData[{
 "For more details on this step,  such as the creation of credentials files, \
refer to the Wolfram documentation page \[OpenCurlyDoubleQuote]",
 ButtonBox["Authenticate with Amazon Web Services",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://reference.wolfram.com/language/workflow/\
AuthenticateWithAmazonWebServices.html"], None},
  ButtonNote->
   "https://reference.wolfram.com/language/workflow/\
AuthenticateWithAmazonWebServices.html"],
 ".\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{
  3.9416444544570084`*^9, {3.941712881156246*^9, 3.941712887187769*^9}},
 CellID->151559412,ExpressionUUID->"09cac4a0-538b-d44c-bc60-4f977609ec54"],

Cell[CellGroupData[{

Cell[TextData[{
 "Execute S3 on AWS (if you do not have an account set up with S3, you will \
need to ",
 ButtonBox["create one",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://s3.console.aws.amazon.com/"], None},
  ButtonNote->"https://s3.console.aws.amazon.com/"],
 "):"
}], "Text",
 CellChangeTimes->{{3.941024735048876*^9, 3.941024735049879*^9}},
 CellID->102176501,ExpressionUUID->"2e5c7891-ccac-d64f-a556-5e8ce04c8818"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s3", "=", 
  RowBox[{"ServiceExecute", "[", 
   RowBox[{"aws", ",", "\"\<GetService\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<S3\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865774367881744*^9, 3.865774386332152*^9}, 
   3.8657891959118233`*^9, {3.88982498998709*^9, 3.889824991635024*^9}},
 CellLabel->"In[203]:=",
 CellID->786869830,ExpressionUUID->"5bdbd36f-9843-3844-b386-722d01139f81"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], {
               FaceForm[{
                 RGBColor[0.20017114700000005`, 0.6704682716, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                75.00000299999999}, {0., 75.00000299999999}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 34.997}, {
                 56.089, 35.734}, {56.187999999999995`, 36.472}, {56.287, 
                 37.209}, {57.242999999999995`, 36.638}, {58.988, 35.784}, {
                 59.440999999999995`, 34.643}, {58.471, 34.243}, {
                 56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                 36.297999999999995`, 41.976}, {36.297999999999995`, 
                 41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                 35.672999999999995`, 42.196}, {36.297999999999995`, 42.38}, {
                 36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                 "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                 "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                 "]}]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}, AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 75.}, {0., 75.}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-e79061221e4659a3036be9f8619f20a3"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {
                  58.12141256332397, {0.101367189735174, 
                   6.4030274849385025`}}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], {
               FaceForm[{
                 RGBColor[0.20017114700000005`, 0.6704682716, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                75.00000299999999}, {0., 75.00000299999999}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 34.997}, {
                 56.089, 35.734}, {56.187999999999995`, 36.472}, {56.287, 
                 37.209}, {57.242999999999995`, 36.638}, {58.988, 35.784}, {
                 59.440999999999995`, 34.643}, {58.471, 34.243}, {
                 56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                 36.297999999999995`, 41.976}, {36.297999999999995`, 
                 41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                 35.672999999999995`, 42.196}, {36.297999999999995`, 42.38}, {
                 36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                 "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                 "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                 "]}]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}, AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 75.}, {0., 75.}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-e79061221e4659a3036be9f8619f20a3"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-S3", "ID" -> "connection-e79061221e4659a3036be9f8619f20a3"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.941025315291914*^9, 3.941644849679771*^9},
 CellLabel->"Out[203]=",
 CellID->631027603,ExpressionUUID->"8e29019e-b68e-694b-84b3-b8c25c1070bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execute Amazon Braket on AWS:", "Text",
 CellID->26093945,ExpressionUUID->"54fce184-ecf9-af42-9a19-ead1e9061984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "=", 
  RowBox[{"ServiceExecute", "[", 
   RowBox[{"aws", ",", "\"\<GetService\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "\[Rule]", "\"\<Braket\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865707602545459*^9, 3.865707608847895*^9}, 
   3.865774397961965*^9, 3.865789198261116*^9, {3.889824993362844*^9, 
   3.889824994869852*^9}},
 CellLabel->"In[204]:=",
 CellID->907743533,ExpressionUUID->"cf5371ad-c5b9-4e44-bb51-1ad6009d2cc8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], {
               FaceForm[{
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                35.}, {0.015000999999999999`, 35.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                 "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                 "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                 "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                 "]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                "]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                "]]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}, 
             AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 35.}, {0., 35.}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-0f3ba7152a45f0ac3555afba59fcb0a3"]], 
                   "Connected", "Not Connected"], StandardForm], 
                 ImageSizeCache -> {
                  58.12141256332397, {0.101367189735174, 
                   6.4030274849385025`}}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], {
               FaceForm[{
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                35.}, {0.015000999999999999`, 35.}}}]}, {
               FaceForm[{
                 RGBColor[1., 1., 1.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
                 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                 "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                 "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                 "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                 "]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                "]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                "]]}}, 
             MetaInformation -> {
              "SourceFile" -> 
               "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}, 
             AspectRatio -> Automatic, ImageSize -> 32, 
             PlotRange -> {{0., 35.}, {0., 35.}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-0f3ba7152a45f0ac3555afba59fcb0a3"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-Braket", "ID" -> "connection-0f3ba7152a45f0ac3555afba59fcb0a3"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.9410259283696823`*^9, 3.941644850548628*^9},
 CellLabel->"Out[204]=",
 CellID->879988704,ExpressionUUID->"35b5f917-d536-2f4d-a224-a2bfff04c727"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
At this point, you will be connected to Amazon Braket and able to run quantum \
algorithms on both simulators and QPUs. To make sure you are connected, \
request devices info:\
\>", "Text",
 CellChangeTimes->{{3.941647374366993*^9, 3.94164738595096*^9}},
 CellID->9436521,ExpressionUUID->"b104cb1a-9a7f-c64b-a1e1-ade114b26903"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"braket", "[", 
   RowBox[{"\"\<SearchDevices\>\"", ",", 
    RowBox[{"\"\<Filters\>\"", "->", 
     RowBox[{"{", "}"}]}]}], "]"}], "[", 
  RowBox[{"\"\<Devices\>\"", ",", "All", ",", 
   RowBox[{"2", ";;", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.865707821433438*^9, 3.865707869026066*^9}, {
   3.8657081592162037`*^9, 3.865708205794214*^9}, {3.86570825609596*^9, 
   3.865708285748803*^9}, {3.865708326790202*^9, 3.865708328970191*^9}, {
   3.865774806162451*^9, 3.865774807117334*^9}, {3.888435915940866*^9, 
   3.888435916132867*^9}, 3.893948364219071*^9, 3.94164735546945*^9},
 CellLabel->"In[273]:=",
 CellID->350271637,ExpressionUUID->"b1f4f2da-e287-d447-ac67-becd12fdda9c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DeviceName" -> "Aria 1", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Harmony", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "RETIRED"|>, <|
       "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", "DeviceType" -> 
        "SIMULATOR", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Aria 2", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "OFFLINE"|>, <|
       "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", "DeviceType" -> 
        "SIMULATOR", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "RETIRED"|>, <|
       "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", "DeviceType" -> 
        "SIMULATOR", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Forte 1", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceName"} -> 
        1, {All, "ProviderName"} -> 1, {All, "DeviceType"} -> 
        1, {All, "DeviceStatus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5]|>], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceName", "ProviderName", "DeviceType", "DeviceStatus"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]]}], 9], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceName"} -> 
        1, {All, "ProviderName"} -> 1, {All, "DeviceType"} -> 
        1, {All, "DeviceStatus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5]|>], 
          DirectedInfinity[1], 4, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceName", "ProviderName", "DeviceType", "DeviceStatus"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]]}], 9], 
     "Path" -> {}, "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 4, 
     "DataRowCount" -> 9, "DataColumnCount" -> 4, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Aria 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QuEra", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Aria 2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Forte 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{430.6, {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{430.6, {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.941025913398319*^9, 3.941025939937935*^9}, 
   3.941645152223173*^9, 3.9416475191609726`*^9},
 CellLabel->"Out[273]=",
 CellID->325585479,ExpressionUUID->"b270a675-f54b-bf46-9992-c4e288e42243"]
}, Open  ]]
}, Open  ]],

Cell["\<\
If the outcome was not what you expected, it means you are not connected. Try \
repeating the same steps.\
\>", "Text",
 CellChangeTimes->{{3.940939183037155*^9, 3.940939229660567*^9}},
 CellID->70968122,ExpressionUUID->"53a623ed-bdff-804f-a55e-9b025a17e7f7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBM-Quantum", "Section",
 CellChangeTimes->{{3.940939258185059*^9, 3.940939267695767*^9}},
 CellID->297314092,ExpressionUUID->"3a3d9eb9-7e03-8540-8a8f-25dedcdb679b"],

Cell[CellGroupData[{

Cell["Using your token, you can connect to IBM-quantum:", "Text",
 CellChangeTimes->{3.94093934101672*^9},
 CellID->627470884,ExpressionUUID->"23261bcd-c76d-0743-b30a-c4df2f82de92"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "=", 
  RowBox[{"ServiceConnect", "[", "\"\<IBMQ\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.9409393555063763`*^9, 3.9409393573815002`*^9}},
 CellLabel->"In[1251]:=",
 CellID->154129702,ExpressionUUID->"4886ae32-bf5b-e94b-b1cf-4e6f5173652c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
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
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
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
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd416fefc57295d58fdae00998b8667b"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1:eJzs3U2OZMuWnueln4aglqagWahpaqpLQQMgoRKhTgkoChDUWyPQlGxo1HWe
ykoPP+6RHm5773eZ2fsAHwESxbrbvrXMc3tGnHP/x//wf/27/+O/joj/9N/9
4//4d//+//mf/+Vf/v3/+7/+D//4v/xv//yf/s//+M//9L//L//8f//Tf/yn
f/mf/sN/84//x/yvIv6//z7ivw1JkiRJknSh9o/kQ/o/8p+B9CfP0o4+sCRJ
kiRJkiRJkiRJkiRJ0sJafP1dTOJ3Qo/K/TkkSZIkSZIkSZIkSZIkSZJ21mKN
3w/99PdJ20h5kiRJkiRJkiRJkiRJkiRJhWXs9zuiP/1dUkmSJEmSJEmSJEmS
JEmSpBll+Hui/h6pJEmSJEmSJEnSWuifI5nzf04nfg6mZnr8/ln2LS2kn8vg
d3k0eXAn0tla8PdmJJJqa/HXn423d0X682Kl9PCdW5IkSZIkSZIkqQr6Z0fm
3GTohp6DmTMZ/mxbf5bB7+oRkWbSg78z3jdpLS3W+TN9lmT4ni1JkiRJkiRJ
kkShf1Zkzv9ZnPg5mHWS4b3SVxn8Xh6129IMWvD3ZTSSamixzp/jsyfD3yGV
JEmSJEmSJEm6Ev3zIXP+z9/Ez8Gsmwx/xr27DH4Pj0o7tBnpHD34uzIaSayM
NT5LVkwPv8NKkiRJkiRJkiRdgf65kDk3Gbqh52D2SIa/d7ejDH73jko/thrp
cBn8PTkikq7Xwt8VnS0ZvltLkiRJkiRJkiSdhf5ZkDn/Z23i52D2S4Y/595F
Br9vR6YdWY50MPp+HBVJ18nw90Vnz21+LSRJkiRJkiRJknQk+mdA5txk6Iae
g9k3PbyHq8vg9+zonZUqyuDvx1GRdL4M/q6b45MhSZIkSZIkSZKkI9A/9zH+
XO0K9ByMuSVDK8rgd+votAP7kY5C34sjI+k8GfwdN+cnQ5IkSZIkSZIkSSPo
n/cYf552BXoOxtwnQyvJ4Hfq6PQjC5IOkMHfiyMj6XgZ/N021+c2d0mSJEmS
JEmSJP0c/XMe48/RrkDPwZhnydAKMvhdOiPtuIqkYfR9ODqSjpPB32nDJ0OS
JEmSJEmSJEk/Qf98x/jzsyvQczDmu2RoZhn8Dp2RfmBH0ogM/j4cHUnjMvi7
bOqlhSRJkiRJkiRJkt5B/1zHnJsM3dBzMOZP6eHPuWeVwe/PWWmHtSR9pgV/
D86IpM+1+Ou9ib7Hpm56+A4jSZIkSZIkSZL0J/TPdMy5ydANPQdj3k0PzSaD
35szI5Fun4n0HfBeSTW0WPczwZyTHpIkSZIkSZIkSXqF/lmOOTcZuqHnYMxP
00KzyOD35czkUUVJP9SC3/+zIulnMvh7a+ZNhiRJkiRpZhn8d0u/v0qSJGlF
9Duw8TvGFeg5GPNJemgGGfyunB2JcPsMpHffOyWxWqz9WWCuSw//uSxJkiRJ
mlUG/73yiuQxdUmSJElvo9+Bjd8xrkDPwZhP08OfcVeXwe/J2cmDupLe1YLf
+zMj6c8y+Ltq1kuGJEmSJGk2Gfz3Sb+zSpIkaUX0O7DxO8YV6DkYM5oWqiqD
348rIl2pB7/z3ieJ0WL9zwDDpofv1pIkSZI0kwz+u+QVyWPqkiRJkt5GvwMb
v2NcgZ6DMUckQxVl8Lvh/mklLfh9PzuSnsvg76fZJy0kSZIkSTPI4L9DXpE8
pi5JkiTpbfQ7sPE7xhXoORhzVHqomgx+L66KdAV6z71LEuP2jkPfTbNfekiS
JEmSqsvgvz9ekTymLkmSJOlt9Duw8TvGFeg5GHNkeqiSDH4n3D2tIoPf8ysi
6bcW/J00e6eH/+5RSZIkSaosg//ueEXymLokSZKkt9HvwMbvGFeg52DM0emh
KjL4fbgy7YjSpBfo/b4qkv7Sgr+PxvxKC0mSJElSRRn8d8YrksfUJUmSJL2N
fgc2fse4Aj0HY85ID1WQwe+Ce6cVZPD7fVUk+d9Lb2omQ5IkSZJUTQb/fdHv
pJIkSVoR/Q5s/I5xBXoOxpyVHqJl8HtwddoBvUmP6L2+MtLubu8v9D005lV6
SJIkSZIqyeC/K16RPKYuSZIk6W30O7DxO8YV6DkYc2Z6iJTB74A7p9ll8Ht9
ZaRdtfB3Rs0c6SFJkiRJqiKD/554RfKYuiRJkqS30e/Axu8YV6DnYMzZ6SFK
Bj9/Im28Ounf0Pt8daQdteDvnjE/SQ/fdyRJkiSpggz+O+IVyWPqkiRJkt5G
vwMbv2NcgZ6DMVckQ4QMfvZE+gHdSTe3XaL3+epIu2nB3ztjPk0LSZIkSRIp
g/9ueEXymLokSZKkt9HvwMbvGFeg52DMVWmhq2Xwc3ffNKsW/B4TkXbSgr9z
xoymhSRJkiSJksF/L7wieUxdkiRJ0tvod2Djd4wr0HMw5sq00JUy+JmTkUb0
4HfYeyOdpwV/34w5Ki0kSZIkSYQM/jvhFclj6pIkSZLeRr8DG79jXIGegzFX
poeulMHPnEyOFqhtteD3l4q0gxb8XTPm6LSQJEmSJF0tg/8+eEXymLokSZKk
t9HvwMbvGFeg52DM1emhq2Tw86YjfeL2OUXvrndGOkcL/p4Zc1ZaSJIkSZKu
lMF/F7wieUxdkiRJ0ttyktDv6o/pBTp5Jy10Q++LMURa6AoZ/Kzp5GCH2k8L
fm/JSCtrwd8xY85OC0mSJEnSVTL474FXJI+pS5IkSVoO/a7uu/vc6H0xhorO
l8HPuUKkn+jB76z3RTpeC/5+GXNVWkiSJEmSrpDBfwe8InlMXZIkSdJy6Hd1
393nRu+L+3OtfBJ65lT65zXqTRn8nCskx2rURlrw+0pHWlEL/m4Zc3VaSJIk
SZLOlsF//7sieUxdkiRJ0nLod3Xf3edG74v7U0vGPn/PcEs7oDO9lsHPuEqk
d9B7WiHSalrw98oYKi0kSZIkSWfK4L/7XZE8pi5JkiRpOfS7uu/uc6P3xf2p
LWPt/87kflhTeiaDn3GV5FCT2kEGv6cVIq2kBX+njCHTQ5IkSZJ0pgz+u98V
yWPqkiRJkpZDv6v77j43el/cn3lkrPk7pHlcRXqQwc+3UtpImVoevZ9VIq2k
B3+njKHTQ5IkSZJ0lgz+e98VyWPqkiRJkpZDv6v77j43el/cnzll8LtyZHSO
DH62ldKH2tTKMvj9rBJpFbfPfPo+GVMlPSRJkiRJZ8jgv/NdkTymLkmSJGk5
9Lu67+5zo/fF/ZlbBr8z7l1dGfxsq6UN9Kl10XtZKdIKevB3yZhqyZAkSZIk
HS2D/77nd0pJkiSJQ7+r++4+N3pf3J819OB3ZzQ6XgY/12rpI4VqSRn8XlaK
NLsW/D0ypmpaSJIkSZKOlMF/17sieUxdkiRJ0nLod3Xf3edG74v7s44W/P64
e7Vk8HOtmPZ5pVoQvY/VIs2sBX+HjKmeFpIkSZKko2Tw3/OuSB5TlyRJkrQc
+l3dd/e50fvi/qynB79Hn0bHyuBnWjF9oFOtZebPy7MizYy+P8bMkB6SJEmS
pKNk8N/zrkgeU5ckSZK0HPpd3Xf3udH74v6sqQW/S+4fL4OfadW0j1vVKlrw
e1gx0qx68PfHmFnSQ5IkSZJ0hAz+O94VyWPqkiRJkpZDv6v77j43el/cn3W1
4Pfpk+g4Gfw8q6Z/XqsWcdsBeg8rRppRBn93jJktLSRJkiRJozL473dXJI+p
S5IkSVoO/a7uu/vc6H1xf9bWgt8pd5CTwc+zcvLTYjW9Fvz+VY00mxb8vTFm
1kiSJEmSxmTw3+2uSB5TlyRJkrQc+l3dd/e50fvi/qyvBb9XP0k/pYU9ZfDz
rB7t6fY5Q+9e1Uiz8T4b83l6SJIkSZJGZPDf7a5IHlOXJEmStBz6Xd1397nR
++L+7KEFv1s/STujhA1l8LOsnvywW82rBb93lSPNJIO/M8bMngxJkiRJ0qcy
+O91fneUJEmSOPS7uu/uc6P3xf3ZRwt+v9zDa2Xws5wh2ksPfucqR5pFC/6+
GLNKWkiSJEmSPpHBf6e7InlMXZIkSdJy6Hd1393nRu+L+7OXDH7H3o3GZfBz
fPx8qfZMfu7tJYPft1/p//o8vcCz3EeaRbW7Y8zM6SFJkiRJ+kQG/53uiuQx
dUmSJEnLod/VfXefG70v7s9+evB79k7aSeffSQY/x/tUfa77Z9Pa6D179hmX
BZ7Fu6DZZPB3xZjVkiFJkiRJ+qkM/vuc3xklSZIkDv2u7rv73Oh9cX/2RO+Z
u3iNDH6O97lHP4v7tp8Mfs9+pRd9rsd7KlXUgr8nxqwaSZIkSdLPZPDf5a5I
HlOXJEmStBz6Xd1397nR++L+7CmD37V3ojEZ/AxfzbPas93S3q9WE6L369Wu
ZYHneXVPpYp68PfEmFXTQ5IkSZL0Exn8d7krksfUJUmSJC2Hflf33X1u9L64
P/vqwe/bn9LOOvwmMvgZ3ucR/TyP6W83q9lk8Pv1as8qPduzeypVksHfEWNW
TwtJkiRJ0rsy+O9xVySPqUuSJElaDv2u7rv73Oh9cX/21YLfN/fxXBn8DO9T
/fluae9Vq8nQe/XdjmWBZ/runkqV0PfDmF0iSZIkSXpPBv8d7orkMXVJkiRJ
y6Hf1X13nxu9L+7P3nrwO/dd+nlH30IGP8P7PEM/kzu3vgx+r77br0rP9+qe
ShXc7g99P8zv3OaRT/In7cX/P/o85mvyb5OTJEmSJD2TwX+H83uiJEmSxKHf
1X13nxu9L+7P3lrwO/en6HMZ/Pz+NMtqz3hL+3O1mkQLfp/+tFtZ4Ln+dE8l
Wgv+buyc/Ne074Z0oBb+PmmFSJIkSZL+LIP//nZF8pi6JEmSpOXQ7+q+u8+N
3hf3R/TO/SnttJOvL4Of331eoZ/rMf2PzWoWt1nS+/SnvcoCz/bOPZVIle7y
Dsmo950go97n5erpb8xFkiRJknaXwX9/uyJ5TF2SJEnScuh3dd/d50bvi/uj
DH7v3MlzZPDzu88sz3lL+75aTaAFv0fv7FQWeLZ37qlEacHfix2SMc+ffS3q
fXaumvbOQCRJkiRpYz34725XJA/qS5IkSVoN/a7uu/vc6H1xf3RD7507eY4M
fn73+Q79bI/pf3he1XebIb1H7+xTFni+d++pRKh0l1dLxvy/F9jCHTkz/e1J
SJIkSdKe6O9tVyUP6kuSJElaDf2u7rv73Oh9cX9004Pfve+iz2Tws3t3jtWe
9Zb2h2dWXS34/Xl3l7LA8717T6WrteDvxIrJ90cwlQy+2xXT3h+BJEmSJG2H
/s52VfKgviRJkqTV0O/qvrvPjd4X90c3GfzufRd9JoOf3U/mSD+fu7eOHvzu
/Er/w7NmgWd051UVfR9WS/6o/Xll8F2vlP6j9iVJkiRpHy3472xXJQ9pTJIk
SVoP/a7uu/vc6H1xf3TTgt+979LOOvjiMvjZ3We25/UzcU4t+L2Zee+lKjL4
+7BK8kfNryOD736VtB81L0mSJEl7yOC/r12VPKQxSZIkaT30u7rv7nOj98X9
0S/07rmXx8vgZ3efd9DP+Olzq44e/M785LMrCzyn+66K6LuwQvqPW19Pi1p/
Lswad0mSJEmS/m6n75t5TGWSJEnScuh3dd/d50bvi/ujX3rw++deHiuDn919
Znxm928uGfy+zL7zUgUZ/F2YOT3890M+asHPZfa0H3YuSZIkSaujv6ddmTym
MkmSJGk59Lu67+5zo/fF/dEvGfz+vUo/79hLy+Bnd5930c858uxi0Xtyn3zz
mbPAs7rrqqYHfxdmTf+g7524W+6WJEmSJB0hg/+edmXyiNIkSZKkBdHv6r67
z43eF/dHv2Tw+/dd9HMZ/Nw+mWG15/azcQ4Z/J6ssO8SrQV/D2ZN+3Hbe2rB
z2rWtB+3LUmSJElror+fXZ08pDVJkiRpPfS7uu/uc6P3xf3RPXr/vot+LoOf
26czpJ/VHZwPvR/3yR88dxZ4XvdclfTg78FsuXXWPuh6Zy34uc2Y/kHXkiRJ
krSaDP772dXJA3qTJEmSVkS/q/vuPjd6X9wf3aP377vo5zL4uX06w2rPfkv/
4Rl0nQx+P1bZdYnUgr8Ds6V/UrT+za0/eoazRZIkSZJ21oL/XkYkx6uTJEmS
lkS/q/vuPjd6X9wf3aP377vo5zL4uY3MkH7eZ2kfnEPno/fiPvnDZ88Czzxy
T6Uj9eDvwEzpn9WsB+7dz5IftSxJkiRJa9j1O2Qe0J0kSZK0Ivpd3Xf3udH7
4v7oHr1/7uaxMvi53Wf257+lf3AOnSuD34uV9lwi0fs/U/qHHeu5W5/0TGeK
JEmSJO1o5++OOV6fJEmStCT6Xd1397nR++L+6F4Gv4Pu5nEy+Lnd5xP0Mz9L
+/AsOl4Lfh9GP6eywHOP3lPpCBn8/s+S/lnF+oNbr/RsZ0l+VrEkaUH5Imf9
udq/+c+UpJuM4z6Pnn3mtNNPoKp2/86Yww1KkrS+Fue9i7YLnl/Ha/H37xTu
xHrod3Xf3edG74v7o3sZ/A66m8fJ4Od2nxXOcEv/8Cw63m0W9D6stuMShd79
WdI/LVhvufVLz3iGuIeStI+MY37eRf15df/8ktbSYvznrkd+zmhdLeb7M/CM
5FiNkiQtJ4P9rvzrP181tGC/n/jdhEW/q/vuPjd6X9wf3cvgd9DdPE4GP7f7
fIp+7mdpA+fRMVrwe3DEZ1QWePYj7qk0IoPf/RnSP+xXP3PrmZ71DGkf9itJ
qqkF//tXVybDn6dIs2kxx++wZ/jZspIMfqeqJIealCRpfhm13w16+Of1lVrU
/36S4U5chZ617+5zo/fF/dG9DH4H3c3jZPBzu88q57ilD5xHx7jNgN6DFfdb
IlS7zxXTP25Xn3An/5z8tFxJUgkZ9b6L0PnVSfusUkknyJj73byH780zajH3
3p3556QkSbvJmPe94Pbs7eA+dpcx7z708H3uTPR8n91/zYPeF/dH9zL4HXQ3
j5PBz+0+I+hnf5Y2eCZ9rgU//6M+n7LA8x91T6VP0XtfPf3zajWAnvsMkSTN
I6Ped4/q6eHP2SRCizU/r359pqiejLl/B+Cq5EftSpI0nxZrvRf4HjomY619
+LUT7biKFPxMH5OnnlZHo/fF/dG9DH4H3c3jZPBzu89KZzniTPpcD372q+62
dLUMfu+rp33Yrca04GdfPflht7PK4Duno9cy+Pn4eaB7LdzLM/Y83x2ApkHv
FZ1KMvg+rvw8aQd0tpsMfnZmrsyA7ohODje4Nno+dHZCd02nigy+i7PTw/fQ
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
+HnS6b0Mfj/edUYGP3+z1lZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/d
SuhZ06lG74NONXofdLOg5/RYdn1aHY0+L54ffYs+o57dz2Xwe7lPv9uC399e
pduTX18Gvz/vqXrJ4M/0SGXLMDWNDP6sjVRpGeZgMvh50um9DH4/ZNk6wElt
wc/e7IhWRs+eTvvo/dCpRu+DLpsnqFfovdJl8wSvjd4P3UroWdOpRu+DTjV6
H3SzoOf0WHZ9Wh2NPi+eH31rC/6czv69cZYMfifu5xgl+P29a+v32EvI4Hfo
PVVP9JkeKX9eroE+Z6N1JRn8POn0Xga/H7JsHeCEtuDnbnZUK6NnT6d99H7o
VKP3QZfNE9Qr9F7psnmC10bvh24l9KzpVKP3QacavQ+6WdBzeiy7Pq2ORp8X
z4++lcGf09m/N86Swe/E/RxnC36Hryodn3kFGfwOvafqiT7To6Xro8/YaF1J
Bj9POr2Xwe+HLFsHOJkMfuZmR7YyevZ02kfvh041eh902TxBvULvlS6bJ3ht
9H7oVkLPmk41eh90qtH7oJsFPafHsuvT6mj0efH86FsZ/Dl9V+n21HPK4Hdy
n9rRO3xs6/u4S8jg9+g9VU/0mR4tXVsJ/oyN1NY0zfFk8DOl03sZ/H7IsnWA
EynBz9vs6FZGz55O++j90KlG74MumyeoV+i90mXzBK+N3g/dSuhZ06lG74NO
NXofdLOg5/RYdn1aHY0+L54f/YI+p57fz2TwO7lP7TL4PbrTY2Xwe3Sn6imD
P9cjlS3D1PAy+DM2UtkyzAFl8DOl03sZ/H687/2V4Gdt1qOV0bOn0z56P3Sq
0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2fVkejz4vn
R7+gz6nn9zMZ/E7u0zHoPXrfjpXB79J7qp4y+HM9UtkyTA0vgz9jI5UtwxxQ
Bj9TOr2Xwe/H+95XCX7OZr1aGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/
dCuhZ02nGr0POtXofdDNgp7TY9n1aXU0+rx4fvQL+pxe4bvjDBn8PtzN8TL4
XbrP42Twu3Sv6qkEf65HamuapkZHn6/RupoMfqZ0ei+D3w9Ztg5wAlvwczbr
1cro2dNpH70fOtXofdBl8wT1Cr1Xumye4LXR+6FbCT1rOtXofdCpRu+Dbhb0
nB7Lrk+ro9HnxfOjX2TwZ3X2744zZPD7cDd90LvM7k+4jgx+n95T9Uaf69HS
ddFna7SuJoOfKZ3ey+D3Q5atAxzcFvyMzXq2Mnr2dNpH74dONXofdNk8Qb1C
75Uumyd4bfR+6FZCz5pONXofdKrR+6CbBT2nx7Lr0+po9Hnx/OgXGfxZnf27
4wwZ/D7cTR8l3OVVZPB3092qN/pcj1ZpmqZGlcGfrZHamqY5pgx+rnR6L4Pf
D1m2DnBgJfj5mvVuZfTs6bSP3g+davQ+6LJ5gnqF3itdNk/w2uj90K2EnjWd
avQ+6FSj90E3C3pOj2XXp9XR6PPi+dEvMviz+q7S7annk8Hv4z4dawvv2BVk
8HfTe6reMvizPVLZMkwNK4M/WyOVLcMcVAY/Vzq9l8Hvxzt/vBL8bM3OaGX0
7Om0j94PnWr0PuiyeYJ6hd4rXTZP8Nro/dCthJ41nWr0PuhUo/dBNwt6To9l
16fV0ejz4vnRLzL4s+oZ/lsGv4/7dKwS5+9wO+PBFpPB303vqXrL4M/2aOl6
6DM1WqVpmmPK4OdKp/cy+P2QZesAB7UFP1uzM1oZPXs67aP3Q6cavQ+6bJ6g
XqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9IsM/qx6
hv+Wwe/jPh1vi3N3WE55qrVk8HfTe6oz0Gd7tHQtJfgzNVpXlMHPlU7vZfD7
IcvWAQ6oBD9Xs7NaGT17Ou2j90OnGr0PumyeoF6h90qXzRO8Nno/dCuhZ02n
Gr0POtXofdDNgp7TY9n1aXU0+rx4fvSLDP6seob/lsHv4z4dr8R5+9vOeaTl
ZPB303uqM9Bne7SyaZoaTQZ/pkbrijL4udLpvQx+P2TZOsAB0TM1O7OV0bOn
0z56P3Sq0fugy+YJ6hV6r3TZPMFro/dDtxJ61nSq0fugU43eB90s6Dk9ll2f
Vkejz4vnR78owZ9Vz/DfMvh93Kc+Ms7ZXznncZaTwd9N76nOkMGf75Hamqap
0dDnabSyaZrjyuBnS6f3Mvj9eO+Pk8HP9Grl4NHzoVsZPXs67aP3Q6cavQ+6
bJ6gXqH3SpfNE7w2ej90K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9Cv6
rL5r6/nQk8ng93Gf+vG7YV4Z/N30nuoMGfz5Hi1dQwn+LI1WNsxzZBn8bOn0
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
Q6dnW/B7ocr28ekPGfyeZ2r7acr9ZPAzuVoroWdNpxq9DzrV6H3QzYKe02PZ
9Wl1NPq8eH70yhb8WbzKdwQpg9+TO5P2ZfB303uqmZTg74nZVSuhb2zB72y2
bjPLH2Z9hBLj/d51pfLDPYyEntlIbY2znMHtGek5j1x2aBb07Om0j94PnZ5l
8Huh2qLP98WRlZhbCX7PM5bB7f72z97efC5rbyX0rOlUo/dBpxq9D7pZ0HN6
LLs+rY5GnxfPjx6V4M/hX229Hv5iMvhd3SfpWQZ/N72nmk0Gf1fMrlaGvpXB
723mbvMr3438ayXc05n7nA09s9EqTdMc2xb8fFdsFvSc6LSP3g+dnmXwe7H3
5bvFTYSe4cxtcc4ZyPD3y7NaCT1rOtXofdCpRu+Dbhb0nB7Lrk+ro9HnxfOj
eyX4M/hJpc/jX04Gv6v7JD3L4O+m91Qz2oK/L2ZXSt8rwe/tKm3R/h5pif/+
O0P086xY7q9nSBn83EarNMxzRCX8nZFsFvSc6LSP3g+dnpXg92Lvy3eLm8gW
/ByvUkb7mfj3/4d7YVoJPWs61eh90KlG74NuFvScHsuuT6uj0efF86N/leDP
3ydtnZ7/ijL4fd0n6VkGfze9p5pRCf6+mF2lEvoVvbsVyhdtA3wue97TbDL4
uY1Y+X2kQynBz3L1ZkHPiU776P3Q6TV6L/a+fL+2aWTwc7x6W7z+90z6c9lz
K6FnTacavQ861eh90M2CntNj2fVpdTT6vHh+9K8t+PPnGT1WBr+v+yQ9y+Dv
pvdUs8rg74zZ7G2hFrf50Ts0G6GM+WTwcxu18vNUx7AFP0ObBz0nOu2j90On
1+i92Pvy/dqmUYKfo9korYSeNZ1q9D7oVKP3QTcLek6PZden1dHo8+L5UYm5
/kxdn8vg9+XupH0Z/N30nmpmM/0OYzZaW6hVBr9HsxHKmBM9t5HbGuZKyeDn
Zv81C3pOdNpH74dOr2Xwu7HX5dutzYWeo9korYSeNZ1q9D7oVKP3QTcLek6P
Zden1dHo8+L5WVsJ/sx5PvvJ4Hd2n6RnGfzd9J5qZiX4e2M2ayV0BHqPZiOU
MSd6bjNUfh3uiTL4Odlzs6DnRKd99H7o9FoGvxt7Xb7d2lwy+FmajdBK6FnT
qUbvg041eh90s6Dn9Fh2fVodjT4vnp91leDP21W/F0aRwe/M/Un7Mvi76T3V
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
8R792ehWQs+aTjV6H3Sq0fsw61mGbug9mJFtoZ4y+B3fJ+lZBn83vadaWQn+
3pn9WgmNLoM/J3ZcGe/lAJ9v1NnMqAQ/Uzuvb2wDfN5ZmgU9Jzrto/dDp9/Q
e1u5/Hs9l0DP2Y5tD/3Z6FZCz5pONXofdKrR+zDrWYZu6D2YUW2h3jL4Pd8n
6VkGfze9p1pdCf7umX1bCc2CPit2XHtygM9Hln/MZ0Zb8HO18c5uDvCZZ2kW
9JzotI/eD51+U4Lf3arln9u5hgx+1nbOmaU/H91K6FnTqUbvg041eh9mPcvQ
Db0HM6ItdIYMftf3SXqWwd9N76n0z9/r3H4/oe+g2SeV0ExK8GfG+t+7HOAz
kuUf85kVPVfr3y/ozzxLs6DnRKd99H7o9Lst+P2tWH6wm6vwjM3f9rTVZ/Rn
pFsJPWs61eh90KlG78OsZxm6ofdgdnZb6CwZ/L7vk/Qsg7+b3lPpP7ffU+h7
aPauLTSr2+7o82N9714O8DnJ8oMZzSiDn631q8RvcoDPPkOzoOdEp330fujU
ht7fiuUni7mIEvy8ra0Sf6M/I91K6FnTqUbvg041eh9mPcvQDb0HszPbQmfK
4Hd+n6RnGfzd9J5KtdvvK/RdNHtsC82OPkP2e+V5nU9ygM9Jlh/MaFZb8PO1
49uijefi72ZBz4lO++j90KlNCX6Hq5Uf7OVKMviZW9+zSn9OupXQs6ZTjd4H
nWr0Psx6lqEbeg9mZ7WFzpbB7/0+Sc8y+LvpPZWeleDvo9m/ZegKSvBnyb6v
PK/ypRzgs5Llh3OaUQl+vnZ8rcoAzzB6s6DnRKd99H7o1K4Ev8eVyk+WcjFb
8HO379pebvI1+rPSrYSeNZ1q9D7oVKP3YdazDN3QezA7oy1EyOB3f5+kZxn8
3fSeSq+V4O+kWQldyRb8mbLP216v8aUc4POS5RezmlEJfsZ2XCWOsQ3wLCM3
C3pOdNpH74dOx9iC3+Uq5WcruZQS/Nztu8qLPb5Df1a6ldCzplON3gedavQ+
zHqWoRt6D2a920KUDH7/90l6lsHfTe+ptO/2uwx9N229ttBV3XZLny/7rG/k
AJ+XLL+c14y24Ods7W2Pi21QBniekZsFPSc67aP3Q6fjbMHvc4Xyw31cTQl+
9tbnjNKfl24l9KzpVKP3QacavQ+znmXoht6DWc+2ECmDPwP3SXqWwd9N76n0
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
5/A+Sc8y+LvpPZXGluGf25/dbeblz81IY8jg78wIZdsYm93++fQMVp7/rEr4
Hf+u21zy18FOrsQ1fv+bBT0nOu2j90Onayjx398T0Weqd3nAvOTvqP+2Bf9n
Q/QM6FZCz5pONXofdKrR+zDrWYZu6D3Y/G3x37/335L+lcGfz/skPcvg76b3
VJpHifF+blylDP7vA6QWGWv+3V62j+4QGfws3MPcMvg9jtAWfh8/KjHn+z6z
oOdEp330fuh0bfnQFvyZay2PGo7+R4n5fv84oi3G+X2UngXdSuhZ06lG74NO
NXofdGmXroRu0uyPSki/KcGf3/skPSvB3837JM2jxD/3dgv+391nbAt/7uma
Svxztuk71vv+lkOmdZwS/O9xZLfn1zFKXP8O+518vBL8z4HHZpGLp325eNIr
OXDlh+fRZzKu/+dPedCsjpSLt5JcPNVy8VTLxZMkSZIkSX8r8c+/R1/9z/Fb
/vw/w79H0loyrvMzYQv/rFDryf+Nvn/eaUmSJN2UuNbvpxn+OZEkSZIkSZIk
6VpKXPt9k2+SNOfPg38/s6Rr/O9DMrzTkiRJV1Fivt9Pt/BdUUmSJEmSJEnS
ejL4P6MnkvQsY7yfCf9+Jkl/KzHmPf63LbzTkiRJKykx3nuk//5OWjo9syRJ
kiRJkiRJM8jg/8yeSNJnMs55D+3+n1P6PpK0nLzrjL+zv//nlZ4PJkmSpOlk
nPO76Rb+TipJkiRJkiRJ0jsZ/DucRJKOUaL+e7+/Kqd9MknfKPHdXc7TPpkk
SZJWk18mSZIkSZIkSZK+k8G/w+l7o5IkSZIkSZIkSZIkSZIkSf1l8O9w+t6o
JEmSJEmSJEmSJEmSJElSfxn8O5y+NypJkiRJkiRJkiRJkiRJktRfBv8Op++N
SpIkSZIkSZIkSZIkSZIk9ZfBv8Ppe6OSJEmSJEmSJEmSJEmSJEn9ZfDvcPre
qCRJkiRJkiRJkiRJkiRJUn8Z/DucvjcqSZIkSZIkSZIkSZIkSZLUXwb/Dqfv
jUqSJEmSJEmSJEmSJEmSJPWXwb/D6XujkiRJkiRJkiRJkiRJkiRJ/WXw73D6
3qgkSZIkSZIkSZIkSZIkSVJ/Gfw7nL43KkmSJEmSJEmSJEmSJEmS1F8G/w6n
741KkiRJkiRJkiRJkiRJkiT1l8G/w+l7o5IkSZIkSZIkSZIkSZIkSf2V4N/h
9L1RSZIkSZIkSZIkSZIkSZKkc9DvcPreqCRJkiRJkiRJkiRJkiRJ0jnodzh9
b1SSJEmSJEmSJEmSJEmSJOkc9DucvjcqSZIkSZIkSZIkSZIkSZJ0DvodTt8b
lSRJkiRJkiRJkiRJkiRJOgf9DqfvjUqSJEmSJEmSJEmSJEmSJJ2DfoeTKCdN
kiRJkiRJkiRJkiRJkiSpBf0Op32eJEmSJEmSJEmSJEmSJElSiwz+fUjzvVFJ
kiRJkiRJkiRJkiRJktRfBv8+pPneqCRJkiRJkiRJkiRJkiRJ6i+Dfx/SfG9U
kiRJkiRJkiRJkiRJkiT1l8G/D2m+NypJkiRJkiRJkiRJkiRJks5Bvw9pvjcq
SZIkSZIkSZIkSZIkSZLOQb8Pab43KkmSJEmSJEmSJEmSJEmSzkG/D2m+NypJ
kiRJkiRJkiRJkiRJks6Rwb8Tab43KkmSJEmSJEmSJEmSJEmS+svg34k03xuV
JEmSJEmSJEmSJEmSJEn9leDfiTTfG5UkSZIkSZIkSZIkSZIkSeeg34k03xuV
JEmSJEmSJEmSJEmSJEnn2IJ/L9J8b1SSJEmSJEmSJEmSJEmSJPWXwb8Xab43
KkmSJEmSJEmSJEmSJEmS+ivBvxdpvjcqSZIkSZIkSZIkSZIkSZLOQb8Xab43
KkmSJEmSJEmSJEmSJEmSzpHBvxtpvjcqSZIkSZIkSZIkSZIkSZL6K8G/G2m+
NypJkiRJkiRJkiRJkiRJks5BvxtpvjcqSZIkSZIkSZIkSZIkSZLOkcG/H2m+
NypJkiRJkiRJkiRJkiRJkvorwb8fab43KkmSJEmSJEmSJEmSJEmSzrEF/46k
+d6oJEmSJEmSJEmSJEmSJEnqrwT/jqT53qgkSZIkSZIkSZIkSZIkSToH/Y6k
+d6oJEmSJEmSJEmSJEmSJEk6Rwb/nqT53qgkSZIkSZIkSZIkSZIkSTrHFvy7
kuZ7o5IkSZIkSZIkSZIkSZIkqb8S/LuS5nujkiRJkiRJkiRJkiRJkiTpHFvw
70ua741KkiRJkiRJkiRJkiRJkqT+SvDvS5rvjUqSJEmSJEmSJEmSJEmSpHNk
8O9MmiRJkiRJkiRJkiRJkiRJ0jm24N+bXD1JkiRJkiRJkiRJkiRJkqQzlODf
m1w9SZIkSZIkSZIkSZIkSZKks5Tg351cOUmSJEmSJEmSJEmSJEmSpDNtwb8/
uWqSJEmSJEmSJEmSJEmSJEln891R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuV
JEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmS
JEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmSJEmSJEmSJEnr8N1R3xuVJEmSJEmS
JEmSJEmSJEnryODfrbxykiRJkiRJkiRJkiRJkiRJIynBv1951SRJkiRJkiRJ
kiRJkiRJkka0Bf+e5dWSJEmSJEmSJEmSJEmSJEkaVQnfH/W9UUmSJEmSJEmS
JEmSJEmStJIM/p3LKyRJkiRJkiRJkiRJkiRJkjSLDP7dy5mTJEmSJEmSJEmS
JEmSJEmaTQb/DuaMSZIkSZIkSZIkSZIkSZIkzSr/f1vw72POkiRJkiRJkiRJ
kiRJkiRJ0uxK+N8g9b1RSZIkSZIkSZIkSZIkSZK0mhK+Q+p7o5IkSZIkSZIk
SZIkSZIkaUUZvkfqe6OSJEmSJEmSJEmSJEmSJGlF+b9twb/H6XujkiRJkiRJ
kiRJkiRJkiRJ58uH6Hc8fW9UkiRJkiRJkiTpAP8PV6WNNA==
               "], {{0, 384.}, {2702., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {2702., 384.}, 
             PlotRange -> {{0, 2702.}, {0, 384.}}], 
            GridBox[{{
               TagBox["\"IBMQ\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd416fefc57295d58fdae00998b8667b"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject["IBMQ", "ID" -> "connection-bd416fefc57295d58fdae00998b8667b"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940958409505605*^9, 3.9418123634376354`*^9},
 CellLabel->"Out[1251]=",
 CellID->78469484,ExpressionUUID->"828bb0f3-59c7-de4e-8ad0-4a03993eddfd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
ServiceConnect with IBM-Quantum offers the following options:\
\>", "Text",
 CellChangeTimes->{{3.9409394797311788`*^9, 3.940939543354567*^9}, 
   3.940942117840626*^9},
 CellID->3588496,ExpressionUUID->"ab3901f0-bb0d-a744-8115-0d20c26ed590"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "[", "\"\<Requests\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940940041600622*^9, 3.940940064824274*^9}},
 CellLabel->"In[17]:=",
 CellID->635210,ExpressionUUID->"9a5caeb8-e587-9342-b717-290a545414cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Account\"\>", ",", "\<\"Authentication\"\>", 
   ",", "\<\"Backend\"\>", ",", "\<\"BackendQueue\"\>", 
   ",", "\<\"Backends\"\>", ",", "\<\"Devices\"\>", ",", "\<\"ID\"\>", 
   ",", "\<\"Information\"\>", ",", "\<\"JobResults\"\>", ",", "\<\"Jobs\"\>",
    ",", "\<\"JobStatus\"\>", ",", "\<\"Name\"\>", ",", "\<\"RawRequests\"\>",
    ",", "\<\"RunCircuit\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.940940050176514*^9, 3.9409400650300713`*^9}},
 CellLabel->"Out[17]=",
 CellID->288462559,ExpressionUUID->"5de4f869-8103-1b4f-856f-a527e0ae2177"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Service-information options", "Subsection",
 CellChangeTimes->{{3.940942138011801*^9, 3.940942157773248*^9}},
 CellID->13392481,ExpressionUUID->"c6eea3e0-9f33-2b4d-a5b5-a25e34feb420"],

Cell["\<\
The following options are used to retrieve basic information from the service \
account:\
\>", "Text",
 CellChangeTimes->{{3.94094222062142*^9, 3.940942252198805*^9}},
 CellID->581417927,ExpressionUUID->"3896aa93-d717-1448-b6ce-394014842bc1"],

Cell[BoxData[GridBox[{
   {Cell["\"Account\"", "TableText",ExpressionUUID->
     "35ef8525-8799-be4b-b560-2358734be5aa"], Cell[
    "Retrieve account information", "TableText",ExpressionUUID->
     "e789b9bb-3363-9349-beea-ce8191a492e8"]},
   {
    StyleBox["\"\<ID\>\"", "Text"], Cell[
    "Connection ID", "TableText",ExpressionUUID->
     "8be12daf-0a3f-4b40-b69e-b085583ca9ab"]},
   {
    StyleBox["\"\<Information\>\"", "Text"], Cell[
    "Service information", "TableText",ExpressionUUID->
     "70bef5c8-f3f9-d748-aee6-c7eb250be608"]},
   {
    StyleBox["\"\<Name\>\"", "Text"], Cell[
    "Service name", "TableText",ExpressionUUID->
     "d9c1feec-97cc-af42-b702-f75f9cacda03"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.9409396574309483`*^9, 3.940939705158016*^9}, 
   3.940940070747511*^9, {3.9409401014356213`*^9, 3.940940433231935*^9}, 
   3.9409406710685825`*^9, {3.9409413355149574`*^9, 3.940941413287798*^9}, {
   3.940941453647318*^9, 3.940941486919325*^9}, {3.940941577392372*^9, 
   3.940941577392372*^9}, {3.940941699075521*^9, 3.940941699075521*^9}, {
   3.9409417412455406`*^9, 3.940941750254349*^9}, {3.940941829781388*^9, 
   3.940941849120316*^9}, {3.9409421684807587`*^9, 3.940942211992569*^9}, {
   3.941648890491682*^9, 3.9416488929979553`*^9}},
 CellID->273289839,ExpressionUUID->"c863665b-ba21-0e4d-bd04-e06da630a4f1"],

Cell[CellGroupData[{

Cell["Examples", "Subsubsection",
 CellChangeTimes->{{3.9409422825935*^9, 3.940942283499851*^9}, {
  3.9409427652748566`*^9, 3.940942766549621*^9}},
 CellID->228194309,ExpressionUUID->"370b0606-15f0-d141-b4cc-f4a5b47898bb"],

Cell[CellGroupData[{

Cell["\<\
The \"Account\" option collects the following information from your account \
service:\
\>", "Text",
 CellChangeTimes->{{3.940942307422713*^9, 3.940942323968599*^9}, {
  3.940942357213859*^9, 3.940942364364559*^9}},
 CellID->31737247,ExpressionUUID->"4e6f45fb-7d8b-474a-89fe-687ba69bdadb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<Account\>\"", "]"}], "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.9409422874299145`*^9, 3.940942300786569*^9}},
 CellLabel->"In[40]:=",
 CellID->35478333,ExpressionUUID->"bb66bfed-99a7-704b-a999-07277f37cd86"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "email", "username", "userType", "firstName", "lastName", "institution",
        "citizenshipCountry", "roles", "ibmQNetwork", "qNetworkRoles", 
       "canScheduleBackends", "applications", "urls", "subscriptions", 
       "needsRefill", "needsCitizenCountry", "emailVerified", "terms", 
       "loginAccounts", "readOnly", "id"}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       7, 3, 21, 145.60000000000002`], 21, 3, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 21], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MulticolumnShape[
       7, 3, 21, 145.60000000000002`], 21, 3, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Atom[String], 21], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 3, "DataRowCount" -> 7, "DataColumnCount" -> 3,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["email", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["username", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["userType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["firstName", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["lastName", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["institution", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["citizenshipCountry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["roles", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["ibmQNetwork", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["qNetworkRoles", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["canScheduleBackends", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["applications", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["urls", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["subscriptions", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["needsRefill", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["needsCitizenCountry", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["emailVerified", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["terms", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}, {
            Item[
             Pane[
              Annotation["loginAccounts", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                GrayLevel[0.7490196078431373], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["readOnly", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}], 
            Item[
             Pane[
              Annotation["id", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{21}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}, Frame -> {{
                Directive[
                 Dashing[{0, Small}], 
                 RGBColor[
                 0.5098039215686274, 0.5098039215686274, 0.5098039215686274]], 
                GrayLevel[0.7490196078431373]}, Inherited}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{461.80000000000007`, {100.3544921875, 105.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{461.80000000000007`, {100.3544921875, 105.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940942294557978*^9, 3.9409423014420815`*^9}},
 CellLabel->"Out[40]=",
 CellID->339885208,ExpressionUUID->"7f534e36-bcd9-f644-9410-e1b86e5c8ca7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Here is an example of the information. ",
 StyleBox["Please note that some of the output may be sensitive",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.940942372314434*^9, 3.9409424163227577`*^9}},
 CellID->669062197,ExpressionUUID->"aa219e08-ae40-ed4d-bed5-4610979d32c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<Account\>\"", "]"}], "[", 
  RowBox[{"3", ";;", "6"}], "]"}]], "Input",
 CellChangeTimes->{{3.940942263227051*^9, 3.940942274708021*^9}},
 CellLabel->"In[38]:=",
 CellID->343597553,ExpressionUUID->"f186804c-0311-4e44-99b6-336a94f28767"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "userType" -> "Standard", "firstName" -> "Sebastian", "lastName" -> 
       "Rodriguez", "institution" -> "Wolfram Research"|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[179.20000000000002`]]], 4, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "firstName", "institution", "lastName", "userType"]], 
       TypeSystem`Atom[String], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[115.5], 
         TypeSystem`PackageScope`AtomShape[179.20000000000002`]]], 4, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration[
        "firstName", "institution", "lastName", "userType"]], 
       TypeSystem`Atom[String], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["userType", 
                  Style[
                  "userType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["userType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["userType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Standard", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["userType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["firstName", 
                  Style[
                  "firstName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["firstName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["firstName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Sebastian", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["firstName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["lastName", 
                  Style[
                  "lastName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["lastName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lastName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Rodriguez", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["lastName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["institution", 
                  Style[
                  "institution", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["institution"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["institution"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{115.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Wolfram Research", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["institution"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{311.70000000000005`, {59.8544921875, 65.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{311.70000000000005`, {59.8544921875, 65.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940942268640511*^9, 3.940942275628493*^9}},
 CellLabel->"Out[38]=",
 CellID->551533187,ExpressionUUID->"45a9bbbd-d05b-5948-b938-60bf2ffe67af"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Backend and Devices", "Subsection",
 CellChangeTimes->{{3.940943168916897*^9, 3.9409431729784946`*^9}},
 CellID->173768192,ExpressionUUID->"59548b2a-f618-e746-a70e-eddb2b4c9931"],

Cell["\<\
Use the following options to gather information about the available backends \
and devices in your service. You can also retrieve details for specific QPUs.\
\>", "Text",
 CellChangeTimes->{{3.940944273725851*^9, 3.940944334438898*^9}},
 CellID->343224848,ExpressionUUID->"9281332e-f118-6c43-b053-70363ea41a95"],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"\"\<Backends\>\"", "||", "\"\<Devices\>\""}], "Text"], Cell["\<\
List of backends or devices , including real QPU and simulators.\
\>", "TableText",ExpressionUUID->"0dcc89f5-1428-fc4b-a6d4-746b2e2cf80a"]},
   {
    StyleBox["\"\<Backend\>\"", "Text"], Cell[
    "Information of one specific backend ", "TableText",ExpressionUUID->
     "d3611374-27f0-9243-9ca7-5b977db34fb9"]},
   {
    StyleBox["\"\<BackendQueue\>\"", "Text"], Cell[
    "Total pending workloads (number of jobs)", "TableText",ExpressionUUID->
     "92035694-0f4f-3944-ae6f-1203d655cc4d"]},
   {
    StyleBox["\"\<Devices\>\"", "Text"], Cell[
    "List of devices, including real QPU and simulators", "TableText",
     ExpressionUUID->"2b6db3fb-87b4-3641-ae4c-75bf95b90e3a"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.9409396574309473`*^9, 3.940939705158016*^9}, 
   3.940940070747511*^9, {3.9409401014356213`*^9, 3.940940433231935*^9}, 
   3.9409406710685825`*^9, {3.9409413355149574`*^9, 3.940941413287798*^9}, {
   3.940941453647318*^9, 3.940941486919325*^9}, {3.940941577392372*^9, 
   3.940941577392372*^9}, {3.940941699075521*^9, 3.940941699075521*^9}, {
   3.9409417412455397`*^9, 3.940941750254349*^9}, {3.940941829781388*^9, 
   3.940941849120316*^9}, {3.940943205151762*^9, 3.940943228985459*^9}, 
   3.940943441585951*^9, {3.94094365368441*^9, 3.940943689713911*^9}, {
   3.940943731475674*^9, 3.940943821810116*^9}},
 CellID->11296086,ExpressionUUID->"8a82770e-5794-8144-af13-782364708372"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Gather information about the various devices and \
backends available through your service:", "Text"]], "Text",
 CellChangeTimes->{{3.940943874744959*^9, 3.940943920566181*^9}},
 CellID->177316874,ExpressionUUID->"e465d02a-dc18-c942-882b-550ec4f9d86f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<Devices\>\"", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.940943845558035*^9, 3.9409438488182797`*^9}},
 CellLabel->"In[55]:=",
 CellID->134671224,ExpressionUUID->"3ecce3c5-3e0b-2f47-96e2-3151918f10d9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"ibm-q\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"ibm_brisbane\"\>", ",", "\<\"ibm_sherbrooke\"\>", 
     ",", "\<\"ibm_kyiv\"\>"}], "}"}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.9409438504201775`*^9},
 CellLabel->"Out[55]=",
 CellID->132818558,ExpressionUUID->"1942fb4b-43a0-9641-93e1-bb0a9ff9de92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<Backends\>\"", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.940943845558035*^9, 3.94094385795944*^9}},
 CellLabel->"In[56]:=",
 CellID->319597165,ExpressionUUID->"2d6b105a-12e3-794a-80fa-5f93a1a9422a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "devices" -> {"ibm_brisbane", "ibm_sherbrooke", "ibm_kyiv"}|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`UnknownShape[False]]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], 3], 1], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[78.4], 
         TypeSystem`PackageScope`UnknownShape[False]]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Vector[
        TypeSystem`Atom[String], 3], 1], "Path" -> {}, "DisplayedRowCount" -> 
     1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 1, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["devices", 
                  Style[
                  "devices", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["devices"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["devices"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[{"ibm_brisbane", "ibm_sherbrooke", "ibm_kyiv"}, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[{"ibm_brisbane", "ibm_sherbrooke", "ibm_kyiv"}, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["devices"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["devices"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], TrackedSymbols :> {\
TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{347.4, {19.3544921875, 24.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{347.4, {19.3544921875, 24.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9409438504201775`*^9, 3.9409438598335*^9}},
 CellLabel->"Out[56]=",
 CellID->135377073,ExpressionUUID->"4f12edb3-e675-6341-9960-67f7f119b753"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Verify the pending workload of each QPU, measured by the number of jobs in \
the queue:\
\>", "Text",
 CellChangeTimes->{{3.940943944071165*^9, 3.9409440050810604`*^9}, 
   3.940944179320089*^9},
 CellID->15384857,ExpressionUUID->"1f64087e-af74-3e46-96ec-b57524ba933f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ibmq", "[", "\"\<BackendQueue\>\"", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.940943870790924*^9, 3.940943872221176*^9}, {
  3.9409439358819847`*^9, 3.9409439369972343`*^9}},
 CellLabel->"In[165]:=",
 CellID->649417660,ExpressionUUID->"3fbfaca1-a155-2746-9ef1-2ab981237e55"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "ibm_brisbane" -> 28, "ibm_sherbrooke" -> 30, "ibm_kyiv" -> 240|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["ibm_brisbane", "ibm_kyiv", "ibm_sherbrooke"]], 
       TypeSystem`Atom[Integer], 3], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[34]]], 3, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["ibm_brisbane", "ibm_kyiv", "ibm_sherbrooke"]], 
       TypeSystem`Atom[Integer], 3], "Path" -> {}, "DisplayedRowCount" -> 3, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 3, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ibm_brisbane", 
                  Style[
                  "ibm_brisbane", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ibm_brisbane"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_brisbane"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["28"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_brisbane"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ibm_sherbrooke", 
                  Style[
                  "ibm_sherbrooke", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ibm_sherbrooke"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_sherbrooke"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["30"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_sherbrooke"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ibm_kyiv", 
                  Style[
                  "ibm_kyiv", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ibm_kyiv"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_kyiv"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["240"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ibm_kyiv"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{198., {46.3544921875, 51.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{198., {46.3544921875, 51.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9409439411456795`*^9, {3.940950593431942*^9, 3.940950603830755*^9}, 
   3.940950753216671*^9, 3.9409522601602783`*^9},
 CellLabel->"Out[165]=",
 CellID->571240421,ExpressionUUID->"21b3552b-ccf6-d74f-9411-796dc75508c4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QPU Properties", "Subsubsection",
 CellChangeTimes->{{3.940944199431055*^9, 3.94094420021369*^9}, {
   3.9409442434325886`*^9, 3.940944252905041*^9}, {3.940944339367897*^9, 
   3.94094434904612*^9}, 3.9409444426230087`*^9},
 CellID->80589642,ExpressionUUID->"f45dce3d-8a94-9f4b-a3d0-0d10d2b630f4"],

Cell["\<\
ServiceConnect offers multiple options to explore different QPU backends and \
devices:\
\>", "Text",
 CellChangeTimes->{{3.9409456808316536`*^9, 3.940945699653442*^9}},
 CellID->121761759,ExpressionUUID->"9e88ba8b-f8e1-a04c-96cd-e97cb557804c"],

Cell[BoxData[GridBox[{
   {
    StyleBox["\"\<Properties\>\"", "Text"], Cell["\<\
List of backends or devices , including real QPU and simulators.\
\>", "TableText",ExpressionUUID->"5006c4cd-09fd-5340-9788-8bd77ade508c"]},
   {
    StyleBox["\"\<Configuration\>\"", "Text"], Cell[
    "Information of one specific backend ", "TableText",ExpressionUUID->
     "01fdbc81-89b2-9f40-883f-53f8a55f6f8a"]},
   {
    StyleBox["\"\<Status\>\"", "Text"], Cell[
    "Total pending workloads (number of jobs)", "TableText",ExpressionUUID->
     "7c3e0361-6402-994d-a58d-41844c915919"]},
   {
    StyleBox["\"\<Defaults\>\"", "Text"], Cell[
    "List of devices, including real QPU and simulators", "TableText",
     ExpressionUUID->"0d75df68-a4fe-7943-8fe7-407a0c45ca1f"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.9409396574309473`*^9, 3.940939705158016*^9}, 
   3.940940070747511*^9, {3.9409401014356213`*^9, 3.940940433231935*^9}, 
   3.9409406710685825`*^9, {3.9409413355149574`*^9, 3.940941413287798*^9}, {
   3.940941453647318*^9, 3.940941486919325*^9}, {3.940941577392372*^9, 
   3.940941577392372*^9}, {3.940941699075521*^9, 3.940941699075521*^9}, {
   3.9409417412455397`*^9, 3.940941750254349*^9}, {3.940941829781388*^9, 
   3.940941849120316*^9}, {3.940943205151762*^9, 3.940943228985459*^9}, 
   3.940943441585951*^9, {3.94094365368441*^9, 3.940943689713911*^9}, {
   3.940943731475674*^9, 3.940943821810116*^9}, {3.9409456096730137`*^9, 
   3.940945612031101*^9}, {3.940945650477253*^9, 3.9409456555896397`*^9}},
 CellID->906372273,ExpressionUUID->"7cd8b656-dc9f-6043-88ba-f80c4ea9c741"],

Cell[CellGroupData[{

Cell["\<\
Check the specifications of a specific QPU backend using its corresponding ID:\
\>", "Text",
 CellChangeTimes->{{3.940945261413174*^9, 3.940945306281908*^9}},
 CellID->884057198,ExpressionUUID->"cf45bab2-5dee-5a4b-82ef-e010508b5aa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpu", "=", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<Backend\>\"", ",", 
    RowBox[{"\"\<ID\>\"", "\[Rule]", "\"\<ibm_brisbane\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940944471764065*^9, 3.940944487157982*^9}, {
  3.9409446943563843`*^9, 3.940944752213375*^9}, {3.9409449135673046`*^9, 
  3.940944924391947*^9}, {3.940945078798313*^9, 3.940945088999655*^9}, {
  3.940945226226005*^9, 3.940945234894106*^9}},
 CellLabel->"In[96]:=",
 CellID->295035813,ExpressionUUID->"12317b61-235e-3e49-bf2f-0cadc2b65f16"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7672554361933347107939028853876165980080232026647678275488], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
            TypeSystem`PackageScope`AtomShape[134.4], {"backend_version"} -> 
            TypeSystem`PackageScope`AtomShape[67.2], {"gates"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"general"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"general_qlists"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"last_update_date"} -> 
            TypeSystem`PackageScope`AtomShape[224.00000000000003`], {
             "qubits"} -> TypeSystem`PackageScope`ElidedShape[1]|>, 1], 
         "InitialType" -> 
         TypeSystem`Struct[{
           "backend_name", "backend_version", "gates", "general", 
            "general_qlists", "last_update_date", "qubits"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"gate", "name", "parameters", "qubits"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "ecr", "id", "reset", "rz", "sx", "x"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 1]}], 779], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"date", "name", "unit", "value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "2024-11-18T06:17:06Z", "2024-11-18T18:19:06Z"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["", "GHz"]], 
               TypeSystem`Atom[Real]}], 385], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "qubits"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 97], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[
                  "2024-11-16T06:29:06Z", "2024-11-17T05:05:42Z", 
                   "2024-11-18T05:05:45Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["T1"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["us"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[
                  "2024-11-17T05:08:50Z", "2024-11-18T05:08:44Z", 
                   "2024-11-18T05:10:43Z", "2024-11-18T05:13:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["T2"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["us"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T18:19:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["frequency"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["GHz"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T18:19:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["anharmonicity"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["GHz"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["readout_error"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["prob_meas0_prep1"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["prob_meas1_prep0"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["readout_length"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["ns"]], 
                 TypeSystem`Atom[Integer]}]}], 127]}], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
            TypeSystem`PackageScope`AtomShape[134.4], {"backend_version"} -> 
            TypeSystem`PackageScope`AtomShape[67.2], {"gates"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"general"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"general_qlists"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"last_update_date"} -> 
            TypeSystem`PackageScope`AtomShape[224.00000000000003`], {
             "qubits"} -> TypeSystem`PackageScope`ElidedShape[1]|>, 1], 
         "Type" -> TypeSystem`Struct[{
           "backend_name", "backend_version", "gates", "general", 
            "general_qlists", "last_update_date", "qubits"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"gate", "name", "parameters", "qubits"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "ecr", "id", "reset", "rz", "sx", "x"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[String], 
                  TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], 1]}], 779], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"date", "name", "unit", "value"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[
                "2024-11-18T06:17:06Z", "2024-11-18T18:19:06Z"]], 
               TypeSystem`Atom[String], 
               TypeSystem`Atom[
                TypeSystem`Enumeration["", "GHz"]], 
               TypeSystem`Atom[Real]}], 385], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "qubits"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength]}], 97], 
            TypeSystem`Atom[String], 
            TypeSystem`Vector[
             TypeSystem`Tuple[{
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[
                  "2024-11-16T06:29:06Z", "2024-11-17T05:05:42Z", 
                   "2024-11-18T05:05:45Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["T1"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["us"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[
                  "2024-11-17T05:08:50Z", "2024-11-18T05:08:44Z", 
                   "2024-11-18T05:10:43Z", "2024-11-18T05:13:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["T2"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["us"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T18:19:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["frequency"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["GHz"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T18:19:06Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["anharmonicity"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["GHz"]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["readout_error"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["prob_meas0_prep1"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["prob_meas1_prep0"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration[""]], 
                 TypeSystem`Atom[Real]}], 
               TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["2024-11-18T05:00:23Z"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["readout_length"]], 
                 TypeSystem`Atom[
                  TypeSystem`Enumeration["ns"]], 
                 TypeSystem`Atom[Integer]}]}], 127]}], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, 
         "DataRowCount" -> 7, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["backend_name", 
                    Style[
                    "backend_name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_name"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_name"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["ibm_brisbane", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{134.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["backend_version", 
                    Style[
                    "backend_version", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_version"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_version"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["1.1.53", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_version"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["gates", 
                    Style[
                    "gates", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["gates"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["gates"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 779], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 779], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["gates"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["gates"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["general", 
                    Style[
                    "general", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["general"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["general"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 385], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 385], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["general"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["general"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["general_qlists", 
                    Style[
                    "general_qlists", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["general_qlists"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["general_qlists"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 97], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 97], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["general_qlists"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["general_qlists"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["last_update_date", 
                    Style[
                    "last_update_date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["last_update_date"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["last_update_date"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T18:19:06Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["last_update_date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["qubits", 
                    Style[
                    "qubits", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["qubits"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["qubits"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    With[{
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {332.3, {96.91904296874999, 101.68095703125}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {332.3, {96.91904296874999, 101.68095703125}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7672554361933347107939028853876165980080232026647678275488,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940944706174843*^9, 3.9409447538321476`*^9}, {
   3.9409449206446724`*^9, 3.9409449269962444`*^9}, {3.940945081817307*^9, 
   3.940945091603906*^9}, 3.940945781168768*^9},
 CellLabel->"Out[96]=",
 CellID->354705273,ExpressionUUID->"7662ceec-95ee-2a4b-9c60-8c034cca23f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Properties", "Subsubsubsection",
 CellChangeTimes->{{3.940945556241686*^9, 3.940945580423143*^9}, {
  3.940945706411553*^9, 3.940945707564421*^9}},
 CellID->157842501,ExpressionUUID->"de820ca6-2769-664e-8b4f-bb892a96fd4a"],

Cell[CellGroupData[{

Cell["\<\
In this case, the default output for an specific Backend corresponds to the \
table of properties:\
\>", "Text",
 CellChangeTimes->{{3.940945713875572*^9, 3.940945741577807*^9}},
 CellID->568154787,ExpressionUUID->"0a34fac3-75c1-f74e-b9f1-6b897acc6c05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpu", " ", "==", " ", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<Backend\>\"", ",", " ", 
    RowBox[{"\"\<ID\>\"", " ", "->", " ", "\"\<ibm_brisbane\>\""}], ",", 
    RowBox[{"\"\<Property\>\"", "\[Rule]", "\"\<Properties\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940945710867031*^9, 3.9409457122414436`*^9}, {
  3.9409457454175816`*^9, 3.9409457552555904`*^9}},
 CellLabel->"In[97]:=",
 CellID->183654778,ExpressionUUID->"a6e6c4c9-0afe-8e4f-873a-7aa7dbc8ef41"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.9409457581402855`*^9, 3.940945786021637*^9}},
 CellLabel->"Out[97]=",
 CellID->21736154,ExpressionUUID->"81675b73-67c8-7648-a5e7-a9614e1adc8a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["This are the following properties available:", "Text",
 CellChangeTimes->{{3.940945804901449*^9, 3.940945813347927*^9}},
 CellID->50698769,ExpressionUUID->"9bed1386-4489-7c41-bc3d-234d101d4ae5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpu", "//", "Keys"}]], "Input",
 CellChangeTimes->{{3.940945815240341*^9, 3.940945834406257*^9}},
 CellLabel->"In[98]:=",
 CellID->302166774,ExpressionUUID->"e860c84d-6cae-5345-8c11-4bc48c3a5c1c"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {
      "backend_name", "backend_version", "gates", "general", "general_qlists",
        "last_update_date", "qubits"}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[179.20000000000002`]], 7, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 7], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[179.20000000000002`]], 7, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 7], "Path" -> {}, "DisplayedRowCount" -> 7, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 7, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["backend_name", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["backend_version", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["gates", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["general", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["general_qlists", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["last_update_date", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["qubits", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       187.29999999999998`, {92.91904296874999, 97.68095703125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      187.29999999999998`, {92.91904296874999, 97.68095703125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940945823813194*^9},
 CellLabel->"Out[98]=",
 CellID->59599702,ExpressionUUID->"58f9b1f5-2a94-6049-baab-ef04e19114be"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
You can easily retrieve the information from each property using the \
following query:\
\>", "Text",
 CellChangeTimes->{{3.9409453130525303`*^9, 3.940945348468643*^9}},
 CellID->581348808,ExpressionUUID->"54bbb841-c5e9-5347-8553-05b0d05c318b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpu", "[", "\"\<gates\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940945083409389*^9, 3.9409451022560062`*^9}, {
  3.9409451421562004`*^9, 3.940945147985164*^9}, {3.9409453583850346`*^9, 
  3.940945367304268*^9}, {3.94094540975795*^9, 3.940945419541988*^9}},
 CellLabel->"In[85]:=",
 CellID->32572173,ExpressionUUID->"5daf9bd8-ed46-344a-b900-075b74ed12b8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7672554361933347107939028853876165979969551562205373153848], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "gate"} -> 
            1, {All, "name"} -> 
            1, {All, "parameters"} -> <|{All, "parameters", All, "date"} -> 
              1, {All, "parameters", All, "name"} -> 
              1, {All, "parameters", All, "unit"} -> 
              1, {All, "parameters", All, "value"} -> 1|>, {All, "qubits"} -> 
            1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "gate" -> TypeSystem`PackageScope`AtomShape[52.5], "name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "parameters" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "date" -> TypeSystem`PackageScope`AtomShape[
                    224.00000000000003`], "name" -> 
                    TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
                    "unit" -> TypeSystem`PackageScope`AtomShape[33.6], 
                    "value" -> TypeSystem`PackageScope`AtomShape[60]|>], 
                    DirectedInfinity[1], 4, {All, "parameters", All}]], 2, 
                  DirectedInfinity[1], {All, "parameters"}], "qubits" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 4, {All}]], 10, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           TypeSystem`Struct[{"gate", "name", "parameters", "qubits"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["ecr", "id", "reset", "rz", "sx", "x"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1]}], 779], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "gate"} -> 
            1, {All, "name"} -> 
            1, {All, "parameters"} -> <|{All, "parameters", All, "date"} -> 
              1, {All, "parameters", All, "name"} -> 
              1, {All, "parameters", All, "unit"} -> 
              1, {All, "parameters", All, "value"} -> 1|>, {All, "qubits"} -> 
            1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "gate" -> TypeSystem`PackageScope`AtomShape[52.5], "name" -> 
                TypeSystem`PackageScope`AtomShape[89.60000000000001], 
                "parameters" -> TypeSystem`PackageScope`Limited[
                  TypeSystem`PackageScope`ColumnShape[
                   TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "date" -> TypeSystem`PackageScope`AtomShape[
                    224.00000000000003`], "name" -> 
                    TypeSystem`PackageScope`AtomShape[123.20000000000002`], 
                    "unit" -> TypeSystem`PackageScope`AtomShape[33.6], 
                    "value" -> TypeSystem`PackageScope`AtomShape[60]|>], 
                    DirectedInfinity[1], 4, {All, "parameters", All}]], 2, 
                  DirectedInfinity[1], {All, "parameters"}], "qubits" -> 
                TypeSystem`PackageScope`UnknownShape[False]|>], 
              DirectedInfinity[1], 4, {All}]], 10, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           TypeSystem`Struct[{"gate", "name", "parameters", "qubits"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["ecr", "id", "reset", "rz", "sx", "x"]], 
             TypeSystem`Atom[String], 
             TypeSystem`Vector[
              TypeSystem`Struct[{"date", "name", "unit", "value"}, {
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Real]}], TypeSystem`AnyLength], 
             TypeSystem`Vector[
              TypeSystem`Atom[Integer], 1]}], 779], "Path" -> {}, 
         "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 4, 
         "DataRowCount" -> 779, "DataColumnCount" -> 4, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["gate", 
                    Style[
                    "gate", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "gate"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "gate"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "name"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "name"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["parameters", 
                    Style[
                    "parameters", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parameters"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parameters"}, "ColumnHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Center, Baseline}], 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["qubits", 
                    Style[
                    "qubits", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "qubits"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "qubits"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["date", 
                    Style[
                    "date", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parameters", All, "date"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parameters", All, "date"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["name", 
                    Style[
                    "name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parameters", All, "name"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parameters", All, "name"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["unit", 
                    Style[
                    "unit", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parameters", All, "unit"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parameters", All, "unit"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["value", 
                    Style[
                    "value", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "parameters", All, "value"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "parameters", All, "value"}, "ColumnHeader", True], 
                   "Mouse"], ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id0", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000117285"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{0}, ShowStringCharacters -> False], 
                    Style[
                    Style[{0}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id1", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000102188"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{1}, ShowStringCharacters -> False], 
                    Style[
                    Style[{1}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id2", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000117838"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{2}, ShowStringCharacters -> False], 
                    Style[
                    Style[{2}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id3", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000567205"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{3}, ShowStringCharacters -> False], 
                    Style[
                    Style[{3}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id4", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000505533"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{4}, ShowStringCharacters -> False], 
                    Style[
                    Style[{4}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id5", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000138998"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{5}, ShowStringCharacters -> False], 
                    Style[
                    Style[{5}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id6", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000181526"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{6}, ShowStringCharacters -> False], 
                    Style[
                    Style[{6}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id7", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000302199"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{7}, ShowStringCharacters -> False], 
                    Style[
                    Style[{7}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id8", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000300618"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{8}, ShowStringCharacters -> False], 
                    Style[
                    Style[{8}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:14:47Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Pane[
                  Annotation["id", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["gate"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{52.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["id9", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{89.60000000000001, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 1, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_error", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 1, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 1, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.000340128"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 1, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[{9}, ShowStringCharacters -> False], 
                    Style[
                    Style[{9}, ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["qubits"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["qubits"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
               SpanFromAbove, SpanFromAbove, 
                Item[
                 Pane[
                  Annotation["2024-11-18T09:19:49Z", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 2, 
                    Key["date"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["gate_length", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 2, 
                    Key["name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{123.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["ns", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 2, 
                    Key["unit"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{33.6, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["49.7778"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["parameters"], 2, 
                    Key["value"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], SpanFromAbove}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 779, 1], {1, 779 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 779, 1], {1, 779 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[779, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[779, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 779, 1], {1, 779 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 779, 1], {1, 779 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         690.4000000000001, {295.16904296875015`, 299.9309570312501}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        690.4000000000001, {295.16904296875015`, 299.9309570312501}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7672554361933347107939028853876165979969551562205373153848,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.940945102567081*^9, {3.940945143823276*^9, 3.940945148463831*^9}, {
   3.940945360558876*^9, 3.940945367566658*^9}, {3.940945411766863*^9, 
   3.940945419961023*^9}},
 CellLabel->"Out[85]=",
 CellID->195991848,ExpressionUUID->"83865e04-0579-be42-b6c7-13d4320cb730"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qpu", "[", "\"\<qubits\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940945152185316*^9, 3.940945156510048*^9}, {
  3.94094537491044*^9, 3.9409453953126373`*^9}},
 CellLabel->"In[83]:=",
 CellID->22076397,ExpressionUUID->"24a7ebaa-3d50-8b4d-9ea0-5a12f0d9999b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 470.61633875773555`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 415.58261689012517`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.655644634595505|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3110632460863657|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0015000000000000568`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0016000000000000458`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0014|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 452.0165109550252|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 220.52317954933991`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.534961136238168|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31302980539784336`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0022999999999999687`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0020000000000000018`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0026|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 237.41994587368626`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 136.56052790163292`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.680131446974009|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3092563684570482|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0043999999999999595`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0054|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0033999999999999586`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 352.40617290593815`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 149.82410657359515`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.606655745695527|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.25135835423971303`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.009600000000000053|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0144|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0048000000000000265`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 260.1076949350539|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 151.4817691520323|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.462299152842705|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.25507850560311957`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.01760000000000006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.022399999999999975`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0128|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 313.76354533427104`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 348.8238926807478|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.426694452845538|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2804432142711162|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.008199999999999985|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.011|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.00539999999999996|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 313.53553557753673`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 167.49660270255168`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.640087552235745|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3108103399516748|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0017000000000000348`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0033999999999999586`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 393.37372737379405`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 438.5184641088444|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.475690226281558|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2813271220492828|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0020999999999999908`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0034|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0008000000000000229|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 305.89596643078204`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 292.87571136904194`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.401832274831366|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.25507427876459826`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.024699999999999944`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.025599999999999956`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0238|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 429.01083009474047`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 366.1666289474838|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.519007614757079|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.29730654926594685`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.012599999999999945`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.01539999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0098|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 147.3428192760497|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 55.19641170960122|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.628362620327307|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.009600000000000053|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0106|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.008600000000000052|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 339.4320030238106|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 282.30339785424286`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.571516287015232|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31187801080194943`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.016699999999999937`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0212|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.012199999999999989`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 427.74096094703424`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 390.9210333522405|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.464327551180465|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3114335997689411|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.014799999999999924`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0146|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.015000000000000013`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 258.11886376727335`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 86.91924466376054|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.573364576043934|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.014599999999999946`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.014000000000000012`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0152|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 322.39272776754154`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 401.9082692047021|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.603984184607186|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3075149117337717|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0045999999999999375`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.005199999999999982|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 470.89784022014925`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 65.15482519399913|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.496040910509709|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3235838974181829|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.02849999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.01759999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0394|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 371.5703320901826|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 147.66066391105215`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.513230535330656|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31250997509736017`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0019000000000000128`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0028000000000000247`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 385.6707949780329|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 62.26514483695806|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.675799085465258|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3222371456169295|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.08220000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0854|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.07899999999999996|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 302.490406086888|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 48.41762499826258|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.514792005601988|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.32147907217387134`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0039000000000000146`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0062|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016000000000000458`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 319.27199838732577`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 216.625531899028|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.444137255010616|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3142519677447134|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0230999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.025599999999999956`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0206|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 622.2434360625545|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 582.027670725633|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.341293762389869|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31659680563840864`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.025500000000000078`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.027800000000000047`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0232|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 459.57726199759543`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 172.33244877301647`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.4851855374137255`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3137510643214938|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.008499999999999952|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0076|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.009399999999999964|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 349.84622550399536`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 172.80648611687278`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.3829550531037|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3235699465364606|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.023600000000000065`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.036|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.011199999999999988`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 300.2407726397607|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 160.1424264385419|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.53177104301352|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.34910557092715694`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.008000000000000007|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008000000000000007|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.008|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 296.64560268278814`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 73.5182456815263|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.646174748714679|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3098937587669715|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0025999999999999357`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0041999999999999815`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 268.1780411919562|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 316.3019753598499|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.702187396250533|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3104687819443247|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007000000000000006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008600000000000052|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0054|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 210.281327306489|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 122.28954636960069`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.648803865672672|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.009300000000000086|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.01100000000000001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0076|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 210.01681673624046`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 41.36225333645217|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.6099491153910845`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2878947957747321|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.049900000000000055`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0518|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.04800000000000004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 133.22825808281658`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 13.583095848053288`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.516881166478936|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31512500613226163`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.005900000000000016|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008000000000000007|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 368.43384463222964`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 221.06063877489237`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.460019831108854|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3164470706353105|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.011399999999999966`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0084|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.014399999999999968`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 304.8351395212144|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 133.60857524212204`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.64633013779424|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2835614267270895|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.06159999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.06459999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0586|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 418.0079880896615|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 164.01987330789686`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.613005860283554|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3112675880038357|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007600000000000051|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0102|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0050000000000000044`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 319.09779499432886`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 111.97025152199156`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.499276695787339|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3128171150093984|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.008900000000000019|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0102|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.007600000000000051|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 546.8704100149589|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 214.24819709871073`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.59692308594205|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0025999999999999357`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0012|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 330.4488620961706|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 115.15654026816543`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.56205824946449|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00649999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.012399999999999967`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 167.81158562682205`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 93.32228044208539|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.721876938525585|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30795810239191124`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0034000000000000696`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0050000000000000044`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0018|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 345.06892075133857`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 308.5097628953762|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.608023281849368|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31164624269239977`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00649999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.010000000000000009`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.003|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 363.83751372316493`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 214.54624826454216`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.497757919140234|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.016899999999999915`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0206|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.01319999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 387.33594252632645`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 311.13608802399244`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.4755047193486455`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.33539586706236296`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.014399999999999968`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0242|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0046|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 430.7850056916331|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 55.66715387490016|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.504425764879633|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31295465019890567`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00649999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008199999999999985|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0048|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 361.46146567753414`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 33.02089621668006|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.464345431382772|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.33809284738007156`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.010399999999999965`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.017000000000000015`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 243.19317331826056`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 297.05727205473204`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.575894982052816|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3452224783858925|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0042999999999999705`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0038000000000000256`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0048|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 258.5599205543617|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 85.95154872321231|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.641382628444059|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.33193206992602775`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0036000000000000476`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.00660000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 249.4786734649724|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 155.0192275642596|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.523139735782459|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3218076034687584|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0023999999999999577`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.003|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0018000000000000238`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 46.68869954970563|>, <|
        "date" -> "2024-11-17T06:25:37Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 170.87588847491224`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.594397703719576|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2725547830259511|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.05730000000000002|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.05500000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0596|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 313.27710175830606`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 92.6026822523211|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.63047518216455|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31121477664524183`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0026000000000000467`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0046000000000000485`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 367.00776405834335`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 60.841246731775904`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.710119172180669|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31051099269051724`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0026999999999999247`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0014|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 366.7311155775384|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 100.18071452795097`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.680453988480926|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2791698234955903|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.05510000000000004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.028800000000000048`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0814|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 271.7413199871593|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 73.25630837536639|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.625126854016111|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31121814662509445`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0013999999999999568`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0023999999999999577`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 276.4763206437642|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 101.16755472912887`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.581949101277606|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.35202725215057706`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.016199999999999992`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0242|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0082|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 428.97909915485036`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 139.93877255038814`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.457765783534735|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3137510834931671|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0040999999999999925`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0044|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038000000000000256`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 183.72449989021314`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 63.791730940731156`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.565196421926035|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2968087163341602|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.07069999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.06559999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0758|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 331.7571127281232|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 31.656525464805455`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.44439229441173|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2854962354743173|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.12319999999999998`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.11539999999999995`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.131|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 303.205744349289|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 304.6256065348005|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.622001925735742|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3089157779566661|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.005600000000000049|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007199999999999984|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 418.19007082343245`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 21.271194487264115`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.50132473265543|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31299719319013514`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007500000000000062|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0056|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.009399999999999964|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 393.59519548268736`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 44.7804824976909|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.686292822639439|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3100668699291798|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0047000000000000375`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007800000000000029|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 321.6099796475897|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 316.37745099706285`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.553685757358777|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.006599999999999939|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.010399999999999965`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0028|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 379.4693627374966|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 39.8842031844042|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.639609730228096|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3110258364070089|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0026999999999999247`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0014|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 274.4348470761681|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 40.513893635178164`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.609459784286954|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3120232272887944|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.006800000000000028|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0096|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 264.4957787092292|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 74.20027365316345|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.769981873436344|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3055632788590134|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007199999999999984|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0008|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 342.33636421926553`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 388.87293148346674`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.517588849742397|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3130252570847025|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007199999999999984|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.01|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0043999999999999595`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 301.1898809228702|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 120.88710275642518`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.689241839503896|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.014799999999999924`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.016199999999999992`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0134|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 202.07867296094182`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 27.779005685563895`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.646825019369531|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2863049460361145|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.033600000000000074`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.038000000000000034`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0292|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 166.18891272695004`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 127.24249299617782`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.507474982929666|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.32264290979581867`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0020000000000000018`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0030000000000000027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 331.75992539893326`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 40.16764276013893|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.4631401530323656`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0041999999999999815`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0068|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016000000000000458`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 173.46109567606933`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 153.35976234899212`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.615149301133988|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31101251617313946`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0695|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.13419999999999999`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0048|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 310.1779135089816|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 114.59142430713551`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.65047001559803|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.29034076699160294`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.016100000000000003`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0208|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.011399999999999966`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 151.33740816785675`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 77.66995815325392|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.714537407195755|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3101140892003641|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007600000000000051|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0114|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038000000000000256`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 328.4225846050147|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 106.81397562663187`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.612756970021789|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31130677970698856`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.008700000000000041|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0116|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.005800000000000027|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 265.2463925422022|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 121.92514988542396`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.55143713118909|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31213146441791095`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0023999999999999577`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0038000000000000256`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 341.2026674675577|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 83.04480782782575|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.711916698057622|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30937241746400446`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0025999999999999357`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0018000000000000238`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0034|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 305.81646732474934`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 54.43404449232153|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.545862514456094|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30894805896719|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.01639999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.017000000000000015`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0158|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 159.1217848090683|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 177.513821712264|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.576596252334236|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31191901483735823`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0017000000000000348`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0031999999999999806`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0002|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 203.42418939322422`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 110.63096540096711`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.822095756041637|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3060243215183466|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0049000000000000155`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.006000000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 341.8514277256852|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 303.2863019208238|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.609665110211451|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31109191615982995`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.022699999999999942`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.025399999999999978`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.02|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 301.86094514236436`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 198.4200516234377|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.787410743962122|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.27824835792971114`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.013399999999999967`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0136|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.01319999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 140.189085994034|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 203.70897398750884`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.683343276216349|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31055697195489596`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0033999999999999586`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.00539999999999996|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0014|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 341.31738441399915`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 318.7119816293537|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.576651565823175|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.313094932281466|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.04279999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0504|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.03520000000000001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 450.2111962268428|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 418.6410308976523|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.483444995308335|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3136874752686043|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.005800000000000027|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0022|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 126.69958311430534`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 60.6259700784512|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.5706206704256305`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.29525409443808415`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.04160000000000008|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.020000000000000018`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0632|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-12T06:47:33Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 15.7861119903135|>, <|
        "date" -> "2024-11-16T07:51:40Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 15.643810653353185`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.600470644955318|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-16T07:42:44Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.23319999999999996`|>, <|
        "date" -> "2024-11-16T07:42:44Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.29159999999999997`|>, <|
        "date" -> "2024-11-16T07:42:44Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.1748|>, <|
        "date" -> "2024-11-16T07:42:44Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 227.7018130158273|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 90.76532498604917|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.4986572771721995`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31468638313879793`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.005299999999999971|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007199999999999984|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0034|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-17T06:22:01Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 286.2944444156887|>, <|
        "date" -> "2024-11-17T06:25:37Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 96.02157345671951|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.602401364961322|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31724266528169737`|>, <|
        "date" -> "2024-11-17T06:16:46Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0049000000000000155`|>, <|
        "date" -> "2024-11-17T06:16:46Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008199999999999985|>, <|
        "date" -> "2024-11-17T06:16:46Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016|>, <|
        "date" -> "2024-11-17T06:16:46Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 371.02888377280937`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 78.79669941972652|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.63631244829103|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3103580553605243|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.01629999999999998|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.018|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.014599999999999946`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 280.9305694620757|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 189.99937024978573`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.749612367319456|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3090225667525716|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0034000000000000696`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0036000000000000476`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0032|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 213.52602174039376`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 215.5318171649651|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.586918028819148|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31154756735554556`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.004899999999999904|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0074|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0023999999999999577`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 240.14892798993753`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 118.23727258108752`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.756463839669406|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.32580689050206485`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.047599999999999976`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.045399999999999996`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0498|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 135.2453805125386|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 57.08384616820578|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.725082160927293|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.019499999999999962`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.021599999999999953`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0174|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 243.02285829594263`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 46.33880494128048|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.566473842401848|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30765951332138847`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0044999999999999485`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0046000000000000485`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0044|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 245.12808540335672`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 201.7440194792051|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.796712357338873|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3069228576805572|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.044399999999999995`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0476|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.041200000000000014`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 39.38512703986056|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 148.47791763286028`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.704221184512069|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.2860621408681651|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0037000000000000366`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.006399999999999961|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 204.4005996618365|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 87.84104121486925|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.709011197332469|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3103704189122232|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.006000000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007600000000000051|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0044|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 273.381224354442|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 77.05782350381521|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.729511616677337|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3071779631697473|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0020000000000000018`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0030000000000000027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 244.09438657035506`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 155.7438840868161|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.678339349541491|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.02949999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0464|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0126|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 160.98470103589273`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 170.9808351016836|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.876123766794036|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3062539208243005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.017400000000000082`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0106|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0242|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 175.81682213405628`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 16.89924599737538|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.597072611873887|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3136135264289027|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.012499999999999956`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.021199999999999997`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0038|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 256.54418319623034`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 216.98347541940612`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.733060835410048|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0030000000000000027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0010000000000000009`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 150.00095839983143`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 149.93418045622485`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.806810013054162|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3064623934471557|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.011099999999999999`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.020199999999999996`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.002|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 330.4344613669413|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 36.30376302087434|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.608984362857324|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31190721922188297`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00550000000000006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007800000000000029|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0032|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 325.21898551919304`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 122.6736945570946|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.574506004356899|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31063982957359515`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0047000000000000375`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.007600000000000051|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0018|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 218.77809247871014`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 80.69497876462064|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.647314525261198|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31098646352761034`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0030000000000000027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0048000000000000265`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0012|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 218.50211413634514`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 253.00191734482308`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.724304799754705|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3097143441409694|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0029000000000000137`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.005199999999999982|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 278.0193777726803|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 267.56312587892893`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.604335261936171|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31164130137993934`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.023399999999999976`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0262|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.02059999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 215.21486663246648`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 139.4890377341274|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.66432438099571|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0037000000000000366`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.005800000000000027|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 255.73450237467944`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 32.155029818573865`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.802230356094988|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30843673215390965`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.006399999999999961|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0078|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0050000000000000044`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 248.8592905301816|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 102.55575367183123`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.739941646054015|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.005600000000000049|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0088|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0023999999999999577`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 155.85159542984726`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 41.605488759193236`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.710386460346915|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.28699737205284476`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.1481|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.1642|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.132|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 35.42153866697724|>, <|
        "date" -> "2024-11-17T06:25:37Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 37.0641478101667|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.6149173891944315`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30801317939559864`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.04459999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.08320000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 279.2606761769283|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 291.06618028940375`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.546226184672737|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00869999999999993|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.01200000000000001|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0054|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 201.69613197109803`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 13.353110999770841`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.875265124064873|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30675181805646473`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.05049999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.04139999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0596|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 140.947210673825|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 84.170371269458|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.805827041343071|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3082615805518876|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0050000000000000044`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.00660000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0034|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 152.63961605011391`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 144.78487184939308`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.768728004571548|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.308805156173377|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0040999999999999925`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.00660000000000005|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0016|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 211.9588707845523|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 189.0601715916521|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.583650449637001|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> 0|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00649999999999995|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.009800000000000031|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0032|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 269.4908926647699|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 106.38968082359294`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.655639100384278|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3093142958340278|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0028999999999999027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.00539999999999996|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 312.62969230378206`|>, <|
        "date" -> "2024-11-18T09:13:21Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 14.441078266743748`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.781751845271259|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.359151679588321|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.021100000000000008`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.018399999999999972`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0238|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 320.3077627153654|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 258.63405810000967`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.709532731801653|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3275775129546063|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0022999999999999687`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0033999999999999586`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0012|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 81.2734758299356|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 120.30202962878585`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.958900400159774|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3054949382178614|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0042999999999999705`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.006399999999999961|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0022|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 251.94504760214585`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 61.83144862865161|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.831595453693839|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30759466702832383`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.012199999999999989`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.015199999999999991`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0092|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 147.10283228372606`|>, <|
        "date" -> "2024-11-18T09:13:21Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 199.88305447360608`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.749126387064553|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3086757517286422|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0042999999999999705`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0068|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0018000000000000238`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 315.8667804285862|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 302.12748513744407`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.6107449149994695`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3114963008800161|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007900000000000018|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.013599999999999945`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0022|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 248.58728538660628`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 225.459852218797|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.500655783444595|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.31223870265324805`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0021999999999999797`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0040000000000000036`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0004|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 364.259326324183|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 111.5757905973988|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.620338260313246|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.311333521570536|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.056499999999999995`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0552|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.05779999999999996|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 327.4716558063126|>, <|
        "date" -> "2024-11-18T09:13:21Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 413.6090149018192|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.688043452571637|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3084425173012937|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0030000000000000027`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.0038000000000000256`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0022|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 293.7706544763487|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 294.83664322786655`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.730567480024792|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.3078326004965146|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.08879999999999999|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.09499999999999997|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0826|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 306.07533112728913`|>, <|
        "date" -> "2024-11-18T09:11:31Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 56.39239970762324|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.634876075107187|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30850570297447494`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.007000000000000006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.011600000000000055`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0024|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 127.08661784178065`|>, <|
        "date" -> "2024-11-18T09:09:46Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 180.73012768396677`|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.737113157666831|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30715374546988305`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.0045999999999999375`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.008000000000000007|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0012|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}, {<|
        "date" -> "2024-11-18T09:07:59Z", "name" -> "T1", "unit" -> "us", 
         "value" -> 285.70088423261393`|>, <|
        "date" -> "2024-11-18T09:13:21Z", "name" -> "T2", "unit" -> "us", 
         "value" -> 68.28075993622703|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "frequency", "unit" -> 
         "GHz", "value" -> 4.702931176930631|>, <|
        "date" -> "2024-11-18T18:11:23Z", "name" -> "anharmonicity", "unit" -> 
         "GHz", "value" -> -0.30311201820062655`|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_error", "unit" -> 
         "", "value" -> 0.00550000000000006|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas0_prep1", 
         "unit" -> "", "value" -> 0.009199999999999986|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "prob_meas1_prep0", 
         "unit" -> "", "value" -> 0.0018|>, <|
        "date" -> "2024-11-18T09:02:39Z", "name" -> "readout_length", "unit" -> 
         "ns", "value" -> 1244.4444444444443`|>}}, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 1, "date"} -> 
             1, {All, 1, "name"} -> 1, {All, 1, "unit"} -> 
             1, {All, 1, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 1}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 2, "date"} -> 
             1, {All, 2, "name"} -> 1, {All, 2, "unit"} -> 
             1, {All, 2, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 2}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 3, "date"} -> 
             1, {All, 3, "name"} -> 1, {All, 3, "unit"} -> 
             1, {All, 3, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[94.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 3}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 4, "date"} -> 
             1, {All, 4, "name"} -> 1, {All, 4, "unit"} -> 
             1, {All, 4, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[136.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 4}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 5, "date"} -> 
             1, {All, 5, "name"} -> 1, {All, 5, "unit"} -> 
             1, {All, 5, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[136.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 5}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 6, "date"} -> 
             1, {All, 6, "name"} -> 1, {All, 6, "unit"} -> 
             1, {All, 6, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[168.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 6}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 7, "date"} -> 
             1, {All, 7, "name"} -> 1, {All, 7, "unit"} -> 
             1, {All, 7, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[168.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 7}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 8, "date"} -> 
             1, {All, 8, "name"} -> 1, {All, 8, "unit"} -> 
             1, {All, 8, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[147.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 8}]]}], 
         DirectedInfinity[1], 8, {All}]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-12T06:47:33Z", "2024-11-17T06:22:01Z", 
             "2024-11-18T09:07:59Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["T1"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["us"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:51:40Z", "2024-11-17T06:25:37Z", 
             "2024-11-18T09:09:46Z", "2024-11-18T09:11:31Z", 
             "2024-11-18T09:13:21Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["T2"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["us"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["2024-11-18T18:11:23Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["frequency"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["GHz"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["2024-11-18T18:11:23Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["anharmonicity"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["GHz"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["readout_error"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["prob_meas0_prep1"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["prob_meas1_prep0"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["readout_length"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ns"]], 
           TypeSystem`Atom[Real]}]}], 127], "Meta" -> <||>, "RowTarget" -> 20,
      "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 1, "date"} -> 
             1, {All, 1, "name"} -> 1, {All, 1, "unit"} -> 
             1, {All, 1, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 1}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 2, "date"} -> 
             1, {All, 2, "name"} -> 1, {All, 2, "unit"} -> 
             1, {All, 2, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 2}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 3, "date"} -> 
             1, {All, 3, "name"} -> 1, {All, 3, "unit"} -> 
             1, {All, 3, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[94.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 3}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 4, "date"} -> 
             1, {All, 4, "name"} -> 1, {All, 4, "unit"} -> 
             1, {All, 4, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[136.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 4}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 5, "date"} -> 
             1, {All, 5, "name"} -> 1, {All, 5, "unit"} -> 
             1, {All, 5, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[136.5], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 5}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 6, "date"} -> 
             1, {All, 6, "name"} -> 1, {All, 6, "unit"} -> 
             1, {All, 6, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[168.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 6}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 7, "date"} -> 
             1, {All, 7, "name"} -> 1, {All, 7, "unit"} -> 
             1, {All, 7, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[168.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 7}]], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 8, "date"} -> 
             1, {All, 8, "name"} -> 1, {All, 8, "unit"} -> 
             1, {All, 8, "value"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "date" -> TypeSystem`PackageScope`AtomShape[210.], "name" -> 
               TypeSystem`PackageScope`AtomShape[147.], "unit" -> 
               TypeSystem`PackageScope`AtomShape[31.5], "value" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 8}]]}], 
         DirectedInfinity[1], 8, {All}]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-12T06:47:33Z", "2024-11-17T06:22:01Z", 
             "2024-11-18T09:07:59Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["T1"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["us"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:51:40Z", "2024-11-17T06:25:37Z", 
             "2024-11-18T09:09:46Z", "2024-11-18T09:11:31Z", 
             "2024-11-18T09:13:21Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["T2"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["us"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["2024-11-18T18:11:23Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["frequency"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["GHz"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["2024-11-18T18:11:23Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["anharmonicity"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["GHz"]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["readout_error"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["prob_meas0_prep1"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["prob_meas1_prep0"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration[""]], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Struct[{"date", "name", "unit", "value"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "2024-11-16T07:42:44Z", "2024-11-17T06:16:46Z", 
             "2024-11-18T09:02:39Z"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["readout_length"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ns"]], 
           TypeSystem`Atom[Real]}]}], 127], "Path" -> {}, "DisplayedRowCount" -> 
     10, "DisplayedColumnCount" -> 8, "DataRowCount" -> 127, 
     "DataColumnCount" -> 8, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["470.616"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:09:46Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["415.583"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.65564"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.311063"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0016"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0014"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["452.017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:11:31Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["220.523"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.53496"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.31303"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0023"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.002"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0026"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["237.42"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:09:46Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["136.561"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.68013"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.309256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0044"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0034"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["352.406"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:11:31Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["149.824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.60666"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.251358"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0096"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0144"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0048"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["260.108"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:09:46Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["151.482"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.4623"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.255079"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0176"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0224"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0128"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["313.764"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:11:31Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["348.824"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.42669"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.280443"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0082"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0054"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["313.536"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:09:46Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["167.497"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.64009"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.31081"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0017"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0034"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["393.374"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:11:31Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["438.518"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.47569"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.281327"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0021"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0034"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0008"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["305.896"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:09:46Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["292.876"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.40183"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.255074"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0247"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0238"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 1, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 1, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 3, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 3, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 4, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 4, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 5, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 5, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 6, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 6, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 7, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 7, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "date"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "date"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["name", 
                  Style[
                  "name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "name"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "name"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unit", 
                  Style[
                  "unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "unit"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "unit"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["value", 
                  Style[
                  "value", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 8, "value"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 8, "value"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["2024-11-18T09:07:59Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["429.011"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:11:31Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["T2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["us", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["366.167"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["frequency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4.51901"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T18:11:23Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 4, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["anharmonicity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 4, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GHz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 4, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["-0.297307"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 4, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 5, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_error", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 5, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 5, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0126"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 5, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 6, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas0_prep1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 6, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 6, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 6, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 7, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["prob_meas1_prep0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 7, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{168., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 7, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0098"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 7, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2024-11-18T09:02:39Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 8, 
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{210., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["readout_length", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 8, 
                 Key["name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ns", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 8, 
                 Key["unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1244.44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 8, 
                 Key["value"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[True, 127, 1], {1, 127 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 10 
                    If[False, 127, 1], {1, 127 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[127, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[127, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 127, 1], {1, 127 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 127, 1], {1, 127 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       3572.999999999998, {266.0690429687501, 270.8309570312501}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      3572.999999999998, {266.0690429687501, 270.8309570312501}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.940945157159588*^9, {3.940945375689941*^9, 3.9409453960399265`*^9}},
 CellLabel->"Out[83]=",
 CellID->554534322,ExpressionUUID->"c65fa3e4-bf67-b34b-a8ec-76dbd58f2176"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Configuration", "Subsubsubsection",
 CellChangeTimes->{{3.9409458517130604`*^9, 3.940945852962946*^9}},
 CellID->30500890,ExpressionUUID->"1f1f5ee7-7cbf-f840-86e1-5ff2f6578002"],

Cell[CellGroupData[{

Cell["Obtain the selected backend configuration:", "Text",
 CellChangeTimes->{{3.940946127749115*^9, 3.94094614501622*^9}},
 CellID->40813747,ExpressionUUID->"67864dd5-07db-6344-9ca7-25ba50ad17b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"config", "=", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<Backend\>\"", ",", " ", 
    RowBox[{"\"\<ID\>\"", " ", "\[Rule]", " ", "\"\<ibm_brisbane\>\""}], ",", 
    RowBox[{"\"\<Property\>\"", "\[Rule]", "\"\<Configuration\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940946032483549*^9, 3.940946051953621*^9}},
 CellLabel->"In[105]:=",
 CellID->456857504,ExpressionUUID->"c23686ad-cf19-fa40-a731-ddb9892bd65d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7672554361933347107939028853876165980117125514795101179872], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
             TypeSystem`PackageScope`UnknownShape[False]]], 20, 
           DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], TypeSystem`AnyType, 53], "Meta" -> <||>, 
         "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`KeyValueShape[
             TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
             TypeSystem`PackageScope`UnknownShape[False]]], 20, 
           DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
           TypeSystem`Atom[String], TypeSystem`AnyType, 53], "Path" -> {}, 
         "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 1, 
         "DataRowCount" -> 53, "DataColumnCount" -> 1, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["acquisition_latency", 
                    Style[
                    "acquisition_latency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["acquisition_latency"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acquisition_latency"]}, "RowHeader", False], 
                   "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[<||>, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["allow_q_object", 
                    Style[
                    "allow_q_object", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["allow_q_object"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["allow_q_object"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["allow_q_object"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["backend_name", 
                    Style[
                    "backend_name", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_name"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_name"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["ibm_brisbane", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_name"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{134.4, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["backend_version", 
                    Style[
                    "backend_version", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_version"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_version"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["1.1.53", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["backend_version"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{67.2, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["basis_gates", 
                    Style[
                    "basis_gates", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["basis_gates"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["basis_gates"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"ecr", "id", "rz", "sx", "x"}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"ecr", "id", "rz", "sx", "x"}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["basis_gates"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["basis_gates"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["channels", 
                    Style[
                    "channels", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["channels"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["channels"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 669], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 669], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["channels"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["channels"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["clops", 
                    Style[
                    "clops", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["clops"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox["Null", FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["clops_h", 
                    Style[
                    "clops_h", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["clops_h"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops_h"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["30000"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops_h"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["clops_v", 
                    Style[
                    "clops_v", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["clops_v"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops_v"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["None", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["clops_v"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["conditional", 
                    Style[
                    "conditional", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["conditional"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["conditional"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["False"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["conditional"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["conditional_latency", 
                    Style[
                    "conditional_latency", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["conditional_latency"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["conditional_latency"]}, "RowHeader", False], 
                   "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[<||>, ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["coords", 
                    Style[
                    "coords", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["coords"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["coords"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["coords"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["coords"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["coupling_map", 
                    Style[
                    "coupling_map", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["coupling_map"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["coupling_map"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 144], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 144], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["coupling_map"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["coupling_map"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["credits_required", 
                    Style[
                    "credits_required", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["credits_required"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["credits_required"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["credits_required"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["default_rep_delay", 
                    Style[
                    "default_rep_delay", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["default_rep_delay"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["default_rep_delay"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["250"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["default_rep_delay"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["description", 
                    Style[
                    "description", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["description"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["description"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation["127 qubit device", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["description"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["discriminators", 
                    Style[
                    "discriminators", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["discriminators"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["discriminators"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    
                    Style[{"hw_qmfk", "quadratic_discriminator", 
                    "linear_discriminator"}, ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{"hw_qmfk", "quadratic_discriminator", 
                    "linear_discriminator"}, ShowStringCharacters -> False], 
                    FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["discriminators"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["discriminators"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}]]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["dt", 
                    Style[
                    "dt", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dt"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dt"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dt"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["dtm", 
                    Style[
                    "dtm", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dtm"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dtm"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.5"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dtm"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["dynamic_reprate_enabled", 
                    Style[
                    "dynamic_reprate_enabled", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["dynamic_reprate_enabled"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic_reprate_enabled"]}, "RowHeader", False], 
                   "Mouse"], 
                  ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["True"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["dynamic_reprate_enabled"]}, "Item", False], "Mouse"],
                   ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 53, 1], {1, 53 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 53, 1], {1, 53 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[53, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[53, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 53, 1], {1, 53 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 53, 1], {1, 53 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {
         582.9000000000001, {269.5690429687501, 274.3309570312501}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {
        582.9000000000001, {269.5690429687501, 274.3309570312501}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7672554361933347107939028853876165980117125514795101179872,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940946055226244*^9, 3.940946277300337*^9},
 CellLabel->"Out[105]=",
 CellID->653357516,ExpressionUUID->"aa2f95cb-7f23-0845-bb38-98c09e5e0a03"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieve information about backend basis gates:", "Text",
 CellChangeTimes->{{3.940946561162277*^9, 3.9409465648476887`*^9}},
 CellID->106167653,ExpressionUUID->"25f4589b-a977-a44a-9203-c35724ad7d15"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"config", "[", "\"\<basis_gates\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.9409465750010624`*^9, 3.9409466214193687`*^9}, 
   3.9409466628268375`*^9},
 CellLabel->"In[122]:=",
 CellID->31911404,ExpressionUUID->"20c1d4ee-79bd-e14b-aae7-995bdbf212bc"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {"ecr", "id", "rz", "sx", "x"}, "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[33.6]], 5, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 5], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`AtomShape[33.6]], 5, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Atom[String], 5], "Path" -> {}, "DisplayedRowCount" -> 5, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 5, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation["ecr", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["id", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["rz", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["sx", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{
                   TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{41.70000000000001, {67.81904296875, 72.58095703125001}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{41.70000000000001, {67.81904296875, 72.58095703125001}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940946581065111*^9, 3.940946621805376*^9}, 
   3.9409466632985134`*^9},
 CellLabel->"Out[122]=",
 CellID->143876436,ExpressionUUID->"1c9154a8-e1c8-b948-a076-5be1d96340bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieve information about backend Hamiltonian:", "Text",
 CellChangeTimes->{{3.940946168402479*^9, 3.940946203396183*^9}},
 CellID->311370782,ExpressionUUID->"ed7fb9e9-b085-b646-910d-8c291d0fb4a8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"config", "[", "\"\<hamiltonian\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940946177420849*^9, 3.940946192137228*^9}},
 CellLabel->"In[102]:=",
 CellID->59837826,ExpressionUUID->"a108bd47-486b-7341-b957-519b7dc3ae65"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "description" -> 
       "Qubits are modeled as Duffing oscillators. In this case, the system \
includes higher energy states, i.e. not just |0> and |1>. The Pauli operators \
are generalized via the following set of transformations:\n\n\
$(\\mathbb{I}-\\sigma_{i}^z)/2 \\rightarrow O_i \\equiv b^\\dagger_{i} \
b_{i}$,\n\n$\\sigma_{+} \\rightarrow b^\\dagger$,\n\n$\\sigma_{-} \
\\rightarrow b$,\n\n$\\sigma_{i}^X \\rightarrow b^\\dagger_{i} + b_{i}$.\n\n\
Qubits are coupled through resonator buses. The provided Hamiltonian has been \
projected into the zero excitation subspace of the resonator buses leading to \
an effective qubit-qubit flip-flop interaction. The qubit resonance \
frequencies in the Hamiltonian are the cavity dressed frequencies and not \
exactly what is returned by the backend defaults, which also includes the \
dressing due to the qubit-qubit interactions.\n\nQuantities are returned in \
angular frequencies, with units 2*pi*GHz.\n\nWARNING: Currently not all \
system Hamiltonian information is available to the public, missing values \
have been replaced with 0.\n", "h_latex" -> 
       "\\begin{align} \\mathcal{H}/\\hbar = & \
\\sum_{i=0}^{126}\\left(\\frac{\\omega_{q,i}}{2}(\\mathbb{I}-\\sigma_i^{z})+\\\
frac{\\Delta_{i}}{2}(O_i^2-O_i)+\\Omega_{d,i}D_i(t)\\sigma_i^{X}\\right) \\\\ \
& + J_{62,72}(\\sigma_{62}^{+}\\sigma_{72}^{-}+\\sigma_{62}^{-}\\sigma_{72}^{+\
}) + J_{67,68}(\\sigma_{67}^{+}\\sigma_{68}^{-}+\\sigma_{67}^{-}\\sigma_{68}^{\
+}) + J_{44,45}(\\sigma_{44}^{+}\\sigma_{45}^{-}+\\sigma_{44}^{-}\\sigma_{45}^\
{+}) + J_{99,100}(\\sigma_{99}^{+}\\sigma_{100}^{-}+\\sigma_{99}^{-}\\sigma_{\
100}^{+}) \\\\ & + \
J_{108,112}(\\sigma_{108}^{+}\\sigma_{112}^{-}+\\sigma_{108}^{-}\\sigma_{112}^\
{+}) + J_{8,9}(\\sigma_{8}^{+}\\sigma_{9}^{-}+\\sigma_{8}^{-}\\sigma_{9}^{+}) \
+ J_{40,41}(\\sigma_{40}^{+}\\sigma_{41}^{-}+\\sigma_{40}^{-}\\sigma_{41}^{+})\
 + J_{0,14}(\\sigma_{0}^{+}\\sigma_{14}^{-}+\\sigma_{0}^{-}\\sigma_{14}^{+}) \
\\\\ & + J_{17,30}(\\sigma_{17}^{+}\\sigma_{30}^{-}+\\sigma_{17}^{-}\\sigma_{\
30}^{+}) + \
J_{100,101}(\\sigma_{100}^{+}\\sigma_{101}^{-}+\\sigma_{100}^{-}\\sigma_{101}^\
{+}) + J_{91,98}(\\sigma_{91}^{+}\\sigma_{98}^{-}+\\sigma_{91}^{-}\\sigma_{98}\
^{+}) + J_{100,110}(\\sigma_{100}^{+}\\sigma_{110}^{-}+\\sigma_{100}^{-}\\\
sigma_{110}^{+}) \\\\ & + \
J_{75,90}(\\sigma_{75}^{+}\\sigma_{90}^{-}+\\sigma_{75}^{-}\\sigma_{90}^{+}) \
+ J_{41,42}(\\sigma_{41}^{+}\\sigma_{42}^{-}+\\sigma_{41}^{-}\\sigma_{42}^{+})\
 + J_{96,97}(\\sigma_{96}^{+}\\sigma_{97}^{-}+\\sigma_{96}^{-}\\sigma_{97}^{+}\
) + J_{18,19}(\\sigma_{18}^{+}\\sigma_{19}^{-}+\\sigma_{18}^{-}\\sigma_{19}^{+\
}) \\\\ & + \
J_{55,68}(\\sigma_{55}^{+}\\sigma_{68}^{-}+\\sigma_{55}^{-}\\sigma_{68}^{+}) \
+ J_{9,10}(\\sigma_{9}^{+}\\sigma_{10}^{-}+\\sigma_{9}^{-}\\sigma_{10}^{+}) + \
J_{49,55}(\\sigma_{49}^{+}\\sigma_{55}^{-}+\\sigma_{49}^{-}\\sigma_{55}^{+}) \
+ J_{106,107}(\\sigma_{106}^{+}\\sigma_{107}^{-}+\\sigma_{106}^{-}\\sigma_{\
107}^{+}) \\\\ & + \
J_{47,48}(\\sigma_{47}^{+}\\sigma_{48}^{-}+\\sigma_{47}^{-}\\sigma_{48}^{+}) \
+ J_{42,43}(\\sigma_{42}^{+}\\sigma_{43}^{-}+\\sigma_{42}^{-}\\sigma_{43}^{+})\
 + J_{107,108}(\\sigma_{107}^{+}\\sigma_{108}^{-}+\\sigma_{107}^{-}\\sigma_{\
108}^{+}) + \
J_{73,85}(\\sigma_{73}^{+}\\sigma_{85}^{-}+\\sigma_{73}^{-}\\sigma_{85}^{+}) \
\\\\ & + J_{38,39}(\\sigma_{38}^{+}\\sigma_{39}^{-}+\\sigma_{38}^{-}\\sigma_{\
39}^{+}) + \
J_{20,33}(\\sigma_{20}^{+}\\sigma_{33}^{-}+\\sigma_{20}^{-}\\sigma_{33}^{+}) \
+ J_{48,49}(\\sigma_{48}^{+}\\sigma_{49}^{-}+\\sigma_{48}^{-}\\sigma_{49}^{+})\
 + J_{103,104}(\\sigma_{103}^{+}\\sigma_{104}^{-}+\\sigma_{103}^{-}\\sigma_{\
104}^{+}) \\\\ & + \
J_{80,81}(\\sigma_{80}^{+}\\sigma_{81}^{-}+\\sigma_{80}^{-}\\sigma_{81}^{+}) \
+ J_{75,76}(\\sigma_{75}^{+}\\sigma_{76}^{-}+\\sigma_{75}^{-}\\sigma_{76}^{+})\
 + J_{66,73}(\\sigma_{66}^{+}\\sigma_{73}^{-}+\\sigma_{66}^{-}\\sigma_{73}^{+}\
) + J_{85,86}(\\sigma_{85}^{+}\\sigma_{86}^{-}+\\sigma_{85}^{-}\\sigma_{86}^{+\
}) \\\\ & + \
J_{81,82}(\\sigma_{81}^{+}\\sigma_{82}^{-}+\\sigma_{81}^{-}\\sigma_{82}^{+}) \
+ J_{110,118}(\\sigma_{110}^{+}\\sigma_{118}^{-}+\\sigma_{110}^{-}\\sigma_{\
118}^{+}) + \
J_{16,26}(\\sigma_{16}^{+}\\sigma_{26}^{-}+\\sigma_{16}^{-}\\sigma_{26}^{+}) \
+ J_{90,94}(\\sigma_{90}^{+}\\sigma_{94}^{-}+\\sigma_{90}^{-}\\sigma_{94}^{+})\
 \\\\ & + \
J_{118,119}(\\sigma_{118}^{+}\\sigma_{119}^{-}+\\sigma_{118}^{-}\\sigma_{119}^\
{+}) + J_{12,13}(\\sigma_{12}^{+}\\sigma_{13}^{-}+\\sigma_{12}^{-}\\sigma_{13}\
^{+}) + J_{22,23}(\\sigma_{22}^{+}\\sigma_{23}^{-}+\\sigma_{22}^{-}\\sigma_{\
23}^{+}) + \
J_{77,78}(\\sigma_{77}^{+}\\sigma_{78}^{-}+\\sigma_{77}^{-}\\sigma_{78}^{+}) \
\\\\ & + J_{49,50}(\\sigma_{49}^{+}\\sigma_{50}^{-}+\\sigma_{49}^{-}\\sigma_{\
50}^{+}) + \
J_{104,105}(\\sigma_{104}^{+}\\sigma_{105}^{-}+\\sigma_{104}^{-}\\sigma_{105}^\
{+}) + J_{114,115}(\\sigma_{114}^{+}\\sigma_{115}^{-}+\\sigma_{114}^{-}\\\
sigma_{115}^{+}) + \
J_{45,46}(\\sigma_{45}^{+}\\sigma_{46}^{-}+\\sigma_{45}^{-}\\sigma_{46}^{+}) \
\\\\ & + J_{50,51}(\\sigma_{50}^{+}\\sigma_{51}^{-}+\\sigma_{50}^{-}\\sigma_{\
51}^{+}) + \
J_{105,106}(\\sigma_{105}^{+}\\sigma_{106}^{-}+\\sigma_{105}^{-}\\sigma_{106}^\
{+}) + J_{72,81}(\\sigma_{72}^{+}\\sigma_{81}^{-}+\\sigma_{72}^{-}\\sigma_{81}\
^{+}) + J_{82,83}(\\sigma_{82}^{+}\\sigma_{83}^{-}+\\sigma_{82}^{-}\\sigma_{\
83}^{+}) \\\\ & + J_{46,47}(\\sigma_{46}^{+}\\sigma_{47}^{-}+\\sigma_{46}^{-}\
\\sigma_{47}^{+}) + \
J_{23,24}(\\sigma_{23}^{+}\\sigma_{24}^{-}+\\sigma_{23}^{-}\\sigma_{24}^{+}) \
+ J_{78,79}(\\sigma_{78}^{+}\\sigma_{79}^{-}+\\sigma_{78}^{-}\\sigma_{79}^{+})\
 + J_{83,84}(\\sigma_{83}^{+}\\sigma_{84}^{-}+\\sigma_{83}^{-}\\sigma_{84}^{+}\
) \\\\ & + \
J_{115,116}(\\sigma_{115}^{+}\\sigma_{116}^{-}+\\sigma_{115}^{-}\\sigma_{116}^\
{+}) + J_{19,20}(\\sigma_{19}^{+}\\sigma_{20}^{-}+\\sigma_{19}^{-}\\sigma_{20}\
^{+}) + J_{79,80}(\\sigma_{79}^{+}\\sigma_{80}^{-}+\\sigma_{79}^{-}\\sigma_{\
80}^{+}) + \
J_{24,25}(\\sigma_{24}^{+}\\sigma_{25}^{-}+\\sigma_{24}^{-}\\sigma_{25}^{+}) \
\\\\ & + J_{56,57}(\\sigma_{56}^{+}\\sigma_{57}^{-}+\\sigma_{56}^{-}\\sigma_{\
57}^{+}) + \
J_{93,106}(\\sigma_{93}^{+}\\sigma_{106}^{-}+\\sigma_{93}^{-}\\sigma_{106}^{+}\
) + J_{116,117}(\\sigma_{116}^{+}\\sigma_{117}^{-}+\\sigma_{116}^{-}\\sigma_{\
117}^{+}) + \
J_{20,21}(\\sigma_{20}^{+}\\sigma_{21}^{-}+\\sigma_{20}^{-}\\sigma_{21}^{+}) \
\\\\ & + J_{12,17}(\\sigma_{12}^{+}\\sigma_{17}^{-}+\\sigma_{12}^{-}\\sigma_{\
17}^{+}) + \
J_{41,53}(\\sigma_{41}^{+}\\sigma_{53}^{-}+\\sigma_{41}^{-}\\sigma_{53}^{+}) \
+ J_{57,58}(\\sigma_{57}^{+}\\sigma_{58}^{-}+\\sigma_{57}^{-}\\sigma_{58}^{+})\
 + J_{87,93}(\\sigma_{87}^{+}\\sigma_{93}^{-}+\\sigma_{87}^{-}\\sigma_{93}^{+}\
) \\\\ & + \
J_{30,31}(\\sigma_{30}^{+}\\sigma_{31}^{-}+\\sigma_{30}^{-}\\sigma_{31}^{+}) \
+ J_{25,26}(\\sigma_{25}^{+}\\sigma_{26}^{-}+\\sigma_{25}^{-}\\sigma_{26}^{+})\
 + J_{79,91}(\\sigma_{79}^{+}\\sigma_{91}^{-}+\\sigma_{79}^{-}\\sigma_{91}^{+}\
) + J_{26,27}(\\sigma_{26}^{+}\\sigma_{27}^{-}+\\sigma_{26}^{-}\\sigma_{27}^{+\
}) \\\\ & + \
J_{21,22}(\\sigma_{21}^{+}\\sigma_{22}^{-}+\\sigma_{21}^{-}\\sigma_{22}^{+}) \
+ J_{58,71}(\\sigma_{58}^{+}\\sigma_{71}^{-}+\\sigma_{58}^{-}\\sigma_{71}^{+})\
 + J_{31,32}(\\sigma_{31}^{+}\\sigma_{32}^{-}+\\sigma_{31}^{-}\\sigma_{32}^{+}\
) + J_{4,15}(\\sigma_{4}^{+}\\sigma_{15}^{-}+\\sigma_{4}^{-}\\sigma_{15}^{+}) \
\\\\ & + J_{86,87}(\\sigma_{86}^{+}\\sigma_{87}^{-}+\\sigma_{86}^{-}\\sigma_{\
87}^{+}) + \
J_{113,114}(\\sigma_{113}^{+}\\sigma_{114}^{-}+\\sigma_{113}^{-}\\sigma_{114}^\
{+}) + J_{104,111}(\\sigma_{104}^{+}\\sigma_{111}^{-}+\\sigma_{104}^{-}\\\
sigma_{111}^{+}) + \
J_{123,124}(\\sigma_{123}^{+}\\sigma_{124}^{-}+\\sigma_{123}^{-}\\sigma_{124}^\
{+}) \\\\ & + \
J_{27,28}(\\sigma_{27}^{+}\\sigma_{28}^{-}+\\sigma_{27}^{-}\\sigma_{28}^{+}) \
+ J_{34,43}(\\sigma_{34}^{+}\\sigma_{43}^{-}+\\sigma_{34}^{-}\\sigma_{43}^{+})\
 + J_{119,120}(\\sigma_{119}^{+}\\sigma_{120}^{-}+\\sigma_{119}^{-}\\sigma_{\
120}^{+}) + \
J_{64,65}(\\sigma_{64}^{+}\\sigma_{65}^{-}+\\sigma_{64}^{-}\\sigma_{65}^{+}) \
\\\\ & + J_{54,64}(\\sigma_{54}^{+}\\sigma_{64}^{-}+\\sigma_{54}^{-}\\sigma_{\
64}^{+}) + \
J_{32,36}(\\sigma_{32}^{+}\\sigma_{36}^{-}+\\sigma_{32}^{-}\\sigma_{36}^{+}) \
+ J_{60,61}(\\sigma_{60}^{+}\\sigma_{61}^{-}+\\sigma_{60}^{-}\\sigma_{61}^{+})\
 + J_{5,6}(\\sigma_{5}^{+}\\sigma_{6}^{-}+\\sigma_{5}^{-}\\sigma_{6}^{+}) \
\\\\ & + J_{14,18}(\\sigma_{14}^{+}\\sigma_{18}^{-}+\\sigma_{14}^{-}\\sigma_{\
18}^{+}) + \
J_{87,88}(\\sigma_{87}^{+}\\sigma_{88}^{-}+\\sigma_{87}^{-}\\sigma_{88}^{+}) \
+ J_{97,98}(\\sigma_{97}^{+}\\sigma_{98}^{-}+\\sigma_{97}^{-}\\sigma_{98}^{+})\
 + J_{1,2}(\\sigma_{1}^{+}\\sigma_{2}^{-}+\\sigma_{1}^{-}\\sigma_{2}^{+}) \
\\\\ & + J_{112,126}(\\sigma_{112}^{+}\\sigma_{126}^{-}+\\sigma_{112}^{-}\\\
sigma_{126}^{+}) + \
J_{28,29}(\\sigma_{28}^{+}\\sigma_{29}^{-}+\\sigma_{28}^{-}\\sigma_{29}^{+}) \
+ J_{45,54}(\\sigma_{45}^{+}\\sigma_{54}^{-}+\\sigma_{45}^{-}\\sigma_{54}^{+})\
 + J_{36,51}(\\sigma_{36}^{+}\\sigma_{51}^{-}+\\sigma_{36}^{-}\\sigma_{51}^{+}\
) \\\\ & + \
J_{88,89}(\\sigma_{88}^{+}\\sigma_{89}^{-}+\\sigma_{88}^{-}\\sigma_{89}^{+}) \
+ J_{120,121}(\\sigma_{120}^{+}\\sigma_{121}^{-}+\\sigma_{120}^{-}\\sigma_{\
121}^{+}) + \
J_{15,22}(\\sigma_{15}^{+}\\sigma_{22}^{-}+\\sigma_{15}^{-}\\sigma_{22}^{+}) \
+ J_{24,34}(\\sigma_{24}^{+}\\sigma_{34}^{-}+\\sigma_{24}^{-}\\sigma_{34}^{+})\
 \\\\ & + \
J_{84,85}(\\sigma_{84}^{+}\\sigma_{85}^{-}+\\sigma_{84}^{-}\\sigma_{85}^{+}) \
+ J_{29,30}(\\sigma_{29}^{+}\\sigma_{30}^{-}+\\sigma_{29}^{-}\\sigma_{30}^{+})\
 + J_{61,62}(\\sigma_{61}^{+}\\sigma_{62}^{-}+\\sigma_{61}^{-}\\sigma_{62}^{+}\
) + J_{70,74}(\\sigma_{70}^{+}\\sigma_{74}^{-}+\\sigma_{70}^{-}\\sigma_{74}^{+\
}) \\\\ & + \
J_{121,122}(\\sigma_{121}^{+}\\sigma_{122}^{-}+\\sigma_{121}^{-}\\sigma_{122}^\
{+}) + J_{2,3}(\\sigma_{2}^{+}\\sigma_{3}^{-}+\\sigma_{2}^{-}\\sigma_{3}^{+}) \
+ J_{122,123}(\\sigma_{122}^{+}\\sigma_{123}^{-}+\\sigma_{122}^{-}\\sigma_{\
123}^{+}) + \
J_{62,63}(\\sigma_{62}^{+}\\sigma_{63}^{-}+\\sigma_{62}^{-}\\sigma_{63}^{+}) \
\\\\ & + J_{117,118}(\\sigma_{117}^{+}\\sigma_{118}^{-}+\\sigma_{117}^{-}\\\
sigma_{118}^{+}) + \
J_{109,114}(\\sigma_{109}^{+}\\sigma_{114}^{-}+\\sigma_{109}^{-}\\sigma_{114}^\
{+}) + J_{94,95}(\\sigma_{94}^{+}\\sigma_{95}^{-}+\\sigma_{94}^{-}\\sigma_{95}\
^{+}) + J_{37,52}(\\sigma_{37}^{+}\\sigma_{52}^{-}+\\sigma_{37}^{-}\\sigma_{\
52}^{+}) \\\\ & + J_{58,59}(\\sigma_{58}^{+}\\sigma_{59}^{-}+\\sigma_{58}^{-}\
\\sigma_{59}^{+}) + \
J_{3,4}(\\sigma_{3}^{+}\\sigma_{4}^{-}+\\sigma_{3}^{-}\\sigma_{4}^{+}) + \
J_{33,39}(\\sigma_{33}^{+}\\sigma_{39}^{-}+\\sigma_{33}^{-}\\sigma_{39}^{+}) \
+ J_{95,96}(\\sigma_{95}^{+}\\sigma_{96}^{-}+\\sigma_{95}^{-}\\sigma_{96}^{+})\
 \\\\ & + \
J_{68,69}(\\sigma_{68}^{+}\\sigma_{69}^{-}+\\sigma_{68}^{-}\\sigma_{69}^{+}) \
+ J_{63,64}(\\sigma_{63}^{+}\\sigma_{64}^{-}+\\sigma_{63}^{-}\\sigma_{64}^{+})\
 + J_{71,77}(\\sigma_{71}^{+}\\sigma_{77}^{-}+\\sigma_{71}^{-}\\sigma_{77}^{+}\
) + J_{111,122}(\\sigma_{111}^{+}\\sigma_{122}^{-}+\\sigma_{111}^{-}\\sigma_{\
122}^{+}) \\\\ & + \
J_{4,5}(\\sigma_{4}^{+}\\sigma_{5}^{-}+\\sigma_{4}^{-}\\sigma_{5}^{+}) + \
J_{59,60}(\\sigma_{59}^{+}\\sigma_{60}^{-}+\\sigma_{59}^{-}\\sigma_{60}^{+}) \
+ J_{96,109}(\\sigma_{96}^{+}\\sigma_{109}^{-}+\\sigma_{96}^{-}\\sigma_{109}^{\
+}) + J_{124,125}(\\sigma_{124}^{+}\\sigma_{125}^{-}+\\sigma_{124}^{-}\\sigma_\
{125}^{+}) \\\\ & + \
J_{69,70}(\\sigma_{69}^{+}\\sigma_{70}^{-}+\\sigma_{69}^{-}\\sigma_{70}^{+}) \
+ J_{35,47}(\\sigma_{35}^{+}\\sigma_{47}^{-}+\\sigma_{35}^{-}\\sigma_{47}^{+})\
 + J_{101,102}(\\sigma_{101}^{+}\\sigma_{102}^{-}+\\sigma_{101}^{-}\\sigma_{\
102}^{+}) + \
J_{0,1}(\\sigma_{0}^{+}\\sigma_{1}^{-}+\\sigma_{0}^{-}\\sigma_{1}^{+}) \\\\ & \
+ J_{10,11}(\\sigma_{10}^{+}\\sigma_{11}^{-}+\\sigma_{10}^{-}\\sigma_{11}^{+})\
 + J_{65,66}(\\sigma_{65}^{+}\\sigma_{66}^{-}+\\sigma_{65}^{-}\\sigma_{66}^{+}\
) + J_{37,38}(\\sigma_{37}^{+}\\sigma_{38}^{-}+\\sigma_{37}^{-}\\sigma_{38}^{+\
}) + J_{28,35}(\\sigma_{28}^{+}\\sigma_{35}^{-}+\\sigma_{28}^{-}\\sigma_{35}^{\
+}) \\\\ & + J_{102,103}(\\sigma_{102}^{+}\\sigma_{103}^{-}+\\sigma_{102}^{-}\
\\sigma_{103}^{+}) + \
J_{92,102}(\\sigma_{92}^{+}\\sigma_{102}^{-}+\\sigma_{92}^{-}\\sigma_{102}^{+}\
) + J_{6,7}(\\sigma_{6}^{+}\\sigma_{7}^{-}+\\sigma_{6}^{-}\\sigma_{7}^{+}) + \
J_{98,99}(\\sigma_{98}^{+}\\sigma_{99}^{-}+\\sigma_{98}^{-}\\sigma_{99}^{+}) \
\\\\ & + J_{43,44}(\\sigma_{43}^{+}\\sigma_{44}^{-}+\\sigma_{43}^{-}\\sigma_{\
44}^{+}) + \
J_{52,56}(\\sigma_{52}^{+}\\sigma_{56}^{-}+\\sigma_{52}^{-}\\sigma_{56}^{+}) \
+ J_{125,126}(\\sigma_{125}^{+}\\sigma_{126}^{-}+\\sigma_{125}^{-}\\sigma_{\
126}^{+}) + \
J_{39,40}(\\sigma_{39}^{+}\\sigma_{40}^{-}+\\sigma_{39}^{-}\\sigma_{40}^{+}) \
\\\\ & + J_{8,16}(\\sigma_{8}^{+}\\sigma_{16}^{-}+\\sigma_{8}^{-}\\sigma_{16}^\
{+}) + J_{66,67}(\\sigma_{66}^{+}\\sigma_{67}^{-}+\\sigma_{66}^{-}\\sigma_{67}\
^{+}) + J_{11,12}(\\sigma_{11}^{+}\\sigma_{12}^{-}+\\sigma_{11}^{-}\\sigma_{\
12}^{+}) + \
J_{76,77}(\\sigma_{76}^{+}\\sigma_{77}^{-}+\\sigma_{76}^{-}\\sigma_{77}^{+}) \
\\\\ & + J_{83,92}(\\sigma_{83}^{+}\\sigma_{92}^{-}+\\sigma_{83}^{-}\\sigma_{\
92}^{+}) + \
J_{74,89}(\\sigma_{74}^{+}\\sigma_{89}^{-}+\\sigma_{74}^{-}\\sigma_{89}^{+}) \
+ J_{7,8}(\\sigma_{7}^{+}\\sigma_{8}^{-}+\\sigma_{7}^{-}\\sigma_{8}^{+}) + \
J_{53,60}(\\sigma_{53}^{+}\\sigma_{60}^{-}+\\sigma_{53}^{-}\\sigma_{60}^{+}) \
\\\\ & + \\Omega_{d,0}(U_{0}^{(0,1)}(t)+U_{1}^{(0,14)}(t))\\sigma_{0}^{X} + \
\\Omega_{d,1}(U_{3}^{(1,2)}(t)+U_{2}^{(1,0)}(t))\\sigma_{1}^{X} \\\\ & + \
\\Omega_{d,2}(U_{5}^{(2,3)}(t)+U_{4}^{(2,1)}(t))\\sigma_{2}^{X} + \
\\Omega_{d,3}(U_{7}^{(3,4)}(t)+U_{6}^{(3,2)}(t))\\sigma_{3}^{X} \\\\ & + \
\\Omega_{d,4}(U_{10}^{(4,15)}(t)+U_{9}^{(4,5)}(t)+U_{8}^{(4,3)}(t))\\sigma_{4}\
^{X} + \\Omega_{d,5}(U_{12}^{(5,6)}(t)+U_{11}^{(5,4)}(t))\\sigma_{5}^{X} \\\\ \
& + \\Omega_{d,6}(U_{14}^{(6,7)}(t)+U_{13}^{(6,5)}(t))\\sigma_{6}^{X} + \
\\Omega_{d,7}(U_{16}^{(7,8)}(t)+U_{15}^{(7,6)}(t))\\sigma_{7}^{X} \\\\ & + \
\\Omega_{d,8}(U_{18}^{(8,9)}(t)+U_{17}^{(8,7)}(t)+U_{19}^{(8,16)}(t))\\sigma_{\
8}^{X} + \\Omega_{d,9}(U_{21}^{(9,10)}(t)+U_{20}^{(9,8)}(t))\\sigma_{9}^{X} \
\\\\ & + \\Omega_{d,10}(U_{23}^{(10,11)}(t)+U_{22}^{(10,9)}(t))\\sigma_{10}^{\
X} + \\Omega_{d,11}(U_{25}^{(11,12)}(t)+U_{24}^{(11,10)}(t))\\sigma_{11}^{X} \
\\\\ & + \\Omega_{d,12}(U_{27}^{(12,13)}(t)+U_{28}^{(12,17)}(t)+U_{26}^{(12,\
11)}(t))\\sigma_{12}^{X} + \
\\Omega_{d,13}(U_{29}^{(13,12)}(t))\\sigma_{13}^{X} \\\\ & + \
\\Omega_{d,14}(U_{31}^{(14,18)}(t)+U_{30}^{(14,0)}(t))\\sigma_{14}^{X} + \
\\Omega_{d,15}(U_{32}^{(15,4)}(t)+U_{33}^{(15,22)}(t))\\sigma_{15}^{X} \\\\ & \
+ \\Omega_{d,16}(U_{35}^{(16,26)}(t)+U_{34}^{(16,8)}(t))\\sigma_{16}^{X} + \
\\Omega_{d,17}(U_{36}^{(17,12)}(t)+U_{37}^{(17,30)}(t))\\sigma_{17}^{X} \\\\ \
& + \\Omega_{d,18}(U_{39}^{(18,19)}(t)+U_{38}^{(18,14)}(t))\\sigma_{18}^{X} + \
\\Omega_{d,19}(U_{41}^{(19,20)}(t)+U_{40}^{(19,18)}(t))\\sigma_{19}^{X} \\\\ \
& + \\Omega_{d,20}(U_{43}^{(20,21)}(t)+U_{42}^{(20,19)}(t)+U_{44}^{(20,33)}(t)\
)\\sigma_{20}^{X} + \
\\Omega_{d,21}(U_{46}^{(21,22)}(t)+U_{45}^{(21,20)}(t))\\sigma_{21}^{X} \\\\ \
& + \\Omega_{d,22}(U_{49}^{(22,23)}(t)+U_{48}^{(22,21)}(t)+U_{47}^{(22,15)}(t)\
)\\sigma_{22}^{X} + \
\\Omega_{d,23}(U_{50}^{(23,22)}(t)+U_{51}^{(23,24)}(t))\\sigma_{23}^{X} \\\\ \
& + \\Omega_{d,24}(U_{52}^{(24,23)}(t)+U_{54}^{(24,34)}(t)+U_{53}^{(24,25)}(t)\
)\\sigma_{24}^{X} + \
\\Omega_{d,25}(U_{56}^{(25,26)}(t)+U_{55}^{(25,24)}(t))\\sigma_{25}^{X} \\\\ \
& + \\Omega_{d,26}(U_{58}^{(26,25)}(t)+U_{59}^{(26,27)}(t)+U_{57}^{(26,16)}(t)\
)\\sigma_{26}^{X} + \
\\Omega_{d,27}(U_{61}^{(27,28)}(t)+U_{60}^{(27,26)}(t))\\sigma_{27}^{X} \\\\ \
& + \\Omega_{d,28}(U_{63}^{(28,29)}(t)+U_{62}^{(28,27)}(t)+U_{64}^{(28,35)}(t)\
)\\sigma_{28}^{X} + \
\\Omega_{d,29}(U_{66}^{(29,30)}(t)+U_{65}^{(29,28)}(t))\\sigma_{29}^{X} \\\\ \
& + \\Omega_{d,30}(U_{67}^{(30,17)}(t)+U_{69}^{(30,31)}(t)+U_{68}^{(30,29)}(t)\
)\\sigma_{30}^{X} + \
\\Omega_{d,31}(U_{70}^{(31,30)}(t)+U_{71}^{(31,32)}(t))\\sigma_{31}^{X} \\\\ \
& + \\Omega_{d,32}(U_{73}^{(32,36)}(t)+U_{72}^{(32,31)}(t))\\sigma_{32}^{X} + \
\\Omega_{d,33}(U_{75}^{(33,39)}(t)+U_{74}^{(33,20)}(t))\\sigma_{33}^{X} \\\\ \
& + \\Omega_{d,34}(U_{77}^{(34,43)}(t)+U_{76}^{(34,24)}(t))\\sigma_{34}^{X} + \
\\Omega_{d,35}(U_{79}^{(35,47)}(t)+U_{78}^{(35,28)}(t))\\sigma_{35}^{X} \\\\ \
& + \\Omega_{d,36}(U_{81}^{(36,51)}(t)+U_{80}^{(36,32)}(t))\\sigma_{36}^{X} + \
\\Omega_{d,37}(U_{83}^{(37,52)}(t)+U_{82}^{(37,38)}(t))\\sigma_{37}^{X} \\\\ \
& + \\Omega_{d,38}(U_{85}^{(38,39)}(t)+U_{84}^{(38,37)}(t))\\sigma_{38}^{X} + \
\\Omega_{d,39}(U_{86}^{(39,33)}(t)+U_{88}^{(39,40)}(t)+U_{87}^{(39,38)}(t))\\\
sigma_{39}^{X} \\\\ & + \
\\Omega_{d,40}(U_{90}^{(40,41)}(t)+U_{89}^{(40,39)}(t))\\sigma_{40}^{X} + \
\\Omega_{d,41}(U_{93}^{(41,53)}(t)+U_{92}^{(41,42)}(t)+U_{91}^{(41,40)}(t))\\\
sigma_{41}^{X} \\\\ & + \
\\Omega_{d,42}(U_{95}^{(42,43)}(t)+U_{94}^{(42,41)}(t))\\sigma_{42}^{X} + \
\\Omega_{d,43}(U_{96}^{(43,34)}(t)+U_{98}^{(43,44)}(t)+U_{97}^{(43,42)}(t))\\\
sigma_{43}^{X} \\\\ & + \
\\Omega_{d,44}(U_{100}^{(44,45)}(t)+U_{99}^{(44,43)}(t))\\sigma_{44}^{X} + \
\\Omega_{d,45}(U_{103}^{(45,54)}(t)+U_{102}^{(45,46)}(t)+U_{101}^{(45,44)}(t))\
\\sigma_{45}^{X} \\\\ & + \
\\Omega_{d,46}(U_{104}^{(46,45)}(t)+U_{105}^{(46,47)}(t))\\sigma_{46}^{X} + \
\\Omega_{d,47}(U_{106}^{(47,35)}(t)+U_{108}^{(47,48)}(t)+U_{107}^{(47,46)}(t))\
\\sigma_{47}^{X} \\\\ & + \
\\Omega_{d,48}(U_{109}^{(48,47)}(t)+U_{110}^{(48,49)}(t))\\sigma_{48}^{X} + \
\\Omega_{d,49}(U_{113}^{(49,55)}(t)+U_{111}^{(49,48)}(t)+U_{112}^{(49,50)}(t))\
\\sigma_{49}^{X} \\\\ & + \
\\Omega_{d,50}(U_{115}^{(50,51)}(t)+U_{114}^{(50,49)}(t))\\sigma_{50}^{X} + \
\\Omega_{d,51}(U_{117}^{(51,50)}(t)+U_{116}^{(51,36)}(t))\\sigma_{51}^{X} \
\\\\ & + \\Omega_{d,52}(U_{119}^{(52,56)}(t)+U_{118}^{(52,37)}(t))\\sigma_{52}\
^{X} + \\Omega_{d,53}(U_{121}^{(53,60)}(t)+U_{120}^{(53,41)}(t))\\sigma_{53}^{\
X} \\\\ & + \
\\Omega_{d,54}(U_{123}^{(54,64)}(t)+U_{122}^{(54,45)}(t))\\sigma_{54}^{X} + \
\\Omega_{d,55}(U_{125}^{(55,68)}(t)+U_{124}^{(55,49)}(t))\\sigma_{55}^{X} \
\\\\ & + \\Omega_{d,56}(U_{126}^{(56,52)}(t)+U_{127}^{(56,57)}(t))\\sigma_{56}\
^{X} + \\Omega_{d,57}(U_{129}^{(57,58)}(t)+U_{128}^{(57,56)}(t))\\sigma_{57}^{\
X} \\\\ & + \
\\Omega_{d,58}(U_{132}^{(58,71)}(t)+U_{131}^{(58,59)}(t)+U_{130}^{(58,57)}(t))\
\\sigma_{58}^{X} + \
\\Omega_{d,59}(U_{133}^{(59,58)}(t)+U_{134}^{(59,60)}(t))\\sigma_{59}^{X} \
\\\\ & + \\Omega_{d,60}(U_{137}^{(60,61)}(t)+U_{136}^{(60,59)}(t)+U_{135}^{(\
60,53)}(t))\\sigma_{60}^{X} + \
\\Omega_{d,61}(U_{139}^{(61,62)}(t)+U_{138}^{(61,60)}(t))\\sigma_{61}^{X} \
\\\\ & + \\Omega_{d,62}(U_{142}^{(62,72)}(t)+U_{140}^{(62,61)}(t)+U_{141}^{(\
62,63)}(t))\\sigma_{62}^{X} + \
\\Omega_{d,63}(U_{144}^{(63,64)}(t)+U_{143}^{(63,62)}(t))\\sigma_{63}^{X} \
\\\\ & + \\Omega_{d,64}(U_{147}^{(64,65)}(t)+U_{145}^{(64,54)}(t)+U_{146}^{(\
64,63)}(t))\\sigma_{64}^{X} + \
\\Omega_{d,65}(U_{149}^{(65,66)}(t)+U_{148}^{(65,64)}(t))\\sigma_{65}^{X} \
\\\\ & + \\Omega_{d,66}(U_{151}^{(66,67)}(t)+U_{152}^{(66,73)}(t)+U_{150}^{(\
66,65)}(t))\\sigma_{66}^{X} + \
\\Omega_{d,67}(U_{154}^{(67,68)}(t)+U_{153}^{(67,66)}(t))\\sigma_{67}^{X} \
\\\\ & + \\Omega_{d,68}(U_{156}^{(68,67)}(t)+U_{155}^{(68,55)}(t)+U_{157}^{(\
68,69)}(t))\\sigma_{68}^{X} + \
\\Omega_{d,69}(U_{158}^{(69,68)}(t)+U_{159}^{(69,70)}(t))\\sigma_{69}^{X} \
\\\\ & + \\Omega_{d,70}(U_{160}^{(70,69)}(t)+U_{161}^{(70,74)}(t))\\sigma_{70}\
^{X} + \\Omega_{d,71}(U_{163}^{(71,77)}(t)+U_{162}^{(71,58)}(t))\\sigma_{71}^{\
X} \\\\ & + \
\\Omega_{d,72}(U_{165}^{(72,81)}(t)+U_{164}^{(72,62)}(t))\\sigma_{72}^{X} + \
\\Omega_{d,73}(U_{167}^{(73,85)}(t)+U_{166}^{(73,66)}(t))\\sigma_{73}^{X} \
\\\\ & + \\Omega_{d,74}(U_{168}^{(74,70)}(t)+U_{169}^{(74,89)}(t))\\sigma_{74}\
^{X} + \\Omega_{d,75}(U_{170}^{(75,76)}(t)+U_{171}^{(75,90)}(t))\\sigma_{75}^{\
X} \\\\ & + \
\\Omega_{d,76}(U_{173}^{(76,77)}(t)+U_{172}^{(76,75)}(t))\\sigma_{76}^{X} + \
\\Omega_{d,77}(U_{176}^{(77,78)}(t)+U_{174}^{(77,71)}(t)+U_{175}^{(77,76)}(t))\
\\sigma_{77}^{X} \\\\ & + \
\\Omega_{d,78}(U_{178}^{(78,79)}(t)+U_{177}^{(78,77)}(t))\\sigma_{78}^{X} + \
\\Omega_{d,79}(U_{180}^{(79,80)}(t)+U_{181}^{(79,91)}(t)+U_{179}^{(79,78)}(t))\
\\sigma_{79}^{X} \\\\ & + \
\\Omega_{d,80}(U_{183}^{(80,81)}(t)+U_{182}^{(80,79)}(t))\\sigma_{80}^{X} + \
\\Omega_{d,81}(U_{185}^{(81,80)}(t)+U_{184}^{(81,72)}(t)+U_{186}^{(81,82)}(t))\
\\sigma_{81}^{X} \\\\ & + \
\\Omega_{d,82}(U_{187}^{(82,81)}(t)+U_{188}^{(82,83)}(t))\\sigma_{82}^{X} + \
\\Omega_{d,83}(U_{191}^{(83,92)}(t)+U_{190}^{(83,84)}(t)+U_{189}^{(83,82)}(t))\
\\sigma_{83}^{X} \\\\ & + \
\\Omega_{d,84}(U_{192}^{(84,83)}(t)+U_{193}^{(84,85)}(t))\\sigma_{84}^{X} + \
\\Omega_{d,85}(U_{194}^{(85,73)}(t)+U_{196}^{(85,86)}(t)+U_{195}^{(85,84)}(t))\
\\sigma_{85}^{X} \\\\ & + \
\\Omega_{d,86}(U_{198}^{(86,87)}(t)+U_{197}^{(86,85)}(t))\\sigma_{86}^{X} + \
\\Omega_{d,87}(U_{200}^{(87,88)}(t)+U_{199}^{(87,86)}(t)+U_{201}^{(87,93)}(t))\
\\sigma_{87}^{X} \\\\ & + \
\\Omega_{d,88}(U_{203}^{(88,89)}(t)+U_{202}^{(88,87)}(t))\\sigma_{88}^{X} + \
\\Omega_{d,89}(U_{204}^{(89,74)}(t)+U_{205}^{(89,88)}(t))\\sigma_{89}^{X} \
\\\\ & + \\Omega_{d,90}(U_{207}^{(90,94)}(t)+U_{206}^{(90,75)}(t))\\sigma_{90}\
^{X} + \\Omega_{d,91}(U_{209}^{(91,98)}(t)+U_{208}^{(91,79)}(t))\\sigma_{91}^{\
X} \\\\ & + \
\\Omega_{d,92}(U_{211}^{(92,102)}(t)+U_{210}^{(92,83)}(t))\\sigma_{92}^{X} + \
\\Omega_{d,93}(U_{213}^{(93,106)}(t)+U_{212}^{(93,87)}(t))\\sigma_{93}^{X} \\\
\\ & + \\Omega_{d,94}(U_{214}^{(94,90)}(t)+U_{215}^{(94,95)}(t))\\sigma_{94}^{\
X} + \\Omega_{d,95}(U_{216}^{(95,94)}(t)+U_{217}^{(95,96)}(t))\\sigma_{95}^{X}\
 \\\\ & + \
\\Omega_{d,96}(U_{220}^{(96,109)}(t)+U_{219}^{(96,97)}(t)+U_{218}^{(96,95)}(t)\
)\\sigma_{96}^{X} + \\Omega_{d,97}(U_{221}^{(97,96)}(t)+U_{222}^{(97,98)}(t))\
\\sigma_{97}^{X} \\\\ & + \
\\Omega_{d,98}(U_{223}^{(98,91)}(t)+U_{225}^{(98,99)}(t)+U_{224}^{(98,97)}(t))\
\\sigma_{98}^{X} + \\Omega_{d,99}(U_{227}^{(99,100)}(t)+U_{226}^{(99,98)}(t))\
\\sigma_{99}^{X} \\\\ & + \
\\Omega_{d,100}(U_{229}^{(100,101)}(t)+U_{228}^{(100,99)}(t)+U_{230}^{(100,\
110)}(t))\\sigma_{100}^{X} + \
\\Omega_{d,101}(U_{232}^{(101,102)}(t)+U_{231}^{(101,100)}(t))\\sigma_{101}^{\
X} \\\\ & + \
\\Omega_{d,102}(U_{233}^{(102,92)}(t)+U_{234}^{(102,101)}(t)+U_{235}^{(102,\
103)}(t))\\sigma_{102}^{X} + \
\\Omega_{d,103}(U_{237}^{(103,104)}(t)+U_{236}^{(103,102)}(t))\\sigma_{103}^{\
X} \\\\ & + \
\\Omega_{d,104}(U_{239}^{(104,105)}(t)+U_{238}^{(104,103)}(t)+U_{240}^{(104,\
111)}(t))\\sigma_{104}^{X} + \
\\Omega_{d,105}(U_{241}^{(105,104)}(t)+U_{242}^{(105,106)}(t))\\sigma_{105}^{\
X} \\\\ & + \
\\Omega_{d,106}(U_{245}^{(106,107)}(t)+U_{244}^{(106,105)}(t)+U_{243}^{(106,\
93)}(t))\\sigma_{106}^{X} + \
\\Omega_{d,107}(U_{247}^{(107,108)}(t)+U_{246}^{(107,106)}(t))\\sigma_{107}^{\
X} \\\\ & + \
\\Omega_{d,108}(U_{248}^{(108,107)}(t)+U_{249}^{(108,112)}(t))\\sigma_{108}^{\
X} + \\Omega_{d,109}(U_{250}^{(109,96)}(t)+U_{251}^{(109,114)}(t))\\sigma_{\
109}^{X} \\\\ & + \
\\Omega_{d,110}(U_{253}^{(110,118)}(t)+U_{252}^{(110,100)}(t))\\sigma_{110}^{\
X} + \\Omega_{d,111}(U_{255}^{(111,122)}(t)+U_{254}^{(111,104)}(t))\\sigma_{\
111}^{X} \\\\ & + \
\\Omega_{d,112}(U_{256}^{(112,108)}(t)+U_{257}^{(112,126)}(t))\\sigma_{112}^{\
X} + \\Omega_{d,113}(U_{258}^{(113,114)}(t))\\sigma_{113}^{X} \\\\ & + \
\\Omega_{d,114}(U_{261}^{(114,115)}(t)+U_{260}^{(114,113)}(t)+U_{259}^{(114,\
109)}(t))\\sigma_{114}^{X} + \
\\Omega_{d,115}(U_{263}^{(115,116)}(t)+U_{262}^{(115,114)}(t))\\sigma_{115}^{\
X} \\\\ & + \
\\Omega_{d,116}(U_{265}^{(116,117)}(t)+U_{264}^{(116,115)}(t))\\sigma_{116}^{\
X} + \\Omega_{d,117}(U_{267}^{(117,118)}(t)+U_{266}^{(117,116)}(t))\\sigma_{\
117}^{X} \\\\ & + \
\\Omega_{d,118}(U_{270}^{(118,119)}(t)+U_{269}^{(118,117)}(t)+U_{268}^{(118,\
110)}(t))\\sigma_{118}^{X} + \
\\Omega_{d,119}(U_{272}^{(119,120)}(t)+U_{271}^{(119,118)}(t))\\sigma_{119}^{\
X} \\\\ & + \
\\Omega_{d,120}(U_{274}^{(120,121)}(t)+U_{273}^{(120,119)}(t))\\sigma_{120}^{\
X} + \\Omega_{d,121}(U_{276}^{(121,122)}(t)+U_{275}^{(121,120)}(t))\\sigma_{\
121}^{X} \\\\ & + \
\\Omega_{d,122}(U_{279}^{(122,123)}(t)+U_{277}^{(122,111)}(t)+U_{278}^{(122,\
121)}(t))\\sigma_{122}^{X} + \
\\Omega_{d,123}(U_{281}^{(123,124)}(t)+U_{280}^{(123,122)}(t))\\sigma_{123}^{\
X} \\\\ & + \
\\Omega_{d,124}(U_{283}^{(124,125)}(t)+U_{282}^{(124,123)}(t))\\sigma_{124}^{\
X} + \\Omega_{d,125}(U_{285}^{(125,126)}(t)+U_{284}^{(125,124)}(t))\\sigma_{\
125}^{X} \\\\ & + \
\\Omega_{d,126}(U_{286}^{(126,112)}(t)+U_{287}^{(126,125)}(t))\\sigma_{126}^{\
X} \\\\ \\end{align}", 
       "h_str" -> {
        "_SUM[i,0,126,wq{i}/2*(I{i}-Z{i})]", 
         "_SUM[i,0,126,delta{i}/2*O{i}*O{i}]", 
         "_SUM[i,0,126,-delta{i}/2*O{i}]", 
         "_SUM[i,0,126,omegad{i}*X{i}||D{i}]", "jq62q72*Sp62*Sm72", 
         "jq62q72*Sm62*Sp72", "jq67q68*Sp67*Sm68", "jq67q68*Sm67*Sp68", 
         "jq44q45*Sp44*Sm45", "jq44q45*Sm44*Sp45", "jq99q100*Sp99*Sm100", 
         "jq99q100*Sm99*Sp100", "jq108q112*Sp108*Sm112", 
         "jq108q112*Sm108*Sp112", "jq8q9*Sp8*Sm9", "jq8q9*Sm8*Sp9", 
         "jq40q41*Sp40*Sm41", "jq40q41*Sm40*Sp41", "jq0q14*Sp0*Sm14", 
         "jq0q14*Sm0*Sp14", "jq17q30*Sp17*Sm30", "jq17q30*Sm17*Sp30", 
         "jq100q101*Sp100*Sm101", "jq100q101*Sm100*Sp101", 
         "jq91q98*Sp91*Sm98", "jq91q98*Sm91*Sp98", "jq100q110*Sp100*Sm110", 
         "jq100q110*Sm100*Sp110", "jq75q90*Sp75*Sm90", "jq75q90*Sm75*Sp90", 
         "jq41q42*Sp41*Sm42", "jq41q42*Sm41*Sp42", "jq96q97*Sp96*Sm97", 
         "jq96q97*Sm96*Sp97", "jq18q19*Sp18*Sm19", "jq18q19*Sm18*Sp19", 
         "jq55q68*Sp55*Sm68", "jq55q68*Sm55*Sp68", "jq9q10*Sp9*Sm10", 
         "jq9q10*Sm9*Sp10", "jq49q55*Sp49*Sm55", "jq49q55*Sm49*Sp55", 
         "jq106q107*Sp106*Sm107", "jq106q107*Sm106*Sp107", 
         "jq47q48*Sp47*Sm48", "jq47q48*Sm47*Sp48", "jq42q43*Sp42*Sm43", 
         "jq42q43*Sm42*Sp43", "jq107q108*Sp107*Sm108", 
         "jq107q108*Sm107*Sp108", "jq73q85*Sp73*Sm85", "jq73q85*Sm73*Sp85", 
         "jq38q39*Sp38*Sm39", "jq38q39*Sm38*Sp39", "jq20q33*Sp20*Sm33", 
         "jq20q33*Sm20*Sp33", "jq48q49*Sp48*Sm49", "jq48q49*Sm48*Sp49", 
         "jq103q104*Sp103*Sm104", "jq103q104*Sm103*Sp104", 
         "jq80q81*Sp80*Sm81", "jq80q81*Sm80*Sp81", "jq75q76*Sp75*Sm76", 
         "jq75q76*Sm75*Sp76", "jq66q73*Sp66*Sm73", "jq66q73*Sm66*Sp73", 
         "jq85q86*Sp85*Sm86", "jq85q86*Sm85*Sp86", "jq81q82*Sp81*Sm82", 
         "jq81q82*Sm81*Sp82", "jq110q118*Sp110*Sm118", 
         "jq110q118*Sm110*Sp118", "jq16q26*Sp16*Sm26", "jq16q26*Sm16*Sp26", 
         "jq90q94*Sp90*Sm94", "jq90q94*Sm90*Sp94", "jq118q119*Sp118*Sm119", 
         "jq118q119*Sm118*Sp119", "jq12q13*Sp12*Sm13", "jq12q13*Sm12*Sp13", 
         "jq22q23*Sp22*Sm23", "jq22q23*Sm22*Sp23", "jq77q78*Sp77*Sm78", 
         "jq77q78*Sm77*Sp78", "jq49q50*Sp49*Sm50", "jq49q50*Sm49*Sp50", 
         "jq104q105*Sp104*Sm105", "jq104q105*Sm104*Sp105", 
         "jq114q115*Sp114*Sm115", "jq114q115*Sm114*Sp115", 
         "jq45q46*Sp45*Sm46", "jq45q46*Sm45*Sp46", "jq50q51*Sp50*Sm51", 
         "jq50q51*Sm50*Sp51", "jq105q106*Sp105*Sm106", 
         "jq105q106*Sm105*Sp106", "jq72q81*Sp72*Sm81", "jq72q81*Sm72*Sp81", 
         "jq82q83*Sp82*Sm83", "jq82q83*Sm82*Sp83", "jq46q47*Sp46*Sm47", 
         "jq46q47*Sm46*Sp47", "jq23q24*Sp23*Sm24", "jq23q24*Sm23*Sp24", 
         "jq78q79*Sp78*Sm79", "jq78q79*Sm78*Sp79", "jq83q84*Sp83*Sm84", 
         "jq83q84*Sm83*Sp84", "jq115q116*Sp115*Sm116", 
         "jq115q116*Sm115*Sp116", "jq19q20*Sp19*Sm20", "jq19q20*Sm19*Sp20", 
         "jq79q80*Sp79*Sm80", "jq79q80*Sm79*Sp80", "jq24q25*Sp24*Sm25", 
         "jq24q25*Sm24*Sp25", "jq56q57*Sp56*Sm57", "jq56q57*Sm56*Sp57", 
         "jq93q106*Sp93*Sm106", "jq93q106*Sm93*Sp106", 
         "jq116q117*Sp116*Sm117", "jq116q117*Sm116*Sp117", 
         "jq20q21*Sp20*Sm21", "jq20q21*Sm20*Sp21", "jq12q17*Sp12*Sm17", 
         "jq12q17*Sm12*Sp17", "jq41q53*Sp41*Sm53", "jq41q53*Sm41*Sp53", 
         "jq57q58*Sp57*Sm58", "jq57q58*Sm57*Sp58", "jq87q93*Sp87*Sm93", 
         "jq87q93*Sm87*Sp93", "jq30q31*Sp30*Sm31", "jq30q31*Sm30*Sp31", 
         "jq25q26*Sp25*Sm26", "jq25q26*Sm25*Sp26", "jq79q91*Sp79*Sm91", 
         "jq79q91*Sm79*Sp91", "jq26q27*Sp26*Sm27", "jq26q27*Sm26*Sp27", 
         "jq21q22*Sp21*Sm22", "jq21q22*Sm21*Sp22", "jq58q71*Sp58*Sm71", 
         "jq58q71*Sm58*Sp71", "jq31q32*Sp31*Sm32", "jq31q32*Sm31*Sp32", 
         "jq4q15*Sp4*Sm15", "jq4q15*Sm4*Sp15", "jq86q87*Sp86*Sm87", 
         "jq86q87*Sm86*Sp87", "jq113q114*Sp113*Sm114", 
         "jq113q114*Sm113*Sp114", "jq104q111*Sp104*Sm111", 
         "jq104q111*Sm104*Sp111", "jq123q124*Sp123*Sm124", 
         "jq123q124*Sm123*Sp124", "jq27q28*Sp27*Sm28", "jq27q28*Sm27*Sp28", 
         "jq34q43*Sp34*Sm43", "jq34q43*Sm34*Sp43", "jq119q120*Sp119*Sm120", 
         "jq119q120*Sm119*Sp120", "jq64q65*Sp64*Sm65", "jq64q65*Sm64*Sp65", 
         "jq54q64*Sp54*Sm64", "jq54q64*Sm54*Sp64", "jq32q36*Sp32*Sm36", 
         "jq32q36*Sm32*Sp36", "jq60q61*Sp60*Sm61", "jq60q61*Sm60*Sp61", 
         "jq5q6*Sp5*Sm6", "jq5q6*Sm5*Sp6", "jq14q18*Sp14*Sm18", 
         "jq14q18*Sm14*Sp18", "jq87q88*Sp87*Sm88", "jq87q88*Sm87*Sp88", 
         "jq97q98*Sp97*Sm98", "jq97q98*Sm97*Sp98", "jq1q2*Sp1*Sm2", 
         "jq1q2*Sm1*Sp2", "jq112q126*Sp112*Sm126", "jq112q126*Sm112*Sp126", 
         "jq28q29*Sp28*Sm29", "jq28q29*Sm28*Sp29", "jq45q54*Sp45*Sm54", 
         "jq45q54*Sm45*Sp54", "jq36q51*Sp36*Sm51", "jq36q51*Sm36*Sp51", 
         "jq88q89*Sp88*Sm89", "jq88q89*Sm88*Sp89", "jq120q121*Sp120*Sm121", 
         "jq120q121*Sm120*Sp121", "jq15q22*Sp15*Sm22", "jq15q22*Sm15*Sp22", 
         "jq24q34*Sp24*Sm34", "jq24q34*Sm24*Sp34", "jq84q85*Sp84*Sm85", 
         "jq84q85*Sm84*Sp85", "jq29q30*Sp29*Sm30", "jq29q30*Sm29*Sp30", 
         "jq61q62*Sp61*Sm62", "jq61q62*Sm61*Sp62", "jq70q74*Sp70*Sm74", 
         "jq70q74*Sm70*Sp74", "jq121q122*Sp121*Sm122", 
         "jq121q122*Sm121*Sp122", "jq2q3*Sp2*Sm3", "jq2q3*Sm2*Sp3", 
         "jq122q123*Sp122*Sm123", "jq122q123*Sm122*Sp123", 
         "jq62q63*Sp62*Sm63", "jq62q63*Sm62*Sp63", "jq117q118*Sp117*Sm118", 
         "jq117q118*Sm117*Sp118", "jq109q114*Sp109*Sm114", 
         "jq109q114*Sm109*Sp114", "jq94q95*Sp94*Sm95", "jq94q95*Sm94*Sp95", 
         "jq37q52*Sp37*Sm52", "jq37q52*Sm37*Sp52", "jq58q59*Sp58*Sm59", 
         "jq58q59*Sm58*Sp59", "jq3q4*Sp3*Sm4", "jq3q4*Sm3*Sp4", 
         "jq33q39*Sp33*Sm39", "jq33q39*Sm33*Sp39", "jq95q96*Sp95*Sm96", 
         "jq95q96*Sm95*Sp96", "jq68q69*Sp68*Sm69", "jq68q69*Sm68*Sp69", 
         "jq63q64*Sp63*Sm64", "jq63q64*Sm63*Sp64", "jq71q77*Sp71*Sm77", 
         "jq71q77*Sm71*Sp77", "jq111q122*Sp111*Sm122", 
         "jq111q122*Sm111*Sp122", "jq4q5*Sp4*Sm5", "jq4q5*Sm4*Sp5", 
         "jq59q60*Sp59*Sm60", "jq59q60*Sm59*Sp60", "jq96q109*Sp96*Sm109", 
         "jq96q109*Sm96*Sp109", "jq124q125*Sp124*Sm125", 
         "jq124q125*Sm124*Sp125", "jq69q70*Sp69*Sm70", "jq69q70*Sm69*Sp70", 
         "jq35q47*Sp35*Sm47", "jq35q47*Sm35*Sp47", "jq101q102*Sp101*Sm102", 
         "jq101q102*Sm101*Sp102", "jq0q1*Sp0*Sm1", "jq0q1*Sm0*Sp1", 
         "jq10q11*Sp10*Sm11", "jq10q11*Sm10*Sp11", "jq65q66*Sp65*Sm66", 
         "jq65q66*Sm65*Sp66", "jq37q38*Sp37*Sm38", "jq37q38*Sm37*Sp38", 
         "jq28q35*Sp28*Sm35", "jq28q35*Sm28*Sp35", "jq102q103*Sp102*Sm103", 
         "jq102q103*Sm102*Sp103", "jq92q102*Sp92*Sm102", 
         "jq92q102*Sm92*Sp102", "jq6q7*Sp6*Sm7", "jq6q7*Sm6*Sp7", 
         "jq98q99*Sp98*Sm99", "jq98q99*Sm98*Sp99", "jq43q44*Sp43*Sm44", 
         "jq43q44*Sm43*Sp44", "jq52q56*Sp52*Sm56", "jq52q56*Sm52*Sp56", 
         "jq125q126*Sp125*Sm126", "jq125q126*Sm125*Sp126", 
         "jq39q40*Sp39*Sm40", "jq39q40*Sm39*Sp40", "jq8q16*Sp8*Sm16", 
         "jq8q16*Sm8*Sp16", "jq66q67*Sp66*Sm67", "jq66q67*Sm66*Sp67", 
         "jq11q12*Sp11*Sm12", "jq11q12*Sm11*Sp12", "jq76q77*Sp76*Sm77", 
         "jq76q77*Sm76*Sp77", "jq83q92*Sp83*Sm92", "jq83q92*Sm83*Sp92", 
         "jq74q89*Sp74*Sm89", "jq74q89*Sm74*Sp89", "jq7q8*Sp7*Sm8", 
         "jq7q8*Sm7*Sp8", "jq53q60*Sp53*Sm60", "jq53q60*Sm53*Sp60", 
         "omegad1*X0||U0", "omegad14*X0||U1", "omegad2*X1||U3", 
         "omegad0*X1||U2", "omegad3*X2||U5", "omegad1*X2||U4", 
         "omegad4*X3||U7", "omegad2*X3||U6", "omegad15*X4||U10", 
         "omegad5*X4||U9", "omegad3*X4||U8", "omegad6*X5||U12", 
         "omegad4*X5||U11", "omegad7*X6||U14", "omegad5*X6||U13", 
         "omegad8*X7||U16", "omegad6*X7||U15", "omegad9*X8||U18", 
         "omegad7*X8||U17", "omegad16*X8||U19", "omegad10*X9||U21", 
         "omegad8*X9||U20", "omegad11*X10||U23", "omegad9*X10||U22", 
         "omegad12*X11||U25", "omegad10*X11||U24", "omegad13*X12||U27", 
         "omegad17*X12||U28", "omegad11*X12||U26", "omegad12*X13||U29", 
         "omegad18*X14||U31", "omegad0*X14||U30", "omegad4*X15||U32", 
         "omegad22*X15||U33", "omegad26*X16||U35", "omegad8*X16||U34", 
         "omegad12*X17||U36", "omegad30*X17||U37", "omegad19*X18||U39", 
         "omegad14*X18||U38", "omegad20*X19||U41", "omegad18*X19||U40", 
         "omegad21*X20||U43", "omegad19*X20||U42", "omegad33*X20||U44", 
         "omegad22*X21||U46", "omegad20*X21||U45", "omegad23*X22||U49", 
         "omegad21*X22||U48", "omegad15*X22||U47", "omegad22*X23||U50", 
         "omegad24*X23||U51", "omegad23*X24||U52", "omegad34*X24||U54", 
         "omegad25*X24||U53", "omegad26*X25||U56", "omegad24*X25||U55", 
         "omegad25*X26||U58", "omegad27*X26||U59", "omegad16*X26||U57", 
         "omegad28*X27||U61", "omegad26*X27||U60", "omegad29*X28||U63", 
         "omegad27*X28||U62", "omegad35*X28||U64", "omegad30*X29||U66", 
         "omegad28*X29||U65", "omegad17*X30||U67", "omegad31*X30||U69", 
         "omegad29*X30||U68", "omegad30*X31||U70", "omegad32*X31||U71", 
         "omegad36*X32||U73", "omegad31*X32||U72", "omegad39*X33||U75", 
         "omegad20*X33||U74", "omegad43*X34||U77", "omegad24*X34||U76", 
         "omegad47*X35||U79", "omegad28*X35||U78", "omegad51*X36||U81", 
         "omegad32*X36||U80", "omegad52*X37||U83", "omegad38*X37||U82", 
         "omegad39*X38||U85", "omegad37*X38||U84", "omegad33*X39||U86", 
         "omegad40*X39||U88", "omegad38*X39||U87", "omegad41*X40||U90", 
         "omegad39*X40||U89", "omegad53*X41||U93", "omegad42*X41||U92", 
         "omegad40*X41||U91", "omegad43*X42||U95", "omegad41*X42||U94", 
         "omegad34*X43||U96", "omegad44*X43||U98", "omegad42*X43||U97", 
         "omegad45*X44||U100", "omegad43*X44||U99", "omegad54*X45||U103", 
         "omegad46*X45||U102", "omegad44*X45||U101", "omegad45*X46||U104", 
         "omegad47*X46||U105", "omegad35*X47||U106", "omegad48*X47||U108", 
         "omegad46*X47||U107", "omegad47*X48||U109", "omegad49*X48||U110", 
         "omegad55*X49||U113", "omegad48*X49||U111", "omegad50*X49||U112", 
         "omegad51*X50||U115", "omegad49*X50||U114", "omegad50*X51||U117", 
         "omegad36*X51||U116", "omegad56*X52||U119", "omegad37*X52||U118", 
         "omegad60*X53||U121", "omegad41*X53||U120", "omegad64*X54||U123", 
         "omegad45*X54||U122", "omegad68*X55||U125", "omegad49*X55||U124", 
         "omegad52*X56||U126", "omegad57*X56||U127", "omegad58*X57||U129", 
         "omegad56*X57||U128", "omegad71*X58||U132", "omegad59*X58||U131", 
         "omegad57*X58||U130", "omegad58*X59||U133", "omegad60*X59||U134", 
         "omegad61*X60||U137", "omegad59*X60||U136", "omegad53*X60||U135", 
         "omegad62*X61||U139", "omegad60*X61||U138", "omegad72*X62||U142", 
         "omegad61*X62||U140", "omegad63*X62||U141", "omegad64*X63||U144", 
         "omegad62*X63||U143", "omegad65*X64||U147", "omegad54*X64||U145", 
         "omegad63*X64||U146", "omegad66*X65||U149", "omegad64*X65||U148", 
         "omegad67*X66||U151", "omegad73*X66||U152", "omegad65*X66||U150", 
         "omegad68*X67||U154", "omegad66*X67||U153", "omegad67*X68||U156", 
         "omegad55*X68||U155", "omegad69*X68||U157", "omegad68*X69||U158", 
         "omegad70*X69||U159", "omegad69*X70||U160", "omegad74*X70||U161", 
         "omegad77*X71||U163", "omegad58*X71||U162", "omegad81*X72||U165", 
         "omegad62*X72||U164", "omegad85*X73||U167", "omegad66*X73||U166", 
         "omegad70*X74||U168", "omegad89*X74||U169", "omegad76*X75||U170", 
         "omegad90*X75||U171", "omegad77*X76||U173", "omegad75*X76||U172", 
         "omegad78*X77||U176", "omegad71*X77||U174", "omegad76*X77||U175", 
         "omegad79*X78||U178", "omegad77*X78||U177", "omegad80*X79||U180", 
         "omegad91*X79||U181", "omegad78*X79||U179", "omegad81*X80||U183", 
         "omegad79*X80||U182", "omegad80*X81||U185", "omegad72*X81||U184", 
         "omegad82*X81||U186", "omegad81*X82||U187", "omegad83*X82||U188", 
         "omegad92*X83||U191", "omegad84*X83||U190", "omegad82*X83||U189", 
         "omegad83*X84||U192", "omegad85*X84||U193", "omegad73*X85||U194", 
         "omegad86*X85||U196", "omegad84*X85||U195", "omegad87*X86||U198", 
         "omegad85*X86||U197", "omegad88*X87||U200", "omegad86*X87||U199", 
         "omegad93*X87||U201", "omegad89*X88||U203", "omegad87*X88||U202", 
         "omegad74*X89||U204", "omegad88*X89||U205", "omegad94*X90||U207", 
         "omegad75*X90||U206", "omegad98*X91||U209", "omegad79*X91||U208", 
         "omegad102*X92||U211", "omegad83*X92||U210", "omegad106*X93||U213", 
         "omegad87*X93||U212", "omegad90*X94||U214", "omegad95*X94||U215", 
         "omegad94*X95||U216", "omegad96*X95||U217", "omegad109*X96||U220", 
         "omegad97*X96||U219", "omegad95*X96||U218", "omegad96*X97||U221", 
         "omegad98*X97||U222", "omegad91*X98||U223", "omegad99*X98||U225", 
         "omegad97*X98||U224", "omegad100*X99||U227", "omegad98*X99||U226", 
         "omegad101*X100||U229", "omegad99*X100||U228", 
         "omegad110*X100||U230", "omegad102*X101||U232", 
         "omegad100*X101||U231", "omegad92*X102||U233", 
         "omegad101*X102||U234", "omegad103*X102||U235", 
         "omegad104*X103||U237", "omegad102*X103||U236", 
         "omegad105*X104||U239", "omegad103*X104||U238", 
         "omegad111*X104||U240", "omegad104*X105||U241", 
         "omegad106*X105||U242", "omegad107*X106||U245", 
         "omegad105*X106||U244", "omegad93*X106||U243", 
         "omegad108*X107||U247", "omegad106*X107||U246", 
         "omegad107*X108||U248", "omegad112*X108||U249", 
         "omegad96*X109||U250", "omegad114*X109||U251", 
         "omegad118*X110||U253", "omegad100*X110||U252", 
         "omegad122*X111||U255", "omegad104*X111||U254", 
         "omegad108*X112||U256", "omegad126*X112||U257", 
         "omegad114*X113||U258", "omegad115*X114||U261", 
         "omegad113*X114||U260", "omegad109*X114||U259", 
         "omegad116*X115||U263", "omegad114*X115||U262", 
         "omegad117*X116||U265", "omegad115*X116||U264", 
         "omegad118*X117||U267", "omegad116*X117||U266", 
         "omegad119*X118||U270", "omegad117*X118||U269", 
         "omegad110*X118||U268", "omegad120*X119||U272", 
         "omegad118*X119||U271", "omegad121*X120||U274", 
         "omegad119*X120||U273", "omegad122*X121||U276", 
         "omegad120*X121||U275", "omegad123*X122||U279", 
         "omegad111*X122||U277", "omegad121*X122||U278", 
         "omegad124*X123||U281", "omegad122*X123||U280", 
         "omegad125*X124||U283", "omegad123*X124||U282", 
         "omegad126*X125||U285", "omegad124*X125||U284", 
         "omegad112*X126||U286", "omegad125*X126||U287"}, "osc" -> <||>, 
       "qub" -> <|
        "0" -> 3, "1" -> 3, "2" -> 3, "3" -> 3, "4" -> 3, "5" -> 3, "6" -> 3, 
         "7" -> 3, "8" -> 3, "9" -> 3, "10" -> 3, "11" -> 3, "12" -> 3, "13" -> 
         3, "14" -> 3, "15" -> 3, "16" -> 3, "17" -> 3, "18" -> 3, "19" -> 3, 
         "20" -> 3, "21" -> 3, "22" -> 3, "23" -> 3, "24" -> 3, "25" -> 3, 
         "26" -> 3, "27" -> 3, "28" -> 3, "29" -> 3, "30" -> 3, "31" -> 3, 
         "32" -> 3, "33" -> 3, "34" -> 3, "35" -> 3, "36" -> 3, "37" -> 3, 
         "38" -> 3, "39" -> 3, "40" -> 3, "41" -> 3, "42" -> 3, "43" -> 3, 
         "44" -> 3, "45" -> 3, "46" -> 3, "47" -> 3, "48" -> 3, "49" -> 3, 
         "50" -> 3, "51" -> 3, "52" -> 3, "53" -> 3, "54" -> 3, "55" -> 3, 
         "56" -> 3, "57" -> 3, "58" -> 3, "59" -> 3, "60" -> 3, "61" -> 3, 
         "62" -> 3, "63" -> 3, "64" -> 3, "65" -> 3, "66" -> 3, "67" -> 3, 
         "68" -> 3, "69" -> 3, "70" -> 3, "71" -> 3, "72" -> 3, "73" -> 3, 
         "74" -> 3, "75" -> 3, "76" -> 3, "77" -> 3, "78" -> 3, "79" -> 3, 
         "80" -> 3, "81" -> 3, "82" -> 3, "83" -> 3, "84" -> 3, "85" -> 3, 
         "86" -> 3, "87" -> 3, "88" -> 3, "89" -> 3, "90" -> 3, "91" -> 3, 
         "92" -> 3, "93" -> 3, "94" -> 3, "95" -> 3, "96" -> 3, "97" -> 3, 
         "98" -> 3, "99" -> 3, "100" -> 3, "101" -> 3, "102" -> 3, "103" -> 3,
          "104" -> 3, "105" -> 3, "106" -> 3, "107" -> 3, "108" -> 3, "109" -> 
         3, "110" -> 3, "111" -> 3, "112" -> 3, "113" -> 3, "114" -> 3, "115" -> 
         3, "116" -> 3, "117" -> 3, "118" -> 3, "119" -> 3, "120" -> 3, "121" -> 
         3, "122" -> 3, "123" -> 3, "124" -> 3, "125" -> 3, "126" -> 3|>, 
       "vars" -> <|
        "delta0" -> -1.9602197309964835`, "delta1" -> -1.9461791507089017`, 
         "delta10" -> -1.9461754465377983`, 
         "delta100" -> -1.9379808011236679`, 
         "delta101" -> -1.9247479350424062`, 
         "delta102" -> -1.9475656814085514`, 
         "delta103" -> -1.9329980981464454`, "delta104" -> -1.950683671078199,
          "delta105" -> -1.9326912337735203`, 
         "delta106" -> -1.9434705864057147`, 
         "delta107" -> -1.9352351526418852`, 
         "delta108" -> -1.9226970908336938`, 
         "delta109" -> -1.9296654946302172`, 
         "delta11" -> -1.9302844799651298`, 
         "delta110" -> -1.9418010214257635`, 
         "delta111" -> -1.9453530368645375`, 
         "delta112" -> -1.9238895368182427`, 
         "delta113" -> -1.9274875786890153`, 
         "delta114" -> -1.9438913646992417`, "delta115" -> -1.927802795856281,
          "delta116" -> -1.9370959442280813`, 
         "delta117" -> -1.942850008950375, "delta118" -> -1.949774371578205, 
         "delta119" -> -1.820902644135899, "delta12" -> -1.9349749450112141`, 
         "delta120" -> -1.9404329718165307`, 
         "delta121" -> -1.9372271386958801`, 
         "delta122" -> -1.9297631432434543`, 
         "delta123" -> -1.9251338295161549`, 
         "delta124" -> -1.9307354560264027`, 
         "delta125" -> -1.9364397636981217`, 
         "delta126" -> -1.9388384702248351`, "delta13" -> -1.927461591357252, 
         "delta14" -> -1.9378597686483208`, "delta15" -> -1.9355504883951289`,
          "delta16" -> -1.9330813451380502`, 
         "delta17" -> -1.9459298786630337`, "delta18" -> -1.951783486815851, 
         "delta19" -> -1.9523361747797416`, "delta2" -> -1.9420541522183226`, 
         "delta20" -> -1.9421193250480469`, "delta21" -> -1.9286136441774213`,
          "delta22" -> -1.9261327214367743`, 
         "delta23" -> -1.9439905122898526`, "delta24" -> -1.9195030452108328`,
          "delta25" -> -1.937907234453082, "delta26" -> -1.946337461673832, 
         "delta27" -> -1.9495165410224073`, "delta28" -> -1.9312715524034123`,
          "delta29" -> -1.9618673539190417`, "delta3" -> -1.9458178028860558`,
          "delta30" -> -1.9534430922295976`, 
         "delta31" -> -1.9493977389311088`, "delta32" -> -1.9344635133530892`,
          "delta33" -> -1.932385381917592, "delta34" -> -1.9630797525041208`, 
         "delta35" -> -1.9371171739116764`, "delta36" -> -1.958790622054439, 
         "delta37" -> -1.9406871385936988`, "delta38" -> -1.9488249195699554`,
          "delta39" -> -1.9367774184643218`, "delta4" -> -1.9501204429207446`,
          "delta40" -> -1.9389377345066394`, "delta41" -> -1.939156933730496, 
         "delta42" -> -1.9268024068933574`, "delta43" -> -1.9485984198802218`,
          "delta44" -> -1.9384015094070768`, 
         "delta45" -> -2.2560086551816183`, "delta46" -> -1.943861751968896, 
         "delta47" -> -1.9536495833189131`, "delta48" -> -1.9487624328436566`,
          "delta49" -> -1.9615064890365592`, "delta5" -> -1.9569095215078995`,
          "delta50" -> -1.9508794157235878`, "delta51" -> -1.93491573494952, 
         "delta52" -> -1.9352896024010342`, "delta53" -> -1.9279195629766446`,
          "delta54" -> -1.9288971969754947`, "delta55" -> -1.950178077352528, 
         "delta56" -> -1.946189728797343, "delta57" -> -1.933877217489325, 
         "delta58" -> -1.9433903474286673`, "delta59" -> -1.9328768875520919`,
          "delta6" -> -1.942687700831541, "delta60" -> -1.9511959774676613`, 
         "delta61" -> -1.8256676303216377`, "delta62" -> -1.935171562160654, 
         "delta63" -> -1.9286005684154202`, "delta64" -> -1.9457241526654827`,
          "delta65" -> -1.9322443596812033`, 
         "delta66" -> -1.9421749876023622`, "delta67" -> -1.9219571807640985`,
          "delta68" -> -1.9547906184270796`, 
         "delta69" -> -1.9126198270799384`, "delta7" -> -1.9318117743431218`, 
         "delta70" -> -1.9367286666818497`, "delta71" -> -1.944434398519155, 
         "delta72" -> -1.8758190237429186`, "delta73" -> -1.9327541043384238`,
          "delta74" -> -1.9273212341524304`, 
         "delta75" -> -1.9272634105078144`, "delta76" -> -1.944538177587438, 
         "delta77" -> -1.9303879638397083`, "delta78" -> -1.9622857280492914`,
          "delta79" -> -1.9432090526221664`, "delta8" -> -1.937597856881016, 
         "delta80" -> -1.9303189904148137`, "delta81" -> -1.9378546168168265`,
          "delta82" -> -1.9413783997256395`, 
         "delta83" -> -1.9516669371864304`, "delta84" -> -1.9564138984753419`,
          "delta85" -> -1.9235430231835993`, "delta86" -> -1.937224072043295, 
         "delta87" -> -1.9315963232113897`, "delta88" -> -1.922024785489781, 
         "delta89" -> -1.933500708219557, "delta9" -> -1.9354162225346698`, 
         "delta90" -> -1.934390398173009, "delta91" -> -1.938376564648707, 
         "delta92" -> -1.9389156591038879`, "delta93" -> -1.9313354939829916`,
          "delta94" -> -1.9329960197242506`, 
         "delta95" -> -1.9470111144501991`, "delta96" -> -1.9535628912275531`,
          "delta97" -> -1.9449986542031796`, 
         "delta98" -> -1.9375048316145376`, "delta99" -> -1.9197473843394903`,
          "jq0q1" -> 0.012782426941452174`, "jq0q14" -> 0.012458706527563954`,
          "jq100q101" -> 0.01308606864158531, "jq100q110" -> 
         0.012832851658184145`, "jq101q102" -> 0.012873297301870902`, 
         "jq102q103" -> 0.012887338632470838`, "jq103q104" -> 
         0.01250994541393964, "jq104q105" -> 0.012596774052275553`, 
         "jq104q111" -> 0.012586163510113555`, "jq105q106" -> 
         0.012770853019077013`, "jq106q107" -> 0.01280440975672098, 
         "jq107q108" -> 0.012907812492430903`, "jq108q112" -> 
         0.012995002704838448`, "jq109q114" -> 0.0127604644272218, "jq10q11" -> 
         0.012661821140463514`, "jq110q118" -> 0.012308506530467566`, 
         "jq111q122" -> 0.013205769249105695`, "jq112q126" -> 
         0.01304246623985788, "jq113q114" -> 0.012829439041838732`, 
         "jq114q115" -> 0.012790136172011298`, "jq115q116" -> 
         0.013021858954591178`, "jq116q117" -> 0.012800365506532062`, 
         "jq117q118" -> 0.012392468025504935`, "jq118q119" -> 
         0.011800340525270058`, "jq119q120" -> 0.009993996490376402, 
         "jq11q12" -> 0.013180764780949811`, "jq120q121" -> 
         0.012878355713200921`, "jq121q122" -> 0.012888640871455604`, 
         "jq122q123" -> 0.01290232698020258, "jq123q124" -> 
         0.013241509895011855`, "jq124q125" -> 0.012833366957530278`, 
         "jq125q126" -> 0.01273763376459854, "jq12q13" -> 
         0.013115193863384533`, "jq12q17" -> 0.012788606394504194`, "jq14q18" -> 
         0.012548165674975215`, "jq15q22" -> 0.01318944843639727, "jq16q26" -> 
         0.012738339542511603`, "jq17q30" -> 0.012472102529442246`, "jq18q19" -> 
         0.012669941573097861`, "jq19q20" -> 0.012825815813188835`, "jq1q2" -> 
         0.012230921685779718`, "jq20q21" -> 0.012863881141337706`, "jq20q33" -> 
         0.01276562536359386, "jq21q22" -> 0.013094187173438479`, "jq22q23" -> 
         0.01300282543500388, "jq23q24" -> 0.01292723117059527, "jq24q25" -> 
         0.013504397436214375`, "jq24q34" -> 0.01329614199598563, "jq25q26" -> 
         0.01295824558046832, "jq26q27" -> 0.012842693310862973`, "jq27q28" -> 
         0.012501043863513514`, "jq28q29" -> 0.012469176752076145`, "jq28q35" -> 
         0.012945117217000915`, "jq29q30" -> 0.012623168550389988`, "jq2q3" -> 
         0.012329862405284844`, "jq30q31" -> 0.012526662273560429`, "jq31q32" -> 
         0.01265989357894418, "jq32q36" -> 0.01301142916199942, "jq33q39" -> 
         0.012929817692549344`, "jq34q43" -> 0.012472965345238188`, "jq35q47" -> 
         0.01261534977847703, "jq36q51" -> 0.01298986178343606, "jq37q38" -> 
         0.012547498236000923`, "jq37q52" -> 0.01286752947515585, "jq38q39" -> 
         0.012689806610181395`, "jq39q40" -> 0.012973058668249642`, "jq3q4" -> 
         0.012705786669536567`, "jq40q41" -> 0.012811792760254485`, "jq41q42" -> 
         0.013313999859134064`, "jq41q53" -> 0.013180300927054085`, "jq42q43" -> 
         0.012797190122055097`, "jq43q44" -> 0.012746605950210675`, "jq44q45" -> 
         0.014564189752717793`, "jq45q46" -> 0, "jq45q54" -> 
         0.013916300059262357`, "jq46q47" -> 0.012742184879104683`, "jq47q48" -> 
         0.012510044350254717`, "jq48q49" -> 0.012632780137309911`, "jq49q50" -> 
         0.012604174187459911`, "jq49q55" -> 0.012448899719286895`, "jq4q15" -> 
         0.012726318003666286`, "jq4q5" -> 0.012903225032419259`, "jq50q51" -> 
         0.012613589063841107`, "jq52q56" -> 0.012828336052356197`, "jq53q60" -> 
         0.012702489098036923`, "jq54q64" -> 0.01284424598125884, "jq55q68" -> 
         0.01273087441291362, "jq56q57" -> 0.012765602455522688`, "jq57q58" -> 
         0.012797804229352732`, "jq58q59" -> 0.01304737807516326, "jq58q71" -> 
         0.01271995112140343, "jq59q60" -> 0.012485503523470241`, "jq5q6" -> 
         0.0125996676359734, "jq60q61" -> 0.012628972321517702`, "jq61q62" -> 
         0.007761195174932789, "jq62q63" -> 0.009991051924275799, "jq62q72" -> 
         0.00882942556999905, "jq63q64" -> 0.0128545205190289, "jq64q65" -> 
         0.012927237450126403`, "jq65q66" -> 0.012910668506053376`, "jq66q67" -> 
         0.013211388192425537`, "jq66q73" -> 0.012916114246778708`, "jq67q68" -> 
         0.012813045501962278`, "jq68q69" -> 0.012822416529375645`, "jq69q70" -> 
         0.0132241891998332, "jq6q7" -> 0.012978210797713666`, "jq70q74" -> 
         0.012828303441532752`, "jq71q77" -> 0.012800767507953548`, "jq72q81" -> 
         0.012726855870932467`, "jq73q85" -> 0.01323168155676943, "jq74q89" -> 
         0.012977691118007043`, "jq75q76" -> 0.012871441487943044`, "jq75q90" -> 
         0.013051452859886674`, "jq76q77" -> 0.012790931193590448`, "jq77q78" -> 
         0.01273707639882093, "jq78q79" -> 0.012152649302084133`, "jq79q80" -> 
         0.013012054373637888`, "jq79q91" -> 0.012809846650658784`, "jq7q8" -> 
         0.013052540953563523`, "jq80q81" -> 0.013092525947395003`, "jq81q82" -> 
         0.01279773701619867, "jq82q83" -> 0.012708871949358819`, "jq83q84" -> 
         0.012638025552694538`, "jq83q92" -> 0.012532860150799971`, "jq84q85" -> 
         0.012744325617745848`, "jq85q86" -> 0.012996876748091336`, "jq86q87" -> 
         0, "jq87q88" -> 0, "jq87q93" -> 0, "jq88q89" -> 
         0.013277588545029147`, "jq8q16" -> 0.013325746296348554`, "jq8q9" -> 
         0.013064887076016588`, "jq90q94" -> 0.012911919746637317`, "jq91q98" -> 
         0.013235414868434823`, "jq92q102" -> 0.013072604887854205`, 
         "jq93q106" -> 0.012975387909182004`, "jq94q95" -> 
         0.012925426268332362`, "jq95q96" -> 0.012566440144305096`, 
         "jq96q109" -> 0.012461096193775058`, "jq96q97" -> 
         0.01274012771007035, "jq97q98" -> 0.012710178197379018`, "jq98q99" -> 
         0.013099491203830336`, "jq99q100" -> 0.01296433320178576, "jq9q10" -> 
         0.012674566581571973`, "omegad0" -> 0.5776501382586531, "omegad1" -> 
         0.6115001991489208, "omegad10" -> 0.6073443411385288, "omegad100" -> 
         0.6691385773376332, "omegad101" -> 0.6445028936964162, "omegad102" -> 
         0.8397045301113218, "omegad103" -> 0.6442358078326783, "omegad104" -> 
         0.5735903280342816, "omegad105" -> 0.6407564317991645, "omegad106" -> 
         0.6758120761464563, "omegad107" -> 0.6759364629993417, "omegad108" -> 
         0.6260001399256961, "omegad109" -> 0.6383936431010594, "omegad11" -> 
         0.5814393406534093, "omegad110" -> 0.6034575369078992, "omegad111" -> 
         0.6163691829373273, "omegad112" -> 0.651801836159993, "omegad113" -> 
         0.5895066728579454, "omegad114" -> 0.6013878292816168, "omegad115" -> 
         0.6487754723954847, "omegad116" -> 0.6044345755232651, "omegad117" -> 
         0.571107559095938, "omegad118" -> 0.5592603028805383, "omegad119" -> 
         0.6313679039754941, "omegad12" -> 0.6532640576080239, "omegad120" -> 
         0.6019008721976152, "omegad121" -> 0.5708515309440526, "omegad122" -> 
         0.504082555959211, "omegad123" -> 0.20666237421617456`, "omegad124" -> 
         0.6021553555473773, "omegad125" -> 0.5632423049704027, "omegad126" -> 
         0.625879597703873, "omegad13" -> 0.6074973372106878, "omegad14" -> 
         0.6321071612867059, "omegad15" -> 0.5669343939215651, "omegad16" -> 
         0.6436407978653225, "omegad17" -> 0.6223734991303679, "omegad18" -> 
         0.5857544464741934, "omegad19" -> 0.574152471744752, "omegad2" -> 
         0.703002488600495, "omegad20" -> 0.6354092690341862, "omegad21" -> 
         0.6263974787273624, "omegad22" -> 0.6297748056768788, "omegad23" -> 
         0.656132594195722, "omegad24" -> 1.2685416158626572`, "omegad25" -> 
         1.3086931906691794`, "omegad26" -> 0.6120837553459934, "omegad27" -> 
         0.5997160092363387, "omegad28" -> 0.6570641472210788, "omegad29" -> 
         0.6817901517544733, "omegad3" -> 0.7231203589855613, "omegad30" -> 
         0.5748802027020831, "omegad31" -> 0.5918123651737398, "omegad32" -> 
         0.6018453391553098, "omegad33" -> 0.6644226090811797, "omegad34" -> 
         0.5983505589409818, "omegad35" -> 0.5743444705383886, "omegad36" -> 
         0.6076158333090759, "omegad37" -> 0.733850723699492, "omegad38" -> 
         0.5893160014387765, "omegad39" -> 0.6259642162229292, "omegad4" -> 
         0.6195634369272656, "omegad40" -> 0.5703074303738553, "omegad41" -> 
         0.9547452697689971, "omegad42" -> 0.6397592945613972, "omegad43" -> 
         0.619302471031509, "omegad44" -> 0.6273642403628686, "omegad45" -> 
         0.4997602476274306, "omegad46" -> 0.6123346309801393, "omegad47" -> 
         0.5649190088636811, "omegad48" -> 0.6362879066483578, "omegad49" -> 
         0.5937543937844064, "omegad5" -> 0.576164504168208, "omegad50" -> 
         0.6200102271672645, "omegad51" -> 0.6386093536729787, "omegad52" -> 
         0.655247012297686, "omegad53" -> 0.6544864802911059, "omegad54" -> 
         0.5055345960445256, "omegad55" -> 0.6271609538612472, "omegad56" -> 
         0.59487614958311, "omegad57" -> 0.722378402216952, "omegad58" -> 
         0.6290678981568354, "omegad59" -> 0.6334120387812785, "omegad6" -> 
         0.6075575039211416, "omegad60" -> 0.47940525001943857`, "omegad61" -> 
         0.4999515343869074, "omegad62" -> 0.6048531966841522, "omegad63" -> 
         0.6384557547831524, "omegad64" -> 0.5973158957462976, "omegad65" -> 
         0.5845894994129739, "omegad66" -> 0.5876039207497065, "omegad67" -> 
         0.6831234023736943, "omegad68" -> 0.6467277496970135, "omegad69" -> 
         0.6306545198643373, "omegad7" -> 0.649490958805074, "omegad70" -> 
         1.0572954954130684`, "omegad71" -> 0.5541128468935169, "omegad72" -> 
         0.5966142928012468, "omegad73" -> 0.60128980353768, "omegad74" -> 
         0.6410025536068951, "omegad75" -> 0.6393667309515424, "omegad76" -> 
         0.6210439882138032, "omegad77" -> 0.649713146131096, "omegad78" -> 
         0.7292635454262549, "omegad79" -> 0.6275804514440473, "omegad8" -> 
         0.6590252472732216, "omegad80" -> 0.626118288988922, "omegad81" -> 
         0.6435310294196617, "omegad82" -> 0.687995681454355, "omegad83" -> 
         0.5921772704162681, "omegad84" -> 0.6440153988071323, "omegad85" -> 
         0.6976865711017755, "omegad86" -> 0.5796467673058416, "omegad87" -> 
         0.591024621011824, "omegad88" -> 0.6465841176662215, "omegad89" -> 
         0.6052399259223971, "omegad9" -> 0.6217591359636847, "omegad90" -> 
         0.6458788801775905, "omegad91" -> 0.494942754597581, "omegad92" -> 
         0.6355191652418162, "omegad93" -> 0.5813047260066246, "omegad94" -> 
         0.6058118121270125, "omegad95" -> 0.6179652831627129, "omegad96" -> 
         0.5871330543159022, "omegad97" -> 0.6216768823238087, "omegad98" -> 
         0.5102756342016126, "omegad99" -> 0.6235088519726262, "wq0" -> 
         29.668624959000105`, "wq1" -> 30.254391141004785`, "wq10" -> 
         30.35742625738298, "wq100" -> 30.821258058638083`, "wq101" -> 
         31.82659402337395, "wq102" -> 30.22114357894729, "wq103" -> 
         30.997891744659324`, "wq104" -> 29.942959138564717`, "wq105" -> 
         31.304180912882213`, "wq106" -> 30.650716558350105`, "wq107" -> 
         30.888292894106627`, "wq108" -> 31.769283000396527`, "wq109" -> 
         31.32161151647996, "wq11" -> 31.241918052563477`, "wq110" -> 
         30.348840809436382`, "wq111" -> 30.493375729132406`, "wq112" -> 
         31.43128374828868, "wq113" -> 31.616984130900864`, "wq114" -> 
         30.300413285742383`, "wq115" -> 31.59197749936275, "wq116" -> 
         30.867655313704493`, "wq117" -> 30.367305213781005`, "wq118" -> 
         29.738170187126602`, "wq119" -> 30.17612680878647, "wq12" -> 
         31.015807687623163`, "wq120" -> 30.38931161512052, "wq121" -> 
         31.214376782447264`, "wq122" -> 31.02372692278294, "wq123" -> 
         31.63171925717124, "wq124" -> 31.096573851074158`, "wq125" -> 
         30.530728067429894`, "wq126" -> 30.839402177665853`, "wq13" -> 
         31.45242871425726, "wq14" -> 30.808623758146613`, "wq15" -> 
         31.08866653738863, "wq16" -> 31.166660649195535`, "wq17" -> 
         30.29012713471584, "wq18" -> 30.084766366461, "wq19" -> 
         29.826233103678778`, "wq2" -> 28.963317242559537`, "wq20" -> 
         30.550818543183926`, "wq21" -> 31.2054086207376, "wq22" -> 
         31.65593087202077, "wq23" -> 30.441872621614976`, "wq24" -> 
         32.04921127746758, "wq25" -> 31.071810477326526`, "wq26" -> 
         30.499081904740606`, "wq27" -> 29.829893422463694`, "wq28" -> 
         31.38075592389779, "wq29" -> 29.08266020300779, "wq3" -> 
         30.633958901863934`, "wq30" -> 29.73810066728035, "wq31" -> 
         30.14462999507699, "wq32" -> 30.85286560713956, "wq33" -> 
         31.24741065718251, "wq34" -> 29.396737312533414`, "wq35" -> 
         30.83537546799077, "wq36" -> 30.236421450268768`, "wq37" -> 
         30.397483398809378`, "wq38" -> 30.01276454411958, "wq39" -> 
         30.89674330568976, "wq4" -> 30.27349145035693, "wq40" -> 
         30.587827771005898`, "wq41" -> 31.01093480457022, "wq42" -> 
         31.81760087766696, "wq43" -> 30.34497577533138, "wq44" -> 
         31.09655876228988, "wq45" -> 31.412405255239474`, "wq46" -> 
         30.49315360887596, "wq47" -> 29.967889412601885`, "wq48" -> 
         30.43675052010843, "wq49" -> 29.514213858557817`, "wq5" -> 
         29.74550898217747, "wq50" -> 30.059168276204705`, "wq51" -> 
         30.983612870963885`, "wq52" -> 30.88354025580555, "wq53" -> 
         31.39519974070986, "wq54" -> 31.225072386660155`, "wq55" -> 
         30.393035865233735`, "wq56" -> 30.250563093640363`, "wq57" -> 
         30.9612514702239, "wq58" -> 30.705390898940077`, "wq59" -> 
         31.2352283068994, "wq6" -> 30.638544248434552`, "wq60" -> 
         29.94709400102087, "wq61" -> 30.12114853417376, "wq62" -> 
         31.008949405202706`, "wq63" -> 31.677491653067104`, "wq64" -> 
         30.294806167856873`, "wq65" -> 31.146772711577775`, "wq66" -> 
         30.693380856034644`, "wq67" -> 32.131851478819875`, "wq68" -> 
         29.805897916086753`, "wq69" -> 32.15538398461636, "wq7" -> 
         31.211878980284958`, "wq70" -> 30.780453565982103`, "wq71" -> 
         30.085459625995185`, "wq72" -> 31.7883404018997, "wq73" -> 
         31.28765023325213, "wq74" -> 31.613611900750907`, "wq75" -> 
         31.45415300210236, "wq76" -> 30.39426777847378, "wq77" -> 
         31.679390378043482`, "wq78" -> 29.17568890508896, "wq79" -> 
         30.55616403381142, "wq8" -> 30.802343634262844`, "wq80" -> 
         31.613611046708495`, "wq81" -> 30.978903964967294`, "wq82" -> 
         30.74743253317789, "wq83" -> 30.10078625232575, "wq84" -> 
         29.403365358624022`, "wq85" -> 32.07427110757887, "wq86" -> 
         30.78015763742567, "wq87" -> 31.366227005253585`, "wq88" -> 
         32.040329097734045`, "wq89" -> 31.14255033029995, "wq9" -> 
         31.33572210975995, "wq90" -> 30.822726995955424`, "wq91" -> 
         30.879600321800144`, "wq92" -> 30.863623929513313`, "wq93" -> 
         31.19054041548828, "wq94" -> 31.264382071676703`, "wq95" -> 
         30.403630095508483`, "wq96" -> 29.83200713564668, "wq97" -> 
         30.26079757239384, "wq98" -> 31.057168172032874`, "wq99" -> 
         31.793588840608884`|>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"description"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"h_latex"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"h_str"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"osc"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qub"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"vars"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "description", "h_latex", "h_str", "osc", "qub", "vars"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 580], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, TypeSystem`AnyLength], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 127], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 525]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"description"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"h_latex"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"h_str"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"osc"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qub"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"vars"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "description", "h_latex", "h_str", "osc", "qub", "vars"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Atom[String], 580], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, TypeSystem`AnyLength], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Integer], 127], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 525]}], "Path" -> {}, "DisplayedRowCount" -> 
     20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["description", 
                  Style[
                  "description", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["description"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["description"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "Qubits are modeled as Duffing oscillators. In this case, the \
system includes higher energy states, i.e. not just |0> and |1>. The Pauli \
operators are generalized via the following set of transformations:\n\n\
$(\\mathbb{I}-\\sigma_{i}^z)/2 \\rightarrow O_i \\equiv b^\\dagger_{i} \
b_{i}$, \[DescendingEllipsis]", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["description"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h_latex", 
                  Style[
                  "h_latex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h_latex"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h_latex"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "\\begin{align} \\mathcal{H}/\\hbar = & \
\\sum_{i=0}^{126}\\left(\\frac{\\omega_{q,i}}{2}(\\mathbb{I}-\\sigma_i^{z})+\\\
frac{\\Delta_{i}}{2}(O_i^2-O_i)+\\Omega_{d,i}D_i(t)\\sigma_i^{X}\\right) \\\\ \
& + J_{62,72}(\\sigma_{62}^{+}\\sigma_{72}^{-}+\\sigma_{62}^{-}\\sigma_{72}^{+\
}) + J_{67,68}(\\sigma_{67}^{+}\\sigma_{68}^{-}+\\sigma_{67}^{-}\\sigma_{68}^{\
+}) + J_{44,45}(\\sigma_{44}^{+}\\sigma_{45}^{-}+\\sigma_{44}^{-}\\sigma_{45}^\
{+}) + J_{99,100}(\\sigma_{99}^{+}\\sigma_{100}^{-}+\\sigma_{99}^{-}\\sigma_{\
100}^{+}) \\\\ & + \
J_{108,112}(\\sigma_{108}^{+}\\sigma_{112}^{-}+\\sigma_{108}^{-}\\sigma_{112}^\
{+}) + J_{8,9}(\\sigma_{8}^{+}\\sigma_{9}^{-}+\\sigma_{8}^{-}\\sigma_{9}^{+}) \
+ J_{40,41}(\\sigma_{40}^{+}\\sigma_{41}^{-}+\\sigma_{40}^{-}\\sigma_{41}^{+})\
 + J_{0,14}(\\sigma_{0}^{+}\\sigma_{14}^{-}+\\sigma_{0}^{-}\\sigma_{14}^{+}) \
\\\\ & + J_{17,30}(\\sigma_{17}^{+}\\sigma_{30}^{-}+\\sigma_{17}^{-}\\sigma_{\
30}^{+}) + \
J_{100,101}(\\sigma_{100}^{+}\\sigma_{101}^{-}+\\sigma_{100}^{-}\\sigma_{101}^\
{+}) + J_{91,98}(\\sigma_{91}^{+}\\sigma_{98}^{-}+\\sigma_{91}^{-}\\sigma_{98}\
^{+}) + J_{100,110}(\\sigma_{100}^{+}\\sigma_{110}^{-}+\\sigma_{100}^{-}\\\
sigma_{110}^{+}) \\\\ & + \
J_{75,90}(\\sigma_{75}^{+}\\sigma_{90}^{-}+\\sigma_{75}^{-}\\sigma_{90}^{+}) \
+ J_{41,42}(\\sigma_{41}^{+}\\sigma_{42}^{-}+\\sigma_{41}^{-}\\sigma_{42}^{+})\
 + J_{96,97}(\\sigma_{96}^{+}\\sigma_{97}^{-}+\\sigma_{96}^{-}\\sigma_{97}^{+}\
) + J_{18,19}(\\sigma_{18}^{+}\\sigma_{19}^{-}+\\sigma_{18}^{-}\\sigma_{19}^{+\
}) \\\\ & + \
J_{55,68}(\\sigma_{55}^{+}\\sigma_{68}^{-}+\\sigma_{55}^{-}\\sigma_{68}^{+}) \
+ J_{9,10}(\\sigma_{9}^{+}\\sigma_{10}^{-}+\\sigma_{9}^{-}\\sigma_{10}^{+}) + \
J_{49,55}(\\sigma_{49}^{+}\\sigma_{55}^{-}+\\sigma_{49}^{-}\\sigma_{55}^{+}) \
+ J_{106,107}(\\sigma_{106}^{+}\\sigma_{107}^{-}+\\sigma_{106}^{-}\\sigma_{\
107}^{+}) \\\\ & + \
J_{47,48}(\\sigma_{47}^{+}\\sigma_{48}^{-}+\\sigma_{47}^{-}\\sigma_{48}^{+}) \
+ J_{42,43}(\\sigma_{42}^{+}\\sigma_{43}^{-}+\\sigma_{42}^{-}\\sigma_{43}^{+})\
 + J_{107,108}(\\sigma_{107}^{+}\\sigma_{108}^{-}+\\sigma_{107}^{-}\\sigma_{\
108}^{+}) + \
J_{73,85}(\\sigma_{73}^{+}\\sigma_{85}^{-}+\\sigma_{73}^{-}\\sigma_{85}^{+}) \
\\\\ & + J_{38,39}(\\sigma_{38}^{+}\\sigma_{39}^{-}+\\sigma_{38}^{-}\\sigma_{\
39}^{+}) + \
J_{20,33}(\\sigma_{20}^{+}\\sigma_{33}^{-}+\\sigma_{20}^{-}\\sigma_{33}^{+}) \
+ J_{48,49}(\\sigma_{48}^{+}\\sigma_{49}^{-}+\\sigma_{48}^{-}\\sigma_{49}^{+})\
 + J_{103,104}(\\sigma_{103}^{+}\\sigma_{104}^{-}+\\sigma_{103}^{-}\\sigma_{\
104}^{+}) \\\\ & + \
J_{80,81}(\\sigma_{80}^{+}\\sigma_{81}^{-}+\\sigma_{80}^{-}\\sigma_{81}^{+}) \
+ J_{75,76}(\\sigma_{75}^{+}\\sigma_{76}^{-}+\\sigma_{75}^{-}\\sigma_{76}^{+})\
 + J_{66,73}(\\sigma_{66}^{+}\\sigma_{73}^{-}+\\sigma_{66}^{-}\\sigma_{73}^{+}\
) + J_{85,86}(\\sigma_{85}^{+}\\sigma_{86}^{-}+\\sigma_{85}^{-}\\sigma_{86}^{+\
}) \\\\ & + \
J_{81,82}(\\sigma_{81}^{+}\\sigma_{82}^{-}+\\sigma_{81}^{-}\\sigma_{82}^{+}) \
+ J_{110,118}(\\sigma_{110}^{+}\\sigma_{118}^{-}+\\sigma_{110}^{-}\\sigma_{\
118}^{+}) + \
J_{16,26}(\\sigma_{16}^{+}\\sigma_{26}^{-}+\\sigma_{16}^{-}\\sigma_{26}^{+}) \
+ J_{90,94}(\\sigma_{90}^{+}\\sigma_{94}^{-}+\\sigma_{90}^{-}\\sigma_{94}^{+})\
 \\\\ & + \
J_{118,119}(\\sigma_{118}^{+}\\sigma_{119}^{-}+\\sigma_{118}^{-}\\sigma_{119}^\
{+}) + J_{12,13}(\\sigma_{12}^{+}\\sigma_{13}^{-}+\\sigma_{12}^{-}\\sigma_{13}\
^{+}) + J_{22,23}(\\sigma_{22}^{+}\\sigma_{23}^{-}+\\sigma_{22}^{-}\\sigma_{\
23}^{+}) + \
J_{77,78}(\\sigma_{77}^{+}\\sigma_{78}^{-}+\\sigma_{77}^{-}\\sigma_{78}^{+}) \
\\\\ & + J_{49,50}(\\sigma_{49}^{+}\\sigma_{50}^{-}+\\sigma_{49}^{-}\\sigma_{\
50}^{+}) + \
J_{104,105}(\\sigma_{104}^{+}\\sigma_{105}^{-}+\\sigma_{104}^{-}\\sigma_{105}^\
{+}) + J_{114,115}(\\sigma_{114}^{+}\\sigma_{115}^{-}+\\sigma_{114}^{-}\\\
sigma_{115}^{+}) + \
J_{45,46}(\\sigma_{45}^{+}\\sigma_{46}^{-}+\\sigma_{45}^{-}\\sigma_{46}^{+}) \
\\\\ & + J_{50,51}(\\sigma_{50}^{+}\\sigma_{51}^{-}+\\sigma_{50}^{-}\\sigma_{\
51}^{+}) + \
J_{105,106}(\\sigma_{105}^{+}\\sigma_{106}^{-}+\\sigma_{105}^{-}\\sigma_{106}^\
{+}) + J_{72,81}(\\sigma_{72}^{+}\\sigma_{81}^{-}+\\sigma_{72}^{-}\\sigma_{81}\
^{+}) + J_{82,83}(\\sigma_{82}^{+}\\sigma_{83}^{-}+\\sigma_{82}^{-}\\sigma_{\
83}^{+}) \\\\ & + J_{46,47}(\\sigma_{46}^{+}\\sigma_{47}^{-}+\\sigma_{46}^{-}\
\\sigma_{47}^{+}) + \
J_{23,24}(\\sigma_{23}^{+}\\sigma_{24}^{-}+\\sigma_{23}^{-}\\sigma_{24}^{+}) \
+ J_{78,79}(\\sigma_{78}^{+}\\sigma_{79}^{-}+\\sigma_{78}^{-}\\sigma_{79}^{+})\
 + J_{83,84}(\\sigma_{83}^{+}\\sigma_{84}^{-}+\\sigma_{83}^{-}\\sigma_{84}^{+}\
) \\\\ & + \
J_{115,116}(\\sigma_{115}^{+}\\sigma_{116}^{-}+\\sigma_{115}^{-}\\sigma_{116}^\
{+}) + J_{19,20}(\\sigma_{19}^{+}\\sigma_{20}^{-}+\\sigma_{19}^{-}\\sigma_{20}\
^{+}) + J_{79,80}(\\sigma_{79}^{+}\\sigma_{80}^{-}+\\sigma_{79}^{-}\\sigma_{\
80}^{+}) + \
J_{24,25}(\\sigma_{24}^{+}\\sigma_{25}^{-}+\\sigma_{24}^{-}\\sigma_{25}^{+}) \
\\\\ & + J_{56,57}(\\sigma_{56}^{+}\\sigma_{57}^{-}+\\sigma_{56}^{-}\\sigma_{\
57}^{+}) + \
J_{93,106}(\\sigma_{93}^{+}\\sigma_{106}^{-}+\\sigma_{93}^{-}\\sigma_{106}^{+}\
) + J_{116,117}(\\sigma_{116}^{+}\\sigma_{117}^{-}+\\sigma_{116}^{-}\\sigma_{\
117}^{+}) + \
J_{20,21}(\\sigma_{20}^{+}\\sigma_{21}^{-}+\\sigma_{20}^{-}\\sigma_{21}^{+}) \
\\\\ & + J_{12,17}(\\sigma_{12}^{+}\\sigma_{17}^{-}+\\sigma_{12}^{-}\\sigma_{\
17}^{+}) + \
J_{41,53}(\\sigma_{41}^{+}\\sigma_{53}^{-}+\\sigma_{41}^{-}\\sigma_{53}^{+}) \
+ J_{57,58}(\\sigma_{57}^{+}\\sigma_{58}^{-}+\\sigma_{57}^{-}\\sigma_{58}^{+})\
 + J_{87,93}(\\sigma_{87}^{+}\\sigma_{93}^{-}+\\sigma_{87}^{-}\\sigma_{93}^{+}\
) \\\\ & + \
J_{30,31}(\\sigma_{30}^{+}\\sigma_{31}^{-}+\\sigma_{30}^{-}\\sigma_{31}^{+}) \
+ J_{25,26}(\\sigma_{25}^{+}\\sigma_{26}^{-}+\\sigma_{25}^{-}\\sigma_{26}^{+})\
 + J_{79,91}(\\sigma_{79}^{+}\\sigma_{91}^{-}+\\sigma_{79}^{-}\\sigma_{91}^{+}\
) + J_{26,27}(\\sigma_{26}^{+}\\sigma_{27}^{-}+\\sigma_{26}^{-}\\sigma_{27}^{+\
}) \\\\ & + \
J_{21,22}(\\sigma_{21}^{+}\\sigma_{22}^{-}+\\sigma_{21}^{-}\\sigma_{22}^{+}) \
+ J_{58,71}(\\sigma_{58}^{+}\\sigma_{71}^{-}+\\sigma_{58}^{-}\\sigma_{71}^{+})\
 + J_{31,32}(\\sigma_{31}^{+}\\sigma_{32}^{-}+\\sigma_{31}^{-}\\sigma_{32}^{+}\
) + J_{4,15}(\\sigma_{4}^{+}\\sigma_{15}^{-}+\\sigma_{4}^{-}\\sigma_{15}^{+}) \
\\\\ & + J_{86,87}(\\sigma_{86}^{+}\\sigma_{87}^{-}+\\sigma_{86}^{-}\\sigma_{\
87}^{+}) + \
J_{113,114}(\\sigma_{113}^{+}\\sigma_{114}^{-}+\\sigma_{113}^{-}\\sigma_{114}^\
{+}) + J_{104,111}(\\sigma_{104}^{+}\\sigma_{111}^{-}+\\sigma_{104}^{-}\\\
sigma_{111}^{+}) + \
J_{123,124}(\\sigma_{123}^{+}\\sigma_{124}^{-}+\\sigma_{123}^{-}\\sigma_{124}^\
{+}) \\\\ & + \
J_{27,28}(\\sigma_{27}^{+}\\sigma_{28}^{-}+\\sigma_{27}^{-}\\sigma_{28}^{+}) \
+ J_{34,43}(\\sigma_{34}^{+}\\sigma_{43}^{-}+\\sigma_{34}^{-}\\sigma_{43}^{+})\
 + J_{119,120}(\\sigma_{119}^{+}\\sigma_{120}^{-}+\\sigma_{119}^{-}\\sigma_{\
120}^{+}) + \
J_{64,65}(\\sigma_{64}^{+}\\sigma_{65}^{-}+\\sigma_{64}^{-}\\sigma_{65}^{+}) \
\\\\ & + J_{54,64}(\\sigma_{54}^{+}\\sigma_{64}^{-}+\\sigma_{54}^{-}\\sigma_{\
64}^{+}) + \
J_{32,36}(\\sigma_{32}^{+}\\sigma_{36}^{-}+\\sigma_{32}^{-}\\sigma_{36}^{+}) \
+ J_{60,61}(\\sigma_{60}^{+}\\sigma_{61}^{-}+\\sigma_{60}^{-}\\sigma_{61}^{+})\
 + J_{5,6}(\\sigma_{5}^{+}\\sigma_{6}^{-}+\\sigma_{5}^{-}\\sigma_{6}^{+}) \
\\\\ & + J_{14,18}(\\sigma_{14}^{+}\\sigma_{18}^{-}+\\sigma_{14}^{-}\\sigma_{\
18}^{+}) + \
J_{87,88}(\\sigma_{87}^{+}\\sigma_{88}^{-}+\\sigma_{87}^{-}\\sigma_{88}^{+}) \
+ J_{97,98}(\\sigma_{97}^{+}\\sigma_{98}^{-}+\\sigma_{97}^{-}\\sigma_{98}^{+})\
 + J_{1,2}(\\sigma_{1}^{+}\\sigma_{2}^{-}+\\sigma_{1}^{-}\\sigma_{2}^{+}) \
\\\\ & + J_{112,126}(\\sigma_{112}^{+}\\sigma_{126}^{-}+\\sigma_{112}^{-}\\\
sigma_{126}^{+}) + \
J_{28,29}(\\sigma_{28}^{+}\\sigma_{29}^{-}+\\sigma_{28}^{-}\\sigma_{29}^{+}) \
+ J_{45,54}(\\sigma_{45}^{+}\\sigma_{54}^{-}+\\sigma_{45}^{-}\\sigma_{54}^{+})\
 + J_{36,51}(\\sigma_{36}^{+}\\sigma_{51}^{-}+\\sigma_{36}^{-}\\sigma_{51}^{+}\
) \\\\ & + \
J_{88,89}(\\sigma_{88}^{+}\\sigma_{89}^{-}+\\sigma_{88}^{-}\\sigma_{89}^{+}) \
+ J_{120,121}(\\sigma_{120}^{+}\\sigma_{121}^{-}+\\sigma_{120}^{-}\\sigma_{\
121}^{+}) + \
J_{15,22}(\\sigma_{15}^{+}\\sigma_{22}^{-}+\\sigma_{15}^{-}\\sigma_{22}^{+}) \
+ J_{24,34}(\\sigma_{24}^{+}\\sigma_{34}^{-}+\\sigma_{24}^{-}\\sigma_{34}^{+})\
 \\\\ & + \
J_{84,85}(\\sigma_{84}^{+}\\sigma_{85}^{-}+\\sigma_{84}^{-}\\sigma_{85}^{+}) \
+ J_{29,30}(\\sigma_{29}^{+}\\sigma_{30}^{-}+\\sigma_{29}^{-}\\sigma_{30}^{+})\
 + J_{61,62}(\\sigma_{61}^{+}\\sigma_{62}^{-}+\\sigma_{61}^{-}\\sigma_{62}^{+}\
) + J_{70,74}(\\sigma_{70}^{+}\\sigma_{74}^{-}+\\sigma_{70}^{-}\\sigma_{74}^{+\
}) \\\\ & + \
J_{121,122}(\\sigma_{121}^{+}\\sigma_{122}^{-}+\\sigma_{121}^{-}\\sigma_{122}^\
{+}) + J_{2,3}(\\sigma_{2}^{+}\\sigma_{3}^{-}+\\sigma_{2}^{-}\\sigma_{3}^{+}) \
+ J_{122,123}(\\sigma_{122}^{+}\\sigma_{123}^{-}+\\sigma_{122}^{-}\\sigma_{\
123}^{+}) + \
J_{62,63}(\\sigma_{62}^{+}\\sigma_{63}^{-}+\\sigma_{62}^{-}\\sigma_{63}^{+}) \
\\\\ & + J_{117,118}(\\sigma_{117}^{+}\\sigma_{118}^{-}+\\sigma_{117}^{-}\\\
sigma_{118}^{+}) + \
J_{109,114}(\\sigma_{109}^{+}\\sigma_{114}^{-}+\\sigma_{109}^{-}\\sigma_{114}^\
{+}) + J_{94,95}(\\sigma_{94}^{+}\\sigma_{95}^{-}+\\sigma_{94}^{-}\\sigma_{95}\
^{+}) + J_{37,52}(\\sigma_{37}^{+}\\sigma_{52}^{-}+\\sigma_{37}^{-}\\sigma_{\
52}^{+}) \\\\ & + J_{58,59}(\\sigma_{58}^{+}\\sigma_{59}^{-}+\\sigma_{58}^{-}\
\\sigma_{59}^{+}) + \
J_{3,4}(\\sigma_{3}^{+}\\sigma_{4}^{-}+\\sigma_{3}^{-}\\sigma_{4}^{+}) + \
J_{33,39}(\\sigma_{33}^{+}\\sigma_{39}^{-}+\\sigma_{33}^{-}\\sigma_{39}^{+}) \
+ J_{95,96}(\\sigma_{95}^{+}\\sigma_{96}^{-}+\\sigma_{95}^{-}\\sigma_{96}^{+})\
 \\\\ & + \
J_{68,69}(\\sigma_{68}^{+}\\sigma_{69}^{-}+\\sigma_{68}^{-}\\sigma_{69}^{+}) \
+ J_{63,64}(\\sigma_{63}^{+}\\sigma_{64}^{-}+\\sigma_{63}^{-}\\sigma_{64}^{+})\
 + J_{71,77}(\\sigma_{71}^{+}\\sigma_{77}^{-}+\\sigma_{71}^{-}\\sigma_{77}^{+}\
) + J_{111,122}(\\sigma_{111}^{+}\\sigma_{122}^{-}+\\sigma_{111}^{-}\\sigma_{\
122}^{+}) \\\\ & + \
J_{4,5}(\\sigma_{4}^{+}\\sigma_{5}^{-}+\\sigma_{4}^{-}\\sigma_{5}^{+}) + \
J_{59,60}(\\sigma_{59}^{+}\\sigma_{60}^{-}+\\sigma_{59}^{-}\\sigma_{60}^{+}) \
+ J_{96,109}(\\sigma_{96}^{+}\\sigma_{109}^{-}+\\sigma_{96}^{-}\\sigma_{109}^{\
+}) + J_{124,125}(\\sigma_{124}^{+}\\sigma_{125}^{-}+\\sigma_{124}^{-}\\sigma_\
{125}^{+}) \\\\ & + \
J_{69,70}(\\sigma_{69}^{+}\\sigma_{70}^{-}+\\sigma_{69}^{-}\\sigma_{70}^{+}) \
+ J_{35,47}(\\sigma_{35}^{+}\\sigma_{47}^{-}+\\sigma_{35}^{-}\\sigma_{47}^{+})\
 + J_{101,102}(\\sigma_{101}^{+}\\sigma_{102}^{-}+\\sigma_{101}^{-}\\sigma_{\
102}^{+}) + \
J_{0,1}(\\sigma_{0}^{+}\\sigma_{1}^{-}+\\sigma_{0}^{-}\\sigma_{1}^{+}) \\\\ & \
+ J_{10,11}(\\sigma_{10}^{+}\\sigma_{11}^{-}+\\sigma_{10}^{-}\\sigma_{11}^{+})\
 + J_{65,66}(\\sigma_{65}^{+}\\sigma_{66}^{-}+\\sigma_{65}^{-}\\sigma_{66}^{+}\
) + J_{37,38}(\\sigma_{37}^{+}\\sigma_{38}^{-}+\\sigma_{37}^{-}\\sigma_{38}^{+\
}) + J_{28,35}(\\sigma_{28}^{+}\\sigma_{35}^{-}+\\sigma_{28}^{-}\\sigma_{35}^{\
+}) \\\\ & + J_{102,103}(\\sigma_{102}^{+}\\sigma_{103}^{-}+\\sigma_{102}^{-}\
\\sigma_{103}^{+}) + \
J_{92,102}(\\sigma_{92}^{+}\\sigma_{102}^{-}+\\sigma_{92}^{-}\\sigma_{102}^{+}\
) + J_{6,7}(\\sigma_{6}^{+}\\sigma_{7}^{-}+\\sigma_{6}^{-}\\sigma_{7}^{+}) + \
J_{98,99}(\\sigma_{98}^{+}\\sigma_{99}^{-}+\\sigma_{98}^{-}\\sigma_{99}^{+}) \
\\\\ & + J_{43,44}(\\sigma_{43}^{+}\\sigma_{44}^{-}+\\sigma_{43}^{-}\\sigma_{\
44}^{+}) + \
J_{52,56}(\\sigma_{52}^{+}\\sigma_{56}^{-}+\\sigma_{52}^{-}\\sigma_{56}^{+}) \
+ J_{125,126}(\\sigma_{125}^{+}\\sigma_{126}^{-}+\\sigma_{125}^{-}\\sigma_{\
126}^{+}) + \
J_{39,40}(\\sigma_{39}^{+}\\sigma_{40}^{-}+\\sigma_{39}^{-}\\sigma_{40}^{+}) \
\\\\ & + J_{8,16}(\\sigma_{8}^{+}\\sigma_{16}^{-}+\\sigma_{8}^{-}\\sigma_{16}^\
{+}) + J_{66,67}(\\sigma_{66}^{+}\\sigma_{67}^{-}+\\sigma_{66}^{-}\\sigma_{67}\
^{+}) + J_{11,12}(\\sigma_{11}^{+}\\sigma_{12}^{-}+\\sigma_{11}^{-}\\sigma_{\
12}^{+}) + \
J_{76,77}(\\sigma_{76}^{+}\\sigma_{77}^{-}+\\sigma_{76}^{-}\\sigma_{77}^{+}) \
\\\\ & + J_{83,92}(\\sigma_{83}^{+}\\sigma_{92}^{-}+\\sigma_{83}^{-}\\sigma_{\
92}^{+}) + \
J_{74,89}(\\sigma_{74}^{+}\\sigma_{89}^{-}+\\sigma_{74}^{-}\\sigma_{89}^{+}) \
+ J_{7,8}(\\sigma_{7}^{+}\\sigma_{8}^{-}+\\sigma_{7}^{-}\\sigma_{8}^{+}) + \
J_{53,60}(\\sigma_{53}^{+}\\sigma_{60}^{-}+\\sigma_{53}^{-}\\sigma_{60}^{+}) \
\\\\ & + \\Omega_{d,0}(U_{0}^{(0,1)}(t)+U_{1}^{(0,14)}(t))\\sigma_{0}^{X} + \
\\Omega_{d,1}(U_{3}^{(1,2)}(t)+U_{2}^{(1,0)}(t))\\sigma_{1}^{X} \\\\ & + \
\\Omega_{d,2}(U_{5}^{(2,3)}(t)+U_{4}^{(2,1)}(t))\\sigma_{2}^{X} + \
\\Omega_{d,3}(U_{7}^{(3,4)}(t)+U_{6}^{(3,2)}(t))\\sigma_{3}^{X} \\\\ & + \
\\Omega_{d,4}(U_{10}^{(4,15)}(t)+U_{9}^{(4,5)}(t)+U_{8}^{(4,3)}(t))\\sigma_{4}\
^{X} + \\Omega_{d,5}(U_{12}^{(5,6)}(t)+U_{11}^{(5,4)}(t))\\sigma_{5}^{X} \\\\ \
& + \\Omega_{d,6}(U_{14}^{(6,7)}(t)+U_{13}^{(6,5)}(t))\\sigma_{6}^{X} + \
\\Omega_{d,7}(U_{16}^{(7,8)}(t)+U_{15}^{(7,6)}(t))\\sigma_{7}^{X} \\\\ & + \
\\Omega_{d,8}(U_{18}^{(8,9)}(t)+U_{17}^{(8,7)}(t)+U_{19}^{(8,16)}(t))\\sigma_{\
8}^{X} + \\Omega_{d,9}(U_{21}^{(9,10)}(t)+U_{20}^{(9,8)}(t))\\sigma_{9}^{X} \
\\\\ & + \\Omega_{d,10}(U_{23}^{(10,11)}(t)+U_{22}^{(10,9)}(t))\\sigma_{10}^{\
X} + \\Omega_{d,11}(U_{25}^{(11,12)}(t)+U_{24}^{(11,10)}(t))\\sigma_{11}^{X} \
\\\\ & + \\Omega_{d,12}(U_{27}^{(12,13)}(t)+U_{28}^{(12,17)}(t)+U_{26}^{(12,\
11)}(t))\\sigma_{12}^{X} + \
\\Omega_{d,13}(U_{29}^{(13,12)}(t))\\sigma_{13}^{X} \\\\ & + \
\\Omega_{d,14}(U_{31}^{(14,18)}(t)+U_{30}^{(14,0)}(t))\\sigma_{14}^{X} + \
\\Omega_{d,15}(U_{32}^{(15,4)}(t)+U_{33}^{(15,22)}(t))\\sigma_{15}^{X} \\\\ & \
+ \\Omega_{d,16}(U_{35}^{(16,26)}(t)+U_{34}^{(16,8)}(t))\\sigma_{16}^{X} + \
\\Omega_{d,17}(U_{36}^{(17,12)}(t)+U_{37}^{(17,30)}(t))\\sigma_{17}^{X} \\\\ \
& + \\Omega_{d,18}(U_{39}^{(18,19)}(t)+U_{38}^{(18,14)}(t))\\sigma_{18}^{X} + \
\\Omega_{d,19}(U_{41}^{(19,20)}(t)+U_{40}^{(19,18)}(t))\\sigma_{19}^{X} \\\\ \
& + \\Omega_{d,20}(U_{43}^{(20,21)}(t)+U_{42}^{(20,19)}(t)+U_{44}^{(20,33)}(t)\
)\\sigma_{20}^{X} + \
\\Omega_{d,21}(U_{46}^{(21,22)}(t)+U_{45}^{(21,20)}(t))\\sigma_{21}^{X} \\\\ \
& + \\Omega_{d,22}(U_{49}^{(22,23)}(t)+U_{48}^{(22,21)}(t)+U_{47}^{(22,15)}(t)\
)\\sigma_{22}^{X} + \
\\Omega_{d,23}(U_{50}^{(23,22)}(t)+U_{51}^{(23,24)}(t))\\sigma_{23}^{X} \\\\ \
& + \\Omega_{d,24}(U_{52}^{(24,23)}(t)+U_{54}^{(24,34)}(t)+U_{53}^{(24,25)}(t)\
)\\sigma_{24}^{X} + \
\\Omega_{d,25}(U_{56}^{(25,26)}(t)+U_{55}^{(25,24)}(t))\\sigma_{25}^{X} \\\\ \
& + \\Omega_{d,26}(U_{58}^{(26,25)}(t)+U_{59}^{(26,27)}(t)+U_{57}^{(26,16)}(t)\
)\\sigma_{26}^{X} + \
\\Omega_{d,27}(U_{61}^{(27,28)}(t)+U_{60}^{(27,26)}(t))\\sigma_{27}^{X} \\\\ \
& + \\Omega_{d,28}(U_{63}^{(28,29)}(t)+U_{62}^{(28,27)}(t)+U_{64}^{(28,35)}(t)\
)\\sigma_{28}^{X} + \
\\Omega_{d,29}(U_{66}^{(29,30)}(t)+U_{65}^{(29,28)}(t))\\sigma_{29}^{X} \\\\ \
& + \\Omega_{d,30}(U_{67}^{(30,17)}(t)+U_{69}^{(30,31)}(t)+U_{68}^{(30,29)}(t)\
)\\sigma_{30}^{X} + \
\\Omega_{d,31}(U_{70}^{(31,30)}(t)+U_{71}^{(31,32)}(t))\\sigma_{31}^{X} \\\\ \
& + \\Omega_{d,32}(U_{73}^{(32,36)}(t)+U_{72}^{(32,31)}(t))\\sigma_{32}^{X} + \
\\Omega_{d,33}(U_{75}^{(33,39)}(t)+U_{74}^{(33,20)}(t))\\sigma_{33}^{X} \\\\ \
& + \\Omega_{d,34}(U_{77}^{(34,43)}(t)+U_{76}^{(34,24)}(t))\\sigma_{34}^{X} + \
\\Omega_{d,35}(U_{79}^{(35,47)}(t)+U_{78}^{(35,28)}(t))\\sigma_{35}^{X} \\\\ \
& + \\Omega_{d,36}(U_{81}^{(36,51)}(t)+U_{80}^{(36,32)}(t))\\sigma_{36}^{X} + \
\\Omega_{d,37}(U_{83}^{(37,52)}(t)+U_{82}^{(37,38)}(t))\\sigma_{37}^{X} \\\\ \
& + \\Omega_{d,38}(U_{85}^{(38,39)}(t)+U_{84}^{(38,37)}(t))\\sigma_{38}^{X} + \
\\Omega_{d,39}(U_{86}^{(39,33)}(t)+U_{88}^{(39,40)}(t)+U_{87}^{(39,38)}(t))\\\
sigma_{39}^{X} \\\\ & + \
\\Omega_{d,40}(U_{90}^{(40,41)}(t)+U_{89}^{(40,39)}(t))\\sigma_{40}^{X} + \
\\Omega_{d,41}(U_{93}^{(41,53)}(t)+U_{92}^{(41,42)}(t)+U_{91}^{(41,40)}(t))\\\
sigma_{41}^{X} \\\\ & + \
\\Omega_{d,42}(U_{95}^{(42,43)}(t)+U_{94}^{(42,41)}(t))\\sigma_{42}^{X} + \
\\Omega_{d,43}(U_{96}^{(43,34)}(t)+U_{98}^{(43,44)}(t)+U_{97}^{(43,42)}(t))\\\
sigma_{43}^{X} \\\\ & + \
\\Omega_{d,44}(U_{100}^{(44,45)}(t)+U_{99}^{(44,43)}(t))\\sigma_{44}^{X} + \
\\Omega_{d,45}(U_{103}^{(45,54)}(t)+U_{102}^{(45,46)}(t)+U_{101}^{(45,44)}(t))\
\\sigma_{45}^{X} \\\\ & + \
\\Omega_{d,46}(U_{104}^{(46,45)}(t)+U_{105}^{(46,47)}(t))\\sigma_{46}^{X} + \
\\Omega_{d,47}(U_{106}^{(47,35)}(t)+U_{108}^{(47,48)}(t)+U_{107}^{(47,46)}(t))\
\\sigma_{47}^{X} \\\\ & + \
\\Omega_{d,48}(U_{109}^{(48,47)}(t)+U_{110}^{(48,49)}(t))\\sigma_{48}^{X} + \
\\Omega_{d,49}(U_{113}^{(49,55)}(t)+U_{111}^{(49,48)}(t)+U_{112}^{(49,50)}(t))\
\\sigma_{49}^{X} \\\\ & + \
\\Omega_{d,50}(U_{115}^{(50,51)}(t)+U_{114}^{(50,49)}(t))\\sigma_{50}^{X} + \
\\Omega_{d,51}(U_{117}^{(51,50)}(t)+U_{116}^{(51,36)}(t))\\sigma_{51}^{X} \
\\\\ & + \\Omega_{d,52}(U_{119}^{(52,56)}(t)+U_{118}^{(52,37)}(t))\\sigma_{52}\
^{X} + \\Omega_{d,53}(U_{121}^{(53,60)}(t)+U_{120}^{(53,41)}(t))\\sigma_{53}^{\
X} \\\\ & + \
\\Omega_{d,54}(U_{123}^{(54,64)}(t)+U_{122}^{(54,45)}(t))\\sigma_{54}^{X} + \
\\Omega_{d,55}(U_{125}^{(55,68)}(t)+U_{124}^{(55,49)}(t))\\sigma_{55}^{X} \
\\\\ & + \\Omega_{d,56}(U_{126}^{(56,52)}(t)+U_{127}^{(56,57)}(t))\\sigma_{56}\
^{X} + \\Omega_{d,57}(U_{129}^{(57,58)}(t)+U_{128}^{(57,56)}(t))\\sigma_{57}^{\
X} \\\\ & + \
\\Omega_{d,58}(U_{132}^{(58,71)}(t)+U_{131}^{(58,59)}(t)+U_{130}^{(58,57)}(t))\
\\sigma_{58}^{X} + \
\\Omega_{d,59}(U_{133}^{(59,58)}(t)+U_{134}^{(59,60)}(t))\\sigma_{59}^{X} \
\\\\ & + \\Omega_{d,60}(U_{137}^{(60,61)}(t)+U_{136}^{(60,59)}(t)+U_{135}^{(\
60,53)}(t))\\sigma_{60}^{X} + \
\\Omega_{d,61}(U_{139}^{(61,62)}(t)+U_{138}^{(61,60)}(t))\\sigma_{61}^{X} \
\\\\ & + \\Omega_{d,62}(U_{142}^{(62,72)}(t)+U_{140}^{(62,61)}(t)+U_{141}^{(\
62,63)}(t))\\sigma_{62}^{X} + \
\\Omega_{d,63}(U_{144}^{(63,64)}(t)+U_{143}^{(63,62)}(t))\\sigma_{63}^{X} \
\\\\ & + \\Omega_{d,64}(U_{147}^{(64,65)}(t)+U_{145}^{(64,54)}(t)+U_{146}^{(\
64,63)}(t))\\sigma_{64}^{X} + \
\\Omega_{d,65}(U_{149}^{(65,66)}(t)+U_{148}^{(65,64)}(t))\\sigma_{65}^{X} \
\\\\ & + \\Omega_{d,66}(U_{151}^{(66,67)}(t)+U_{152}^{(66,73)}(t)+U_{150}^{(\
66,65)}(t))\\sigma_{66}^{X} + \
\\Omega_{d,67}(U_{154}^{(67,68)}(t)+U_{153}^{(67,66)}(t))\\sigma_{67}^{X} \
\\\\ & + \\Omega_{d,68}(U_{156}^{(68,67)}(t)+U_{155}^{(68,55)}(t)+U_{157}^{(\
68,69)}(t))\\sigma_{68}^{X} + \
\\Omega_{d,69}(U_{158}^{(69,68)}(t)+U_{159}^{(69,70)}(t))\\sigma_{69}^{X} \
\\\\ & + \\Omega_{d,70}(U_{160}^{(70,69)}(t)+U_{161}^{(70,74)}(t))\\sigma_{70}\
^{X} + \\Omega_{d,71}(U_{163}^{(71,77)}(t)+U_{162}^{(71,58)}(t))\\sigma_{71}^{\
X} \\\\ & + \
\\Omega_{d,72}(U_{165}^{(72,81)}(t)+U_{164}^{(72,62)}(t))\\sigma_{72}^{X} + \
\\Omega_{d,73}(U_{167}^{(73,85)}(t)+U_{166}^{(73,66)}(t))\\sigma_{73}^{X} \
\\\\ & + \\Omega_{d,74}(U_{168}^{(74,70)}(t)+U_{169}^{(74,89)}(t))\\sigma_{74}\
^{X} + \\Omega_{d,75}(U_{170}^{(75,76)}(t)+U_{171}^{(75,90)}(t))\\sigma_{75}^{\
X} \\\\ & + \
\\Omega_{d,76}(U_{173}^{(76,77)}(t)+U_{172}^{(76,75)}(t))\\sigma_{76}^{X} + \
\\Omega_{d,77}(U_{176}^{(77,78)}(t)+U_{174}^{(77,71)}(t)+U_{175}^{(77,76)}(t))\
\\sigma_{77}^{X} \\\\ & + \
\\Omega_{d,78}(U_{178}^{(78,79)}(t)+U_{177}^{(78,77)}(t))\\sigma_{78}^{X} + \
\\Omega_{d,79}(U_{180}^{(79,80)}(t)+U_{181}^{(79,91)}(t)+U_{179}^{(79,78)}(t))\
\\sigma_{79}^{X} \\\\ & + \
\\Omega_{d,80}(U_{183}^{(80,81)}(t)+U_{182}^{(80,79)}(t))\\sigma_{80}^{X} + \
\\Omega_{d,81}(U_{185}^{(81,80)}(t)+U_{184}^{(81,72)}(t)+U_{186}^{(81,82)}(t))\
\\sigma_{81}^{X} \\\\ & + \
\\Omega_{d,82}(U_{187}^{(82,81)}(t)+U_{188}^{(82,83)}(t))\\sigma_{82}^{X} + \
\\Omega_{d,83}(U_{191}^{(83,92)}(t)+U_{190}^{(83,84)}(t)+U_{189}^{(83,82)}(t))\
\\sigma_{83}^{X} \\\\ & + \
\\Omega_{d,84}(U_{192}^{(84,83)}(t)+U_{193}^{(84,85)}(t))\\sigma_{84}^{X} + \
\\Omega_{d,85}(U_{194}^{(85,73)}(t)+U_{196}^{(85,86)}(t)+U_{195}^{(85,84)}(t))\
\\sigma_{85}^{X} \\\\ & + \
\\Omega_{d,86}(U_{198}^{(86,87)}(t)+U_{197}^{(86,85)}(t))\\sigma_{86}^{X} + \
\\Omega_{d,87}(U_{200}^{(87,88)}(t)+U_{199}^{(87,86)}(t)+U_{201}^{(87,93)}(t))\
\\sigma_{87}^{X} \\\\ & + \
\\Omega_{d,88}(U_{203}^{(88,89)}(t)+U_{202}^{(88,87)}(t))\\sigma_{88}^{X} + \
\\Omega_{d,89}(U_{204}^{(89,74)}(t)+U_{205}^{(89,88)}(t))\\sigma_{89}^{X} \
\\\\ & + \\Omega_{d,90}(U_{207}^{(90,94)}(t)+U_{206}^{(90,75)}(t))\\sigma_{90}\
^{X} + \\Omega_{d,91}(U_{209}^{(91,98)}(t)+U_{208}^{(91,79)}(t))\\sigma_{91}^{\
X} \\\\ & + \
\\Omega_{d,92}(U_{211}^{(92,102)}(t)+U_{210}^{(92,83)}(t))\\sigma_{92}^{X} + \
\\Omega_{d,93}(U_{213}^{(93,106)}(t)+U_{212}^{(93,87)}(t))\\sigma_{93}^{X} \\\
\\ & + \\Omega_{d,94}(U_{214}^{(94,90)}(t)+U_{215}^{(94,95)}(t))\\sigma_{94}^{\
X} + \\Omega_{d,95}(U_{216}^{(95,94)}(t)+U_{217}^{(95,96)}(t))\\sigma_{95}^{X}\
 \\\\ & + \
\\Omega_{d,96}(U_{220}^{(96,109)}(t)+U_{219}^{(96,97)}(t)+U_{218}^{(96,95)}(t)\
)\\sigma_{96}^{X} + \\Omega_{d,97}(U_{221}^{(97,96)}(t)+U_{222}^{(97,98)}(t))\
\\sigma_{97}^{X} \\\\ & + \
\\Omega_{d,98}(U_{223}^{(98,91)}(t)+U_{225}^{(98,99)}(t)+U_{224}^{(98,97)}(t))\
\\sigma_{98}^{X} + \\Omega_{d,99}(U_{227}^{(99,100)}(t)+U_{226}^{(99,98)}(t))\
\\sigma_{99}^{X} \\\\ & + \
\\Omega_{d,100}(U_{229}^{(100,101)}(t)+U_{228}^{(100,99)}(t)+U_{230}^{(100,\
110)}(t))\\sigma_{100}^{X} + \
\\Omega_{d,101}(U_{232}^{(101,102)}(t)+U_{231}^{(101,100)}(t))\\sigma_{101}^{\
X} \\\\ & + \
\\Omega_{d,102}(U_{233}^{(102,92)}(t)+U_{234}^{(102,101)}(t)+U_{235}^{(102,\
103)}(t))\\sigma_{102}^{X} + \
\\Omega_{d,103}(U_{237}^{(103,104)}(t)+U_{236}^{(103,102)}(t))\\sigma_{103}^{\
X} \\\\ & + \
\\Omega_{d,104}(U_{239}^{(104,105)}(t)+U_{238}^{(104,103)}(t)+U_{240}^{(104,\
111)}(t))\\sigma_{104}^{X} + \
\\Omega_{d,105}(U_{241}^{(105,104)}(t)+U_{242}^{(105,106)}(t))\\sigma_{105}^{\
X} \\\\ & + \
\\Omega_{d,106}(U_{245}^{(106,107)}(t)+U_{244}^{(106,105)}(t)+U_{243}^{(106,\
93)}(t))\\sigma_{106}^{X} + \
\\Omega_{d,107}(U_{247}^{(107,108)}(t)+U_{246}^{(107,106)}(t))\\sigma_{107}^{\
X} \\\\ & + \
\\Omega_{d,108}(U_{248}^{(108,107)}(t)+U_{249}^{(108,112)}(t))\\sigma_{108}^{\
X} + \\Omega_{d,109}(U_{250}^{(109,96)}(t)+U_{251}^{(109,114)}(t))\\sigma_{\
109}^{X} \\\\ & + \
\\Omega_{d,110}(U_{253}^{(110,118)}(t)+U_{252}^{(110,100)}(t))\\sigma_{110}^{\
X} + \\Omega_{d,111}(U_{255}^{(111,122)}(t)+U_{254}^{(111,104)}(t))\\sigma_{\
111}^{X} \\\\ & + \
\\Omega_{d,112}(U_{256}^{(112,108)}(t)+U_{257}^{(112,126)}(t))\\sigma_{112}^{\
X} + \\Omega_{d,113}(U_{258}^{(113,114)}(t))\\sigma_{113}^{X} \\\\ & + \
\\Omega_{d,114}(U_{261}^{(114,115)}(t)+U_{260}^{(114,113)}(t)+U_{259}^{(114,\
109)}(t))\\sigma_{114}^{X} + \
\\Omega_{d,115}(U_{263}^{(115,116)}(t)+U_{262}^{(115,114)}(t))\\sigma_{115}^{\
X} \\\\ & + \
\\Omega_{d,116}(U_{265}^{(116,117)}(t)+U_{264}^{(116,115)}(t))\\sigma_{116}^{\
X} + \\Omega_{d,117}(U_{267}^{(117,118)}(t)+U_{266}^{(117,116)}(t))\\sigma_{\
117}^{X} \\\\ & + \
\\Omega_{d,118}(U_{270}^{(118,119)}(t)+U_{269}^{(118,117)}(t)+U_{268}^{(118,\
110)}(t))\\sigma_{118}^{X} + \
\\Omega_{d,119}(U_{272}^{(119,120)}(t)+U_{271}^{(119,118)}(t))\\sigma_{119}^{\
X} \\\\ & + \
\\Omega_{d,120}(U_{274}^{(120,121)}(t)+U_{273}^{(120,119)}(t))\\sigma_{120}^{\
X} + \\Omega_{d,121}(U_{276}^{(121,122)}(t)+U_{275}^{(121,120)}(t))\\sigma_{\
121}^{X} \\\\ & + \
\\Omega_{d,122}(U_{279}^{(122,123)}(t)+U_{277}^{(122,111)}(t)+U_{278}^{(122,\
121)}(t))\\sigma_{122}^{X} + \
\\Omega_{d,123}(U_{281}^{(123,124)}(t)+U_{280}^{(123,122)}(t))\\sigma_{123}^{\
X} \\\\ & + \
\\Omega_{d,124}(U_{283}^{(124,125)}(t)+U_{282}^{(124,123)}(t))\\sigma_{124}^{\
X} + \\Omega_{d,125}(U_{285}^{(125,126)}(t)+U_{284}^{(125,124)}(t))\\sigma_{\
125}^{X} \\\\ & + \
\\Omega_{d,126}(U_{286}^{(126,112)}(t)+U_{287}^{(126,125)}(t))\\sigma_{126}^{\
X} \\\\ \\end{align}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h_latex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["h_str", 
                  Style[
                  "h_str", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h_str"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h_str"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 580], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 580], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["h_str"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["h_str"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["osc", 
                  Style[
                  "osc", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["osc"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["osc"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[<||>, ShowStringCharacters -> False], 
                  Style[
                   Style[<||>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["osc"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["osc"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["qub", 
                  Style[
                  "qub", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["qub"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["qub"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 127], "\[RightAssociation]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 127], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["qub"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["qub"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["vars", 
                  Style[
                  "vars", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["vars"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vars"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 525], "\[RightAssociation]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 525], "\[RightAssociation]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["vars"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["vars"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{635.3000000000001, {100.36904296875, 105.13095703125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{635.3000000000001, {100.36904296875, 105.13095703125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940946184408407*^9, 3.9409461923811283`*^9}},
 CellLabel->"Out[102]=",
 CellID->710987636,ExpressionUUID->"231ede77-e854-ff45-a3f3-388eb06a577d"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Status & Defaults", "Subsubsubsection",
 CellChangeTimes->{{3.9409458517130604`*^9, 3.940945852962946*^9}, {
  3.9409462459417496`*^9, 3.9409462469159174`*^9}, {3.9409464628926315`*^9, 
  3.9409464677378674`*^9}},
 CellID->26617832,ExpressionUUID->"9295f69b-bc60-9f4d-895f-2fd077197e1b"],

Cell[CellGroupData[{

Cell["Obtain the selected backend status:", "Text",
 CellChangeTimes->{{3.940946127749115*^9, 3.94094614501622*^9}, {
  3.940946474634983*^9, 3.9409464753583126`*^9}},
 CellID->712223893,ExpressionUUID->"ef436d23-4ef1-e649-a6ef-f268b3ee2c57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "[", 
  RowBox[{"\"\<Backend\>\"", ",", " ", 
   RowBox[{"\"\<ID\>\"", " ", "\[Rule]", " ", "\"\<ibm_brisbane\>\""}], ",", 
   RowBox[{"\"\<Property\>\"", "\[Rule]", "\"\<Status\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940946032483549*^9, 3.940946051953621*^9}, {
  3.940946249349689*^9, 3.9409462719897556`*^9}},
 CellLabel->"In[104]:=",
 CellID->342873649,ExpressionUUID->"ef222921-d5fc-1641-ba35-fa505cb0a8b0"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "state" -> True, "status" -> "active", "message" -> "available", 
       "length_queue" -> 35, "backend_version" -> ""|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"state"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"message"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {
         "length_queue"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[33.6]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "state", "status", "message", "length_queue", "backend_version"}, {
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"state"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"message"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {
         "length_queue"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[33.6]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "state", "status", "message", "length_queue", "backend_version"}, {
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 5, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["state", 
                  Style[
                  "state", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["state"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["state"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["status", 
                  Style[
                  "status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["active", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["message", 
                  Style[
                  "message", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["message"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["message"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["available", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["message"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["length_queue", 
                  Style[
                  "length_queue", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["length_queue"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length_queue"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["35"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["length_queue"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend_version", 
                  Style[
                  "backend_version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend_version"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_version"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend_version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       207.10000000000002`, {67.81904296875, 72.58095703125001}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      207.10000000000002`, {67.81904296875, 72.58095703125001}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.940946055226244*^9, {3.9409462513646603`*^9, 3.940946272890238*^9}},
 CellLabel->"Out[104]=",
 CellID->831144254,ExpressionUUID->"760b370a-3567-2545-9a41-f97d55690ce4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "[", 
  RowBox[{"\"\<Backend\>\"", ",", " ", 
   RowBox[{"\"\<ID\>\"", " ", "->", " ", "\"\<ibm_brisbane\>\""}], ",", " ", 
   RowBox[{"\"\<Property\>\"", " ", "\[Rule]", " ", "\"\<Defaults\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9409462818117313`*^9, 3.940946282932448*^9}, {
  3.9409463605781975`*^9, 3.9409463679105477`*^9}},
 CellLabel->"In[106]:=",
 CellID->385824478,ExpressionUUID->"36f4ba4a-05b3-b64e-a0c6-454c05a0852a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          7672554361933347107939028853876165980135572258869272480960], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"buffer"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"cmd_def"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"discriminator"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"meas_freq_est"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"meas_kernel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"pulse_library"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"qubit_freq_est"} -> 
            TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
         TypeSystem`Struct[{
           "buffer", "cmd_def", "discriminator", "meas_freq_est", 
            "meas_kernel", "pulse_library", "qubit_freq_est"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "qubits", "sequence"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                
                TypeSystem`Struct[{
                 "ch", "label", "name", "parameters", "pulse_shape", "t0"}, {
                 TypeSystem`AnyType, 
                  TypeSystem`Atom[String], TypeSystem`AnyType, 
                  
                  TypeSystem`Struct[{
                   "amp", "beta", "duration", "sigma", "width"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], TypeSystem`AnyType, 
                  TypeSystem`Atom[Integer]}], TypeSystem`AnyLength]}], 1161], 
            TypeSystem`Struct[{"name", "params"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
              TypeSystem`UnknownType, TypeSystem`UnknownType, 
               TypeSystem`AnyLength]}], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 127], 
            TypeSystem`Struct[{"name", "params"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
              TypeSystem`UnknownType, TypeSystem`UnknownType, 
               TypeSystem`AnyLength]}], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "samples"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Vector[
                 TypeSystem`Atom[Integer], 2], 120]}], 127], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 127]}], "Meta" -> <||>, "RowTarget" -> 20,
          "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`DocumentShape[<|{"buffer"} -> 
            TypeSystem`PackageScope`AtomShape[34], {"cmd_def"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"discriminator"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"meas_freq_est"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"meas_kernel"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"pulse_library"} -> 
            TypeSystem`PackageScope`ElidedShape[1], {"qubit_freq_est"} -> 
            TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
         TypeSystem`Struct[{
           "buffer", "cmd_def", "discriminator", "meas_freq_est", 
            "meas_kernel", "pulse_library", "qubit_freq_est"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "qubits", "sequence"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
               TypeSystem`Vector[
                
                TypeSystem`Struct[{
                 "ch", "label", "name", "parameters", "pulse_shape", "t0"}, {
                 TypeSystem`AnyType, 
                  TypeSystem`Atom[String], TypeSystem`AnyType, 
                  TypeSystem`Struct[{
                   "amp", "beta", "duration", "sigma", "width"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Real]}], 
                    TypeSystem`Atom[Real], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[Integer]}], TypeSystem`AnyType, 
                  TypeSystem`Atom[Integer]}], TypeSystem`AnyLength]}], 1161], 
            TypeSystem`Struct[{"name", "params"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
              TypeSystem`UnknownType, TypeSystem`UnknownType, 
               TypeSystem`AnyLength]}], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 127], 
            TypeSystem`Struct[{"name", "params"}, {
              TypeSystem`Atom[String], 
              TypeSystem`Assoc[
              TypeSystem`UnknownType, TypeSystem`UnknownType, 
               TypeSystem`AnyLength]}], 
            TypeSystem`Vector[
             TypeSystem`Struct[{"name", "samples"}, {
               TypeSystem`Atom[String], 
               TypeSystem`Vector[
                TypeSystem`Vector[
                 TypeSystem`Atom[Integer], 2], 120]}], 127], 
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 127]}], "Path" -> {}, "DisplayedRowCount" -> 
         20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 7, 
         "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["buffer", 
                    Style[
                    "buffer", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["buffer"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["buffer"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["buffer"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["cmd_def", 
                    Style[
                    "cmd_def", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["cmd_def"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["cmd_def"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1161], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1161], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["cmd_def"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["cmd_def"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["discriminator", 
                    Style[
                    "discriminator", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["discriminator"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["discriminator"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"name", "params"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"name", "params"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["discriminator"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["discriminator"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["meas_freq_est", 
                    Style[
                    "meas_freq_est", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["meas_freq_est"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["meas_freq_est"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["meas_freq_est"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["meas_freq_est"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["meas_kernel", 
                    Style[
                    "meas_kernel", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["meas_kernel"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["meas_kernel"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"name", "params"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 2], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"name", "params"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["meas_kernel"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["meas_kernel"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["pulse_library", 
                    Style[
                    "pulse_library", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["pulse_library"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["pulse_library"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["pulse_library"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["pulse_library"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}, {
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["qubit_freq_est", 
                    Style[
                    "qubit_freq_est", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["qubit_freq_est"]}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["qubit_freq_est"]}, "RowHeader", False], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], 
                    Style[
                    Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 127], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][{
                    Key["qubit_freq_est"]}, 4]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][{
                    Key["qubit_freq_est"]}, "Item", False], "Mouse"], 
                  ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
                   GrayLevel[0.5]}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154", {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  "ab3f62cf-c58f-4e27-b4ab-3c6a7d7d2154"][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        ImageSizeCache -> {147.6, {96.91904296874999, 101.68095703125}}, 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {147.6, {96.91904296874999, 101.68095703125}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 7672554361933347107939028853876165980135572258869272480960,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940946370754635*^9},
 CellLabel->"Out[106]=",
 CellID->193297886,ExpressionUUID->"90be1f4d-9968-8845-907e-4a9e9a1f3212"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Run Quantum Circuit", "Subsection",
 CellChangeTimes->{{3.940943187302208*^9, 3.940943194944233*^9}, {
  3.940960897483317*^9, 3.940960908136364*^9}},
 CellID->259639,ExpressionUUID->"9449a27e-c971-114e-a7f8-0c8873aec54e"],

Cell[CellGroupData[{

Cell["\<\
There are two methods in order to run a circuit in a QPU using Wolfram \
Quantum Framework, using the ServiceConnect or QuantumCircuitOperator object. \
First of all, we need a quantum circuit:\
\>", "Text",
 CellChangeTimes->{{3.9409456808316536`*^9, 3.940945699653442*^9}, {
  3.940946717700527*^9, 3.940946723462527*^9}, {3.9409487100314865`*^9, 
  3.9409487754750557`*^9}},
 CellID->599463686,ExpressionUUID->"55ff3e8c-2c3c-fe41-8f24-0c33740aca2a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<H\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<CZ\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"\"\<CZ\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<RZ\>\"", "[", 
        FractionBox["\[Pi]", "3"], "]"}], "\[Rule]", "2"}], ",", 
      RowBox[{
       RowBox[{"\"\<RZ\>\"", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]"}], "3"], "]"}], "->", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qc", "[", "\"\<Diagram\>\"", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.940948782797997*^9, 3.940948899413891*^9}},
 CellLabel->"In[1256]:=",
 CellID->91303064,ExpressionUUID->"680a397a-3297-2448-9492-a6310b063cdc"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -3}, {2.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -2}, {3.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -3}, {3.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {4.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -2}, {4.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -3}, {4.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -1}, {5.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -2}, {5.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -3}, {5.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -2}, {0.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -3}, {0.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -1}, {6.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -2}, {6.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -3}, {6.625, -3}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {6.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {6.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -1.375}, {1.375, -0.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -2.375}, {1.375, -1.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -3.375}, {1.375, -2.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ]}, 
       {Dashing[{Small, Small}], 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{1., -1.375}, {1., -1.625}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{1., -2.375}, {1., -2.625}}]}}},
      TemplateBox[{"\"H\"", 
        RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
       SuperscriptBox]],
     Annotation[#, 
      Superscript["H", 
       CircleTimes[3]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           RectangleBox[{1.625, -2.375}, {2.375, -1.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"Z\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {2., -2.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"Z\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Z", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{2., -1.09375}, {2., -1.625}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
          LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{2., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"Z\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "Z"][{1}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           RectangleBox[{2.625, -3.375}, {3.375, -2.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"Z\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {3., -3.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"Z\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "Z", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{3., -2.09375}, {3., -2.625}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
          LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{3., -2.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"Z\""], "[", 
        RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "Z"][{2}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{3.625, -2.375}, {4.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
           FractionBox["\[Pi]", "3"], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Z\""], "[", 
        FractionBox["\[Pi]", "3"], "]"}]],
     Annotation[#, 
      Subscript["R", "Z"][Rational[1, 3] Pi], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{3.625, -3.375}, {4.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Z\""], "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]],
     Annotation[#, 
      Subscript["R", "Z"][Rational[2, 3] Pi], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -1.375}, {5.375, -0.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -1.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -2.375}, {5.375, -1.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -2.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -3.375}, {5.375, -2.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -3.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ]}, 
       {Dashing[{Small, Small}], 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{5., -1.375}, {5., -1.625}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{5., -2.375}, {5., -2.625}}]}}},
      TemplateBox[{"\"H\"", 
        RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
       SuperscriptBox]],
     Annotation[#, 
      Superscript["H", 
       CircleTimes[3]], "Tooltip"]& ], {
     TagBox[
      TooltipBox[{{
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -1.375}, {6.375, -0.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -1.0772902651951612`}, {
               6.212366961023424, -1.0332063712732258`}}], 
              LineBox[{{6.116904337848513, -1.0409065970372444`}, {
               6.163666072987917, -0.9822692358521422}}], 
              LineBox[{{6.073692193435111, -1.015088542646603}, {
               6.103169070809155, -0.9461239597052442}}], 
              LineBox[{{6.0251687373408105`, -1.0016969196685124`}, {
               6.035236232277135, -0.9273756875359171}}], 
              LineBox[{{5.9748312626591895`, -1.0016969196685122`}, {
               5.964763767722865, -0.9273756875359171}}], 
              LineBox[{{5.926307806564889, -1.015088542646603}, {
               5.896830929190845, -0.9461239597052442}}], 
              LineBox[{{5.883095662151487, -1.0409065970372444`}, {
               5.836333927012083, -0.9822692358521422}}], 
              LineBox[{{5.848309313554697, -1.0772902651951612`}, {
               5.787633038976576, -1.0332063712732258`}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -1.1875}, {
                6.17024643740233, -0.8533725534293621}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -2.375}, {6.375, -1.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -2.0772902651951615`}, {
               6.212366961023424, -2.033206371273226}}], 
              LineBox[{{6.116904337848513, -2.040906597037244}, {
               6.163666072987917, -1.9822692358521423`}}], 
              LineBox[{{6.073692193435111, -2.0150885426466028`}, {
               6.103169070809155, -1.9461239597052442`}}], 
              LineBox[{{6.0251687373408105`, -2.001696919668512}, {
               6.035236232277135, -1.9273756875359171`}}], 
              LineBox[{{5.9748312626591895`, -2.001696919668512}, {
               5.964763767722865, -1.9273756875359171`}}], 
              LineBox[{{5.926307806564889, -2.0150885426466028`}, {
               5.896830929190845, -1.9461239597052442`}}], 
              LineBox[{{5.883095662151487, -2.040906597037244}, {
               5.836333927012083, -1.982269235852142}}], 
              LineBox[{{5.848309313554697, -2.0772902651951615`}, {
               5.787633038976576, -2.033206371273226}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -2.1875}, {
                6.17024643740233, -1.8533725534293621`}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -3.375}, {6.375, -2.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -3.0772902651951615`}, {
               6.212366961023424, -3.033206371273226}}], 
              LineBox[{{6.116904337848513, -3.040906597037244}, {
               6.163666072987917, -2.9822692358521423`}}], 
              LineBox[{{6.073692193435111, -3.015088542646603}, {
               6.103169070809155, -2.946123959705244}}], 
              LineBox[{{6.0251687373408105`, -3.0016969196685124`}, {
               6.035236232277135, -2.927375687535917}}], 
              LineBox[{{5.9748312626591895`, -3.0016969196685124`}, {
               5.964763767722865, -2.927375687535917}}], 
              LineBox[{{5.926307806564889, -3.015088542646603}, {
               5.896830929190845, -2.946123959705244}}], 
              LineBox[{{5.883095662151487, -3.040906597037244}, {
               5.836333927012083, -2.9822692358521423`}}], 
              LineBox[{{5.848309313554697, -3.0772902651951615`}, {
               5.787633038976576, -3.033206371273226}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -3.1875}, {
                6.17024643740233, -2.853372553429362}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ]}, 
        {Dashing[{Small, Small}], 
         {RGBColor[0.7367, 0.358, 0.503], 
          LineBox[{{6., -1.375}, {6., -1.625}}]}, 
         {RGBColor[0.7367, 0.358, 0.503], 
          LineBox[{{6., -2.375}, {6., -2.625}}]}}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[3]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{6., -0.625}, {6., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{5.90625, -0.2109375}, {6.09375, -0.2109375}, {
        6., -0.0234375}}]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.940948861954441*^9, 3.940948900069153*^9}, 
   3.940958427433773*^9, 3.9418124515966988`*^9},
 CellLabel->"Out[1257]=",
 CellID->30568222,ExpressionUUID->"7b47bdea-2fd5-8a4d-a32c-2c080e71770a"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Users should pay attention to specification of each QPUs, for example:\
\>", "Text",
 CellChangeTimes->{{3.9409503873437576`*^9, 3.940950450012972*^9}, {
  3.940952358570259*^9, 3.940952365167483*^9}},
 CellID->199133389,ExpressionUUID->"8e759a12-86ca-f44c-9817-ed9d95825534"],

Cell["Accepted gates", "Item",
 CellChangeTimes->{{3.940950393814495*^9, 3.9409504246811543`*^9}},
 CellID->660153590,ExpressionUUID->"dca4c844-5cee-3c40-9c93-cbf57fc2ad30"],

Cell["Number of qubits", "Item",
 CellChangeTimes->{
  3.940950393814495*^9, {3.940950427678737*^9, 3.940950430612257*^9}},
 CellID->97229535,ExpressionUUID->"61b3ae95-df15-8348-9fc1-b85696610f5b"],

Cell[CellGroupData[{

Cell["ServiceConnect", "Subsubsection",
 CellChangeTimes->{{3.9409490857830105`*^9, 3.9409490988073406`*^9}},
 CellID->569025401,ExpressionUUID->"b69d89ca-0161-7840-b339-c5e651af2376"],

Cell[CellGroupData[{

Cell["Transform the circuit into qiskit object, then decompose it:", "Text",
 CellChangeTimes->{{3.9409491243212967`*^9, 3.940949149136221*^9}},
 CellID->14316207,ExpressionUUID->"fa1ddf1d-19d2-7644-9ff6-3e2441cb7579"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qiskit", "=", 
   RowBox[{
    RowBox[{"qc", "[", "\"\<Qiskit\>\"", "]"}], "[", "\"\<Decompose\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940949157899174*^9, 3.940949169120367*^9}, 
   3.940949829613741*^9},
 CellLabel->"In[137]:=",
 CellID->119219805,ExpressionUUID->"ba431b54-14a4-734e-9497-9ab0de9dde4a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QiskitCircuit",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {10.0329375, {0., 10.0329375}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
Ko1Nu3DThGQIUpylqbV02VUZuL3MZ942uyaetBC447HYZmlEOJBKHZ2zNKqr
aNhP0ei/n95HH33E1Pv6+mpva4azNO3ataOjER0dra4ft2/fZj6kCwoK0pYT
bkrDkjp9BFxr2fbCm7TPyrLyipJSpuQcOM1mQ3zjSZ0nT6ocu8Ub71qa4TO/
5zFac/vG04+s7+q8bL3mZKwIkdy1NGwKc/saFSznakx2LY04B1Kpo30tzebN
m62rJ2+bNm1KomK4zzANPD09mbXaV+aY4bU0s2bNsqj+8YisrCymJj09vU2b
NsxX5oODg7U3kZDScC5QGg16TtxjPKVZuvY0j6Gam9IoFIoO/95Z60G2Ddx4
J++RaUIyBFkqDbciHqURZCCVOtpKExERwbjH3//+d158hmHAgAFMg8WLF0Np
cnJyGjdubFF9V70OHTr4+fnR8tChQwcPHkwLMTEx2ptAafQjS6WZ9fEx4ynN
N7zeBc7clIbYdyTHunOc/oMcFv2ryeIxBCgNlEYeaCvNtGnTGPd49dVX+fIZ
Yvr06UybSZMmQWmU1bemGTZsWINqunfvvn79evp/n7e3Nx2iEydOaLeH0uhH
lkpzNOOukZTGtVcSv7eAM0OlITanZdvUbDXB4Uf5/dUJ4wGlgdLIA22lGTdu
HOMec+fO5ctntlb/sALTbMSIEVAanRQXF1taWlpZWT16pGOmGkqjHzH8EjTv
+ZQSYsDLu9goSl2VZv6n6TyHKoLjb3qlIY6duTsydL9VwF/Epvv4r7fsvSIV
n1FCaaA0ckFbaT7++OPXX3/91Vdf/fzzz/UrDbVU/ZaTfp8hvvzyy0mTJtGe
ly1bBqXRyfHjx+lItmnTRqN+ezVjxoyhtczyyZMn+X1pGZyJYkipxsinsTsu
8a40NoFx13KK+I1TDMdfEKVh+ONO8Yadlxr2TKTD26SXqWXAcKA0UBp5wOaX
uPUwY8YMsppafUY/UBqG2NhYkpaxY8dq1FtoMXnyZH5fWgZnohhSqjHyaWVl
VY9XvuZXaRZHn+I9TjEcfwGVhsGtfzIdXnoUMAZuQGmgNPLAQKUhVq1aZeAe
oDQMISEhpCvh4eGmf2n2Z+KOnsH30i8VXLmVl5Gd2itUPGeiGFKqkfLpxWv5
9l1r/zY3S6XpNHpXeUUl70GK4fhDaTgjG6XxmbfddchbtODUeaCjV0dH74AG
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
jxMUFKRzVLx582aTJk2GDBnCchQVZJZm2wtv0ktXlpVXlJQyJefAaWPLOWZp
AO80btXHqLM0DfwmC/0Wn4FZGl7OYt5naZjb16hgOVcjklkaQRIBZ8Q8SzN8
+HCmA0yfPt1wn2EYNGgQs3bmzJnam3OYpZk1axbtzcPDIysri9GP9PT0Nm3a
MJc0BwcHa/tJcXExoyhkPiyVhiV1/QjVSAVf4gai4u59437jadt314R+i8+Q
+rU0IjmL63otjZGKya6lEWEi4IyYr6Xx9/dn9GPdunW8+Awxf/58psGwYcO0
13K4liYnJ6dx48YW1XfV69Chg5+fn0X1N80HDx5MCzExMRrtS0tL+/Tp89xz
z2VmZvJ08P5EBj0ZSgOMgVv/ZOMpzdUcE91Ls1agNFAapSwSAWdEqzTJycnM
h0SNGjXiy2eI9evXM23atWvHi9Ioq29NQ4LUoJru3bvTSygUCuZmxSdOnFBv
WVFR8dJLL1EzjXq+kEFPhtIAY/Daoh+NpDS+L32FuwerA6WB0kBptJVG5R4B
AQF8+QyDi4tLTabE1y9xFxcXW1paWllZPXr0SFVZVVU1ZswYe3v7AwcO8PIq
2sigJ4vhZ3yhNPLjxFnNC2D4Upqo+LNCv7k/ka7SiOoshtIIngg4I1qlWbdu
XevWrVu1avXSSy/p95mUlBTmpwfY+AzRuXNnb29vnabEl9IcP36cgmnTpo16
5VtvvUWV77///i9qaNysxkBk0JPFMB5CaeSHQqHoOm4370pj3zX+fr6IeguU
BkqjlEUi4IxolaZOzJgxw9LSko3P6IcvpYmNjSV7GTt2rHql6l5/6sTHx/Py
igwy6MliGA+hNLKE/T2E2SuNeO4bzAClgdIoZZEIOCMPpSHefvttA32GR6UJ
CQkhXQkPD+dlb+xh35N39Ay+l36p4MqtvIzs1F6h4unJYhgPoTRyZepiVr/H
zVJp/EfueFxeKfR7+gtQGtMoTeD2Mue/jbBv2dqxVSengAH+67L1NPaZt911
yFu04NR5oKNXR0fvgAbt/97u09NiUBrRJgLOyEZpeIEvpenbty8pzd69e3nZ
G3vY9+TbR84eCVkTX/2Lq9SZxdOTxTAeQmnkSkFRudfgrbUqDXPLGu37z6gX
uy4bqYHQb0gTKI3JlMYv7JsuuxW07DF9TYMOvfU0fq7XBL8l39JCwJb8Z5Lz
/i5yITEojWgTAWegNOrwpTRCwbInp/hPKS96lOA2hnlaeu/hjh7BOltueX5S
ya37ZQ+KHpy7ln85p/JxRVbSfigNkC5Z1wua9k5if6mwzmLdOW7XD9eFfis6
gNKYRmnUS9sVJ5lb55Gx2DZ2s3Z6ztE7wMG9raWNXeMBr3fZWUFr6VF9E6+Q
eGojuNKIORFwBkqjjpkozZ5Bcwuyb6qe5p6+vG/0kpoan41OPRWZQgvf/efD
O8fOG1vOxTAeQmnkzcVr+e4DUjj7jF2XjakHrgv9JnQDpTG90jzXZ2LTf4Yw
y83+PbflhA9pwW/Jtw38e9FC6/9+16jXeLXGk2wbu1Np/9lZwZVGzImAM1Aa
daA02uXm4TP7J0bQwq8RWzJj0qA0QAbkPigdO+cAB58JHJP6W9YDocOvESiN
iZWm5cTw+m16BG57xDx16jzQd1EaU990eCgtNBk6w2feNo2tWoUmNOw6VFpK
Y+JEwBkojTpmojTs5xufrs0r+KrzNFq4vveXn2Z9DqUBsmH7d9dasbi0hinO
L276aP3piooqoaPWB5TGlErj9lpUPd+uqitkqNg4N+m48SYtuPQcRd7SZbfC
rrlP563F2tta2jkEbL4vlQ+eTJ8IOAOlUcdMlIbKnaPn/7wq7MwVpjJ72+ED
UyLVm1EfLs3NZ5YLr97+euAcKA2QE5WVVXt//H3ojG9tAuNqkpkuY1Njtl8s
eVQhdLC1A6UxmdK4T11Zz7dLwJaHqhqSGRvnpsyyfQu/dqtOtV1+3PmFYUwN
mU/HjbeYZd8FqbaN3ZiriwVUGjEnAs5AadQxH6XZGTTr3snq7+6duZLa512m
Mj/rjz2D56k32z8x4ubBZz+6mpeRzeaSMCgNkCJlj5+kn8td+9WFBatPvhd1
/P3V6SsSzh48cSu/8LHQodUBKI1plKZjXM7TH9Ru7uPoHUClXuvuT0VlUVrD
wMFMg3p+LzQe8HqzUfO9gmOZmg6xN+q17ubg1eHp97479W/3aYbgHzyJORFw
BkqjjvkojXZJ9p9y6/AZzptDaQAQHCiNaZSGZXHwaN8p8R7nzQW51Z5IEgFn
oDTqmLPS8FigNAAIApRGVEpjYMHdgzkApVEHSiN4TxbDeAilARIFSgOlUcoi
EXAGSqMOlEbwniyG8RBKAyQKlAZKo5RFIuAMlEYdKI3gPVkM4yGUBkgUKA2U
RimLRMAZKI06UlcahUJBvUjwQmEY8hZoLBK4GBA/AAIiCqURwyls2FlMm5JO
CF44vwMZJALOiERp6L0/4UpEdNKCyPX0qLHMAeQyAIB0EYPSACAgIlEaQ8BZ
DAAASgyGwOyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADI
AwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyG
wMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB
0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAA
gDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzA
YAjMHCiN1Nm0aVOXLl1cXFwcHBzatm27cuVKhUIhdFAAAAEwcDD85ptvAgIC
7OzsvLy8aCQxWpgAGAsDlebHH3/817/+5enpaWFh8dFHHxktTH0YchYvX768
R48e5APOzs5BQUH79u0zZqRG4dtvv01NTb1w4cLVq1cTEhLq1au3evVqoYMC
AAiAIYPhyZMnbWxs3n//fRpM4uPj7e3t165da8xgAeAfA5WGrJ5Oga1btzZv
3lyKSjNkyJCYmJiMjIysrKy5c+daW1v//PPPxgzW6IysRugoAAACYMhgOH78
+J49e6qezpkzx8vLyxhBAmA8+PrgiTq/FJVGg44dO7733nu8Rmc6FArFiRMn
mjRp8tlnnwkdCwBAAAwZDD09PZcuXap6+sMPP1hYWOTk5BglUACMA5RGRVVV
Fb2LsLAwvgM0OgUFBfXr17e1tbW2tv7www+FDgcAYAoKix/Fpuxdn5ymKguj
YmkApEeNZaZQ48Kikpr2RgPI+vXrVU/Pnz9PSpOenm6StwIAR46kn63pFNB5
Fhw8dprNbk2mNPfu56vHX+tZHL99X9njcjZ7pvidnZ2l+L8SkrHs7Ozffvtt
7dq1Li4uGzZsEDoiAIAp+O6nkzTisSzUWM+uoDRAihQ/Kv1ozSaWp8B/VycU
1Gz16phylmbH/35kfxb/cjqTzT6/+OILR0fH/fv3Gzt4YxMREdGsWTOhowAA
mILKyqrPE3ayGQmpGTXWsyuND54OHDiAD56AJLh45XeWPnDmwhWW+zSl0jx+
XB65NplN/HFf/Y/NN5qjoqLq1asnA58hli1b5uzsLHQUAAATcS/v4QcrNugf
CakBNdO/n/Hjx7/44ouqp3PnzsXlwUAq7NxX+0RHyp4D7Hdo4mtprufceT8y
Rn/8S1cn6PngWEVYWFiDBg0OHz5sgrCNweLFi0nGrl69eunSpZiYGCcnp5CQ
EKGDAgCYjp9PntM/GFKDWneSnp5uY2OzcOHCixcvJiQkODg44EvcQCo8Lq9Y
vi5FzykQHp30qOxxrfspLi7OqKZFixbBwcG0kJ2dbYL4iX2HT+g/i3+7eLXW
nYSGhtKZm5qaeuf/KSgoMEHwPPLOO+/4+vrSu3BxcenSpUt0dHRlZaXQQQEA
TEeVQhGbsremkZBWVbG7/ebevXs7depkZ2fn6emJW+0BaXFD70TH5eusPkI9
dOiQxV/p3bu3kQN/xpPKytUbd9QU/9Y0VlNMFlpMnjzZyIEDAADPFBQWL/k0
XnskpEpaJXR0AJiCb3/UPdGxZ/9RoUNjxZ3cBx9E6fgQOeKLpFIWU0zmQPGj
0piUtKyrf+BXEgCQNxmZ2dqDIVUKHRcAJuJJZeVn8ZoTHStjv6qoeCJ0aGz5
6cRv2mdx9vWbQsclFv536DgdkDUJu6A0AMie5K9/UB8Jt+zejxMfmBV3/zrR
sWB5TM6dXKGDqgNVCsX65LS/TDH9IMYppsrKyk2bNg0cONDV1dXOzs7Dw2Pw
4MGxsbFGve6l+FHpopVxdEwuXvndeK8CABAJj0rLwqM3///1kJvpqdARAWBq
fkr/c6Ljh6OnhA6nzuQXFi9etVHMU0yFhYV9+/ZlrtVp2bJlt27d3NzcLC0t
6Wl+fr7xXhdTNACYG5ev5TCDYdbVP4SOBQABUE10fLEptbJK372YRMupc1nM
FNPNO3lCx6KDl19+mezF3d394MGDqsq7d++Gh4eXlLC6kyEHMEUDgHmy+/uf
d39/ROgoABCM/MLi8OjNeQ8l9v1lFQqFYvOu7w+Icorp119/JZ+xsbE5d672
W0PUxOcJO8Ojk+pUwlY+nblauDy2rhuioKBIuixbs5mK4GGgoAhYPpL4KWD6
s5g0g42NLFq0iJRmxIgRnH1G+f8/x4mCgoKCgoKCwnsJZ/d736NGjSKl+eST
TwxRmrrO0mCKBgUFBQUFBYVlYTlLM2DAAFIaU95aHFfRAAAAAIB3TD9Lgyka
FBQUFBQUFPaF5SxNWFgYrqVBQUFBQUFBEW0JZ3ctzenTp0lpbG1tMzMzOSsN
+1kaTNGgoKCgoKCg1KmwnKUhxo4dS1bj6el5+PBhVeXdu3cjIiL4vS8NrqIB
AAAAgPEoLCzs06cPc/dgNze3bt26ubu7G+PuwbhdMAAAAACMSmVlZVxcHIlN
o0aN7OzsPD09hwwZQjU8/sbT4/IK5ochMEUDAAAAgDrxfze69ZI=
               "], {{0, 222.}, {753., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {753., 222.}, 
             PlotRange -> {{0, 753.}, {0, 222.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             TagBox[
              RasterBox[CompressedData["
1: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
Ko1Nu3DThGQIUpylqbV02VUZuL3MZ942uyaetBC447HYZmlEOJBKHZ2zNKqr
aNhP0ei/n95HH33E1Pv6+mpva4azNO3ataOjER0dra4ft2/fZj6kCwoK0pYT
bkrDkjp9BFxr2fbCm7TPyrLyipJSpuQcOM1mQ3zjSZ0nT6ocu8Ub71qa4TO/
5zFac/vG04+s7+q8bL3mZKwIkdy1NGwKc/saFSznakx2LY04B1Kpo30tzebN
m62rJ2+bNm1KomK4zzANPD09mbXaV+aY4bU0s2bNsqj+8YisrCymJj09vU2b
NsxX5oODg7U3kZDScC5QGg16TtxjPKVZuvY0j6Gam9IoFIoO/95Z60G2Ddx4
J++RaUIyBFkqDbciHqURZCCVOtpKExERwbjH3//+d158hmHAgAFMg8WLF0Np
cnJyGjdubFF9V70OHTr4+fnR8tChQwcPHkwLMTEx2ptAafQjS6WZ9fEx4ynN
N7zeBc7clIbYdyTHunOc/oMcFv2ryeIxBCgNlEYeaCvNtGnTGPd49dVX+fIZ
Yvr06UybSZMmQWmU1bemGTZsWINqunfvvn79evp/n7e3Nx2iEydOaLeH0uhH
lkpzNOOukZTGtVcSv7eAM0OlITanZdvUbDXB4Uf5/dUJ4wGlgdLIA22lGTdu
HOMec+fO5ctntlb/sALTbMSIEVAanRQXF1taWlpZWT16pGOmGkqjHzH8EjTv
+ZQSYsDLu9goSl2VZv6n6TyHKoLjb3qlIY6duTsydL9VwF/Epvv4r7fsvSIV
n1FCaaA0ckFbaT7++OPXX3/91Vdf/fzzz/UrDbVU/ZaTfp8hvvzyy0mTJtGe
ly1bBqXRyfHjx+lItmnTRqN+ezVjxoyhtczyyZMn+X1pGZyJYkipxsinsTsu
8a40NoFx13KK+I1TDMdfEKVh+ONO8Yadlxr2TKTD26SXqWXAcKA0UBp5wOaX
uPUwY8YMsppafUY/UBqG2NhYkpaxY8dq1FtoMXnyZH5fWgZnohhSqjHyaWVl
VY9XvuZXaRZHn+I9TjEcfwGVhsGtfzIdXnoUMAZuQGmgNPLAQKUhVq1aZeAe
oDQMISEhpCvh4eGmf2n2Z+KOnsH30i8VXLmVl5Gd2itUPGeiGFKqkfLpxWv5
9l1r/zY3S6XpNHpXeUUl70GK4fhDaTgjG6XxmbfddchbtODUeaCjV0dH74AG
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
jxMUFKRzVLx582aTJk2GDBnCchQVZJZm2wtv0ktXlpVXlJQyJefAaWPLOWZp
AO80btXHqLM0DfwmC/0Wn4FZGl7OYt5naZjb16hgOVcjklkaQRIBZ8Q8SzN8
+HCmA0yfPt1wn2EYNGgQs3bmzJnam3OYpZk1axbtzcPDIysri9GP9PT0Nm3a
MJc0BwcHa/tJcXExoyhkPiyVhiV1/QjVSAVf4gai4u59437jadt314R+i8+Q
+rU0IjmL63otjZGKya6lEWEi4IyYr6Xx9/dn9GPdunW8+Awxf/58psGwYcO0
13K4liYnJ6dx48YW1XfV69Chg5+fn0X1N80HDx5MCzExMRrtS0tL+/Tp89xz
z2VmZvJ08P5EBj0ZSgOMgVv/ZOMpzdUcE91Ls1agNFAapSwSAWdEqzTJycnM
h0SNGjXiy2eI9evXM23atWvHi9Ioq29NQ4LUoJru3bvTSygUCuZmxSdOnFBv
WVFR8dJLL1EzjXq+kEFPhtIAY/Daoh+NpDS+L32FuwerA6WB0kBptJVG5R4B
AQF8+QyDi4tLTabE1y9xFxcXW1paWllZPXr0SFVZVVU1ZswYe3v7AwcO8PIq
2sigJ4vhZ3yhNPLjxFnNC2D4Upqo+LNCv7k/ka7SiOoshtIIngg4I1qlWbdu
XevWrVu1avXSSy/p95mUlBTmpwfY+AzRuXNnb29vnabEl9IcP36cgmnTpo16
5VtvvUWV77///i9qaNysxkBk0JPFMB5CaeSHQqHoOm4370pj3zX+fr6IeguU
BkqjlEUi4IxolaZOzJgxw9LSko3P6IcvpYmNjSV7GTt2rHql6l5/6sTHx/Py
igwy6MliGA+hNLKE/T2E2SuNeO4bzAClgdIoZZEIOCMPpSHefvttA32GR6UJ
CQkhXQkPD+dlb+xh35N39Ay+l36p4MqtvIzs1F6h4unJYhgPoTRyZepiVr/H
zVJp/EfueFxeKfR7+gtQGtMoTeD2Mue/jbBv2dqxVSengAH+67L1NPaZt911
yFu04NR5oKNXR0fvgAbt/97u09NiUBrRJgLOyEZpeIEvpenbty8pzd69e3nZ
G3vY9+TbR84eCVkTX/2Lq9SZxdOTxTAeQmnkSkFRudfgrbUqDXPLGu37z6gX
uy4bqYHQb0gTKI3JlMYv7JsuuxW07DF9TYMOvfU0fq7XBL8l39JCwJb8Z5Lz
/i5yITEojWgTAWegNOrwpTRCwbInp/hPKS96lOA2hnlaeu/hjh7BOltueX5S
ya37ZQ+KHpy7ln85p/JxRVbSfigNkC5Z1wua9k5if6mwzmLdOW7XD9eFfis6
gNKYRmnUS9sVJ5lb55Gx2DZ2s3Z6ztE7wMG9raWNXeMBr3fZWUFr6VF9E6+Q
eGojuNKIORFwBkqjjpkozZ5Bcwuyb6qe5p6+vG/0kpoan41OPRWZQgvf/efD
O8fOG1vOxTAeQmnkzcVr+e4DUjj7jF2XjakHrgv9JnQDpTG90jzXZ2LTf4Yw
y83+PbflhA9pwW/Jtw38e9FC6/9+16jXeLXGk2wbu1Np/9lZwZVGzImAM1Aa
daA02uXm4TP7J0bQwq8RWzJj0qA0QAbkPigdO+cAB58JHJP6W9YDocOvESiN
iZWm5cTw+m16BG57xDx16jzQd1EaU990eCgtNBk6w2feNo2tWoUmNOw6VFpK
Y+JEwBkojTpmojTs5xufrs0r+KrzNFq4vveXn2Z9DqUBsmH7d9dasbi0hinO
L276aP3piooqoaPWB5TGlErj9lpUPd+uqitkqNg4N+m48SYtuPQcRd7SZbfC
rrlP563F2tta2jkEbL4vlQ+eTJ8IOAOlUcdMlIbKnaPn/7wq7MwVpjJ72+ED
UyLVm1EfLs3NZ5YLr97+euAcKA2QE5WVVXt//H3ojG9tAuNqkpkuY1Njtl8s
eVQhdLC1A6UxmdK4T11Zz7dLwJaHqhqSGRvnpsyyfQu/dqtOtV1+3PmFYUwN
mU/HjbeYZd8FqbaN3ZiriwVUGjEnAs5AadQxH6XZGTTr3snq7+6duZLa512m
Mj/rjz2D56k32z8x4ubBZz+6mpeRzeaSMCgNkCJlj5+kn8td+9WFBatPvhd1
/P3V6SsSzh48cSu/8LHQodUBKI1plKZjXM7TH9Ru7uPoHUClXuvuT0VlUVrD
wMFMg3p+LzQe8HqzUfO9gmOZmg6xN+q17ubg1eHp97479W/3aYbgHzyJORFw
BkqjjvkojXZJ9p9y6/AZzptDaQAQHCiNaZSGZXHwaN8p8R7nzQW51Z5IEgFn
oDTqmLPS8FigNAAIApRGVEpjYMHdgzkApVEHSiN4TxbDeAilARIFSgOlUcoi
EXAGSqMOlEbwniyG8RBKAyQKlAZKo5RFIuAMlEYdKI3gPVkM4yGUBkgUKA2U
RimLRMAZKI06UlcahUJBvUjwQmEY8hZoLBK4GBA/AAIiCqURwyls2FlMm5JO
CF44vwMZJALOiERp6L0/4UpEdNKCyPX0qLHMAeQyAIB0EYPSACAgIlEaQ8BZ
DAAASgyGwOyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADI
AwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyG
wMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB
0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAA
gDzAYAjMHCgNAADIAwyGwMyB0gAAgDzAYAjMHCgNAADIAwyGwMyB0gAAgDzA
YAjMHCiN1Nm0aVOXLl1cXFwcHBzatm27cuVKhUIhdFAAAAEwcDD85ptvAgIC
7OzsvLy8aCQxWpgAGAsDlebHH3/817/+5enpaWFh8dFHHxktTH0YchYvX768
R48e5APOzs5BQUH79u0zZqRG4dtvv01NTb1w4cLVq1cTEhLq1au3evVqoYMC
AAiAIYPhyZMnbWxs3n//fRpM4uPj7e3t165da8xgAeAfA5WGrJ5Oga1btzZv
3lyKSjNkyJCYmJiMjIysrKy5c+daW1v//PPPxgzW6IysRugoAAACYMhgOH78
+J49e6qezpkzx8vLyxhBAmA8+PrgiTq/FJVGg44dO7733nu8Rmc6FArFiRMn
mjRp8tlnnwkdCwBAAAwZDD09PZcuXap6+sMPP1hYWOTk5BglUACMA5RGRVVV
Fb2LsLAwvgM0OgUFBfXr17e1tbW2tv7www+FDgcAYAoKix/Fpuxdn5ymKguj
YmkApEeNZaZQ48Kikpr2RgPI+vXrVU/Pnz9PSpOenm6StwIAR46kn63pFNB5
Fhw8dprNbk2mNPfu56vHX+tZHL99X9njcjZ7pvidnZ2l+L8SkrHs7Ozffvtt
7dq1Li4uGzZsEDoiAIAp+O6nkzTisSzUWM+uoDRAihQ/Kv1ozSaWp8B/VycU
1Gz16phylmbH/35kfxb/cjqTzT6/+OILR0fH/fv3Gzt4YxMREdGsWTOhowAA
mILKyqrPE3ayGQmpGTXWsyuND54OHDiAD56AJLh45XeWPnDmwhWW+zSl0jx+
XB65NplN/HFf/Y/NN5qjoqLq1asnA58hli1b5uzsLHQUAAATcS/v4QcrNugf
CakBNdO/n/Hjx7/44ouqp3PnzsXlwUAq7NxX+0RHyp4D7Hdo4mtprufceT8y
Rn/8S1cn6PngWEVYWFiDBg0OHz5sgrCNweLFi0nGrl69eunSpZiYGCcnp5CQ
EKGDAgCYjp9PntM/GFKDWneSnp5uY2OzcOHCixcvJiQkODg44EvcQCo8Lq9Y
vi5FzykQHp30qOxxrfspLi7OqKZFixbBwcG0kJ2dbYL4iX2HT+g/i3+7eLXW
nYSGhtKZm5qaeuf/KSgoMEHwPPLOO+/4+vrSu3BxcenSpUt0dHRlZaXQQQEA
TEeVQhGbsremkZBWVbG7/ebevXs7depkZ2fn6emJW+0BaXFD70TH5eusPkI9
dOiQxV/p3bu3kQN/xpPKytUbd9QU/9Y0VlNMFlpMnjzZyIEDAADPFBQWL/k0
XnskpEpaJXR0AJiCb3/UPdGxZ/9RoUNjxZ3cBx9E6fgQOeKLpFIWU0zmQPGj
0piUtKyrf+BXEgCQNxmZ2dqDIVUKHRcAJuJJZeVn8ZoTHStjv6qoeCJ0aGz5
6cRv2mdx9vWbQsclFv536DgdkDUJu6A0AMie5K9/UB8Jt+zejxMfmBV3/zrR
sWB5TM6dXKGDqgNVCsX65LS/TDH9IMYppsrKyk2bNg0cONDV1dXOzs7Dw2Pw
4MGxsbFGve6l+FHpopVxdEwuXvndeK8CABAJj0rLwqM3///1kJvpqdARAWBq
fkr/c6Ljh6OnhA6nzuQXFi9etVHMU0yFhYV9+/ZlrtVp2bJlt27d3NzcLC0t
6Wl+fr7xXhdTNACYG5ev5TCDYdbVP4SOBQABUE10fLEptbJK372YRMupc1nM
FNPNO3lCx6KDl19+mezF3d394MGDqsq7d++Gh4eXlLC6kyEHMEUDgHmy+/uf
d39/ROgoABCM/MLi8OjNeQ8l9v1lFQqFYvOu7w+Icorp119/JZ+xsbE5d672
W0PUxOcJO8Ojk+pUwlY+nblauDy2rhuioKBIuixbs5mK4GGgoAhYPpL4KWD6
s5g0g42NLFq0iJRmxIgRnH1G+f8/x4mCgoKCgoKCwnsJZ/d736NGjSKl+eST
TwxRmrrO0mCKBgUFBQUFBYVlYTlLM2DAAFIaU95aHFfRAAAAAIB3TD9Lgyka
FBQUFBQUFPaF5SxNWFgYrqVBQUFBQUFBEW0JZ3ctzenTp0lpbG1tMzMzOSsN
+1kaTNGgoKCgoKCg1KmwnKUhxo4dS1bj6el5+PBhVeXdu3cjIiL4vS8NrqIB
AAAAgPEoLCzs06cPc/dgNze3bt26ubu7G+PuwbhdMAAAAACMSmVlZVxcHIlN
o0aN7OzsPD09hwwZQjU8/sbT4/IK5ochMEUDAAAAgDrxfze69ZI=
               "], {{0, 222.}, {753., 0}}, {0, 255}, ColorFunction -> 
               RGBColor], 
              BoxForm`ImageTag[
              "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
              False], DefaultBaseStyle -> "ImageGraphics", 
             ImageSizeRaw -> {753., 222.}, 
             PlotRange -> {{0, 753.}, {0, 222.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Qubits: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Depth: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["9", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Ops: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"u2\"", "\[Rule]", "6"}], ",", 
                    RowBox[{"\"h\"", "\[Rule]", "4"}], ",", 
                    RowBox[{"\"measure\"", "\[Rule]", "3"}], ",", 
                    RowBox[{"\"cx\"", "\[Rule]", "2"}], ",", 
                    RowBox[{"\"u1\"", "\[Rule]", "2"}]}], 
                    "\[RightAssociation]"}], "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QiskitCircuit[
   ByteArray[CompressedData["
1:eJy1VtFrHEUY30tzyV2vpqQUo9VoQgm5hebMJSLJQ7AxhRhOV5taUOEcZucm
ndW53bvd2TZBT+xDIg0jFjpFEEUfrP+CIqLU5yKI4GN9kSI+CQoiPug3e7u5
zSWpB9Z92fu+nft93/eb3/x2x21v1c4YhvF33jDe6r/+O9z0JUebTvCaI0rE
8UkI92aIXRHW41DJobPtxFKcuKbMy6qlivIwsnFAkYvrVMlCvH6q/MS0kv1R
kg3II8gOHV6jPsINRzFDPoSeCwX1Y7BzxGvQFRcSa5jQNrTVUnIwqc4OBVvK
lkeR10CBwL5AwqnTQFnyOCKeK3yPozXuXUKBRgpUVcls06cXol+P7D8ZPHYC
KKnk0Xi01SQTNVCUmaaqHNrO3bppvnd78YsP5UjXuuLsqbHJ5qQJRYrsuMye
De2EGEszM4Act0bXVcWQWcRwwNR27rHPP3l1+JcbI5DxaQOKj0f/Kh4AfWps
2lQyj3aaZSMhMMEejmuwRysZNrady5zPf2vOf/U9G/9XwLKp2Mm9MH0a5uUv
X/rst8xQqQeYmQ4MFcrGMksSwse6CCccB4FDMO9QPryU5PaQTiLSbxgN8sGJ
H8blg3tWRj2QmPZpmV3iu2iHWQw9y+NXf/508Przx2CWk9GS4oFIEcswzWxE
ylwXt+/8MXf1u+rHvCeg8v5AEbt3Xrny5+3CnSs9Ac10gNr8DqGm3hGtKYeA
xjXwKBylI0854hmPYOF4bgA0VIwqqKRibCm8pS4rNsFWKpkolUlSJqT6olRf
nAoBnvBu+HlYp9FmO2gLMdpsB20xRptNoWVRDQus5IlYCggTQjn1saClHUsp
xMf/jF56TRWr0UQTzKTVqPgCW6RWZVioVdDFXZGOxUgrbiD8kGgqAFAWu4TI
HdvH/kYJLMStYb+GLgBKUApnlBw4P7MMQcfWCqhG1xzXibAsGKhtcH16cQG5
Yb29HYGqZOI44i/Qp30QNbCP6/owFJeN+Fo+nR//64UzUw9QMAaObcoB9rC2
r1pSJI9qoY93Koaunq2vJlRos9FNZb6t6XZZs90iExYL2UV2CWS6Dprf2L8a
e91ib1isZbE3E6yJHSyZXwtdIjyPB2C30LVwMNfUTfZGHQOjfTomblPvE3vX
bCkLBGuuqlQdJntFXIe9WHpxF+T7KUjQx9YO6K4K/5mVe8mwuZlqMhV8pOW9
te+zntVa1mot71Jr1Chos6zSvS4/+evN1bmpgOK7auBe6ol9ncb6Zlc3p42D
uzH/H+6lvL+L1DrFQejDQR58Nv6VqOzHtMo2FZvfVDHKT3pAtpCKoQRbbMcU
Ti12icPByvXL7z4Edq53ru3H8EXkcU5JEoGp4JAL8Fj9ypI5/V0kHP2oP87p
bsBBON7wQgE+UEAXsR+ALzcgbOkCUUxwQ+j2WypZweElwHWcS7lIf8dEoNE6
FTgy5hYQVfoHbQ7T2Q==
    "]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940949642275881*^9},
 CellLabel->"Out[138]=",
 CellID->23789743,ExpressionUUID->"6682728a-9c9f-2c4f-b777-4cb276a71337"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check the qiskit circuit Diagram:", "Text",
 CellChangeTimes->{{3.940949844372484*^9, 3.940949875711754*^9}},
 CellID->804678628,ExpressionUUID->"6c2bf80b-af8a-ce4a-bf30-46447032cc4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qiskit", "[", "\"\<Diagram\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940949635839214*^9, 3.940949638655096*^9}, {
  3.940949772489441*^9, 3.940949777826109*^9}, {3.940949840174391*^9, 
  3.940949841438933*^9}},
 CellLabel->"In[140]:=",
 CellID->575600384,ExpressionUUID->"d0235c4f-c964-774a-bc06-f6dd1932ce55"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
q9P+KL965s2Ju5wR+QeReZQWAKhp6bLykZM+7trrsdSrvw2l5e4PnHz5i6++
M6+qqirqY5FXTNSBxEQdYEzUQEHJ9Rrw3Xff3aVLl2DLtPVae+21t99++wMP
PPD4448/66yzBg0adMstt9x33331dm4T/zLxv7r11lsTLxswYEDiLQcddFBi
n61btw5hq8m/Fjj+HeCJasAAAAAAUEgqKyunTZt222239evXb++99956663b
tm1bXFzcunXrTTfdtFOnTvvuu+8555wzfPjwGTMa/JUoZEJpIZBkWFoo3a5P
IJ/mikU/vHDaLZF/FhlGaQGAah9//v35t7y+wT4lmReAa2XX4x697+GPflxW
HvURyRMm6kBiog4wJmqgoORuDXjChAn9+vXL3pcAt2zZcvvtt+/Zs+fvf//7
O+64o9Gv2E1FYpGhQ4cmFjz00EO7dOmS1c337du3bmU3JzrAE9WAAQAAAKAA
VFZWPvvssyeccELbtm1Tf1C53XbbXXnlld98802SlSdNmjSyYbNm+VUgtSkt
BJJslxYqlq9cPGt24sNa8O6nieNUllc09MrK1atfPm9Y5B9HJlFaAOCtDxYc
cOZTgbd/a2X9vcdefNsbPyxdFfVxyXkm6kBiog4wJmqgoORoDbikpKR79+7p
1VmT+9nPfrb//vtfeumliUuEcIpBgwYdeOCBTXrKnbp99tln7Nixay6XKx3g
iWrAAAAAAJDXVqxYMXTo0Pbt26f98LN169YXXnjhd999V3fxysrKddddN8l7
p06dGv6Ribm8KS08tMeAhs64dPaCbF993rQPG7r6U0df0+jb6y0tLJv33cyy
F6YMHDrpV+fUev24Dic9c/x1nz8+td6/8riyvOKpo66O/BNJO0oLAIVs5arV
Vw37Z/Pd7s92B3hN2h888YU35kR9bnKbiTqQmKgDjIkaKCi5WAMePnz4tttu
m/bz4Xq1a9fu6KOPvvHGGwP51t+mSlz0pptuOuaYY7bYYotgz9WhQ4d77713
Yk51gCeqAQMAAABAnqqsrPzf//3fdu3aBfL8s3379q+//nqtS3z00UdJ3tKs
WbOlS5dGcnbiLG9KCw/u1r+hMy6f/122r/7tv2Y2dPXJh13Z6NtrlhZWryr/
/PGpzxw3ePTmxzX6xsf3u+j7T76ue9EfvppXss2JkX8o6UVpAaBgvfXBgp2O
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
5H1pIZGXzr1r1ZKl2buHq1eseuPq+0M4SNkOp3330Vd1NxDO35scWpQWAPLJ
4h9WRd7aDTzHX9LkL0clv5moM2eiDjYmaqCgRFgDvvfee1u0aNGkburOO+9c
Wloa1YYjlEkH+IgjjkjctK5duzbpXc2bN7/77rujOq8aMAAAAADkhE8//TT5
k8ZJkyaFsI2tttoqyR7233//zC9RUVFx++23t2nTpkkPWhOaNWt21llnLVq0
KPM9kD2FUFpI5OE9Bn7x5GvZuIFzXnrvsf+5IIQjlG5/6qL36/ly788eeXlM
u16R3+EAo7QAkE9efHNu5K3dwLPtIQ9GfV+JFxN1hkzUgcdEDRSUCGvAPXr0
aNLD0k033XTUqFFR7TZCGXaAJ0yYkFjkgQceaNeuXZPe271796iOrAYMAAAA
ADnhpptuSvKMsU2bNitWrAhhGxtvvHGSbVxyySUZrj937txf//rXTXq+WsuW
W245bdq0QA5LNhRIaaE6kw+5/Mu/vVFZXpH5fauqrJwz5d3nTrwhnJ2X/qLv
gvc+rbuNL558bcwWedVYGK20AJBfbhs9PfLWbjby/ZKVUd9aYsREnR4TdfZi
ogYKSlQ14Ntvv72oqCj1Z6SJF1933XWRbDVagXSAq910003NmjVr0j2/9dZb
Izm1GjAAAAAA5IRddtklyTPGPn36hLONddddN8k2ysrKMln8k08+aep3LNSr
VatWjz/+eFBHjlbihrTJLztusEXkv6QOORN3PfPNwWO/eW1GGu2FqsrKBe/M
+teQiZP2Pje0DY/v3Kfe3+N/9fS0MVseH/n9DDyJn8mo/1gAEJjiDudEXtnN
Rlpv0jXqW0uMmKhN1HGLiRooKDvvvHMkPc8999yzSQ9IDz300Ej2Ga0AO8DV
jjzyyCYt0rVr10gOnvixjPpPBgAAAADQoHbt2v3000+zZ89O/oBx4sSJTf1l
aBpWrVqVfBsff/xx2ot//vnnW2yxRZMeqybRsmXLZ555JsCzRyXxMxDUPYmJ
DsVtI/8ldVQZ3+mUp4/545vXjplZ9sKcKe9+P/PfyxcsLv9xeWV5RWXF6vKl
y1csXLz40zlzp74/66Epb99c+tyJN5TtcFr4m/z27Zl1fxS/fv6tsVv1jvwe
ZiOJn8mo/1gAEJztboy8spuVbHxw1HeWGDFRm6jjFhM1UFA6duwYfsnz+uuv
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
phIvJmqJW0zUQEEJoQa80047NfpItlqnTp2yvZmoxLkDXK1Lly4p7mf77bfP
9mbUgAEAAAAg5u65557kDxIvuOCCbFy3pKQklceYp5xyShqLX3/99fWuNn78
+Mx3XlVVVVxcXHfxAw88MPPFyZDSgsQtSgsAeWblqtUb7zs+8vpuULnotjei
vqPEjola4hYTNVBQsl0DLisrW3vttVN5KpvQu3fvrG4mKvHvACeccsopKW6p
RYsWpaWlWd2MGjAAAAAAxNyLL76Y/EFiu3btVq9eHexF33///RSftQ4dOjSN
9c8///x6V3v66acD2f8mm2xSd/GuXbsGsjiZUFqQuEVpASD/XH7Xm5HXd4PK
zC8XR307iR0TtcQtJmqgoGS7BnzHHXek8ki22m233ZbVzUQiJzrACXfeeWfq
G7v11luzuhk1YAAAAACIuUWLFhUVFSV/kBhUe7bawoULO3TokOIzzClTpqRx
iT59+tS72tSpUwM5QseOHesu3r59+0AWJxNKCxK3KC0A5J8vZv9QtEv0Dd7M
89sBQQ755A0TtcQtJmqgoGS7Bvz73/8+xaeyP//5z0OrvIYmVzrA1dq1a5fi
3gYOHJjVnagBAwAAAED87bTTTskfJB566KFBXWvJkiW/+tWvUnyAWVRUlHh9
Glc5+uij613wvffeC+QUu+22W93FN9xww0AWJxNKCxK3KC0A5KXDzn028hJv
5nn8H19GfSOJIxO1xC0maqCgZLsGfMghh6T4YLZHjx5Z3Un4cqsDnHDQQQel
uL3f/va3Wd2JGjAAAAAAxN8FF1zQ6LPERx99NPML/fDDD/vss0/qz1c7deqU
3oUaeqD90UcfZX6KhL322qvu4uutt14gi5MJpQWJW5QWAPLSUy9/HXmJN8Ns
ddCEiorKqG8kcWSilrjFRA0UlGzXgLt06ZLig9l+/fpldSchy7kOcMJZZ52V
4g47d+6c1Z2oAQMAAABA/L3yyiuNPkts167d999/n8lVPvvss0a/driW448/
Pr1rHXjggfUuOGtWML89rLfM3LJly0AWJxNKCxK3KC0A5KXKyqrfnPpk5FXe
TDL68U+ivovElIla4hYTNVBQsloDLisra926dYoPZm+44Ybs7SRkudgBTrjl
lltS3GTLli1LS0uztxM1YAAAAACIv6qqqvbt2zf6OHHfffddvnx5epd47LHH
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
adc88PYtZW8OHvvyecOe/N2gMVseH/nGpNEoLQDQKDVgYsVELXGLiRooKGrA
mWioCawDnCE1YAAAAACgltNOOy1JDfiCCy4I8FpVVVVdu3at90LHHnts6l87
PGnSpHoXWW+99ebNmxfghslQnpUWHtz9rPf//PjSufU/aV/1w7JPJ7305O8G
Rb5PSRKlBQAapQZMrJioJW4xUQMFRQ04Q3WbwDrAmVMDBgAAAABq2WWXXZLU
gEtKSoK93NSpU4uKiuq91llnnbV69epGV3jqqadatWpV7wpDhgwJdrdkKH9K
C5sf99afSiuWr0zl1LMemjK+c5/o9yz1RWkBgEapARMrJmqJW0zUQEFRA85c
zSawDnAg1IABAAAAgJpWrlxZXFycpAY8Y8aMwC/av3//hi7Xo0ePmTNnNvTG
5cuXX3PNNc2aNav3vbvuumt5eXnguyUT+VFaKNnmxK+fe6tJB1/86ZyH9zw7
8p1L3SgtANAoNWBixUQtcYuJGigoasCBqG4C6wAHRQ0YAAAAAKjpzTffTNIB
XmeddVL5et6mWr58+U477dTQRVu0aHHCCSdMmjTpyy+/XLVqVWVl5cKFC6dM
mXL55ZdvvvnmDb2rTZs2SfrDRCUPSgtj2vX699/frnu01avKF73/+ZyX3vv2
7ZnlPy6v+4Ifvpo3cZczIt+/1IrSAgCNUgMmVkzUke9fasVEDRQUNeAA6QAH
RQ0YAAAAAKhpxIgRSWrA3bp1y9J1P/300ySd3pqKiooafU2LFi0mT56cpa2S
iTwoLbx716Rah1r5/Y/Trnmg5l9SPGbL4/9xxpDFs2bXeuU3r84Y065X5EeQ
mlFaAKBRasDEionaRB23mKiBgqIGTAypAQMAAAAANfXv3z9Jvfacc87J3qU/
/PDDFJvAybVs2fKRRx7J3j7JRK6XFh7f/6LKiv/6Quwfvpz38F71/93E4zqc
NPsf/6p1B16/fGTkp5CaUVoAoFFqwMSKidpEHbeYqIGCogZMDKkBAwAAAAA1
/fKXv0zSsB01alRWrz5nzpxu3bpl0gFu167d66+/ntVNkolcLy3Meem9mscp
X7r80e7nJXl9SYcTv/voq5pvWbHoh3EdT478ILImSgsANEoNmFgxUZuo4xYT
NVBQ1ICJITVgAAAAAGCN8vLyVq1aJSnZ/utftb+IKRt7uOWWW9Zbb72mFoCL
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
UANOEjXgtFEDzsUxU5I4ZkoYx0xA1TRoDfjkk09efvnlu7H+zLb00ktvvfXW
RxxxxLBhwwq4i1GjRp144ok77rjjCiuskPxeevfufcghh3zwecWN0gGeoAYM
VMmsWbM63mDXWWedbr/b9+/f//jjj3/77SXsRLS1tWV/Cv19991X/C0TVtPs
z1yxzZBa9zh96hv1vvqrDz1Z6+o37X1yp9++xP2ZGa++/XTLnXcfOXTip763
yNePXe+bt3z9tOeuuW+J/7pTW+vcm/b6WemvSLdjfyYv1aNa8071qKyoHkX2
i2GPlt5oTZKq1YB7bzn8xVem1/vXg24zi83iaDGL6YnnXnxvp8Pq8gnAtbLh
V66495Gs/9sd6B41YBpF89SAL/1nraXpUqsMqPfVlx342VpX3+iXd3f9cWo9
SAY1YBwzJYljpoRxzARUTSPWgA877LA+ffp0Y/FZS//+/Xfaaacf/OAHo0eP
LuWOWlpaTjvttD333HOVVVZJeF8ddtxxx7FjxzZQB3iCGjBQDW1tbRdffPGa
a66Z5N1+nXXWeeCBBxa5xFNPPZXxLb17954+XYWA/9U0+zO/3+q7te5x5mtv
1/vqrz/6dK2r3/CVn3b67Qvvz8yb0/rcNffdst+pI9fYr9NvvGanE975xwuL
X/S9f706Zt0DS39Ruhf7M3mpHtUaeapHZUX1KKy5c9s+Wv+P9SsmVasBd+Tk
3zxc798Qus0sNoujxSyme9ra5l804clltx1V/JjrtcVlx53zgI8FhrTUgGkU
TVMD3nzE1FpL077/58P1vvoyG36y1tU/fvb9XX+cJT7CUqt8dMVt91zjwFM/
9rPrl1p50eMtNWAcMyWJY6aEccwEVE1j1YAvv/zybtdZl2jttdc+/PDDR44c
Wfad/Y+WlpaTTjppyy23THiPG2644fbbb9+97y2+AzxBDRiogMmTJ2+33XYJ
3+o79O3bt2OILHyV8ePHZ3z9xhtvXNbtE1PT7M+0DDyk1j3OmTa93ld/64nn
a1392l1P6vTbF+zPtE6f+beLr52w5XdyXXrs+gctcXfoz6eOLv1F6V7sz+Sl
elRr5KkelRXVo7CuvuP50rusqVLBGvBHdho3p3UJH89CBGaxWRwtZjHdUPyH
AC8eHwsMaakB0yiapga85dg3ay1N+yy7Yr2v3n/dLWpdfeDQR7r+OAu+ZenV
1v4/n9przYNO3+CUm7YY/drCX7D06ov+M5dqwDhmShLHTAnjmAmomgaqAV9y
ySUDBw6stXDNpU+fPp/97GdPPfXU8ePHl31bS3beeed95StfWW655ZLcb/eU
0gGeoAYMNLtLL720X79+9XjfXmqppW644YYPLvSjH/0o44u/+c1vlvgkEFDT
7M+MWe/AWvc4v61t1Jr71/Xq06e+UevqV2///U6/fezHDnryshvHb3po967e
sumhs96ctsh1333+ldJflO7F/kxeqke1Rp7qUVlRPQprl+/eVHqXNVUqWAPu
yISbn633LwndYxabxdFiFpPXtXf9s5QPAV48vba47BfDHp0/f37ZTwk0AzVg
GkXT1IAHXTGj5sFMr16fuHpeXa++1CoDal18k9882fXH2eDnt2w59o2ML1AD
ZnGOmZLEMVPCOGYCqqZRasC//vWvV1111Zpr5i7r06fP7rvvPmzYsLJvqEvG
jBkzePDg5Zdfvuc3nldZHeAJasBA82ptbT3yyCPr+u7dv3//KVP+5y+a3Xbb
LeMrOwZruc8G0TTN/kxH5s1urXWbLZt8u66Xnjtzdq1LT9j88ALu/YEfX7r4
pSd9/rjSX5RuxP5MXqpHtUae6lFZUT2K6el/Tiu92JMw1awBf/7QGzq/Z8pg
FpvF0WIWk8uY657us9Xw0sfcwjnunAfa2jSBoafUgGkUTVMD7kivvkvXWp1m
d2sTXHrp/rUuvcWoVxJeSA2YxTlmShLHTAnjmAmomoaoAZ999tk9r8L26tXr
c5/73Pnnn1/23eQ2YsSIffbZp04fHblEJXaAJ6gBA01qzpw5e+65ZwHv4Z//
/OcXfFjKhz/84Ywvu+uuu8p+SoilmfZn3n/htVq3ee0XTqzfdcdtfEit67a1
zh25xn4F3Pu4jQ7uuNYiV7/vxItLf1G6Efszeake1Rp5qkdlRfUoprOHP1Z6
pSdhqlkD7rXFZa+9ObPevyp0g1lsFkeLWUzX/Xb85NIH3BJz6Ml/nDevreyn
BxqbGjCNoplqwItXZD8w8P/+pX7X3fLyt2pd99/69P3EpLa63qMaMI6Zeh7H
TGnjmAmomvg14F/+8pfLLrtszSVr1wwaNOicc84p+1Z6ZNiwYbvttlufPn16
+FR0qtwO8AQ1YKAZzZ49e4899sj1btzxhj9w4MCvfe1rgwcPPvroo7/73e/u
u+++W221Vd++fTv93tGjR7/yyivZX/POO++U/awQSzPtz7z60FO1bvOuw8+t
33Wv2+2Hta47/aU3C7v91x95epGr//WCq0t/UboR+zN5qR7VGnmqR2VF9Sim
zxx8Xel9noSpZg24IyMm/aPevyp0g1lsFkeLWUwXXXLlU6WPtowcfso9C/6H
d6B71IBpFM1UA15248/UWp2u/6OJ9bvuxr/+c63rLrXKR9NeSw2YxTlm6nkc
M6WNYyagaoLXgE8//fT+/Wv+0xVdseqqq/7Hf/xH2feRzHnnnTdw4MCePCHZ
Su8AT1ADBprRAQcc0MX34dVWW+2oo4664447Zs2atcSHmjFjxrXXXrv33nv3
6tWr1oNsvvnmN910U8ZV1l9//YKfAeJrpv2ZKRNqftj1I2e31O+69xxzQa3r
vnzvXwu7/X/e9OAiV//7mFtLf1G6Efszeake1Zp6qkdlRfUooNfenNlri/LL
PAlT2RrwXsfeXu/fFrrBLDaLo8Uspism3Pxs/OXBib96UBMYuk0NmEbRTDXg
VXY+pNbqdM2DTq/fddc9dnSt6y6/+U5pr6UGzOIcM/U8jpnSxjETUDWRa8Bn
nXXWMsvU3MLtil133XXkyJFl30diLS0thx56aL9+/XryzCxRhA7wBDVgoOmc
csopXXkTXmeddS666KJa7d/FPf7445/61KdqPdrOO++cca399tuvrrdMI2qm
/ZmHfj6y1m3+6+Y/1++6T152Y63rPvG76wu7/WevvneRq9ufqQjVo1pTT/Wo
rKgeBTRi0j9Kr/GkTWVrwMt8ctTMWYv++4yUziw2i6PFLKZTdz74Ut9Bw0uf
a13JuSMeL/vZgkalBkyjaKYa8IDD/rPW6nTFbfes33VX+/LRta67+lePS3st
NWAW55ip53HMlDaOmYCqCVsDPvfcc5dbbrlaK9VOrbbaaj/72c/Kvok6Ov/8
89N+LHCQDvAENWCguYwbN67Td+C+ffv+8Ic/nDFjRt4Hnzt37pAhQ7rxnn/m
mWfW42ZpaM20P3Pzvj+vdZuz3pw2co396nTdt/72XK3r3nPMBYXd/isPTF7k
6v61popQPao19VSPyorqUUB7HXt76R2etKlsDbgjN/zxX/X+hSEvs9gsjhaz
mGzT3pszYJfxpU+0LqbvoOGP/d3BAXSHGjCNoplqwBuefmet1WnfFVb9xKS2
Ol23/3pb1rruuseOSnstNWAW55ip53HMlDaOmYCqiVkDvvDCC1dcccVay9RO
7bLLLqNGjSr7JupuwccCL7300t1+oj4QpwM8QQ0YaCKPPvpopx/e/pGPfOT+
++/vyVW++93v5n3bv+WWW1LdI02jmfZnxqx74NyZs2vd6Q1f+nE9Lvr7Qd/N
eHqv2GZIMfc+eq1vtL4/c5Gr33fCRaW/KN2I/Zm8VI9qTT3Vo7KiehTNrNlz
l/nkqNI7PGlT5RrwkF/cV+/fGfIyi83iaDGLyXb4KfeUPs5yZav9r25tbSv7
aYPGowZMo2imGvCgK2b2WvpDtRaoHz/3gXpcdPPhL9a6YofNLv1n2supAbM4
x0w9jGOm5HHMBFRNwBrwqFGj1l577Yxlaoalllrq6KOPLvsOCnXWWWetssoq
3Xu6FgjVAZ6gBgw0i1mzZm2yySbZ78BbbLHF1KlTe3ih2bNn5/18+Ndffz3J
PdJMmml/piMv3f1YrTudfOkN9bjin08bXeuK06ZMLezG7xh81uI/wKQdji39
FelG7M/kpXpUa+qpHpUV1aNobrznhdLbO8lT5Rrwml9oaWubX+9fG3Ixi83i
aDGLyXDzvS+WPsu6kVMveqTsZw4ajxowjaKZasAdWX7LXWotUFf/yvfrccWP
HnJurSv2++jHk19ODZjFOWbqYRwzJY9jJqBqotWAW1patt1221pr1GwrrbTS
L3/5y7LvoAQXXXRRtz88uXfv3meccUbZd/D/UQMGmsMxxxyT/Q686aabpqrj
Pvjggx3v51185x8wYECSi9Jkmmx/5oEfX1rrTme//d7Y9b6Z+Ipr7DftmZdq
XfGvF04q7MZfvvevi1z93edfKf3l6F7sz+SlelRr8KkelRXVo2iOO+eB0qs7
yVPlGnBHnpjiPDIWs9gsjhazmFqmvTdnwC7jSx9k3UjfQcMf+7vjA8hHDZhG
0WQ14LWO+E2tBWqf5Vba6vfT017uE5Pa+q25Ya0rfnifHya/QTVgFueYqUdx
zFSHOGYCqiZaDXi//fartUDN9rGPfeyiiy4q+8cvQUtLyy671PzfCbti8803
HzduXNn38b/UgIEmcNttt/Xq1SvjvXfAgAGvvvpqwit+/etf7+Lb/p577pnw
ujSNJtufGbfxIfNm1ewFPXzmuLSXu+eYCzKe26s/d0wxd33bN88o4GYLi/2Z
vFSPag0+1aOyonoUzecGX196dSd5Kl4DHn3t0/X+tSEXs9gsjhazmFoOP+We
0qdYt7PV/le3traV/RRCI1EDplE0WQ14y8vf6rVUv1pr1DW/9cu0l1v32FG1
rtVh098+lfwG1YBZnGOmnsQxUz3imAmomlA14BNOOCFjgZph++23HzNmTNk/
fgl63gFeYI899ij7Vv6XGjDQ6ObMmbP++utnvOv269fvoYceSnvR22+/vYvv
+aeeemraS9Mcmmx/piPPXnVPrZud896MK7c9KtWFWgYeMv3lmquXVx6YXMz9
jv3YQe+/8NoiV5/99nuXb3hw6a9F92J/Ji/Vo1qDT/WorKgehTJvXtuy244q
vbeTPBWvAR9z1p/q/ZtDLmaxWRwtZjFLdM/Dr5Q+wnqYc0c8XvazCI1EDZhG
0WQ14I6stMOBtdaovfsvv9nvnk11oS3HvrnUymvWutZym2xfj7tTA2Zxjpm6
HcdMdYpjJqBq4tSAzznnnH79av4/cRm++tWvjh8/vuwfvwSpOsALDBkypOwb
+h9qwECjO/fcc7Pfcs8777zkF50/f/56663XlTf86667LvnVaQLNtz8zaYdj
2+bNq3W/rz/y9Jj1Duz5VUZ9dP8Xbn8444m95eunFXO/z0z84+JX/9OPLin9
heh27M/kpXpUa/CpHpUV1aNQnnz2ndIbO/VIxWvAnznYwj4Ws9gsjhazmCXa
57g7Sh9hPcxau46fO9cHAkNXqQHTKJqvBrzJhU/8W+/etZapy2y47aArZvT8
Kp+4eu4KW3+p1lU6bHjabfW4OzVgFueYqXtxzFS/OGYCqiZIDXjEiBGrrbZa
xgK1ln333VcHOIk+ffqceeaZZd/Wf1MDBhra66+/vsIKK2S832633XZtbXU5
qvjOd77TlTf8qVOn1uPqNLrm258ZWWPL4gMv3f3Y5Rt8qyePP3rtbzx79b0Z
l3jl/ieKudMHfnzp4ld/9cEnR66xX+mvQrdjfyYv1aNag0/1qKyoHoUy9vop
pTd26pGK14CX+eSoefOUoAIxi83iaDGLWdyLr0zvs9Xw0kdYz3PNXf8s+7mE
hqEGTKNovhpwR1b+/EEZhzXLb7nLVuPf7cnjD5o4e6XtD8i4xHKbfb5Ot6YG
zOIcM3UjjpnqGsdMQNUEqQHvvPPOGQvUWvbff/+yf/ByJO8AL7DWWmuNHTu2
7JtTAwYa25FHHpnxTtu3b9/JkyfX6dLDhg3r9K1+9dVXr9PVaXRNuT8zfrPD
Zr31bsZdT5sy9fo9fty9B796h2Nff+TpjAefO3P21Z87poDbvGX/U9ta5y5y
9TnTpl+5zZGlvwQ9if2ZvFSPas0+1aOyonoUyrFnP1B6XaceqXgNuCNPTHEk
GYhZbBZHi1nM4k75zSOlD68k+eKQm8t+LqFhqAHTKJqyBrzF6Ff7LL9KxpFN
v49+fONzH+zeg29y4eRlNtw248F7Lf2hTX/7VJ1uTQ2YxTlmyhvHTPWOYyag
aiLUgH/yk59kLFBr2WuvvXwOcHJ777132fenBgw0sJdffnnppZfOeJs94ogj
6nf1hx9+uNP3+d13371+PwANrSn3ZzryhyP+M/vG57e1PXvVPdft9sOuP+bV
nzvm76NvnTenNfuRH/r5yAJucNKOx8+ZNn3xm7pj8FmlP/k9jP2ZvFSP0v1V
lFLpz0yJUT0K5XODry+9rlOPqAGPvjbrtIiCmcVlT90lK/2ZKTFmMYtobW37
yE7jSh9eqfL0P6eV/YxCY1ADplE0ZQ24I+udNKGTBWuvXivtcODGv/6vrj/m
pr99atXdhvTqu1T2Aw847D/rd19qwCzOMVPXH9MxUzFxzARUTek14BEjRqyy
Stb/BLdEu+++uw5wPfTu3fvMM88s9x7VgIHG9dOf/jTjPbZ///4vvfRS/a7+
7rvvdvo+3/ET1u8HoKE16/5MRx6/4KquPAPTnnnpid9df/eRQ6/Z6YRxGx28
8COMXf+gq3c49s7Dzv3rBVe/9bfnuvJoU37/hwJu7cptj5r+8hIWTo+c3VL6
097z2J/JS/Uo3V9FKZX+zJQY1aM42trmL7vtqNK7OvWIGvD3z/pTvX9/6Dqz
uOypu2SlPzMlxixmEVfc+lzpkythTvjVg2U/o9AY1IBpFM1aA+7IR/b9cVcW
rv3W3HD1rx633oktA89/fMtx7yz8CFtNeH+TCyev/+OrPrzPj/qvt2VXHm3l
nQbX9abUgFmcYybHTNHimAmomtJrwDvvvHPezdstt9yypaWl3B+7FPXuAC+w
1lprjR07tsTbVAMGGtT06dNXXnnljDfYY445pq4/wPz583v37p39Jj9x4sS6
/gw0riben+nI0+PvzPuEtM2b1zp9Zuv7M9vmzsv7vS/e8cjotb5R75v6/Vbf
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
MZPEFsdMQNGkXQMeMmRIuT3YFurr66+66qpUBxNE/B3gOfr06VPlqLbYYotU
R6IGDOTL/fffX/nHZs+ePWfPnl3bF/3Xv/7VrVu3an5oN60jtX3pctSA887+
jMQW+zNJqR6VWwpVj0JF9Sgqex17f/CuThpRA77v0bfS/vBQPWuxtTi2WIuZ
246H3xN88apJen1v7KxZDaFvJ+SDGjB5oQYsEUYNOBHHTBJbHDMBRZN2DXib
bbYptwfbwuqrr57qSILISwe4yY9//OMqB9anT59UR6IGDOTLRx99VFdXV/kn
5x133FHDV2z6Odm3b98qf2hPnDixhi9dgRpw3tmfkdhifyYp1aNyS6HqUaio
HkXlDyOeCV7XSSNqwJ98VtUdIBvWYmtxbLEWM7e7H54cfPGqSU677J+h7yXk
hhoweaEGLBFGDTgRx0wSWxwzAUWTdg141VVXLbcH28I+++yT6kiyl6MOcJMz
zjijyrF16NBh5MiR6Y1EDRjInbXWWqvyT85tt922Vq/16aefbrjhhlX+xK6r
q2u6vlYvXZkacN7Zn5HYYn8mKdWjcquh6lGoqB5FZeI/3g5e10kjBa8Br7zd
dWl/ckjEWmwtji3WYubW0NC4ynbjgy9h85mO61799vtfhL6XkBtqwOSFGrBE
GDXgRBwzSWxxzAQUTao14LFjx3bq1KncHmwLZ5xxRnojyV6+OsBzBty5c+cY
3iw1YCB3jjjiiFZ/ck6YMGH+X+izzz7bZJNNql9Q+vfvP/8vWiU14LyzPyOx
xf5MUqpH5VZD1aNQUT2KSnvtwRa8BrzHr+9L+5NDItZia3FssRYzT+eP/Ffw
JWw+s9vR94a+i5AnasDkhRqwRBg14EQcM0lsccwEFE2qNeDf//735TZgW+jQ
ocOoUaPSG0nGctcBnmO11VarcpD7779/esNQAwZy58EHH2z1J2fPnj2nTJky
P6/y6quvtvq1wy3stttutZpjq9SA887+jMQW+zNJqR6VWw1Vj0JF9Sg2q26f
+6/+mzsFrwGfO+yZtD82JGItthbHFmsx8/TFtFn9t70u+CrW5nRef9i/J30S
+i5CnqgBkxdqwBJh1IATccwkscUxE1A0qdaAhwwZUm4DtoU+ffqkN4yM5bQD
3GSbbbapcpxbbLFFesNQAwZyp7GxsXfv3q3+8Nxss82mTZvWtpe48cYbF198
8aTLyllnnVXbmVagBpx39mckttifSUr1qOz6q3oUKKpHsdnr2PuD93ZqnoLX
gO979K20PzYkYi22FscWazHlPPD4O3XrhF/I2pY/jPB/wUAyasDkhRqwRBg1
4EQcM0lsccwEFE2qNeDqa6VbbrllesPIUn47wE0OPfTQKoeaam1bDRjIo3PO
Oaean5/f+ta33nzzzUTP/MYbb/z4xz+e57N17Nixrq6uwsvdfffdKc13bmrA
eWd/RmKL/ZmkVI/KrYaqR6GiehSbP457Lnhvp+Ypcg14wXWHfja1qumTGWux
tTi2WIup4PCzHgm+lrUhmwy+efbshtA3D3JGDZi8UAOWCKMGnIhjJoktjpmA
okm1Blz97y4/8MAD0xtGZnLdAW7yhz/8ocrRdujQoWmyKQ1DDRjIo88++6zp
J3k1P0IXWWSRc889d+rUqa0+55NPPrnffvstuOCC5Z6qXPO2WZY/UdWA887+
jMQW+zNJqR6VWw1Vj0JF9Sg2r7/1WfDqTs1T5Brw//z89rQ/MyRlLbYWxxZr
MRV8MW1W/22vC76cJUrn9Yf9e9Inoe8c5I8aMHmhBiwRRg04EcdMElscMwFF
k2oNuFevXuU2YFs444wz0htGNvLeAZ4zhc6dO1c55ssvvzylYagBAzl14YUX
Vv+Tv3v37j/5yU9GjBjx1FNPffzxx7NmzZo+ffp77733zDPPjB49+sgjj+zf
v3/lZ2i65vbbb69wwYorrpjl9NWA887+jMQW+zNJqR6VWxBVj0JF9ShCA3aZ
ELzAU9sUuQZ88djn0v7AkJS12FocW6zFVPbA4+/UrRN+Ras+fxjxTOh7Brmk
BkxeqAFLhFEDTsQxk8QWx0xA0aRaA+7SpewGbAsjR45MbxgZaAcd4DlabZ01
O/vss1MagxowkFOzZ88eNGhQ29aCpAYPHtzQ0HD66adXuGbHHXfMcvpqwHln
f0Zii/2ZpFSPyi2IqkehonoUoRMveTx4gae2KXIN+PW3Pkv7A0NS1mJrcWyx
FtOqI85+JPiKVmU2GXzz7NkNoW8Y5JIaMHmhBiwRRg04EcdMElscMwFFk14N
eOTIkeV2X1vo3r17SmPIRrvpADf51re+VeXIjzvuuJTGoAYM5NdLL73UtKi1
bUWo3pAhQxobG5tebuedd65w2WmnnZbl3NWA887+jMQW+zNJqR6VWxBVj0JF
9ShC/3j2/eAdntqmsDXgAbtMSPvTQhtYi63FscVaTKtmzmz44ZA7g69rrab/
tte9++G00HcL8koNmLxQA5YIowaciGMmiS2OmYCiSa8GXP3vRl9hhRVSGkMG
2lMHuMnWW29d5eAPOuiglMagBgzk2s0339yxY8e2rQutqq+vLy339u7du8LF
t956a5YTVwPOO/szElvszySlelRuQVQ9ChXVowg1NDQut+XY4E2eGqawNeAT
Ln487U8LbWAtthbHFmsx1fhi2qzN9r01+NJWIctvNc534MP8UAMmL9SAJcKo
ASfimElii2MmoGjSqwGfcsop5XZfW1h77bVTGkPa2lkHuMnuu+9e5fibrkxp
DGrAQN6NHj26Q4cObVsdKlh22WXvvffe5lf56KOPKl//9ttvZzlrNeC8sz8j
scX+TFIFrx5JhFE9itPPT30weJmnhilsDfixf72f9keFNrAWS2yxFlOlpoXy
W3v+OfjqNs8ss/mYF16bEvoOQb6pAZMXasASYdSAE3HMJLHFMRNQNOnVgI84
4ogqe02bbbZZSmNIVfvrADc5+OCDq5zC1ltvndIY1ICBduCOO+5YZJFF2rZG
zK2urm7w4MHvvfde6Uvcc889FR6y7LLLZjxlNeC8sz8jscX+TFKqRxJbVI/i
dNsDbwbv89QwxawBL7fl2IaGxrQ/KrSBtVhii7WY6n02dcbm+98WfI1rkd7f
v+blNz4NfW8g99SAyQs1YIkwasCJOGaS2OKYCSia9GrAP/nJT6psN+2www4p
jSE97bID3OS4446rchYbbLBBSmNQAwbah1dffXWLLbZo20pRatNNN33sscfm
fv6zzz67wqN++MMfZjxfNeC8sz8jscX+TFKqRxJbVI/iNGtWQ8/vjQ3e6qlV
ilkD/t+L/pH254S2sRZLbLEWk8i0L2dt/4u7gy9zzVntR+P/887U0HcF2gM1
YPJCDVgijBpwIo6ZJLY4ZgKKJr0a8C677FJlwemnP/1pSmNISXvtADepXCor
tcYaa6Q0BjVgoN1obGy87rrr1l577TasF506dRo8ePA8C8Bz7LbbbhUefsIJ
J2Q50/+qAeef/RmJLfZnklI9ktiiehStU//0z+DFnlqlgDXg+gFXv/H252l/
SGgba7HEFmsxSc2c2XDyH5/ouO7Vwde7vY69/6NPpoe+H9BOqAGTF2rAEmHU
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
30OPkRzL7/7MG3c+VjqRdx99PtHDn77whtKHT5/yefAZvTT23jTe4n+cNjL4
1BLF/kxSqkcSW1SPcq2xsXH3X98bvBZbqNQPuPr2B94M/c4zX6zFElusxWRA
DRjipwZMXrTjGvAS39svjRpwr5+eXeFFu6769bfKdF5xzTTm1annKqXjWWLL
fYPf6ppHDTgRx0xzOGaKJ46ZgKJRAyY2asAA8/Tss89W2PDp0KHDtGnTQo+R
HMvv/sznb75XOpEXR9yV6OETDzqvxa24bv2Dws7ow2deS+MtvnPXU4K/WYli
fyYp1SOJLapHeffFtFnr7npj8HJscXLusGdCv+fML2uxxBZrMRlQA4b4qQGT
F+24Brxw34Fp1IBXPvWecq+4zvB3Fqira75y2V1+U/NJ9T/5zpbjOe0vwW91
zaMGnIhjpmaOmSKJYyagaNSAiY0aMABkL6f7MyNW2L1h9uzSiTx2yohEz3Dz
949pcSvu2Pmk4POak/HrH1w6sJlTpw1bbpfKD/nk5cmlD7l9pxODz6LNsT+T
lOqRxBbVo3bgjbc/X/q7o4P3Y4uQwcdPbGxsDP2GM7+sxRJbrMVkQA0Y4qcG
TF604xpwc9a6YlJpb7a+c9dBNzZUfkinXquWPmSVMyZW80IrDrm89FGr/f6x
Wk/ktQWXXKH0JbqttXnw25tG1IATcczUzDFTJHHMBBSNGjCxUQMGgOzldH/m
+g2HtJjIxIPPS/QM1ww4sMUzPHj4JcHnNSf37nd26cDee+zFyteP6rtX6W5V
Y0PD6JUHB59Fm2N/JinVI4ktqkftw0NPvrvwBsOCt2TbdzYZfPOX02eFfqup
AWuxxBZrMRlQA4b4qQGTF0WoAa903ITS6mzXVTeufP3Aa6cuUF//9QPq6gaO
/aSaF1pkvR82P2jBxXsOuqmxVlMYdGND31+N6bjoMqUT6bjYsmtd+Xrw25tG
1IATcczUzDFTJHHMBBSNGjCxUQMGgOzldH/m1h8e12Iid/z45ETPMLznri2e
4R+njQw+rzl58g/XlQ7s+aF3tHI3tvtN6fWfTnon+BTmJ/ZnklI9ktiietRu
3P3w5E7raQKnlfX3uOmTz2aEfpOpDWuxxBZrMRlQA4b4qQGTF0WoAS+324ml
7dmlthlS+fpVz3qo9PqFll2pmlcZeM3ndQt2an7Ukj84OOk417j4uVXPeeTr
/O7B/ifdvuKQy5ueasHFey7wTZ16rrzmH18Mfm9TihpwIo6ZmjlmiiSOmYCi
UQMmNmrAAJC9nO7P3L3X6S0mcvPWv076JDOnTit9hmcuvjH4vObkzbv+UTqw
v/3q0srXP3zsFaXXT7r1keBTmJ/Yn0lK9Uhii+pRe3LLxDc6rnt18MZs+8uA
XSZ89Mn00G8vNWMtlthiLSYDasAQPzVg8qIINeAeG2xXWqDtfeiVla9f4aA/
ll6/6MY7V/MqKx0zvvRR/U++M+k4u6313QWqUN+52zI7Hzvw2qnBb2x6UQNO
xDFTM8dMkcQxE1A0asDERg0YALKX0/2Z+3/2+xYTueHbhyV9kmnvTyl9huev
vj34vOZk6lvf+EvRzd8/pvL1/x59T+n1T5w1NvgU5if2Z5JSPZLYonrUzkz4
y6QF1x0avDfbnrL2zje8/9G01m89+WEtlthiLSYDasAQPzVg8qIINeAFl+hV
WqNd7ff/qHz9kv9zYOn1Pff+bTWvsvjm+3zd1F24+7rXz0g6zlZrwPWdu/b6
yVkDxkwJfkvTjhpwIo6ZmjlmiiSOmYCiUQMmNmrAAJC9nO7P/HXIBS0mcv2G
Q5I+SYttkBdH3R18Xk0Zu8a+paNqmDlrZO89Kj/kg6deKX3IPXufEXwW8xP7
M0mpHklsUT1qf26Z+MZCgzSBa5P1dr/pwylfhn5LqTFrscQWazEZUAOG+KkB
kxftvgY8YNQH36jSdui47vgvKz+kS7/1vvG9vife2uqrDJowq0O3xZofsti3
d2vDUKv6NuC6uq6rbtT319cOurEh+L1NL2rAiThmauaYKZI4ZgKKRg2Y2KgB
A0D2cro/88BhF7WYyPj1D076JJ//5/3SZ3hp7L3B59WUO3c7tXRUHz33euXr
h/fadda0b/xW8WsGHBh8FvMT+zNJqR5JbFE9apfufnjywhsMC96hzXs23ufm
KZ9Ob/12kzfWYokt1mIyoAYM8VMDJi/afQ145VPvLm3RLtx77crXD5owq26h
zqUPWXvoW62/ym/vLX1I31+NacNQq6oB//+6rrbJWpe9Evz2phQ14EQcMzVz
zBRJHDMBRaMGTGzUgAEgezndn5l4yPktJnL9RocmfZKpb3/zf9MeeVfweTXl
H6eNLB3Vy9feX/n6Gzc/svT6ae9PCT6F+Yz9maRUjyS2qB61Vw89+e7S3x0d
vEmb32z/i7s/mzoj9NtIKqzFElusxWRADRjipwZMXrT7GnCvn55d2p5dfIuf
VL5+jQufKb2+Y4+lq3mVpbf75dff19txwYFjP5n/ka973bR1hr296tkPr3Dg
hd3W3GzuJnDHHks1jTb4HU4jasCJOGZq5pgpkjhmAopGDZjYqAEDQPZyuj9z
3wHntJjIhM0OT/okX374SekzPHflbcHn1ZRXJzxYOqpHTxxa+foW/8f65Puf
DD6F+Yz9maRUjyS2qB61Y2+8/fnAXScE79PmMb+58B8NDY2h30DSYi2W2GIt
JgNqwBA/NWDyot3XgBf7zh6l1dnlDzi/8vV9Dh9Rev0iA7eu5lUWWrpP80O6
D9gqjYmsfsFTXVbeoEUTeMHFew4Y83Hwm1zzqAEn4pipmWOmSOKYCSgaNWBi
owYMANnL6f7MXbuf1mIit2xzXNInmf3lN76R76nzxwefV1M+eXly6aju2Omk
ytc/e9nNpdc/c9GE4FOYz9ifSUr1SGKL6lH7NvWLmbsedW/wVm2O0nn9YWNv
eyX0+0a6rMUSW6zFZEANGOKnBkxetPsacKdeq5b2Zlc5/f7K1y/9oyNLr19m
52NbfYnVz3+y9CEr/PzilOYyaMKsRTfZpUUTeIkt9w1+k2seNeBEHDM1c8wU
SRwzAUWjBkxs1IABIHs53Z+5eetft5jIXXuclugZRvbeo8UzPHrSsODzGtV3
r4bZs0tHNWaVwZUf8vbf/lV6/cSDzgs+i/mM/ZmkVI8ktqgetXuNjY2nX/5k
8HptLtLre2Mff+6D0O8YqbMWS2yxFpMBNWCInxowedG+a8ADr526QH19aWl2
wJgplR/Sba3NS6/ve9S4Vl9luT1PKX3I2le9md6MBt0wc+Hea3+jB9yh49pX
/yf4ra5t1IATcczUzDFTJHHMBBSNGjCxUQMGgOzldH/m2oE/azGRBw67KNEz
jF//4BbPMPHg8Dsbt257fOmQPnv93VYfMn3K56UPueHbhwWfxXzG/kxSqkcS
W1SPCuLGeyd127Cq/k9hs/E+N7/zwReh3yiyYC2W2GItJgNqwBA/NWDyon3X
gFc9++HSwuxCy/Rt9SEdui5a+pA1//hiqw9ZeKV1m6/v0m9Q2pPqf/IdLb4Q
ePkDzg9+q2sbNeBEHDM1c8wUSRwzAUWjBkxs1IABIHs53Z8ZNtfvWnri7HGJ
Hn77jie0uBW3/jDx73uqeR4+9orSIU269ZHK17fYZZo5ddqw5XYJPov5jP2Z
pFSPJLaoHhXH869O2WDPm4K3bSNM/YCrf/2HR6fPmN36TaRdsBZLbLEWkwE1
YIifGjB50b5rwCsc9MfSuuyiG+9c+fq1rphUen19566Dbmyo/JC1r3qj9CHL
7Xlq2pMaNGF2h+5LfHNePw5+q2sbNeBEHDM1c8wUSRwzAUWjBkxs1IABIHv5
3Z/5+MU3SyfyyviJiR7+tyP/2OJWjF1j3+CT+vfoe0qH9MRZYytff+9+Z5de
/+6jLwSfwvzH/kxSqkcSW1SPCmXWrIbfXfXUQoOGBm/expNVtx//yFPvhX5n
yJS1WGKLtZgMqAFD/NSAyYv2XQNe8n8OLK3L9tz7t5WvX+m4CaXXd11tk1Zf
YoWfXVT6kNUvfDqDeXVf53ulL9pl5Q2C3+raRg04EcdMzRwzRRLHTEDRqAET
GzVgAMhefvdnXrn+r6UT+ei51xM9/Pmrby99+NTJHwSf0f9tTTz1Sumo7tnn
zMrXP/mH60qvf37oHcGnUIObYH8mIdUjiS2qRwX07Msf+1rgBf7/LwGe9uWs
0G8IWbMWS2yxFpMBNWCInxowedG+a8Bd+q1XWpftd8Itla9fbrcTS69fapsh
rb5EaSN3oaX7ZDOvxb6zR+k4Oy3XP/itrm3UgBNxzDSHY6Z44pgJKBo1YGKj
BgwA2cvv/swjv7mqdCINs2aPXnlwgk2Ap7+xEzLploeDz2h4r11nTZteOqpr
B/6s8kPeuPOx0uv/9qtLg89i/mN/JinVI4ktqkfF5GuBfQlwkVmLJbZYi8mA
GjDETw2YvGjHNeBBE2bVLdS5tC679tDJlR/SY4PtS6/vfeiVla8fMGbKAh06
Nl+/9PaHZzO1FuPsvMIawe92baMGnIhjpjkcM8UTx0xA0agBExs1YADIXn73
ZyZ855ct5nLfAedU+dhxa+7X2NBQ+tiHj7k8+Ixu3PzI0iFN++CTVh8ydfIH
pQ+5eetfB5/F/Mf+TFKqRxJbVI+K7NmXP95s31uDN3IzTqf1hh13wWO+BLjI
rMUSW6zFZEANGOKnBkxetOMa8BoXPlPale3YY6lWH7LgEsuXPmS1Pzxe+fo+
R44uvX6V396XzdQWXmnd0tftvvYWwe92baMGnIhjpjkcM8UTx0xA0agBExs1
YADIXn73Z5ry6Wtvl87ltT8/VOUDHzn+ytIHNjY0XLtuK/9DdAZ54LCLSkc1
+f4nK18/do19S69vmDlrxIq7B5/F/Mf+TFKqRxJbVI8KrrGx8fYH3hywy4Tg
7dwMUj/g6gNOeuDNdz4PfdcJzFosscVaTAbUgCF+asDkRTuuAfc5fERpV3aR
gVtXvn7AqA9Kr1+gQ8d1r59e+SGLfXvXry/vvvigCbMymNc6I95doL6+dKRL
/fDQ4He7tlEDTsQx038dM0UWx0xA0agBExs1YADIXq73Z54899rSucyeMfPa
QT+v5oFTXvpP6QPffvCZ4HNpyrOX31I6qmcumlD5+jt3OaX0+o+eez34FGoS
+zNJqR5JbFE9oklDQ+PoW1/u+4Nrgzd108tOR9zz/KtTQt9pomAtlthiLSYD
asAQPzVg8qId14CX3v6I0q7sMjsfW/n6lU/7S+n1C/deu/L1614/o37h7s3X
L7754Gzm1XPv3y7wTSsdMz743a5t1IATccz0X8dMkcUxE1A0asDERg0YALKX
6/2ZawYcOHv6zNLpvHzt/a0+6sEj/tjiJty7f+u/5qnFXlCTO3Y6qbbTeeeh
Z0uff+JB51W+vsX/bP7qhAeDvyM1if2ZpFSPJLaoHtFsxszZF499bunvjg5e
2a1tNt//tr8//V7ou0tErMUSW6zFZEANGOKnBkxetOMacLe1vlvale171LjK
16/w84tLr1/sO3tUvr7/Sbd/o4t77PUZTGqNS56vW2jhb3xpcdce6143Lfjd
rm3UgBNxzPRfx0yRxTETUDRqwMRGDRgAspfr/ZmmvDD8zhYzuu/A31e4/oZN
fjHjk6ml13/8/OvDltul1RfKYH9m+pRv/ErxG759WOXrn7vyttLrn7/qtuBv
R01ifyYp1SOJLapHtPD5FzMvGPWvVbcfH7y+O5+pH3D1joff85dH3mpsbAx9
U4mLtVhii7WYDKgBQ/zUgMmLdlwD7tB10dK67Jp/fLHy9Utte1jp9Utt+4vK
1y/5/YOaL65bqPPAa6dWP7altz+83/E3DrqpMdGMVj//yY6LLdviq4CX2+Pk
4Le65lEDTsQxk2Om2OKYCSgaNWBiowYMANnL+/7M2DX2/fKjz0pnNPvLGRMP
nvf/4PznrY6eOvmDFnfgjp2r2mZJe39m/AaHlD75zKnTWt01eu3PD5U+ZPJ9
/wz+dtQk9meSUj2S2KJ6xDw1Njb+5ZG3fnzkXzoMvDp4oTdpltl8zAkXP/7m
O5+3Pk8KyVosscVaTAbUgCF+asDkRXutAa91xWulXdn6zl0H3dhQ+SGLfXvX
0ocssu73K1w86KbGBRdbrvniHutvm2h4c76puHPvtXoN/t2al71cxXQmLf2j
Ixfo0LFFB7hTz1XWve6L4He75lEDTsQxk2Om2OKYCSgaNWBiowYMANnL+/5M
U+7d96y55/Wfvzzxl5+eNW6t/Yf33HXMKoNv3+nEF0fdPXvGzBaXPXvZzVW+
Str7M/fuf07pk7/76AutPuQ/9/6zxZBeGHbHPXufcfdep9+yzXHB35c2x/5M
UqpHEltUj6hs8rtTT/7jE8ttOTZ4ubeabLbvrdfc8eqMmbND3zaiZi2W2GIt
JgNqwBA/NWDyor3WgFc67obSumzX1TZp9SGLDPpBi5LtUtsc0v/EW/ufdPtq
5/y9xcWrnfto6ZUrHnpFouHNqQF/3eZdrv9i39615z5n9DlydL8TblnlzAdW
Of3+fv97c+9fXLX0dr/susqGC9TVLTCXDt0XX+OS54Pf6jSiBpyIY6YqX8Ux
U2ZxzAQUjRowsVEDBoDstYP9maY8fsboNsz9zbv+MXz53ap8iacvuqHFw/+8
1dE1nMJT540vffLnh97R6kMm3fJwuak9fvqo4G9Km2N/JinVI4ktqkdUY+bM
hpvvf+PAkx9YZvMxwbu+c2f9PW467bJ/PveKYz+qYi2W2GItJgNqwBA/NWDy
or3WgJfd7YRvFnqHtPqQRTf+8dxV2zl6Df5dy+ff5fiv/3N9/TrD30k0vBY1
4DZYaJm+a1z8bPD7nFLUgBNxzFTlSzhmyiyOmYCiUQMmNmrAAJC99rE/05RH
TxzaMCvBN/W9Mn7iiBV3r/7533no2dKHv/3gM7Ud/5t3/aP0+f/2q0tbfciT
f7iu3Ozu2uO04O9Im2N/JinVI4ktqkck0tDQ+Pen3/vNhf9Ye+cbwlZ/O603
bNtD77p8/AtvvTc19F0hZ6zFElusxWRADRjipwZMXrTXGnCPDbYrLc32PvTK
Vh+y3G4nluvc9j/5zhYXd15hjeb/2nXVjZMOb75qwB06LrPjUQOvnRr8JqcX
NeBEHDNVGcdMmcUxE1A0asDERg0YALLXbvZnmnLLNsd98NQrrU75i3c++uuh
FyR65pF995w9/Ru/6enWH9b41yE1jXzaex8358/fO6rVh4xf/+AZn8y7pzRu
zf2Cvx1tvxX2ZxJSPZLYonpEm732n88uHP3s7r++t/+212VT/e28/rAN9/rz
kNMfuvHeSVO/aPlbHaFK1mKJLdZiMqAGDPFTAyYv2msNuEu/9TouukxzVj//
yVYfstYVkzp07THP4u06I94rvXLNy14u/a+9fnJW0uGtft4Ty+76v136DVqg
rq76/m/HxZZdZsej1vzjC8Fvb9pRA07EMVM1ccyUZRwzAUWjBkxs1IABIHvt
aX9mTu7c9ZSXr7lv6lst/14xfcrnb9z52AOHXZTo/86ek7v2OK30qd6449Hg
05yTGzb5xSvjJ06d/MHs6TNnfPbFp6+9PemWhx86+k/BBzY/sT+TlOqRxBbV
I2piyqfT7/37W+cMfXr3X9/b74fX1rb3e+gZDw298d9P//ujWbMaQk+U9sBa
LLHFWkwG1IAhfmrA5EV7rQG3LWte+u/FN99nwSWWr+u4UP3C3Tst22/RjX+8
4pDLW1zWa99zS9u589PLHTj2k5VPvbvnPmc0vW63NTZdaOneHbouWtdxwaYB
dOi+xELL9O3Sb73FNx+8/P7nrXLmA4MmzA5+i7KJGnAijpmqiWOmLOOYCSga
NWBiowYMANlrf/szzRmzyuAJmx1+8/ePuXHzI69Z54D5eapnLrmx+Y41zJ59
42aHB59dO479maRUjyS2qB6Rhs+mznjxtSn3PfrWmFtf+f3wZ3517t/3POa+
zfe/bc0dr191+/H9fnht7+9fs/xW4/p8/5qVt7tu9R2uX3fXG7c55M4DTnrg
hIsfv/Sa52+8d9Lfn37vzXc+1/slDdZiiS3WYjKgBgzxUwMmL9SA25Bua2za
3AHu1GvV4ONpf1EDTsQxUzVxzJRlHDMBRaMGTGzUgAEge+14f6aWOwZPf/1L
oF6+9v7g42nfsT+TlOqRxBbVI6BorMUSW6zFZEANGOKnBkxeqAEnzToj31+g
vr65BrzMzscEH1L7ixpwIo6Zqjr4cMyU5d12zAQUjBowsVEDBoDs2Z9pNWNW
+2nD7Nlzbtfs6TPHr39w8CG179ifSUr1SGKL6hFQNNZiiS3WYjKgBgzxUwMm
L9SAk6b3YVcvUGLVsx4KPqT2FzXgRBwztRrHTBnHMRNQNGrAxEYNGACyZ3+m
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
v1/uuivvdkLYa6kB055hcedjWBw2hsUEoQZMjkRbAz755JO7dOlS7jfVpaqz
PwLc3mWXXbbZZpt1+P1pL5IO8HQ14P+/6667bqmfXdeuXU899dQ5c+YkffGF
CxceddRRHXhafvrTn6Zxs+RaPe3s7txrdLnbnPf+rEmrfSel637wzMvlrnv/
cZfW7Pbfeui5xa7u33kpiILPSgxKIoxBCQDAolpaWlf96nWZ91fDprA14FJe
fv2TtJ8ZCEINmLwo+NFWs9OtKON0K5F6qgGv9+M/lPuJ6Nqn/xY3taR03R6D
y/6bwmsdPznstdSAac+wuPMxLA4bw2KCUAMmR+KsAY8ePbqxsbHcr6mVdevW
rS7/CHB7bX8WuHv37h17oxYVTwd4uhrwIp544omlfr6rrrrqn//8585c5Ygj
jkj6wNx1112h7pG6UU87uylrjVg4d365O739m6encdFffeGICm/vr7c6qjb3
fs2a+zZ/Onexqz940vjMP5QOxM4uqYLPSgxKIoxBCQDAoh55+t3Mm6vBU+Qa
8M+nPpv2MwNBqAGTFwU/2mp2uhVlnG4lUk814C/8em7DMsuW+6HY4PyH0rjo
kImvl7tiyaYTXg17OTVg2jMs7mQMi4PHsJgg1IDJkQhrwOPGjevdu3eFX1Mr
6Nev3znnnJP1HdTUeeed179//469XW2i6gBPVwP+/8ybN2/jjTeu/Nltttlm
M2fO7OSF5s+fv9FGGyV6Zt59990g90g9qaedXSlv3PtkuTt9bsLtaVzx0bOv
KXfFWS/MrNmN33Pwue0XcNPw4zP/RDoQO7ukCj4rMSiJMAYlAACL+uGlf828
uRo8Ra4Bf+17d6T9zEAQasDkRcGPtpqdbkUZp1uJ1FMNuJTeQ3cq90Ox8n+P
TOOKqx9yfrkrdl99g+CXUwOmPcPiTsawOHgMiwlCDZgcia0GPHny5IEDB5b7
HbWyddZZZ/z48VnfQQbGjRvXs2fZ/XVl3bp1K3171nfw/6MG3Oa4446r/Nlt
sskmoeq4Dz/8cJcuXap8ZtZYY40gF6XO1NnO7qHTJ5S70/kffnLt4P0DX3G1
78x68Y1yV3x63E01u/E3H3h6sat//MpbmX8cHYudXVIFn5UYlEQYgxIAgEV9
8cBbM2+uBk+Ra8DLbHH1gubP0n5soPPUgMmLgh9tNTvdijJOtxKpsxrwmkde
Vu6HonG5fpv/anbYy21xU0v3AeuVu+Iq3z41+A2qAdOeYXGnYlicQgyLCUIN
mByJqgbc1NQ0bNiwcr+gVrbddttNmTIl6zvIwOTJk5P+KdfFDB06tPTOZ30f
/5cacMndd9/d0NBQ4VNbY4013n777YBX3Geffap8YHbfffeA16Vu1NnO7roN
D/lsXtlZ5GM/vS7s5e4/7tIK7+2N2x1Xm7u+e/9zanCzNYudXVIFn5UYlEQY
gxIAgM8tXNjSY+tJmTdXg6fINeBSnvj7e2k/OdB5asDkRcGPtpqdbkUZp1uJ
1FkNeOjUDxq6dS/3czHgwJ+Evdxax08ud62STX7xfPAbVAOmPcPizsSwOI0Y
FhOEGjA5ElUNeO+9967wC2o5DQ0NBxxwwLRp07JefgY63wFus+uuu2Z9K/+X
GvCCBQvWXnvtCp9X9+7dH3nkkbAX/f3vf1/l0zJmzJiwl6Y+1NnOrpSXbri/
3M0u+GTOb4YdE+pCTRsdMvvNsv+999ZDz9Xmfq9d54BPX3tnsavP//CTqesd
lPln0bHY2SVV8FmJQUmEMSgBAPjc0//8IPPOahopeA34yt88n/aTA52nBkxe
FPxoq9npVpRxupVIndWAS+k3fES5n4suPXpvesVLoS409Nr3u60woNy1ltv4
K2ncnRow7RkWdziGxSnFsJgg1IDJkXhqwCeddFK5304raGho+P73v5/12rMR
qgPc5thjj836hv5DDfj888+v/GGNHTs2+EVbW1sHDx5czaNy6623Br86daD+
dnY3DT++5bOy/zrnu4/PmDJ4ROevMnn1vV/7/WMV3ti79jm7Nvf74vX3tb/6
X067MvMPosOxs0uq4LMSg5IIY1ACAPC5STf/M/POahopeA34qB89mPaTA52n
BkxeFPxoq9npVpRxupVI/dWANx737H916VLuR6PnesO+8Os5nb/KFjcu7LPl
N8tdpWS9s+9O4+7UgGnPsLhjMSxOL4bFBKEGTI5EUgMeO3Zs9+5l/12Mchob
G0844YSs156NsB3gkq5du5533nlZ39a/FbwG/O677/bp06fCJ/XFL36xpaUl
jUt/73vfq+ZRmTlzZhpXJ+/qb2c3qcxm53Nv3Pvk1HUP7MzrXzNw35dufKDC
Jd7687O1udOHTp/Q/upvP/z3Sat9J/NPocOxs0uq4LMSg5IIY1ACAPC57//0
L5l3VtNIwWvAW+13c9pPDnSeGjB5UfCjrWanW1HG6VYi9VcDLmWF7Q+oMHLt
PXSnzad93JnX/8L18/t9Zb8Kl1hu0+1TujU1YNozLO5ADItTjWExQagBkyMx
1ICbmpo23HDDCr+gLlGXLl1OOumkrNeejeAd4DZrrbXW1KlTs765oteAjz76
6AqfUdeuXZ977rmULv3LX/5yqQ/JyiuvnNLVybu63NlN2/TweR98XOGuZ70w
87ZdTu/Yi984/Ph3H59R4cUXzp1/43bH1eA279p7TEvzwsWuvmDW7N9sdXTm
H0FnYmeXVMFnJQYlEcagBADgc1888NbMO6tppOA14GW2uHpBc9k/LQWRUAMm
Lwp+tNXsdCvKON1KpC5rwJtd83Zj7xUrDF67r77Bhuc/3LEX33jccz3XG1bh
xRuWWXaTXzyf0q2pAdOeYXHSGBanHcNiglADJkdiqAEfcsghFX5BXfJvrQ0N
I0eOzHrh2UipA9xmn332yfr+Cl0DfvPNN5dZZpkKH9CRRx6Z3tUfe+yxpT4h
3/jGN9JbALlWlzu7Uv505EWVb7y1peWlG+6/dedTq3/N0n7tH9f87rMFzZVf
+ZHRk2pwgzftcGJpE9f+pu45+NzM3/xOxs4uqYLPSioMSrKV+TuTYQxKAADa
LFzY0mPrSZl3VtNIwWvApTzx9/fSfn6gk9SAyYuCH201O92KMk63EqnLGnAp
g38wfSk/JA0N/YaP2PDCv1b/mpv84vn+Ox/V0LVb5Rde4/CL0rsvNWDaMyyu
/jUNi2sTw2KCUAMmRzKvAY8dO7Zy73GJjjzyyGyXnZVUO8AljY2N5513Xrb3
WOQa8Jlnnlnh0+nRo8cbb7yR3tU//vjjpT4hpRWmtwByrV53dqU8dekN1bwD
s15849krbrv36Itv/upJ161/0KKvcO3aB9w4/Pg/HH7+05fe+MEzL1fzai/8
6k81uLXfDDtm9ptL+K/cx3/WlPnb3vnY2SVV8FmJQUmEMSgBAGjz7AsfZt5W
TSlqwBOu/0fazw90khoweVHwo61mp1tRxulWIvVaAy5l1b1Or+aHpfuA9Vbe
7YTBJzdt9POnhl730aKvsPn0Tzce99zap9+wyrdP6zF4aDWvtsJXD071ptSA
ac+w2LA4thgWE4QaMDmSbQ24qalpww03TLph3HXXXTNcc4bS7gC3WWuttaZO
nZrhbRa2Bjx79uwVVlihwkdz3HHHpbqA1tbWLl26VH48rr/++lTXQH7V8c6u
lBnT/pD0DWn57LPm2XObP53bsjDxv+/5+j2PX7Pmvmnf1K82P+KTV99uf/Vn
f3lr5m94kNjZJVXwWYlBSYQxKAEAaHPbvf/KvK2aUtSAf3jpX9N+fqCT1IDJ
i4IfbTU73YoyTrcSqeMa8BY3t66446GJf3i6dOmybK8uyy73X10ak35rny13
+cL1C1K9KTVg2jMsXoxhceYxLCYINWByJNsa8CGHHJL0t9ahQ4c2NTVluOas
1KYD3GafffbJ8E4LWwO+7LLLKnwoDQ0NM2bMSHsNffv2rfxsvPxyVf+/aRXM
mTPnoYceuuqqq0488cSdd955yJAhAwcO7NOnT2kv26NHjxVXXLH0nH/9618/
/vjjJ02a1PnLUTP1vbMrpbTfqc07+eIN909eY5+0b2fapofPemFm+6v/Y8rv
Mn+rQ8XOLqmCz0oMSiKMQQkAQJsrfvN85m3VlKIGfNj/3Jf28wOdpAZMXhT8
aKvZ6VaUcbqVSB3XgLf8P03glXc/sTY/dCsM33+LG5rTviM1YNozLA7FsDhU
DIsJQg2YHMmwBjx27Nhlllkm0W+tq6222sSJE7NacIY60wEePHjwGmuskehb
Ghsbzz///KxutrA14K222qrCh7LrrrvWYA0DBw6ssIZ+/fp17GUXLFhw3333
jR49+itf+UrSn/r11ltvzJgxr732Wtg7Jbi639mVct//Grvg49npvYefzVvw
8FkTa3AjTRsf+uHz/2q/gNr84zI1i51dUgWflRiURBiDEgCANmPGP555WzWl
qAF/4+i70n5+oJPUgMmLgh9tNTvdijJOtxKp7xpwW9Y68douPfuk9+PW0K37
Gt8bu8XNrTW4FzVg2jMs7jzD4rAxLCYINWByJMMa8LBhwxL94tqzZ8+LL744
q9VmqDMd4LXXXnvixImXXnpp7969E33jkCFDsrrfYtaAX3zxxcqfyPXXX1+D
Zay55poV1rDjjjsmerX58+ffeuutBx54YJ8+nd3SduvW7fDDD3/jjTdSunE6
rwg7u1J+s9XRr9z2lzTewDfue+qm7U+owS1ct+EhHzyzhL+z/dIN908esHfm
73DA2NklVfBZiUFJhDEoAQBoc+TZD2TeVk0pasCb7XVj2s8PdJIaMHlR8KOt
ZqdbUcbpViJFqAGXsumVryz/xb3S+FnrvdnXNr70mZrdiBow7RkWd5JhcfAY
FhOEGjA5klUN+Jxzzkn6u+upp56ayVKz1fkOcNvrjBo1qqGhIdG3//CHP8zk
lotZA/7JT35S4bPo3bv3vHnzarCM/v37V1jGD37wg+pf6vjjj+/bt2+iR26p
Su/D5Zdfnt7t0xkF2dm15fZvnv7qbx9uaV7Y+fettaXljXufvHvEj2uz8us2
OPi9p15sv4zSdnXy6nW1rZtkZ5dcwWclBiURxqAEAKDNbt+/O/O2akpRA15p
+NS0nx/oJDVg8qLgR1vNTreijNOtRApSA27LBuc/tPy2e/5XY9cAP2MNDb2H
7rTu6DtrfAtqwLRnWNwxhsXpxbCYINSAyZFMasDTpk3bZJNNEv0C+7Wvfa32
68xcqA5wm113TXYCUHqF0idV+7suZg14s802q/BZHHTQQbVZRq9evSoso6mp
qfqXWmeddRI9b9UbMWLEggVVDYliNmDAgN71ZZO+q2f+m3yNM33o9x4dc81b
f3m2A1u80oautO944vzp13/xf9VswVPXO2iJm51/3fnI5DX2yfz9DJ7SM5n1
j0XODB+wRuYH4xnGoCTClJ7JrH8sAACi0GX90enVUGe+PfvjTxdkldbW1qo2
0a2tGS6y9Bal2gRervfyWT9iUMmJZ/+8mpFl6cvCfi8kVfCjrWanW1HG6VYi
/Ydun3nts8YZcvUbqx96wXKbDO9IH7ihoee6W602Yswml8/IZPFFqAGXnsms
fyxyxrDYsDi2GBYTRCc3tvbF1NKQIUNq3/M844wzEv0a279//6uvvrr268xW
2A5wyZQpUwYMGJDodU444YTa33jpmcz6x6IWSp/F579WzZw5s/IHUXpbkv7e
2AELFiyovIx//OMf1b9a0hpwor9W/fWvf33+/PnpvRU1UHoGEr0/8RvctV/m
v8lnlanrHnjnt0c9OnryjKY/vHHvkx/NeH3ue7OaP51b2vG1LPysefbcee/P
mvXiG28++MwLv7738XOvu3vEj5s2PrT2i3z38RntH8XXfv/YNWvum/l7mEZK
z2TWPxY5s2XffpkfjGeYCoOS4SuulPbVB/XoWe7qmb8zGab0TKbzsAMA5M2G
F6TXQa3y7/EWWep/i7ib33uJ2gljxlYzsix9WdjvhaQKfrTV7HQryjjdSqTn
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
993l5eW1t09btWp13HHHvf/++7VPee211w4++OA6N13XWmutuXPnNv9TAAAA
ZJMCYVOoARMCb3Ej1FkD7tChw4EHHjhlypQPP/xwdScuWbJk/Pjxm2+++epe
7Z122qmqqqo5nwWyo0+fPnvuuedVV11V4CVdneoXc8KECR07dqzzzT322GNL
ccMAAAAAQPNQA26KxYsX9+rVq/bG6TrrrHPPPfcUPve6666r89/Itu222xqX
AAAANA8Fwqaotwbcp0+fH/7whzvssEPt/0oNmGLxFjdCXg145MiRkydPXrRo
UQNPX7ly5UknnVRWVlbni3/ppZeW9OYhs5YuXdrEKzz88MNrr7127de2bdu2
n376aVFuEgAAAABofmrATXHqqafW3jVt06bNI4880pDTp0+fXue4ZNy4caW+
cwAAAP6jQNg0tWvAvXr12nvvvc8+++w5c+bUFIrOOOMMNWBKx1vcCKtqwGVl
ZXvttdcTTzzRuItcc801de5rdenSZeHChcW9YaBYrrzyyjrf3CuuuCLtWwMA
AAAAGkkNuNE+++yzDh061N4yveiiixp+keOOO672FXr37r1y5crS3TkAAACr
KBA2xVtvvdWjR4//+Z//GTNmzOzZsz/++OM6D1MDpqS8xY0wbty43Xff/bnn
nmvidep8u6tdddVVRblPoOgqKyu32GKL2q/tPvvsk/atAQAAAACNpAbcaGee
eWbt/dLBgwdXVFQ0/CJffvll165da19nypQppbtzAAAAVlEgbAZqwJSUt7gR
li5dWpTrLF++fNNNN639gu+yyy5FuT5QCqeddlrt17Z///5p3xcAAAAA0Ehq
wI1TVVW18cYb194vnT59etJLnXPOObWvs+OOO5bitgEAAMilQNgM1IApKW9x
usaOHVv7BW/Xrt2yZcvSvjWgbnfeeWft17Zjx45p3xcAAAAA0EhqwI1z3333
1d4s7dGjR6K/CniV+fPnt2nTJu9SZWVlb731VinuHAAAgBoKhM1ADZiS8han
6/333y8rK6v9jr/wwgtp3xpQt2effbb2O9u6deu07wsAAAAAaCQ14MY57rjj
am+WnnDCCY272l577VX7ahdffHFx7xkAAIA8CoTNQA2YkvIWp65Hjx613/Hb
b7897fsC6vbSSy/Vfme7dOmS9n0BAAAAAI2kBtw4W2yxRe3N0nvvvbdxVxs3
blztq+2xxx7FvWcAAADyKBA2AzVgSspbnLrhw4fXfsenTp2a9n0Bdavz33O3
5ZZbpn1fAAAAAEAjqQE3wgcffFB7p7R9+/bLli1r3AXfeuut2hfs0KFDRUVF
ce8cAACAXAqEzUANmJLyFqfuG9/4hhowROSiiy6q/c4eeeSRad8XAAAAANBI
asCNcNttt9XeKd1uu+2acs2uXbvWvubcuXOLdc8AAADUpkDYDNSAKSlvcer6
9OlT+x2//fbb074voG477LBD7Xd2+vTpad8XAAAAANBIasCN8Ic//KH2Tumo
UaOacs3dd9+99jUnT55crHsGAACgNgXCZqAGTEl5i9M1f/782i94tRdffDHt
WwPqMHv27NovbM+ePVesWJH2rQEAAAAAjaQG3Aj7779/7c3SSy65pCnX/OUv
f1n7mqecckqx7hkAAIDaFAibgRowJeUtTte1115b+wVv37798uXL0741IN+/
//3vnj171n5nJ0zwP3EAAAAAEDE14EbYZpttam+Wzp49uynXvOyyy2pf84AD
DijWPQMAAFCbAmEzUAOmpLzF6dpll11qv+C77rpr2vcF5Lv33nvr7ADvtdde
ad8aAAAAANAkasCN0KVLl9r7pc8991xTrjlr1qza19x2222Ldc8AAADUpkDY
DNSAKSlvcYqeeOKJ2m93tauvvjrtWwP+n4qKijlz5vzwhz+s823dZZddlixZ
kvY9AgAAAABNogacVEVFRVlZWe0t048++qgpl/3HP/5R+5obb7xxsW4bAACA
2hQIm4EaMCXlLU5LVVXVN7/5zdpv97rrrrtgwYK07w6yYu7cuRfVcu655/7u
d78bNWrUjjvuuM4669RZAK52zDHH6AADAAAAQAugBpzUxx9/XOeu6cqVK5ty
2X/961+1r9mxY8di3TYAAAC1KRA2AzVgSspbnJbLLruszi0ybzc0p6uvvnp1
Ld8CRo4cedddd6V97wAAAABAcagBJ/XKK6/U3jht3759Ey/7wQcf1Lklu3z5
8qLcNgAAALUpEDYDNWBKylucipdffrlDhw61X+2ePXsuWrQo7buDDElUA+7W
rdvo0aMfeuihtO8aAAAAACgmNeCknn766do7qF26dGniZRcuXFjn3uz8+fOL
ctsAAADUpkDYDNSAKSlvcfNbtGjRwIED69zImjlzZtp3B9mSqAbcunXrnXba
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

    "], {{0, 1110.}, {3757., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{3757., 1110.},
  PlotRange->{{0, 3757.}, {0, 1110.}}]], "Output",
 CellChangeTimes->{3.940949642275881*^9, 3.940949877406874*^9},
 CellLabel->"Out[140]=",
 CellID->347898138,ExpressionUUID->"d5ddb127-9a88-924b-8089-d0e5572d6c3a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Turn the Qiskit object into bytes by specifying the corresponding provider \
and backend on the IBM system:\
\>", "Text",
 CellChangeTimes->{3.940949944259109*^9},
 CellID->454174011,ExpressionUUID->"aeab5a68-f7af-fb48-9f16-8a5e56819c58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qpy", "=", 
   RowBox[{"BaseEncode", "@", 
    RowBox[{"qiskit", "[", "\[IndentingNewLine]", 
     RowBox[{"\"\<QPY\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Provider\>\"", "->", "\"\<IBMProvider\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<Backend\>\"", "->", "\"\<ibm_brisbane\>\""}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9409499755843906`*^9, 3.940950005627053*^9}, {
  3.940950132204035*^9, 3.940950143755268*^9}, {3.9409501824656887`*^9, 
  3.9409502187710056`*^9}},
 CellLabel->"In[141]:=",
 CellID->304440840,ExpressionUUID->"bfcd72fa-9c36-b74e-9737-9a247477d0ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Send the circuit to an IBM QPU:", "Text",
 CellChangeTimes->{{3.940950253484595*^9, 3.940950256577814*^9}, {
  3.940950304682524*^9, 3.940950317177284*^9}},
 CellID->721409177,ExpressionUUID->"89d2bc93-4f23-7144-a790-7bbbc69cf6b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"job1", "=", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<RunCircuit\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<QPY\>\"", "->", "qpy"}], ",", 
      RowBox[{"\"\<Backend\>\"", "->", "\"\<ibm_brisbane\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9409471411944656`*^9, 3.940947178812977*^9}, 
   3.940950239446892*^9, {3.940950283428997*^9, 3.940950294551987*^9}, {
   3.940950495276491*^9, 3.940950496591976*^9}},
 CellLabel->"In[142]:=",
 CellID->42989671,ExpressionUUID->"6a8e01e9-9da1-d046-8357-ad151cbb1d2f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "id" -> "cwxt5dnehebg008jmy90", "backend" -> "ibm_brisbane", 
       "messages" -> {<|
         "level" -> "warn", "data" -> 
          "We have deprecated the legacy backend.run() interface in Qiskit \
Runtime, which was used as the dedicated \[OpenCurlyDoubleQuote]direct \
hardware access\[CloseCurlyDoubleQuote] entry point. The new SamplerV2 class \
now fulfills this role. Support for the backend.run() will be dropped on or \
around October 15, 2024. Please refer to the migration guide \
(https://docs.quantum.ibm.com/api/migration-guides/qiskit-runtime) for \
instructions on how to migrate any existing code. This corresponds to the \
\"circuit-runner\" and \"qasm3-runner\" programs if you are invoking the REST \
API directly."|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"id"} -> 
        TypeSystem`PackageScope`AtomShape[224.00000000000003`], {"backend"} -> 
        TypeSystem`PackageScope`AtomShape[134.4], {"messages"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"id", "backend", "messages"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["data", "level"]], 
          TypeSystem`Atom[String], 2], 1]}], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"id"} -> 
        TypeSystem`PackageScope`AtomShape[224.00000000000003`], {"backend"} -> 
        TypeSystem`PackageScope`AtomShape[134.4], {"messages"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{"id", "backend", "messages"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Vector[
         TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration["data", "level"]], 
          TypeSystem`Atom[String], 2], 1]}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     3, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["cwxt5dnehebg008jmy90", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend", 
                  Style[
                  "backend", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["backend"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibm_brisbane", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["backend"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["messages", 
                  Style[
                  "messages", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["messages"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["messages"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["messages"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["messages"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{299., {46.3544921875, 51.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{299., {46.3544921875, 51.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940950526121329*^9},
 CellLabel->"Out[144]=",
 CellID->23035925,ExpressionUUID->"6750c5bf-ad4e-9545-878b-192f587f1d1f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QuantumCircuitOperator", "Subsubsection",
 CellChangeTimes->{{3.94095230057432*^9, 3.940952303602192*^9}},
 CellID->161445803,ExpressionUUID->"b75e73d2-5e2b-1c45-9c12-0166b2284c25"],

Cell[CellGroupData[{

Cell["\<\
With the service connection established, running a circuit can be as simple \
as the following code structure:\
\>", "Text",
 CellChangeTimes->{3.9409522847633953`*^9},
 CellID->1161895,ExpressionUUID->"d44beec6-274a-0848-9829-3fb5c0e31349"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"job2", "=", 
  RowBox[{"qc", "[", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Qiskit\>\"", ",", 
      RowBox[{"\"\<Provider\>\"", "->", "\"\<IBMProvider\>\""}], ",", 
      RowBox[{"\"\<Backend\>\"", "->", "\"\<ibm_brisbane\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940952198127096*^9, 3.940952227477423*^9}, 
   3.9409525273904552`*^9},
 CellLabel->"In[166]:=",
 CellID->327180443,ExpressionUUID->"995641ac-f183-8d49-a546-ba01d176a125"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["QuantumMeasurement",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                9.040095075401478, {0., 9.040095075401478}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 
                  0.}}]}, {{}, {
                  RGBColor[0.982864, 0.7431472, 0.3262672], 
                  EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.099609375}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["51", "512"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False], 
                    Rational[51, 512]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.099609375]& , TagBoxNote -> 
                    "0.099609375"], 
                    StyleBox["0.099609375`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.099609375, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.1826171875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["187", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False], 
                    Rational[187, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1826171875]& , TagBoxNote -> 
                    "0.1826171875"], 
                    StyleBox["0.1826171875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1826171875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{2.5487982520029133`, 0.}, {
                    3.4512017479970867`, 0.07421875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["19", "256"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False], 
                    Rational[19, 256]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.07421875]& , TagBoxNote -> "0.07421875"], 
                    StyleBox["0.07421875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.07421875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{3.5487982520029133`, 0.}, {
                    4.451201747997087, 0.154296875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["79", "512"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False], 
                    Rational[79, 512]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.154296875]& , TagBoxNote -> 
                    "0.154296875"], 
                    StyleBox["0.154296875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.154296875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                    0.1796875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["23", "128"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False], 
                    Rational[23, 128]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1796875]& , TagBoxNote -> "0.1796875"], 
                    StyleBox["0.1796875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1796875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                    0.0634765625}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["65", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False], 
                    Rational[65, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.0634765625]& , TagBoxNote -> 
                    "0.0634765625"], 
                    StyleBox["0.0634765625`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.0634765625, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                    0.1845703125}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["189", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False], 
                    Rational[189, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1845703125]& , TagBoxNote -> 
                    "0.1845703125"], 
                    StyleBox["0.1845703125`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1845703125, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                    0.0615234375}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["63", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False], 
                    Rational[63, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.0615234375]& , TagBoxNote -> 
                    "0.0615234375"], 
                    StyleBox["0.0615234375`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.0615234375, {}], 
                    "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}}, 
               AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0.39075018208302986`, 0.}, 
               CoordinatesToolOptions :> {"DisplayFunction" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& )}, DisplayFunction -> Identity, 
               Frame -> {{True, False}, {True, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{All, All}, {All, All}}, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {None, 
                  Scaled[0.05]}}, Ticks -> {None, Automatic}], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                9.040095075401478, {0., 9.040095075401478}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            TagBox[
             TooltipBox[
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{0.39075018208302986`, 0.}, {8.451201747997086, 
                  0.}}]}, {{}, {
                  RGBColor[0.982864, 0.7431472, 0.3262672], 
                  EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.099609375}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["51", "512"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                    False], 
                    Rational[51, 512]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.099609375]& , TagBoxNote -> 
                    "0.099609375"], 
                    StyleBox["0.099609375`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.099609375, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.1826171875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["187", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                    False], 
                    Rational[187, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1826171875]& , TagBoxNote -> 
                    "0.1826171875"], 
                    StyleBox["0.1826171875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1826171875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{2.5487982520029133`, 0.}, {
                    3.4512017479970867`, 0.07421875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["19", "256"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                    False], 
                    Rational[19, 256]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.07421875]& , TagBoxNote -> "0.07421875"], 
                    StyleBox["0.07421875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.07421875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{3.5487982520029133`, 0.}, {
                    4.451201747997087, 0.154296875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"0", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["79", "512"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                    False], 
                    Rational[79, 512]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.154296875]& , TagBoxNote -> 
                    "0.154296875"], 
                    StyleBox["0.154296875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.154296875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{4.548798252002913, 0.}, {5.451201747997087, 
                    0.1796875}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["23", "128"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                    False], 
                    Rational[23, 128]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1796875]& , TagBoxNote -> "0.1796875"], 
                    StyleBox["0.1796875`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1796875, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{5.548798252002913, 0.}, {6.451201747997087, 
                    0.0634765625}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "0", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["65", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                    False], 
                    Rational[65, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.0634765625]& , TagBoxNote -> 
                    "0.0634765625"], 
                    StyleBox["0.0634765625`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.0634765625, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{6.548798252002913, 0.}, {7.451201747997087, 
                    0.1845703125}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "0"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False]]}, {
                    FractionBox["189", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                    False], 
                    Rational[189, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.1845703125]& , TagBoxNote -> 
                    "0.1845703125"], 
                    StyleBox["0.1845703125`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.1845703125, {}], "Tooltip"]& ]}, {
                   RGBColor[0.982864, 0.7431472, 0.3262672], 
                   EdgeForm[{
                    Opacity[0.644], 
                    Thickness[Small]}], 
                   TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    
                    RectangleBox[{7.548798252002913, 0.}, {8.451201747997086, 
                    0.0615234375}, RoundingRadius -> 0], 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    InterpretationBox[
                    StyleBox[
                    TemplateBox[{
                    
                    RowBox[{"1", "\[InvisibleSpace]", "1", 
                    "\[InvisibleSpace]", "1"}]}, "Ket"], FontWeight -> 
                    "Plain"], 
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False]]}, {
                    FractionBox["63", "1024"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], {}, StripOnInput -> False]], Annotation[#, 
                    Style[
                    Column[{
                    
                    Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                    False], 
                    Rational[63, 1024]}], {}], "Tooltip"]& ], 
                    StatusArea[#, 0.0615234375]& , TagBoxNote -> 
                    "0.0615234375"], 
                    StyleBox["0.0615234375`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[0.0615234375, {}], 
                    "Tooltip"]& ]}}, {}, {}}, {}, {}, {}, {}, {}}, 
               AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
               Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0.39075018208302986`, 0.}, 
               CoordinatesToolOptions :> {"DisplayFunction" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   Identity[
                    Part[#, 1]], 
                   Identity[
                    Part[#, 2]]}& )}, DisplayFunction -> Identity, 
               Frame -> {{True, False}, {True, False}}, 
               FrameLabel -> {{None, None}, {None, None}}, 
               FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, GridLinesStyle -> Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], PlotRange -> {{All, All}, {All, All}}, 
               PlotRangePadding -> {{
                  Scaled[0.02], 
                  Scaled[0.02]}, {None, 
                  Scaled[0.05]}}, Ticks -> {None, Automatic}], "None"], 
             Annotation[#, None, "Tooltip"]& ], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["8", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "2.86882982496739`", "\"b\"", "bits", "\"Bits\""}, 
                   "Quantity"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "}"}], "SummaryItem"]}]}}, AutoDelete -> False,
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Wolfram`QuantumFramework`QuantumMeasurement[
   Wolfram`QuantumFramework`QuantumMeasurementOperator[
    Wolfram`QuantumFramework`QuantumOperator[
     Wolfram`QuantumFramework`QuantumState[
      SparseArray[
      Automatic, {64}, 0, {
       1, {{0, 8}, {{1}, {10}, {19}, {28}, {37}, {46}, {55}, {64}}}, {
        102^Rational[1, 2], 187^Rational[1, 2], 2 19^Rational[1, 2], 158^
         Rational[1, 2], 2 46^Rational[1, 2], 65^Rational[1, 2], 3 
         21^Rational[1, 2], 3 7^Rational[1, 2]}}], 
      Wolfram`QuantumFramework`QuantumBasis[<|
       "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
             Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{3}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{4}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{5}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{6}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{7}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> False], 
             1} -> SparseArray[Automatic, {8}, 0, {1, {{0, 1}, {{8}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 2} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 3} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 3} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[0, "Dual" -> False], 4} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
             Wolfram`QuantumFramework`QuditName[1, "Dual" -> False], 4} -> 
           SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
        "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 1} -> 1, {
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 2} -> 1, {
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 3} -> 1, {
             
             Wolfram`QuantumFramework`QuditName[\[FormalCapitalI], "Dual" -> 
              False], 4} -> 1|>], "Picture" -> "Schrodinger", "Label" -> None,
         "ParameterSpec" -> {}|>]], {{0, 1, 2, 3}, {}}], {{1, 2, 3}}]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940952523440399*^9, 3.9409525302792397`*^9}, 
   3.940952852143837*^9},
 CellLabel->"Out[168]=",
 CellID->21677268,ExpressionUUID->"877c7b55-435c-5e41-8def-6909e4066503"]
}, Open  ]]
}, Open  ]],

Cell["\<\
However, this simplest method requires waiting for the job to complete and \
receiving a response before proceeding with any further computations. This \
will mean your kernel is busy waiting for a response from the hardware \
provider.\
\>", "Text",
 CellChangeTimes->{{3.9409524066112576`*^9, 3.9409524152998686`*^9}},
 CellID->315346468,ExpressionUUID->"6bceb6c5-f7b4-da49-af87-36abee654ac5"],

Cell[CellGroupData[{

Cell["\<\
If you want to do other local computations while waiting for the submitted \
job to complete, one method is to use a separate kernel to send the request \
and handle the response. The following code does this and assigns the result \
to the variable QPU in the current kernel session:\
\>", "Text",
 CellChangeTimes->{{3.940952416785103*^9, 3.9409524227121124`*^9}},
 CellID->107638085,ExpressionUUID->"c16ac3da-384d-4442-a5ea-e1502f61357e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LocalSubmit", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Needs", "[", "\"\<Wolfram`QuantumFramework`\>\"", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"qc", "[", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Qiskit\>\"", ",", 
        RowBox[{"\"\<Provider\>\"", "\[Rule]", "\"\<IBMProvider\>\""}], ",", 
        RowBox[{"\"\<Backend\>\"", "\[Rule]", "\"\<ibm_brisbane\>\""}]}], 
       "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"HandlerFunctions", "\[Rule]", 
    RowBox[{"<|", 
     RowBox[{"\"\<TaskFinished\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"job3", "=", "#EvaluationResult"}], ")"}], "&"}], ")"}]}], 
     "|>"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.940953601006935*^9, 3.940953607472231*^9}, {
  3.9409537401782074`*^9, 3.940953818831024*^9}, {3.940953865992674*^9, 
  3.9409539008391304`*^9}},
 CellLabel->"In[178]:=",
 CellID->212013893,ExpressionUUID->"9dedf13e-24c9-4640-b8c5-f0526bb790d7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["TaskObject", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               GraphicsBox[{
                 Thickness[0.041666666666666664`], {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{8.499600000000001, 
                   7.0002}, {14.499600000000001`, 7.0002}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{9.5004, 8.0001}, {13.5004, 
                   8.0001}}}]}, {
                  EdgeForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.], 
                    Thickness[0.041666666666666664`], 
                    JoinForm[{"Miter", 10.}]}], 
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{8.499600000000001, 
                   7.0002}, {14.499600000000001`, 7.0002}}}]}, {
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{8.5, 7.}, {14.5, 7.}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{9.5004, 8.0001}, {13.5004, 
                   8.0001}}}]}, {
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{9.5, 8.}, {13.5, 8.}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}, 
                   CurveClosed -> {1}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{8.5, 7.}, {14.5, 7.}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{9.5, 8.}, {13.5, 8.}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                   14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                   20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                   9.624400000000001}, {20.057, 8.7184}, {21.959, 
                   8.101400000000002}, {22.317999999999998`, 
                   9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                   22.5, 12.650400000000001`}, {22.317999999999998`, 
                   13.7944}, {21.959, 14.8984}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                   15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                   16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                   20.3906}, {16.782899999999998`, 18.7736}, {
                   18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                   20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                   21.2409, 17.1096}, {19.857899999999997`, 
                   19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                   6.9358, 1.2296000000000005`}, {9.1698, 
                   0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                   11.4998, 2.4996000000000005`}, {9.5958, 
                   2.4996000000000005`}, {7.768800000000001, 
                   3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{16.783199999999997`, 4.2266}, {
                   15.231199999999998`, 3.0966000000000005`}, {
                   13.404199999999998`, 2.4996000000000005`}, {
                   11.500199999999996`, 2.4996000000000005`}, {
                   11.500199999999996`, 0.49960000000000004`}, {
                   13.830199999999998`, 0.49960000000000004`}, {
                   16.064199999999996`, 1.2296000000000005`}, {
                   17.961199999999998`, 2.6096000000000004`}, {
                   16.783199999999997`, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                   6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836,
                    4.226699999999998}, {17.9606, 2.6096999999999984`}, {
                   19.8586, 3.9906999999999986`}, {21.2416, 
                   5.890699999999999}, {21.9586, 8.101699999999997}, {20.0566,
                    8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                   8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                   3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                   6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                   3.5304, 6.911699999999998}, {2.9434, 
                   8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                   21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                   20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                   19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                   1.7591, 17.1096}, {1.0411000000000006`, 
                   14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                   3.5301000000000005`, 16.0876}, {4.662100000000001, 
                   17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                   0.6819999999999999, 13.7944}, {0.4999999999999999, 
                   12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                   0.4999999999999999, 10.3494}, {0.6819999999999999, 
                   9.206400000000002}, {1.041, 8.101400000000002}, {
                   2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                   2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                   13.3764}, {2.9429999999999996`, 14.281400000000001`}, {
                   1.041, 14.8984}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {24., 24.}, PlotRange -> {{0., 24.}, {0., 24.}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"f0815d25-2f7a-4fab-8573-20733fbfff53\"", 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Asynchronous\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    
                    RowBox[{
                    "Needs", "[", "\"Wolfram`QuantumFramework`\"", "]"}], ";", 
                    RowBox[{"qc", "[", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"Qiskit\"", ",", 
                    RowBox[{
                    RowBox[{"\"\"", "\[Ellipsis]", "\"\""}], "\[Rule]", 
                    RowBox[{"\[LeftSkeleton]", "13", "\[RightSkeleton]"}]}], 
                    ",", 
                    RowBox[{"\"Backend\"", "\[Rule]", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"e\""}]}]}], "}"}]}], 
                    "]"}]}], Short], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               GraphicsBox[{
                 Thickness[0.041666666666666664`], {
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{8.499600000000001, 
                   7.0002}, {14.499600000000001`, 7.0002}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{9.5004, 8.0001}, {13.5004, 
                   8.0001}}}]}, {
                  EdgeForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.], 
                    Thickness[0.041666666666666664`], 
                    JoinForm[{"Miter", 10.}]}], 
                  FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{8.499600000000001, 
                   7.0002}, {14.499600000000001`, 7.0002}}}]}, {
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{8.5, 7.}, {14.5, 7.}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}}}, {{{9.5004, 8.0001}, {13.5004, 
                   8.0001}}}]}, {
                  RGBColor[0.537, 0.537, 0.537], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{9.5, 8.}, {13.5, 8.}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{16., 
                   9.}, {7., 9.}, {7., 16.}, {16., 16.}}}, 
                   CurveClosed -> {1}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{8.5, 7.}, {14.5, 7.}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.392, 0.392, 0.392], 
                  Opacity[1.], 
                  JoinForm["Round"], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{9.5, 8.}, {13.5, 8.}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.902, 0.902, 0.902], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}}}, {{{21.959, 14.8984}, {20.057, 
                   14.281400000000001`}, {20.351, 13.3764}, {20.5, 12.4404}, {
                   20.5, 11.5004}, {20.5, 10.5594}, {20.351, 
                   9.624400000000001}, {20.057, 8.7184}, {21.959, 
                   8.101400000000002}, {22.317999999999998`, 
                   9.206400000000002}, {22.5, 10.3494}, {22.5, 11.5004}, {
                   22.5, 12.650400000000001`}, {22.317999999999998`, 
                   13.7944}, {21.959, 14.8984}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.9490000000000001, 0.9490000000000001, 
                    0.9490000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{11.5, 22.5}, {11.5, 20.5}, {13.404, 20.5}, {
                   15.231, 19.903}, {16.783, 18.773}, {17.961, 20.391}, {
                   16.064, 21.771}, {13.83, 22.5}, {11.5, 22.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.929, 0.929, 0.929], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}}}, {{{17.9609, 20.3906}, {17.9609, 
                   20.3906}, {16.782899999999998`, 18.7736}, {
                   18.337899999999998`, 17.6416}, {19.4699, 16.0876}, {
                   20.0569, 14.2816}, {21.9589, 14.898599999999998`}, {
                   21.2409, 17.1096}, {19.857899999999997`, 
                   19.008599999999998`}, {17.9609, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.722, 0.722, 0.722], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 4.2266}, {5.0388, 2.6096000000000004`}, {
                   6.9358, 1.2296000000000005`}, {9.1698, 
                   0.49960000000000004`}, {11.4998, 0.49960000000000004`}, {
                   11.4998, 2.4996000000000005`}, {9.5958, 
                   2.4996000000000005`}, {7.768800000000001, 
                   3.0966000000000005`}, {6.2168, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.7799999999999999, 0.7799999999999999, 
                    0.7799999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{16.783199999999997`, 4.2266}, {
                   15.231199999999998`, 3.0966000000000005`}, {
                   13.404199999999998`, 2.4996000000000005`}, {
                   11.500199999999996`, 2.4996000000000005`}, {
                   11.500199999999996`, 0.49960000000000004`}, {
                   13.830199999999998`, 0.49960000000000004`}, {
                   16.064199999999996`, 1.2296000000000005`}, {
                   17.961199999999998`, 2.6096000000000004`}, {
                   16.783199999999997`, 4.2266}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.8510000000000001, 0.8510000000000001, 
                    0.8510000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{20.0566, 8.718699999999998}, {19.4696, 
                   6.911699999999998}, {18.3376, 5.358699999999999}, {16.7836,
                    4.226699999999998}, {17.9606, 2.6096999999999984`}, {
                   19.8586, 3.9906999999999986`}, {21.2416, 
                   5.890699999999999}, {21.9586, 8.101699999999997}, {20.0566,
                    8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[
                    0.6749999999999999, 0.6749999999999999, 
                    0.6749999999999999], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{2.9434, 8.718699999999998}, {1.0414, 
                   8.101699999999997}, {1.7584, 5.890699999999999}, {3.1414, 
                   3.9906999999999986`}, {5.0394, 2.6096999999999984`}, {
                   6.2164, 4.226699999999998}, {4.6624, 5.358699999999999}, {
                   3.5304, 6.911699999999998}, {2.9434, 
                   8.718699999999998}}}]}, {
                  FaceForm[{
                    RGBColor[0.537, 0.537, 0.537], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}}}, {{{6.2168, 18.7734}, {5.0388, 20.3904}, {6.9358, 
                   21.7704}, {9.1698, 22.5004}, {11.4998, 22.5004}, {11.4998, 
                   20.5004}, {9.5958, 20.5004}, {7.768800000000001, 
                   19.903399999999998`}, {6.2168, 18.7734}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.584, 0.584], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                   0}}}, {{{5.0391, 20.3906}, {3.1421, 19.008599999999998`}, {
                   1.7591, 17.1096}, {1.0411000000000006`, 
                   14.898599999999998`}, {2.9431000000000007`, 14.2816}, {
                   3.5301000000000005`, 16.0876}, {4.662100000000001, 
                   17.6416}, {6.2171, 18.7736}, {5.0391, 20.3906}}}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.631, 0.631], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}}}, {{{1.041, 14.8984}, {
                   0.6819999999999999, 13.7944}, {0.4999999999999999, 
                   12.650400000000001`}, {0.4999999999999999, 11.5004}, {
                   0.4999999999999999, 10.3494}, {0.6819999999999999, 
                   9.206400000000002}, {1.041, 8.101400000000002}, {
                   2.9429999999999996`, 8.7184}, {2.649, 9.624400000000001}, {
                   2.5, 10.5594}, {2.5, 11.5004}, {2.5, 12.4404}, {2.649, 
                   13.3764}, {2.9429999999999996`, 14.281400000000001`}, {
                   1.041, 14.8984}}}]}}, AspectRatio -> Automatic, 
                ImageSize -> {24., 24.}, PlotRange -> {{0., 24.}, {0., 24.}}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Task UUID: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"f0815d25-2f7a-4fab-8573-20733fbfff53\"", 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task environment: \"", "SummaryItemAnnotation"],
                     "\[InvisibleSpace]", 
                    TagBox["\"Local\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Task type: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Asynchronous\"", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Evaluation expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{
                    
                    RowBox[{
                    "Needs", "[", "\"Wolfram`QuantumFramework`\"", "]"}], ";", 
                    RowBox[{"qc", "[", 
                    RowBox[{"Method", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"Qiskit\"", ",", 
                    RowBox[{
                    RowBox[{"\"\"", "\[Ellipsis]", "\"\""}], "\[Rule]", 
                    RowBox[{"\[LeftSkeleton]", "13", "\[RightSkeleton]"}]}], 
                    ",", 
                    RowBox[{"\"Backend\"", "\[Rule]", 
                    RowBox[{"\"\"", "\[Ellipsis]", "\"e\""}]}]}], "}"}]}], 
                    "]"}]}], Short], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->(
    "TaskObject[<|TaskUUID -> f0815d25-2f7a-4fab-8573-20733fbfff53, \
TaskEnvironment -> Local, TaskType -> Asynchronous, AsynchronounsTaskID -> 3, \
EvaluationExpression :> (Needs[Wolfram<<13>>work`]; <<1>>), <<1>>, \
HandlerFunctionsKeys -> {EvaluationExpression, EvaluationResult, Failure, \
EventName, MessageOutput, PrintOutput, Task, TaskStatus, TaskType, TaskUUID}, \
AutoRemove -> True|>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940953942092724*^9},
 CellLabel->"Out[178]=",
 CellID->651246664,ExpressionUUID->"e1a9dc28-f5fa-be48-bb09-b5a465e9b6be"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that the wait time for QPU providers to provide responses can vary quite \
a lot, and is dependent on the queue for the specific backend. \
\>", "Text",
 CellChangeTimes->{{3.9409539882880955`*^9, 3.940953989494354*^9}, 
   3.94095893276375*^9},
 CellID->603804972,ExpressionUUID->"c0d2a15e-716e-1b4f-aa09-c890783a02ed"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jobs", "Subsection",
 CellChangeTimes->{{3.940943187302208*^9, 3.940943194944233*^9}, {
  3.940959017576615*^9, 3.940959018555987*^9}},
 CellID->323336871,ExpressionUUID->"ad8a7f3a-4ecf-9547-b1c0-e60cbd5632fc"],

Cell["\<\
ServiceConnect offers multiple options to explore QPU's requested jobs:\
\>", "Text",
 CellChangeTimes->{{3.9409456808316536`*^9, 3.940945699653442*^9}, {
  3.940946717700527*^9, 3.940946723462527*^9}, {3.940959268547348*^9, 
  3.9409592686384296`*^9}},
 CellID->570973196,ExpressionUUID->"ee78c367-40ca-2d49-8fdf-fd0ced7e2234"],

Cell[BoxData[GridBox[{
   {
    StyleBox["\"\<JobResults\>\"", "Text"], Cell[
    "Specific job result", "TableText",ExpressionUUID->
     "35c238ed-1d74-f640-93b4-1fc26b6d2336"]},
   {
    StyleBox["\"\<Jobs\>\"", "Text"], Cell[
    "Jobs assigned to ServiceConnect object", "TableText",ExpressionUUID->
     "3db6057a-5fdd-3340-a1ce-3d490f6d4bf1"]},
   {
    StyleBox["\"\<JobStatus\>\"", "Text"], Cell[
    "Specific job status", "TableText",ExpressionUUID->
     "abd2271b-624c-8143-a5a4-6c7e6c9591ec"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.9409396574309473`*^9, 3.940939705158016*^9}, 
   3.940940070747511*^9, {3.9409401014356213`*^9, 3.940940433231935*^9}, 
   3.9409406710685825`*^9, {3.9409413355149574`*^9, 3.940941413287798*^9}, {
   3.940941453647318*^9, 3.940941486919325*^9}, {3.940941577392372*^9, 
   3.940941577392372*^9}, {3.940941699075521*^9, 3.940941699075521*^9}, {
   3.9409417412455397`*^9, 3.940941750254349*^9}, {3.940941829781388*^9, 
   3.940941849120316*^9}, 3.940945449983288*^9, {3.940946736753134*^9, 
   3.9409467370727654`*^9}, {3.940951977961621*^9, 3.9409519820474787`*^9}, {
   3.9409520591979737`*^9, 3.9409520810372677`*^9}, {3.940952117422331*^9, 
   3.940952141742201*^9}},
 CellID->806420685,ExpressionUUID->"a0c641ba-ff02-cf43-be1a-979401357eea"],

Cell[CellGroupData[{

Cell["Check all the jobs requested in your service:", "Text",
 CellChangeTimes->{{3.940952025933161*^9, 3.940952055147414*^9}, {
  3.9409585181477222`*^9, 3.940958518538521*^9}},
 CellID->137390902,ExpressionUUID->"8e60a79e-4ad6-ba42-bd63-433871f8ba42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ibmq", "[", "\"\<Jobs\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.940951986259321*^9, 3.940952006739549*^9}, {
   3.940958594529833*^9, 3.94095860763558*^9}, 3.9409590700572834`*^9},
 CellLabel->"In[26]:=",
 CellID->477317118,ExpressionUUID->"a0f226df-c37b-b249-8848-5c08502f184d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "jobs" -> {<|
         "id" -> "cwxv1qp60bqg008pxdw0", "hub" -> "ibm-q", "group" -> "open", 
          "project" -> "main", "backend" -> "ibm_brisbane", 
          "state" -> <|"status" -> "Queued"|>, 
          "program" -> <|"id" -> "circuit-runner"|>, "created" -> 
          "2024-11-18T21:25:50.660009Z", "cost" -> 600, 
          "bss" -> <|"seconds" -> Null|>, 
          "usage" -> <|"quantum_seconds" -> 0|>, 
          "remote_storage" -> <|
           "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
            "", "object_name" -> "", 
            "job_params" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "results" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "logs" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, "transpiled_circuits" -> Null|>, 
          "estimated_running_time_seconds" -> 37.711203451870325`, 
          "estimated_max_running_time_seconds" -> 377.11203451870324`, 
          "status" -> "Queued"|>, <|
         "id" -> "cwxtmkj2ac5g008jjydg", "hub" -> "ibm-q", "group" -> "open", 
          "project" -> "main", "backend" -> "ibm_brisbane", 
          "state" -> <|"status" -> "Completed"|>, 
          "program" -> <|"id" -> "circuit-runner"|>, "created" -> 
          "2024-11-18T20:57:50.995495Z", "cost" -> 600, 
          "bss" -> <|"seconds" -> 2|>, 
          "usage" -> <|"quantum_seconds" -> 2, "seconds" -> 2|>, 
          "remote_storage" -> <|
           "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
            "", "object_name" -> "", 
            "job_params" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "results" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "logs" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, "transpiled_circuits" -> Null|>, 
          "estimated_running_time_seconds" -> 37.711203451870325`, 
          "estimated_max_running_time_seconds" -> 377.11203451870324`, 
          "status" -> "Completed"|>, <|
         "id" -> "cwxt5dnehebg008jmy90", "hub" -> "ibm-q", "group" -> "open", 
          "project" -> "main", "backend" -> "ibm_brisbane", 
          "state" -> <|"status" -> "Completed"|>, 
          "program" -> <|"id" -> "circuit-runner"|>, "created" -> 
          "2024-11-18T20:25:26.850892Z", "cost" -> 600, 
          "bss" -> <|"seconds" -> 3|>, 
          "usage" -> <|"quantum_seconds" -> 3, "seconds" -> 3|>, 
          "remote_storage" -> <|
           "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
            "", "object_name" -> "", 
            "job_params" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "results" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, 
            "logs" -> <|
             "type" -> "", "region" -> "", "region_type" -> "", "bucket_crn" -> 
              "", "object_name" -> ""|>, "transpiled_circuits" -> Null|>, 
          "estimated_running_time_seconds" -> 40.01536867930879, 
          "estimated_max_running_time_seconds" -> 400.1536867930879, "status" -> 
          "Completed"|>}, "count" -> 3, "limit" -> 200, "offset" -> 0|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"jobs"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"count"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"limit"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"offset"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{"jobs", "count", "limit", "offset"}, {
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "id", "hub", "group", "project", "backend", "state", "program", 
           "created", "cost", "bss", "usage", "remote_storage", 
           "estimated_running_time_seconds", 
           "estimated_max_running_time_seconds", "status"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ibm-q"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["open"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["main"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ibm_brisbane"]], 
           TypeSystem`Struct[{"status"}, {
             TypeSystem`Atom[String]}], 
           TypeSystem`Struct[{"id"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["circuit-runner"]]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Struct[{"seconds"}, {TypeSystem`AnyType}], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "type", "region", "region_type", "bucket_crn", "object_name", 
             "job_params", "results", "logs", "transpiled_circuits"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], TypeSystem`AnyType}], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 3], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"jobs"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"count"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"limit"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"offset"} -> 
        TypeSystem`PackageScope`AtomShape[34]|>, 1], "Type" -> 
     TypeSystem`Struct[{"jobs", "count", "limit", "offset"}, {
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "id", "hub", "group", "project", "backend", "state", "program", 
           "created", "cost", "bss", "usage", "remote_storage", 
           "estimated_running_time_seconds", 
           "estimated_max_running_time_seconds", "status"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ibm-q"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["open"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["main"]], 
           TypeSystem`Atom[
            TypeSystem`Enumeration["ibm_brisbane"]], 
           TypeSystem`Struct[{"status"}, {
             TypeSystem`Atom[String]}], 
           TypeSystem`Struct[{"id"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["circuit-runner"]]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Struct[{"seconds"}, {TypeSystem`AnyType}], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Atom[Integer], TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "type", "region", "region_type", "bucket_crn", "object_name", 
             "job_params", "results", "logs", "transpiled_circuits"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[""]], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], 
             
             TypeSystem`Struct[{
              "type", "region", "region_type", "bucket_crn", "object_name"}, {
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]], 
               TypeSystem`Atom[
                TypeSystem`Enumeration[""]]}], TypeSystem`AnyType}], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[String]}], 3], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 4, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["jobs", 
                  Style[
                  "jobs", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["jobs"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["jobs"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 3], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["jobs"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["jobs"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["count", 
                  Style[
                  "count", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["count"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["count"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["count"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["limit", 
                  Style[
                  "limit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["limit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["limit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["200"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["limit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["offset", 
                  Style[
                  "offset", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["offset"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["offset"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["offset"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{88., {59.8544921875, 65.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{88., {59.8544921875, 65.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940951992972033*^9, 3.9409520076089287`*^9}, 
   3.94095844292952*^9, 3.9409585547738*^9, {3.9409585969905205`*^9, 
   3.940958609015209*^9}, 3.9409590738511353`*^9},
 CellLabel->"Out[26]=",
 CellID->828984335,ExpressionUUID->"616826a2-b01b-b74e-8ffb-e8b20dd954bf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Job Status", "Subsubsection",
 CellChangeTimes->{{3.940961019675339*^9, 3.9409610262605495`*^9}},
 CellID->214004947,ExpressionUUID->"a6ae0f87-b060-6c4c-8e71-2fd2bddd5465"],

Cell[CellGroupData[{

Cell["\<\
It is possible to check the specified job\[CloseCurlyQuote]s status during \
evaluation or when it is already finished:\
\>", "Text",
 CellChangeTimes->{{3.940950435624084*^9, 3.940950459235025*^9}, {
  3.940952108416801*^9, 3.9409521105126553`*^9}, {3.9409585293960853`*^9, 
  3.940958550622223*^9}},
 CellID->35547466,ExpressionUUID->"76b2ad19-7622-f24b-acd2-0a61d43960f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jobStatus", "=", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<JobStatus\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<JobID\>\"", "->", 
      RowBox[{"job1", "[", "\"\<id\>\"", "]"}]}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.940950477175398*^9, 3.9409504790673447`*^9}, 
   3.940950552489685*^9, {3.940951200410235*^9, 3.940951206073794*^9}, {
   3.9409587072842503`*^9, 3.9409587148862305`*^9}, {3.9409588685513144`*^9, 
   3.94095887978545*^9}, {3.940959081782652*^9, 3.9409590865845757`*^9}},
 CellLabel->"In[152]:=",
 CellID->277959282,ExpressionUUID->"3859051d-f9bf-4f46-82d5-d286b4b3bcf1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "id" -> "cwxt5dnehebg008jmy90", "hub" -> "ibm-q", "group" -> "open", 
       "project" -> "main", "backend" -> "ibm_brisbane", 
       "state" -> <|"status" -> "Queued"|>, "status" -> "Queued", 
       "params" -> <|
        "circuits" -> <|
          "__type__" -> "QuantumCircuit", "__value__" -> 
           "eJy92AVwlFcYheHdDTTBHYIT3IJL0CBBgpME1xASCASJ4dCZuru7UndXoEK9pe6u1K\
lT2mn37L5LOXSYIaTTfyY8eYE/m92997uZTE7PHJueVTUYqhCIXsHcwkCVvEBC+NPDwx9x/\
HWID12J+iMnvyinNL8kuXufbqk7k/\
ZkpSUnrt9YGIzcFgwWBvwK7vNlAvt82dijVsTDMB4TsBJWxipYFathdayBNbEW1sY6WBfrYX1sgInY\
EBthY2yCTbEZNscWmIQtsRW2xjbYFtthe+yAHbETdsZk7IJdsRt2xx7YE3thb+yDfTEF+2F/\
HIADcRAOxlQcgkNxGA7HNByBI3EUjsZ0HINjcRyOxwk4ESfhZMzATMzCKTgVp+F0nIEzcRbOxjk4F+\
fhfMzGBZiDCzEX83ARLsZ8XIJLsQCX4XJcgSsxth+LsBhLsBRX4Wpcg2txHa7HDbgRN+\
Vop8eFJ0DsGcau/SdAdK8H9/mX/a+MmaOyS3Ij33nsZUlITE7L2pNUaeveQXGgmzOn7725DA8U3O+\
Bdm8pwwMFy/FA4WcUG3mhA9w8YnjG3rvL+rzK9QKW53nxAh7czaHyvPqhcjxQ2V790H/\
0ohzc8zq0B8orTk7J2Bb4397m1EN69QfvSNm+eVeFsnyX5Xmbw99l7G0+\
0BcYn5tdXFoU3TPRCVaGOyIzL1iWO0I5kacUiP7YFP74K3xF/yoQVxgbpbHh/a8fmiL/\
Y0MgPpi9PCe/oCB2yByBR+JReDQeg8ficXg8noAn4kl4Mp6Cp+JpeDqegWfiWXg2noPn4nl4Pl6AF+\
JFeDFegpfiZXg5XoFX4lV4NW7Ga/BavA6vxxvwRrwJb8Zb8Fa8DW/HO/\
BOvAvvxnvwXrwP78cH8EF8CB/GLbgVt+Ej+Cg+ho/jdnwCn8Sn8Gl8Bp/F5/B5fAF34Iv4Er6Mr+\
Cr+Bq+jm/gm/gWvo3v4Lv4Hr6PH+CH+BF+jJ/gp/gZfo5f4E78Er/Cr/Eb/Ba/w+9xF/6AP+JP+DP+\
gr/ib7gbf8c9+Af+icHouOaTUOwTXfH/\
TIKgZ8gzzrOCZ0XPwzzjPRM8K3lW9qziWdWzmmd1zxqeNT1redb2rONZ17OeZ33PBp6Jng09G3k29m\
zi2dSzmWdzzxaeSZ4tPVt5tvZs49nWs51ne88Onh09O3l29kz27OLZ1bObZ3fPHp49PXt59vbs49nX\
M8Wzn2d/zwGeAz0HeQ72TPUc4jnUc5jncM80zxGeIz1HeY72TPcc4znWc5zneM8JnhM9J3lO9szwzP\
TM8pziOdVzmud0zxmeMz1nec72nOM513Oe53zPbM8FnjmeCz1zPfM8F3ku9sz3XOK51LPAc5nncs8V\
nis9Cz2LPIs9SzxLPVd5rvZc47nWc53nek9dOjgjP4AHoueiDsPICRiInnU64HSq6SjT+\
aVDSyeVjiedSTqIdProyNE5o8NFJ4qOEZ0dOjB0Suho0HmgQ0CTX+O+\
RSA62DXNNcI1tzWsNaE1ljWLNYA1dTVqNV81VDVJNT41MzUoNR01EjUHNfw08TTmNNs00DTFNLo0rz\
SkNJk0joYEooNH00YjRnNFw0QTRGNDs0IDQlNBo0D7X5teO13bW3taG1m7V1tW+\
1SbUztS21B7TxtOu0xbS/\
tJm0g7R9tlfiC6MbQbtAW07rXYtcK1rLWWtYC1arVUtT61KLUStfy05rTQtLq0pLSOtHi0YrRMtDa0\
ILQK9Nbr91f63dWmvwG32qT8"|>|>, "program" -> <|"id" -> "circuit-runner"|>, 
       "created" -> "2024-11-18T20:25:26.850Z", "ended" -> Null, "runtime" -> 
       "", "cost" -> 600, "tags" -> Null, "session_id" -> Null, 
       "estimated_running_time_seconds" -> 40.01536867930879, 
       "estimated_max_running_time_seconds" -> 400.1536867930879, "private" -> 
       False, "user_id" -> "673b75a357c30e89607c63cd"|>, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[380.8], 
         TypeSystem`PackageScope`UnknownShape[False]]], 19, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 19], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[380.8], 
         TypeSystem`PackageScope`UnknownShape[False]]], 19, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], TypeSystem`AnyType, 19], "Path" -> {}, 
     "DisplayedRowCount" -> 19, "DisplayedColumnCount" -> 1, "DataRowCount" -> 
     19, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["id", 
                  Style[
                  "id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["cwxt5dnehebg008jmy90", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["hub", 
                  Style[
                  "hub", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["hub"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["hub"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibm-q", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["hub"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["group", 
                  Style[
                  "group", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["group"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["group"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["open", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["group"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["project", 
                  Style[
                  "project", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["project"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["project"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["main", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["project"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend", 
                  Style[
                  "backend", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["backend"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["backend"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibm_brisbane", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["backend"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["state", 
                  Style[
                  "state", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["state"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["state"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"status" -> "Queued"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"status" -> "Queued"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["state"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["state"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["status", 
                  Style[
                  "status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Queued", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["params", 
                  Style[
                  "params", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["params"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["params"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"circuits"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 1], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"circuits"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["params"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["params"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["program", 
                  Style[
                  "program", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["program"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["program"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"id" -> "circuit-runner"|>, ShowStringCharacters -> 
                   False], 
                  Style[
                   
                   Style[<|"id" -> "circuit-runner"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["program"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["program"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["created", 
                  Style[
                  "created", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["created"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["created"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["2024-11-18T20:25:26.850Z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["created"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ended", 
                  Style[
                  "ended", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["ended"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["ended"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["ended"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["runtime", 
                  Style[
                  "runtime", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["runtime"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["runtime"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["runtime"]}, "Item", False], "Mouse"], 
              ImageSize -> {{0., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["cost", 
                  Style[
                  "cost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["cost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["cost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["600"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["cost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["tags", 
                  Style[
                  "tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["tags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["tags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["tags"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["session_id", 
                  Style[
                  "session_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["session_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["session_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["session_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["estimated_running_time_seconds", 
                  Style[
                  "estimated_running_time_seconds", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["estimated_running_time_seconds"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["estimated_running_time_seconds"]}, "RowHeader", False], 
               "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["40.0154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["estimated_running_time_seconds"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["estimated_max_running_time_seconds", 
                  Style[
                  "estimated_max_running_time_seconds", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["estimated_max_running_time_seconds"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["estimated_max_running_time_seconds"]}, "RowHeader", 
                False], "Mouse"], ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["400.154"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["estimated_max_running_time_seconds"]}, "Item", False], 
               "Mouse"], ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["private", 
                  Style[
                  "private", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["private"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["private"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["False"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["private"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["user_id", 
                  Style[
                  "user_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][{
                    Key["user_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["user_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{380.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["673b75a357c30e89607c63cd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][{
                 Key["user_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{268.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "53edfb04-4881-4fd2-9785-f2a7f8fbc5ca"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{664.9, {243.51904296875006`, 248.28095703125007`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{664.9, {243.51904296875006`, 248.28095703125007`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940950559322277*^9, 3.940950768034834*^9, 
  3.940950800892967*^9, 3.940951208673588*^9},
 CellLabel->"Out[152]=",
 CellID->890732860,ExpressionUUID->"dc24c09f-4e6d-f04c-8a68-1dcda708f843"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retrieve the creation time of a job:", "Text",
 CellChangeTimes->{{3.940951242208252*^9, 3.940951328407007*^9}},
 CellID->28765219,ExpressionUUID->"3a6396af-bf4d-a049-b2be-e6fa880fb9d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"jobStatus", "[", "\"\<created\>\"", "]"}], "//", 
  "DateObject"}]], "Input",
 CellChangeTimes->{{3.940951233358835*^9, 3.940951238185112*^9}, {
  3.940951738950621*^9, 3.940951753448229*^9}},
 CellLabel->"In[155]:=",
 CellID->991348585,ExpressionUUID->"0f6197e6-319c-ba4e-a45c-ebf21dd8a3f1"],

Cell[BoxData[
 TemplateBox[{
   RowBox[{"\"Mon 18 Nov 2024 15:25:26\"", 
     StyleBox[
      RowBox[{"\"GMT\"", "\[InvisibleSpace]", 
        StyleBox[
         RowBox[{"-", "5"}], NumberMarks -> False, StripOnInput -> False]}], 
      FontColor -> GrayLevel[0.5]]}], 
   RowBox[{"DateObject", "[", 
     RowBox[{
       RowBox[{"{", 
         RowBox[{
          "2024", ",", "11", ",", "18", ",", "15", ",", "25", ",", 
           "26.84999990463257`"}], "}"}], ",", "\"Instant\"", ",", 
       "\"Gregorian\"", ",", 
       RowBox[{"-", "5.`"}]}], "]"}]},
  "DateObject",
  Editable->False]], "Output",
 CellChangeTimes->{3.940951753704624*^9},
 CellLabel->"Out[155]=",
 CellID->214564197,ExpressionUUID->"72222759-cd16-b84b-8e43-930f98e64e3e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Note that you can see the job status from your ",
 ButtonBox["IBM-quantum account",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://quantum.ibm.com/workloads"], None},
  ButtonNote->"https://quantum.ibm.com/workloads"],
 ":"
}], "Text",
 CellChangeTimes->{{3.9409510515796137`*^9, 3.940951080669588*^9}},
 CellID->348581371,ExpressionUUID->"9c92ed56-99b3-1840-9136-6b2371da4417"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3U9wXNt9H3jVzNTUrGZmxR0WU4UdltykuMOOs0O996SWJYhxkPdAyXFb
FswKakRRtgCVhcShFcKpGJD0VJTwLEgVg7ILFsykAsgRaRtJKFpPKNkBHCGm
6IrV+gPBMVQwKpJ+g4s/3be77+2+DXQDIPH5VB2XTN577rn/m+ed7z3/z8gH
Xxn9X97xjnf8yv+x/39e+Ufjg2Nj/+j/e/X/3v9/3vlLv/KBm7/0xuv/7y/d
euPmG2P/YOR/3f/DG//7O97xN//nO97xv+3/7wAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA4Fz81V/91UEBAAAAAAAAAAAAAAAAAABak80FAAAAAAAAAAAA
AAAAAIBiZHMBAAAAAAAAAAAAAAAAAKAY2VwAAAAAAAAAAAAAAAAAAChGNhcA
AAAAAAAAAAAAAAAAAIqRzQUAAAAAAAAAAAAAAAAAgGJkcwEAAAAAAAAAAAAA
AAAAoBjZXAAAAAAAAAAAAAAAAAAAKEY2FwAAAAAAAAAAAAAAAAAAipHNBQAA
AAAAAAAAAAAAXmbf/va349GjR/HlL385PvWpT8Wv//qvxyc+8Yn49Kc/ffBn
jx8/PlgGAACKkM0FAAAAAAAAAAAAAABeJt/5znfiwYMH8fGPfzze8573xCuv
vFKoJMsm6yR53efPn5/3bgAAcEHJ5gIAAAAAAAAAAAAAAC+D7373u3H37t3C
Wdx25ZOf/GRUKpXz3i0AAC4Y2VwAAAAAAAAAAAAAAOBFtr29HTMzM7kZ2w9/
+MPxpS99KZaWluJrX/taPH369KAk/zv5s+TvkmXy1v/MZz4Tf/u3f3veu/nS
e/PNN+MjH/lIU1lZWWm77o9+9KPMdZOS/F07yTay1k3aBHA5PIvZa1fiypVa
uTb77LwbVcjus6W4PXQt+q/Ut//K6PJ5N42XmGwuAAAAAAAAAAAAAACX2Q9/
+MPY3NyM//Jf/kt873vfO+/m0KFvfetbMTw83JSnLZfL8eUvfzm+//3vF64r
Of/JOsm6jfXduHEjNjY2ergnJFnYrGz0F7/4xbbrJvMb52Wri8x9nGwja92k
TQCXw4uZzd1eHm3O5MrmcgZkc+mK5wtRPv7teXf14tV3iT1fqP2b0KHkZfZ8
5U6MJNd6aSwWn593awAALrfl0eN+rWtxqm65Z7Nx7dL0jy3H6PG+XpuNi9+b
CQAAAAAAAPBi293djT/6oz+KiYmJ3CzfrVu3DuZKNd7+YvvTP/3TeOc731l3
7t7//vfHV7/61fjZz3524np/+tOfHlwjN2/erKv7Xe96V/zH//gfu7gHpMnm
XiTNGb3MkjfWZXm0/bqp0j8wGKOzy/Fst0DTGusemo/2Z7jZ2uTVnmYQdytr
MT85GkPXBupzg30DMTBYisn7j2OjyP5Cow7vr6T07d9jpcn5WNtuVfGLmM19
HLf6Wuz7Sz/2kPMkm0tXyOZeWLK5XA7PY6Fc+/fvyJub590gAIBLTTb3JGRz
AQAAAAAAAM7KV77ylXjf+96Xm+HLKh//+MeNu7+AknPZeK5+7/d+r+vbSeps
3M4f/uEfdn07yOZeLGebza2V6zHbbnrqprr7YnS5w5BrZT6GGrbdtQzi7kbc
vzFQcH8HojT7JFrGJS+t1DX40o8f69CJ76/Da+7Gg7xn4jlnc9NjBouOpVsu
t95f1w49JJvbQ+l8aatSGomRsYmYW1yL53vn3egTks29sGRzL470ueislGPB
PLBtyOZyvva21mNlbiLGRkailPGOn1lYfXHf8QB0KN0v1Re3nhRZZy0mB1L9
QKUHUaiXON2fdMH6jmRzT0I2FwAAAAAAAKDXvvOd78QHP/jBunGaH/7whw8y
lt/+9rdje/swGfXf//t/jz/7sz+L3/7t347h4eG65T/72c+e815w7Bvf+Ebd
uXnPe94Tf/7nf96z7b399tsH2zje3quvvhpf//rXe7a9y0o29+J6Nnuts6xe
KjvYbvnd7Y1YKtfqv9I/GsutwqpZucSrk7FWeG9296voa6qjKxnEyoO40Z/O
Fo7G7PJGVLZro8KS/X18/3ZcT48buz5rDt0msrm5TpXNTUp/jGbeZC9eNjf9
bDos+8+PM2ksyOb2VNFsbl0ZiTsLa7F13m3vlGzuhSWbe3HI5p7A6t3Cx+D5
yp0YOchCjsXiZT1enL29SqzcvVmfx80tpRifW4+d824zB1bvHp2X8kJ4ZADd
9uRWrc92sEifVGNf0pVyoX6htcnadxWH5tv/t4OzJJt7ErK5AAAAAAAAAL20
sbFRl7P99V//9YOsbjt7e3vx5S9/OW7cuFE3h+5PfvKTM2g1eZ4/fx4/93M/
Vz0nr7/+eqHzeVrJNkZGRurywH/913/d8+1eJrK5F1cvs7nH1iavVtfpu/W4
UN3pUngc1dpkXM1Y/9QZxO3lGK3mcvtj6P5Gm3katmP5Vm2frwwaN1RPNjfX
qbO5SbkRD5ouUNlc6IRsbg8VzJfu7VRifWUmxkdqv92G7zx8sXIisrkXlmzu
xZE+F+VLG7btUAfZXDhzO2sxc7P27i6Vp2JhdTN2qvPj7sVOZT1WZsYPc+PH
7/j9h7F87vmTzQV6Kt3nVWAO3Mr8UEO/0EBMtv2A47OYHexS/rUHZHNPQjYX
AAAAAAAAoFeSuVRLpdLhGK7h4Vhd7XxQ7d/+7d/Gxz72sdq43Lt3e9BSivi7
v/u7eOONN+rysX/zN39TeP3kXK6trcXS0tJBSf538mdFJdtKz5/7gQ98IH78
4x+fZFfIsLKycpCRbSzJeWpnZ2cnc92kJH/XTrKNrHWTNnE22dy68UJ9t+JJ
kbonZ2O073id0VhuO/dsJeaHjsc3XY/790/Qzky7sVzuT83rsFFwve393Umv
Z+RQzUbck83NlpHNbXWIdiuPY3LwStM61+835tllc6ETsrk91HG+tBIrE8Mv
ZnZHNvfCks29OGRzT0A2lwvreSyM1fK2Y2+2mQ+3shITw7Xlxx9unVVDySGb
C/RUZT6GivQPH9iNB6WjZa9fj+tF+7J2H0TpeBsDk9H+vzycLdnck5DNBQAA
AAAAAOiF3d3dGB0dPRgv9N73vrejDGeWe/fuVceCLS+/7P8t+2L6rd/6rbo5
TZ88aT0641iSzUwy1XnzqiZ/VyS/mUi2mV53ZmbmNLsEL4Qzyeamx9BcGcwf
e9RQd7ptV9tMjLC7v27f0bL9t56csJ0ZNlJz8Q7NR8EZfI88iVvH8+0Wyhdf
Drsb9y7R+LEOdZjNPbA9Xxt3mDv/yHlmc3dj495gfftkc7ngZHN76ET50p1Y
mTj+jT4cd5/utV/lIpDNvbBkcy8O2dwTWJ2SzeVC2no43vm3NPbfbWPH77bh
6XhRXvEvq9Up2Vygl9J9U+2yqbW+5Guzy7W5cNvNt/vkVrV/+Er54vUiyeae
hGwuAAAAAAAAQC/89m//dnW81ze+8Y1T17e3txcf+tCHqnPwdjLfKqf3ve99
L1577bXqOf3CF75QaL233347Xn/99dxc7nFJlkmWLeKtt96qrveud70rtrbM
28HL7eyzuS3GHjXV/ThuHc+de2Uo5nODsWsxefV4uVI82D5pO5s9udV3VE9f
3Hrc+fqV+9er7Sg9yB491tG4rNR+tR16tbsRy7OjMThQm7/3ILs8MBilyflY
qxQIC2eN9ao8jtnRwRjoq9XZt1/n6OxyPMursnHe1LzStFPpcXvts5m16zn/
WKav+cPN7cazpdsxdC11nPoG4trQ7Zhf225Yezue3G88pv0Hyy7l7nwHTpLN
zcjdXrl2LzbaLNN+rpFKrM1PRmlwoO5cJ/fCQHIN3Z6N5Vb7nLEvbc970euk
5djD3aiszcdkaf8a7U+v0x8Dg6WYnF+L9pd++plVfx52ny3F7aGr1bGedc3I
aH/175M5jm9ci/5UewZHs4/h9pP7Mbp/3PvSy5Ymu3ONUYhsbg+dNF+6tRjj
x+uNL8YL8QtdNvfCks29OGRzO7UVj6aGZXO5gNZiujoH7kSsdDDJ/eabN2Pk
zkKsvRAv95fY1qOYGpbNBXqr1s+a3096YG0yBg6WG4jkc41rkwOF+gY37l0r
Vv85kc09CdlcAAAAAAAAgG5LspKvvvrqwVihT3/6012r9zvf+U41H/r5z3++
a/XSXjpr/YEPfCB++tOftl0nuQ7e9773tc3lHpcbN27ED3/4w7b1/uQnP6nO
yZyUT33qU93YRbiwzj6b2yJjm1F3ZX6olnMrPYjGpGTjMtX5dbuSzV2LyYFT
ztmZHiuVM7dDL7K528u3avP95pb+GLq/0Xq+iYaxXtuP29Q7UI7lrJN0YbO5
2/uHtL9lmwbKy4fX3fbjuHW1Vfv3j+f8RvZGi+pWNrfpWHWWzd1evl04Iztw
40H2fNLnkc3dXo7bTcciq1yL8lKrWbCzs7nb+/vUn/HntcOck83dmI3B3LYM
RLl602zH41tXW7Q7vSy9JJvbQyfOl+7Fo+rcuTdjbrPVoluxvjIT4+WRKKX+
PVAaKcf49EKsPi8+Kd/e89VYmB6P8kgp9W+LUoyMjMXUwmq0rCprXytPY2Fq
LEZK6XYd1lVp16ys+rbWYjFp33CtfaXhZD8XY22rk8kH96KyuhDT4+WGth0d
s7aNS9WUHLNkH1NteqU0HCNjEzG3sh5FmrV697gNx9nDrdg8OKfDtXOad/3s
PY9HcxMxlj5npZEYm5iLR0f7IZt7cXQtm9vRs+V5LJTb5M+6ff+m7V+jqwvT
HT2javdEq9Kc1e30Wt+rZDzz9u+f8vh0LKxWov1ursbdVxqO7c5mrMxkPKdm
VmKzYBbzVM9izsbq3dqcudNrvdnG1v61dPB8T70Lqu+XzULf7ch6v6wtTtW9
M0rD+++MqYx3314lHs003x9jU4vtc8Xdfod37ZmXumdblZZZ3b14vv8bYmps
JIYbno8Tc8Xv89a72/gsO/zdkmyzVKCN2b9NDn8brBRu4OF+Nv5WSuoZGZva
f0Y+L/CMPHLaa7nb77ysZ/dW87M7/6dXzjO6PB7ThZ/RXbqODv4dMBcTjfUM
J++ymVhZ3yp+nuiNpVpfUd+tJ7mLVfvu+m7FwVLL5aP1+iJ/tUrMDx33n7T6
xmNiN54tz0Z56FrDtwevxVC5zbfoGtt4JfXtv/0667611pAlLdoHXNf/1D8a
S41dQSfI5u4+W47Z8lBcG6jlow+/TViO2eVnrfuH6ypKvuWXfOMw/U251LHb
6CQTvRuVx/cPzkO6v63/2lCU7z85+u8AxbO5u5W1mJ8sZXyncr9ttwt+pxIA
AAAAAADgEvg3/+bfVLOWP/7xj7ta92c+85mDun/+53++q/WS70c/+lHdeK+v
fe1rhdabmJgonMs9LpOTk4Xq/upXv1q3XtJGeFmdSTY3PV7o6mTkphcz607P
idvfPP5qdzlGj8dQ9Y3G8m6rujr0LJWnO/F3+VPjh47HkzUu0eVsbt34ravl
mF97FtvHx2V3OzaWJ6M0UBufNNRqsFpdtrgUpSsDcb1hLNNuMo9uaaA25mlw
Nv8cN9bZdvxYb7O5pf19ujJQisnljfpjtFSuyyAPzj4+HN/XdtmrMXmaoegX
YN7crPxpu9I/utycmz/rbG7lQdzo76zd12fzrtSMbO6D/foz6mifzc3KTjeW
w/m+n80OFmj30dzg9JRsbg+dYu7XvZXa7/+xxex3197mYtwZbv/vgpszT9vk
HnZibeZmgX9jjMSdxc3sMf4N+7qzNhM3W9U1cjdWW80z2Fjf6t0Yadm24fy2
pVVWYmqk3X6Wotz2mG3F0yLHbPhOLG62blVddmp9Pd4cy6gn4/rZetrmGO/v
x9jic9ncC+RFyeae+v49UlmZanPfZj+jep/NrcTK1EjbbZTKM/G05YOgId/1
/GHrZ3JpLBZbnvYuPIs5E2szw9XzMdX15+pOrM+N1WXZs+/DDt8vz/efBVnv
l4Z3xoF21/IrN2NmrcVDoNvv8IuSzS30G+L092f9s2z/eTUxXLCNxZ5tI3cW
o+Wls7MWMzcLHKe212CXruUeZ3PX19+MsYx2NW+q2PE9uD9avTy6dR21vU9f
Kfguo6cq8zGU23dVXaiWsR1dOvyj3QdROu7PulegLye37jjsPxpo1/eyv53b
GX1dKXXZ3KVKPLiR8e2/E2Rzt5fLR3MG75f+ocj8DGBHfatJ2wba9zddu539
vcWU3Y37MVSg7+3qrdbH7qiyuD/U+nuJh9+ALJbN3ZgfKtSf2e68AgAAAAAA
AFwG5fLheJx//a//ddfr/su//MvqOI2333676/XTbHFxsXrMi86Zu7m5WWDc
T3ZJ1m0nacMv/MIvVNf5gz/4g27sKlxIZ5HNXZuszQPZMgeaU/fucrk2tqZh
DE5u3d3I5lbnZCgyzinPRtyr5vIGM8dddTebu7vf7MPxVv1D8/nj0LZrY9qS
zPDjvOXqsob9B/PM5lQYS6O1eRduPGgxD8EFyuYmc0/k7VLddddmXN/20mht
rogb2fMjF3KSbO72fO1cHpemOZqLZnP3z2PWWMK25WpMNh6cM83mbsTsYKdt
Pmp3Zpa6OZt7/fr1zDraZXNvjBY7Dldv3c7M/maOIzzxXOAUJZvbQ6fI5sba
TAwfr5sV/Nmvu5ojGL4Tc6ubsVMdwL8XlfWVmC7X5vMansn/mMLzxbHacncW
Yi01d97eTiXWV6ajXJ2LqxRTqxlJgfS+3pmIidLIwTyR6+m6KmuxcCeVaRhr
MS9dY30HWZK5WN3cqeUU9hrb9kqMtco7Pl+MseNlS+WYXlmPSvWg7cXOZjLP
XLmaIRlO8kSZFe3E6t1aTubm3WQ/a+3a29mM1bk7qRzSeDxskYmoZadG9v/9
PxylcjIfXfp8ZrRg9W7t+kjyG3OrsZnel8p6rEwn+3IzJiZkcy+KFyKb2437
Nw6fK9U81kjDM2pvJzZX5+JOKpuU94xqnvezxTYLZXOfx+LY8bOxFOXpjPt3
Yar2XBlulUNO57v2j9vN/fqS+Uc36+t7NF17rrSqryvPYs5A6p4qcF12Jnm/
1O6z7PfeTIxX752xlttP3z8TEzf33y/TsbJeSd2LlVhbuJN6nwzv3zurMTP8
SnXZ9Lbrl52Ilbx7o9vv8K5nMw+OTvPcqS2rTf3uynjvNv7uavl7pO2mUu+K
5L8LjIzHTN1vlsy16rLXjcd7r/q7oN0zPHlG1q6HOwtrqbnS078vjn9PTUX2
o6iL13Ivs7kj5YO5chuf3dnHpZR/fJt++w1H5mutW9fR3tO4W83l3oy7j+r/
HZD8pp1Lv7OLXOP0SLqfNGdu21QOt9bXm8rrDs1HZu/y2mQ105o7J+/GbFyv
9q9ci/L8WjyrfYAvtjeWY3a01m+Y+S26I3V96tf2//fA9bhdV1+zdn3Auxv3
at+JTPqR8zoiC/etbsTs9VR/Unk+1p5tR+2TgxuxPDtaq6tFP2ly7Kpt6x+q
/3ZhMv/t2nyUU32P/S3mRW7qx7uWfFuyUuvLTH9b8uBbkcfLZWdz6/pwr5Zj
aWM7u67j45Cb7wYAAAAAAAB4+SXz5B6PoVhd7f4g2p/97GcxPHw4pjiZn5fe
++hHP1o9p3/4h39YaJ2HDx+eOJubrFtE0pbjdX7t137tNLsIF1ovs7nJ+J6l
cq3+gXKb79Ln1r0dD0q18TOl40kj0+OQGsfmdCObu5TK1J04m5vORGaPu+r2
vLnJ8XoyO9t2roO1yeM5E/qa5yOuNj89b26bzGlqDFzL43WBsrmlVhnihjxr
62U3UvM7j8ZSm3bm6jCbm8xZPJmRSb1+v3GUYvF5cw+un8mjHGrjPMFxfF9f
bdpmq3FtdXnoFmPpWq7T4vzvPrjRnGG9Vj8Wr/F5VC2ZYzqbs7kHz7DSZCyl
56FubnRmtnigNBuPj+ea3q3E49m8uTz6Y2hyOTaON7Cbfaxzx6HSNbK5PXSa
bG563Yzx9NXc282ZyJ+6bjPerM57Nh6LmfnQtYMMzuF25vLH7e8k87mWYmyh
wLy5B9mevEbtxOpULdc68SgnBdFQ38RKiyfBzmoqn5CXg30ec8dZjSQb13I6
s4lq9mgsa5LLvacxPXKUWXmYn3TYSc19PDydn41OzxE6PLHS/plXl8doncuq
z/DK5p63FyKb25X7d7GWPWqZ4U1nybIzjt3O5j6fK6f2s/W8hhPH99nYYvt8
V5ssXm27r8TNuaxvqHXpWcwZSJ/3qejmY3Vndar2/plrcY53UnOs77/TnuYs
WDcHdYt7MZ0LP3gXTeV9m6LItRzdf4efezY3/XtqLOZy53hNP9NuxpvtP5eY
XUvqWfZKeSbWC8xTvvlmbc7tVtfO84Xaub6Z1cDUt2HKcy1+4yRzzZb2f4Pk
HIuuXsu9zOa2uz6Pa03dI62/A5PK3jZtv3vX0dbD8Wr7p1pMZJ/8ph0Zaf27
l957cqv2bb9yVkdPtW+svm+v1o9Ziqwuumezg2360lK54P7RWGrRb1p5cKPa
bzOY039W12917XY8KTAZa8s+4HT29cpg3Ns4/XcPN+5dq/Y3jbbe4bhxPB/u
YHaf3bP7R32FV2/F49yq1lL9o9ejqXuy2vzauWqVf27O8Ga1LZXb7mt1Xg/n
Dx4oL5k3FwAAAAAAALjU1tbWquM+vvvd7/ZkGxMTh+OFf+M3fqMn9VOTZK1f
e+216jn94Q9/WGi96enpE2dzk3WL+MEPflBdJ2lj0lZ4GZ0mm1u0XC1Nxvxa
oQFK+W1JjznqvxVP6vK6/c3Z0i5kc+vGWHUlm5s95qz72dyCUtnj3PmMO8rR
pvKMrbKXFyib227zy+ViGdmDZTs5j/mVdHx/NZcbGWMUO8nmHtp48qTFWLW1
mBxo2G6LA9TbbG5qDN5xuToZeYmv2rjEVucrI5tbetB+7F5WNjdzvd39U93X
dO6y883p3PdxKbe9Fzgd2dwe6lY2d3gm8z6vrMxFi2jogb1UPnQ8K/CS2k6r
DEZH7Z1YaZ0Z23yzNq9YboAuVd/4YrSNFKxNVzMgWTnYdIbhbtu5Jvfi0cTx
v6kmIjN+uLMeCwv52aVDm/HmSOtzmEjPm1skx7O1ON76nDZYm65lKWVzz9cL
kc099f2bvn/yvgmQsj4X4xMLsbaVvdWuZnO3Hsb48XNif4G2T4JHtedndg45
Pffim9Hy9t1bOZg7NPc8dOtZTO+lz+Urd7uYzU3nswvMcbk5FzfbZGSLv1/S
WcU2y+49Sl3LOTnyLr/Dzzub29F7N/WceWX8Yft9z9qD1LNsYqVACn9rsYNt
bsXD8fwsdG3b5Tj5o6jL13JP581t8+xOpK/5Atfz+tx4TCysReNrrZvXUe3e
7u73AeiRVH/kwGTzM66awR1o6Nt5civ6cvtXd1P9xNnZ3cr80NHf98Xocsuv
Dx7Wd6NVP1sn3/6rye07TGdjrwzs71+bHqgifauV+Rg6WqZvf5m2e5z67t2N
nP2pPJiM+TZTzu4+KLXpb34ct/rSffxtVO7X5jrO7E9M9eGNnvhriQAAAAAA
AACXRjJX7vGYjV5lJWdmZg7q//CHP9yT+qn5D//hP1TP5y/90i8VXu/mzdrc
B52WZN2i/sk/+SfV9b72ta+dZBfhwjuLbO7BGKCrQ3F7qc3cG23ytE9u9df+
fig172RW9u2CZnOzqjm3bG6RY3TSHO1Lks092bLXosUUsq2dOpvbv9/OrPF7
nWdz2+xtU33nls3dfRClQhnXI6mxifljBZuzuYXGWWZkc3OHBS41nuv866Y2
N0zxe4HTkc3toW5lc0+T/Xk+V61neKZ13mXkpBO8Nba37b4WyMN0fOxa5WC3
YnE87+/ymni3o/xrbjVT+fmX2qaKZw/rMzXF8hhF5hLlbNTNhVi4ZFwXvczm
nvb+TWeY2uV8C+hmNreWixqOrMdhxtZr+5qZd+tk3s3Uech6pnfrWUzvdev9
3CiVTy323kldUznvtuL3TyUWx4ou2+ZaPlikm+/wTuvrdjY3fZynC/yG2IuV
1PcJTvITotP3dm354ciKNje1sMV3W2p1FfteSKZuX8u9zOYWyA7XfaehSFa6
Xbu6cB3V7u2JOHGTODvpfpmh+ajvkUn1NzUGcFP9P82Z3ie1vGfO3Kr3rx/9
fV+BPGhiufU3DTvpM6xVmdEHvL0co9Vcbl6/XtPG2/atVo7nub3S1/xNy+zW
1frCms5LBzbuVdvWl7XhVMa6Zf9dVrvaZXNLD9pmkAEAAAAAAAAuu3Q2t1fm
5uYO6v/IRz7Ss21w6LOf/Wz1fN6/f7/wesf56ZOUZN2iPvOZz5yoffAiOU02
t/3yu7G9sRTlVIZvcLbFmJt2dW8vxWjflajPqA1F5if4u5DNrcvOdSWbm50X
lc0tWOcLk809xbk5VTZ3IG48yBs513k2d3djOWZvl2JwYKA6Zq5lOa9sbmrM
X7Hj35y7bR4r2LxMoXOalc3NW6/pXBe7ZmVzz4Zsbg9diGxuuzak5jYbnopH
J42hnmtW8FBuBik991jRrGBlMca6kC8skovqLJu7GlMd5EkSsrkXx8uRzW1T
39pMNZPVjYxp97K56Vx70SxTOq+YtU5n+a7avmQ907v0LKb3epTNXZs5nuO8
eCbyaZt5cTu5f062bM43Irr5Du+4vi5nc9O/IaaK7Uv6WVRwldz12x++zr/Z
UXc8GxuYeoYPTz060by/Xb+Wzzmbe5L9adLl62jrYW0O3vLc5qm/g0GvbcS9
vL6+VG63+RtplZgfyulXSvUNZc3FW5cHLprffDYbgy3W6Uo2d/tJTA6mcrlL
BXK5R21r3beaOlY58whnVBqzg52u03nbNu51etzaZXPT+5p89046FwAAAAAA
AKCV//yf/3N1nMX3vve9nmxjenr6oP6PfvSjPamfmt/8zd+sns+VlZXC6z18
+PDE2dxOtvPv/t2/q6537969k+wiR5Kse9b5+OIXv9h23Uqlkns+k79rJ9lG
1rry94d6m809tpEa29Of/63+AnVX5ofqMmpXs8ZbnbidjXWUu5DNTY83GzzD
bO5ubDy+H5OlwRgY6K87ZllFNvdsl811gmxu/8BglCbnY63l8L0OsrnbT2K2
1DhP6wXO5mYcs06zuc1tl8297GRze6hb2dyic72esA3p8f2vvFKK8tRCrDxd
j8rWTvGx/hcqm9uQZUnlTIqfh3RuY65QBrZ1m7qUzU0fF9ncF076XJTbB7Fb
VXRhs7l1eaHT7OOR7mVzU9nXDvKU6e3PNW2/m9ncLj2L6b29ldrc0F3L5qbz
lUW+03CoXQa099ncnGW7+Q7vuL4uZ3NP8BvitM/6zt7bJ3i2tfwtkb4W90up
HFMLK/F0vRJbO0WeRD24ls81m3uy/WnS9esofd5fidLN8ZhZfBRrm1sFzxNn
7cmtvqP+jYGo69qtficx+1uMtf6R+uxorb84Z47Y1Fytxft405nQe9H4tclT
Z3M30v3lR/tUMJrbvm81NY9wB31I6fYVmtL2BG2rbaNb2dw4OL/9qX6zgaHb
cX/pcWxUKrEtqgsAAAAAAABQ57vf/W51jMW3vvWtnmzjOEPYyfyqnEySfz4+
n8mcyEX9j//xP+KNN97oOJf7+uuvx9/93d8V3s7jx4+r637sYx87yS5yRDb3
4jqbbG79eleG5iPzzBWqey0mrx7V0zcay3nja7qRzU3Pj1AgS5jTkFTGr5w5
Fqrr2dzKg7gx0FmuUjb3bJfN1XHOtKii2dxnDeMCZXNlcy8n2dwe6lY2Nzc3
sBdb649iYXo8yiMjUWr3b4TcNuzF5uKdGMlZrzRcjvHphVittBjrf5Gzuat3
CxyDptpquY28rMve81hbnIuJsZEYGS61+feZbC6XI5vbtX080r1sboF7uuX2
29TZhWxuV57FnIGTXUutpe6rE+YZs+432dwuZHPTvyFOUHqfzU1fjycoWfu+
txmLd0Zy1inFcHk8phdWI/tR1INr+VyzuSfbn+ZN9uA62noaM+W835+lGBmb
iLmVzRPNfUwPLNX6RIZSIdxqZjev32htMgYy+ltqfas5872m+2BOks3N6Ic5
XTZ3IAYHM76lmNdn3qht32rrtrdvX94+7UZlbSlmy0NxbWCglnfuoK+wJ9nc
fdvLt5v65Kqlb/94lyZjvvWHDQEAAAAAAAAujXe/+90HYyqKZPo69fd///fx
2muvHdT/7//9v+96/dQrl2vjjL75zW92tG6S5e103E4n+d/E06dPq+t+6EMf
6mhd6snmXlxnls2ty6xlZ1SL1r27XD74Fn6p1WQC3cjmJjnggc7HMdVJ73fO
+KquZnN3l6PcXxt7dLV8Px5v5MwRUOQYyeZeqmzu7oMbTdu/Wl6KjaYLqLm+
c8vmbtxrzsMutaq5OXfb1zSpimzuZSeb20Onyeam59fKmgxvZz3mxtrlQRtK
uzbsbcX6ylxMjZdzsqalKM+sxc6p9/XFz+ZWVqZy83PZRTYX2dyTuFzZ3COn
eRZzBp7HXDWrNxaLhUJF7euUzW1xr8nmttCDbO6Rva31WJmbivHySAyXMtYt
lWNmrfFJJJubvcneXUd7z1djYWYixvK+0zNyJx6e/nXMaVXmY6jan3TcibMR
9476mgbqJtNNW47ylcZlUv23Bb4HeTGyucflesxuPIv5odqfDWVNGNzoPLK5
209i8nqbLO45ZnMP7cbG8mzcLg3GwEBfZpsGSvNNcyADAAAAAAAAXDb/4l/8
i4NxFLdu3ep63X/6p39aHadRJPPH6fzyL/9y9XivreWNt8j3iU98ovCYnWTZ
Tr399tvV9ZO2cnKyuRfX+WRz289/2bru7Xgw2WYsTleyuan5Gq70xa3Hna9f
uX+92o7r97Ov125mcyvzQ6m8YZsGy+bK5jaoXe9HZWAyst/OFyibu/sgSg3H
7Nq9FqPs0vNh5457lM297GRze+gU2dy9lYnq77ixpuDP81gcq/3OG74zF4/W
K7GTNX/ZafLBsRc7W5uxujAV5VQmY+JRxoYucjY3nXM+STa3PFfXxr2nd2v1
vXIz7i6uxebWTmQd/iJZJ9ncy+MyZHO3Ho53Zx+PdC+buxYzw8d1nSSbW465
pu33KJvbpINnMWeidi6HY6bz7r0MW/Fw/HR5xqzPeMjmdiGbe6LfEKfT2Xv7
ZM+2E9nbia3N1ViYKqcyoBNR/yjqwbV8rtnck+1Pk7O8jvbPU2V9JWbGU3Mf
35yLzd5ulbZSedrjvqdqXrcvmj6hVrUbD0oNfUupfp7c/s0nt2pzvJ4km3vt
XlOe8/TZ3MGYPa60rq9qKNrGc9v2rT6JW32nyeZei/qutWcxO1hre//QZCyt
Pcv+FmSbtvU2m9tsd/tZrM3fjusDte1enZTOBQAAAAAAAC63r3/969VxFP/p
P/2nrtX7k5/8JH7xF3/xoN6PfexjXauXfL/2a79WPZd/9Ed/1PH6P/3pT2Nh
YSHe+c535mY3S6VSLC4uHizbqa9+9avVepK2cnKyuRfXuWRz8/J+XcrTdrWu
jcm4etzuvLkXcj2JW9U5bG/Eg6zxStFq3FPmwi3HLy2XOxjf9AJmc1tOhxqy
uS1aVyib2zR/R8bYw0NP4vZAw7Lnlc3dvyvT84sclKt5meKItcmrBTKxsrmX
nWxuD504F7sXjyZq2c+5xsH06fH944ux1ZM2NNYzV6tn/GHzNi9UNrchO7H1
MMaP65pYyczQNqksxljmOumMxnBMt8lkdT2bG6sxJZv7wroM2dz082nkzdMn
gbqXzU3fuxOxUuxBkPoOQtY6Z5XNTWn3LOZMpL+fcbPpJd1u5UpUMk7c2szw
UZ0jUfTWeVq9prLXeTGzuRl1nmc2N/0b4kJmc9PPth5nc1Oez9XaOP6w/oLu
+rV8rtnck+1Pk3O4jiJ2YnXquO3d+o4Ap1H7PtxhFnX3QalQn0ftu4RHGdal
4/6Vgcidbjc9T2/pQeR00dZL52Uz1jldNncgbjfkj5/NDtb6fdr1QbftW033
lZVy+6QbKk3lbxvWSWebr98/Vds27nV63E6Xza3aXorR47xy363IjX8DAAAA
AAAAXBIf+MAHDsZRvP/974/d3UL/Ybmt3/u93+tJ5pd8//Jf/svqMf/Sl750
4no2Nzdjeno6bt68WRsLuP+/kz979uzkmbwvfOEL1fqSujg52dyL68yyuekc
Wt7Am4uYzY3d/apqc4kOzhb9rv72/nr9tTa0CN2mx17lza17rN34pfS8p+3G
N6Xn9L242dx03rj93MVLBeYgls3tIJt7pT+GZh9HpfpTaze2N5Zjcqi/qZ3n
l81Nxm/eaG7P1XIsbWxXx07ubm/EUrmxzrzxjrK5l51sbg+dNBe7tVgbv5+R
va0sjhXP93Urm9su63Du2dzNeHPkaPnhmYZvFqS21/R3OVbv5mROntbyHAUy
MN3P5qYzOFOFMjiyuRdHT7K5WZNl1i98ttncvUcx0cXsaPeyuem/L5pRSuW3
MvflHLK5hXOH9FT6Oi/6XjmytZjMLX0z7j6q1H8rIve9k6f9u+3Fyea2eodH
9595h3tR8P49+3uu0/d2bflTzOvaqdQ5aXqfdfta7vr57+zZvfdoosP9OWm7
eiB1LvwGPH+1LO6VGF1K9Wm2y86m+l6SPpdaX2irvpJUv1jRXGaq32YoYyLb
02Vzs/qA6uemHWzVn12gb7XWvlbzENe1rtYX1tBXlu67btvP3q5tqZxvq/7y
zHadJpsb6eOvXw0AAAAAAABgbW2tOo7in//zf37q+tbX1+O11147qO9Xf/VX
T99ACvnc5z5XPY/37t3rSp1JVrNIXrOIT37yk9X2zc3NdaXOyyrJTyf3bWMp
cq729vYy101K8nftJNvIWjdpE2eVzd1IjS3qzx8PdCGzufu2l2O0v9b+ofsb
beZX2I7lW6m5OQdnc+YePVK5H9erecL8+T7rvu+fM+4rPa6tr1WQNamr/0r7
Y3QBsrnxODU3Q+nB/tHNsXEvlYuUzW1oXVM2NyvnWZt7pF25GpPzkzGQ8XdZ
11JztrT9PnaWR60fv1i85M1VLZt72cnm9tCJcrH187Lefdr8+2/r4XjxfN/a
dG2O3Zw27KwvxMLqTrudOb9sbpEMQ2o/hzMms60ds/1jutruN3V63uKJeFS3
+FrMDBfN123FYvVcdiube5zrKpoRSe+LXMZ561o2N50RH55ukwssMNdyV+/f
9DVX5Jrev6dGRmJqpZI5p3U3s7npeQuH9xdo+yRI5bEmHmW2rqvZ3K48izkz
m2/Wvpc3VvR+rqS+vZHMxVx3ulPvlyLndnMubh7VlTd374XI5nbhHd71Z97R
ckXv39p7t1iuf2f1boxPP4pKofm5m3X8TY3UN12GizUw7o5Px6PMBu7E+sJC
tH8Utcjmdv1a7vb57+zZXZfFL3Q9z8TIyFSsNBzf7l5HlViZe9i+LbK5F0tq
LtuByfsxOZCfg623Vl2279Z8rb+rTaa31ufVF6PL7b73uxsPbhz3wdzInHe2
+9ncfRupuXqvDOb2ExXqW00d3779Zdruceq7dzcadjjdX9i2nz3dj5vZtsdx
67h/u79ATnpjMq62y+ZWHsTkfPucr2wuAAAAAAAAQL1/9a/+VXUsxac//ekT
1/Otb30rfv7nf/6gnne/+93x/e9/v4utpJXHjx9Xz+Ho6Oh5N6fJG2+8UW3f
n/zJn5x3c6AnepvNTebYXIpyKhPYP7qcn628qNncxMZ8DKWyrFeujcbs8kZU
tmtjlZJ5OR/fvx3XB1LLDU7Gk9wdrq4Zy+XUPKRXyzG/VknN9/ks1ubLcS3J
Nd+qjZPKHN60uxzldOa2vBQbDW1cnh09GL81NDlZHaN11tncwcJ1HtWbyl32
D03GcsN8qMuTpRi4MhS3qvOiyuY2Ss+pnJvzbLh+csvB/BmpsXRtsrnx5Hb0
9zSbGw0Z+iKlP4Zyx+3J5l52srk91HE2txIrE8PV3+RJdiwzGrH5Zowc15sx
r27V3mbMjdVymVlteP7wzlEe5mbMPG2R83w+V92XzNxHL7O57XJPScakmpcd
j+y46vOYq87JdjdWW+xqZWWimhEaW2zc7t7+OaplpzMjREe2Vu/WctFdzObG
3tPU/o61XGenrg1yGeete9ncJMpWe1ZMrOSHqJ7P1bZ5NtncZJHFGDuub6xV
jmlr//ofrt5PWd8i6Go2N9LHI8npt3wQxMTxfTa22JV8V6tsbteexZyh9Lca
hvfvwzbZqvQ1lfl+SZ7ZU7X3z9xmfn58Zz3ePH6/77/TMm6dAxcim9uVd3iX
n3mHe9HB/bsZb94s9hsi2ffq82/8YZzka4onme++lhVv82xLnuFjqeNdqf+7
h3eOjvPNmWj9KGo9D3m3r+Xunv8Os7lJvYtjxa7nrdT13LQ/XbqOdvafPUf1
DN9ZjM38gxurU8Nt7y3OUi1je6W//6jfKO8bavWqfVzV9Ypkejfi3nG/Zf9o
LLXor608uFGtN2/+2p5kc5NW3kv1AQ3m9K8W7K+t1dUfo613OG70t9jmWur7
fNfv5z/Ld/ePcfrbeblz+tbm4W353wrqvveZ3d+8/fjWUXa3zfc009+8bJgX
GAAAAAAAAOAym5ycrI4D+af/9J92NIZ+d3c3fud3fqc2PuWovP322z1sMWk/
/vGPq/MVJ+Xb3/72eTepamNjo9qupI1F5meFF0Or+TNbj3U5kJEdLFr6h+Zb
zx97kbO5ie0nMVsaKLy/SS62+DifjZgf6m9Z3+DsRt1+5Q692pitzcObUwbK
ybin7XhQapOr7EU2t8U1mLuJ7cdx62rrnOXo8nZqXJxsbpPUfBmtcp67G/dS
c3RklP795Y8GzaXH0rW+37b3dy3/+u5KNvdgM8txu8jzbf/6uL3cKjQvm3vZ
yeb2UMG8295OJdZXZmJ8pPbvtOE7rebCeh6LqcztyJ2FWEtNqpWub3hmLqaH
89uQZDdHXknXNRermzu1DMXeTmyuzsWdVBY0I07U22zunamYGi5FeWqhoW3J
fk5HuVQw/5PkBY+XLZVjemU9KjvHte3FzuZqLEyVo3R8DnKy0XtPU3nXpJ5H
m7FTa1SqnvGYe/N4jrQuZnOjMXM7EnfmVmMzvS+V9ViZTtowFnenOs/40Bvd
zObW5V9fGW6+Bvavw7k7I1Ean467ndxv3bh/4zDHdHwvvXJzKhbXKrX7ZP+5
UllfielyqfbMy7nfnnY5m3v4/Dze7v5zZXol1iu158rezmasLkzVnitJfio3
Bta9bG7XnsWcrYa87cj4TKysV+rfCcnzeGa87vzmfnsjydLdHWlxHTT+Xmj9
fYYLkc3t5ju8W8+8A087y2ems5L77/6phfT2j54dc3dq53n4Tjw84T16kmxu
feY263gfPUNGUsewqYH111/z74vaflZ/g+R+u6C713J3z3/n2dz6d8crcXNq
cf+3d/rd0Xg9JxnpjLu8K9dRfVuaf9Mmh3f/uXO3Nrf38N2nbeeK52w0fUeu
r8A8qpHM8Vpq6CcZiMkin+io6zO9FuX5tXhW/aZh8o3J5ZgdrfXBtMqN9iqb
W5chvpKTDS7cX7sRs9fTfdXzsfas4XuHR99wbOzza9hgXUZ2oDQbjyvpb0Em
35U8/F5l/63J2rf88juvGzK39d+p3K8wNpYno5TUNzoapepyGf3Njf3gB3U9
i9qnKnejsjYf5Wq/cn+U286bDAAAAAAAAHC5fPzjH6/L1v7mb/5mfPOb38xd
PpkX93d/93fjfe97X3WdZL5c+dzz8au/+qvV4/7WW28VWieZ6/j3f//3D+ZO
/uhHPxof+chHWpZkmWTZZJ2/+Iu/KLSNz3/+89V2TUxMnGYX4YI562xuXwwM
JnPMPsv/bn1G3Rcym3tkt7IW85OlGBxozBru7+u1oSjPLsfGiYb47Mazpcko
DQ5EXypzem2oHPePJ98tks09qOrZwdiq+jb2N5+L7cdxe7A//1j1JJu7r7IU
5cHmeVxbb2I7ntwvx9C11D71DcRgaTKWnu0eNVc2t6X943576FrDHLYZOc/t
/Wv89lBcS89D238thm4vxbO6a3s7Ht8eTF2vre637diYvx1DV4ud95PnUQ/H
3E2WBmOgbh7d5PovxeT8WlTaP4xkcy852dweapg3rlgZiTsL6zmZnZRknrmR
1nWVjvIStbnUsrN3O+sLqaxGi1Iai7n1nJb1Mpu7X9/e5kItV5tZsjImGSor
MdV2X0tRnnmaPx9xNOQOc87jQSZjZyUm6v68Ocd0kmxuYuvpTNws0IaTZXzo
ha5mcyOZOq/NNXCQK+38fmuzF4WyuYnKylRdHjGvjEyt5H7jZ69h7udqydh2
8Wu9EitTI23bVSq3njeym9ncRFeexZy9nfVYuNP+eir+jt+J9bl275j9MnIn
FvMnzDxwIbK5XXyHd+2Zd2AvNW93fcl9Phf6DVHk2dHayd/bxZ5tSZYzf37u
/etv4U6hZ3dpbC5aP4q6dy0f1Na183+SbG6i4PHdv8+nWs2j3ZXrqBKr0+X2
x/aV1u9Yzl5TxrZoJ1jj9+cKZnoP130QNwauNPVNNZZrt1vN59rLbG4kE96m
+pcGY7bpY5cbMZnxDcPsdlTiwY0C35q8djsnl3tkeznK7Y7b9dmD73KuTV5t
f153N+J+m+9UHtaX6qPL629O+pkLfatvIG488AQAAAAAAAAAyDI/P980zuL1
11+PT3ziE/GpT33qIPP5yU9+MsbHx5uW+4Vf+IX4zne+E3/2Z39WG+tRKsnn
npHFxcXqcR8dHW257M7OTvyzf/bPCo7vyy/JtZDM2dvKG2+8UV3+K1/5Sjd3
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAOCy+r9GfqYoyiUuAAAAAAAAAAAAAAAAAEBx550LVBTlfAsA
AAAAAAAAAAAAAAAAUNx55wIVRTnfAgAAAAAAAAAAAAAAAAAUd965QEVRzrcA
AAAAAAAAAAAAAAAAAMWddy5QUZTzLQAAAAAAAAAAAAAAAABAceedC1QU5XwL
AAAAAAAAAAAAAAAAAFDceecCFUU53wIAAAAAAAAAcFn91V/9laIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIo
iqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqIoiqJ0rQAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA/z97d/sjV3nfDfxPuN9tAAvjWJiCDIikPKiWUUApyImNSogA
EZQqhmKRAKpDbfEQJU5ECbXbYhQHI6dOEyQSJCBGgFMaiAsCEmBrU2RTwK1x
WAQUYwgOrlkVyFz3/MY7u2fOnJk5Mzu7s8afj3Tk3Z3rXA9nrnOGF3znBwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAANDBlmVpaGiodsy/acegZwMAAAAAAAAA
AAAAAAAAADPWUyuOHsvmHp1WbB30bAAAAAAAAAAAAAAAAAAAYKbamlYcfbBm
7tDRK5JoLgAAAAAAAAAAAAAAAAAAtLDjpjR/aCybu2zLoGcDAAAAAAAAAAAA
AAAAAEyFNyvp1Msq6f/FcWulZbORe8faVI+lz07j/D4B+nntHr11oq/1b/Zn
fjNayf05E4xsWHAwl1s9Lt40OujpAAAAAAAAAAAAAAAAAABTQTZ3ysnmTsIh
k83dk+4+f6xm7tD56e49g54PAAAAAAAAAAAAAAAAANCsktavnMhqxrF8e5dd
yOZOOdncSThUsrl77k7nj9XMHTr/7iSaCwAAAAAAAAAAAAAAAAAz0K5KOumy
xmzu0B1d5hdlc6ecbO4kHCLZ3NFNF4/VzB1KCzaMDHo6AAAAAAAAAAAAAAAA
AECBnXdmcrnLJv59sptOZHOnnGzuJBwi2dwty8Zq5g7NTzftGPRsAAAAAAAA
AAAAAAAAAIBmlbRq+VhmcVUlPdmQ/+wiwyibO+VkcyfhkMjmbk0rjh7L5h69
ovobAAAAAAAAAAAAAAAAADDjbK+kobHM4ud/WWnMMK6upNGy/cjmTjnZ3Ek4
FLK5O25K84cOZnOPXvHUoGcDAAAAAAAAAAAAAAAAADSppCfvmMho/njvwb+t
Xznxt/sOlOxKNnfKyeZOwiGQzd1x0/yDNXOrx7Itg54NAAAAAAAAAAAAAAAA
ANCskpYvG8srrqqkt8b+ms2AXvBYyRzjNGZz3/rlRB/Lt7dvO3xH+Qxqtu2j
bdqNVte6fl11vVdNtP9/1et4avUarn+2XK3h5mxsJW2vXuvFmVx0/jqWvnYj
lbTwsom2t+5qfj96yeb2Y90HVffaS5V0ffW8ecsm29fB/nY+Vd2rN07UgI5j
XvX3VU+N9dVFNnd0byX97M7qNVyemVv1mF39ffHG6vu0dyqyvSNpw4KhsWzu
xWlTdxcAAAAAAAAAAAAAAAAAAJgOz07kDj//y0zeMJtjzGR225rOurmZsU79
ebucZCWtyuQrT723ZNvVrbKhlXTfrY15zcJjZSU9uq99frMhG/tSdewbC/rp
JZs7Un0vM3nX5duL59FdNrd/604fVtKP/7ZEX8tL9BWqbZYv79BX9druHCmz
P6vtHqmk2Z3mFntpYyXt6zy78vbcnc4fq5k7dP7daU8/+wYAAAAAAAAAAAAA
AAAA+qDSkM/88d7G19avbPVaC9OZzc3maNtlh7Nz6tR2XyUtHmu3+JGi+Vev
SSY/e+q6Str+5kSGd/RA9XpW13ZqPRd7VfX3A61XkL32p648mGuNerH7PpzE
tauuYelV2Tat+yqfze3nuhv7WnxnJe0cz99WDtarXZd5v6p9Dbeb2oHG9c77
2+rYI41zi1rEMbeTVnfen6PbMrnc6v7anOkrMsU7q9fzgsx47XPh3RnddPFY
zdyhtGDDSN/6BQAAAAAAAAAAAAAAAAD65EAlfaVNZjWbA22oqdvKNGdzs9nS
R1u0euuXzfVOf9ai2OnoYxNtVu1qHm/nzzPzfqrN9dhbva71/OaNldQqZZmd
/9DqcrWJ2167XE617RxT2Wxun9f95kRN31b1fGPM7XeW2XvV9z2T413YriZy
7toU78/q3lg19np1jpvb5Ivvq75f89b1s27uaNr0l2M1c4cWJNFcAAAAAAAA
AAAAAAAAAJh5Rp/qkH/MZm1Xts6YFraf8mxuY5Z2+faiFhNZy3l3VNIFY20v
eKx4bsN3TOQym2q17p2oqTt0a6aWaqu5Za7tV1rkWbPZ2OYscLGW1+5AtY9M
PdrPt8upFozfMps7BeuOPlcV1iXOODDxfrWsdVzt5/Nl6iHXba+uoUM2d2mJ
/Vtv219b0rKxmrlD829KO/rcOwAAAAAAAAAAAAAAAAAwWQdrf7avJVtJ61d2
kR+d5mxu2jeRGz21KIuayXdGjdbxmqirizKm1fUtbz33bP3d4hxwc39LO+RG
y9WtbVR87arnZ3K5bevHdjn+VKy7nEq6tb73irLSMbdHytcIrum4PzNzL9wj
U2jrinT0WDb36BVbp3NkAAAAAAAAAAAAAAAAAKCMTK61XYYym8086c4O+cfp
zuZms8NFa3h2Itv5ZG7cRwvmvrBlXd1Mrrd63Heg5NxubH9Of7K5jRnrhT8v
nyntPP7UrLucxlx40/tVfX1zt9evRDY3u95bd/W7Nm5rO26af7BmbvVYtmXa
hgUAAAAAAAAAAAAAAAAASspmbhc/0iaDuLeSPl/PMy6vpLalU6c9m5vS9jtb
5TcrE9nT+lwy88vXgB19rF0N4Wr7Ze1yosWy2ddbR9q/3ls2t9LQx8HaxuXz
pGWyuVOx7nI6Z3Ozr/cnm1u1vZJmZ67nvFWV9OOnKmnnvkra92Gva+lkJG1Y
MDSWzf3LtGlaC/YCAAAAAAAAAAAAAAAAAJ1V0o9Xtcuitm67alebpgPI5kaW
cqhwbhO50ok6uNU2yw/+beiOxvk9uq5d/rg6z8sml1EtWudks7mnZurTjh9X
VdJwD/Nrlc2dinWH0b2VtLm6lsUrK2nesoJ15I5py+ZW+923rdqu1Zyqf1+4
unrP9LOm7siGtGCsZu7QxZtK1z0GAAAAAAAAAAAAAAAAAKZJNqPY5ZHPtLbs
d7qyuQcq6YJ6VvXezJi7KmleQfZ4+I6iDG4l3bqy3fpmZja3fnz92crEuqrH
7HbvUVfjT8W6q3O9s3hvzYxs7kT/O6vX9frV1X10VfGc5v1ttU3Ja9LOnrvP
H6uZO5TOv3tPH3oEAAAAAAAAAAAAAAAAAPppZw/ZyGzd0CdbdTyIbG6qpJ/V
6/qurozXHB0fY2UljWSbP1uQ59xXSYvH51OczV2eqaPaS0b11pH2r/eazR2f
74FK+nomQ7p8e+d8bplsbr/X3TD/6nxXPVV9f/YVX/Ns9nb6s7nN441W57n9
sUr6fOY6n3TnZOvnjqZNF4/VzB1akDYU7BMAAAAAAAAAAAAAAAAAYJAqadXy
iWzhfQfKnXPf6hK5z4Fkcxv7e3RsvvW87rx8dvJAJX1lrO3iR8Zee7bT9cjk
f7u4ZutvbH/OZLO5FzzWuLbRbZU0O5N7He7QV5lsbn/X3Zj1/fHeDv10yOZu
7vb6TSqbm1HdQ0vr61jW+Tq3tyUtG6uZO/SnN6X/mlRfAAAAAAAAAAAAAAAA
AEDf7aqkefV8YqbObCejT2XqnbbKNQ4om5td06pdqZadvCD7e4NMznhs/dvr
dYRXVdJbJea8fHuZSVXXdln7fiebzW2+dpX06LqJ12eva//+lhm/r+uu7o+F
9dfy9YwL+mmfzU3prUcy1+KpElnbfmVzU+O1K1tPuNBTK9LRY9nc+TftmNSc
AAAAAAAAAAAAAAAAAID+G75jIlP4lTJ5xrpMvdmWNVQHlc3N1GNdWO17vA5u
i5qm2Uzno5k6r001drP2VtLisXOGbu2cac5mmVtd5/5nc9PBmq5XTbT5+rbW
ayo1fj/XvW+irzLZ3GyN3cL8a3Vun++Qf241t5b7s9rnqkc63xf9yuZuXXH0
wZq5Q0enFVsn0REAAAAAAAAAAAAAAAAAMAVK5B3bnJvNIxbmTQeYzR2f2+rq
z3d0mENmnsufnaix274ubCXt/HnJOq17q9enno+9sXUGdUqyuVX7qnMbqr8P
1Xk8WpSjLj1+P9ddSauWT/T1473lxmy9VxvrBNdy2a3kMstFe2Pf9ko6aez1
xb9sk0OOvur3UYlMcGs70k3zh8ayucvSlp77AQAAAAAAAAAAAAAAAACmxPZM
ZrNNdralZzPZxtUF2cWBZXMba+GeNJb/vOCxVnOYyIjOWzlxTTpnlSdq7MZx
6rpK2v7mxHUYPVDto7q2U+u5zTa52DBV2dyY5+ZM37PXFedMy4/fv3Vn5x/t
1m/PzO3DShp5qZKuX3XwtVWZGs8t35tc5nbe31bbjjTObftjB+e28NYO+7N6
3ucz2fWo7fuz6nz2fThxHd6q/v71TL64XV3ijkY2pAVDY9ncizd1rEkMAAAA
AAAAAAAAAAAAAEynSnoyk3Vcvr2XTGFj3d2f7Wt+PVsXtWWGdNdEfdLOtVFL
yuaCx4772uRit9+ZG78oa1yo2u+tzXNvOlZW17Ov/TWeumxuaqztWmvbPJfR
p4rnXVznt1/rbqx1W3hU571+pFK4Twr3SHW85QX7LnvMq465r0x2fG8lfX1l
iXVWj6+0zH6Xs+fu88dq5g6lizdJ5gIAAAAAAAAAAAAAAADAzFJJSzPZxyd7
7COb7/38LwuyiZFtvLExw9icIa2kt56qpIXLSuQuu5hbQy54VXWMds2zNYSr
x+JHustZjr5ZSevXVdKpmZqtcV1PrY67/tlyOd8pzeZW7XussUZtcy3bShqu
9jcvVyu2OJt7UD/WHePu23WwPm527KFqn4s3VtL28WxvJe2svi8nLSuzR6pt
q3vqghsz72v1vHnV339cr81bsq5zvT7uqtXV869q3KOzq3vsgjuzc+zVnnT3
+WM1c4fOT3fvmWR3AAAAAAAAAAAAAAAAAADwSTW6KV08VjN3aMGGtnloAAAA
AAAAAAAAAAAAAAA4rG1ZNlYzdyjNv2nHoGcDAAAAAAAAAAAAAAAAAAAz1tYV
R49lc49OK7YOejYAAAAAAAAAAAAAAAAAADBT7Ug3zT9YM3fo6BVJNBcAAAAA
AAAAAAAAAAAAAFrYcVOaPzSWzV22ZdCzAQAAAAAAAAAAAAAAAACAGWtkw4KD
udzqcfGm0UFPBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAJiEDz74IP3kJz9JS5curR3x8//93/8NeloA
AAAAAAAAAAAAAAAAADDjXH311WloaKjhuOKKKwY9LQAAAAAAAAAAAAAAAAAA
mFE+/vjjdMQRRzRlc4888sj00UcfDXp6AAAAAAAAAAAAAAAAAAAwY4yMjDTl
cutHvAYAAAAAAAAAAAAAAAAAABwUdXPnzJnTlMs95phj0h//+MdBTw8AAAAA
AAAAAAAAAAAAAGaUW2+9tSmb+4Mf/GDQ0wIAAAAAAAAAAAAAAAAAgBlp06ZN
ac2aNbUjfgYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAODw9r//+7/pL/7iL9LQ0ND48a//+q+D
ntZAxfqz1+Oqq64a9JT66gc/+MEnen1MvTfeeCOdd955tf0ze/bs9JOf/CRV
KpVBTwsAAAAAAAAAAAAAAAAAppxsbjPZ3E+eDz74ID344INp6dKl6YQTTmhY
f/wef4/Xo92hPu7HH3+cdu7cmW6++eZ01llnpTlz5jSMG7/H3+P1aBftu3XD
DTc09HncccfV+mLy3n333bRhw4a0aNGipvfuM5/5TLr66qvT8PBwT+9bO++/
/36666670pe//OU0b968wnEff/zxvo8LAAAAAAAAAAAAAAAAkM91TuaYjoys
bG4z2dxPjsgR/uIXv0hz584tdc9Fu2g/2fzhIMaNurVPPPFEOu2007p6zkT7
OK+burexZ7J9HHPMMen555/vee4crEV8zTXXlH7fItvdj70aufB169alo446
asr2CwAAAAAAAAAAAAAAAPDJFDmjqFf41ltv1Y59+/b11M/mzZtlcw9xsrmf
DAcOHEjf+MY3err34rw4/1AZN/KVK1asmNTzJs4vW79X3dz+iqzr8ccf39P7
FnneXvfqnj170nnnndfTuGvWrEkffvhhn68EAAAAAAAAAAAAAAAAcCjJZ1R7
zSvmc4+yuYce2dxDX2QGr7322kndf3F+t9nDQYzbjzG7HTtqvNYznbNnz04/
+clP1FHtUXyfQ9mata2OXjLdf/jDH9KXv/zlSY0b9Xa97wAAAAAAAAAAAAAA
AHD4ks2Vza2TzT303XPPPYX31De/+c300ksvjedP49/4Pf5e1D76menj3n//
/YV9nH322emBBx5Ib7/99nh+Mv6N3+Pv8XrReZEVZXps3749HXvssaXeu9gz
r7zySlq7dm2aO3fupHKy0e6WW25p6iMywqtXr06/+93v0scff1xrOzo6moaH
h9NXv/rVpvazZs1KTz/99JRdHwAAAAAAAAAAAAAAoLX4////6q/+Kv3Jn/xJ
7YifX3311UFPCzjM9Cube8MNN4z3cfLJJ9fqS85ksrnNZHMPbZFnXLBgQcMa
TznllPTcc8+1PS9ej3bZ86Kf6G+mjhu1TxctWtRw7qc+9al01113jWcrW4nX
N2zYUGufPT/6i36ZWh988EG69NJLe3rv3n///XTllVc2nHvMMcek559/vtTY
L774YlMm+JxzzkkjIyMtz4k878MPP1wbJ3veRRddVFsLAAAAAAAAAAAAAAAw
vb7whS801eFavHjxoKcFHGb6lc2N8+p9fOYzn0lvvfVWn2faX7K5zWRzZ5Yd
O3Y0ZV7b7dONGzc2tIsM4rZt20qNFe3ymcXor4xBjPvMM8+kI488suG8qIc6
mfqpUQs16qQytR5//PGmXHS852Xfu3h2X3LJJQ3nX3fddR3Pj9ejXfa8M844
I7322mulxn3ooYea5r1ly5ZS5wIAAAAAAAAAAAAAAP2xb9++pqxNHEcccUSt
JhjAdJmKbG7UIXzvvff6PNP+ks1tJps7cxTVhW23T4va33bbbV1lVaN9t3Vk
BzXuT3/606Y8cNRE7UZRDdV77723qz7oTlE+tpf6s/n3Lmq1v/rqq23Pidej
XXbs+++/v/SYH374Ybrmmmsazl+2bFn66KOPupo7AAAAAAAAAAAAAADQu1bZ
3KjHdeDAgUFPDziMRH3bqHM7mbxiPucaP8ffZjLZ3GayuTNHUV3Ydvs06r1G
3ddusop5+eximTqygxo3/14uWbIk7d+/v6txo32cl+0n+mXqvPPOO2nhwoWT
zkNHHnbp0qUN/Tz88MNtz9m0aVPXGfC8fux3AAAAAAAAAAAAAABgcr7whS80
5W0WL1486GkBh5GoA5ivP9mPbO4ll1ySRkdHp2DG/SOb20w2d+bI35ed9ml+
bb3U84z2cV43WdWZMm4v3wdQ9AyQzZ1aL7zwQvr0pz89fr1nz56dnnvuuZ76
Wrt2bcN7d8MNN7RsG/V68zVv16xZ0/WYRXWiO2WCAQAAAAAAAAAAAACA/nrl
lVfSGWecMf7/9sfP//3f/z3oacGMFdmaXbt2pe9973vp9NNPr9WZrt8/c+bM
qeVlNmzYkN599922/bz55pvps5/97Pi5UcMvavmVFTmcXrNc+XzQ/Pnzx2vu
RU722muvbeg7nguvvfZa6f7Dtm3b0rHHHttQg/KJJ54Yfz2faSt7tMutvvfe
e+mcc84ZeOZx9+7dtf1x2mmnNcw9fv/+979fqxFc10s29/nnn0/HHHNMyzxg
PMNXrFiRTjrppPE2sU8/97nPpdtvv73j3iwj9tDLL7+cbrzxxqb7YN68eemi
iy5KDz74YPrggw+67rtdNjfG3bp1a7riiitq49TbHHXUUbV775577ulL3fep
XF+nbG6792/dunUN+6dXcZ8/9thjtet4wgknNMynvr4HHngg/d3f/V3p50tR
DdHI9vYinwmOfltlbQc1bli/fv2UZHOj33by90iZcWOftXrOxD7+53/+53Tm
mWcWPjPef//9lv22uifLnl/v47rrrmuYX9SX7UU+Yx11n5988smGNo8//njD
WFF39o033uhpvM2bNzf01e47IfKfUXHEXHoRGeBsPzfffHNP/QAAAAAAAAAA
AAAAAL374x//mF588cXaET8DxSKrd+6555bKkEZW8Ic//GEtA1cknyeLrGVk
LsvK53K6qREbGeDIArc6N3K42cx+HJHXbbWWvKjpd9555zWcH5nCyF/VTUU2
NzKLn/nMZ8bbLl++vNR8+2XPnj3pa1/7Wqm98aMf/Sh9/PHHfc3mRn+RC8/m
SDuN34tu7oO5c+emX/ziF12N1SqbG/nBb3/726XG/NWvftWw32bS+lplc2N9
3/3ud0uNG/d/LxnkuCb3339/Ux630/EP//APHa9n/rkSmchnnnmm6zmGOC/O
r/fV7rsLBjVuyGc8lyxZkvbv39/VmNE+zusmr9nPbO6OHTuavkeg7DMj9mC+
Dmyv9+SWLVsazuml9nGI75mIrG29n8jsx2dSu+sXnxu9Zt7zfbXbAzt37kzH
HXfceNvs92J06957720Y91CoEw8AAAAAAAAAAAAAAMDhJfJEGzdu7Jh5LDou
u+yyplxQXb5GY2Rtyshn0eKIvE/kfsrIZzuL6u1FNiy/3sj0dRLX6lvf+lbD
eV/+8pebrsF0ZHO7qSU8WZFvO+WUU7paS+SVo55kP7K50U/01+343eRXy2Z/
i47I75XNkhZlc4vqObc7Yo4PPfRQ6bVN5/qKsrndri+OqL/ZTa3PGGPVqlU9
3Xdlrmc/c4dxXpxf5vk2qHFDvv551AqP7znpRrTP1hiP/qLfdvqVzS36Hoay
z4x4psezvZs9FHWtW8nXlO31fcxnVtesWdPx+vWzbm67nG8+yx3rjXX3otsc
OQAAAAAAAAAAAAAAAEynyCF1m3nMH61qzuYzlpHvK5OVzGdy6kfZbG8+E1xU
ozHmcdtttzW0i9qKIyMjbft++OGHG7KNJ554Ytq9e3dTu6nI5r7wwgvp05/+
9Hjb6crmdptvqx+zZs1Kjz76aF+yufEeZv/Wr7xlXT/ug8gGRm3YToqyuZEL
73a8yDtu27Ztxq2vKJsbmcVexizKvU/V+o4//vj00ksvtRwj/1yaTC3SfM6+
XS3cQY0b4rrecsstDdcpfi+bee/1/H5kc+Pev/zyy7t+ZsQzvmjeZe/J7du3
t5xj5Giz7eOzqhtRNzbqx9bPb1WPPr9nZs+enZ577rmuxqpbu3Ztw5zb7b98
brjM+9ZK/nNgMpl0AAAAAAAAAAAAAAAA6Lenn366lqEsyuENDw835Grefffd
tGnTplqGNd++KGOUrxNYtoZeq1xrmWxvvB7t6ue0q9FYVBcxzi3KGYd8RrWb
7GdRHrNb+axSNuMadWVvv/32dOaZZzaMc8IJJ6Qrrrii9l5G3dRuRRbz0ksv
bXovIuv1ne98J73yyivj1yv6j9qMsRfq+b/zzjsv/fmf/3nDud1mcxctWpQu
vPDC2s/x75YtW9K+ffvG28fPUduxaF+ee+65tX3bST5zHcdRRx2Vbrjhhlrd
z8jEhdhfb7/9drr77rsbMo71o0yt3vxeuOiii2rzLLrv6uPdddddae7cuU3j
Rfaw1X4d1Pry92/cY/V9efbZZ6cHHnigNka9nxg7cuex9qKavlGnutOY+T0T
R1yvyBVm92h9fa2eY9ddd13LsfLvW5wfffUizsuP3+q+GNS4dXFPL1iwoOG5
F/WXOz1Piuo0Rz9l6rf2I5sb+yY+2+IZGPs2xq3POfZcfPbVnyvZI543kW2t
1/qNe/Nf/uVfGp457T4Lly1blj766KPCOca9nf28jXu/TN69Ll+DuNX5+VrL
cZT9bousWMfSpUtLZ3OL7v2y9bbz8t9F0SqHDAAAAAAAAAAAAAAAANMtsk75
mqannHJKx/p6kQX69re/3XBeq/qxy5cvH28TOZvI27STrwv4p3/6p6VytnXv
vPNOWrhw4fg5kStqlZMKUXc0m3WKI2p85kW2L5v5jaNVveAi/cjmxvsSmdh8
pi7+Hu9bPiOWPyJH9sQTT5SueRki85rvJ/JWe/bsaXteXJfIwxXVP+42mxvH
vHnz0r/927+1nXvsy+x+qx+R5W0n8or5THNkijtlCGO81atXN5zXqW5myO+F
+nvzn//5n23P+/3vf5++9KUvNY0Xeb2ZtL6ibP2cOXNqWcZOey8yhdkcaJlM
XvQZmdrsOZGhjyx9p/Xl90u7Z0w/a4IWPXtbZScHNW7Wjh07mp4xRTnrevY5
/h6v5z9bop8y+pHNjeMb3/hG22xoZHXz9dPjOOuss2qZ4siot9uzRfdkZGJj
HxeJPRd52m7u36z8vbVx48bCdvnvxYij2xxwyGeB44jP1/icLXLzzTdP+nOu
rtsazwAAAAAAAAAAAAAAADBdIrOYz91FVrWMyF5GNrV+bmRGI8eZl8+VdcqB
vfrqq2n+/PnjmbyowZrNaT7++ONtz8/nOiPL1EmMkZ1jUc448rrZNmXrsdb1
I5ub7SOud2Ryi7LFnY41a9aUyhTnc2RxRC436g2XEZm2yOfmx+8lm3v//feX
GvP1119Pp59+esO5URu2nci39brG/H0QR7vaqyG/F2KtW7duLTVe0bUpqlk9
yPXl84Pd1JcO+frUncYsyiFGDriM7POm0zMmv65+Z2RbPasGNW7eyMhI+uIX
v9jVs6Z+xHlxfln9yOZG/rzMPo/neL1udfa45ZZbSn2PQdE9WfRZWJe/H8te
/1hL1PStnxf7NvZvK/Gcz68pxi773QxxvbPfk1Hmvci/B/3M5pb57AAAAAAA
AAAAAAAAAICpFrVkly1b1lNGqC5q6kUtxL//+79P77//fmGbqB8YdQTrY0Sd
ynYiU1dvG3m7yB5lc3dRl6+dbM62bJ29opq4l19++Xh+NeqEZvOv3WSY6/qd
zY0s2IMPPtiUYSx7RGa2U0YrnzmbNWtWevrpp7uac9TQzNdB7Tab265OY5F8
Ji3yZVGPuUg+79ZNTrYu9ujJJ5883kf83C4zl98L7eaXV3TftsseD2J9+Sxp
L/U681n4dvVso/5vdn6d6uxmFWVVW+3Pwz2bG6LO7COPPNJUh7nVEe2ifZzX
jX5kcztl1rPyedl2tW/z4p6M+uzZ89euXduyff4zMe7PMhni4eHh2jO4fl48
B9rVhH/ppZfS8ccf3zCvyMnfddddHd+P+Dy/8sorx++9sp9dsrkAAAAAAAAA
AAAAAAB80kXOLZu56SaLVBfZzk4Zn3wWLHK2UeeyVX/ZjGw9cxj/9nJ+N5nO
olqdke2KzFTUGe0215rXj2xuvr7vEUccUfv3tNNOq2Was3V8I1f8yiuv1DJi
c+fObcrMRUarUw3i/HiRP2uXBSvSTfaxLp/N7TaLGOsqm+vLj9XLGvP7Lo6H
H364ZfvJ7oX8+9Lu/EGsL58l7WWvF9XCbbVf82uUze3PuEUiL/n9738/nXDC
CaWyudEu2sd53ehHNrebHGfUII9a5PVzIxPazZzjOVt2z+ezvJG3jdxtJ/G9
FNkxOtWGjvs2av8WvS9nn312euCBB2rfnVD/LCv6zLjwwgtrNavL5o5lcwEA
AAAAAAAAAAAAAPiky+cXlyxZkvbv3z8lY2UzRe0ywJGjjTxtPv8X/5bJ3eXP
j7p/3WRoH3rooVpmtX5+1Me97LLLGq5Ttp5uN/qRzc1n9OJYvXp1x5qk2RqI
3eTdosZxtv369eu7nvMgsrn589vl7PI5117WGOK8bD/t6jtPdi90k1scxPr6
kc0NZfdfPsM32Wzur3/961LrOpyyufEMuf7660vlcVsdcX6r+up5053NjTrQ
8+fP7zmbu3nz5q72fLY+fKf7KeQ/29rVkc4q+m6JskfU3P33f//3pv3S7jsd
ZHMBAAAAAAAAAAAAAOCT5eWXX04bN26sHfEz0JzZ6zbH2o1stjaOe++9t7Dd
M888k4488sham8hJRV4q5HNTcS8XyWcyY43diPV/61vfaplVirq6UV+3F/3I
5m7dujX9zd/8TTrrrLPSSSedVLsOZd+zVhmtVjmrXjK1/epnstncF154IX36
058ulbPL5z97zX7l39929WknuxciO1o2tziI9fUrm1u2n6I91qmmaF3+2dLu
uwMO12zu7t2705lnntlwTnyHQbwf8fyIet3151D8G7/H3+P17HcdxBH9RH+d
THc2N58D7Tab2+09na9b36nG+5YtWxr6j1q2ZZ/9b7zxRlMN6k5HfC/Ftm3b
mp7FnTLBsrkAAAAAAAAAAAAAAPDJcfvttzdlDu64445BTwsGrl/5uTLy+bcb
brih45wuueSSNDo6Wvt7/Bu/F72WFZnfeptuamdmRYb1vPPOa3puRMYs6ur2
qh/Z3MkaHh5Os2bNaphHq3qN+TqNh1I2t2zOLrKlkTHtJrNW9mg358nuhbLX
Z1Drm6psbqv7PqxZs6ahbZkcfdSbzmeXL7roopZ1qLPPl172ZVbRfdHqOwsG
NW6IaxjXMts+cp4jIyOlxot2+Vxomffmk57NjVxt5Guz50T+drJtW4k9/b3v
fa8pK110LFiwYDyfnr+vrrnmmraZ4Pg86dfnXP49ie/tiO/vAAAAAAAAAAAA
AAAApt7HH3+c5syZ05Q7iHpgcLjLZ9KmMiuaz9YuWbIk7d+/v22bfC3HqBFb
fy1bU7fVmiIP9t577/U036gXGM+J7PVZsWLFpOoKz4RsblEur1XesV81C2dy
NrdobtORXZ2ubO6g1jdV2dx2Y77++uvp9NNPb2g/d+7ctHbt2vTKK6+kDz/8
sNYu7uG33367Vlf3tNNOa1rX5s2bW84n/77F+dFXL+K8/Pit7otBjVtURzye
q3v37u1qzGifz+dGv+2ep5/0bG4oWws3PutOPvnkvny2RU3ju+66Ky1atKjh
v4/j58ilxzrq90rslcjpZufYKROcv2ejVvuBAwd6mmu+/nmv37cBAAAAAAAA
AAAAAAB0L+q1tcoV7du3b9DTg4HK55imOiuazewcd9xx43X56rK1dYvq4+Xz
iA8//HDD65FVyua/Iqfbq6iPm68vGFndyOz2aiZkc0PULM7OI2rjRo3cPNlc
2dxe1zeIbG4oum+7Oa699trxXGKReCbFs6nX/GZWNzVBBzVuPhNaJpvZSj6H
Gv0Wfb9C3eGQzc1/Zn32s59Nb775ZlO7yJFn+45attMhP27keaOufDv9rPGc
f861+k4OAAAAAAAAAAAAAACg/6Ju7hFHHNGUv4nszh//+MdBTw8Gajrr5obH
H3+8Ybx8tjZ+b5cXzeeYImOaFVnfyPzWX4+MUC8i019UTzOOqAHYKZvUykzJ
5ubzjq0yaLK5srm9rm9Q2dzwyCOPNFybssdll13W8d7OP2MmkxXMfhdBHEXf
VzDocaOGcPYaRZ72jTfe6GncOC+f8+2mRvEnMZsbImebPS/ysFkfffRRWrp0
6fjrs2bNSsPDw6Xn1auor3vuuec2zO2nP/1px/Pyn/OTqfGbz6S3+h4JAAAA
AAAAAAAAAABgalxxxRVNGZyrr7560NOCgetXfq6sqAcYdQHr4918880Nr2fr
uV5zzTWpUqk09ZFtk8/8ZLO97fJm7UT268ILL2y4Lvl8/2233VY4t04OtWxu
ZKAiC9Vr1q1uJmdz87m3XtfYrenK5g5qfVOVzb3kkkvS6Ohox/MiB5rPabY6
Zs+enW6//fa29XLr8vdEu5qznXSTOxzUuL1ko1speg5E/60cLtncyNlG3rZ+
3rJly2r3bV0+lz2Z96AbkcPNrufMM89Mb7/9dsfz+pkjz9fgLXv/AwAAAAAA
AAAAAAAA/fHBBx+ka6+9Np1//vm1I37ev3//oKcFA5fP3lx55ZU9ZU7LyucE
owbtgQMHaq/la+K2qnmbzd9GNjEyinWR9Z1MfinWvm7duoZrEjnd3/72t+nY
Y49tqFv49NNPd73+mZrNjRrBRZmrXjK1RWZyNjfk60d/krK5YRDrm6psbpl+
4n3+zne+U8vcxjlHHXVUOvHEExv6mTdvXrrooovSAw88MP4MKqMo61ymlmiR
/PM3+s1mMmfCuNnvQpiKbG6+9nnW4ZLNjf9Gjb3YKsu6cePGhn7j96n20ksv
peOPP75h3HvuuafUufnP8jiilm4v8vsv/30eAAAAAAAAAAAAAAAAMAiRl8nm
XpYsWTLlufVsLiybQcpmDdvVvI32cV4+nxb5usj6lsl8tRJ522z9wsjz7d69
u/Za1NXspYZg1kzJ5naTt8vnOtevX9/1eDM9m5vPKq5du7ar9fViOrO5g1hf
v7K53e6/Rx55ZPy6zJ07t5bxL1MPtxv5teXrnJYR7eO8bD/tasgOatzs9x1M
RTa3XdbycMnmhnz+tv65ls/txndEvPjii6X77cUf/vCHhs/SOC699NLaXMqI
77iIuvfZ89esWdPTPBYtWtTQT3w3BwAAAAAAAAAAAAAAAAzam2++mT772c9O
OvcT+aX/+Z//KdX2ueeeG69nGcevf/3r2t+z+cHIIrXKAY2OjqZLLrlkvG29
5uMbb7yRTj755J4zPK+99lo644wzxs//1Kc+lR566KHx14vySitXruwqG9ev
bG5cm23btvVU47jb2pXd1NjsZsyZlM3Nj9Vu//XLdGZzB7G+fmRzu62/ma31
GevdunXrZJbQ0vDwcEOGP5472TqnZUT77PMq+ot+Z9q4kYXOXv84N561vcg/
oztlrQ+nbG58F0V8J0X+OZu/d3t5/nYjPlNuu+22hnXEPRX3Vjc2bdrU0Edk
bOMztBv92O8AAAAAAAAAAAAAAAAwFYpqKN5yyy1dZT6jJmXUyIv80H333Zc+
/vjjtu3feeedtHDhwoa6iTGPyByVrR+ZzYtGtjgyxtkawNl6vGXXcO211zZc
h/g9X28z8rCRX87md7vJAPcjmzsyMpK++MUv1jJLUee3W/m8U6cccz4b1su4
+Qz4TMvm5usz9nptt2/fnq6//vr0/vvvd2w7ndncQawvn83tpd7q/fff39BH
/V4vM+Zk6rt2UlTPs5vnZrSL9t1mFwcxbr62ehxbtmwpNV5enJfvq13W+nDK
5uY/A+t7PX8fReZ1qsT+yNeHz39HRVn5DHgc99xzT+nz47P38ssvbzi/lzrR
AAAAAAAAAAAAAAAAMFXyeanInkYGtYzI8kR+LvI79fO/9a1vtc3PxDmR5a23
jxq4v/vd78azm0ceeWR65pln2o6bzyVGviubYYo+o75uWfnasGeeeWZ6++23
C+e+bt26hrZRazdq7pYx2TzmE088MV4XtD727t27S59fVPt3wYIFhWuti/qq
UWc1e070UbYGYlEdxpmWzQ0bN27s+X0Nv//979OXvvSl2rmnnHJK+s1vftO2
/XRmc8N0ry+fKYwjnhVl5etYx3Hddde1zaFmc5lLlixJ+/fvLz1et/LXs5vn
Zj7jH0f0NxPHjWdDPCOy50Qt471795Yasy7a52sgd3r2HE7Z3JCvNfvLX/6y
od74VNaNLfosjyM+73qpzx7nxP3a6zMn8sD5ufSaCQcAAAAAAAAAAAAAAICp
EFmnbP6nnr177rnn2p4X9XE3bNjQkJ+Jn9vVQay79957G/JGP//5z8d/j5q6
UVu3nffee68h5/Xd7363oeZg1OItK59Xi7zj1q1bW7aPTOp5553XcL2KauwW
mWx2qyhbV+a9ClHr9Morr2zKS3aqURw2b97cdF7kc/fs2dP2vPoeibz1TM/m
RkYwMtnZOZ599tnp5Zdf7jjWrl27am2z51566aW1XHMr053Nne71FWVz58yZ
U6vR3Cnrt3PnzqY8aKw11txOPpcZ9+Urr7xS6t7sVlFmtcy9GK9Hu24yqoMe
d82aNU3vZTx/o4Z3GdEun8uNI/pt53DL5ubri8f42c/X+E6LXnKynUSfd999
d1MWtuznWisvvvhi0+dVp30Tc4lnRPbZFkd8P0S75w0AAAAAAAAAAAAAAAAM
wtNPP51mzZrVlJ2KbNHw8HBDDdp33303PfDAA01ZvThWrlzZtmZuXWTvjjvu
uIaMWLf5oxtuuKEh35utJ1smHxyKcrZl6gRGdjefHSpTEzTmlb9m+aNTHqyo
nmAcF198ce193Ldv33jbyFVFNnHt2rVp7ty5hfnaMvVvIxMVWcz8+bNnz07f
+c53GvKPkcd94403arWITzvttFq7Cy+8MC1atGhGZ3NDZMKKrm39PsiOHz/H
3/JZwDjK1DKd7mzudK8vn82NbN25555b+zn+jWdI5ELr91o8Y1544YXaeEVz
jHrcne7LfP3rbo558+bV9ujtt9+eXn/99VLvwT333FPY1ze/+c300ksvjd8T
8W/8Hn8vah/9dGO6xy3KdccR71O8X/Fci8+F+vsT/8bv8fdW72er2uRZh1s2
t6jWbPaYirqx8bzO14KP47LLLitdG72VWM8tt9zS1PdRRx2VVq9enX73u9/V
xg9x/8fz5qtf/WpT+/hvk/hsAwAAAAAAAAAAAAAAgJkmMjRF+ZxujrI5z7B/
//60ZMmSwn6ipm4ZkTMsOj/qDkb9wU4iQxxZ4uy5kSEtk/+M63Xbbbc1nHvi
iSem3bt3tz3v1VdfreWI213HTnmwGHvjxo2FebdujjPOOCO99tprHddaF23j
nG7HiRznb3/726bazDMxm9uP+yDel8hPdzKIbO50ri+fzY31tcoG9+vZEpnw
fE3ZXo/I/h84cKDteJF9jdqikxmnl9qkgxj3P/7jPxq+/2AyR/QT/XVyuGVz
Q+Rvi65ZN7WVy4r9Hd+FkR/rG9/4Rse9X1bct3H/Tma/lPm+DAAAAAAAAAAA
AAAAABiUyWQ+I9P6+9//vqvxsnVv68f8+fNr+dUyol20z/exdOnSUrV78/Vn
Iy8WNSbLKqq5G7Vlo8ZsK2WykWUzpJFzzNfuLXucc845aWRkpPRa63bs2JFO
OeWU0uPUc5yRpzsUsrkh6jhu2LChp/sg5hvvS5kc2SCyudO5vqJsbi/Z4Nir
kbkta9euXeP1eSd7lMkER4Yxsoy99D+ZDOQgxo1655PNPsf50U8Zh2M29733
3qvt+fx1u/nmm7vuq524p4oys//4j//YdVa8kz179jR9VpY91qxZ0/f5AAAA
AAAAAAAAAAAAwFR4+eWXS2fbjjrqqFrWrl0etZWiureXXHJJGh0dLXV+5G8j
h5vvIzKBnfzXf/1Xrc5t9rz777+/6zU8/fTTadasWQ39dKrxF9nIX/ziF7X6
vkXXtJs8WOSrvva1r5XOOc2ePTv98Ic/7On9qoucVZkx586dm371q1/VrsWh
lM2t6+Y+iCOuSTcZ0kFlc6drfUXZ3BD7/0c/+lHt2dFpzDK1a/Nef/319Nd/
/dc95QCLjjLPk/o9HXu+TJ/RLtrHeZMxiHHj2fFP//RP6YQTTujqOkb7OK+b
Z8/hmM0NkUfN9hOfMcPDwz31lRfP48cff7ypBnL2eT0V4n2Pz8Yy930cp512
WnriiSfUywUAAAAAAAAAAAAAAOCQEnmYqD/5ve99L51++ukNNTbnzJmTFi1a
lO6666707rvvDnqqpIN5xMg9nXXWWbX3J5txigzyFVdckR577LG+1h/cvXt3
bX9Ehqo+VuyTz33uc+n2229P77//ft/GGpS4DyLDeuONN7a8D2Ktcf0PRYNc
X2Qev//97xfun9jL3WQiQ2T/vvvd7zbkIss+n+I6vP3222nTpk0N84lj4cKF
6Z133ik9hwcffLD2nQH57Gr8Hn+P1yeTjZ8p40a+d+vWrbW982d/9mdNz534
Pf4er0e7XvLAvWRzPwl+85vfpCOOOGJ83XEfdqrffKiIz4X4b4eo2Ttv3ryG
9zey0FdffXUtOzzZ3DoAAAAAAAAAAAAAAAAA0FrU0F65cuV4xu/yyy/vOYe+
d+/edM4554z3deSRR6ZnnnmmzzOmjMM1m5uvOV2mdjMAAAAAAAAAAAAAAAAA
QFnPP/98OuaYY8azjJs3b55Uf+vXr2/IRkZGlOl3OGZzoz5u1Mmtr/nYY49N
L7744qCnBQAAAAAAAAAAAAAAAAB8gvz0pz/ta5a23/3Rm8Mxmzs8PJxmzZo1
vuaLLrooffDBB4OeFgAAAAAAAAAAAAAAAADwCfKDH/ygIcO5Zs2anvv68MMP
0+WXXz7e15FHHpmeeeaZPs6WsvLZ3KuuumrQU5pyN998c8Oa77333kFPCQAA
AAAAgP/P3v27xl3/ARz/E75bCxWigxkcLCIRodTJRaguGR2EOhyEINxSkDpk
6ZIlS6RFbMUO6ZLi1C65IUO7JFCULOWgYuMQol1uaDw4y/v1fefnfZLmfsVL
k9w9HvCkpfe59+f9+VzXF28AAAAAAAAAGDAHz7l9991348mTJz2v8+rVq/jh
hx/i/Pnze2t9+OGHsba2dgy7ppODs7nlcvmkt3Ss/v7777h06dLe8168eDGe
P39+0tsCAAAAAAAAAAAAAAAAAAbMb7/9Fm+//fa+Oc4LFy7E9PR0/P7771tn
4bby8uXLrWt++umn+Oijj/atsdl3330XKaU3+DTD6+D5xwf75ZdfTnqLfXXY
/9tipVIp/v3335PeJgAAAAAAAAAAAAAAAAAwYDZnb7/55pu2c51H6eOPP44/
//zzpB9vaLSbzf3kk0+2zpUdJO1mc996661YXl4+6S0CAAAAAAAAAAAAAAAA
AAPqr7/+ii+++KJvc7mXLl2KarV60o81VFrN5m7Ory4sLJz09vqu3Wzu7Oys
85oBAAAAAAAAAAAAAAAAgGP1zz//xPfffx8jIyNHnsl977334scff9xaizfr
4GzuO++8s3Ue8h9//HHSWzsWB2dzL1y4EJ9//vnWHPKrV69OensAAAAAAAAA
AAAAAAAAwJBoNBrx66+/xvT0dHz22Wdx8eLFOH/+/GtzuJuznx988EF89dVX
8fPPP2/NgJqJBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
/PfL+d8qa83zamv5nV2e7PC8L/J9u53P3a2c4tFh87WNfP/8zq5cOzDXnN/h
WP7tbi4VzjwGAAAAAAAAAAAAAAAAAIAzI0V1YWf2ePMs21pqe209f1653Zy3
PTdjzhYAAAAAAAAAAAAAAAAAgOFQX2qebXvnRbffSnF/ujmfWznODQIAAAAA
AAAAAAAAAAAAwClRmT3ajO3yLbO5AAAAAAAAAAAAAAAAAAAMl+Jsbnkldfel
Rr52cud75RTV490iAAAAAAAAAAAAAAAAAACcDispRr5uzudOPE5Raxw2o5ui
Xkuxspji08nm9eOLXc7zAgAAAAAAAAAAAAAAAADAmZeiupBitDCf21WlFFfN
5QIAAAAAAAAAAAAAAAAAMIwaKSrzKa5OpRidPHwWd7Sc4spMipuPU6w3TnrD
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAcPY8f/5ckiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkqS+9fLlS0mSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEn/Z+9+XuO618OP/xeX
bgLlkt4usilk5112oavgzWzEXcwiWg0p44AMsRZWCBUGBa6ysAw2BIY0uKAs
LAiGEDUXuTCB2Is7YJADclN5ES0i7KI6jCk81dj6MZo5c/QZeaxzdPR6wZvS
7x2Nzowkl+9zP88cSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkqeIBAAAAQNWY
oQEAAABAGrM0AAAAAMhX9A6oyhkAAAAAVI0ZGgAAAACkMUsDAAAAgHxF74Cq
nAEAAABA1ZihAQAAAEAaszQAAAAAyFf0DqjKGQAAAABUjRkaAAAAAKQxSwMA
AACAfEXvgKqcAQAAAEDVmKEBAAAAQBqzNAAAAADIV/QOqMoZAAAAAFSNGRoA
AAAApDFLAwAAAIB8Re+AqpwBAAAAQNWYoQEAAABAGrM0AAAAAMhX9A6oyhkA
AAAAVI0ZGgAAAACkMUsDAAAAgHxF74CqnAEAAABA1ZihAQAAAEAaszQAAAAA
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
JuegJ9jNNQcFAACgbMzSJmF4RtBopewndkfMAV5nhtX/9Iezmqn+WUltKuqN
mZh/g+fWxpmNDc8hjzlrtr0Rq625aGbOBxdjub154vnKa82oUmdKGXPSg+fa
ehCtucbhz2v3Z9Wcz55pbXdWYr7ZN4frPXauFWsp8699rzHP23sxY+zmps7S
ch633YmV+Wbf7K8WU7u/y0trW2P8zLuxvb66+z7vPk/ffHT/72JxuR3jvIUA
AACcD0XvgKqcnVsn3M3tfcbh4uBnHM7cHX3Wr7sRK7P1hFldPWaX1yPrJ/K6
Z9K2HyxFo5b29fX51ci9o8kb2c3dic5S48hsb1S1xmK082+5AgAAAGCGNiHD
Z+JyzvmlPeHr7eYmz9p656ia0cq84UgZd3NPdz62eXd24J7FA9+jufLyOsfb
ze3Gxsps1FNmkLPLmfeCOZNz0LF2c81BAQAAKCeztEkYnhEkfc7ZSK+7m5s+
q+ntNjZbkz+39qZ2c3uzraTXVZ+N5dwbEmcrdDd39/+9OfL71Xcfs/96enOm
6Zxr63/sKK8/z9t7Mae3m7szfA/p/qZm7+bfq7pn+0EsNWrHvuaLtUYsGtAB
AADQp+gdUJWzc+vEu7ndWJ0bnMUsxIOsh+50Ymk6fVb3co610B6ac77OvG+n
vZB7zi5zRpVxDX0XkzY/HGM3d3O5Odb1XbzYjNaGD6YDAAAARjNDm4ztuzPD
s5nmregcd6uEUV5rN3czlpvjzbl6c6ThkV/5dnNPcz6WOi+cvrUxxm7ucWcB
M6ovxODxwDM5Bx1jN9ccFAAAgLIyS5uETiwN7QxOxdzqOPfy7Pd6u7njzyEu
RjPj7FzZdnPHnwHt/gzWxhtmFrebm/Izn4vV3T+xzZWUn++rx2abzDxv78Wc
0m7uZqw0j7/O3DOgm3djNme3d7haNFde58MqAQAAqJKid0BVzs6tE+/mZs3f
sj57cCfa81Njzzh788D5gSHWyed92ye8hulobYx88Wnzw9THba/EzLjX12yF
I2kAAABAHjO0CRk5u6nFVGMm5hdbsbL2INa3dtLOGL7Gbm53o5Vzz4ic5tYG
rq1ku7mnOR/r5t9X4mjzMT/4GYUjXutOe37svdheU/NHd2PP5Bw09TyhOSgA
AAAlZpY2GZ3FEfOJWj2ac4uxtLwaa52N2N5J+f/wv8YMq7sRreYJ5mgX52Jt
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
7PTPf17Or2pRG7jmSe7mZs6ipuZi9eD9OJzZDM+ssmYxfZ8jeLEW03OtWFvf
ir4xZXS31mNlbuD5ppaik3ulo1R0N3fi87yzsJub9Zl4vd+N2Wi1N4Z+h46c
FW2O+rxFAAAAzpuid0BVzs6trPN845Y7d+nGg4WsuWFCjeURc9as2enoWdr2
3ZnE7zkdrbu3snePB+dUJ97NzXrOzVhp1hKv8Wgzd51IAwAAAEYzQ5uAnU4s
Ze1nTmp+ljM/Gp5L7V7L4D1cRzV3N1aG7g87ao41fG5rcE43dP0Z95XIbjZm
Z497vtOej3ViMfV9vDgf84Pv44gDcN0HC4nvyWCNWM4chJ6hOWje79DBz9sc
FAAAgHIzS3t9m3dnTzgf2S/vc8zGm2F1llLPrM3F3ZWsz3LL2oMcb17z0vbd
mEm6jnrMzh63U5r9OYIpTS2dbDP3RK/5TOzmTnqel/c+DX7/4nZzX83oTvb3
OTXfjvP5LxsAAAD9it4BVTk7t153N7d5K9aPffs2Y3nseU49Z84asZ47Ox2Y
ZXUfxELKWbuX917IPpd34jNpObPV/uc80VzaZ9EBAAAAxzBDm5DuRqxk3rci
oamFaOetFW6vxmzO1w/OpTZXmgnfdyp6R+22V7J2NbPmWNuxOrg/21/mfW63
4+5Mwnmt3QsZup9rxvOd9nxsp5127m761sbw9efcVHhzOeXnc7T6wugzbWdm
Dpr3+9D38zYHBQAAoMzM0iZj+8FSTJ9kjrZbs7XRd2/doWceb4bVu4dvwvec
ejVIyzzjlTUGGmtesydpT3jmbnQSdkp3Oid4f3szytf4lRz7NZ+R3dxXj22O
/Xs6ap43+udcpt3c6A1H0+aI/dWasWJIBwAAQNjNVXbn1ol3c+sxu9yJ9LsV
bMXqfNpn9tWm52JlY/SU9aXc+dDwLK270cqftfbNH7PON578TNromdvgc+6s
L8dsPXG+N7+6+44CAAAA5DNDm6RubK0tRqM2xhmt2eWEz7XLP/81fH5qO9oL
+Wf5mvtfk7mrOfoc3Mj5WeZubrya0eXNs/Z2KlN2c18+3SnPx47bE52avZt9
/Tm7uT1bq/OZ96QdPs82HXMreedN40zNQUfeS3ng520OCgAAQFmZpU3QdieW
Z8e4v2utEYvthCnAmDOs7eM+n+3gM8G68SBj5pY5BhpzXrN34bHSrB07s0ne
Kd1qx2Ij5/n6qjVbSTPKXOO+5jO0m9szsXneyPt4lGw3t2dnPVp5v5P9v0ON
pXiQflAUAACAiit6B1Tl7NwaZze3Vo/GzHy0Vjqxeczq7CjdrXYsL81Fsz4V
tf75Tb0RM/OtWF3fzj+L1m9nI1aXZmJ66DzkqHvYvnp8Y+pwplSb2v2+S2ux
deSb7kRnqXHk+l7rTNru862vzO++5qOzrOzZVzc228uxNNeM+lT/42sx1XuP
FpejfdI3HwAAADh3zNDehG5sdlai1ZvfDMy4Ltamot6YifnWaqxvjzfD2Xqw
HPPNgefLmSFttXuPr/c9vhb15nysdAYOSW3ejbnpWtoca+tBLM83Y2pw3jZq
N/flpWxFe/no7Ks21Yz5lcPP9Uvdzd1/bac5H3s5r1wcmBlOz8TS6sbBvS/G
3c3de+Ld92Up5nZ/Rkfez/0Z6+p6JP+KnJk5aO9I38rA7+Won7c5KAAAAOVj
ljZ53e31WFtejJlGPeoDs41avR7NuaVYbm+mnxfrGXOG9XL+s/v4/u9fqx+d
X72yGXfnpo/MNUaOgcad17y0HRurS7vvRd8MsDZ9ZGYz3k5pN7bXV6M1PxON
gXNpr97bMc/iHWec13zGdnNfmtQ8b/f3bWmmMfD7WcLd3D3bG1m/Q70ZXTPm
lszoAAAAGFb0DqjKGQAAAABUjRkaAAAAAKQxSwMAAACAfEXvgKqcAQAAAEDV
mKEBAAAAQBqzNAAAAADIV/QOqMoZAAAAAFSNGRoAAAAApDFLAwAAAIB8Re+A
qpwBAAAAQNWYoQEAAABAGrM0AAAAAMhX9A6oyhkAAAAAVI0ZGgAAAACkMUsD
AAAAgHxF74CqnAEAAABA1ZihAQAAAEAaszQAAAAAyFf0DqjKGQAAAABUjRka
AAAAAKQxSwMAAACAfEXvgKqcAQAAAEDVmKEBAAAAQBqzNAAAAADIV/QOqMoZ
AAAAAFSNGRoAAAAApDFLAwAAAIB8Re+AqpwBAAAAQNWYoQEAAABAGrM0AAAA
AMhX9A6oyhkAAAAAVI0ZGgAAAACkMUsDAAAAgHxF74CqnAEAAABA1ZihAQAA
AEAaszQAAAAAyFf0DqjKGQAAAABUjRkaAAAAAKQxSwMAAACAfEXvgKqcAQAA
AEDVmKEBAAAAQBqzNAAAAADIV/QOqMoZAAAAAFSNGRoAAAAApDFLAwAAAIB8
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
5etxP2uFeY/75gJjOcFu7u+/fB83Gh/EhXfeOvzvnN56Jy580Igb3/8Svyc8
x/Bu7u/xy7efRu29d+Ktg/8e6614571afPrto6TnBAAAimWGNnkvntyPOzev
xZXMz5y7FFdv/hi/5u7ojrGbe6wfk57rVHdz71/fey++iMyP/AMAAAAoKbO0
N+vf/u3f3uhO7mD//u//XvRL3vN7bHW+jk8+uBDvvNV3jQdnOpy/OFWntZvb
f/bnrQ/j+6Qf8vfx4d7XXKjM4vDT+LbxztG/zxPcpyDzXNRub71zIT5o3Ijv
fzndv6KX1/Phe/HO24N/05/E152nr/9cb78T73047ut6Gp2vP4kPLvSf8/pD
vP3Oe/Hhje/j9d6iTnz6bv+/sZP6++ld86uzaW8P/lw/+To6W2/i5zqJ9+mX
uHEh/f8enfzvOfX79M7zfZh/RrD/36TdPvh6a4zr+Ck+fnsSrwcAgKooegdU
5ew8y96nfR5/u3m4m3r0nN3juH1l/2uuxQ+/HfdcA57/GNf3zy5+9k08HnlW
8dV9aw/uefu3EYf5fr0TnyXuyB7Z4c25xuf3vjh43OXro+9N0ttRPtjP/eJe
jPzWz+/HzSuXDu6z+9C5RCDPWLu5W/HNn985fgZ34ZP4/pjR75Hd3EeP4sb7
xzznux8f+5wAAECxzNDerBfPf42f//Zd3L4+sKubO6Oa5G5u2nOd6m7usx/i
2t41Xbl+3J4yAAAAQHmYpb05a2tr8Xd/93enupvb+37tdrvYF/70XnySslf1
zp/jm3HWpM6K35/G1tZWbD0t0fZxEbu5vb2/j39K+KKq7eY+iq8/eDvjDNM4
u7lP46dP30/6m3//05/izR9jehr3Prlw7LW80/g26Voeff3BkZ3U4d6OD75+
lPJEUXvnuPfo/bjx6GR/i7/ceG/guSbw97P1Tfz52GtOfP2pJvY+lW03t+/f
mg+/z/7dG/g36Q9vfxwp/yr1bH35/oReDwAAVVH0DqjK2Xk2cp/2+b344mCP
9fA+F7/euTpiZzdtN/fhl5eP39890LcHfOX27v+W9XyXDvZ3vxy8we+Q3+K7
a8dd48P4cv8sZcY9g0e/npTvD5AgeTf36P7shcbX0fnl6cHn3/3+9FF8f+PD
w+d6+8PcXdr+3dxa7d2X/7PxdSd+OfjvSH6Pp4++j09rfbvAxzwnAABQLDO0
0/QsHt75/OBz3C5dvz/ic9zG28198eur+/RevXI5Lg3dp/ew0uzm7nr41eW+
a7sUl69cjWvXb8ZXd+7F337+LazrAgAAAGVklvZm/Nd//Vf88Y9/PJV93MH+
9Kc/vfz+hXj6fXx4cJ/Bd+L9gXtAvjzT8Wkt3qnw+YtfbuztMH74fdGXcqig
3dze9/vLsSuGFdrNffpTfPpe397sjUfx7f65pDF2c59+Uzt8D99txNedrb77
gr66J3Wj736utW/e7B/Ro74d1XdqN+Je/9/01r240beLfOGYH/jv3zcO93Lf
/yS+f7R/5uvV+axPDs6EvR2NvBsvH/m35kI0vn0Uh0e9nsajbxvx7v73eevD
+Hbct+jpN1Hbu46Pv/7LZP5+jlzzuy/Ppx2+lbs/13s3+nZo344PJ/GP40Tf
p/2/1ZS/69fRt5ub9+/o77t/X413D3733sv64Qz9m5T478zvu6/1rRN8HQAA
lVb0DqjK2XmWt0/bv4d7ubd42r+vm7G3evxubt/e67UfRt6PNvsaLmXsvvY9
39Vv4slrvt69Bxy85mvf/ZbxgAGPb8eV/TOXlnOBSUjczX30lwuHM8i8gWDv
cwb3Z4vvjX6+w93cP7y8z+5POU/ZP2tO+2xPAACgCGZop+/wc+QOP+vuqPTd
3Cd3Psvdxy3rbm7Ei/j1x5vx2aUR13vpSnzx3WM7ugAAAECpmKW9Ge+/n3bP
yzfVP//zPxfwqp/GN7X9a3gv/pJzD8bfH/0l3tu/3g++jirdPtdu7quf61tv
vZX4863Ibu7Te/Hxwb7s4X1Pvx97N/dRfLr/PLn3+PwpPt4/F/Xup/HGViW3
vo4P9s9Kjbo3aW+X8mAn+YP4euQPvO+1vXdjxDU/OnyunNf108dvH/xbc2PE
g/r3gN/+ZJxzXr/v/tz2fn9r38TTSf39HNy/dvQ1x9NvD3dCx7rXcrbJvk+H
u7lv9k81cTf3pb7/u/NWxt9L379JFy5cONhBzlv77nn06d7O77u1qF2owL9P
AABMRNE7oCpn51n+rurD+PLy4X/++eeH97z4IuNw4bF7rw+/PDhPeOX247QL
/NvNg+859DVPvomrH6WdLUy9xsPzk1fjm5Rl377zlKn7wQC5UnZz++a9b334
fRwzJovfv/nzwX/v9Odvsh99uJv7Vnx877iL3IovDz6f8f34skr/5RAAAFSI
GVoBDj73bdRn1yXu5j788uAevJf/n727f2+srvM//ifsb73EJdxmUDbcF++6
3mXddevuXtfmQjDijkXGJSzORm5atZetO86GKvYrg0PFmmsLV0GGbEGqVqxc
jMFB4+5UWtSJDJARZgMVmmGKqcM0Q2em729Ompxz0uacnKQnOafp83FdnwuY
nnzO53xyM/rueeW9a0xmZhcqZFmtzdX8bK5maWFWDk5Nyd6xERkZGpBeXV63
Un0RAAAAAADAKdTS7PeTn/zE0VxuaTzxxBPNvfBEj3iK57bSxzM7GVo5Xvke
9Wo3gGwgZHNXXgOhUe0eH/PXQwtkc/X9A9q80jWu3VBUczZXd2+UL5I0PTQZ
8VnIw65PerT0PQNdYnDr1Yp4SP3sCRodqH5GtEvELEycihR7uRrcy5WLS7i4
3+2mE+kynr6ImO+mTrJ0/uK+2vn+yaUkYdY4QvT3sgXN97zquWzep1ypl/A6
11VVLdlcZVmlPtMV+vnqP5PGtV64pvuh9kxW7jdMqmvZsJ9PAAAAsI3TGVCG
O8dmVi2rujg1vLY/x+A+qdRRttpcC/sG1Tms3LtXMDehy99OrT6htiZbsrkL
sm+wWu/fNTNq2dybh8XaKgDAhIVsbkat93rEWttarX5v9D2cWj3TWv1Uq+e1
SaBRhW0AAAAA60INzQE2ZXPV74/rHpWDxiezNZt7YMT+bO4aS4dlfKB4ngGz
8wAAAAAAADQXtTR7nTp1Sq644grHc7nKeO973yunT59u0pXnZLyr1gxcWhLx
dNXvZd9YsjJZ6re5wbK5SgZzJTfpk55qTSWrnqdNlMtXe3Z6wyZ9Kjd+NjeX
6Cn2HfVKaLI8d1lzNje/h36L+6HmwJWeqI3culxK4okqnXn1/UkNFjPd47G4
F1o202N4g1hOMsm4TFe5dUu7Lywk1t6R2rnbS9noZmXbi1K7S8+rSeY6F5ce
X3GPOkdN9tPGfVL3wepe1qu2bK4+F77m8FWfSdp7JihGXxmgfm4V+janyeYC
AABA5XQGlOHOsZlV7XUr87q8qjL6xajlbbW55iZ2ri+bu/q+QNuzudq9hfUN
srkAbFA1m5uRWKDW7wVMS9Rv/phas7ll63TT71EAAAAAqKih2WPp8F7ZtWtC
Zi0ce3isv0qdqMY8rWlOdsrWbK5auzPNAx+U0e4q9b2FBTHriLuYGKKWBgAA
AAAAXIdamr3+67/+y/FMrn488MADTbryuISL56zW69MKLT+1kgHLpSelL9BR
zD+aZKRyaYlHQ+L3ebR98PjEH4zIZMrCjSa5jCRGwxLo8Or20SO+joCER6fF
sNulLhtWeZhl2bKSjPWtOqdXOgJhGU1kLGaXK8zh7ZBA36SklQmqZguTEvHp
1lvv/TCrcnD6/pPthq+LWrK5pev0qT2aS3sVNcx5J6Sn2Cuzc7Tad/Brx3bV
2Bg0FQ1KeHLtK6TmbK5Mq2uw3DfX0yOWWhw0UtVsbkp2l/KW4eqvr3i4tG+7
pUoq2HyeGrO5mVhgbZ68qdncnIwHq3/Pgb63hB3rqimb2/DXW+OyuUqmudQ7
11sp963rW73yGUA2FwAAABqnM6AMd47NrHo2V5SbCqW/eJ9f9/CM4b11ZHO5
nxCADapmc7Xacy3fv6fP3u6uUKxdVzbXct0cAAAAQDNRQ7PBIa0udvPAmBwy
C50uJGSodOzQlEENzb6+uQtqxtWebK5Wa+uW4SmDCz04Kr0m9b2FA6OF/RoY
O2RYQ1Tzy/TNBQAAAAAALkItzV7t7e0Nz9t6vV754Ac/aOnYK6+8sjkXntqt
5Z8m1z+dPpsbS/RI+6rrqpSRyib6tPs5DEZHX8I4X5uKSdBXZU99YYlXmqDe
bK6Fc/qCMfNsYjYhPe1V1jztUDZX9M+l0bktZnMz49JV7fnpjMh0hedHzbB2
joppOjf/WvPUeF9SNbVnc/Mvi0jxc8RrloGclh7vytztkfWkV20y3aPmpYMV
c8219Udenc+vj64PhJV+3rrcZlDfVLWZ2VzdZ6nf5GT2ZnMt7lM83KT75WrL
5mp7UeHewAqfSWr+ek1f4lz+/bq6tzPZXAAAAGiczoAy3Dk2M0vZXFmUAyO9
+WOGJGFy/2G1uRb2Da4vmzs8tfqENmdzF3Q9gs32AwAaqGrmVavR1pfNrfDd
eEI2FwAAAGhF1NDssCgHR/u1GlT3ThmemJHZhSX1iKXFOTmUGJGd3aVjhsQo
2mo1m6vPwPbumpCD87rzzR+SxMhO6e4fkqGdNmZzlZ64vaXaWL+MTM3K4lL5
NfbvHJTBfqP63pIcHh9Q96p754gkDs2LuvKl+ZU5aq0PAgAAAAAANAG1NPtM
TU01PJf7zne+U5577jl54403LOdzp6eb0FHTrG9hHbRcnle8Pp8EI3FJZU36
mKai4lezrBGJp7JqD9VcNiXxSEDtueuPVsoxJqWvlPvsCMuk7vH5CSQV75PO
0p4GYqb5TvU+lGobkY1LyKudM5ZMi3qJuYwkY2E1k+zNz1U5U5yWqL9N3atA
2T7lJJuKSyToE5/fL74q98akRzuL2Uqf9MRr6xmrTbI2B6fPkFbeOwuZTf1e
+YISTazdK/VeHn90bZY5FSnuZbsYx1hzMt61MoenJ1HrlRuqJ5ur9JiNdhYf
1668NvT9k3OSScYkXMpjd1a4Xgckekq9qlfnHYuq9tVdfXi1TLcFmVH1feup
1CN1leker/oaKjtlE7K5uWy67HXsCxu950sPiEtP8TPL0zm6vvvXrO5T6XO+
uD+ZydW9un3iD0Ulnq7z80NVSzY3q/UZrtTPt+JnUlIixfePJ/+H6mrVzwmv
aNtANhcAAAAapzOgDHeOzcxaNjdvMSFjVe6XqzrXwVHpLt571z922NoCD4yo
9/OteczsuC63a0c2V9eThGwuAKeQzQUAAABgE2podlmSw3t3qVlZ09G7S/bN
ms11WMb61z5ubU51VSZ4zRiQiVldD1qTelb5McWx06Bn7eyEDJiec1Ymdppl
a63tVe9QQuatbj8AAAAAAEATUEuzz+23397QXO6FF14oL7zwgnq+o0ePysUX
X1z1cd/4xjcafu36Ho52Z3N7EtVyXlp2yjjDKpKdDBWzpwb3h2TGJdw3aZyH
U3uqmt9fYi2bq+vPWClLWqL20PTk93XtPuTGu9R9ClVs6KvI5s9Vys81uO9n
xRycfu/z1zG5ep3VsrkW9yo7qfY8DawJh6bULJ5hj9ncuHQV12hjNLfObK4i
K9OjIfF7DN7bHr+ERqfN85vNktay8V6jbGfTs7n510249Lo3yAvrqe+1doms
bhzbiGyu/v4z3fAFwjJaqflzw9SwT5PFbG4oJtMRv8nfO978e3A9iXGL2dxc
SibDWq/6in2GjT6TdL12Vx6my/gGx3XvK7K5AAAA0DidAWW4c2xmlrO5tsyl
9QW5eXCfLFiYc25iZ3HObhk9uPqnB2W01I9k57iY3vZodY26XrwW474AYK+q
mddp6VHrzfVkcztkd4WyH9lcAAAAoPVQQ7PZ0pzMTOyRoYF+6e3WZU27e2Xn
4IhMzMxqPWJNLB6ekKH+7rKsqlEP2fkDEzI80Kt+313hXENjMjNXOtOsTOwq
/dyg3rV4WCaG+rU5zLK5ioWDsnd4QHeN3dI/uEemCuecq5LN1c0xMig7e7vL
9ql/YDi/T3OW9gkAAAAAAKCZqKXZ5+Mf/3jDcrkXXHCBpFLlNz1873vfs/TY
a665puHXruXo7M7mWrg/ZLqUme2ScdMYr5ax8q0J31kxqWZIza7RUjY3E5NA
KQdYJcKmzhccl/LLy2lZss5R016+Wu7QmWxu/oIlFiiu1RuW8phxlWyuulfV
M7Pq68YXkbXxyuLPKvXWVE4z2mn42PWoO5ur5A77AtJumM1tl0DfpKTW26J0
3VJa72Zv/v1qFCttcjY3Gw9V6ZWtp70+veG4rNnSJmZzlb7VyvO67tazFtWy
T/rP+ZX+1ZlV/cUjEij1tzb9voBqdNlci8PwexkMP5N051CyuPm/R7wVn2Oy
uQAAANA4nQFluHNsZs3N5ip9aXtrOJ+uj0j/WP6/Ks1Xur+vt0J212Q+w/Pr
8r6D+yz071Duf9wlEwdNksaLMzJSvN+ye+ceObhYdVIAm1nVzKuuTt8WrPL7
FHVSrf5r8Jh1ZXPt+IUSAAAAANtRQwMAAAAAAACsoZZmj9OnT4vH42lYLvfg
wfIbxKzmcpVx/vnnN/z6M7GAY9ncZMRnOfuo3iPir+e72OO2ZXO1PsPVr0/b
i/CqY+MStpp1bES20PQ8FfZI97P2smy0eTZXv1eT1c4/rfU2XvP9/ZlR6TTM
+GZktLO0tvX0+1yrnmxudjpSXGub+IIRiaeyurxoTrKpuESCxdd9W6dEmtpn
tWylMqn2ZPaLabSzidncXGq31sfXpJd2idZDNSjjlQ5uxvsnl5V0Mibh9lLO
uUvGq/X6Xe8pa9yn3HRUwuGQBLqixpnwbEyCpb9/2iPGfa5NWc3mesTnD0k0
nl6bp1anMvlMUvO4XvH5Vo7xrPlwIJsLAAAAjdMZUIY7x2bW7GyuLE7JcCn7
OjAuhw2bZCzKobEBNXc7csAg0Do3IQOl3hu9wzJjknudnRjQ+nSYrHExMaQe
NzB+2KSPx2L+mnt12eDKR2r54eKc691oABtToXYYl9HJKt8qqdbHjX8/odVd
PdJT6Uss19Dq922BWMXvCK01m6vV/NskEGtwERQAAABAXaihAQAAAAAAANZQ
S7PHkSNHmpbLHRkZqXmeN954o7EbEA85ls3V7vuoYRjkJHPpuETDAenweU0f
v95sbln/Sctj1V6o/WQ3SDZXlBx1e4V7dMyzuTX1UDY9v9YTYE3+LhWR9sLj
qvcxrlXN2Vzd89reN22cOcz/ZLqvtJ8Baf4tTBkZ7yq9T9qlJ1El2dmkbK6S
a1bzpoGYhWzotPR4q6yrWe+fgpTs7qjxNVOH2vfJOvX7Etp8UleLcn02d71/
oZh+JmS13uOG7yOyuQAAANA4nQFluHNsZk3P5orSRnZEetU87S4Zm5mVBTXW
uiTzhxKyZ7BXl2WdNT1vWea2e6eMJA7JvG6+hdkZGdvVW8juDu+yskZ95vZm
6R3cI4lDc7JYmnNpUebyaxzZqWVu+0cPilEsWNuXldE9csD0egC0omnp8RTr
V54eWfO1kzr63zsY1rJ09WdPKG5Sf16RG+9S5+wyaLSr/x1N9XKe9j2ZyvdO
jhLNBQAAAFyJGhoAAAAAAABgDbU0e/zf//1fTTnLBx98ULZv3256jNLv9tln
ny07Tz25XGWk0w3OFCUj4tvg2dxUtNPy412Rza0l6+iSbK7k4hIu5iDbguPF
Pp3m2Vzt+V1vNte4X3GqlBluQBay1myuuhalh2v1G6PUHqV29/s1l5JYQOuX
a61vr/nzvFpNmeyibKKnmLFuE2/XeMUeDqupefH2iBjGSJuazRXddx1Y7V1R
m3r2qSbr/q6GZmVzxaSf99q1kM0FAACA0xlQhjvHZuZENlexeGhMBrrLM6tr
R6/s2mvWt7ZkSQ7v3aXlfSuN7gFRIr7W17jSt7fbdH3W1kjfXACK6T7tu0Q7
dhvUgbNxCZVq71W+yzG1u1R79Upo0qS2mxmXrtKcfuP6dtnvaLwhiZtMmYr6
1WO9jSh+AgAAALAFNTQAAAAAAADAGmpp9nj++ectZyzvv/9+9XGf/exnDXO5
v/3tb8vOMTw8XFcuVxkvvPBCg3dgUsvdGd0bUoO6srnryVVO94i3dD9IICLx
VLbC98Vr2UL7srnWc4drbMC+uYrsZEg8xft+Vm69aVbfXClkWbvW/DwlkfaV
P+tswJf01/b6zGl9PH0mWVFVUiI+LetcLcpri+y0RPylz5ZOiVp+u+v6wYar
v+rj4dK+7bbU0zUz3qW+h335+a2khZXXi7+YgQ3FTXav2dlc3evYb/MJ69qn
Wm2kbK4oH/9eafPkP18qvgTI5gIAAEDjdAaU4c6xmTmVzV2xIIcTYzI00C+9
ak63W3r7B2RoLCGHF2o7/9L8Qdk7Mig7e7UsbHfvThncMyWzS/WtcWn+kCT2
lM9ZWOPOQRmZmFHnNbU4IyP9K4/v3rlHDho12AXQ2rLadzQW6lThSUllS8Ws
nGSSMQm3az/3Vy3apiTaqZ8vJsm09juRXDYl8WhIratVy9tq2dwOCYU6pM3X
KX2xpKR1a8ym4hIJ+ixneAEAAAA4ixoaAAAAAAAAYA21NHscOXLEUkb20ksv
laNHj5Y99tOf/nTZMeecc4785je/KTtm9+7ddedylbH6nPbLSCxQPF/nqMU+
jBkZj0SlUsvNWvKYyYivpgxfJdM9npU5PD2SMDzKvmyuvn/rZJ1rVtYT3oDZ
3LLXSiCW/y/zbG5NezXdU8z9dkjliHhOxrtWPT+pSLGHqHkvgXrVls3V7U2t
2dzCXjZYdlLCpfN5u2S8xhOq77Oqe6HlIT1Veyfkynpe+yPT1vOmugxp7aOB
76VaemJbto59qpVuXy3EsCtobjZX+Z6DiOGbn2wuAAAANE5nQBnuHAAANEMu
FZVOC3XLTst1v4yMd/mq10E7+qpmaPXZ3GgqK5PhKvO290iCXC4AAADgatTQ
AAAAAAAAAGuopdljeXnZcqbrfe97X1lW9q233pKPf/zjai53ero8i3bPPfes
K5d7xhlnFNbXaLnxruI5S/1QqxwfDxf7N3bK6KrIU029UtU8Zn6eKlnBXCZd
8b4Ua/nJSduyuVrPW4/0GIeBi8emJV2xn6Oux2q1PHQyIj7XZHP1xyn9SsdN
s7m17JX6uvH0iOFLUM0Nrry2UpH2lf9uUN/ZWvs6q/nVtqCMV1tQTuuXUD3D
uk6ZcenylnLDYZms596pROm92i4RsyC9mpeu9pxnZTri1+47i6Zqew6bnc3N
Tks0aqFX7bqzrWtOvL590s0zGY1V/Q4E9fsS6s67Nzmba3EtZHMBAADgdAaU
4c4BAEDT5DKSjPVJoMNXrLMWa8O+Dgn0xSSZqb3ql0vHJRoOSIfPo9U+PT7p
CIQlGk9bqiOWZXMLJbScpONRCfn16/SIzx+UyGS9tUkAAAAAzUQNDQAAAAAA
ALCGWpp9LrroIsu5rg984APy+uuvq49dXFyUYDAov/71r8vmvOOOO9aVy1VG
e3t7k3YgLVF/8bzVemqmYhIo5fz8azOLNWVz9Tmu/FyGubHspISUc/pCa3KF
VvrmZmNBdU/Xnc2VXP644jm9IePvnc+lZLd/JXe8O7X2jhV9HjpkOEk2fy5v
1TxherSzeJ+MT3ridd4dU0MOLlnKxHq9xYy2UfZNt1fVnl9PMXtoGtJOSI+n
tMakRNpX/r2rahC2PrVmc5WseWk/2vumTe5Tysl0X7t5Hj43LX3F94YvGLN2
/krT6HsyrKunQUrdb+PnMqV9jrRHTHKg+v4LXgnE6u2abYGalV1Htj2tfeb5
o6bBZNld+jwz6+Odi0tPsYexp3PU5Lm1aZ+U11LxufOGTPLF2ZiaF2/rqjfv
TjYXAAAA7uR0BpThzgEAAAAAAAC0GmpoAAAAAAAAgDXU0uzzyU9+sqbM7Or+
uavt2LFj3blcZVx33XXN2wR9b802nwQjcUlltXRWLpuSeCRY7OGq5DIDEqsQ
d6otm5uXioq/NGdHWGLJtKinLXyXfFjNZ1XMBOrykN5AVBK675fPZZISC+fX
0x6UYIdd2dy8bHwlK6wc6wtKJJ7SrTkrqXhEgr7SPhnld3V5aCV3V7bfOcmm
4hIJ+sTn91fpm5uUiE/3uqk3D1dLDi4Xl7C3/LVqmH1btVfRRI3P7ypqFtvn
Kz7vFl9ndag5m1uWpVYytRGJp7K6jKP2vJaOMcxKlvWF7ZDddcQyc9N9xR62
yt7ulgoR8drmU/tl50dnn+7aVq6rr1N7PYcNM+JpiQW86nGhupr41sCObG7+
VamtucLzmn/Pp5MxCbdr12+ct1dy+cGy57byuuzdp1RU673rDaxdv/KZpX7n
QluXjNd9OrK5AAAAcCenM6AMdw4AAAAAAACg1VBDAwAAAAAAAKyhlmafkZGR
mnOzRvlcu3K5ynjggQeauxGZSQl3WFhbe1gmDdqb1pzNzcsm+rR8ptHojMh0
xbxYVhI97SaP9YvS6jIV0R9TOQ9XfkyVXGYqpuVvjYavSg/ibEJ62k0er2RV
U6V8mouyucrSy/KFVbJvSu672l4ZPr+rJCNaPjw/PD2G3Ukt016ztQyj5yMj
k2Gz16M22sOTYvjyKMvmeir31m3IdZk//6lYQMvnVhzV+rvGJVTP56HlfPTq
09mRzVVYfV47JGz04VhkLZtr9z5lZTrSWf3xvqCsr40x2VwAAAC4k9MZUIY7
BwAAAAAAANBqqKEBAAAAAAAA1lBLs88f//jHujJsq/O5vb29dc1jNF577TUH
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
Nld6rDcUr5yr1dXkOjr84gtGy2pkuVRc+tT8qkd6EkYLTetqmV4JROKS0hYj
2fw8kaBPfP78OezK5vo6pCM/wpOp8use7SqeIz86R6XSVxkWvnsw5Cmut33V
HFlJTWp719YWkNVbDwAAAAAAKnM6A8pw5wAAAAAAAABaDTU0+zQmm6vIyHiX
r2rvBuVetr64SdeKRmRzFdm4eS8MJbMbjkvWyvkdyeYqp/Vb2N/iPYy+DgmE
oxJPNybB+/TTT6u9c++9996GnKNkeXlZjh071tBzAAAAAADQSqiluU+lbK5S
81haWpLjx4/LqVOnCv/tOpayuTnJJKISKGVvvWGJ58p/rmZL/VHjvrip3cWa
m0dC8Qo1LV1NzhOaNOiLm5AeT3EdXeMVv9suN96l5nJDhnXKbH7NXvNrryWb
m59jt8GFZ0Y71dxtpNIxmVHpLJ4nGKu83mwsqL7GwtVKqgAAAAAAoMDpDCjD
nQMAAAAAAABoNdTQ7NO4bO4KpT9FNOQXn1efFfWKzx+USCwpmWpR0UZlc1dW
J6nJiAT9PvGUrS0ko4nMyr16Ls7mFta/23o+t2qP4nX66le/Kl1dXfLcc881
ZP6SBx54QP71X/+14ecBAAAAAKBVUEtzH302V8ngnjx5Uv70pz/J1NSU/OIX
v5Dnn3++kNN1HTWba3X4Jbq6FJWJScAse1p2uuI8wQq5WgtZWEUyUvz+QF9E
kmt+mpPxYLU+tUVqVtiGbK5ZfTA3LsFS9na8QvHUSj7a4t4AAAAAAACN0xlQ
hjsHAAAAAAAA0GqooWHTyyakz+8pZG27YumKPT9Uuaykk6PS5Wurft/eOrz6
6qty9OhR+yfWeeyxx9T+vJ///Ofl9OnTDT0fAAAAAACtgFqaeym1jcXFRUkm
k/Loo4/KjTfeKO95z3sK302m1Flc1zvXajbX2yGBvpgkK7R1zY2XerqafSfd
Cu17BcNrj7WYP9XmqHS+uIStfm+her4GZ3N13/FXcU01ZXN9ElkbSAYAAAAA
ABU4nQFluHMAAAAAAAAArYYaGjY3rT+wpydh/WHJiPiK9/X5GxHObbAf//jH
ai73uuuukyNHjji9JAAAAAAANgRqae6jZG5PnDghL774ojz++OPS19cnl19+
uZx55plywQUXyH/+539KKpWSU6dOOb3UclZyoVVoWdlaRoVcrR3ZXLWH7wbK
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
7s29wzJjFFZdnJLh7tJeD8lUxeMW5cDISva1d9c+MUyqLiZkSO11OyoHDVen
zzabZV/1rwNldMtw5QXmzcr4zup9kvNPnoz1l44bkPHDRl1xZ3XnNpsvf9xg
Mcfbu0v2Gcd4gQ1hLPVTuWRPoGoutzSUYx8+9LjTy9ZYyZVWOia7LPcO5f98
u5bR/Iv8v/9j/s9++Xr1332lH9Eed/2U8ifLkk7kH/8F3Xyh/Pw7lmXPH1bP
tyy//smyvP+Wtcc+9qoDv3drwP6szb4uy4Gfr9qfVc/X2j01siy5dH7e1evL
jy35Pb0+P88LS+ZrrLQ+5fm76svL0qafL//fO/J/nqt6xUVL2nXq52kr7t3e
tJXnN38Npcfm50krf3Q8/zoaqfB85P/sQLaW10xx7/LXv2V7+evv/d+o9FoF
AACwFzU0AAAAAAAAwBpqafZ59dVXpa+vT7xer7zvfe+Tp556Sk6ePNnUNSg9
coeGhuTiiy8Wj8cjO3bskNlZbjoCAAAAAABYD6czoAx3js1Jn7NcRzZ3RpfN
NWi+W3sWdjE/rdajdXBvpf6w7srmDiVMu8jK4bF+Cz2KF+XQxIRxxnfNXN0y
ahjO1e1P/5gcNptQ/xxWOXZxakjbu/HK9er5vVqfW/PevsrB+2SwdO7BfVLl
aGDD2/PCY5YzuauH8lhXqCObm51ali3byjOdq8c//sQ8j1meI10uy3pWGluG
8udVHnh8WW65pcq5n2hyPrIB+1OWfX1uWXZ8ucI8dWVzl+WXw+ZrK42rTNZY
tj4lq1ppffqRf872VsnA5v6Q35ft1dd18XDxtWCoPJv7QrrKvKGVa6huWb5f
5XVaeK3ermSbLUwHAABQB2poAAAAAAAAgDXU0uyh9KWdn5+Xf/u3f5PzzjtP
PvShD8ljjz0muZzlb2i2xdLSkjzwwANyxRVXyDnnnCOf//zn5bXXXpPTp083
dR0AAAAAAACtxOkMKMOdY3PS91W1KZtbsb9tbVnYpcVZmRrpL5uzcgLUXdlc
47xtabnDtpyzQNereHDfgtEJre/P3IQM1HDsTtMs9pxMlDLfpn19SxYlMVR6
HQ6K4eUALSD951fl4j3/XHc2V3msMofjas3m3r4sVxXzh0oPU/W3bcV+p1eG
tIzi+x8xzjvqc6RXfWOlh+mOqWXJlvq15v/5QmJZLt5WPt+eHfpjxfDYHc3s
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
m1u0tCwHfp4/bseybNleOVd65ciyZC2s35Zs7vFl2fHlGnOvZHMBAMAmRA0N
AAAAAAAAsIZamv2++tWvyhVXXCFnn3223HTTTZJKpao+Rulte/ToUclms5LL
5Wo+p/L4qakpue6668Tr9Up7e7vcf//9srS0VM8l1Gf/nSvZpRqGozGnVx6V
8FXkrZqh5bO5bn4tuXltjntFHg1b/7wKP1r51avmNmsaYTGYDi7k+myu/n1u
NoLb5LY7HpX9GXcFYLX3EO8LrPJGUr53W7D4+tgmdzyZEUdevW+9IvsfvVu+
FN62kiMvjuC2sHzp7hreU3a+V9X/3W31faP7O8+tn2Ub2RsvyZPf/ZKEtwV1
z+NW2XbbHfLo/lpet29JZv+jcveXwrItqHutbS2+Jl5x1+c3sBk5nQFluHNs
arrM6M29wzJjtf/s7IQMlB7XPSxTJo9rVDZXDo5Kd2kNQwmxtPSyx0xZe4wB
O7O5teSM5/cOujibq1+ftbz34tSIDI5MyZxhCXxWJgaL+9O7S/bNVp8TcJvB
mXtty+b2/+/dzl4M2dz124jZ3DWWJZtdlr35Oa4MafN8KlH5euzN5ubn0OVy
z7p9WR57Lr+epQrntrTX9mZzbwmZ/RwAAKC5qKEBAAAAAAAA1lBLs9/vfvc7
+ehHPyptbW3y7ne/W/77v/+7kLs1cvz4cXnppZfkoYceknvuuafw77VQcrlz
c3Py//7f/yvkcs877zwJBoPyzDPPNLdnrmuyuW/Jm2+8IW+88ab5ffAt2k/0
rTeVa39D3nTRrfstn821+lp6683Cc/OGHU+O1bla9HVuD7K5sKZlsrnq2Jr/
+9c9/5ttI/XNdePfsS3rlcflK1uLr9mtX5Efv+TEpr8pLzz6Fdlm4X217Ss/
lqpLtPO9SjbXNV55vPprJHjbo9VfH2++oMuiG48bv5sU93yCA5uP0xlQhjvH
Zjc7MaBmPW/uH5UDC+bHLx3eK7t6tX67w1UCvQ3L5pb1wM2vY6rKwhdnZFhd
d7+YtPq1xM5s7mJiSJ2r2yzQujCluwZ3ZnPLnpfeYTF9WvQZ78G9Ml/hkAVd
f+bCGDlgukLAjX780j7bsrlPzT7t7MU0IZtbKbtJNtd8f5qfzdVPpLueHcsV
/25YVzZ39R4dWJa2KuezNI/K3mzunh1kcwEAgHtQQwMAAAAAAACsoZbWGHfc
cYdceumlcu655xbuoZ6ZmZGTJ0/K8nL572+V7KySq/36178uH/nIR8Tv98t9
990nmUzG8rn+/Oc/y2OPPSYf+9jH5Mwzz5QPfOAD8r3vfU8WF9fTvaEONWcE
GrYQudMV63CClrtwU+yi5bO5Fqn7YMeTU3q/bfI9XR/ts+J769jEWnKbybu3
FnNmd0uy/lOiyTZSNtdsiW+98ku588ZSvus2Ia5fK3f+HduS8q/p20pZxBu/
K0lH/i/Gm/n3/lYtWxm+W36cfEmXy35L3nxpvzx6R1jrpXtblb+T7Xyvks11
hTfzz8NW3Wvkly9p3w301psvyS/vvFF9DW29Y79Jpjb//NymZbK/8r398pL6
YlNea7+Uu8Nabve2zfd/cgDXcDoDynDnwKIcHO3X5R97ZXBPQg7NLYjaynRp
UeYOTcnE8E6t72z+uKFEpTRlucZlc6U823lzt+wcnpCZ2QVZ1PVgXVqYlYN7
R2Rnt5bvHJhYf/NVO7O5snhARnp11zEyJbO6i1CuYWZiuHANg2NjMujqbK6s
6qu8U4YnZmR2YdX1jO2SXrVns3E/XP0+F8ZA5Qwv4GbHT+bkH370b+vO5Xb+
MOT0pTQom7ssO24pHh9all9XOGJzZ3Or74+j2Vylj+0XzLOtta4v93Pt+H98
onyP9Ou+8pEq+9f0bG75+qw+FwAAAI1CDQ0AAAAAAACwhlpaYxw5ckQ+8YlP
FPrYnn322fLlL3+50Mf22LFja4597bXX5K677pLLLrus0PP26quvlmQyKUtL
SxVm1ii53mw2K/v375cbbrhBPB6PXHjh/2fv7p/iOu/7//8Jn9/Uphm1zURJ
m5LJpOOknVH7+U416Q+a3kxUtZnNzHe/bkM6EDehTkEJTCU1FUQtVSrZXmyD
bGQjYwVjG8kGW5ZvIE4gDooBp1pHNihGkSWn2khaIxuBF9t6f/c67LnZ3XO3
u2c5h+X5yFwTS5y9znWuc+1ZfJkX70/J1772NXnttdeqdWnOyOZGQDRzQ2Rz
V5HNjZpgnhW+c5uZcWnXa971l1YfHeGqlWyuZnHMWIfxHhLipYnmZ2zNWcw+
m/V6uc1HZDakf71In2o1c5DZZ7ZbydP0TI806u+rgy75yyDfq2RzIyApPcZa
dfp+LCMzRsY7Lj2zDl0tZvvSsrdudc0vSr9+D3ceFO4iEI6wM6C0aDasunY6
P7/q2toOyfA5f79TsKrZ3Kylc8OWOr5erU0OPX9e3Hds/Qk0m6uoPKvH/Lf1
TstS9n8TXfl/X9xnyNlc5dpEXo1fp9ay75hrrWbq5qJWvJ6el0/1/1XZuVz1
2rm3fxn2ZZSezfWRdbTWQd3Ubd9nzWZzA5qfamVzF17L9nfaKz9cWjb3Kz76
O2KpPXvkSv5XLz9XQjbXWmN3jbK5cuWmfCH39d92uF95btyU27LX+9Sv/NVQ
BgAAKAV7aAAAAAAAAIA/7KVVz9DQkHzpS1/S8rmq7d27V15++WW5fv26fPDB
B8Zx7733nkxNTcmOHTvkd3/3d+UP//AP5cCBA3LpknMNBpXLVTnfF154QXbt
2qXV6P2t3/ot7XxjY2NrXzNXIZsbAdHMDZHNXUU2N2Iyeu6pXcbcQlce/OY2
0yN6zqtVRtLlnw9rr6ayuZKRsfbc9TT18/woSTQ/Y2uLpXZo/KA4RhSrzfK7
FFyzthaLY+1m/tIp9h7ke5VsbugyM4lczdxGcf2VG5b7Xn/E7cC0JJPuN9P4
XnJnvbh2BaBqws6A0qLZYLUil6aHpffAPmkryIm2tO2R/V2DMnHuWknZ1mpn
cwvHvaetJT/L2dIme/Z3yTFVuzWIUG5O4Nlc7TIua/Vx9+9pM+sTa+PvluHp
y+a8L52VY/vNYyKZzV29IO2+dO/fk7eeSltLl2T4QItnfV1gPXjg7PGys7nq
tZFQajY32/7ULT9546Z85evmsceu2B9Ws9ncgOYn+GzuTZl97qb8du7r35x2
GeMF83r8ZIf/T/Z6nr/h1Fn2vJZx2WZbf3FTPqH39Z2bzp9FKzfl0L9azrtW
2dxsf2eOWuZ2wi1zm71fljEW5pABAAAqxR4aAAAAAAAA4A97adWjMrd9fX3y
t3/7t/LJT35SPve5z8ltt90mzz77rFYrV9XFvXlz9b+rqj/39PTI5z//efno
Rz8q27Ztkx/84Ae2dXaVK1euaLlcVSNX1dr9+Mc/rr3m/vvvD+8+RCSbm5nv
z/38+wbM5qbHpTMevdwQ2VwlLeOd8YAyMRmZ79/Ac5qZkURjTLv+WOtI+ddv
ZGUqqz3nL7c5L/2NuePax13rLyJ6aiuba7ke6i6WJqKfsaG7OCKtMTUvMWlM
zFT0fLs40pxbm42h5g7L+10KPp7zQb5XyeZWKCMziUaJqfmIZe9zud9MZNIy
Ozkr7stE/71BAcz9ZKd3BhxAVYWdAaVFs8HJZRnep+cpu8UrfgoA8Pb92afl
M8d2+M7k/uH3/1aO/8I+ARiKUrO5370pX2nI/jl77PMXbsqyfszKTTnzg+zf
N/jLqNZsNjeg+alG3dyF05YMbLZ94rvFY5zNHvOXX/c+d17d3EOr+dy27PVd
uKFf001ZyPb9ne/6yfDm51nVuMavmHOzfGN17r7w9dVs7zcbPNZr4Nnc4jHa
3V81dzstc/eXz1E3FwAABI89NAAAAAAAAMAf9tKq6/Lly3LixAn54he/KB/7
2Mfkt3/7t+Wv//qv5Xvf+55MTk5qGdv3339fq6N79uxZ+epXv6rleD/96U/L
t7/9bXnjjTeK+lR5XZXv/Yu/+Av5yEc+omVz/+qv/krLAV+9elWrqRuKILO5
6XkZ62mVpvpYrk/1c/NxaWrtkbF5u59+t+QNHFpT0aDMn5Mv/pp+SXq9stX8
Yzo5Ip3N8dWf41e5wPpm6RxJ5v88fmpSelqbJB7Tzx2Txuy4x1M+0iqZizLe
3y7NBddd39wu/eMpx7yLmd1waG45gExKJoc6C85ZL83t/TJ+0WfCRr9f8Zhx
zfGmVunJjbmSbO78kfpczmXMOe9jrL1WOeUYjkhKj1umqsy5zw3AeS0ZY3Nq
JWTjLJke+2b33ovgOlcqWHcZozZhhc8bfT7jPVL1eEtSr60Xl0SFJ8tk536o
s1nq4wVz1zkkkz7nPz0/VnT/1Hs2oe6z77f9ah/1MXMNxuqbpLVnTGwf056v
z41haFK8LqNwzS7OqjVbb6zZnbFG3+NQjDm1jKW+uVNGkun887k9S0v+3ApQ
gHk/++eBObdO/VdyP806kN7PwzDWbkWfsbYKn8sZSY33SGuT5bkbV+MZ95w7
g/FMjVveB6vPVH/rLzuGySHtXsfz5iX7/Pe4h8bndKV5b2ut2lBDh2k51apn
bF2+97DhuZbXeTa36PrSSRlxeXb6UcmzQyn7MzEzZqw3t++RghFcNtd8v7XL
GL/oAwhF2BlQWjQbnJDNBYBquPjuZfl/T33bM5erjrl842rYw81XajY3e8zy
L27KFywZU7vmlUus2WxuQPNTjWyusvBafn7UsWXH/53XfGaHL9yUp7o8+vvm
TRl3rK0rWj3h27zG9a83Zbaghq39uq1GNne138cPeYwxN3dtbnWJAQAAKsAe
GgAAAAAAAOAPe2nVd+PGDS2fq2rmfvazn5XNmzdrGd14PC5HjhzR6uPOzs7K
q6++KkePHpU//uM/lk2bNsmf/MmfyOOPPy7pdP7Pt2cyGbnjjjvkT//0T+UP
/uAP5G/+5m/k3nvvlTfffDOkK8wJKpt7cUiaXfOHO6X+4GRBfarqZ3Nns9cX
d+q/sUeSi6s1e53HHpeDk87vkcVkjzTF3K8h1mxfI7Tc3JD3OWPS1JMUt3e2
6qPR417NVlI3N9t/3CPvk0zEjfO1OwUVjDxMcZahkrlfVTvZ3Gqvc6XSdRdY
NnfmYPnrsiQZGW/X57BfKikFueh2f3Jz1zw075Iluyin9ta7vD7b6vfKKdcJ
SclYp0cfsWbpn3W6g5W+voQ1G/e6luyMnNrrMqfZ+Ry56J3NLetzK0Al5f0y
Mqavx6b+orVvzm2/TNrMTXH/ld9Pf9nc8NZudbO5s9n+467jGZp3D+Atzmaf
yR6fYfWdY9mrd+zBfQwe4wgqm2vWqs1+Tof6rxSW+9Nf4qeD/rmys96+7m+A
79XQs7kezz3vZ17lz46KPhPXMpubPiWt+rxUUhB6cdKo3R0/WFmNagDlCzsD
Sotmg5MlmegimwsA1TJ//aIMzj0jLeMH5P95/Fb5v4//f9o/PzJ3Ut64Xt3d
zrKVkc3VLNyUY73Zv7fmKbP//Jdd+TVPndRyNldT4fxUK5u7arXG623fuSmf
KMgQf+Jb2b/P9nNhpdTxZV+T7fMr/3pTNln7y/75OxOW+rKuVuvj/uW3Cvr4
1mpN3gXLccf+y3LMmmVzV/tevpC95uxrPmG9tw25a82O87LH3AEAAFSCPTQA
AAAAAADAH/bS1sZ7772nZW+/9a1vyZ//+Z/Lli1b5OMf/7h85jOf0Wre1tfX
y3/+53/Kf/3Xf8kXvvAF+ehHPyqf+MQntDq6r7/+elEtXFVzV9XV/drXvibD
w8OyshKB/wAbSDbXrG26s7lHJucXjZ87zyzOy3iiyagH13rKIWVi5B68xlFC
ZrG+SZoa90r/5LwsGgO6KJM9zcbP9McT/ZKIx6QpMS7z5kGSSg7JXv2a4gdl
0u4H6RfHZK/+M/t7hySZsl53SmZHOqVeP49rLTnzmjxjF5ZMRf3e/qK5nuw3
M1nNThN5ccTMZcQL52dR5if7ZW92bTc357IXZWUg9WuKi/2lW9aMag417tKn
cpmf1lP5WZFA5t57LWlH+am96ZP/WsQRWuerA6983WVmJNG4Wh8v1uqWmfag
P7OaR7TMWmqysG5labVoHaVHjExO60gF6UxLtifePiKzKXP+F1NJGTJyi/WS
SNo+aMz8XaxJEmOzkrLew9kxOdhouYe2H+kZmTEyfHHZ2z+Zvw6sfdjm66wZ
wHrZO5QsGkOiSa992Oz4DM9bs9mWGLeu2XTe+3Zndo04zXpmxpLrajwoY7Op
/Pf/WEKaYs3S7JpnC+Bzq1Kl5P0Wx1xrkxpzG49LvGidFHUWyP30zuZGYe1q
s+P/M9aV2U99U5PE620+P8cTlt9h4JJVtTxTY00JGbd5phqfYdlB23VjfD5m
56V9ZNasVZodh/Zsr9ffbwmxfbRkvxdoja3mIBsT5eYF56W/Uf+cUesyLcmR
/NrqWi3hxIiUUJK1PJb3U8l5TctrO+3WSIDv1XCzudlnb5P6XmDM5bNopzQ6
5lADeHZU/JmYfSYkGlefz7FWGalmNHfEfI+VVRLa+J46915w/X0xAKot7Awo
LZoNzi4P78tlcwvavmG5HPbgAAAAAAAA4Ig9NAAAAAAAAMAf9tLWjsrPzs/P
a7VwVRZX1b395Cc/Kb/zO7+j1dL9vd/7PfnUpz4lv//7vy+/+Zu/qdXO/fzn
Py+9vb2SShXneaanp2VhYcHmTCEJIps7fySXIWkVpwjb4mRC2t1+gL4a2dxs
X/al0xbNmmZuGYRkwsh/OdV1VXXvEi71Ls2f63erSec3N2TmM5yyOtqYJjtz
47abS0stUMcslNaJHNRza2Vlc9NyqtXlPulrprExV7+3XcaLJtGsPWfXR+Vz
XyPZ3Kqv8yDWXYCy51m9H2Mye8TMHxe3uOz1Kr7qYr6/0cjXFa9N/4x6wfGE
OEV7Lo60S8LhzZgx6gs6ZyTVPeq33KOi4Wbfb425OXGujzwvRxpX81DtY/mf
Xf7GkJbxzlxmqzBLn+O9Zq3v20bpt12yZhZwZ7PL+8haG9LuvRvE51alfOb9
MhfHLfnTZtssmjm32evxiBIHdT+9srlRWLurgs/m7mw84lxL21ojM2H3rvf3
TFW1zpscc4Hm56P9OVbPM9KecP6cD4KxhuOSmJmXkWYzk1vc6qXT9v4ENZb+
QLK5tq8N8L0abjZXfc671MLu14+zfy4G8eyo9DNxzWRmzO+DHZ6BxSzPCEuL
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
Zb831T9b6rPXV41nvvn82FmdcDoAD2FnQGnRbAAAAAAAAECtYQ8NAAAAAAAA
8Ie9tHBkMhl58skn5Stf+Yo0NTVJb2+v/OxnPwt7WJWpQja3SGZe+ptzP4/e
PCK2lajWXTbXkgFpHRHHClgBZnONDExTf/kZyRn/9zuIbK6kT0lrXt5Fv9aC
fEiyZ7VWqX6u+SNS73juoOaebG7uINcMTSDrLgzl1GhMj+TW605p7F+jUFA6
e6/jDnmdzJi058bTWfby0+tS59ev9q2kMeiZevu6lUFkc1MjzVXJ5hbx87lV
qTCyuQHeT9e8XxTWriGEbK7+GWaTvyzlmWr+HopO7+xr4Wuzz0C9Bni1ooDG
798oKZtbX7XMZXpEn69WGfFdmjT7Xm/0yPQGmc01vi/yWT/V8l4qt96q/2yu
/vtTdlp+p0rxOCp9drhy+0yshuyzfqhZz7I3y5HZav17sTWbW5VwOgAPYWdA
adFsAAAAAAAAQK1hDw0AAAAAAADwh7208Fy6dEkmJibk9OnTsrS0ZPz9wYMH
tbbuBJXNTafFbSV55jfWXTbXZ00woz5a5dlcI7/qI3OSSaXsM6vWjIdHJ2Z+
qJJ6qfo85fJJycTqNbSPF+Rf9DlYnSc9j2Sfxwpq7snm5g5yn88g1l2g0jI5
dMpzTZr1HO1rL9u+pr+xjFyXt8V0ue81M4ceT3jVS0xLKmVfKTKZiHtn2bUu
JmVkPFXw3ixhDMZ6s68HGUQ215p5dB+OJWPm9N6t9HOrUmFkcwO8n+55vyis
XV0VsrkeeUMzI2ozNyU8U437WpiT1CyK+6PFzDZXVnfYhfH7DLzej5Z7Wa33
k5IZN77HiWdvtp9/w1k03ucu1xBkNteaBfZa16IuSR9fo5T7KyPM96pXxjsp
ibjTmgnu2VH+Z2LAFmfliP47GGLNMjRfSrVlXUrG+r2/J7GuoeaRqvy2BwAe
ws6A0qLZAAAAAAAAgFrDHhoAAAAAAADgD3tp4VL1cwtt5GxueqZHGtXPmh+Z
dcxBGJm3DVU3NyOzPY0+5tdvbsgynmaXa9NrjtUflMmigWVkXM+rxbNfd7ph
i5a6ZRVmI/SMhcrZJntWszntY8XvIf2+qbpwk51u8xHU3JPNzR3kkXUOYt1l
ZWYk0bhamy6WvW9lranMrBxp9JG7SpsZ9OIcuBMzk+T/NZ4DlvmRvRLfGc+u
eacsjuU9aVMjMGPUvoxn3w9OV5w9T39z9piYNA/NF499/oj2jFZ9dDr2kZbx
ztX3Z2NPMq8PcwzNLuvIfL3T+zKQbK411+a2HrNrv9mlRmHFn1uZpBxpWl3P
9XvHylvPoWRzg7ufXrU4o7B2VwWfzd3ZeEQcY5LZz8/OuFuG0Xymuj3HMvP9
Rr6xqJvMvIzszV5zvF2cHy1mTtW2/OjFEWmN7dTmvjExU+Yzz/L88vl+jNuF
NVVPySPSpI2nXvaOVfAbQUaac+sy+/7ut1lTFvpzQK+Z6/iZEmg21/p7INze
GxLY92Lme1V9/+V8vov9+nH2ufHKnx2Vfyaqr88kGiWm5Wmz4yx3UtT3LPX6
98N75VQ5/WQ/B3r8fE+S/cqkPicB/+4PAP6FnQGlRbMBAAAAAAAAtYY9NAAA
AAAAAMAf9tKiZ+Nmc/VczerPpseaEjI2a6ldl0nJ7NhBI/vgmIFcd9lcs7ar
lgc6OC7zi/pVZ2RxflL699ZLrL1d9gaWzZW8fIs+1+Zp1VwnctkWl5zMxREz
sxbfK/2T85Y+FmV+sl/21tdLc3NAdcv0GoGtB3M5CPs6pkaNyvaDuSxKu9hE
eDXBzD3Z3NxB3nWIA1h3Zg3SSp43aijm8ya+t18m5xctz5vc+tWzTLF2Gff5
EWfWJvSu/+hfOnuf4sZ46wvGm1mcl8n+vZb8ot2CX7T0US97+ydt17t7zisj
M0YfcZs+xiWRy5naZ64KxjCUlJTl9anZMY/Xrwomm6ti3no+TGUkD9p85qj1
2CzNjus6gM8t47NzdT17lFG1F1I2N6j76ZXNjcba1WYn8GxufXOz1Dd2ykgy
lf/5OW55FqrPMKfnT8EzddzmuVCvP+fsMn9pS2bTcW5z86Z+D4fNo8WsLe52
D31In8rVznV6L1nmxOV3ghhrWFvH/RV837GY99xVYxpJWr7P0eenPZfv1J4j
PZJ0+6wIOJurfleF8/0Ty/diO4217xBp9sV8rzZp39s19xR835RKytBecz00
HnFKnlf67AjgMzFj+d0bHt+/OU/ImPl9Qtzh94n4spj9Frcxb63lfX9U+F7M
tuZq1bAG4CnsDCgtmg0AAAAAAACoNeyhAQAAAAAAAP6wlxY96z+b678V5xJW
62DVe7wu3j5mXzNX62I872ftnc8VpcziRTll+Xn7oqZlUCz1vxzzL5Y6kD7y
BovJHkv2x77Fmvtl1q0UW9JSK86mqeyA/xypF0utQdVaT9nXui3IWzgepwli
7v1lc836dtbcUHlzYuY/vdZElNb5qkrXXVDZXJWFme1vNjNVTq2+lDp4aRnR
azE39jvXwyxLWmZ6mjzH61a/dXW917tf78566XSsQ6ikZKzTq49G6XEMqPl4
faxZ+l0ePEFlc7UZObXXzOcWtdWcp3uuvsLPrbzPzjJzc6Flc5XK76d3Nlc7
KgJrt7TPWGfWtTmbnXOXMWXnbmjevRLt4my/NHs8U+s7Xb5vSs9Ij5GDdGrN
csThHgaWzVUunjKzjk6tsUdmXDKQednceI9U9isSfH5OqDneOyIetyr4bK7W
5ylL9tb9/XGw/PBobviW96r6/Swu664+e4HuZ6v02VHhZ2IQ2dwy/t3H+VzZ
tTbk9nlk3se9Q26f8wCqLewMKC2aDQAAAAAAAKg17KEBAAAAAAAA/rCXFj0b
O5ubk07KSKJVmuotWZFYXOqbO2Vo0lJHzenlk4mi7F+0s7nKosyP9UhrU9zM
GcTqpTkxJvN6uGFxUhKN+pzY518y8yPS3pifsXHNG2RSMjnUKc0Fc93UmvA1
15r0vIz1ZO9XXO8jJvFmVQcwnZuioLK5GRlr93NdaTnV6vP6NZXOvb8MYPbm
yIi1vl5Fc5KWyURhJmV9ZHM1lay7zIxxL2KtIxWuqWx36dnV9WsdS3YN1ze3
S//YvEe2qMD8ESOr3jpSWQbKcbypcelvb5b6uHXu6rNz1yNj8/7OmZ4fk57W
JolbnpOx+mZp77eseZ991Of10SStPf76KH599rnR1CqJoUlJeTx4gszmKpnU
pAx1NueNpTE7n+O5gfiqeV3u51b22XLQyNXZ1wL3FGo2d1Ul99NfNjf/PGGt
3ZI/Y20Vrs2MpMbzP4NicTWecc+5MwemP1MLPsfa+30+F9QY+qW9ub5gbn3M
y8URaY3l3jeJGX/fN7gOJS3JkUTBZ7L+Xrro2f9i9vtRIyvv+rs5SqC+z+lv
z//M0u9TYkgmL/q86mpkc1cHmP0+pvj+aZ9lufeh3yG6KXqvqudewbOz3vL9
n6+RV/DsUMr/TMzITCL3PVmsVUbK+WYi0GxujrHWLOtfzUmJzzkA1RN2BpQW
zQYAAAAAAADUGvbQAAAAAAAAAH/YS4uedZvNBQAApZvsDOj3F6xPpWRza4P/
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
i2YDAAAAAAAAag17aAAAAAAAAIA/7KVFD9lclOrFF1801s1DDz0ky8vLYQ8J
AAAAAICaEnYGlBbNBgAAAAAAANQa9tAAAAAAAAAAf9hLix6yuShFOp2W7u5u
srkAAAAAAFRR2BlQWjQbAAAAAAAAUGvYQwMAAAAAAAD8YS8tesjmohRqjgcG
BsjjAgAAAABQRWFnQGnRbAAAAAAAAECtYQ8NAAAAAAAA8Ie9tOjZKNnct99+
26j3ql7z/vvvy/j4eF4N2Pvuu09++tOfSiaTKXs8agxqLKq/M2fOaH0Vnkf9
s/o7t/MUjrewH/X/6phC6jh1Dffff7/ccccd2rF33nmnPPzww5JMJuXDDz/0
dR0XL16URx99VBKJhDHunp4eOXbsmNbvK6+84uv6l5aW5OTJk3LPPfe41tm1
jls/nz7u119/3XPcdtetmvqz1z1Vfau56evr085pvU8/+MEPtGsAAAAAAGAt
hZ0BpUWzAQAAAAAAALWGPTQAAAAAAADAH/bSomcjZnNfeOEFeeKJJ4xrL2yD
g4Ny48aNssZjzaaqTGh/f7/jeVRuNJVKeY73mWee0cZkfa1dNvett97S8sVO
51NNjWdhYcFx/CqzrObHrQ/VDh8+LNeuXXO9/omJCXnggQfyXmeXzb1w4YKW
+3U7n8oJO90T9fdu8+w21+p63daCanfffbe88cYbjnMGAAAAAEDQws6A0qLZ
AAAAAAAAgFrDHhoAAAAAAADgD3tp0bMRs7kqv6pqpKpMqMpmKipn+thjjxnz
oWrUlsOaTe3t7dWyqefOnTPO884772hj1uuzqq+/++67ruPt6uqSBx98UObm
5mRlZcX2vFeuXNHysnp925///OfGsSq7+pOf/MSogatyrE45V1UP99ChQ9px
Tz75pJHjVbVl1XwdOXLEmKOXXnrJ9fpVpnVgYEDefPNN4/rdxq3mwnqNaozq
HHp/KkNr189TTz1lzNP09LTxepUBVvlo/bpVzd/C+rk//vGPta+pWrs/+tGP
jHlRfag51DPDKttrV6cYAAAAAIBqCDsDSotmAwAAAAAAAGoNe2gAAAAAAACA
P+ylRc9GzOYePXrUNpuqcpsPP/ywdozKwpZTO9eaTVW1bp0yqfPz88Zxdjlg
63hVprSw1qzVBx98ICdOnPDM3V6+fNnImqpMaiHr9atMrd3YVR8qc6uOUed0
u/7h4WEt01vpuPW5UplhlR22Us8BvTavU55a5X9HRkaK+lfnf+SRR4yx2lGv
Ua9VfQAAAAAAsFbCzoDSotkAAAAAAACAWsMeGgAAAAAAAOAPe2nRsxGzueo1
Tl5++WXtmHvuuUd+/etflzweazb1zJkzrseqPKg67qGHHirK3vodr/LWW29p
eVmVXVW1Xt3o86XyrIXvIT/nVONU41XHPP7440VfL+X69XGr49944w3XY4eG
hrQ+VZZWZWrtxqzuXSms13Lq1KmSXgsAAAAAQDWFnQGlRbMBAAAAAAAAtYY9
NAAAAAAAAMAf9tIQtKCzuSpP6qc/J6VkU/UcsMqnqpxqOeO19nPvvfdKOp12
Pfa1117TMrxqjOfPny/5nF551nKuX51TnduNfp9V3d+FhQXj71dWVrS6wupr
9913X9E8elE1cfUstpobAAAAAACiIOwMKC2aDQAAAAAAAKg17KEBAAAAAAAA
/rCXhqCt52yu27lKyebqc+An4+o2PmvOdWBgQN5///2i11++fNm1Rm8p16+P
u5Rmd40qU3vnnXcax3R1dUl/f7+cPHlSXn31Vblx44bjGFSWV+Vy9dcmEgl5
8MEHtczuzMxMXg4YAAAAAIC1EnYGlBbNtjFdluF9t8vtt3u0fcPZIwEAgVie
kt1bN8mmTZukrmlUnHbJRxtWj9m0aascvrCmI9y4RhuY8xAYa33rYanZaff5
vgcAAKgG9tAAAAAAAAAAf9hLi4733ntPrl+/LqlUSi5duqT9v/pzJpMJe2gl
qYVsrmqFOddSsrmPP/54INlcfUx33HGH9vUnn3zSyKZ++OGHcuHCBTly5Ij2
NZV9VTV0K7n+oLK5isrYqkyt0+see+wxeffdd23Hce3aNRkcHHR87dGjR+XK
lSuu1wIAAAAAQJDCzoDSotk2ptrN5k53r9+xA6hxRv5TtZgcL/5PAbnDyOau
tYldm1fnvK5DkmEPZsOYkF2bc5nVjhqedZ/vewAAgGpgDw0AAAAAAADwh720
8Ny8eVPLTT777LN5dULtmvr6c889p2Ux1euirBayuVGpm6t78cUXXdfH/fff
75hVLSeb62fcfqm88OzsrExMTGiZ5XvvvdcYt8rf2tUC1qm6wfPz8/KTn/xE
nnjiCbnvvvuM1z7wwAOO2V4AAAAAAIIWdgaUFs0GkcvD+4w87r7h9Z1oJZsL
ILLI5kbU1MbIiEbN1C7ZrK3zOqnpaSebCwAAQsQeGgAAAAAAAOAPe2lrT9XB
VTnFu+++u+Qapaqp16nXR7We7nrO5r788svGHKu6r+WM19qPyqGm02nXY197
7TU5dOiQNsbz58/bHqPyqyqfq+rn6teiZ3K91kI51+9n3OVS9X5HR0e18yQS
CXnzzTdLev309LRRR/jVV1+tyhgBAAAAACgUdgaUFs0GsrkAsCaWp2T31lwG
tGlUFhwOI5u7xpIdUqfN92bZNRX2YDaOZEfd6jrfvEtqetp9vu8BAACqgT00
AAAAAAAAwB/20taOqgF6+vRp10yuyn729fXJwMCA9v96FtQpo6uylG51R8MQ
5WzuK6+84nrs8PCwdtxDDz2k1XstZ7yKyvWq+6Mytz//+c9dj9XnS9WEfeed
d4q+rmol9/T0aHViL18u/acCS8nmljJuNdalpSXbr6mscOH8Wf361782akUX
jkmt5xs3bji+Vj1n1Fz4uQ8AAAAAAAQl7AwoLZoNtZXNPU02F8A6RzZ3bc11
3JKb7wYZDXswG8acdNySW+cNzDoAAEC1sIcGAAAAAAAA+MNe2tpQNUhV9rIw
X3vkyBH50Y9+JL/61a9cX68ykz/84Q+14wv7ULVTVW40KqKczR0cHHTMMs/P
zxvHjY+Plz1e5YMPPpATJ05ox/b39ztmTVXWVuVunc6pDA0N+crVOiklm2sd
9+HDh+XKlSu2x7377rtaflnleH/xi1/kfU29RmVnjx49KgsL9r/F+4033tDG
VFg3V/X7yCOPaHNSWLdYp3K9qq4vdXMBAAAAAGsp7AwoLZoNNZTNvX5aulvI
5lbV0rT07mnR5rhl3zE5a/9r/wBUgGzuWrogh3M1TTfdelycf1spAnXhsGzd
tDrvtx5n1gEAAKqFPTQAAAAAAADAH/bSqk/VPVUZRGue9tixY3L+/Pmy+lNZ
y4cffjivv66uLrl48WKwAy9TlLO5KtussrLqnugZXVX/VZ3/zjvv1I5RuVKV
ES13vDqVUVX5VnW8ypqqOrSqdrKisro/+clPjHXhlN9Vx6u1oo555plnXOvJ
+rl+P/newnGrWsN6DVw1HvVnPU9sl99VWV21HtXX1fWp69THreb83LlzRsa8
sD5xKpUyzq3ux/PPP2/kez/88ENtjevzoY67du1ayfMBAAAAAEA5ws6A0qLZ
UHo213p89/Tq3107Myzd+9ukJff3t9/eIm37u2V4+rKs+BzHyqVpGe49IPva
Woz+tX727Jfu4Wm5ZNvRtHQbx7o0l6yudt7u/bLHet6WNtmzv0sGJ87JNT8X
cHlY9umvNSdF67etxRxHS9vqtVz2OynaAK/JuYlB6dq/p6CvPbK/a1Amzl3z
N8daP8fkwL6C+7TvgPT6HNPZvpa8ed2/nrPcQESRzV1DqQHZkcuIxsiIrpnU
wI7cGo8J0w4AAFA97KEBAAAAAAAA/rCXVl2qrqc1Q6syjYV1Rss1OztrZEX1
pvKfYdDzs05NjbOwtm8Y2dyf/vSnRbnmwhrEKh9qp9RsrqJqv9rVS7Y2lct1
qi+r/PjHP3Z9vZ5j7evrk2QyqWVYna7fb+1dlV3W87dOTV2XU21blTv3er1T
bVyV9X3wwQddX6uyv6+99pqvawEAAAAAIAhhZ0Bp0WyoNJu7JGf79rjmYtt6
p8W9vKp3H6utTQ49f74gh1pJNve6nPFz3rZD8vx5j+BqQTZ36Wyf7HHts1em
fdScXTo3KPtbvK+v7dDz4jZEX/207JNjZ667jme6O/81Lb3+9ioB+Ec2d+0s
H4/l5nqHDNj/ZyUEblmOx3JrfMeAMO0AAADVwx4aAAAAAAAA4A97adXz5ptv
yqFDh4w84cDAgCwt+fihqRKo/lS/+jnU+ZzyktW0XrK5qq9MJiPj4+N5uWb1
z+rv1NeclJPNVVSfKhOscr933HGHkaVVGWG7LG0h9fUXXnjBM5+rtyeeeMKo
CWx3/eWMW+9bjV/VFX755Zdd50p//cTERN5165ncH/zgB67vBXXNqj6vyujq
9YxVu/fee+Xpp58uWksAAAAAAFRb2BlQWjQbKsvmHurqkpa2A3Isr77silw7
OyyH2qz1VS+59LffkjEdlrOWQrUrS5fl3ESv7DNypS3SPe0UQrXkdF3q5K5a
kunuNuO8e3on5NzlJSP3u7J0SaYHD0mbkUM9IC9ec50UM5t7qEu6WtrkwLFs
n9ZruXZWhg+Z57x9/7A4z0p2hNO95vlb9klv4Ryfm5DefZY6tgdeFLshLk13
O/ezsiSXpgct96pNy1s7oW4uUIlRacjVaN209bA4xW6Ls7nLcuFkh8S21clm
/fWbNkvdtph0nJwTz7KjFw7LVv11DaPaXy1fOCm7d2yVLdb+tu6Q3QNJKfwt
pAtTfdKQPbd57CbZoo49ecH73IFYltREnzTljXd1DE19U7nx+pvbwn6NjKjf
1ywkZaAjJtvqthjj2LRpy+q9sJk7OxcObzVem7sd2hzbX9+EpEqc5OW5UTnc
sE3qtph9bdpcJ9tiHTKQ9DFCm/WSvQGrfW42+9xct00aDo/KhVIXwfJxieX6
2OoaPre5pwtT0lcwji0O49DXeNGYjTXjZ6xzMnq4oeB+r54z1jEgSV83x8/a
tLvWORnYvUO2Wu/jlq2yY3f2vL4vAAAAbHTsoQEAAAAAAAD+sJdWHSo7mEgk
jEzhs88+W9XznTp1yjjX3Xff7VqHdaMpN5saBel0WsunqjzrxYsXHY975513
ZHR0VMvAqmt944031nCUAAAAAADUvrAzoLRoNlSWzb29rdu5/uvSaek2MrVd
ctr2uLPSpx+z77hzVnXpnAzub5H9w4V1c61KyOYunZHetlwt3hedE7JLE11m
jdi+s879WbO5rvnWJTndbeZbu+wnxTI+jznOyxjb5JaXJqTLcq9OO5XFXcrO
XZt5ryYchz8tvXtWx9+y75icDfbXWAI1roxs7tycHN6+KS8XWNRu2SWjbv85
qSBruTDakJcBLWp1Tbn+FmRi1y2u596yY0Dmgp8o0/Kc9O3Y4n792njLyeaa
r3HPiCoLMtWx3X0c2lhi0jfnntfMz+YuyGhTnXufW3Z49rkqJcdv9egr2+pi
feLaXeF6mdglt/haLz5l15+/utD593Ru7rBsc7227dn3y+or5wZ2uK/x7Htm
wmPMC6Me153LZe/o88rHl57NnZsbkB1b/F0rAACAG/bQAAAAAAAAAH/YS6uO
73//+0ZWdnBwsOrnu3nzpjz22GN5NXqxar1mcz/44APjnr700kuexy8vL0tf
X592/A9/+MM1GCEAAAAAABtH2BlQWjQbKsvmdjmGOFedH9xjHNs9bduZkWnd
d9ytiqwfpdTNFS3vOzw8LR5XIIN79JqzfeKYzrVmc7sm3Ps8Pyh79GNtJ8U6
by3iFglevY4J6d7fK6cvFaeWzTq3bd79nO0z6uu2eR4MoHSlZ3NjsVu0/28a
SMqFBT0BuCwLc6PSEbPkMLc0OOcjrVnLWExim+ok1jEqc3n9nZSmWyzZv22H
ZWJgR/afvY+9pSMZ2Azlm5PD2yxj2tokA8mUmYNcXpC50Q6J1enXVWI2d2pX
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
NeyaxIXI5m4cqVRKbrvtNvnyl78sTz75pPY+9PNeVFn5lpYWbZ00NDTI6dOn
jXy5ytkPDg4adXQffPBB+eCDD9bgagAAAADAFHYGlBbNBgAA1juXbO5ch9wS
oSzsRsnmznXckrvOBqnhywQAAIg09tAAAAAAAAAAf9hLC95rr71m5GN7e3sl
k8msyXnfe++9vFzw66+/vibn1ZHNDR/Z3PXv6tWr8u1vf7uqtaWrReVl1TNP
jburq0vOnTvnO5ur6n2r1331q1+V+fn5oq+r3zPw9NNPa/V44/G41jcAAAAA
rKWwM6C0aDYAALDeudXNjZaNks0FAABA+NhDAwAAAAAAAPxhL606hoaGjIzs
Y489VvXzqdzawMCAcc4TJ05U/ZyFyOaGj2zu+qfP1XrM5s7Ozmq5WVX39tKl
S9r7z082V9XF1Wvmqoyukxs3bsi//du/accdPXp0TeuCAwAAAEDYGVBaNBsA
AFjvyOYCAAAAhdhDAwAAAAAAAPxhL606VA3b++67z8jKPvvss1U93zPPPGOc
S9XOXVlZqer57EQlmzs3N+e7VmetuXz5stx+++2Ry3SSzfWvp6en6vcunU7L
7t27tRq06pkRxD2x5sIff/xxLTfrN5v785//XGKxmK/3rL6WVG3hd999t+Jx
AwAAAIBfYWdAadFsAAAAAAAAQK1hDw0AAAAAAADwh7206lE5yTvuuCOvfm4m
kwn0HKq/Rx991DiHOt+VK1cCPYdfQWZzVe3b73//+/JP//RPWn5Q9avqcf73
f/+3vPHGG0X1Mq25QKemMn2F51D1de2+plM5ST1TurS0JK+//rp85zvfkS99
6UvauP75n/9Znn/++bz7+r//+7/aONV41Wu//OUvy/e+9z156623PK9bZQ1V
zWXVr/W6Va3Ql19+WT788EPXcTo19XUn6rqefvrpvHP+wz/8g9x9993y5ptv
+qpNqt+vr33ta9rr1fyo7OTp06e1MVeazfW7tvycp9S1ZaW+puZEzY2aI31+
//Ef/1H7Oz/3WFHZ/RdeeEGbIzVX+pzv379fW5P/8R//odWIdVPJfXvppZeM
sQeVYR8bG9PGoerfquyv4jebOzw8rI1F5cpVDV03//M//6Od59Zbb5X5+Xnb
Yyq5xwAAAADgJOwMKC2aDQAAAAAAAKg17KEBAAAAAAAA/rCXVl2vvvqqkZtV
7YEHHjBya5W6du2a9Pb25vWv6k+GJahsrsrbffWrX3XMmaqsnZpHax52LbK5
P/rRj7ScrV3fe/bs0e7ra6+95jh29VqVr3WiMof19fWu13DgwAHbzGa52Vyv
c6rc6ODgoLz//vuO4/7Zz36m3XOne/Xggw/Kk08+GYlsbjlrS6fmQM2FnqV1
mi9Vw9ot+/mrX/1Ky6+63S+3NalUet+CzuZevXpV/uVf/kWbvx//+MfG3/vN
5lrfZ17rQ+/TqTZ0JfcYAAAAANyEnQGlRbMBAAAAAAAAtYY9NAAAAAAAAMAf
9tKq78KFC9LV1WXkZ++8804tv6cyeuVQtTlVvUzVj96nqpV56dKlgEdemiCy
uapmpqolqvr593//d7l48aJWd1VlHVWW9qGHHjJq1qq6o3b85gFLyeaqerAq
fzs1NSUrKyva11SN24GBAaMup7rHbW1t2hhV32rMKhuZTCblG9/4hnaMyi+q
HGMhVWP5tttu0/pStY9V7V29Rq46j7pWvQ7vww8/7Jj9tF6TXW7RSs8wqnOq
NaRqrepZTnUfTpw4oeWJ1dfVerM75y9/+UsjB6mu0To/KmOp/qzuZ2tra+jZ
3ErX1vj4uPY1dR9GRka0+6KoPlKplNxzzz3a19WcqUy+HWuGXM2XWhv6nKvM
tepXz3+rsernsArivqkc+e7du/9/9u7vu4n7zv/4f5E77rjjsne54y6XOd32
627rk5P1bqG7rUNrpYuyEe0KjlriXZwEkxqoSJwahyqJTSsSQuLgOkFtUILJ
BoNT240NtUhsgl2bEIEN5P3VZ+wZjaSZ0UgeacbS83HO5wSsmc/nMz9sD5/o
pbfRRzXXRKf6V/ekmvOvf/3rgr7cfC+az0ml2dzi71svfn4AAAAAgB2/M6C0
YDYAAAAAAACg0bCGBgAAAAAAALjDWlp9qFzYsWPHCmrcqqa+puqxlsvpqjzu
e++9Z9mHqgF569atOh2JPS+yuRMTE/L9739fyx7aZY1HR0e1XJ1dPrUW2VzV
12effVbyuspEqkyuXpPz9ddft5yXymC2tLRo26iapVbGx8dleHjYyOQWU8es
9n/iiSe0uZc7JqdsrjkPqe4pu/qq6XRam7fVubx//76WR1V9dHR0WGaOFfV1
9brf2dyN3lvqHL399tsyNTVlua+qw/rMM89o4x89etTxPlDzUDWWi6l9VL1b
1ce//Mu/aLlbMy+um9fU94UaR2WW1Tk2q3c214ufHwAAAABgx+8MKC2YDQAA
AAAAAGg0rKEBAAAAAAAA7rCWVj8qR/fRRx8V1NA1N1UHV9WfVHkzlddV/1V/
N9fHNTdVK1fVJQ0KPT/ptlnl8PQ+VA3ZGzduVDWPWmRznTKD6hqobR577DGt
pqkVVRNV1d1V27322msVH5Oi+lZjOB2X22zulStXtOzmj3/8Y8fzbM5NFs9b
7aeuk3qtXA3SZDLpezbXi3urnHLHqc9PXSO7fLXTsXpx3byk8sjqZ5Ea56WX
XtLy2mb1zubW4xoDAAAAaF5+Z0BpwWwAAAAAAABAo2ENDcBmMDk5KR988IEM
DQ3J4OCg1tSf1dfs6m8AAAAAAOA11tLqT+XZUqmU9PT0WGZuyzW1n6q9urq6
6vehFPAim6vqB//whz/UXlf1gLPZbMXzqHc2t9L8oeqzGm7GcZvNVXlNt1lI
/Rz86le/krt37xpf/+STT+Q73/mOq9qsTplZN7zI5npxb5VT7jgryeZa5Uu9
uG5e+vOf/6zdA2qu8/PzJa/XO5tbj2sMAAAAoHn5nQGlBbMBAAAAAAAAjYY1
NABB9eGHH8rzzz+v1Tgp9/5UtY3aVtXTAQAAAACgVlhL85fK3qm6qydPnpR4
PG6ZxVVfV6+Pjo7KzZs3/Z6yLbf5SSfffPONvPLKK1reT/X13e9+V8sxqlrD
b775ptavqj/sZLNmc9Wxf/bZZ1o95J07dxrnoLh5kc3Vj2sjWerh4WHX1zsI
2Vwv7i2Vq1e5+F/84hfy+OOPV5Q7V/S6t9///vfl008/LXldzTGRSGh9PPPM
M9p4Zl5cN68sLy/Lf/7nfzp+/9Q7m+vFNQYAAAAAO35nQGnBbAAAAAAAAECj
YQ0NQJA8ePBARkZG5Cc/+UnF753Tm3oP2fvvv6/1BQAAAACAl1hLCx6VeVP1
H9V/NxMvsrmKWv/44IMPtHyq3eeZvfvuu7brJJsxm6vygi+99JJtHjeI2Vw9
B7tZsrnKRu4tlYvXs6jV5mHV1379619r26i1wrGxMSMr+vXXX8upU6fke9/7
ntYuXrxYsn9QsrkqA/v6669r/UciEfnqq68st3P7vejm+6y4T7t7fKM/PwAA
AADAjt8ZUFowGwAAAAAAANBoWEPzynk5UPzelQPn3e15oGi/9gGZrfFsgSBS
tW+eeOKJkvd//e///q/2HrDJyUmZm5vTamCopv6svnbmzBltm+L6uj/96U+1
PgEAAAAA8AprafCKV9lcncr/qayp6ndgYEC6urqktbVVG0NlWP/85z9b7rcZ
s7mqBq06JtWOHTsm8/PzJdlBN+NUms3dSG5zs9XNNav03lLrdqqGtT4H9Tl8
VnlUN+OXy/iqWq9vvfWWNsdiXlw3L1y9elX+9V//VasBrOp+23H7vZhMJrXj
2rVrV9nPJPjkk0+0a6TWTaenp223q/bnBwAAAADY8TsDSgtmAwAAAAAAABoN
a2heIZuL0mvp8hbw1OxAe2EN2YHNcTddv35de4+aPm/13i9V+6KSmgz379/X
9vnBD35g9KP6VH0DAAAAAOAF1tLgFa+zuVbUPRaLxbRxfvWrX8ndu3dLttls
2dzV1VX5n//5H+21Z555RsuBVjuO22zua6+9pm0TjUarznjqGcl6ZHPdjrWR
cZzuLVXH+oc//KH2mvq8vY2Orz6f76mnnpLvf//7Wo1ctc/jjz8uhw4dclz3
8+K6eUH/Xq+mWV3DK1euaDnfSu4llW+2q9drx83PDwAAAACw43cGlBbMBgAA
AAAAADQa1tC8QjbXjdkze2Vni/l4D4gP8dWaIZtbHfUeMnPNW/W+ynI1H5yo
91Wq94uZa++q+hQAAAAAAGwUa2nBo+pzqrbZeJXN/frrr+XevXu2r//lL39Z
WyNqb9fWTIpttmxuuZq6OlUjVK0JeZHN1bOQ6jPgMpmM7XZ6n1Z54Rs3bsi/
//u/l82rKnqmtNpsrn6O1ZzV3O387ne/cxyn2ntLH7/cedXrv9qNr8ZOJBLa
Z/idOXPGcS5WvLhuXvA6m6vWTUOhkPb64OCg7bjq+v3iF7/Qtnv55Zctawtv
9OcHAAAAANjxOwNKC2YDAAAAAAAAGg1raF4hm1vW4inZXfL+IrK5Xtts2dzF
xUVpa2sz5nv8+PGy+ywtLWnNiXqv2UsvvWT0q8Yotw8AAAAAAOWwlhY8zZrN
VWsfFy9e1OqHqnyeXb5OvdZsdXMfPHggr776atnz6zaba56POo8qz2hlfn5e
Ojo65Mknn9T+bHb//n154YUXtD7UNjdv3rTsQ31dvb6RbK46rieeeELr4+jR
o5b3hsp3qlqqVuNs9N5yUzf31q1bEolEHI9Tv1eqPQ9eXDdFrV8+/fTTWi1i
9bOmVjV4K/mZoJ97lTtWOfRi6hq++eab2pxVtnlqaqrkdS9+fgAAAACAHb8z
oLRgNgAAAAAAAKDRsIbmFbK55awM77X47H+yuV7bbNlc9Z43fa5vvfVW2e1P
nz4t//RP/6Q1N9ur94rq/e/evduLKQMAAAAAmhhracHTrNlclT89deqUlr1T
/aic4+TkpJGxUznEkZERo36pXZ52s2VzleHhYe24Vevt7dVypvo5mZ2d1e4H
VS90586dnmRzFZV/VDlI/VxPTExoOWFFnev33nvP+Pw5uxzo1atXjT5+8pOf
yIULF4w+1H/V31VeVq1hbSSbq3KX6vPvVB/F50iNo+YejUaNmqrF42z03lJ5
aXUN9Ps7lUqVHOfPfvYzYxu749Tr3qprpM6/mlelvLhueu1YL+pcO6nkZ4LK
C+u1c3fs2CHpdNo4LnWtVb3h7373u9rr6vMLVTbczKufHwAAAABgx+8MKC2Y
DQAAAAAAAGg0rKF5hWxuOcWZ0YbL5i7m7oFWn7O5K9PS11E4hyBnc3/3u98Z
81TvEXQjHA4b+zz11FOu9nnxxRcrqssLAAAAAIAd1tKCZ7NncytpxflRla97
5513tLqYTvv19PTY1ry8ceOG/PjHPy47VpCyuSo3ePDgQdvjVTVQVf1TvU6t
tkaWm7s6huJ+9Hyqudkd3yeffGLkOO2ayncuLS1Z7q/83//9n5F3LG4qJ6lq
narM5EayufqxqblUO85G761r165p+WO7/Y4dOyZffPFFwb1XfK3NtX3tmjqW
//iP/5BXXnml5PrqNnrdgpjNVcqdY9XU94ldvWAvfn4AAAAAgB2/M6C0YDYA
AAAAAACg0bCG5pU6ZnMXp2W4b690tLVKi2m/ltY2ad99UAbOz8qKm4FXZuX8
wEHZ3d4mrS2m8Vtapa19t+zvG5bpRVeHoE9Mps8NyMHd7dLW2mI6phZpbeuQ
3R3qPT67ZWDe1exy81uUieE+2dtROL/8cc67O053g8n8+fW5m89Fbu5tubnv
zZ2LiUWr0WZloN3t+yfbxTYmu8FrUXIPOTTb29Kr+8qlubk5o3bDf//3f7uu
e/Hss88ac1N/dkP1rWqBqH3UmGpsAAAAAACqwVpa8DRzNle3sLCgfe6Zyijq
dTBV3k6th6gsaLl1lw8//FCrMes0VpCyuYqq76nqsarspr7G9Pjjj8vLL79s
ZDRv3ryp1QNV58Qqm6tMTU0Z9Uf15lQjNJvNarnWJ554ouBcP/PMM67OtaLm
obKkP/rRj4z1ql/+8pfy17/+Vat5q8bfaDZXUfVrh4aGjLmqpo5V1VhV83Qz
zkbura+++qrgONX+ai7vv/++NjdldHTUqGtrda0///xzrcaum+8P1Y+qk2tl
I9dN1ah9+umntf3Uz5qNXBMn1dTS1o/rpz/9qfF9UMn3vrLRnx8AAAAAYMXv
DCgtmA0AAAAAAABoNKyheaU+2dzZM3ukzc179dr2yMCE3fVYkelTLvv5dot0
9E1IuSu7Mn1K9rS5fR9hmxw479zj4sXD0t5Svq+W9oNyfr7cGS7j9pgcbm9x
dS7aD56XwuE2ms315lpsNJvrzX1VmT179mh9/vM//7PcunXL9X6qlot636B6
z5n6s1uqzsb3vvc9bUz1XkcAAAAAAKrBWlrwbNZsLgB7KqP87rvvymOPPSYD
AwNGlreYymhfvXpV/uu//ktb91O1ku/fv1/n2QIAAAAAivmdAaUFswEAAAAA
AACNhjU0r9Q+m3v7/AFpdZm/XGutsvdcabHV2YGOCvpYax22BV9Vh6eko8L+
VP3cMzZ1YFVOtKLjbOmQU46Fhp3MykBHhXPv6JPpFdP+G8jmenUtNpLN9eq+
qsT4+LjRX39//4b6qkRfX58xrqpDAgAAAABApVhLCx6yuUDjUfWMVe1WVRdZ
1d8t58KFC9qa365du7TP6AMAAAAA+MvvDCgtmA0AAAAAAABoNKyheaXW2dwx
OdhaYYa09YCcL45QrkxLX6VZVK3tlXOWpQlW5Nze4nH3yMDYvBibr8zL2EBp
3nZn33Rpd7N90l7x3NQ567OtNexk8dTuyrOxuXnnT8UGsrkeXovqs7ke3VcV
6u3tNfpbXNxgZxVQY+njqjkAAAAAAFAp1tKCh2wu0Hg+/vhjbQ3vxz/+sdy4
caPs9qrGrto+Go3KnTt36jBDAAAAAIATvzOgtGA2AAAAAAAAoNGwhuaVGmdz
p49JW3Ht0uFpuZ0PwMrt+Qk5N7Bf2ltyr7cdkPO2l2Nehve3af20tB+U4Yn5
on7GZGBPa0kmc7/V4awMy96C7drk8IT1qGMHi/rcfUYKU5kWOd/cce7pOy/T
xgTt57fXOjzsYEWGi8frOCZj86Z+Vm7L9NgpObxbna8W6XAs0Ft6D5S/BTy8
FprSrHC7U81jT+8r93bu3KmNp+pe1NvPf/5zbewf/ehHdR8bAAAAALD5sZYW
PGRzgcaj183V1lhz399ffPGFPHjwoGAb9feFhQU5efKkse3g4KBPMwYAAAAA
mPmdAaUFswEAAAAAAACNhjU0r9Q4m3v+QFE+c7/Y9r6yKItlL8VtmRgz138t
7qM4c2uT8ZwdKKpze8B+Xuf3Ox/n4hnZXZy3HbY7EIt6tXuH7Y/HZR/tffY5
1vL1XavJ5ioeXQtNhdlcz++r8jKZjDGeet+cW8eOHZNIJFLQpqctai+XMTAw
YIyv5gIAAAAAQCVYSwsesrlA4/nmm2/krbfeku9+97sln1to1b7zne/IoUOH
5Ouvv/Z76gAAAAAAIZtLs24AAAAAAABAo2ENzSs1zuZeLM5QfltaOw7LqXNj
Mr2oMpOV1oyt/Hhqnc1dGd7rPieqDd1etP0BuVjRMc7LqY7i93HtlP0Dw3Jx
Yl4WF29XmPWtNptbeb+eZXPrfl+JnDt3zhhrbGzM9X4qi1s810r2133yySfG
/qlUquL9AQAAAADNjbW04CGbCzQmlc+9fv269PX1SSgUMmrjGuuYub+rr6vX
1XZqewAAAABAMPidAaUFswEAAAAAAACNhjU0r9Q4m7tyrqR2amlrkdb23XJw
4LzMlo1UrsjixLD07d8t7W2t0uKi9oBlxrOk1m2bHJ6wHnHsYKvj+ZntK87a
VtraxSmGamW6b2f5flvapGNvnwxPLJbJ6labzfXoWqydxcqyuZ7fV+Wpehd6
359//rnr/fS6uT/72c82lM2dnZ019n/77bcr3h8AAAAA0NxYSwsesrkAAAAA
AADB4ncGlBbMBgAAAAAAADQa1tC8soFs7n4X2VxRdWI7Ksiptsn+4XnrAefP
y8H2loqzr9YZz0UZ3lO0beseGRibz+dYV+ZlbGCPtBb01yoHi2KVJRnlOmRz
5XbuurW6H6Olo08mbG/zKrK5nl4LpcJsrnh4X7n0+uuvG/3dvXu34v1VHncj
2Vz1c0rf/+TJkxXvDwAAAABobqylBQ/ZXAAAAAAAgGDxOwNKC2YDAAAAAAAA
Gg1raF6ZlmNt1WRzS7OU3959RhYtt70tE30druqq6vnXA+eLrsnKxYqyqK4y
nrMD0lFhX625c1N8t/iSzVXmh2V/8bVzah3W2emKs7m1uBZVZHM9ua8q8Mc/
/tHo686dOxXvv9FsrhpT31/NBQAAAACASrCWFjxkcwEAAAAAAILF7wwoLZgN
AAAAAAAAaDSsoXmlkoyt2ZgcLs5nlsv0Lk7LuYGDsru9rXyesqgG73TfzpKc
5Z6BMZm/vVI0SGnO1CnjuTJ9Sva4zLe27R8Wq8qrswPtRdseEHeVh72wIvNj
p6Rvb4e0tZavY2t9iSrL5tbmWlSTzV23gfuqEu+9957Rz9zcXMX7bzSb+/nn
nxv7v//++xXvDwAAAABobqylBQ/ZXAAAAAAAgGDxOwNKC2YDAAAAAAAAGg1r
aN4prfu6V4aLY5bFpvtkZwUZWGsrcntxUeYnzknfnlaHOSzKmd1Fc9w7LNZT
rDCbuzghw8d2S1tuu5a2tqJ8a4u0trXL7oMDcn7W4YSc31809zY5Nl3hqfDS
ym1ZXJyWsVMHSq5Rm+XEKsnm1upabCCbW8LtfVWZS5cuGf1MTExUvP9Gs7nj
4+PG/pcvX654fwAAAABAc2MtLXjI5gIAAAAAAASL3xlQWjAbAAAAAAAA0GhY
Q/PO4pndJfVFWw+cF/uzMi+nivOZ326Vw7ZxwxWZPnVYTk07hCJLsr4dcsoo
UmtR23e/TXj09rDscZkHnT3VYdRZ3TtcvlKwrcUzsrv4/O13On/qfOyRdsdz
7Gbc89LXd9GhxvGKnNtbXNv4osV2lWRza3MtqsvmbvS+qoz6OaH389Zbb1W8
/0azuW+88Yaxf7P/zAIAAAAAVI61tOAhmwsAAAAAABAsfmdAacFsAAAAAAAA
QKNhDc1Di6dKsqVajdU9fXJ++na+JurKbZmfGJaD7S0l23679aBYpw1vy8Sx
DqMO7c69fXJuYl5um+KUK/MTcmpvUX3T1sOm/izyoN/eKQfOTef7WZ/bgZ0t
0tLiIuM5OyDtpm06+iYK5lQZiwysyucWn7/cn9QcD+9uy49bbW3Y+WHZ27o+
Vku7HDw1JtMFJ/W2TJ8/LB1Fc9p9xirJu8Fs7kavhU2/ztlcL+6ryj355JNr
We69eyved6PZ3F/+8pfavuFwuOJ9AQAAAABgLS14yOYCAAAAAAAEi98ZUFow
GwAAAAAAANBoWEPz1tjh1pJsaSXNOvN5W84faKuqv9aiIrzu57dXzpzaa/la
Qd507LC0VjinlrZ22X1wQM7PW4R4Z0+V5GDdtVbZf77C+0+N1VLNWLvF8jJZ
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
kd5xyfo9fQBoVmd3aLnctdYig8H43wI1dE2OPPyQcczb9o35PSEAAABgU2AN
DQAAAAAAAHCHtTRvqfq1R48eNfKxc3NzdR0/k8kYY7/44ot1HfvKlSvS1dWl
jf3hhx+W3X50dFTbvre3t+YZ1M2EbC7ZXAAAAABA8PidAaUFszUvczY3KknH
JdBVyWbSEo/k87mxZKZeEwUAmJHN9XtCAAAAwKbAGhoAAAAAAADgDmtp3rp4
8aKRjT158qQvcxgYGDDmUK9s4/379+W1114zMsFu7gWVBVX1cx88eFCHGW4e
9crmqvP+7rvvks0FAAAAAMAFvzOgtGC25lVJNndddlR6wvo+nTK0UPNJAgCK
3bkgT69nVbe1n5Ulv+dTB9dOtMg2LZv7iByZdNwyn+PdcbZe0wMAAAACiTU0
AAAAAAAAwB3W0rz10ksvGbnYmzdv+jKHGzduGHNQ86mHpaUlOXz4sDbmmTNn
POt3ZWVFq8H729/+Vp599lmt/+eee06OHz8uY2NjZXO9r7/+upE9zWazMjk5
WXCNVAb03Llz2ji6L774Ql555RVtHLWNGre/v1+uX7/ueiyVc1Xbm/tR/1V/
L9dPJdlcdUx/+tOfjCyragcPHpRXX31VZmdnLfe5evWqPP/888b2xU29prax
Mz09XXBcqqnro86jm3yvumbq2ql6yfo1VXNWWfaFhQWyuQAAAACAQPI7A0oL
ZmteVWRzc2YSEVPtXJc7BVR2vF+ioXwt4F3RpGzuIwKAZkc2FwAAANCxhgYA
AAAAAAC4w1qad5aXl42sYiKR8HUuv//97425qHnV2szMjJH3/Pjjjz3pU2VY
jx49apshVa2vr0/LBdsx52XPnz9vZEGLm6r1u7i4KBMTE9Ld3W25jdrX6djc
jqWaytPa5YrdZnMvX76sZVqdzs/p06fl3r17BftVm839+uuvtcyv03gqn33t
2jXbOas+1PeG3f6HDh3S8rhkcwEAAAAAQeN3BpQWzNa8qsvmymhPPsvaM1rT
GdaW+fjJ5lrKjko8EtLOTSjaL+NZvycEAOWQzQUAAAB0rKEBAAAAAAAA7rCW
5p2PPvrIyBheuHDB17moWrP6XNS8ak1lKPXxvMhTfvnll3LkyBEj73nlyhVZ
XV3VXlP5zg8++MDIpap8rvqaFT0v+8ILL2j5W5Wt1fv56quv5M033zTmrXKn
8XhcksmkltNVVK5Vjf2b3/xG20bNSdV2LTeWypYODQ0ZuWHVj8qsqjno46lr
ZMVNNlfVrtUzxCdOnJC///3vRgZXjfnOO+8Y2WCVA7ajj6XX+rWj+v7DH/5g
1LhV5//WrVvGa1NTU3Ls2DHjHKnrV+z+/ftGH6qpP+vbqZzy/Py89jWVx9az
w2RzAQAAAABB4XcGlBbM1rw8yOZaZFlHe4r7XJaZVL90RsMScpHpXZ0blWS8
U6LhUH6cUFiinXFJjs7JakXHuCpzo0npiUUkbNTHDUk4EpOeZK905v5eLl5c
/fGsysJUSvo7o6axzceScXUsc8mose/aMLljSheNr/XZL6mZ4s93XJbxoR6J
RUq3Tc+VH328N1SQXd7sdZIBNINJeZ5sLgAAAKBhDQ0AAAAAAABwh7U079S7
Vq0TlS3V56LmVWvmXPJG85Qqw3ny5Mmyudu5uTktt6u2+/Of/2y5jZ6XVVlP
lWctpnKl5jqub7/9tmU/Kp/b1dXlmHU2jzU5OWm5jRpvYGBA205lUK1q/pbL
5qoMrcrS6vnW4rq4utHRUW3OdnVwzWOVy+aqTLPqS+WBrc6joq7Tyy+/rPWn
rp+6jmafffaZkbl1ygur17zMeQMAAAAA4AW/M6C0YLbmVYds7tSUJGJFtWlt
s6wLkuoJl25b1FT91ktulm2z49IfDZXtL5ybi1M52KqOZ3VGhrrKH8uuSG/Z
YynM5mZz83HuNxxfP57c8fdGnMYPS9dIxnHs/LGvn/s463wAgu3O5PPy8ENk
cwEAAACFNTQAAAAAAADAHdbSvKPXcT106JDfU9HoOUg1r1rTM55e5CmvX7+u
nUOVBVWZWDfjqnq0Vvefnpd1yp6q3KmeqZ2ZmbHcRvWt17w9c+aM5TZuxlIy
mYxR89bqXJXL5n766afauVG1fG/cuGE7jjnDazdnN9lcVWe4v79f207V43Wi
109WtYOL56bm4JRJ1qlcuV6nmGwuAAAAACAo/M6A0oLZmpcH2VyLjG0+zxmR
aDQkoWiPViN22bFMa0aSMT1HG5JoPCVTc1mjruxqNiOjyR6J6vVnwz0y6hSo
1fozZVCT47KQ70wyownpCuczp50jCw6HW+nxFI2dGJWMaePVhSlJxaP5Orbh
Xhl3OBJzNreru1tC4S5JmMdXx5OOS6Sgvu24jHSqvte2zdpuG5HEjP3Y1M0F
aujOvIyd2Cct27fJVj1LqtrWbbK9ZZ+cGJsX+/9DcVZ26Ns/fESu2W21Q+/3
YTmibbSUG/NpefThrfnxbPOrd2R+7ITsa9ku27aa5vfQVtm2vUX2nRiTedsJ
XpMjeu3ah3ZIuYTstSMPF83TaZuHpGTK147k87hOzbOsrsX5XxqTE08/Kg+b
zlXhcPU5J/OpI7Ijd09tMY57S+567ZAjZ6853E9Gh6W55vmUHNmRuwe25I9r
y7btsuPIWblWtkOzOzJ5dm1u5vtd9dWy74SM2f/vJsf53bl2tmh+9ucLAACg
GbGGBgAAAAAAALjDWpo3Hjx4YGRTe3t7/Z6ORs+SqlZrf/nLXzzL5uo1eFU+
U+U0neg5VbtcrZu8rKopq/Z3qi9rzrmqPq24zeaq7xP92pw6dark9XLZXD3j
Wm4c85xU/eG7d+/ajuXUl8rYqqytm2urn0u17eXLl42vq7HVHJzOn04dszp2
srkAAAAAgCDxOwNKC2ZrXtVlc2cSEcesprnWaqg7Jfap17zMYNTIsvakHQrJ
LqSkW8/Uxkpr9uryedZQrj+bEG8215eeOw3Z52MrPp65IYmF1nKvveP2AWLz
eewcsu/VnM11yiRnL8UlbK6LGx0Uu6q42XRPPhvcnbavG5wdlXgkZNQrdjgc
ABVYurBPHnGRJd36aK9MWi75V5HNvXBB9m13mVddym37iIus69ZHpddygs2V
zb2Qu57bLcarbzZ3SVJPfsvx+Le1nxXHCGxR9nUp9aR8y+l8bmuXs24ytfOD
8ti2ctdnm7T0TjrnhwvmdzrX7WOFuXayuQAAACVYQwMAAAAAAADcYS3NG7du
3TKyqQMDA35PR/Paa68Zc6r1tdHrpXqRpyyXTTUzZ0Gtxg1iNrdcX+WOXx+n
kmY3JzfZXPM5rqSZr4f6/lD1csnmAgAAAAA2K78zoLRgtuZVRTY3Oyo9Rr3Z
TrGKlJrrzDrVZDUsjEinnn3tGbXPiepTSHcb+dNuy9ztjCQi5TO3hXMNSa/N
hhUfj7KQksSIXTJWPxBTNrhzROwSyeZsbnfK6eyYr2e5bU3naFePpMscDgDv
LJ1tl22mHGF7Qf3ZtVq17Q+bsoaPnpD5kl4qzeZuk4cf3pLbVtVPnZQlpwDk
0llpN+UoH24/IWOmArl35sfkRPvDpizko3KiZIJ1zuYWblha+9VzpvO/7WF5
eEvuPO04ImcnlxyypbU9Jy0tLbm5PCJPF99PqSPSYrqe249MOg2aP3e5/lpy
980jTxdf/5QcadmWv/7bj4hDjyKTR0y55W3Ssu+sTBo3YOn97np+D+fOuz6/
a07nHQAAoLmxhgYAAAAAAAC4w1qaN27evGlkEt98802/p6N54403jDmVqz+7
UVNTU/Lcc895kqfUs6fNkM09fvy4rKysFLzeiNlcc96WbC4AAAAAYDPyOwNK
C2ZrXpVkc1clm0lLPJLPfsaS1tnTfJbVXd53YaizbD62aATpccq0Luezvrui
9rV1FXPu1aoGcDXH415GBqPlM8TmOfaMOvd4Kb7L9ba1Oy4Atu6clfates3Z
HQ41R5fk7I6tpixq8bp/pdnch2RLi1XGt2SCcrZdH3erVovVdoZnd+Rrlu44
W5SNbKJs7kNbpKU0nGw1sZqeE8f7aem07Niij/2YDNr9r6+C+sNO139JTu/Y
Yoz9mG2HY7LvW3p/2+V56yLQOZNyxKjp/C3ZN+Zmfg/L0xfcFO0FAABobqyh
AQAAAAAAAO6wluaNr7/+2sgklsse1os5w5nNlqsasTEq+/ub3/xGG+vs2Y29
Z4G6ue6yueXGcaPSbG61WVnq5gIAAAAANju/M6C0YLbmVVhntZIW6R23rW9b
WeZzWUY69e27xbHUq3neMYd95pISrSKbG617Ntd8/nvELkpbSTa3um2jMlim
xC8Ab0zu+5aR53wyVWbjpUF5bHu7nLbMM1ZeN9c271g4QfmWnuUtP0EZfGy7
tJ+etKhZ2kTZ3G37xM2prXndXNt87JqxfdvKn7+CurmDzrVox/bl6z/bdDjf
+4gx5qPl8svzJ+RRx1rRFc4PAAAAGtbQAAAAAAAAAHdYS/OOuUZpEPT29mrz
6erqqvlYq6ur0t/fb1sL1ora5v3335eFhYWCr3/00UdaPyrrW67e76effqod
n8qOzszMlLwexGyu+j558cUXtW1PnTpV8nq5bO6ZM2e019X1rUc298aNG/LC
Cy9o23388cdVjXP37l3p6+sjmwsAAAAA2LT8zoDSgtmaV2XZ3FA4IrHuhKRm
SirVFqgsyzouvaHy+VSnMUpypXNJiVWRze1Je3E8lQhKNrf8tgC8MJmvIeo6
z2mn0myufb6zYIZGdthlltdWE2VzHc5/0cT8OyfalHcY2z5s32EF567cOTAd
75YnpVzSW9VsHmzRz8+jYhnlrcu1BQAAaCysoQEAAAAAAADusJbmHT1PqDKl
QaDnKVW90nq4cOGCNt6zzz4r4+PjZbdXuUu17aFDh2R2dtb4+vXr17Wvqczt
lStXHPvQs6XqGFVt1mJ+ZHPLZWYzmYx0d3fbZk/LZXP1PLLqQ/XlRGWbnXLS
brK55tx1Mpl0HE+NZZen1jPF6lotLS3Z9mHOApPNBQAAAAAEhd8ZUFowW/My
Z0O9y51WlmUdlZ5dG8nmWuVKTXnfUK84rXC6mWu12dzVhSlJJ+PSGY1IOJSf
r3Ujmws0PHNd0A3X/KxFNndeTjyqb98iZcqwlrE5srn582PfrLvYhNlc03nx
JptrOh6rc2C+33ecLtOXxfFY7UI2FwAAoGKsoQEAAAAAAADusJbmnYGBAaN2
rt/nYnl52ZjLH/7wh7qMqbKdem3Uw4cPaxlbO9euXdMyzGpbtY85F3r//n05
efKk8drXX39t2cfc3Jw2jtru3Llzltv4kc1V/UxOTlpuc+/ePeM+scuolsvm
mufidH7m5+flyJEj2jjqz1bcZHMVVS9X5YFVltqudu6DBw/k7Nmz2naqX/V3
s88++0w7N2q8P/3pT7Zjqdf0e5dsLgAAAAAgKPzOgNKC2ZpXo2ZzRWYSkfXX
Q9KTzlp3kk1Jtz5254gseHI8WscylYhJyGU9YrK5QJO48KRs8SxXWIts7gV5
cov77KgzsrkWE2uubG4V97v5eCznSDYXAACgYqyhAQAAAAAAAO6wluYdlVnU
M4UXL170dS56Ddt65xtVHlfPyz733HMyNDRUUEdV/Vl9Tb2m1xg218zVffnl
l1quVM/5qvq5qn6rorKoH3zwgRw8eLBsPtWPbK6q+arysO+9955Ry1dlclUe
+cUXXzSuy4cffmjZT7lsrjI9PW3U3lV9qixwNefHbTZXzV9lvK2uq8rgqmt4
4sQJo26yVX5XZa71PvTMuLrOOvVn9TV17vQML9lcAAAAAEBQ+J0BpQWzNa8g
ZHNNNW6ryuZGZTBjsUF2VHrC+jZh6UqOy8Lq+murWcmMJqTLeD0mSas+qjoe
lXmN5TO34S5JpKdkbnnVakvT+SebCzS8szvymc9AZnNNfZLNJZu70Wyu+X6v
opHNBQAA8AZraAAAAAAAAIA7rKV556uvvjJyh6+++qqvc/n973/vWw3fL774
oiCDateOHTumbWtH5XxVTtOpD5U7tao9q/Mjm6u2S6fTRv7YqqnasMV1ZXWf
fvqpVnvWvL1VRvXy5ctG/rba82POcOvNLhOs8r3qvnYaTx2zXeZY7yORSNju
r/LYqr6umgPZXAAAAABAkPidAaUFszWvIGRzl2WkU9++W1I2JW4L5eYdc7FP
ZsSUv7VpoZgkZ6xys9Uejzlr3ClDdsV49eMgmws0D7K59lv7lM2tHtlcsrkA
AACbA2toAAAAAAAAgDuspXnLnEk11wStp5s3bxpzePnll32Zg8qdjo2NyfHj
xwvyo+rP6mvqNbtsqtnKyoqW9fztb3+r1WPV859u+/Arm6u2V9niV155xcjo
qv+qv6uvO1E1at99913jeJ0yqtlsVsv56lnWSs+POr9vvPFGwVhO9XoVVbPX
fFz6PmfOnHHcT6ffG729vca4qgbw6dOnteNRfZDNBQAAAAAEjd8ZUFowW/MK
QjbXnBENSe+4qxGkR8/Wdo7Isu12q7IwPiidKisbCkvYyMyGJBztlHhyVOac
Y7mVH89cUmL63KJJcd6cbC7QVC48KVsCnc29IE9uIZvrDtncstlcT+/3auYH
AAAAhTU0AAAAAAAAwB3W0rz18ccfG3nFkydP+jKHwcFBYw5qPqgPNzlgAAAA
AACwOfmdAaUFszWvYGRzZWFEOtczoqGeUSlXOjeb7jYypd1pm62NmrkRiafn
xEUE11ZFx7OcP5by2Vxzjd2AZnOzoxKPhNauTbRfxl3VNQZgaf6EPKrnClsG
ZWP/96EW2dx5OfGovn2LDG5ogmRzLSbWXNlc8/1ONhcAAMA3rKEBAAAAAAAA
7rCW5i1VE1TVeNWzseVqpHpNjaePrebxzTff1HX8ZkY2FwAAAACAxuV3BpQW
zNa8ApLNzckM6jnRsPSk7SvhykJKusPr/cfssq/LMtK5tk0kMVP5ARSp7Hhm
JBHRt++UoQW77VZlZjBmZGODms0d7w2Z5rhLYl7dJEBTmpR931rPFW55Ui5s
qK9aZHNzM9z3rfXtt8iTG5pgYQ71dLmtmzCbW9dzsrZxfbO5ZV+vAtlcAACA
irGGBgAAAAAAALjDWpr3Pv30UyMfG4/HZWVlpS7j3r17tyAX/Ne//rUu42IN
2VwAAAAAABqX3xlQWjBb8wpONlckI8mYngMNSTSekqm5rFHvdjWbkdFkj0T1
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
5d26dWvDOeJzgffu3Vv7uY0bN4bJycm2rxMAyF/zs22X7nfefPPNjnZz433F
jh07Gs7x3HPPhYWFhVWPja+Jr60/Np4rnhMAoBNmaQAAAACQVvYOqPIMAAAA
AKrGDK27mndov/3tb4df/epXDXsh8TlyRXZKUuftdDd3ampq8Tm3S+eLz9Bt
1ZkzZxo+V3xmbjQ0NOQZdQDwDXLy5MmGv/tffvnlcO/evY53c0dHRxuO3759
e/j4448LHx9fG4+pP0c8JwBAJ8zSAAAAACCt7B1Q5RkAAAAAVI0ZWnctt5t7
/vz5hmfUxt54442Oztvpbm79Xm1PT08YHx9v6fj4jN34nNylc/T29i4+Rze6
dOlS2LBhQ9t7OADA2hGfjxufk7v09358fm58jm7UyW7u3bt3w6FDhxqOj9//
0arm7wyJ54znBgBol1kaAAAAAKSVvQOqPAMAAACAqjFD667ldnP/9a9/Le7i
1u+FPProo+HmzZttn7eT3dz4HLu+vr7auXbv3h1u377d0jman7t74MCB2p7L
3Nxc2Lt3b+3X4p5u3NcFAKplYWEhHDx4sPZ3/rp168K5c+dqv97Jbu7169fD
tm3bOr6faP7OkHjOeG4AgHaZpQEAAABAWtk7oMozAAAAAKgaM7TuWmk3d35+
Pjz55JMN+ykvv/zy4p5sO+ftZDc37gTv2LGjdq6jR4+2fI7h4eGGzzI6Otrw
68ePH+/4OXcAQN7iHm7cx136+z5+90fc113SyW7u+Ph46OnpqR27c+fOcOvW
rZavMR4Tj106TzxnPHcR8T7t3//+dxgcHAy7du0K69evr50n/jj+3IkTJ8LM
zEzL1wUArF1maQAAAACQVvYOqPIMAAAAAKrGDK27VtrNjS5cuNDw3LbNmzeH
y5cvt3XeTnZzx8bGGvZk6p9vV0TcM963b1/t+K1bt4bp6emG18TPHD/70mvi
c3Tj83QBgGqI3/Xx6KOP1v6u37JlS7hy5UrDazrZzR0ZGWk49sCBA+Hu3bst
X2c8Jh5bf6547tVcu3YtPPXUUw3HpYrfdfLZZ5+1fH0AwNpjlgYAAAAAaWXv
gCrPAAAAAKBqzNC6K7WbG3dDDh061LDHcfDgwYbnyxU9bye7ufHZb0vn6e3t
fWCvdjWTk5Nh48aNtXPEz9S8K9O8v9vKM+oAgLzF58n+7ne/a7inOXny5AOv
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
BgAAAABVY4YGAAAAAMWYpQEAAABAWtk7oMozAAAAAKgaMzQAAAAAKMYsDQAA
AADSyt4BlSRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiTp6wwAAAAAAAAAAAAA
AAAAgAeVvQOqPAMAAAAAAAAAAAAAAAAA4EFl74AqzwD4f/bu9zeObM8P838S
+F3WRtZAruPdxBvb8drIIrGNBOMstIa1iCM7mLywIkB0ojbCeUEBDAY0JARD
BBwbHEOAoBcMoIHBCZBJaMgyho7VG/MGkQIis7xXuntFeznZpRzendtrce/O
STd/VBW7qutHV3VXkXwe4IvBzLCrq7qrq07VOZ86AAAAAAAAAAAAAAAAAGlt
Z0BVNwsAAAAAAAAAAAAAAAAAgLS2M6CqmwUAAAAAAAAAAAAAAAAAQFrbGVDV
zQIAAAAAAAAAAAAAAAAAIK3tDKjqZgEAAAAAAAAAAAAAAAAAkNZ2BlR1swAA
AAAAAAAAAAAAAAAASGs7A6q6WQAAAAAAAAAAAAAAAAAApLWdAVXdLAAAAAAA
AAAAAAAAAAAA0trOgKpuFgAAAAAAAAAAAAAAAAAAaW1nQFU3CwAAAAAAAAAA
AAAAAACAtLYzoKqbBQAAAAAAAAAAAAAAAABAWtsZUNXNAgAAAAAAAAAAAAAA
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
YWV9M+wcHLe9htfMcTjc2w4bq8thMdmXvNALi8urYWP7TTiadtGJcZajWt2e
oi/4+OBsf1m8mGEart/SynrY3NkP+XvMQdhcSrxu5XmoMkv17qNe/Nqr1FdK
KVE/+Vz6lOfkzUZYTPwuZ9VPWPjZdW5s+az7F+PlT1Xjx5/OfX4VNNYOGDu+
T6yF0FteG54vDtLni8Hwe+md/d3iRnhT8p0H26vR8lemGLvxZmMxvZ6X7ovk
UttZi/a9WuOYOqJT49qu2Gd7lc1/3PtR6K/38s/vpRbzJmw/WQlLqWu3Cee6
WbgM+7lsLl0jm5vW1DZ17Jh0fLgXtjdWw/Ji8npneE2yuBxWN7bDm1I32ZLX
OrM4jjUwpr1jn/uVkryfemV+8AXG7iFPrGGbZ3kt/77B1RwTz3Uhm0t3zLot
conNpH/lOOzvbIb1laUJ/aAlr/Vn3D6rfY69jm2cMZ26h9mUy5jN7dq+2FSf
WQNt6sHwONI7+7vFjTclN2AQtlfPl78Srmvc+Wpeh8jmAgAAALSp7Qyo6mYR
wu/9L/9blJF982d+JfzsJ79X6fU//N4vnbx29M8qfnb0k/D6l/5C9N7f/qN/
XOn1zRmEvc2H0f38vOo93ApvrlJE9/goHB0Na9CxjTrsh/WlhRJ9NEvhycvq
Cd24D+KsVrdDlXTuYPdJWFoo3l/u9B6GrYk7zHh2qxce7ZZcgcOtsFJ37DyX
2lWcN3f30cJc+pvNmzt5+dc3m9t0O6BsNjex3OGHNb47XsjZPi/x9Ibomep3
KuV5Y7vh0cJl++667DgMjk7bWR1rZXXbFZvnrFPj2q7YZ3uVzXfc+354/vA8
l7sQFham22f3nxefRxeWN2d/LX0Z9vOS2dzjs3NI1y7VqamL92CuUzb3eHD6
+R8VfP5Xbt7cw9BfX7owljq7FsLSk5cFz8G7OvPmOs5O4TrO41U2R5C4v7u2
k73fXc0x8VwXsrl0h3lzJ2m6f2Wwtxke9kqc+3L7Qc9clXlzm7yeK3ttMied
uofZlEayuWXv8V+1eXMb7jNrpE19MWdbrstsfYo879VzNa9DZHMBAAAA2tR2
BlR1s6670fy1r/+9X47ysb//f72qvIxps7kjgxe/EeeC/+yvVJqvtxmDsLMW
zxG0sLQetnb3Q9wVdhyO9nfC5lpiDNvyZtif81rOSnQvvks3rfc3w3Ki7+Xh
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
6xe2afQ9LYWV9a2cuaonbFP6Dyr1EU/8fLd2w2Gpj+X893fx97O8dr4txf2L
cT9zw32rjWRzD0P/yUpYivbx03Ng+XPG5OPL1u5hjfPO7NoBjWdzQ95YgsS5
IfPcUebt836DedtQ59g/fu4+Crtba2E52k/GP9uiv89uWx32x9dvdD7plziv
DX+Z+/2wsTp+PlgMy6sboT9xAYnvfkKVH5tzGLbOvtviZ5bEfzuxfXJ8EHY2
k5/Z2bFmtD0FJ7jxff744OK5IGubpj2/VTkGZ73H6Tl7Upsh733qHquyjbcN
xj+709/Mk5x9alyNY2KJz7Zem2zccdjvb4TVsfPb4vBzXR39TsrOv5K5KdX3
ydNVmv53cPr6w+GxZ/3i558475f6WEJWe/PiMWwe4973Nx+G9X56jWc3FnNO
2dxSx5Csa5/T40fRtU8jbeOcbO705+Q8029vuf0hPvdN+u01dSysfa8lQ51r
pdLXfzO6B1O+LZxexsm103mbqPFs7ng77Wx/m3icrNLmSbSLV7bKzX2TWL/s
ytjuptoJMz4m5Yvvf1S9f1X02y93bMjYd89+X0+23+ScM0vc49vfDMtnf9N7
+Dw9j1LO597kcTYat14i+xz97eJGeJP5Fw228YbtnQv7a9b3dPQmbF/Yp+Nj
8XZuQ6/CPdjzdtfi2L2OYbsr/z2y3mcQ9saPK4tF+1JDWsvm1j3+17t3droK
0+4nibWocZ81X9n7LkX31Mb3teExuZ9zziwhfS/h7B776uj772XmR043aYrf
8tn1SbeuUWZxHy9x/7+4wyyaa29iu6LO8ansMSFq/5W8/1zm+85S5bmz0d9O
zk5Of5+76n2+k3ebsq1Q5bq1zX6r6qa6Nql1rZGxDlHebTVMeoRwpqLfxryv
1VNG/a+9s79ZDI92xzcup43T5Gc8zbVJQp3r1yKV7gfVauedLKB+O+XErK51
p7nH31T7tVx7e+p777lm2GfWcDb3Qh54/Bor8azbenN5N9xOPN4P/Y3V1H3p
xeXVsNGfdE5qpg3U1HVI6b6SqbY1tZDafecAAAAAzE7bGVDVzbrOLsxV++PU
SKbSmsjmHv/gdTyH76/951Mvp7zE/fTPK277y/Wo/y5reFvy/nY/MV4sq3rr
/Yw+mPJZw+KxXRmm7Uc83A5rvfy+qIXljbDXwBj7frVXhs3lcn1F0ZwhY2M4
o/9eoi8/6pe6sxw+f1OnszNjDFGiv2jl+cXvfjD83hbG+hAbyeYO9sLG8kL+
PtFbC9uTdsUG9otkn+/ecDt7E9fjYXie8XMtPTY3Gn+StY8Pwu6TpcQ4kIxa
WApPUn32Wdvxeeg/f5jajvG+oUHetp71qy9vvsnsoyrXj3YYtqPxBpO2aTls
5Hw55Y9nWeMZSqh8PNoPzx8WbNOdXljPCfs010dcYl0m7LOllzH8fjb3+5c3
m9vfj4/PGbX4aDe/f3//eXhYcHzJHItdbuNm1g6oms0dbK9Gn/PkVRm2Dc4/
i5Xn0bEuPjfkzLleYKrx6bWP/cnPv5/xO8jL5u4lxlJN2q8Gw9/Fcs5vMy8T
WOJ8cHJ8zvqymszmJvaNovH+0ZwW2b/Vwe6TsLSQvz1LTyb/HpPHze3huXSx
YJvqnN/KHYMHYW/4/eZ/R72wNrHxEpo9VuUo3cbJ+0zO1T0mVszmTtMmi5Rp
X96ZMBd4CVX3yZNVqvk7KPP53+mtF+aN9zPaiOPHln6Lc1LNLJt7FF/nzHQe
xsL9fJB7Djk95g7bXxOu8xppGw/2w8t+P/T76bmGm8/m1tveWWRz6xwL699r
Sap/rVT6+m/aezBNtIUHwzbkYs4yRsetvQazuQXn1NH7ZTwWIM4AFGYcE8/b
Ktv2rZvNrdNOmPExqex2r1W7yTZ86Xk7OjuTUXxsKNgPcvaFwrHoo9/+2T6w
sLyZvf/PKZtb/nmJcf48e5sabONtZ/zmx7+nguNn/jG0XFZgsLcRfU8T32Nt
O+ceXvnrv+nvCZRUKUcQj4cfnRvG16v0mPjax//6987q7Senn0Xd+6z5ZpHN
zd/Xio/HZa5TR8uZcD+i8m+5xPXJ2fF2btcoM7yPN6lfJyW6P5J9z6728WkW
2dwy3/dEcTapqC8x+gwzV7zufe6q9/nqtBVKXqd0oN+qvBrXJg1nc5PXONU2
6WVYP3vPzGv+OV6rZ/X97ayfL3vS+a/r2dz6169Fyt4Pqt/Oa6CdcrIis7zW
rZvNrdN+LW5v17r3nmuGfWYNtqkju4+izyEeU5F4DnrVZwykNNdOLL4vPfn6
tok2UOnrkAbOnXW2NdZM3zkAAAAAs9N2BlR1s66zvZ/73kkW9gc//wu1ltNE
Nvdkff7Nf7uR9Skl0QdQJSMx/tqs8W3x/e2lsLS0EJbWt8Ne9FDp4zA42A2b
ifvJWf2UUc4qtw+sxBxpBUo/73ywE9+L7z0Mm7sHYRBt0mHY216P77MX3k8v
WJcpcmXl+otzMs9V5uy9MDZp+P2ubYb+XuLzKC17DFH03V8YpxOPsUg+47V+
NjeRax5u+/r2Xvz88+NB2N/ZiMfTZOW/G9ovou9vcfib6S2F9f5+OEouZyvR
z5jV9/Rm4yyTkff9DUI/55n5+9HY0154uLET9o8Sv9n9nbAR/WZH/T0F27HQ
C72FpZPP82DSjpF8bu/qVs4xohce7aaXUe054MNt2txNrMtxONzbDutLC4Xb
dOF4tpxezv7Ok7gfvsRcMZOVG1O39+RsmxbG9pPhuhwNv6cnUQ5oJTyf0EnZ
TDY38fmmvuuzz/d8XMDEDOAgvFxPnAtS54q9sL2+FBaWl4vX52ArrCycHpMW
H72cOkOWUjObu7S0HHoPN8PuwSAaB3B84XvKGcOcOL4sLK2H7b308eU8i9Wb
Jts1w3ZAtWxuYpxBwW8ozvAunM2zkng2eCKvO7Wy4yMaOfbH4xoWer30d5zz
94tLS2Hx4UbY2b+4Xz2KzmfD4+bGo9Pj8Nj5ZHczHm86KRN4tP1w4rFz9Lvc
Wksen8t8nlPmXEYG/bPx/pPnex/JfUbFhXnFRp/bUfy5DfbDzkb8mWTnjZPH
zeH5rTd+nhxT8/xWZj+Mz9mjdnY/55xdbk6iWseqAhfbOGefXWKfOtrvJ87H
OTmjJo6JVbK507bJTlc2MQZq8WQZg2T7sr+eyNIOz9dTzC9TaZ8cqf072AtP
Ep9/P/H6cHx0sT2UczwevFyPP7/F0fd4mFiPg7Pj53JYrjL3esNmlc2NnilV
4/dUSsF+fhjNAdQLq1sXr30Odjfja5/RXPSZh6h5tY2bmfuh7vY2ns2teSxs
4l7LqWaulSpd/42/psI9mOnbwsnr/azP/fSc2RtebyzWabNcOKcuna3vxeNb
sg2WfW8hbvPkfjQl5nvLX9WS91CaaifM+JiUK5EhqHwcSVwHZg3JLjo27D6K
75882km2A45O2gHRtUJmWyJnLHoy85V377HUdU0Tx9n4PtOd1f7ka9LonlXG
nIYNt/FG7aLxts5FiWc+LT+6eE11tB/663GWMjvjVW1e4/F203i7a/Lx6+L1
X298OYfJ67LiPFotVXIEUV47+95jqTHxDewT9e+d1d1PmrnPmq/5bO7JvtZ7
GDbyjls5GY/ks9MWR9epyXsJo7ZOIj+UOe9Zpd/yxeuTTlyjzPo+XnQszW+v
5D7Ltonj0wyyucXfd77onlDe83ujtlZWu6WJ+9zV7vPVayuUuE7pSr9VKc1c
m1R9VmThMirfE0i+f2bH+Zyu1cd/c4Ph/rYYLXvifcKSzx8pP4d4sfL9u03t
I/lKXf83cBxtoo9vbte6J29V9h5/U+3Xgn2x7r33Uts6gz6zBtvUiT9M9K2d
nZ+i9kL6GejVNdROPNoOD8+/s/F7C6O2VuJckjnPbwNtoKrXIVOfO+tu6+mK
NNd3DgAAAMDMtJ0BVd2s6+q74+Nontof/YW/XGtZTWVz3/y5/yhap++++67W
sgrtf95I/0LWa+P72/nzeOx/fv53GWOzymQNG8h8lOtHTIyvzxv7dtQPawvT
93f0m8jm5r02GsOZ8Xkncrtlcs7Hb7YynwG/0FsKK+ujrO5hiXEUE/rKE31O
5/tXnMe62K9TN5sbLzenv/Z8fRaWwsZecqua2y/i72/ynJHxeP6s30ScT5v4
/eWNP4l+S3l984PhPpo/v3K8HcN9rOALKTMX4v7m6sRnQxf1o8XjwfL64o/i
bZowRit+n4WwNmnwc/Tbys+O5Ss7duQwbK8/mfjM/ORvedKxvYlsbrnPdz98
frZNmRnARB/xpDzcyVI247k/596/WDObu7A2aXxy/D1lj2EueXyJzuULOb/d
otc23w4ovT8fj8a0xnMeLxeuR2K5ixuhn3tcnELpXHoTx/54XMNo7FrxN5D4
+0nP4UicP/M+k+g54xPH1I7mulnPec55/GyU3O+3iWxuqfH+eXOkxPtM3tjX
Qf/8mJa9rskcZNGYnrrnt8L9sNQ5+3h4iD1b596E9WjkWFUsbhsUPD/k/HeV
+bk1dEysks2duk0WEs/ovxMeTrgWGkQZ+Dth/eWkDZqsyj7Z1O9gNG/A+pOc
ucGi9tCk33zieQq532PiOUBXJZs7eBnWM+Z+n4nc/Tweszd5bN9+2FydPLfY
/NrGzWTG6m5v49ncWsfChu61hOaulapc/6Ve08Q9mILj/qC/Gh0r865z43He
9bO5d1a3c+Yfj9vf6TZLuYxj3bHw02Rza7UTZnxMytVvIpub/dr8Y0OJ+fsG
O2F9tfgZPheOKaPrizK53JG5ZXOTv7PJefHJz9Fpvo03Gt+c2zLKywmfr9XO
elideHAsyq2Ua3cdD9fjvE2fvfuXuP5LXpfl5dHqKpkjOL6QvVwuuK7Ke85e
E/dCat47q7ufNHSfNV/z2dyiXOP5PY7sY3Zif3w44Vw4iLMKd7Iugqr8lk/e
Mr4+af8aZQ738crc/89tlzZ0fJpFNrfM952nRF9idL7KaGc3cp+70n2+um2F
orZIl/qtijV1bdJMNjf+nmtlc7NeO7dr9eRv7ji8+Tx+VkT+cae72dzm9pF8
xdf/TbXz6vfxze1ad2SKbG699mv+vlj73nueWfaZNdimnrTcxY1+w9cHTbUT
T+ebXs+Zyzg+l2S1G+q2gRq8Dilx7qy3reFy9J0DAAAA0HoGVHWzrqs/+Je/
HeVg93/9b9ZaVlPZ3Ld/9a9H6/Sz//d3ai2rUGKc2eyyuUUZ07z+peI5cXPn
SCupVD/i0fkzWIvnOIq2vXKfR6LfdkbZ3CiLM+Hziv5/6XUfzYu0GdZXFqOx
1xfq5Jm/BznjKib3lcf70GrYPornKhjfT+plc+N9LP+5s8P32duNn1N9rsH9
otSY70TmKmscdvQeE/oj854XG333Rbmb6LefPc6iSpZh+t/K2Osz9/mj8Lzk
d1u0TeWOZ2X6BYs0MXbkVL/guFY/mxt/voXbG51r0hnAeI7sojnV+o2MGZ5K
zWxu3vrmzukQHV+KxzRFv7u8HED2C2fWDrh4TitXpecMSfRLR69tagLCMt9d
Y8f+cuOdqv599PufOP4llJxrPV+U+ck73jeSzQ2JfXXC/KKJ+eNSp8fSc8vF
+2zWca1827b++a1oPyxqz8XifSYzv9XEsaqE0m2DRJ41tT5NHROrZHNrtMlK
nTuqzJWQ+fLy+2RTv4NiBefr6NhTfPwsasvMUvPZ3ORYyOnnbyktd9+q+x3P
s23cRGas/vY2ns2tcywMTd1rae5aaZrfS7V7MHWO+4n5Y4rOmdH42/rZ3KL9
NTqPZ31mRcfr3Pneyq5q9WxurXbCjI9JeZJZ9vlmcwvaYMVvnm73J+fvWf48
THyEzrk5ZnOTy8mcBzNxPEp9HnNs4yUWNPEeRTkF12W5z0UcX5W8a/ly13+T
nmXYqOTzB0rV5IxI4XlsHvdCzuS2N2vuJ03dZ83XfDa36N5Efo6gzHIK1rnm
NVK2OV2jzGnfzZ0TdyQvV97U8WkG2dz633e8bxVlx9Ntjmbuc1e7z1e3rVDQ
FulYv1W+5q5NmulfSWYL55nNnc21enIO97XJQdAzXc3mNrmP5Cvc3xtr5xXL
vy82x2vdkSmyufXar/nLqX3vPc8s+8wabFOPi67LE69tpsusqXZiCQX7aq02
UKhyHTLLsUBnCrb1UvSdAwAAANB6BlR1s66r97+5F+Vgf/u//tu1ltVUNve3
/9ZCtE7HP3hda1mF5jJvbtH992T/0fPU883z77Mnni2dOfarnDL9iHE/0Vro
Fy0w8Sz2Sc+RnmS28+YmxspN6jSM1n2afsvjMDjYCy+3NsLaWFZ3ct4qr688
zuP2er2JfRC1srmJMQNrhV9s1sub2y/KjWku6AOLxnFn9RvljT+Jf0tVxo1k
zW9ZaWx29JkshJXPdyfPbzBB7nGm0nebGLee8eWUO541Me6juWxu0XGtdjY3
+fkWh9SiZV2cEmO4vctlt7epMcNTmGE2N+97SB5fSucA76yHSlMvzmve3Nxa
CL3ltbC5k/cch3GJ51fnjuGYQpk5oxs79s8mm1vqvNjA+Mdq71Mzm5s4Tme1
YfLGPUfjGEqcl6Jj53L6b6fLQU53fsv/fhLn7MKGZjx27U7WybCBY1UZ5dsG
8baNj7Vr7JjYVDa36PdYKZs73XjBKt9LU7+DYvnn64NoTGjxOjc51rOqZrO5
VeaoaUjZfP/CSvh8t/p19Pzaxs20/+pu79yzuTnHwpN3auJeS4PXSrPK5jZz
3H8Z1su2teq2WSq0reJty3rmSE6GMZSbH6h4VZvN5ta9tqz7G83V2ry5iTbY
4vCa4aDqTIBj7YzBcL84nzdpcfjdlzmVzDWbW/DsmJzM+TzbeJFozPWdsDg8
CFb+egragXG7K+dZSdGqxOPX04fjkteL09yzqKpsjmChF5bXNsNOzodadMyY
y72QM7nno1r7SXP3WfPNP5ubn2Otls3NzJ7NJJs7n2uUue270f3/7OvI+Fm2
6b62xo5PnczmJvoSs9pJeZ9bI/e5R6rc56vbVshvi3Su3ypPg9cmzVyHtjVv
bvPX6vvPH4bendN7EQ+fl+ms7mg2t9F9JF/R/t5cO6/CumR+znO81q20jKba
r2WfhTPlvfc8c5o3t26bOmX0LKeFxDKmzISnNdVOLKFoP6vRBjpdfPnrkFmO
BTpbmZxtvSR95wAAAAC0ngFV3azrajQvbTRv7s2/UWtZTWVz9//a34jnzf3d
goeu1lWYqyn32tz5O6uMaaj6fOfS8z+VfP+cm9aVMgk1xhSUmfu28LWTntGZ
mHNu8vN8437L2nOWHO2GzYfn80MtTBiHnt9XHveDnNbK8/SK18rmznO+soL3
amaMQ87zo3PnSEw8C7xCZa1DtbHZh+H5w2S+biH0FpfD6vp62Njqh939QW5W
L/fzr/Td5u+HnczmHh+Enc31sLK0GHoLOd/TrLK5lZ/vnLWs+HjT6f7FlrK5
yTmeylfFc8cM2wFNZs0zJeaUm2aczUQlvrvmjv1dz+YehTfbG2F1ueA4M5ds
bs54/2j+uOG+mNEgjNtWFSpjm6rlU+ud35rcb3LPy53L5k4+bjR2TJxXNjcx
lv/hhIcHDLYfnr7PlPmqqa63av4ORo4PdsLm+kpYWuxdeBZP/jn/VPQ7vjbZ
3EHY24hzueXGwjagaD8/fB4eJo/rC72wuLwa1tc3wlZ/N+wP8sf+XbZsbt3t
nX82t4lrk4L3bPBaaVbZ3EaO+4ljcZeyuUXXF5MzjhXmdMtd1W5lc+v+RnMV
5GvLvXbKOaN3n5xlIU5robcYllbWwvqTzbD9ci8c5m5Wop3xeT8elzuqsvPy
zDmbO3kOsUHonz8nIOM5OvNs411Y3Se9xPJGbfWlsLK2Hp5sboeXe4cFz43K
bwdWOi7mHg+6mc2tu68UHTMavRdS897Z9PtJc/dZCz7N+Wdzc/eFRNbw4YQ8
yGA7PDz7PDMzG1Psa+fXJ21fo8zlPt6JvPkjE8/4yLs/Uvf41NFsbl5fYpTX
yTqPNnKf+2SDq93nq9VWyP8+u9dvNf37j/1xwXGv4T6aOtncaeacbvBafXv4
+0vuX+XmM+5oNrfRfSRf0f7eXDsv1GunzPNat9Iy5pTNrXvvPc8s+8xm8gyS
WDxv7ZR50UxNtRNPHb3ZDhury2GxtzB5n5+4X0zfBjpdvbLXIc2MBZp+Wy9J
3zkAAAAA/3979/cbzX4fdPxPQSC4gLaRoICiJqCWhrYSPypEEalECREpihrE
Q1kQK+EbXyxIrrCQfGFEt8lTqC+MxANyJW5880iYC9M4qZ4Lk8ZJnObsSUwT
98RJsydxT86X3bV3dtbze2d2Z2y/3tJL/Mixn/Xu7O78+sy0PgNKNz3X3n//
/WgO9qs/+/O1fldTs7lf/cjfuntMf/JHZo9vvcXP9aq4k/7NMDrekXYexUrn
i/bSrhO+OIfr4X72vHukVanMccRKM7M1jq3En7dq19GNXUMz9XqgsXPhyqpx
H5ZFseMHqddorXAsPeP8wzZnc5tcLpo6xyHrGv3590trazZ32k04P9oLW1nH
nnuDcPAm/arHuZ8zlc7BfWSzuaOjMMg7Vl903L7M37SR2dzYctfl44tPeTZ3
jesBa5/NrXPOV15V5vae8mzu+CwM+yWXuw3N5i6uMbH8u8an+femaWc2d9rq
32+5r0/F84Me7WzuYHke6dHN5k7Wet8M5+fyb4Xh6ShEp1DejsPodHi/PK9y
f6z5n7L52dzR0SD3XPfs7/yHj+M5zOaOJ9ur9+vfL/ph7+S6+Eeaqsx7e3od
pb2tzNezNzgI2R9Rj2w2d1qNv7fV2dxB8v6TjexraXBbqdOzuVW+M1uZze2l
3G8txNZ5Hsw4FtwjpvxD7dhs7rQa79Hc4v92xZtVLe6jmHZ/43LL/u3VaRgO
ss7D7YWtveNwmXrSeHIfTX93Nwzm//cyNyHa9Gxu1n1CY9fRSb9fZTuzudP7
2l9N1scy9630tsLe8WXGOf1564EV53nM5ub87zWXiQb2na2+nDyP2dxBysU/
x2+G0SzY1vA0Nkd2G8ajyWfi/B7gg4z3R8Vlrcr2SdbvbGobZXOzubH9IA+P
3+Rey7bBz6euzuZOtsFO9tJeo4J7Wbc1mxvqrCvkr4t08bhV9o82t23S1P7o
xd9cfG/U5Rb3Mk3OjYUNbqvPv6cGYS+6fvJknbZwt0RHZ3MbXUbyy1/eG/wc
rbuesslt3Uq/Y1OzudNq7HvPbY3HzNY8m7ue7YKm1hPH4WzYL7fM5zz+1daB
5g8vfzukue/Oun/rIzl2LkmSJEmSpNZnQOmm59yXf/zDdzO1f/4n6v2ehmZz
v/SBD85+z1c++FO1fk+5YtcyT52bzG6x/3ovpF/6s6H75oasmYv5vuasmaDy
dem+uYtjB1XPtVzse0+9f0rsXLjy6j+3s0dW9lhm1pM1eU76mffdbXc2t5PX
H08973Fx/slO6k2Tm5txW32W4TaMry7Cm9OTcHQwDPs78fMP0t8Pz/O+uefh
5Xxerr8bDs9G4Sbl/Jyiz7UmZ3NXP973SK792/ps7mrn6ZVrfesBT3k29+nf
N/d6sVxMZwpPLsJVyn0Zqv07TZwPknYuZfY1XOY1df/L1d+T1b/fmlxuHu1s
buZ9c2t+Jm5sNnfaKBxlnmN7pz88W/kaQ01ub5Vqtk5+/7h3D8PZ6CZ3DuF5
3zf3Opzszc/B6odhxnbM2qqynnY7DlcXb8LpyVE4GO6Hna3YMlt0baTHNJs7
b4W/131z257NrfG5/0jvm5s1PxI9J4n76VZ9qB2czZ23wns0v8U2Z9V7DUfL
aa3Phvtub8Lo/DScHh+G4XAvDOL3zUndDlue6+vv360vLOaFJ98tbwq+WzY+
m5t+TbjMc6ejh7m5dbysbm9G4fz0NBwfDsNwb7B037L0e8y5b269X9Xg/aoy
a2bfWbxqy8ma9lck6tp9c+8qnJftD0Pm6nGVZe3B9knb2yib2Y93X8Z1D+aP
r5H9I49yNjfjWGLWdU8afxw13vuV1xXyX89OHrda8d9/8B9vZDb35vX83pNZ
+72zHl6D98ysta0+NQhH07HC8ZvF9RezrosQ1dHZ3Cd339wG1lOe/X1z462w
7z23NR4ze0azuQ//vuvoc3V6/ZaTcHGVcm/jMsvZiutAd79+M/fNrf+3PpJj
55IkSZIkSWp9BpRues6N/uEvR/fO/eOr/7fy7/n6L//T8Nbf+6XZ/7lqt18b
RY/l7U98auXfU6Xr4/n+4Yzj0qktzhPMOi5Rfv917FrWqfd7nbbYB713f7HL
onO7qlTmOGL8XqSFt9qI5mu3Q9VLqsb/1rzjB4nHF51zkH6cafH4SxyPiR3X
qPIYsqo9mzudETp8nXnuaa3Z3PFJ9Lemn29X9OPNLRfNneMQu0fy/DmNnX+S
dr+XpXN/qy+0K/wdJbs5DfvzY9QpNxTK/ZyJvbbF98dZvO/S/v5OzeZGy1H+
7PzaZ3MrPb9Zxe733eXjiy3N5lb6fKnRutYDnvJsbnOf/R2dzY2d25N+PYdV
/p1mzgdJnO8frbNkfyYufqbqvS6Wa/Q824Lvt/zlsMp3duxcorQP687N5i7+
tofroI19Jm50NnfS7WU42unNltHe/JyaXj9s7wzD8fkq926I/ynlX5cm3gfR
Oeu521/539eLmaInPJs7fc2jmexBOLzY8FzutJrn+t2c7kdzDukfUY94Njel
or/3zbDM8tDkbG72Z+HsX2piX0uD20rrms1t5nN/cd+qLs3mLv62rO3z2Dp6
dN590fW2qjzUDs/mplT0Hi2q3PfXg2L7xbJmeuvt+7gNl6/m34mD3JnM3uRN
uvgmiW1D9/ezZ9tm/+nmZ3MX+57m76Pi6+hsch2vdJPv8lfz5zl1hiV/PbDK
etdi9ift73+es7mNLBMN7TvLLXc5aW4/a35l96s1OJsbvc/zntvJZ9zRzuw1
6PXm68W90N/eCcPj84zjP/M/qfyy9vDzve1tlE3tx5sX/f17998TDe8fyf18
mrxOgzKvUwuzuWkzO9HfnXX8sZH93NOa3FdZtK6Qvy7SzeNWGTW4bdLY/ujr
41L7Rh8WLWtrmssrv62+/FrG72k+OMp793d0NrfRZSS/ouW9kc/RRtZTNrit
W+l3tDGbm1LRvveC1nbM7KnP5mauJ8aOUeRda6zkcrbKOtDdr29wOyTzu7OJ
v/WRHDuXJEmSJElS6zOgdNNz7p3P/FY0D/vOp/9Lu4/l1z8TPZZvHxxu5h+N
Haue34eh8EeifdPZ+7jj+7fz91/HjpPl7Ghf3s++OLer6n0v0ip1HDGaUym+
l2z0t684N7w4fnt/XePin1gc70ndzx8/J7fc/VWi5yT1b7gNl8e7YbfUg4s9
tjVdx7rWbO7k2TjeyT9PMOryJDlD0eBy0eg5Dg/Oe4mWqZxr/EbvscJlZByu
r7LPoqp6fur4Jn8uJe2+K/Pyj6Mtjn8VvrbRMbD017FTs7klj62erns2t8rz
O1mirq5SLvwdYq9v0edl/PyLZzKbW+XzZfKmDBlPcXFrWg94yrO5zX32d3Q2
t+TyO3q1+dnch78vujZJ3n3UovMkis+lGU/eS1nfSlXnU+t8vxW9BuW/sxfL
zE7a8M/GZ3MLzluLnfuYPTNe8zNxg7O5o9e7s3Mft16ehetVP6NzqvS6NPA+
KPe8nOafD1TqXP7Zo1hsvzym2dzxRTicnzvVm2zLXa7hhS9T4XI+DvkfUen3
7Fz8+sc2m9vQ35u7vlq8X6ORz8LQ1L6W5raV1jWb28znfoV9IYmZworF33cF
J3FG3+N5z1m0HNxffy16fBXv3ZX6ULs2m1vvPVpY9NwVzSLEf2S+Xy77e7N4
2b8JN3mvVe42bs56RmweKnf7rY3Z3IfXKYi2NXPuV7XBdbzlf/cmd9s3fl52
8tcVrAdWWO+KlqPUebHnOZvbyDLR0L6zOstJU/tZi8pfhu6LXX+rcDa3YI5p
MauS8fqNXofd6SzM1stwtspGUIVl7eHncOvbKJvajzcv+qzZC9PL2Ta9f6Ts
51Pqvob74nNpG5vNDQ/XNRfrEdnXZm1mP3f1/Xx11hUK1kW6etwqtea2TZrb
Hx27/m3R9VCiHzkpvuZxa9vq4/Bm2L//3/KOO3d0NrfRZSS/wuW9ic/RRtZT
NritO62Ds7m19r0Xta5jZo99Nnfl9cSSn82jV+WWs1XWgUKz2yHZ353N/K2P
4ti5JEmSJEmSWp8BpZuec7df/0Y0D/vWRz/W6mN56xf+QSP38K3a4trgL8Lg
1WXIOy3g5s3L6Jy2vDm/xf7t/PuRRnMdRcexov3s0+OgJ8XndlWo3HHE8eS/
uz+nZnCUfS7t9Fqs9+e/rnwvk/GbMJxfz7W/H07zDi/dXobj3fkx1Yzno+T9
75aKjt8k9+VfROcoTpaXw4vcY1I30bGoxT2Pl2t7Nnf5nsKZh5Umz/Ph9t3x
mJ3X8eewueWi2XMcFudh75/Fzj9JfQ3uix0TzDtfdX5t7v7+aY25jWl3M979
F/3JZ0TWchk7B6LqfXOnPz1ZjnuF5xvchNP9/PPlOjWbW+aa2jeLY3Hrm82N
P7/9yX+TtWzNr/HfS/9+KXme9Cj2PZX59F4dh53e3XOz9fJNqePlpWprNjf+
+ZJ3DtD8Xi29QXi14gzQOtYDnvRsbmOf/R2dzS2z3nB7EQ7m197Y5Gxu7Joa
20eXJa/VElsWi16vfva6V/k5yPrfb4XLYfS/F3z+HhbMk216Njd33X28+D5O
fbwNfSZubDZ3/r83cJ/ljKq9LvXfB2XuOxhf909/fmPX7cl7HKPF3FHWd8j4
/CBs9+7eB7uvmx1EWWk2d/LcLbbhdsPrlW+RdhVe32/f9bYPwvkqKzR5y/l8
+7G/F7I/ohbnID76++Y28Pcu1gV7YT9re2qyjt7P/Uxo6rOwuX0tTW0rrW02
t6HP/egczdzvzOm/Nd+vUn82N3cdOTr/smj/zOL88+kytbje1mnt7ZxOzeY2
8R4tLD6LMFkO8ney3a/HFa9j5s/DvAkvp993g8OQefv0aFs4/7656XMX8+23
nM+lVmZzY+djT56Xy1LnSG9uHW/efJs2b59m9J5b4b658e/AvHP5byfLQP7s
SEOzDePzcLB99xz3Jp/lK601bXI2t4llooF9Z7WXk4b2sxaVdY/EeNfRfGTx
bG7u+3W82MeRNRs1/2xcfddo8/fN3dw2yub2490V3/+/mNEqu3+k3udTbF0/
87oz14v7xm14NnfpWGLs+iZ5h0Ya2c9dZT9f7XWFovXwrh63Sq+pbZNG90fH
rofyYvAq5L5d56/n/bKWuZnW5rZ6/Lhz5vu2q7O5TS4j+RUv7w18jjZ0jG9j
27rTOjWb28C+9xKt5ZjZI5/NXX09scy9ZG/DxcFWyce/yjpQxe2Qlb87G/pb
mzx2LkmSJEmSpLXV9gwo3fTcu/zJn7ubif0TfzZ8///+XiuP4ftf+GI0l/vV
n/nbG/7X48dmpucAD8Px+SjcRAcabsPN6Cwc7m3dHy96Mbv2ed55wvHzQgaD
fhgcnIZR9Atvw/jqPBztLv7N4vvfzs+R6IX9/d1Sx+rKVvo44vjs7lz12fkV
u+Ho/CqMoz/pOlycDO/PDy/YZ1+m+Lke0/PND0/DxdU4OvZzO76a/XuDXuy/
yTgBfHF98uLr+C5aHNdIPC/j89hx5unysh+OzpaXl/HVRTgZbkfLSy/z/NH2
Z3Nnj2F+f6sXW2F4crG4t9ntOFydH91d7z/rvJqGloumz3GIzk/q9+/PKy2e
2xjFzu/cHp4sL3PXy69p1rGg8udmT4+TLz4D+ruH4WwUX8ZH4exwfk5sL/XY
crnjaItzcHePzsPV4sUJ1xcnYXh/fmLeMf1OzeZO35tLy9v14phwtLxthb29
7dzf08RsbuL5PTxb/pyffm/sxs6BTj0/IH6e9OS7YLrcxe6rES13g0Hh47mM
XTeg0Vmo1mZzQ+Lz5TD+WTv5fBqdHeZ/PpWu+fWApz2bGxr67O/obO7S+ZOT
78XTUexvmy93vcnnTIn1scZnc2PrNdH3W4nfHVuvmi7fJxfVX6/yc5D1v9/K
LIfL39mnK3z+lvt3qv3t6UXrBluDMOhvhf3j5e/jm9Fp7Ps4Z9asic/ETc3m
RjPu2+Eg/l3dYJVfl7rvg9jsYX/3KJynfV9v7YW97fznd/xmGP2eF1vTx5G2
LjNZVgq+QxZzji+K70Nascqzhlevl5a93LGvwt8Vm+97UXz/zaLfkbz+wuni
fTRffxtnfH700t9Hj2o2t4G/d2n9+8H34ny7fGt7J+wU3Nezqc/C5va1NLOt
tL7Z3NDQunB8ez97GehPtjeaum/u9uR39QcH4XR0s7QP5/xoN/b5l38/l9mf
Pz/Xemc/7G/VfC8sPdQOzeY28h4t0yi2HNytn50ufQ+Ow9V0mR/0Yv/N69zv
lrxl//by1WKfXm97eT/T/P2Ve52bErOf0d+TMf/R0mzuYh1o8r7ql9zW2dA6
3v0vvJ+riq8TJddFtnKf/xLbZQ/Wu5Y/D+LbA3lzHQ3NNsSuv7jydS43Opsb
Glgm6u47a2I5aWY/a2HXi2trPfxbb2/ul7WdndL3zd2afodt7YfjpX0cN2F0
GttWyJw7i11X4uA8rHLb3ErL2oPtky5so2xuP95d832hvf39sFt2PaaRz6fl
me/l5/5+H+Lk+3tnp5375saPbfX7/ZLbJE3s5y6/n6/+ukKJ9fCOHrdKr5lt
k6b3R0/nQfvx12myDbdYLuafs3thK/p83Aov8w+ct7qtHv+sS99O7O5sbnPL
SH6llvfan6PNHOPb2Lbu7J/q0mxuA/veS7WGY2aPfDa3znpifL1ha3osI2VZ
7e3tlV6fWWUdaJXtkFW+O5v5W5s7di5JkiRJkqT11fYMKN303Hvn5W9Fc7Fv
f/yTrTyG0cf+SfQYvv2bBy08gnG4OBwsjh/k6O8e518jOCzv3z6dHqfq5fy+
Ybnrwi/PXdW4L23B78097nZ9Ejs+mq6Xd63rKpX4t+bHhA/eZD2Di/vLvdh5
Xen6+9FsZ9o1xZfu11u0vOSdz9iF2dxJ44twGDsHM1Xe/a8aWC4aP8chdk3V
2b+feQHmeONwfrBd8DnQy71nRLVzs2/Cm8J/L/seFeXmAq7DyX7BstobhMOc
F6dbs7nT8fiXS69t4vmannjw4PV/uLwU/02x+fwXeY9pFN3bLVs/7Gdev7rE
75idq1Z8zvCTnM2dNorN++Q8R7lPcamaXQ948rO502p/9nd1NjcULnez84pi
92rIfJ0f/jdln9u8xifLv7PkfRAW99hc7fWqNgdZ7/ut7PURit+zBZ+/m57N
nSyTF2exc54TJusYR/n3Iaj9mbix++bGZ9xzlrn+VhjsH4Wzq+onrq/yutR7
H0zWE1+mbDdF7s59XP4+Tv/uHL3ezVkO7s5zLjrXc2k2N+devnnF7z9aXsrf
tDTzUl7qsvNgNnfn9QqDvkXL+c2b6P55ea9n1vrx5taNY/cwK3re8qr5985a
unZW2rI/iv7ewtncmp+Fze5rqb+ttMpsbqV9ME2sCz+4vljC9HzKUc3ricTf
d6fTOdCcZa4/LDfD/3A9asXPuuSv3Ut5XCnv503M5k5r4j1aqhLL+/17cPvg
TeH+s6Jl//byuMSym3VftBLr/fF5vJ3XyfXhUq9fQ5+zSy3uW3Sn5HUCN7CO
t2j5/siZn6F7JxnbGeW2y8YXh7mf0bN/Yz/r3yj/7zy22dzFveIWVtkmLVom
6u87q7uczB5F7f2sZVqaHUt5jor3qcWXtYtwNsz5rJysFxzl7BCKzyJk/45+
2BpMr/V5lVzfqbSsFW2f3H1/bHIb5f4XbWg/Xkgsw6X3j9T+fJr9lqWZpeTP
n82Wzbv/96Zncx++5jn3plyq7n7uavv56q0rlFwP7+Jxq8zqb5usY390mffL
3Wu1G46LD5y3vq1+/nIx35p8X5R7HSttzxVUettkVhPLSH43ie+x9O+Mup+j
TRzju/9F69/Wnf07Zffxb2I2d1rNfe+la/iY2SOfza23nljmOHDsfscFn2Ur
rQOV3Q6p/d3Z1N/azLFzSZIkSZIkra+2Z0Dppufe+7e34Ssf+uloNnb8fz5b
6eff+4Nvhrf/8a+EL33gg+HtT3wqvPetagfWx5/9XPRvf+Un/lp4/733Kv18
o91chpPDvTDoLx//6/W3w87wKJyNyp03njgGeHMejvcHoR8dq+qF/mB6bc0K
5xpfHy/OO3uxE1Y5TTm18WU4il/XtPA44k24PDkIO9v9xc/0+mF7Z5h+Tkmt
bsPV2VEY7mzHnrv587cXDpeup51S7DnLvAdZVrFjFHuJ4dz7R3d1Fo4OJsvL
Vn/p+Su/vHRkNnfW3XO9P9haXk63BmH/6CwUj0zUWy6aP8chfo5l2fNP7pq9
rkvv19hrWvBErHJu9u3VaTjcG4St+OfO7Lk7CCeX2W/0KjMpN5cn4WDpfTR5
bbd3wrDEa9u12dxZ128evEbTv2fymRBb1kbT+zL10peXMn/T9PyCnfjnTs5j
Sj6/02VmEPYOT0LOSxhr/v6Lv3+2ws7B6f3rU+L44tXx/ePtha2Xb2oec4/V
9mzurJTPl+h74LLSdRcKa2g94FnM5s6q89nf4dncaeNRODnYCduxZWH6vh7G
lrnx2XBxb4iMX3Q9+W8enqtUb5FYPm+h0rVabq/C2dH+8vJd8vVaZQ5y1e+3
Ksvh/Dt768HrVOrzt4XZ3Ktw97wsfWfcPyenpedTa3wmbmw2N8yuZXM4WF72
s+Xc3zjzT1nxdanxPph2/ebh9/XkZ/cOY+uIo9k9O3sF353J9c3J93dsOSg6
730cn22seA2ieZ2czQ3xmb5q6/CxP6zEe3uy7nV6GPaWtn3uv+8P8j8/Nrdu
PN1UPwp7W70Sz1tRq/+9USn7NBbL7FWl2dw6n4Xr2NdSZ1tple2/RvbBVF4X
Tv6O6ffl9P7Fs58vfR+gjBLvu5twfrz8Wbv075Vscc20stfbKtN1OBs+PL+4
xdncWQ28R0s2+/4ZLq/jxtefLkre6LHcsj9dDobJZbdwP1O59f74DFzinpsl
X7/mPmdjvzM+Y1FyTuyu9a7jJf+5yefnw2Uhb2YwqsJ23Hy9a2t53WkwWXfK
3R6o8u8U7bMYn0dzPr3J67HSq9voHMF0xmFn6TMo+3fW/Pyvue/s7iGsupws
qrOftWxp6xWD/eNwtzpQZTZ3tpYy+Ux++J25HdtHl/tIwuXhYOkzJU/ifoIr
LGvz7ZMubKMs2tR+vNh1WV9UvK5Prc+n6JekLCux9Z0WZ3OXZnYqXt9k9f3c
q+yrXHVdocp6eNeOW+VXZ9tkffujp8/hdF11+Tjo4nkclTsu3Ilt9fg9Wx/e
f7fk61h5ey6vktsmseotI8WP52Q//rflbB/W/RxtYj1l1pq3decPt9Q+/k3N
5t618r73qjV1zOzRz+bWXU8ch1HK99FgGPtsG5+FYbR9mn9d7urrQDW3Qyqd
C9TU39rAsXNJkiRJkiStrbZnQOkmhfCd//7bi/nYD30kvHfzndI/+87wZfSz
U+98+j+X/tn3vv3tpbng7/72/1zl4a+nomPnOdU9hz+92H72vdPm5q4eTcXn
+0qS1Fg11gMk6Tk3vz/t9D5a2ecl3Ybx1fnsHPHZZ+3WYbjc4GN8Cp3uP9Ft
o9Gr+3P1fP8+pVaaYU1pPfta1Nmia6ateK9L5dbctd4k6THX0EzdfA58ep/P
nOGM2/FVOD+a36PW91vdro/n12nYCxmXV5XUaOagpGfdsztmtqZr5DaQdSBJ
kiRJkiS1XdszoHST7hr90ieiGdm3PvqPwvs//GGpn1t1Nnd6f9yv/Z1fjH7u
7Y9/ss7Db77Ozeaeh5f312TNuo/r085sriRpgz278wwkqYHGp2Fv9tm5E0pd
sj+awxw0eE+DZ9D45P553gsnT2zT8PJwa/b9u2VQ4UllNlerFJ1r6voNa8ls
riRNa2LmYhxO96rct2wUXt0f5xjYCKrV+cveM76WrdRGZnOlZ92zO2bW3dlc
60CSJEmSJElqu7ZnQOkm3fXDb9+Er3zwp6JZ2at/9W9K/dx7f/DN8Pt/8xdm
P/O1n//74b1vXZf6uatf7cfu1fvT4f0/+l6dh9980f054rZLnTO+lvNF54+n
9zKcN/U7H1U34fXOw9djwgFgSdI6qrEeIEnPtquj+1nbkveAij5r98Ppuh/b
k2kczvb7T/Nc/tFRGEyXh/4wvHFi2ZPKbK6qdx2O7/cB7RyX28+oat283knu
Y/PekvTsamLmYnFN0XLXl1lcg3XfRlCN5s9jL7x8ngfMpBZafH7FdW1mTdKa
enbHzLo6m2sdSJIkSZIkSe3X9gwo3aRF7/7um/DFP/Wji/vn/uLHw3vf+W6p
n729/Gqp/276+9766McW99qd/HvfP/9CnYe9psbh/GDw4BhDW7O5i2uv957z
TvbR67C31TObK0naQKuvB0jSsy26b+70PofDcDq6Cbcp/9ntzVW4OBmG7fk5
na7xX7qb0/3Qnzxn/cl20JN6zm4vw6vB/T2UR20/GDWd2VxV7vIwbN3fh91o
7roahdd7Ww+2d7y3JD23mr1v7vQaRcPTUbhJ3wgKVxcnYbg9P76xF06f1Ar9
Zhuf7t09j8/2WrZSO43PD8LgwXxut2bWJK2v53bMrJuzudaBJEmSJEmS1IXa
ngGlm7TczX99tZibnbj8yZ8Lt1+5bOR3/+Diy+Hywx9Z+v3f+W//o5Hf3aUa
O1/0bP8ZXXtUkiRJ0mNvfDaczY4m78WXrrd9EM6dky496czmqlyL+w5G3xFP
7ToEkqSO1dDMxfgsDPvlt4Fe9LbDgY2gFVq8XmYCJUnSeuvSbK51IEmSJEmS
JHWrtmdA6SYl+97/+t/hS3/ux6P52Ys/84HwjX/+r8O7n/vdlX7fu7/zufCN
f/Yvw8Wf/rHod37pR/9SGJ/+TsOPvButYza31x+E4ambhUiSJEnqdrfXF+Hk
cD/sbG+Ffu/huei90N/aDjv7h+Hk4jr1vrqSnlZmc1Wu+GxuL2ztHYULY0uS
pLXW4MzF7XW4ODkM+zvbYavfS8zj9vpbYXtnPxyeXIRrG0ErFptL6fXDYHga
HDGTJEnrqaOzudaBJEmSJEmS1IHangGlm5TeDy6/Gi7/ys8s3eN2dh/dv/qz
4Zv/9tfCu2efD+H999N/ePL//+5nPx++OdhJ/x3Te/G+NdrsHyRJkiRJkiRJ
kiRJkiRJkiRJkiRJkirV9gwo3aTs3n/33fCH//E3wpd+5C8m5mvn99P9/b/x
d8M3PvUvwjf/3b8PX/+VX539v6f//2n//Zd+7C+HP/xPn277z5IkSZIkSZIk
SZIkSZIkSZIkSZIkSSVqewaUblJxP/zOd8O3fu0/hC//hQ+lztwWmf7ct3b3
wvt/9L22/xRJkiRJkiRJkiRJkiRJkiRJkiRJklSytmdA6SZV6wfnXwjv/Ppn
wtsf/2S4/PBHUmdxLz/812f/+zu/8ZvhB7/3xbYfsiRJkiRJkiRJkiRJkiRJ
kiRJkiRJWqG2Z0DpJtXvj996O7x79vnZ/ylJkiRJkiRJkiRJkiRJkiRJkiRJ
kp5Gbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIk
SZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjd
JEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIk
SZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmS
JEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3P
gNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmS
JEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJ
kiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK
1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIk
SZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJ
kqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIk
SZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjd
JEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIk
SZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmS
JEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3P
gNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmS
JEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJ
kiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK
1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIk
SZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJ
kqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIk
SZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjd
JEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIk
SZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmS
JEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3P
gNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmS
JEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJ
kiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK
1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJ
kiRJkiRJkiRJStb2DCjdJEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIk
SZIkSZIkSZIkSZIkSZIkSZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJ
kqRkbc+A0k2SJEmSJEmSJEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIk
SZIkSZIkSZIkSZKkZG3PgNJNkiRJkiRJkiRJkiRJkiRJkiRJkiRJStb2DCjd
JEmSJEmSJEmSJEmSJEmSJEmSJEmSpGRtz4DSTZIkSZIkSZIkSZIkSZIkSZIk
SZIkSUrW9gwo3SRJkiRJkiRJkiRJkiRJkiRJkiRJkqRkbc+A0k2SJEmSJEmS
JEmSJEmSJEmSJEmSJElK1vYMKN0kSZIkSZIkSZIkSZIkSZIkSZIkSZKkZG3P
gAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQ
zf8H/UVc3Q==
    "], {{0, 489.}, {1144.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{240, 240}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{566.6333333333342, Automatic},
  ImageSizeRaw->{1144.5, 489.},
  PlotRange->{{0, 1144.5}, {0, 489.}}]], "Input",
 CellID->3854516,ExpressionUUID->"56b8a6c7-c56e-7f48-80de-0b22533c688c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Job Results", "Subsubsection",
 CellChangeTimes->{{3.9409610451926184`*^9, 3.940961048125498*^9}},
 CellID->878123497,ExpressionUUID->"22e15b6c-ce78-474e-b2ae-449bfa22947c"],

Cell[CellGroupData[{

Cell["\<\
 Once the job is done, you can also check on results using the service \
connection and the appropriate job ID:\
\>", "Text",
 CellChangeTimes->{{3.940958943793598*^9, 3.940958947373312*^9}},
 CellID->355234984,ExpressionUUID->"8c1a2242-eb28-2e45-8a57-b7598670477e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jobResult", "=", 
  RowBox[{"ibmq", "[", 
   RowBox[{"\"\<JobResults\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<JobID\>\"", "->", 
      RowBox[{"job1", "[", "\"\<id\>\"", "]"}]}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.940951191865034*^9, 3.940951194656334*^9}, {
   3.940951771728218*^9, 3.940951791057532*^9}, 3.940958746890806*^9, {
   3.9409588366841965`*^9, 3.94095883924848*^9}, 3.940959037057459*^9, {
   3.940959103133186*^9, 3.9409591084794846`*^9}},
 CellLabel->"In[23]:=",
 CellID->600845936,ExpressionUUID->"7e60fec9-d71b-1640-a04f-bc828467fd0f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "backend_name" -> "ibm_brisbane", "backend_version" -> "0.0.0", 
       "date" -> <|
        "__type__" -> "datetime", "__value__" -> 
         "2024-11-18T21:00:29.820794+00:00"|>, 
       "header" -> <|
        "backend_name" -> "ibm_brisbane", "backend_version" -> "1.1.53"|>, 
       "qobj_id" -> "Unknown", "job_id" -> "Unknown", "status" -> "done", 
       "success" -> True, 
       "results" -> {<|
         "shots" -> 4000, "success" -> True, 
          "data" -> <|
           "counts" -> <|
             "0x7" -> 254, "0x3" -> 704, "0x6" -> 658, "0x4" -> 675, "0x5" -> 
              305, "0x1" -> 729, "0x2" -> 318, "0x0" -> 357|>|>, "meas_level" -> 
          2, "header" -> <|
           "qubit_labels" -> {{"q", 0}, {"q", 1}, {"q", 2}, {"q", 3}, {
              "q", 4}, {"q", 5}, {"q", 6}, {"q", 7}, {"q", 8}, {"q", 9}, {
              "q", 10}, {"q", 11}, {"q", 12}, {"q", 13}, {"q", 14}, {
              "q", 15}, {"q", 16}, {"q", 17}, {"q", 18}, {"q", 19}, {
              "q", 20}, {"q", 21}, {"q", 22}, {"q", 23}, {"q", 24}, {
              "q", 25}, {"q", 26}, {"q", 27}, {"q", 28}, {"q", 29}, {
              "q", 30}, {"q", 31}, {"q", 32}, {"q", 33}, {"q", 34}, {
              "q", 35}, {"q", 36}, {"q", 37}, {"q", 38}, {"q", 39}, {
              "q", 40}, {"q", 41}, {"q", 42}, {"q", 43}, {"q", 44}, {
              "q", 45}, {"q", 46}, {"q", 47}, {"q", 48}, {"q", 49}, {
              "q", 50}, {"q", 51}, {"q", 52}, {"q", 53}, {"q", 54}, {
              "q", 55}, {"q", 56}, {"q", 57}, {"q", 58}, {"q", 59}, {
              "q", 60}, {"q", 61}, {"q", 62}, {"q", 63}, {"q", 64}, {
              "q", 65}, {"q", 66}, {"q", 67}, {"q", 68}, {"q", 69}, {
              "q", 70}, {"q", 71}, {"q", 72}, {"q", 73}, {"q", 74}, {
              "q", 75}, {"q", 76}, {"q", 77}, {"q", 78}, {"q", 79}, {
              "q", 80}, {"q", 81}, {"q", 82}, {"q", 83}, {"q", 84}, {
              "q", 85}, {"q", 86}, {"q", 87}, {"q", 88}, {"q", 89}, {
              "q", 90}, {"q", 91}, {"q", 92}, {"q", 93}, {"q", 94}, {
              "q", 95}, {"q", 96}, {"q", 97}, {"q", 98}, {"q", 99}, {
              "q", 100}, {"q", 101}, {"q", 102}, {"q", 103}, {"q", 104}, {
              "q", 105}, {"q", 106}, {"q", 107}, {"q", 108}, {"q", 109}, {
              "q", 110}, {"q", 111}, {"q", 112}, {"q", 113}, {"q", 114}, {
              "q", 115}, {"q", 116}, {"q", 117}, {"q", 118}, {"q", 119}, {
              "q", 120}, {"q", 121}, {"q", 122}, {"q", 123}, {"q", 124}, {
              "q", 125}, {"q", 126}}, "n_qubits" -> 127, 
            "qreg_sizes" -> {{"q", 127}}, 
            "clbit_labels" -> {{"c", 0}, {"c", 1}, {"c", 2}}, "memory_slots" -> 
            3, "creg_sizes" -> {{"c", 3}}, "name" -> "circuit-160", 
            "global_phase" -> 0.7853981633974483, "metadata" -> <||>|>, 
          "status" -> "done", "meas_return" -> "avg"|>}, "execution_id" -> "",
        "time_taken" -> 2.18162426, "error" -> Null|>, "AllowEmbedding" -> 
     True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
        TypeSystem`PackageScope`AtomShape[134.4], {"backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"date"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"header"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qobj_id"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"job_id"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"success"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"results"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"execution_id"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"time_taken"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"error"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "backend_name", "backend_version", "date", "header", "qobj_id", 
        "job_id", "status", "success", "results", "execution_id", 
        "time_taken", "error"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["__type__", "__value__"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["backend_name", "backend_version"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "shots", "success", "data", "meas_level", "header", "status", 
           "meas_return"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
             TypeSystem`Atom[Integer], 8], 1], 
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "qubit_labels", "n_qubits", "qreg_sizes", "clbit_labels", 
             "memory_slots", "creg_sizes", "name", "global_phase", 
             "metadata"}, {
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["q"]], 
                TypeSystem`Atom[Integer]}], 127], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["c"]], 
                TypeSystem`Atom[Integer]}], 3], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Assoc[
             TypeSystem`UnknownType, TypeSystem`UnknownType, 
              TypeSystem`AnyLength]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Real], TypeSystem`AnyType}], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"backend_name"} -> 
        TypeSystem`PackageScope`AtomShape[134.4], {"backend_version"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"date"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"header"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"qobj_id"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"job_id"} -> 
        TypeSystem`PackageScope`AtomShape[78.4], {"status"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {"success"} -> 
        TypeSystem`PackageScope`AtomShape[36], {"results"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"execution_id"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"time_taken"} -> 
        TypeSystem`PackageScope`AtomShape[60], {"error"} -> 
        TypeSystem`PackageScope`UnknownShape[False]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "backend_name", "backend_version", "date", "header", "qobj_id", 
        "job_id", "status", "success", "results", "execution_id", 
        "time_taken", "error"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["__type__", "__value__"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Assoc[
         TypeSystem`Atom[
          TypeSystem`Enumeration["backend_name", "backend_version"]], 
         TypeSystem`Atom[String], 2], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[TypeSystem`Boolean], 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "shots", "success", "data", "meas_level", "header", "status", 
           "meas_return"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[TypeSystem`Boolean], 
           TypeSystem`Assoc[
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
             TypeSystem`Atom[Integer], 8], 1], 
           TypeSystem`Atom[Integer], 
           
           TypeSystem`Struct[{
            "qubit_labels", "n_qubits", "qreg_sizes", "clbit_labels", 
             "memory_slots", "creg_sizes", "name", "global_phase", 
             "metadata"}, {
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["q"]], 
                TypeSystem`Atom[Integer]}], 127], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[
                 TypeSystem`Enumeration["c"]], 
                TypeSystem`Atom[Integer]}], 3], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[
              TypeSystem`Tuple[{
                TypeSystem`Atom[String], 
                TypeSystem`Atom[Integer]}], 1], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real], 
             TypeSystem`Assoc[
             TypeSystem`UnknownType, TypeSystem`UnknownType, 
              TypeSystem`AnyLength]}], 
           TypeSystem`Atom[String], 
           TypeSystem`Atom[String]}], 1], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Real], TypeSystem`AnyType}], "Path" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 10, "DataRowCount" -> 
     12, "DataColumnCount" -> 1, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend_name", 
                  Style[
                  "backend_name", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["backend_name"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["backend_name"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ibm_brisbane", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["backend_name"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["backend_version", 
                  Style[
                  "backend_version", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["backend_version"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["backend_version"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["0.0.0", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["backend_version"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["date", 
                  Style[
                  "date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"__type__" -> "datetime", "__value__" -> 
                    "2024-11-18T21:00:29.820794+00:00"|>, 
                   ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"__type__" -> "datetime", "__value__" -> 
                    "2024-11-18T21:00:29.820794+00:00"|>, 
                    ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["date"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["date"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["header", 
                  Style[
                  "header", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["header"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["header"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  
                  Style[<|"backend_name" -> "ibm_brisbane", "backend_version" -> 
                    "1.1.53"|>, ShowStringCharacters -> False], 
                  Style[
                   
                   Style[<|"backend_name" -> "ibm_brisbane", 
                    "backend_version" -> "1.1.53"|>, ShowStringCharacters -> 
                    False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["header"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["header"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["qobj_id", 
                  Style[
                  "qobj_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["qobj_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["qobj_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Unknown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["qobj_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["job_id", 
                  Style[
                  "job_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["job_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["job_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Unknown", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["job_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["status", 
                  Style[
                  "status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["done", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["success", 
                  Style[
                  "success", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["success"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["success"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["True"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["success"]}, "Item", False], "Mouse"], 
              ImageSize -> {{36, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["results", 
                  Style[
                  "results", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["results"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["results"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Row[{"\[ThinSpace]{ ", 
                    Subscript["\[Ellipsis]", 1], " }\[ThinSpace]"}], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["results"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["results"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["execution_id", 
                  Style[
                  "execution_id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["execution_id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["execution_id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["execution_id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["time_taken", 
                  Style[
                  "time_taken", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["time_taken"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["time_taken"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2.18162"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["time_taken"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["error", 
                  Style[
                  "error", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "66758507-35c2-434d-ae8a-0190ac66b479"]][{
                    Key["error"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["error"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "66758507-35c2-434d-ae8a-0190ac66b479"][{
                 Key["error"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "66758507-35c2-434d-ae8a-0190ac66b479", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "66758507-35c2-434d-ae8a-0190ac66b479"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "66758507-35c2-434d-ae8a-0190ac66b479"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "66758507-35c2-434d-ae8a-0190ac66b479"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "66758507-35c2-434d-ae8a-0190ac66b479"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "66758507-35c2-434d-ae8a-0190ac66b479"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "66758507-35c2-434d-ae8a-0190ac66b479"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{565., {167.8544921875, 173.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{565., {167.8544921875, 173.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.94095178937946*^9, 3.940951792377466*^9}, 
   3.9409587503334846`*^9, 3.940958841448017*^9},
 CellLabel->"Out[23]=",
 CellID->319133584,ExpressionUUID->"a816d2f4-e6fd-1b4f-8c2f-9dec707e3bea"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.940959176213121*^9, 3.9409591786955776`*^9}},
 CellID->221297928,ExpressionUUID->"66660f30-8b90-6845-afc6-58de6c973687"],

Cell[CellGroupData[{

Cell["\<\
If you already know the job is done and want to store the results, you can \
use the appropriate job ID and perform some post-processing to get the data \
into shape:\
\>", "Text",
 CellChangeTimes->{{3.9409592392632003`*^9, 3.940959248925148*^9}},
 CellID->100538978,ExpressionUUID->"49a570d6-db50-8c46-9c86-6902275e6683"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"counts", "=", 
  RowBox[{"jobResult", "[", 
   RowBox[{
   "\"\<results\>\"", ",", "All", ",", "\"\<data\>\"", ",", 
    "\"\<counts\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.940960103740621*^9, 3.94096012363616*^9}, {
  3.940960223736332*^9, 3.940960225317196*^9}},
 CellLabel->"In[1255]:=",
 CellID->791823408,ExpressionUUID->"ee90d538-c5f3-fe44-bf5a-60394d352374"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "0x7" -> 254, "0x3" -> 704, "0x6" -> 658, "0x4" -> 675, "0x5" -> 305, 
        "0x1" -> 729, "0x2" -> 318, "0x0" -> 357|>}, "AllowEmbedding" -> True,
      "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[31.5], 
           TypeSystem`PackageScope`AtomShape[34]]], 8, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
        TypeSystem`Atom[Integer], 8], 1], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`ColumnShape[
          TypeSystem`PackageScope`KeyValueShape[
           TypeSystem`PackageScope`AtomShape[31.5], 
           TypeSystem`PackageScope`AtomShape[34]]], 8, 
         DirectedInfinity[1], {All}]], 1, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Assoc[
        TypeSystem`Atom[
         TypeSystem`Enumeration[
         "0x0", "0x1", "0x2", "0x3", "0x4", "0x5", "0x6", "0x7"]], 
        TypeSystem`Atom[Integer], 8], 1], "Path" -> {}, "DisplayedRowCount" -> 
     1, "DisplayedColumnCount" -> 1, "DataRowCount" -> 1, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x7", 
                  Style[
                  "0x7", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x7"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x7"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["254"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x7"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x3", 
                  Style[
                  "0x3", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x3"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x3"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["704"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x3"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x6", 
                  Style[
                  "0x6", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x6"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x6"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["658"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x6"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x4", 
                  Style[
                  "0x4", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x4"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x4"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["675"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x4"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x5", 
                  Style[
                  "0x5", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x5"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x5"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["305"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x5"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x1", 
                  Style[
                  "0x1", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x1"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x1"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["729"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x1"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x2", 
                  Style[
                  "0x2", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x2"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x2"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["318"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x2"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["0x0", 
                  Style[
                  "0x0", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["0x0"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x0"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["357"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["0x0"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{82.5, {113.8544921875, 119.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{82.5, {113.8544921875, 119.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.940960104602743*^9, 3.9409601245479813`*^9}, 
   3.940960226211006*^9, 3.941812443843519*^9},
 CellLabel->"Out[1255]=",
 CellID->260563706,ExpressionUUID->"98ca5ed6-2897-384d-8e56-342653da8040"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expResults", "=", 
  RowBox[{"Normalize", "[", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"First", "[", 
      RowBox[{"Normal", "[", 
       RowBox[{"Values", "[", "counts", "]"}], "]"}], "]"}]}], ",", "Total"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.940959304540804*^9, 3.940959310103012*^9}, {
   3.9409593749723606`*^9, 3.9409594549485207`*^9}, {3.940959684259428*^9, 
   3.94095971208232*^9}, {3.940959760626812*^9, 3.940959781395079*^9}, {
   3.940959847605873*^9, 3.940959856053797*^9}, {3.9409598987986183`*^9, 
   3.9409599296294727`*^9}, {3.940960033514612*^9, 3.9409600421074944`*^9}, 
   3.940960091625103*^9, {3.9409601282352505`*^9, 3.94096016078383*^9}, {
   3.9409602332762203`*^9, 3.94096028111694*^9}},
 CellLabel->"In[1258]:=",
 CellID->77960807,ExpressionUUID->"f6a94edf-443e-9643-90f3-1413df067d4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0635`", ",", "0.176`", ",", "0.1645`", ",", "0.16875`", ",", "0.07625`", 
   ",", "0.18225`", ",", "0.0795`", ",", "0.08925`"}], "}"}]], "Output",
 CellChangeTimes->{{3.940960147775275*^9, 3.940960161031904*^9}, {
   3.9409602345786533`*^9, 3.94096028155068*^9}, 3.940960376681164*^9, 
   3.9418124564431887`*^9},
 CellLabel->"Out[1258]=",
 CellID->65532129,ExpressionUUID->"aeea0c40-8d38-2840-abaf-69e2b87a1290"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Calculate the theoretical results using the defined QuantumCircuitOperator:\
\>", "Text",
 CellChangeTimes->{{3.940960457420294*^9, 3.9409604919639053`*^9}},
 CellID->304338068,ExpressionUUID->"54f54094-b690-674b-85af-21c075d102c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"theoryResults", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"qc", "[", "]"}], "[", "\"\<ProbabilityList\>\"", "]"}], "//", 
   "N"}]}]], "Input",
 CellChangeTimes->{{3.940959931389078*^9, 3.940959963324575*^9}},
 CellLabel->"In[1259]:=",
 CellID->21304690,ExpressionUUID->"48094023-cca1-9d4b-abc4-78044fca48ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0625`", ",", "0.1875`", ",", "0.0625`", ",", "0.1875`", ",", "0.1875`", 
   ",", "0.0625`", ",", "0.1875`", ",", "0.0625`"}], "}"}]], "Output",
 CellChangeTimes->{{3.940959952876091*^9, 3.9409599640479946`*^9}, 
   3.9409603790214634`*^9, 3.9418124585039883`*^9},
 CellLabel->"Out[1259]=",
 CellID->153615261,ExpressionUUID->"bdb1620a-c3eb-e64e-9e6d-26884f6ae5bd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot the results and compare:", "Text",
 CellChangeTimes->{{3.940960572682392*^9, 3.9409605776958046`*^9}},
 CellID->587276563,ExpressionUUID->"00720001-a9be-3c4f-8ebc-085e8fe18232"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"expResults", ",", "theoryResults"}], "}"}], "]"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["3", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["664", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[
    ChartLegends -> Placed[{"Wolfram quantum framwork", "IBM QPU"}, Below], 
     "ChartLabels" -> {
       Wolfram`QuantumFramework`QuantumState[$CellContext`expResults][
       "ElementNames"], None}, ImageSize -> Full],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.887039062332301*^9, 3.887039065253301*^9}, {
   3.887039121615898*^9, 3.887039165620427*^9}, {3.887069563045588*^9, 
   3.887069569066731*^9}, {3.887069617735136*^9, 3.887069637186979*^9}, {
   3.887078233732377*^9, 3.887078301089211*^9}, {3.887971761345772*^9, 
   3.887971764492241*^9}, 3.9409605252276745`*^9, {3.940960596436537*^9, 
   3.940960617403416*^9}, {3.9409606553817825`*^9, 3.940960661389395*^9}, {
   3.9409608221241035`*^9, 3.94096085464131*^9}, 3.941734641454033*^9, {
   3.94173470278681*^9, 3.941734725840615*^9}, {3.9418124690143127`*^9, 
   3.9418125012852077`*^9}},
 CellLabel->"In[1261]:=",
 CellID->31647014,ExpressionUUID->"7bd0c1d7-eec4-134a-995f-ef38c01316c1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.38495265841223597`, 0.}, {18.6959213401311, 
       0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{0.7439912600145666, 0.}, {1.64639475600874, 
               0.0635}, "RoundingRadius" -> 0], StatusArea[#, 0.0635]& , 
              TagBoxNote -> "0.0635"], 
             StyleBox["0.0635`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0635, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{1.7439912600145666`, 0.}, {2.64639475600874, 
               0.0625}, "RoundingRadius" -> 0], StatusArea[#, 0.0625]& , 
              TagBoxNote -> "0.0625"], 
             StyleBox["0.0625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0625, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{3.0367807720320465`, 0.}, {3.93918426802622, 
               0.176}, "RoundingRadius" -> 0], StatusArea[#, 0.176]& , 
              TagBoxNote -> "0.176"], 
             StyleBox["0.176`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.176, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{4.0367807720320465`, 0.}, {4.93918426802622, 
               0.1875}, "RoundingRadius" -> 0], StatusArea[#, 0.1875]& , 
              TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{5.3295702840495265`, 0.}, {6.2319737800437, 
               0.1645}, "RoundingRadius" -> 0], StatusArea[#, 0.1645]& , 
              TagBoxNote -> "0.1645"], 
             StyleBox["0.1645`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1645, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{6.3295702840495265`, 0.}, {7.2319737800437, 
               0.0625}, "RoundingRadius" -> 0], StatusArea[#, 0.0625]& , 
              TagBoxNote -> "0.0625"], 
             StyleBox["0.0625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0625, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{7.622359796067006, 0.}, {8.52476329206118, 
               0.16875}, "RoundingRadius" -> 0], StatusArea[#, 0.16875]& , 
              TagBoxNote -> "0.16875"], 
             StyleBox["0.16875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.16875, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{8.622359796067007, 0.}, {9.52476329206118, 
               0.1875}, "RoundingRadius" -> 0], StatusArea[#, 0.1875]& , 
              TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{9.915149308084487, 0.}, {10.81755280407866, 
               0.07625}, "RoundingRadius" -> 0], StatusArea[#, 0.07625]& , 
              TagBoxNote -> "0.07625"], 
             StyleBox["0.07625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.07625, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{10.915149308084487`, 0.}, {11.81755280407866, 
               0.1875}, "RoundingRadius" -> 0], StatusArea[#, 0.1875]& , 
              TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{12.207938820101967`, 0.}, {13.11034231609614, 
               0.18225}, "RoundingRadius" -> 0], StatusArea[#, 0.18225]& , 
              TagBoxNote -> "0.18225"], 
             StyleBox["0.18225`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.18225, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{13.207938820101967`, 0.}, {14.11034231609614, 
               0.0625}, "RoundingRadius" -> 0], StatusArea[#, 0.0625]& , 
              TagBoxNote -> "0.0625"], 
             StyleBox["0.0625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0625, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{14.500728332119447`, 0.}, {15.40313182811362, 
               0.0795}, "RoundingRadius" -> 0], StatusArea[#, 0.0795]& , 
              TagBoxNote -> "0.0795"], 
             StyleBox["0.0795`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0795, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{15.500728332119447`, 0.}, {16.403131828113622`, 
               0.1875}, "RoundingRadius" -> 0], StatusArea[#, 0.1875]& , 
              TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{16.79351784413693, 0.}, {17.6959213401311, 
               0.08925}, "RoundingRadius" -> 0], StatusArea[#, 0.08925]& , 
              TagBoxNote -> "0.08925"], 
             StyleBox["0.08925`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.08925, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              
              RectangleBox[{17.79351784413693, 0.}, {18.6959213401311, 
               0.0625}, "RoundingRadius" -> 0], StatusArea[#, 0.0625]& , 
              TagBoxNote -> "0.0625"], 
             StyleBox["0.0625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0625, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.38495265841223597`, 0.}, {19.062140713765476`, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.7439912600145666, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.7439912600145666, 
              0.}]}], 
           LineBox[{{18.6959213401311, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {18.6959213401311, 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{2.64639475600874, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {2.64639475600874, 
                0.}]}], 
             LineBox[{{3.0367807720320465`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.0367807720320465`, 
                0.}]}], 
             LineBox[{{4.93918426802622, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {4.93918426802622, 
                0.}]}], 
             LineBox[{{5.3295702840495265`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {5.3295702840495265`, 
                0.}]}], 
             LineBox[{{7.2319737800437, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {7.2319737800437, 
                0.}]}], 
             LineBox[{{7.622359796067006, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {7.622359796067006, 
                0.}]}], 
             LineBox[{{9.52476329206118, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {9.52476329206118, 
                0.}]}], 
             LineBox[{{9.915149308084487, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {9.915149308084487, 
                0.}]}], 
             LineBox[{{11.817552804078659`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {11.817552804078659`, 
                0.}]}], 
             LineBox[{{12.207938820101965`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {12.207938820101965`, 
                0.}]}], 
             LineBox[{{14.11034231609614, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.11034231609614, 
                0.}]}], 
             LineBox[{{14.500728332119447`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {14.500728332119447`, 
                0.}]}], 
             LineBox[{{16.403131828113622`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {16.403131828113622`, 
                0.}]}], 
             LineBox[{{16.79351784413693, 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {16.79351784413693, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {1.6951930080116533`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {3.9879825200291332`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {6.280772032046613, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {8.573561544064093, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {10.866351056081573`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {13.159140568099055`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {15.451930080116533`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {17.744719592134015`, 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.38495265841223597`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Full, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Wolfram quantum framwork\"", "\"IBM QPU\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{1, 0.3}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{0.5}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.94096052791634*^9, 3.9409605987449856`*^9, {3.9409608225524616`*^9, 
   3.9409608566487217`*^9}, {3.941812494185127*^9, 3.941812502786396*^9}},
 CellLabel->"Out[1261]=",
 CellID->428447616,ExpressionUUID->"c4f44dc8-0ae9-9948-9d36-ce943e7b1f2d"]
}, Open  ]]
}, Open  ]],

Cell["\<\
As observed, there have been some errors in the hardware, possibly due to \
environmental noise or other factors.\
\>", "Text",
 CellChangeTimes->{{3.940960540663595*^9, 3.9409605643935833`*^9}},
 CellID->346862969,ExpressionUUID->"24c9fb36-077a-5d4c-9ed0-881d0007917e"],

Cell["", "Text",
 CellChangeTimes->{{3.940960403572849*^9, 3.940960404066963*^9}},
 CellID->29608716,ExpressionUUID->"f2e82d63-644d-f241-89a7-83526bc7deda"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AWS-Bracket", "Section",
 CellChangeTimes->{{3.940939258185059*^9, 3.940939267695767*^9}, {
  3.941647644851049*^9, 3.941647653370687*^9}},
 CellID->332485653,ExpressionUUID->"67d9fd02-9f11-b345-b629-e48b8bb48f83"],

Cell[CellGroupData[{

Cell["Using your token, you can connect to AWS:", "Text",
 CellChangeTimes->{
  3.94093934101672*^9, {3.941647925190899*^9, 3.941647928716276*^9}},
 CellID->179608444,ExpressionUUID->"93674a88-943a-d447-9ef0-e73a7c6d2682"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"aws", "=", 
  RowBox[{
  "ServiceConnect", "[", "\"\<AWS\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s3", "=", 
   RowBox[{"ServiceExecute", "[", 
    RowBox[{"\"\<AWS\>\"", ",", "\"\<GetService\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<Name\>\"", "->", "\"\<S3\>\""}], "}"}]}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"braket", "=", 
  RowBox[{"ServiceExecute", "[", 
   RowBox[{"\"\<AWS\>\"", ",", "\"\<GetService\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<Name\>\"", "->", "\"\<Braket\>\""}], "}"}]}], "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.9409393555063763`*^9, 3.9409393573815002`*^9}, {
  3.941647796769337*^9, 3.941647798298601*^9}, {3.941734920991118*^9, 
  3.9417349259213476`*^9}},
 CellLabel->"In[436]:=",
 CellID->70288842,ExpressionUUID->"ba8f2b85-d7bb-994d-a46c-d63883152659"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-503cb4e9ab82c1c27e419fd5b1acfb94"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-503cb4e9ab82c1c27e419fd5b1acfb94"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject["AWS", "ID" -> "connection-503cb4e9ab82c1c27e419fd5b1acfb94"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940958409505605*^9, 3.9417121169210644`*^9, 
  3.941712253841633*^9, 3.9417140987349415`*^9, 3.941734926187664*^9},
 CellLabel->"Out[436]=",
 CellID->341325068,ExpressionUUID->"423bdb21-22f4-c341-a84c-557a2780301e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                 0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                 75.00000299999999}, {0., 75.00000299999999}}}]}, {
                FaceForm[
                 RGBColor[0.20017114700000005`, 0.6704682716, 0., 1.]]}, 
               StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                  3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 
                  34.997}, {56.089, 35.734}, {56.187999999999995`, 36.472}, {
                  56.287, 37.209}, {57.242999999999995`, 36.638}, {58.988, 
                  35.784}, {59.440999999999995`, 34.643}, {58.471, 34.243}, {
                  56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                  36.297999999999995`, 41.976}, {36.297999999999995`, 
                  41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                  35.672999999999995`, 42.196}, {36.297999999999995`, 
                  42.38}, {36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                  "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                  "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                  "]}]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {75., 75.}, 
              PlotRange -> {{0., 75.}, {0., 75.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-5d569eea0ca2aa614a81538af6969700"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.013333333333333334`], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0., 
                 0.015002999999999999`}, {75., 0.015002999999999999`}, {75., 
                 75.00000299999999}, {0., 75.00000299999999}}}]}, {
                FaceForm[
                 RGBColor[0.20017114700000005`, 0.6704682716, 0., 1.]]}, 
               StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                  3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{55.989, 
                  34.997}, {56.089, 35.734}, {56.187999999999995`, 36.472}, {
                  56.287, 37.209}, {57.242999999999995`, 36.638}, {58.988, 
                  35.784}, {59.440999999999995`, 34.643}, {58.471, 34.243}, {
                  56.916999999999994`, 34.765}, {55.989, 34.997}}, {{
                  36.297999999999995`, 41.976}, {36.297999999999995`, 
                  41.712}, {35.916, 41.736000000000004`}, {35.824, 41.909}, {
                  35.672999999999995`, 42.196}, {36.297999999999995`, 
                  42.38}, {36.297999999999995`, 41.976}}, CompressedData["
1:eJxdVHdIVWEUF2lISDQkGtKwgTnSZ+/lKH2/u96976pFE2lnk2wTUWZ7WpZY
mApFizArRCzSSiysRC1saENKW0RFmUWYlRl9555Hf/TB5fLde75zfuOcb0jy
ykkLvb28vCaIh97TF4x9MaHRDe3yt476pAikOR2zr1a7cbhvp2ndQ23o01Db
NrnOgK938J4+eeEYuOvjxNLZBk70D2sc5goHhbuX6Rif3CMp2h6G4mMt+ZUp
LljH14zC4KI1S7KWa9ierexf9i4UR2+JL1EKbtSc1C5fDOH3N0Bk8fU+H4IZ
mRWtgWmx2EuF60KxOKs5zfkoBiGUePcoeNF6GYkjlG5jGH4XfH2YuN0Bv0L9
VaqfDQSzodCODR9G2HwybBjWZVu2kmLHORGW/MUGK2y8HQJd8bF7ESg7Loio
o3FIlHGUx+DTxNKBu4IjINh12TZVQqDN54J/fxuGPvu5eWmChsenV8V2KwnH
vbbJb85cc3HdKeHIXdFrx40gA3uluW/vvw6DKuC157kxhogFRCCu25PTq5oN
CDWa067bkRCZLs3NNuBNQGIjWa9JBnLzxPoZzTr5GEinfBXjsK6cgOq4SyvD
yfpX6jiYIwpvleEi/3J1EP1aXQPJGVyiI4j2bTrjizFgyT3LjQv+wvktBujY
+gYTZN+lpwaIdnbvhH/4CU7elXi8bxdCd7hYtznxoHQ181S0Bs7MrOgcD9qe
vC3hfoAQKtVA9KWqdeWZMr5b/12cr0ABqF+OKqhLFBWrVSwtW3u4704FJG9Z
vcr9Nl9hP5pUxpuo4A69m1X4EPBgBdS2B7pqfN6ucP+0q/gl0qwdqqAf6Rmg
cV928vxP0VBLvrXLXL9AY96lMpIIcJMGSpsTJzNPp4v93iPhAfEKcjHP4RKi
yJgijevdBEKpP8dooDbr8RSMf7Pq8VXiOfFX8ZkGbJ+EajK0RbHk8H0o4Ut+
ZXxkg4JNFNhP9vBXQPK1GjLOit/prxRYY5QiYwsR/6FgK33IkblfO6scXyUz
bz8VpTSwYm/51VOFNe8dMkZSnDhP8IqXe3Sql0Hwkz7oIPotJRJSrQY3QW3r
fAuObzQ9fgPrac6emxhE90ITmKfYW317CKDx2y/2i2hNA/t3x8QpunD8wH7f
NNmvYifXzTc5bkAcn88wYbX/znH4Uy8qrjZ5jj/H8H0AExnUXj2j2L/uHrwO
B/6/3/4CZo0a4Q==
                  "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvadksgQLm5ND3/Q8oWYHP4crFS/VDDlc4fz5Uvp3
Vco8HHiYtNvFXvo6NB84tdBVzdth0tsae9M8H4d/IA0TvR3uqrA1TjX2cdgh
1/o6sMPH4WTZvvlS670dNhRlTHxr4+PQ5Zjw9IKQt8PiAluu65+9HeJ2efIw
VXs5AG0P4+P1dkgSiLDcouHlUGtvGrer0svhmLd5p+MHT4funOe/V270hJi/
2NMh5PHS2UceeDiE8elumpvv6QAyvobfwwHkrG3Ong41IP2dLg5A2ffL2zwc
6rOAPjzh4NAudvPc92YPB5A1J8qsHGYAvXeAy9PBB2RxiDnEX26eDheUbv+s
e2XswLFGJipltifE3UqGDinW9/17070c7IDGe+YYOExzBrpstpdDA0hfmR5E
/W8vhwmgcJHTd9AGWVju7QDSfbtSH6J+t7fDCVC4+Bs4mIEC4JO3AxPII3sN
HLiuA0NGysfBrBNkoZFDtcg694e3fBxi+g991agxdQBRMfa+Dk+A3lf4YO5g
B9LQ6+vg3wuMqMfWDm8CgSHP7ecAdu5ve3j8occvAKfg0Ys=
                  "], CompressedData["
1:eJxdU39IU1EUXiMixMoipCQsJW1u6Nz8lZr6zc1N997b0KRMTEwqxMwiwsTC
ElMTkRIri0oz0yhLJMJETETERMyGGiVWtkxEpR9S9sNfdM9uf3Xgvfve5dzv
fOc73/VIP5ZwSC6TycLYQ6tLUuiT3hYLXuVOeWtydbDnbWwyVViwPMw2dNGo
+HwmKqhJAsvK6XgZzffXSxj9k5/ZHqhHjxBSqvsgwpLOkBL1aItzlqv2ihzv
gh66tAmbpyAiloCf6vk5g4jyquwNhTY9WDV7XqKIF/0sFvVQlbiODLDzhZ19
tTGuBl6vQIRPysWuudgY2DwZwgMRV/VlWZOnjaC0liERu8as5VVNJswOSuku
v0VMe2tWP2yPxRStWyQQ/Zq+ODC2aROQcDaz/WTlGzMSWt2LZg5ISByvv9Ft
E/D41td7PTMifiyxwjkir+8hImty4f6sXEIGCVJkxgn62Grh+UdiMZ9PgBYc
pig2gsrYPlrgSwneBtx2U7/bbrRyHm06OL2uOx6RbMV0PCPQGAk5Ne5uRRj1
kR2GL0z21GkLEJTKJA0GpTuVWNBRQ0BasNeqgnrGmwazrMYQazvJR4KCdMpQ
Ivlg+Jh1vwhnAt6sgswRAkQSwMsXO4ngNyNuMvrCKTUI7sp4NLQBLIb84cV+
9Y0RyKS+EzT46QAOBWieoxquF4Jx90b3tuYELQxsHAulWlQTvWIt123WH0rH
PAN4P/Nqrk9PIC5vWrln7VE/NJCB7CG41DWnSFmn4vNrDUcL6eSmxArSxS8K
1Q6ePrgT0/J96ZMObGrxrdUKEL3BCAOYmzr77Ar82s2InTfyuZQpMTLAduZM
uHadQgVX2qgzc132+YLsn/PeDNZtWZZJy/23Q0AkDehZ8L97IXCfaMJRS/W7
Be6Phijur36B97MG3M/DAhz3ygiQaoq3Ap7TPTkHVFLeIxEezcxBErDI6Ety
K6/TG4X/7+Nf4xGjbg==
                  "]}]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {75., 75.}, 
              PlotRange -> {{0., 75.}, {0., 75.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\Storage\\Amazon-Simple--Storage-Service-S3_light-\
bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-S3\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-5d569eea0ca2aa614a81538af6969700"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-S3", "ID" -> "connection-5d569eea0ca2aa614a81538af6969700"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940958409505605*^9, 3.9417121169210644`*^9, 
  3.941712253841633*^9, 3.9417140987349415`*^9, 3.9417349263089294`*^9},
 CellLabel->"Out[437]=",
 CellID->3776130,ExpressionUUID->"e46453be-6194-9b4c-b0c1-4f9badfce248"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ServiceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd076b3c1d075a1d077c0cb5fdcb384f"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            GraphicsBox[{
              Thickness[0.02857142857142857], 
              StyleBox[{
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                 0.015000999999999999`, 0.}, {35.000001, 0.}, {35.000001, 
                 35.}, {0.015000999999999999`, 35.}}}]}, {
                FaceForm[
                 RGBColor[
                 0.07317390409999991, 0.1342612392, 0.23227710329999995`, 
                  1.]]}, StripOnInput -> False], 
              StyleBox[{
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                  0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
                   3}}, {{1, 4, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1,
                   0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                  0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3,
                   3}, {1, 3, 3}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 
                  3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
                   3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                  3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                  1, 3, 3}, {1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxdVQ1MF2UcJnLlyEhL0YxMsWlF5B3/r/fuf4ePVFgJOjAaU3NIWkhQjRCJ
iPyYKEMyMCFKxRItHTZTMyiDSlLMzPqnU4ZGmkZEVICEaLbe934vd1u33W7P
3fv7fp7fTUh7PmlRcFBQ0FJ+i6fRNqu0MtSPR87lj/xgsoKvxu/OTi/TbTwi
RdvXHKZjytm7b1juUbArfM5Cf7VG5xIVeU7DG2OGPBGapeD3xLpxq44ywqUS
lzA6/6GCy7N/3vb2QkZ2hxXAM/+TR+MZjr7z8P7eswoO9t0zb10sw8y04Sna
JQVx+3uvnWAM30e0DhSGqFgT1vJtv4vhce6mabyDT219wQzxOfiC+Lzbwf/s
6A4knFexZSyvJI4hNvXidxFXVdwkDDMc3BNISBue5+BL107kdRQx1I9b1Zl4
WcVnOevHDKlgyGq/uqO7R0W8r3ha6jYG3pW2WV0q3qriVz1DYzUPdEHFdpFG
gGEBd9faomI0T2f2RA1/8zK//EilOC9r9L1K2rdoeOZpfhWpFJfp5CdbpXlU
6LiXm/elq1DEXPocvHfTn+8dKvHb+LogcRn4kR/bsFLF7XwsUUkG+a1TET20
NnxOjWHnP1c8j8nvLNrGqVZ+Dv5tkjq09kw07l/NG/yxQfMa6cKNyzc8WLLW
wB2CMNNcOM/HPH2B9J/lwtpM3rgRBjbzNGdUusjPRj/Kuwqmehpc8HI6DIvV
8eZzt678/D431V2u0fzS3LhSmHEg5zaN+r/HjWcP8IE0MQjWdoV7cGZAHGB4
YA9vRJGHeJjAMJmHCb/iYCv+Uq+Nj/dzYrZ6iX9pTPLGh195mEApw2uVPKFl
PuJjneT3MR/1s4dhyXrxgkm+asTzhxj0fc25Da9qKOBtOJcveRPQKO8aqQtV
p3ONDHeKRq3TZT4yj14dwm1eh9TJk34bW/7KHbxR0KTZTzz/heEuMeZ//agV
um1jeJebX3MbxPPT8ny6gSO5DdVjjzPcHBy5OqzKQIbsa+FULtAjhl33aaGz
foN0WzuoQxOClrmbGQJCp4+Z2CnG9TrDSx18wJkmmkRfVzAUdYqFYNpzsni+
3ZQ8YZIHJqw1xOeSL+y/MfEHfz1fH9SRSbqcJOP/ZFI+wxwsUHCnz8bW/PMd
HBrFCTLdh+sjBYFNqn+Kj/Lf6WCr3koHLxONyTPlnKX9TBk/3kf1HDJoHsU+
0kuUgZM8W/V9n9Sh38a0Z3QbD+5fSydl0l+cTntm0eB5zY5v6f+khiTe1c5u
r42p/w6eYPVT8r1Lw+Iy3uhRXtJfuI4VXLaZ7R7aHzN0/MDpkVLvoX21VSf7
Ug/lP9GPGt6WU095yP8Sqed+N+k0wsSLXI4FjW7EhPAFu8kknma78SkfS2S7
KfeAG4yXdVGJkfvaRXsxOcbeH4PYinsw2sZW3vOiaZ6IgbXmgqJpXqNjSLe7
5D7rMlEhypur4ouvuYD2mvQ/G6XiFcHvxSb1tVWhfcn5bPndouAWwZPDcr/l
KEgW71MNsk9WiI8DftrLXgV/8Tb4ip3/6f//r/8BWHlGyA==
                  "], CompressedData["
1:eJxdlA1IFEEUxw/RSDO9SEoqQ0Pkcltvds+9XVPpqVmZWphwSJmJZUaYmVip
ZCEpfpSoaElZSYmkGH5hIn1IRYVU2BFShsUlJSYqfVFmFjWzd/eOHDiO38yb
N//3tX5ph3ekO2k0mnj6Y/8FEwHCwnVBkLGfLQJFB+/k1g7zyOaZxPfNDTx8
nGv98uIQgTezJ6kFD8f7G1foC4l1P54HkFJuxZwlYPXHQ/flT9cftxEIKY9I
HdPyEJk6Zl4zQqAyc3yutUsHR8LdXjVpFSBv/RcUndPB+p6BY/0bFIgZLfBq
L7XxHger9tkOvkLdx9YrEG7ZXlnfrgP6urtTmwJdOQdqpn87uI2qSzMHIgcm
Vz34ruOQPXmqNIOD5a8HZxKbFIhQ4+CgbBndqFVgrLnhoW8nBz9ZGort/jiI
k2lg6Yo13ikO7ubWejsbFZhg+Vish3y27y7CTRpG4y+C50tP33ty1UXA+2o+
vQT0f4m+lqMT8P3zUWcyx0MF1KfyLgH1q/ZlDt6rTQrp2SIiX4vu/fYndx7X
iehPtW8R/3/vtoh6Amh1op6KqLeYyo9+KWI8HZtpQbYFAy1OuNuMAFMJfatL
JiU8H4pP0ybNSnj/My2b7GpE/89Zf6004vt+nbSAvBH1DT6jK86I+i9eoCvf
wUuo/AGTjOxi8uC7Cx38dyhvIqBGxn6xs72f7GzX57NzX6ilSoZNNE1DSQrU
eTubPCpt/mIVWMQCrZCByZwOU2xxyMDM89Yq4D9CC3pCxv7ezdotTML+V/MV
JOF8ODO9PhLOz0aa/jlXCedrq7sTV/ojGOfvK20/7XAwzudRmmZTu4NbaHrL
Rw3Iar175nGdAcLY3GTZ7IsMcGMVDfyUTV+WAT6wvq8m4FsymdCXYrDmpYPA
fVr+3kSbvYWAhq13gnVeLUZQ2LxnEzxX+z2d4H21f0wE/VdQc3MkwferabqS
9QT1qexJUL8X8/dIjzz/+/UPknMR1g==
                  "], CompressedData["
1:eJxTTMoPSmViYGBQAGIQ3TLVuTsnXc5BM6b/0NcMQweLLSfK9s2Xh/MPnFro
uq1YwUG7XezmuXJDhxPe5p2OCooOi1y3ff47xdDhDBgoOkiyhPHpbjJ0kLh5
7ntwspLD/vlS+nefGDqIgfiPlRyiUqzv++saOTBcrXipZqjskPD0gtLtSCMH
oKa579OVHc6CjOkxclgE1KbSpuwg3Ay0+aiRwwGQOUuUHeRbXwfu+GfkEJAk
EGG5Rdnhngpb41RnYzhfdJ37w6opCH591p6SyT+MHeYdUdhQpKHs8GH5MW9z
ThMHHx4m7fZpSg5eIFrMxMGB6/rigr+KDsfB/jKB2Jei6ODSnfP8t6aJgwzI
4ecVHECqb+qZODwDOvunHYIf0Ds9T4hZDs6H6JOB8PlMHFbMBjrgkxSEf87Y
4UONvWncLkkIv8/YQQHkLzlJh9znv1d+NELwOdYAbd5tBOdXAkONw8fI4U8d
yGOSkPj4Dgx/YPR8rpWChM8+QwdIfEpDwq/V0CFn4tsa+60y8PhEj28AARXV
nQ==
                  "], CompressedData["
1:eJxdVAtMFFcUJUiIWoKWz7Iu67IMw05bisysO8ygtp5atbEGUUsMtkqQqKAl
VltiKFhr/TdNRYtEEiT4BW1t0w9Vo6YlVQwiKhKCHzBijVaiFLQfYpS27763
nUl8yWRy3rx337nnnDeJ+e/NXRIaEhIynz303nx/znFPkw+z8kfnZHT48T+e
knenTSrz49r+la+MvBL8HvBjxBH324uf+PBB4Y6+Nf9q+JrBiQkKLktdj9e2
aOjJ+nzXirkKmrzfvl+4Q4N6Qw7/pFIR+7M19LHym75SkH37YPUZaKjtrz87
85iCSTfZxnE2Pr932tE/xtr451pX2o0wDeuWnyquqFKw0xk2L7JPFTzfUfB8
TkZDc6carONDXfUZxkBFeu6JGRGhPrF/sYpH7Zn5o68mi/oLVfzTUdLr+87G
d9uoERsfecg2zE7GiwvKf/mrUEUdyZGUDJJh4seq6KNHFu89KtZXvv5ZUb2M
6A2NLXubVJzwbLo/p0TGvSeHH7YzvgOsHWOGDPo8zaEJPk5Z8JuqYSmNu0lY
xNrq+lAT/FZJgk+NivB5kanf13gxlh1/M01FY3GFM6zTbWGyZfKPYyw8sGay
njshzuK/kfgVxArdulQ8XUuCRoOWZ2VqeJnWHYpCAefxDK7zW5j7u2o8GmqY
QeejsY/RG4oJoKSCjHHA/PS1vDvbA/Dywk5caGUjQgdtf2FBPKpWRG1ofFPH
PSabV02wcGcmBcVrYXq13PJCG84Un6rjLM9VIlK2OK5dNHRs28VWQMIDylWK
jijKwd8SFNrg0jGbyjUk4QD5NszGgfFs/GDjUUzV/oJ07KbYFCbhJEtNym/p
Is/tkvBBMyCzdCyfJKEs5ps3bpUayCcZMxIxoaF59U+1Bpw0vTPBwgFWtn66
x8I5ZF+/G8vIp0oDzbyfeNHHOgNupl6q3yX6eddAHunV7cSXPIeG0HdbHM6x
aq40A4co548c+IKV0z0GTMr7ege2MnkGow1s5/o4wGMzykAr5WgoVtR/zgj6
Fws22VEywgj6a+NGyqVs455SajwGp5mL5ZKNu5ksp7JtzNefszHnP8Dqk2+D
MYBORE2rPqnQ5zaDeYlFIk2kmhYfsnX1qyaaed8O0X+WKfr5KA7T+YFmMH9j
RL3dZvB8Fy4NvnX74EkTRfx+uPE73YvrwfMPeATfXhN/0n3M8VrYQ3zKJQtz
/9JkvMR5meJ+m8ni3ismyrnePuyhtuoM63/6lF3/zF/TLcz5det49v/7HzGs
bAo=
                  "]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYC4p6c579XXrRxyBdqPnBKUd3huLd5p+MBS4cE
9nOSgbOUHKJTrO/7+5o6mJ219rtoqODgtu3z3ysVhnD+nZ91WXtMNOD8P0Bu
ibCsg0s30GBNFQeFm+e+Bz/mcWh7HbhD7qiWQwHQuN7pXA5c1xcX2HppO6wo
sAUyeRyKMya+rfmv7bDgiMKGogx+h3qgMZNnaDtsKQJJyDv0Tc8TamZQd7CI
2+XJ06TpoHwbaLGNisMboLGtpw3h/GAg97WhKZzPrN0udvOdhcMtkDOWqkLs
ibdxsOh0THg6QcMhG2iNxBMbB2n9uypsjJoOB08tdN0WbAsJj4fqDujhAwAc
xYZW
                 "]], 
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJhIGYCYrdtn/9ekbBz2DT3/fJj3FoOfkkCEZZbbB2i
Uqzv+/NqO/RNzxNqbrB2EGo+cGphq5aD+M1z34ObrRyAqr3NPbUcvHiYtNvN
rBxA0q5mWg4zgMoPaFk5bCjKmPh2j5aDLMigfCsHljA+3U2y2g49Oc9/rzS0
cdC/q8LWOFXX4YF/L9AGe4c1MiCFOg78ukCXpNtD3aPjMOltjb3pPnuo+doO
RxWAJgfaO/y7UvFSrVDVYTNI3Wpbh+O7dvSybVByiN/lycOUbevgv35Kaoez
EsQfukD/fN15q6tWycGlG+gAT1sHoOXO3TzKDpox/Ye+rrB1SAOBZyoOdlzX
FxfU2jmAKFsuTQf08AEAsXqDZQ==
                 "]]}, {
                FaceForm[
                 RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, {
             ImageSize -> 32, ImageSize -> {35., 35.}, 
              PlotRange -> {{0., 35.}, {0., 35.}}, AspectRatio -> Automatic, 
              MetaInformation -> {
               "SourceFile" -> 
                "EPS Light\\_Group Icons\\AWS-Cloud-alt_light-bg.pdf"}}], 
            GridBox[{{
               TagBox["\"AWS-Braket\"", "SummaryItem"]}, {
               TagBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                    ServiceConnections`Private`authenticatedServiceQ[
                    "connection-bd076b3c1d075a1d077c0cb5fdcb384f"]], 
                   "Connected", "Not Connected"], StandardForm]], 
                "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ServiceObject[
  "AWS-Braket", "ID" -> "connection-bd076b3c1d075a1d077c0cb5fdcb384f"],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.940958409505605*^9, 3.9417121169210644`*^9, 
  3.941712253841633*^9, 3.9417140987349415`*^9, 3.9417349264352264`*^9},
 CellLabel->"Out[438]=",
 CellID->587661687,ExpressionUUID->"2e271a6f-370f-a24a-8705-30c9b61b3c39"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Devices", "Subsection",
 CellChangeTimes->{{3.940943168916897*^9, 3.9409431729784946`*^9}, 
   3.941649127756836*^9},
 CellID->119869412,ExpressionUUID->"e7d59f70-31d5-a84e-a7d2-c32644b8af0e"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Gather information about the various devices \
available through your service:", "Text"]], "Text",
 CellChangeTimes->{{3.940943874744959*^9, 3.940943920566181*^9}, {
  3.941649108001964*^9, 3.941649108121839*^9}},
 CellID->554452241,ExpressionUUID->"ec65521e-23ca-7d40-81ae-d93dd263f9d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"devices", "=", 
  RowBox[{
   RowBox[{"braket", "[", 
    RowBox[{"\"\<SearchDevices\>\"", ",", 
     RowBox[{"\"\<Filters\>\"", "\[Rule]", 
      RowBox[{"{", "}"}]}]}], "]"}], " ", "[", 
   RowBox[{"\"\<Devices\>\"", ",", "All"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.940943845558035*^9, 3.94094385795944*^9}, {
  3.941649082134258*^9, 3.941649092318495*^9}},
 CellLabel->"In[5]:=",
 CellID->68532194,ExpressionUUID->"872f2bcc-617a-884f-af11-788c29701f1f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
        "DeviceName" -> "Aria 1", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-11-27T00:32:29+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"h\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"rx\", \"ry\", \
\"rz\", \"cnot\", \"swap\", \"xx\", \"yy\", \"zz\"], \"supportedModifiers\": \
[], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9998}, \"2Q\": {\"mean\": 0.9883}, \"spam\
\": {\"mean\": 0.994}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 0.0003, \"reset\": 2e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
        "DeviceName" -> "Aquila", "ProviderName" -> "QuEra", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Monday\", \"windowStartHour\": \
\"01:00:00\", \"windowEndHour\": \"23:59:59\"}, {\"executionDay\": \
\"Tuesday\", \"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"12:00:00\
\"}, {\"executionDay\": \"Wednesday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"12:00:00\"}, {\"executionDay\": \"Wednesday\", \
\"windowStartHour\": \"18:00:00\", \"windowEndHour\": \"23:59:59\"}, \
{\"executionDay\": \"Thursday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"12:00:00\"}, {\"executionDay\": \"Friday\", \
\"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"23:59:59\"}, \
{\"executionDay\": \"Saturday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"23:59:59\"}, {\"executionDay\": \"Sunday\", \
\"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \
\"shotsRange\": [1, 1000], \"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\
\"}, \"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2024-11-25T12:00:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-08, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
400000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 6000000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}, \"rydbergLocal\": {\"detuningRange\": [-125000000.0, \
0.0], \"detuningSlewRateMax\": 2500000000000000.0, \"siteCoefficientRange\": \
[0.0, 1.0], \"numberLocalDetuningSitesMax\": 256, \"spacingRadialMin\": \
4e-06, \"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08}}, \"performance\": \
{\"lattice\": {\"positionErrorAbs\": 2.25e-07, \"sitePositionError\": 1e-07, \
\"atomPositionError\": 2e-07, \"fillingErrorTypical\": 0.008, \
\"fillingErrorWorst\": 0.05, \"vacancyErrorTypical\": 0.001, \
\"vacancyErrorWorst\": 0.005, \"atomLossProbabilityTypical\": 0.005, \
\"atomLossProbabilityWorst\": 0.01, \"atomCaptureProbabilityTypical\": 0.001, \
\"atomCaptureProbabilityWorst\": 0.002, \
\"atomDetectionErrorFalsePositiveTypical\": 0.001, \
\"atomDetectionErrorFalsePositiveWorst\": 0.005, \
\"atomDetectionErrorFalseNegativeTypical\": 0.001, \
\"atomDetectionErrorFalseNegativeWorst\": 0.005}, \"rydberg\": \
{\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": 0.03, \
\"rabiFrequencyGlobalErrorRel\": 0.02, \"rabiFrequencyInhomogeneityRel\": \
0.02, \"groundDetectionError\": 0.05, \"rydbergDetectionError\": 0.1, \
\"groundPrepError\": 0.01, \"rydbergPrepErrorBest\": 0.05, \
\"rydbergPrepErrorWorst\": 0.07, \"T1Single\": 7.5e-05, \"T1Ensemble\": \
7.5e-05, \"T2StarSingle\": 5e-06, \"T2StarEnsemble\": 4.75e-06, \
\"T2EchoSingle\": 8e-06, \"T2EchoEnsemble\": 7e-06, \"T2RabiSingle\": 8e-06, \
\"T2RabiEnsemble\": 7e-06, \"T2BlockadedRabiSingle\": 8e-06, \
\"T2BlockadedRabiEnsemble\": 7e-06, \"detuningError\": 1000000.0, \
\"detuningInhomogeneity\": 1000000.0, \"rabiAmplitudeRampCorrection\": \
[{\"rampTime\": 5e-08, \"rabiCorrection\": 0.92}, {\"rampTime\": 7.5e-08, \
\"rabiCorrection\": 0.97}, {\"rampTime\": 1e-07, \"rabiCorrection\": 1.0}]}, \
\"rydbergLocal\": {\"detuningErrorRms\": 0.02, \"siteCoefficientErrorRms\": \
0.1, \"errorRateIncoherentBright\": 36000.0, \"errorRateIncoherentDark\": \
720.0, \"crosstalk\": 0.02}}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
        "DeviceName" -> "Harmony", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "RETIRED", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/harmony\"}, \"deviceLocation\": \
\"Maryland, USA\", \"updatedAt\": \"2024-08-14T11:00:05+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedModifiers\": [], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"verbatim\"], \"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9971}, \"2Q\": {\"mean\": 0.9464}, \"spam\
\": {\"mean\": 0.9932}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}, \
\"errorMitigation\": null}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
        "DeviceName" -> "TN1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-2", 
        "DeviceName" -> "Aria 2", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "OFFLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-08-24T00:33:02+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \
\"v\", \"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9995}, \"2Q\": {\"mean\": 0.9735}, \"spam\
\": {\"mean\": 0.9933}}, \"timing\": {\"T1\": 10.0, \"T2\": 1.5, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 5e-05, \"reset\": 1.5e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
        "DeviceName" -> "SV1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_noise_amplitude_damping\", \
\"braket_noise_bit_flip\", \"braket_noise_depolarizing\", \
\"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"AdjointGradient\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 0, \
\"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
        "DeviceName" -> "Borealis", "ProviderName" -> "Xanadu", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "RETIRED", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-06-02T14:51:41.695639+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [-1.648, 0.57, 2.355], \"schmidtNumber\": 1.158, \
\"commonEfficiency\": 0.351, \"squeezingParametersMean\": {\"low\": 0.677, \
\"high\": 1.182, \"medium\": 1.006}, \"relativeChannelEfficiencies\": [0.924, \
0.939, 0.919, 1.0, 0.972, 0.929, 0.901, 0.968, 0.956, 0.968, 0.977, 0.997, \
0.962, 0.977, 0.957, 0.898], \"loopEfficiencies\": [0.884, 0.883, \
0.796]}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
        "DeviceName" -> "dm1", "ProviderName" -> "Amazon Braket", 
        "DeviceType" -> "SIMULATOR", "DeviceStatus" -> "ONLINE", 
        "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}"|>, <|
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Forte-1", 
        "DeviceName" -> "Forte 1", "ProviderName" -> "IonQ", "DeviceType" -> 
        "QPU", "DeviceStatus" -> "ONLINE", "DeviceCapabilities" -> 
        "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.08, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/forte\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-11-27T00:32:29+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"h\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"rx\", \"ry\", \
\"rz\", \"cnot\", \"swap\", \"xx\", \"yy\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 36, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"ZZ\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9998}, \"2Q\": {\"mean\": 0.9834}, \"spam\
\": {\"mean\": 0.9952}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.00013, \"2Q\": 0.00097, \"readout\": 0.00015, \"reset\": 5e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}"|>}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]], 
         TypeSystem`Atom[String]}], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceArn"} -> 
        1, {All, "DeviceName"} -> 1, {All, "ProviderName"} -> 
        1, {All, "DeviceType"} -> 1, {All, "DeviceStatus"} -> 
        1, {All, "DeviceCapabilities"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceArn" -> TypeSystem`PackageScope`AtomShape[560.], 
            "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "ProviderName" -> TypeSystem`PackageScope`AtomShape[136.5], 
            "DeviceType" -> TypeSystem`PackageScope`AtomShape[94.5], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5], 
            "DeviceCapabilities" -> 
            TypeSystem`PackageScope`AtomShape[560.]|>], 
          DirectedInfinity[1], 6, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
         "DeviceStatus", "DeviceCapabilities"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["Amazon Braket", "IonQ", "QuEra", "Xanadu"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["QPU", "SIMULATOR"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]], 
         TypeSystem`Atom[String]}], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 6, "DataRowCount" -> 9, "DataColumnCount" -> 
     6, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceArn"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceArn"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "ProviderName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "ProviderName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceType"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceType"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceCapabilities"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceCapabilities"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aria 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-11-27T00:32:29+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"h\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"rx\", \"ry\", \
\"rz\", \"cnot\", \"swap\", \"xx\", \"yy\", \"zz\"], \"supportedModifiers\": \
[], \"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9998}, \"2Q\": {\"mean\": 0.9883}, \"spam\
\": {\"mean\": 0.994}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 0.0003, \"reset\": 2e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/quera/Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QuEra", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Monday\", \"windowStartHour\": \
\"01:00:00\", \"windowEndHour\": \"23:59:59\"}, {\"executionDay\": \
\"Tuesday\", \"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"12:00:00\
\"}, {\"executionDay\": \"Wednesday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"12:00:00\"}, {\"executionDay\": \"Wednesday\", \
\"windowStartHour\": \"18:00:00\", \"windowEndHour\": \"23:59:59\"}, \
{\"executionDay\": \"Thursday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"12:00:00\"}, {\"executionDay\": \"Friday\", \
\"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"23:59:59\"}, \
{\"executionDay\": \"Saturday\", \"windowStartHour\": \"00:00:00\", \
\"windowEndHour\": \"23:59:59\"}, {\"executionDay\": \"Sunday\", \
\"windowStartHour\": \"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \
\"shotsRange\": [1, 1000], \"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\
\"}, \"deviceDocumentation\": {\"imageUrl\": \
\"https://a.b.cdn.console.awsstatic.com/\
59534b58c709fc239521ef866db9ea3f1aba73ad3ebcf60c23914ad8c5c5c878/\
a6cfc6fca26cf1c2e1c6.png\", \"summary\": \"Analog quantum processor based on \
neutral atom arrays\", \"externalDocumentationUrl\": \
\"https://www.quera.com/aquila\"}, \"deviceLocation\": \"Boston, USA\", \
\"updatedAt\": \"2024-11-25T12:00:00+00:00\"}, \"action\": \
{\"braket.ir.ahs.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.ahs.program\"}}, \"deviceParameters\": {}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.quera.quera_ahs_paradigm_properties\", \"version\": \
\"1\"}, \"qubitCount\": 256, \"lattice\": {\"area\": {\"width\": 7.5e-05, \
\"height\": 7.6e-05}, \"geometry\": {\"spacingRadialMin\": 4e-06, \
\"spacingVerticalMin\": 4e-06, \"positionResolution\": 1e-08, \
\"numberSitesMax\": 256}}, \"rydberg\": {\"c6Coefficient\": 5.42e-24, \
\"rydbergGlobal\": {\"rabiFrequencyRange\": [0.0, 15800000.0], \
\"rabiFrequencyResolution\": 400.0, \"rabiFrequencySlewRateMax\": \
400000000000000.0, \"detuningRange\": [-125000000.0, 125000000.0], \
\"detuningResolution\": 0.2, \"detuningSlewRateMax\": 6000000000000000.0, \
\"phaseRange\": [-99.0, 99.0], \"phaseResolution\": 5e-07, \
\"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08, \"timeMin\": 0.0, \
\"timeMax\": 4e-06}, \"rydbergLocal\": {\"detuningRange\": [-125000000.0, \
0.0], \"detuningSlewRateMax\": 2500000000000000.0, \"siteCoefficientRange\": \
[0.0, 1.0], \"numberLocalDetuningSitesMax\": 256, \"spacingRadialMin\": \
4e-06, \"timeResolution\": 1e-09, \"timeDeltaMin\": 5e-08}}, \"performance\": \
{\"lattice\": {\"positionErrorAbs\": 2.25e-07, \"sitePositionError\": 1e-07, \
\"atomPositionError\": 2e-07, \"fillingErrorTypical\": 0.008, \
\"fillingErrorWorst\": 0.05, \"vacancyErrorTypical\": 0.001, \
\"vacancyErrorWorst\": 0.005, \"atomLossProbabilityTypical\": 0.005, \
\"atomLossProbabilityWorst\": 0.01, \"atomCaptureProbabilityTypical\": 0.001, \
\"atomCaptureProbabilityWorst\": 0.002, \
\"atomDetectionErrorFalsePositiveTypical\": 0.001, \
\"atomDetectionErrorFalsePositiveWorst\": 0.005, \
\"atomDetectionErrorFalseNegativeTypical\": 0.001, \
\"atomDetectionErrorFalseNegativeWorst\": 0.005}, \"rydberg\": \
{\"rydbergGlobal\": {\"rabiFrequencyErrorRel\": 0.03, \
\"rabiFrequencyGlobalErrorRel\": 0.02, \"rabiFrequencyInhomogeneityRel\": \
0.02, \"groundDetectionError\": 0.05, \"rydbergDetectionError\": 0.1, \
\"groundPrepError\": 0.01, \"rydbergPrepErrorBest\": 0.05, \
\"rydbergPrepErrorWorst\": 0.07, \"T1Single\": 7.5e-05, \"T1Ensemble\": \
7.5e-05, \"T2StarSingle\": 5e-06, \"T2StarEnsemble\": 4.75e-06, \
\"T2EchoSingle\": 8e-06, \"T2EchoEnsemble\": 7e-06, \"T2RabiSingle\": 8e-06, \
\"T2RabiEnsemble\": 7e-06, \"T2BlockadedRabiSingle\": 8e-06, \
\"T2BlockadedRabiEnsemble\": 7e-06, \"detuningError\": 1000000.0, \
\"detuningInhomogeneity\": 1000000.0, \"rabiAmplitudeRampCorrection\": \
[{\"rampTime\": 5e-08, \"rabiCorrection\": 0.92}, {\"rampTime\": 7.5e-08, \
\"rabiCorrection\": 0.97}, {\"rampTime\": 1e-07, \"rabiCorrection\": 1.0}]}, \
\"rydbergLocal\": {\"detuningErrorRms\": 0.02, \"siteCoefficientErrorRms\": \
0.1, \"errorRateIncoherentBright\": 36000.0, \"errorRateIncoherentDark\": \
720.0, \"crosstalk\": 0.02}}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 10000], \
\"deviceCost\": {\"price\": 0.01, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/harmony\"}, \"deviceLocation\": \
\"Maryland, USA\", \"updatedAt\": \"2024-08-14T11:00:05+00:00\"}, \"action\": \
{\"braket.ir.jaqcd.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.jaqcd.program\", \"supportedOperations\": [\"x\", \"y\", \"z\", \
\"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \
\"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}], \
\"disabledQubitRewiringSupported\": false}, \"braket.ir.openqasm.program\": {\
\"version\": [\"1\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"x\", \"y\", \"z\", \"rx\", \"ry\", \"rz\", \"h\", \
\"cnot\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"xx\", \"yy\", \
\"zz\", \"swap\"], \"supportedModifiers\": [], \"supportedPragmas\": \
[\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"verbatim\"], \"forbiddenPragmas\": [\"braket_unitary_matrix\", \
\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"maximumQubitArrays\": 1, \"maximumClassicalArrays\": 1, \
\"forbiddenArrayOperations\": [\"concatenation\", \"negativeIndex\", \
\"range\", \"rangeWithStep\", \"slicing\", \"selection\"], \
\"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 10000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 10000}, {\"name\": \"Variance\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 10000}, \
{\"name\": \"Probability\", \"minShots\": 1, \"maxShots\": 10000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 11, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9971}, \"2Q\": {\"mean\": 0.9464}, \"spam\
\": {\"mean\": 0.9932}}, \"timing\": {\"T1\": 10000.0, \"T2\": 0.2, \"1Q\": \
1e-05, \"2Q\": 0.0002, \"readout\": 0.00013, \"reset\": 2e-05}, \
\"errorMitigation\": null}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/tn1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [1, 1000], \
\"deviceCost\": {\"price\": 0.275, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket tensor network simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": [\"cnot\
\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \
\"cy\", \"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \
\"rx\", \"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \
\"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\"], \
\"supportedResultTypes\": [{\"name\": \"Sample\", \"observables\": [\"x\", \
\"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"cnot\", \"cphaseshift\", \"cphaseshift00\", \
\"cphaseshift01\", \"cphaseshift10\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \"y\", \"yy\", \
\"z\", \"zz\"], \"supportedPragmas\": [\"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \"braket_result_type_density_matrix\", \
\"braket_noise_amplitude_damping\", \"braket_noise_bit_flip\", \
\"braket_noise_depolarizing\", \"braket_noise_kraus\", \
\"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 1000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 1000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 1000}]}}, \
\"deviceParameters\": {\"title\": \"GateModelSimulatorDeviceParameters\", \
\"description\": \"This defines the parameters common to all the gatemodel \
devices.\\n\\nAttributes:\\n    paradigmParameters: Parameters that are \
common to gatemodel paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 50}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Aria 2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.03, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/aria\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-08-24T00:33:02+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"rx\", \"ry\", \"rz\", \"h\", \"cnot\", \"s\", \"si\", \"t\", \"ti\", \
\"v\", \"vi\", \"xx\", \"yy\", \"zz\", \"swap\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 25, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"MS\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9995}, \"2Q\": {\"mean\": 0.9735}, \"spam\
\": {\"mean\": 0.9933}}, \"timing\": {\"T1\": 10.0, \"T2\": 1.5, \"1Q\": \
0.000135, \"2Q\": 0.0006, \"readout\": 5e-05, \"reset\": 1.5e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/sv1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket state vector simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"ccnot\", \"cnot\", \"cphaseshift\", \"cphaseshift00\", \"cphaseshift01\", \
\"cphaseshift10\", \"cswap\", \"cy\", \"cz\", \"ecr\", \"h\", \"i\", \
\"iswap\", \"pswap\", \"phaseshift\", \"rx\", \"ry\", \"rz\", \"s\", \"si\", \
\"swap\", \"t\", \"ti\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \"xy\", \
\"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \"Sample\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}]}, \"braket.ir.openqasm.program\": \
{\"version\": [\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"pswap\", \"phaseshift\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_unitary_matrix\", \"braket_basis_rotation\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_amplitude\", \"braket_result_type_adjoint_gradient\"], \
\"forbiddenPragmas\": [\"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_noise_amplitude_damping\", \
\"braket_noise_bit_flip\", \"braket_noise_depolarizing\", \
\"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Probability\", \
\"minShots\": 1, \"maxShots\": 100000}, {\"name\": \"Amplitude\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"AdjointGradient\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 0, \
\"maxShots\": 0}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 34}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1::device/qpu/xanadu/Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Xanadu", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"15:00:00\", \"windowEndHour\": \"17:00:00\"}], \"shotsRange\": [1, \
1000000], \"deviceCost\": {\"price\": 0.0002, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/re19/Braket/xanadu.\
48c14affd35d042cd2ad42be220bf1dcdeed2f7f.png\", \"summary\": \"Gaussian Boson \
Sampling on a programmable photonic processor\", \
\"externalDocumentationUrl\": \"https://xanadu.ai/products/borealis\"}, \
\"deviceLocation\": \"Ontario, Canada\", \"updatedAt\": \
\"2023-06-02T14:51:41.695639+00:00\"}, \"action\": \
{\"braket.ir.blackbird.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.blackbird.program\", \"supportedOperations\": [\"s\", \"r0\", \
\"r1\", \"r2\", \"bs0\", \"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \
\"loop2_phase\"], \"supportedResultTypes\": []}}, \"deviceParameters\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_parameters\", \"version\": \
\"1\"}}, \"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_device_capabilities\", \"version\": \
\"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.continuous_variable_qpu_paradigm_properties\", \
\"version\": \"1\"}, \"modes\": {\"spatial\": 1.0, \"concurrent\": 44.0, \
\"temporal_max\": 331.0}, \"layout\": \"name template_borealis\\nversion \
1.0\\ntarget borealis (shots=1)\\ntype tdm (temporal_modes=331, \
copies=1)\\n\\nfloat array p0[1, 331] =\\n    {s}\\nfloat array p1[1, 331] \
=\\n    {r0}\\nfloat array p2[1, 331] =\\n    {bs0}\\nfloat array p3[1, 331] \
=\\n    {loop0_phase}\\nfloat array p4[1, 331] =\\n    {r1}\\nfloat array \
p5[1, 331] =\\n    {bs1}\\nfloat array p6[1, 331] =\\n    \
{loop1_phase}\\nfloat array p7[1, 331] =\\n    {r2}\\nfloat array p8[1, 331] \
=\\n    {bs2}\\nfloat array p9[1, 331] =\\n    {loop2_phase}\\n\\nSgate({s}, \
0.0) | 43\\nRgate({r0}) | 43\\nBSgate({bs0}, 1.5707963267948966) | [42, \
43]\\nRgate({loop0_phase}) | 43\\nRgate({r1}) | 42\\nBSgate({bs1}, \
1.5707963267948966) | [36, 42]\\nRgate({loop1_phase}) | 42\\nRgate({r2}) | 36\
\\nBSgate({bs2}, 1.5707963267948966) | [0, 36]\\nRgate({loop2_phase}) | \
36\\nMeasureFock() | 0\", \"compiler\": [\"borealis\"], \
\"supportedLanguages\": [\"blackbird:1.0\"], \"compilerDefault\": \
\"borealis\", \"nativeGateSet\": [\"s\", \"r0\", \"r1\", \"r2\", \"bs0\", \
\"bs1\", \"bs2\", \"loop0_phase\", \"loop1_phase\", \"loop2_phase\"], \
\"gateParameters\": {\"s\": [[0.0, 2.0]], \"r0\": [[-1.5707963267948966, \
1.5707963267948966]], \"r1\": [[-1.5707963267948966, 1.5707963267948966]], \
\"r2\": [[-1.5707963267948966, 1.5707963267948966]], \"bs0\": [[0.0, \
1.5707963267948966]], \"bs1\": [[0.0, 1.5707963267948966]], \"bs2\": [[0.0, \
1.5707963267948966]], \"loop0_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop1_phase\": [[-3.141592653589793, \
3.141592653589793]], \"loop2_phase\": [[-3.141592653589793, \
3.141592653589793]]}, \"target\": \"borealis\"}, \"provider\": \
{\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.xanadu.xanadu_provider_properties\", \"version\": \
\"1\"}, \"loopPhases\": [-1.648, 0.57, 2.355], \"schmidtNumber\": 1.158, \
\"commonEfficiency\": 0.351, \"squeezingParametersMean\": {\"low\": 0.677, \
\"high\": 1.182, \"medium\": 1.006}, \"relativeChannelEfficiencies\": [0.924, \
0.939, 0.919, 1.0, 0.972, 0.929, 0.901, 0.968, 0.956, 0.968, 0.977, 0.997, \
0.962, 0.977, 0.957, 0.898], \"loopEfficiencies\": [0.884, 0.883, 0.796]}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:::device/quantum-simulator/amazon/dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Amazon Braket", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["SIMULATOR", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Everyday\", \"windowStartHour\": \
\"00:00:00\", \"windowEndHour\": \"23:59:59\"}], \"shotsRange\": [0, 100000], \
\"deviceCost\": {\"price\": 0.075, \"unit\": \"minute\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"https://d1.awsstatic.com/about-aws/whats-new/lpm-assets/services/SiteMerch_\
Qx_Editorial-reInvent.d5a91c3e3fa666a2c33b8a912c21d1cb4ef270fb.png\", \
\"summary\": \"Amazon Braket density matrix simulator\", \
\"externalDocumentationUrl\": \
\"https://docs.aws.amazon.com/braket/latest/developerguide/braket-devices.\
html#choose-a-simulator\"}, \"updatedAt\": \"2022-06-22T10:18:00\"}, \"action\
\": {\"braket.ir.jaqcd.program\": {\"version\": [\"1.0\", \"1.1\"], \
\"actionType\": \"braket.ir.jaqcd.program\", \"supportedOperations\": \
[\"amplitude_damping\", \"bit_flip\", \"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"depolarizing\", \"ecr\", \"pauli_channel\", \
\"generalized_amplitude_damping\", \"h\", \"i\", \"iswap\", \"kraus\", \
\"phase_flip\", \"phase_damping\", \"phaseshift\", \"pswap\", \"rx\", \"ry\", \
\"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"two_qubit_dephasing\", \
\"two_qubit_depolarizing\", \"unitary\", \"v\", \"vi\", \"x\", \"xx\", \
\"xy\", \"y\", \"yy\", \"z\", \"zz\"], \"supportedResultTypes\": [{\"name\": \
\"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}, \"braket.ir.openqasm.program\": {\"version\": \
[\"1.0\"], \"actionType\": \"braket.ir.openqasm.program\", \
\"supportedOperations\": [\"ccnot\", \"cnot\", \"cphaseshift\", \
\"cphaseshift00\", \"cphaseshift01\", \"cphaseshift10\", \"cswap\", \"cy\", \
\"cz\", \"ecr\", \"h\", \"i\", \"iswap\", \"phaseshift\", \"pswap\", \"rx\", \
\"ry\", \"rz\", \"s\", \"si\", \"swap\", \"t\", \"ti\", \"v\", \"vi\", \"x\", \
\"xx\", \"xy\", \"y\", \"yy\", \"z\", \"zz\", \"gpi\", \"gpi2\", \"ms\"], \
\"supportedPragmas\": [\"braket_noise_bit_flip\", \"braket_noise_depolarizing\
\", \"braket_noise_kraus\", \"braket_noise_pauli_channel\", \
\"braket_noise_generalized_amplitude_damping\", \
\"braket_noise_amplitude_damping\", \"braket_noise_phase_flip\", \
\"braket_noise_phase_damping\", \"braket_noise_two_qubit_dephasing\", \
\"braket_noise_two_qubit_depolarizing\", \"braket_unitary_matrix\", \
\"braket_result_type_sample\", \"braket_result_type_expectation\", \
\"braket_result_type_variance\", \"braket_result_type_probability\", \
\"braket_result_type_density_matrix\"], \"forbiddenPragmas\": \
[\"braket_result_type_state_vector\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": \
false, \"requiresContiguousQubitIndices\": true, \"supportsPartialVerbatimBox\
\": true, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 1, \"maxShots\": 100000}, {\"name\": \
\"Expectation\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \
\"hermitian\"], \"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"Variance\
\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\", \"hermitian\"], \
\"minShots\": 0, \"maxShots\": 100000}, {\"name\": \"DensityMatrix\", \
\"minShots\": 0, \"maxShots\": 0}, {\"name\": \"Probability\", \"minShots\": \
1, \"maxShots\": 100000}]}}, \"deviceParameters\": {\"title\": \
\"GateModelSimulatorDeviceParameters\", \"description\": \"This defines the \
parameters common to all the gatemodel devices.\\n\\nAttributes:\\n    \
paradigmParameters: Parameters that are common to gatemodel \
paradigm\\n\\nExamples:\\n    >>> import json\\n    >>> input_json = {\\n    \
...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\"name\\\": \
\\\"braket.device_schema.simulators.gate_model_simulator_device_parameters\\\"\
,\\n    ...        \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"paradigmParameters\\\": {\\\"braketSchemaHeader\\\": {\\n    ...        \
\\\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...   \
     \\\"version\\\": \\\"1\\\",\\n    ...    },\\\"qubitCount\\\": 1},\\n    \
... }\\n    >>> \
GateModelSimulatorDeviceParameters.parse_raw_schema(json.dumps(input_json))\",\
 \"type\": \"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"This defines the parameters \
common to all the gatemodel devices.\\n\\nAttributes:\\n    qubitCount: \
number of qubits for a device\\n\\nExamples:\\n    >>> import json\\n    >>> \
input_json = {\\n    ...    \\\"braketSchemaHeader\\\": {\\n    ...        \\\
\"name\\\": \\\"braket.device_schema.gate_model_parameters\\\",\\n    ...     \
   \\\"version\\\": \\\"1\\\",\\n    ...    },\\n    ...    \
\\\"qubitCount\\\": 1\\n    ... }\\n    >>> \
GateModelParameters.parse_raw_schema(json.dumps(input_json))\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"const\": {\"name\": \
\"braket.device_schema.gate_model_parameters\", \"version\": \"1\"}}, \
\"qubitCount\": {\"title\": \"Qubitcount\", \"exclusiveMinimum\": 0, \
\"type\": \"integer\"}}, \"required\": [\"qubitCount\"]}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_device_capabilities\", \
\"version\": \"1\"}, \"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.simulators.gate_model_simulator_paradigm_properties\", \
\"version\": \"1\"}, \"qubitCount\": 17}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Forte-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Forte 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{136.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{94.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "{\"service\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.device_service_properties\", \"version\": \"1\"}, \
\"executionWindows\": [{\"executionDay\": \"Weekdays\", \"windowStartHour\": \
\"12:00:00\", \"windowEndHour\": \"03:00:00\"}], \"shotsRange\": [1, 5000], \
\"deviceCost\": {\"price\": 0.08, \"unit\": \"shot\"}, \
\"deviceDocumentation\": {\"imageUrl\": \
\"http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png\", \"summary\": \"Universal \
gate-model QPU based on trapped ions\", \"externalDocumentationUrl\": \
\"https://ionq.com/quantum-systems/forte\"}, \"deviceLocation\": \"Maryland, \
USA\", \"updatedAt\": \"2024-11-27T00:32:29+00:00\"}, \"action\": \
{\"braket.ir.openqasm.program\": {\"version\": [\"1\"], \"actionType\": \
\"braket.ir.openqasm.program\", \"supportedOperations\": [\"x\", \"y\", \
\"z\", \"h\", \"s\", \"si\", \"t\", \"ti\", \"v\", \"vi\", \"rx\", \"ry\", \
\"rz\", \"cnot\", \"swap\", \"xx\", \"yy\"], \"supportedModifiers\": [], \
\"supportedPragmas\": [\"braket_result_type_sample\", \
\"braket_result_type_expectation\", \"braket_result_type_variance\", \
\"braket_result_type_probability\", \"verbatim\"], \"forbiddenPragmas\": \
[\"braket_unitary_matrix\", \"braket_result_type_state_vector\", \
\"braket_result_type_density_matrix\", \"braket_result_type_amplitude\", \
\"braket_result_type_adjoint_gradient\"], \"maximumQubitArrays\": 1, \
\"maximumClassicalArrays\": 1, \"forbiddenArrayOperations\": [\"concatenation\
\", \"negativeIndex\", \"range\", \"rangeWithStep\", \"slicing\", \"selection\
\"], \"requiresAllQubitsMeasurement\": true, \"supportPhysicalQubits\": true, \
\"requiresContiguousQubitIndices\": false, \"supportsPartialVerbatimBox\": \
false, \"supportsUnassignedMeasurements\": true, \
\"disabledQubitRewiringSupported\": false, \"supportedResultTypes\": [{\"name\
\": \"Sample\", \"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \
\"minShots\": 1, \"maxShots\": 5000}, {\"name\": \"Expectation\", \
\"observables\": [\"x\", \"y\", \"z\", \"h\", \"i\"], \"minShots\": 1, \
\"maxShots\": 5000}, {\"name\": \"Variance\", \"observables\": [\"x\", \"y\", \
\"z\", \"h\", \"i\"], \"minShots\": 1, \"maxShots\": 5000}, {\"name\": \
\"Probability\", \"minShots\": 1, \"maxShots\": 5000}]}}, \
\"deviceParameters\": {\"title\": \"IonqDeviceParameters\", \"description\": \
\"This defines the parameters common to all the IonQ devices.\", \"type\": \
\"object\", \"properties\": {\"braketSchemaHeader\": {\"title\": \
\"Braketschemaheader\", \"default\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_parameters\", \"version\": \"1\"}, \
\"const\": {\"name\": \"braket.device_schema.ionq.ionq_device_parameters\", \
\"version\": \"1\"}}, \"paradigmParameters\": {\"$ref\": \
\"#/definitions/GateModelParameters\"}, \"errorMitigation\": {\"title\": \
\"Errormitigation\", \"type\": \"array\", \"items\": {\"$ref\": \
\"#/definitions/ErrorMitigationScheme\"}}}, \"required\": \
[\"paradigmParameters\"], \"definitions\": {\"GateModelParameters\": {\"title\
\": \"GateModelParameters\", \"description\": \"Defines parameters common to \
all gate model devices.\", \"type\": \"object\", \"properties\": \
{\"braketSchemaHeader\": {\"title\": \"Braketschemaheader\", \"default\": \
{\"name\": \"braket.device_schema.gate_model_parameters\", \"version\": \
\"1\"}, \"const\": {\"name\": \"braket.device_schema.gate_model_parameters\", \
\"version\": \"1\"}}, \"qubitCount\": {\"title\": \"Qubitcount\", \
\"minimum\": 0, \"type\": \"integer\"}, \"disableQubitRewiring\": {\"title\": \
\"Disablequbitrewiring\", \"default\": false, \"type\": \"boolean\"}}, \
\"required\": [\"qubitCount\"]}, \"ErrorMitigationScheme\": {\"title\": \
\"ErrorMitigationScheme\", \"description\": \"Base class for an error \
mitigation scheme.\", \"type\": \"object\", \"properties\": {}}}}, \
\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_device_capabilities\", \"version\": \"1\"}, \
\"paradigm\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.gate_model_qpu_paradigm_properties\", \"version\": \"1\
\"}, \"connectivity\": {\"fullyConnected\": true, \"connectivityGraph\": {}}, \
\"qubitCount\": 36, \"nativeGateSet\": [\"GPI\", \"GPI2\", \"ZZ\"]}, \
\"provider\": {\"braketSchemaHeader\": {\"name\": \
\"braket.device_schema.ionq.ionq_provider_properties\", \"version\": \"1\"}, \
\"fidelity\": {\"1Q\": {\"mean\": 0.9998}, \"2Q\": {\"mean\": 0.9834}, \"spam\
\": {\"mean\": 0.9952}}, \"timing\": {\"T1\": 100.0, \"T2\": 1.0, \"1Q\": \
0.00013, \"2Q\": 0.00097, \"readout\": 0.00015, \"reset\": 5e-05}, \
\"errorMitigation\": \
{\"braket.device_schema.error_mitigation.debias.Debias\": {\"minimumShots\": \
2500}}}}", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1566.6, {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1566.6, {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9409438504201775`*^9, 3.9409438598335*^9}, 
   3.941649093144228*^9, 3.94171213431913*^9, 3.941712258299513*^9, 
   3.9417141049810905`*^9},
 CellLabel->"Out[5]=",
 CellID->394851175,ExpressionUUID->"056224fb-a7f7-b242-b6c8-2b7d2ee1defb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Verify the device status of each QPU:", "Text",
 CellChangeTimes->{{3.940943944071165*^9, 3.9409440050810604`*^9}, 
   3.940944179320089*^9, {3.941649307471769*^9, 3.941649314124603*^9}},
 CellID->123286018,ExpressionUUID->"1cfbcf65-f105-c94d-89d8-e958e6aeed45"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"devices", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{"\"\<DeviceName\>\"", ",", "\"\<DeviceStatus\>\""}], "}"}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.940943870790924*^9, 3.940943872221176*^9}, {
   3.9409439358819847`*^9, 3.9409439369972343`*^9}, 3.941649260892933*^9, {
   3.941649316581239*^9, 3.941649351471266*^9}},
 CellLabel->"In[6]:=",
 CellID->384727762,ExpressionUUID->"ab82ce09-6c22-c24f-8b3b-51c7b0bb7776"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "DeviceName" -> "Aria 1", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Aquila", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Harmony", "DeviceStatus" -> "RETIRED"|>, <|
       "DeviceName" -> "TN1", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Aria 2", "DeviceStatus" -> "OFFLINE"|>, <|
       "DeviceName" -> "SV1", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Borealis", "DeviceStatus" -> "RETIRED"|>, <|
       "DeviceName" -> "dm1", "DeviceStatus" -> "ONLINE"|>, <|
       "DeviceName" -> "Forte 1", "DeviceStatus" -> "ONLINE"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceName"} -> 
        1, {All, "DeviceStatus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5]|>], 
          DirectedInfinity[1], 2, {All}]], 9, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DeviceName", "DeviceStatus"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]]}], 9], 
     "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "DeviceName"} -> 
        1, {All, "DeviceStatus"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "DeviceName" -> 
            TypeSystem`PackageScope`AtomShape[89.60000000000001], 
            "DeviceStatus" -> TypeSystem`PackageScope`AtomShape[73.5]|>], 
          DirectedInfinity[1], 2, {All}]], 9, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"DeviceName", "DeviceStatus"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["OFFLINE", "ONLINE", "RETIRED"]]}], 9], 
     "Path" -> {}, "DisplayedRowCount" -> 9, "DisplayedColumnCount" -> 2, 
     "DataRowCount" -> 9, "DataColumnCount" -> 2, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceName"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceName"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "DeviceStatus"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "DeviceStatus"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Aria 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Aquila", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Harmony", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["TN1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Aria 2", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OFFLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SV1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Borealis", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["RETIRED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["dm1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Forte 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{73.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{183.60000000000002`, {140.8544921875, 146.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{183.60000000000002`, {140.8544921875, 146.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.9409439411456795`*^9, {3.940950593431942*^9, 3.940950603830755*^9}, 
   3.940950753216671*^9, 3.9409522601602783`*^9, {3.94164932017621*^9, 
   3.941649352028919*^9}, 3.94171410668841*^9},
 CellLabel->"Out[6]=",
 CellID->171481526,ExpressionUUID->"acff9ce2-c4c7-0441-8997-3792c3badc0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["QPU Properties", "Subsubsection",
 CellChangeTimes->{{3.940944199431055*^9, 3.94094420021369*^9}, {
   3.9409442434325886`*^9, 3.940944252905041*^9}, {3.940944339367897*^9, 
   3.94094434904612*^9}, 3.9409444426230087`*^9},
 CellID->465616939,ExpressionUUID->"cf5ebe1f-57a8-874c-b87d-3ffbcdb189fb"],

Cell[CellGroupData[{

Cell["Check the specifications of a specific QPU device:", "Text",
 CellChangeTimes->{{3.940945261413174*^9, 3.940945306281908*^9}, {
  3.941649524474134*^9, 3.941649525542637*^9}},
 CellID->117689943,ExpressionUUID->"081dacb4-786f-dc46-a99a-ea7356a33b32"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ionq", "=", 
  RowBox[{"devices", "[", 
   RowBox[{"1", ",", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ImportString", "[", 
        RowBox[{"#", ",", "\"\<RawJSON\>\""}], "]"}], "&"}], ",", 
      "\"\<DeviceCapabilities\>\""}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.888087105264069*^9, 3.888087119421659*^9}, {
   3.889022187291685*^9, 3.889022203734682*^9}, {3.892053038212525*^9, 
   3.892053057303619*^9}, 3.8939484110348234`*^9, {3.9416494233541923`*^9, 
   3.941649444558584*^9}},
 CellLabel->"In[40]:=",
 CellID->364017493,ExpressionUUID->"735c5228-dd45-3747-b70d-049064a46dad"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
       "DeviceName" -> "Aria 1", "ProviderName" -> "IonQ", "DeviceType" -> 
       "QPU", "DeviceStatus" -> "ONLINE", 
       "DeviceCapabilities" -> <|
        "service" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.device_service_properties", 
             "version" -> "1"|>, 
           "executionWindows" -> {<|
             "executionDay" -> "Weekdays", "windowStartHour" -> "12:00:00", 
              "windowEndHour" -> "03:00:00"|>}, "shotsRange" -> {1, 5000}, 
           "deviceCost" -> <|"price" -> 0.03, "unit" -> "shot"|>, 
           "deviceDocumentation" -> <|
            "imageUrl" -> 
             "http://d1.awsstatic.com/re19/Braket/IonQ%20Logo.\
59ea92b40cff5a2c2e90d9d981b864c2f424c5a8.png", "summary" -> 
             "Universal gate-model QPU based on trapped ions", 
             "externalDocumentationUrl" -> 
             "https://ionq.com/quantum-systems/aria"|>, "deviceLocation" -> 
           "Maryland, USA", "updatedAt" -> "2024-11-27T00:32:29+00:00"|>, 
         "action" -> <|
          "braket.ir.openqasm.program" -> <|
            "version" -> {"1"}, "actionType" -> "braket.ir.openqasm.program", 
             "supportedOperations" -> {
              "x", "y", "z", "h", "s", "si", "t", "ti", "v", "vi", "rx", "ry",
                "rz", "cnot", "swap", "xx", "yy", "zz"}, 
             "supportedModifiers" -> {}, 
             "supportedPragmas" -> {
              "braket_result_type_sample", "braket_result_type_expectation", 
               "braket_result_type_variance", 
               "braket_result_type_probability", "verbatim"}, 
             "forbiddenPragmas" -> {
              "braket_unitary_matrix", "braket_result_type_state_vector", 
               "braket_result_type_density_matrix", 
               "braket_result_type_amplitude", 
               "braket_result_type_adjoint_gradient"}, "maximumQubitArrays" -> 
             1, "maximumClassicalArrays" -> 1, 
             "forbiddenArrayOperations" -> {
              "concatenation", "negativeIndex", "range", "rangeWithStep", 
               "slicing", "selection"}, "requiresAllQubitsMeasurement" -> 
             True, "supportPhysicalQubits" -> True, 
             "requiresContiguousQubitIndices" -> False, 
             "supportsPartialVerbatimBox" -> False, 
             "supportsUnassignedMeasurements" -> True, 
             "disabledQubitRewiringSupported" -> False, 
             "supportedResultTypes" -> {<|
               "name" -> "Sample", "observables" -> {"x", "y", "z", "h", "i"},
                 "minShots" -> 1, "maxShots" -> 5000|>, <|
               "name" -> "Expectation", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 5000|>, <|
               "name" -> "Variance", 
                "observables" -> {"x", "y", "z", "h", "i"}, "minShots" -> 1, 
                "maxShots" -> 5000|>, <|
               "name" -> "Probability", "minShots" -> 1, "maxShots" -> 
                5000|>}|>|>, 
         "deviceParameters" -> <|
          "title" -> "IonqDeviceParameters", "description" -> 
           "This defines the parameters common to all the IonQ devices.", 
           "type" -> "object", 
           "properties" -> <|
            "braketSchemaHeader" -> <|
              "title" -> "Braketschemaheader", 
               "default" -> <|
                "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
                 "version" -> "1"|>, 
               "const" -> <|
                "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
                 "version" -> "1"|>|>, 
             "paradigmParameters" -> <|
              "$ref" -> "#/definitions/GateModelParameters"|>, 
             "errorMitigation" -> <|
              "title" -> "Errormitigation", "type" -> "array", 
               "items" -> <|
                "$ref" -> "#/definitions/ErrorMitigationScheme"|>|>|>, 
           "required" -> {"paradigmParameters"}, 
           "definitions" -> <|
            "GateModelParameters" -> <|
              "title" -> "GateModelParameters", "description" -> 
               "Defines parameters common to all gate model devices.", "type" -> 
               "object", 
               "properties" -> <|
                "braketSchemaHeader" -> <|
                  "title" -> "Braketschemaheader", 
                   "default" -> <|
                    "name" -> "braket.device_schema.gate_model_parameters", 
                    "version" -> "1"|>, 
                   "const" -> <|
                    "name" -> "braket.device_schema.gate_model_parameters", 
                    "version" -> "1"|>|>, 
                 "qubitCount" -> <|
                  "title" -> "Qubitcount", "minimum" -> 0, "type" -> 
                   "integer"|>, 
                 "disableQubitRewiring" -> <|
                  "title" -> "Disablequbitrewiring", "default" -> False, 
                   "type" -> "boolean"|>|>, "required" -> {"qubitCount"}|>, 
             "ErrorMitigationScheme" -> <|
              "title" -> "ErrorMitigationScheme", "description" -> 
               "Base class for an error mitigation scheme.", "type" -> 
               "object", "properties" -> <||>|>|>|>, 
         "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_capabilities", 
           "version" -> "1"|>, 
         "paradigm" -> <|
          "braketSchemaHeader" -> <|
            "name" -> 
             "braket.device_schema.gate_model_qpu_paradigm_properties", 
             "version" -> "1"|>, 
           "connectivity" -> <|
            "fullyConnected" -> True, "connectivityGraph" -> <||>|>, 
           "qubitCount" -> 25, "nativeGateSet" -> {"GPI", "GPI2", "MS"}|>, 
         "provider" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.ionq.ionq_provider_properties", 
             "version" -> "1"|>, 
           "fidelity" -> <|
            "1Q" -> <|"mean" -> 0.9998|>, "2Q" -> <|"mean" -> 0.9883|>, 
             "spam" -> <|"mean" -> 0.994|>|>, 
           "timing" -> <|
            "T1" -> 100., "T2" -> 1., "1Q" -> 0.000135, "2Q" -> 0.0006, 
             "readout" -> 0.0003, "reset" -> Rational[1, 50000]|>, 
           "errorMitigation" -> <|
            "braket.device_schema.error_mitigation.debias.Debias" -> <|
              "minimumShots" -> 2500|>|>|>|>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
     "Shape" -> TypeSystem`PackageScope`DocumentShape[<|{"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceName"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"ProviderName"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "DeviceType"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"DeviceStatus"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"DeviceCapabilities"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "DeviceArn", "DeviceName", "ProviderName", "DeviceType", 
        "DeviceStatus", "DeviceCapabilities"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyLength], 
         6]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{537.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceName", 
                  Style[
                  "DeviceName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["Aria 1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProviderName", 
                  Style[
                  "ProviderName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ProviderName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["IonQ", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProviderName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceType", 
                  Style[
                  "DeviceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["QPU", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceStatus", 
                  Style[
                  "DeviceStatus", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceStatus"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["ONLINE", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceStatus"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceCapabilities", 
                  Style[
                  "DeviceCapabilities", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 6], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"service", "action", "deviceParameters", 
                    "braketSchemaHeader", "paradigm", "provider"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceCapabilities"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceCapabilities"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{568., {86.8544921875, 92.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{568., {86.8544921875, 92.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.941649405149379*^9, 3.941649445309902*^9}, 
   3.941714133991017*^9, 3.9417156662495155`*^9, 3.9417158612796917`*^9},
 CellLabel->"Out[40]=",
 CellID->37559593,ExpressionUUID->"ccfa28f3-3bba-014b-a926-0f7d9cad1ff6"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Run Quantum Circuit", "Subsection",
 CellChangeTimes->{{3.940943187302208*^9, 3.940943194944233*^9}, {
  3.940960897483317*^9, 3.940960908136364*^9}},
 CellID->166443007,ExpressionUUID->"fd860dc4-98ea-f44c-a66e-9cf7141c13d4"],

Cell[CellGroupData[{

Cell["\<\
There are two methods in order to run a circuit in a QPU using Wolfram \
Quantum Framework, using the ServiceConnect or QuantumCircuitOperator object. \
First of all, we need a quantum circuit:\
\>", "Text",
 CellChangeTimes->{{3.9409456808316536`*^9, 3.940945699653442*^9}, {
  3.940946717700527*^9, 3.940946723462527*^9}, {3.9409487100314865`*^9, 
  3.9409487754750557`*^9}},
 CellID->107030124,ExpressionUUID->"d7b113a0-0553-6743-8b6e-432d00d6eca7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qc", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<H\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<CNOT\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], ",", 
      RowBox[{"\"\<CNOT\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<RZ\>\"", "[", 
        FractionBox["\[Pi]", "3"], "]"}], "\[Rule]", "2"}], ",", 
      RowBox[{
       RowBox[{"\"\<RZ\>\"", "[", 
        FractionBox[
         RowBox[{"2", "\[Pi]"}], "3"], "]"}], "->", "3"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<H\>\"", "->", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qc", "[", "\"\<Diagram\>\"", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.941716017300722*^9, 3.94171602627779*^9}},
 CellLabel->"In[49]:=",
 CellID->428734934,ExpressionUUID->"f5c3a39e-5c3b-7b49-a135-3eac3cf3c288"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -1}, {1.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -2}, {1.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -2}, {2.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{1.375, -3}, {2.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -2}, {3.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{3.375, -3}, {3.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{2.375, -1}, {4.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -2}, {4.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{4.375, -3}, {4.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -1}, {5.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -2}, {5.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{5.375, -3}, {5.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -1}, {0.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -2}, {0.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{0.375, -3}, {0.625, -3}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -1}, {6.625, -1}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -2}, {6.625, -2}}]}}, 
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], CapForm[None], 
     {AbsoluteThickness[1], Opacity[0.3], 
      LineBox[{{6.375, -3}, {6.625, -3}}]}}}, {
    {RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3], 
     LineBox[{{0.375, -0.0234375}, {6.625, -0.0234375}}], 
     LineBox[{{0.375, 0.0234375}, {6.625, 0.0234375}}]}, InsetBox[
     StyleBox["\<\"c\"\>",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, 0}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}, {
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -1.375}, {1.375, -0.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -1.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -2.375}, {1.375, -1.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -2.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{0.625, -3.375}, {1.375, -2.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {1., -3.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ]}, 
       {Dashing[{Small, Small}], 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{1., -1.375}, {1., -1.625}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{1., -2.375}, {1., -2.625}}]}}},
      TemplateBox[{"\"H\"", 
        RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
       SuperscriptBox]],
     Annotation[#, 
      Superscript["H", 
       CircleTimes[3]], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{1.625, -2.}, {1.85, -2.}}], 
           LineBox[{{2.15, -2.}, {2.375, -2.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{2., -2.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{1.85, -2.}, {2.15, -2.}}], 
             LineBox[{{2., -2.15}, {2., -1.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{2., -1.09375}, {2., -1.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{1.625, -1.}, {1.90625, -1.}}], 
          LineBox[{{2.09375, -1.}, {2.375, -1.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{2., -1.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{1}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
           Opacity[0.3], CapForm[None], LineBox[{{2.625, -3.}, {2.85, -3.}}], 
           LineBox[{{3.15, -3.}, {3.375, -3.}}], 
           {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
            RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
            DiskBox[{3., -3.}, 0.15000000000000002], 
            {RGBColor[0.880722, 0.611041, 0.142051], Opacity[1], 
             LineBox[{{2.85, -3.}, {3.15, -3.}}], 
             LineBox[{{3., -3.15}, {3., -2.85}}]}}},
          "\"NOT\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "NOT", "Tooltip"]& ], 
        {RGBColor[0.880722, 0.611041, 0.142051], 
         LineBox[{{3., -2.09375}, {3., -2.85}}]}}, 
       TagBox[
        TooltipBox[
         {RGBColor[0.537254, 0.537254, 0.537254], AbsoluteThickness[1], 
          Opacity[0.3], CapForm[None], 
          LineBox[{{2.625, -2.}, {2.90625, -2.}}], 
          LineBox[{{3.09375, -2.}, {3.375, -2.}}], 
          {EdgeForm[RGBColor[0.880722, 0.611041, 0.142051]], FaceForm[{
           RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.3]}], 
           DiskBox[{3., -2.}, 0.09375]}},
         "\"1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "1", "Tooltip"]& ], {}},
      RowBox[{
        SubscriptBox["\"C\"", "\"NOT\""], "[", 
        RowBox[{
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]],
     Annotation[#, 
      Subscript["C", "NOT"][{2}, {}], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{3.625, -2.375}, {4.375, -1.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
           FractionBox["\[Pi]", "3"], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -2.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Z\""], "[", 
        FractionBox["\[Pi]", "3"], "]"}]],
     Annotation[#, 
      Subscript["R", "Z"][Rational[1, 3] Pi], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      {EdgeForm[RGBColor[0.528488, 0.470624, 0.701351]], FaceForm[{RGBColor[
       0.528488, 0.470624, 0.701351], Opacity[0.3]}], 
       RectangleBox[{3.625, -3.375}, {4.375, -2.625},
        RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
         StyleBox[
          RowBox[{
           SubscriptBox["\<\"R\"\>", "\<\"Z\"\>"], "(", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]"}], "3"], ")"}],
          StripOnInput->False,
          FontFamily->"Roboto",
          FontSize->11,
          FontColor->GrayLevel[0],
          Background->GrayLevel[0, 0]], {4., -3.}], {{{1, 0}, {0, 1}}, 
         Center}]},
      RowBox[{
        SubscriptBox["\"R\"", "\"Z\""], "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "3"], "]"}]],
     Annotation[#, 
      Subscript["R", "Z"][Rational[2, 3] Pi], "Tooltip"]& ], 
    TagBox[
     TooltipBox[{{
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -1.375}, {5.375, -0.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -1.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -2.375}, {5.375, -1.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -2.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          {EdgeForm[RGBColor[0.368417, 0.506779, 0.709798]], FaceForm[{
           RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3]}], 
           RectangleBox[{4.625, -3.375}, {5.375, -2.625},
            RoundingRadius->0.1], GeometricTransformationBox[InsetBox[
             StyleBox["\<\"H\"\>",
              StripOnInput->False,
              FontFamily->"Roboto",
              FontSize->11,
              FontColor->GrayLevel[0],
              Background->GrayLevel[0, 0]], {5., -3.}], {{{1, 0}, {0, 1}}, 
             Center}]},
          "\"H\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, "H", "Tooltip"]& ]}, 
       {Dashing[{Small, Small}], 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{5., -1.375}, {5., -1.625}}]}, 
        {RGBColor[0.368417, 0.506779, 0.709798], 
         LineBox[{{5., -2.375}, {5., -2.625}}]}}},
      TemplateBox[{"\"H\"", 
        RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
       SuperscriptBox]],
     Annotation[#, 
      Superscript["H", 
       CircleTimes[3]], "Tooltip"]& ], {
     TagBox[
      TooltipBox[{{
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -1.375}, {6.375, -0.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -1.0772902651951612`}, {
               6.212366961023424, -1.0332063712732258`}}], 
              LineBox[{{6.116904337848513, -1.0409065970372444`}, {
               6.163666072987917, -0.9822692358521422}}], 
              LineBox[{{6.073692193435111, -1.015088542646603}, {
               6.103169070809155, -0.9461239597052442}}], 
              LineBox[{{6.0251687373408105`, -1.0016969196685124`}, {
               6.035236232277135, -0.9273756875359171}}], 
              LineBox[{{5.9748312626591895`, -1.0016969196685122`}, {
               5.964763767722865, -0.9273756875359171}}], 
              LineBox[{{5.926307806564889, -1.015088542646603}, {
               5.896830929190845, -0.9461239597052442}}], 
              LineBox[{{5.883095662151487, -1.0409065970372444`}, {
               5.836333927012083, -0.9822692358521422}}], 
              LineBox[{{5.848309313554697, -1.0772902651951612`}, {
               5.787633038976576, -1.0332063712732258`}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -1.1875}, {
                6.17024643740233, -0.8533725534293621}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -2.375}, {6.375, -1.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -2.0772902651951615`}, {
               6.212366961023424, -2.033206371273226}}], 
              LineBox[{{6.116904337848513, -2.040906597037244}, {
               6.163666072987917, -1.9822692358521423`}}], 
              LineBox[{{6.073692193435111, -2.0150885426466028`}, {
               6.103169070809155, -1.9461239597052442`}}], 
              LineBox[{{6.0251687373408105`, -2.001696919668512}, {
               6.035236232277135, -1.9273756875359171`}}], 
              LineBox[{{5.9748312626591895`, -2.001696919668512}, {
               5.964763767722865, -1.9273756875359171`}}], 
              LineBox[{{5.926307806564889, -2.0150885426466028`}, {
               5.896830929190845, -1.9461239597052442`}}], 
              LineBox[{{5.883095662151487, -2.040906597037244}, {
               5.836333927012083, -1.982269235852142}}], 
              LineBox[{{5.848309313554697, -2.0772902651951615`}, {
               5.787633038976576, -2.033206371273226}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -2.1875}, {
                6.17024643740233, -1.8533725534293621`}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            TagBox[
             TooltipBox[
              {EdgeForm[RGBColor[0.7367, 0.358, 0.503]], FaceForm[{RGBColor[
               0.7367, 0.358, 0.503], Opacity[0.3]}], 
               RectangleBox[{5.625, -3.375}, {6.375, -2.625},
                RoundingRadius->0.1]},
              "\"Measurement\"",
              TooltipStyle->"TextStyling"],
             Annotation[#, "Measurement", "Tooltip"]& ], {
             {Thickness[Small], 
              LineBox[{{6.151690686445303, -3.0772902651951615`}, {
               6.212366961023424, -3.033206371273226}}], 
              LineBox[{{6.116904337848513, -3.040906597037244}, {
               6.163666072987917, -2.9822692358521423`}}], 
              LineBox[{{6.073692193435111, -3.015088542646603}, {
               6.103169070809155, -2.946123959705244}}], 
              LineBox[{{6.0251687373408105`, -3.0016969196685124`}, {
               6.035236232277135, -2.927375687535917}}], 
              LineBox[{{5.9748312626591895`, -3.0016969196685124`}, {
               5.964763767722865, -2.927375687535917}}], 
              LineBox[{{5.926307806564889, -3.015088542646603}, {
               5.896830929190845, -2.946123959705244}}], 
              LineBox[{{5.883095662151487, -3.040906597037244}, {
               5.836333927012083, -2.9822692358521423`}}], 
              LineBox[{{5.848309313554697, -3.0772902651951615`}, {
               5.787633038976576, -3.033206371273226}}]}, 
             {Thickness[Medium], 
              LineBox[{{6, -3.1875}, {
                6.17024643740233, -2.853372553429362}}]}}, 
            {Dashing[{Small, Small}]}},
           RowBox[{"\"Measurement\"", "[", "None", "]"}]],
          Annotation[#, 
           "Measurement"[None], "Tooltip"]& ]}, 
        {Dashing[{Small, Small}], 
         {RGBColor[0.7367, 0.358, 0.503], 
          LineBox[{{6., -1.375}, {6., -1.625}}]}, 
         {RGBColor[0.7367, 0.358, 0.503], 
          LineBox[{{6., -2.375}, {6., -2.625}}]}}},
       TemplateBox[{
         RowBox[{"\"Measurement\"", "[", "None", "]"}], 
         RowBox[{"\[CircleTimes]", "3"}]}, "Superscript", SyntaxForm -> 
        SuperscriptBox]],
      Annotation[#, 
       Superscript[
        "Measurement"[None], 
        CircleTimes[3]], "Tooltip"]& ], 
     {RGBColor[0.537254, 0.537254, 0.537254], 
      LineBox[{{6., -0.625}, {6., -0.2109375}}], 
      {EdgeForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.3]}], 
       FaceForm[{RGBColor[0.537254, 0.537254, 0.537254], Opacity[0.8]}], 
       PolygonBox[{{5.90625, -0.2109375}, {6.09375, -0.2109375}, {
        6., -0.0234375}}]}}}}, {InsetBox[
     StyleBox["1",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -1}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["2",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -2}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]], InsetBox[
     StyleBox["3",
      StripOnInput->False,
      FontSize->10,
      FontSlant->Italic,
      FontColor->RGBColor[0.537254, 0.537254, 0.537254],
      Background->GrayLevel[0, 0]], {0.28125, -3}, NCache[
     ImageScaled[{1, Rational[1, 2]}], ImageScaled[{1, 0.5}]]]}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{
  3.941715197490837*^9, {3.941716020311548*^9, 3.9417160271086197`*^9}},
 CellLabel->"Out[50]=",
 CellID->97457172,ExpressionUUID->"2f40d460-19b7-7340-b291-b75bcb717a0f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Users should pay attention to specification of each QPUs, for example:\
\>", "Text",
 CellChangeTimes->{{3.9409503873437576`*^9, 3.940950450012972*^9}, {
  3.940952358570259*^9, 3.940952365167483*^9}},
 CellID->99761065,ExpressionUUID->"fed6fde5-5eef-1542-bce5-dc0248c101cb"],

Cell["Accepted gates", "Item",
 CellChangeTimes->{{3.940950393814495*^9, 3.9409504246811543`*^9}},
 CellID->299924603,ExpressionUUID->"1e309bde-9941-0d4c-9382-8d1957d0a756"],

Cell["Number of qubits", "Item",
 CellChangeTimes->{
  3.940950393814495*^9, {3.940950427678737*^9, 3.940950430612257*^9}},
 CellID->471589744,ExpressionUUID->"59865638-795f-9d47-af3c-650a21154e82"],

Cell[CellGroupData[{

Cell["ServiceConnect", "Subsubsection",
 CellChangeTimes->{{3.9409490857830105`*^9, 3.9409490988073406`*^9}},
 CellID->252565109,ExpressionUUID->"df9e184b-9085-6f45-9f1d-a9890827e908"],

Cell[CellGroupData[{

Cell["\<\
Transform the quantum circuit into Qiskit and find its OpenQASM code using \
AWSProvider:\
\>", "Text",
 CellChangeTimes->{{3.9409491243212967`*^9, 3.940949149136221*^9}, {
   3.941649584649833*^9, 3.941649594334806*^9}, {3.9416496660413857`*^9, 
   3.9416496662913017`*^9}, {3.941715368195165*^9, 3.941715376169895*^9}, 
   3.941716115027609*^9},
 CellID->1258097,ExpressionUUID->"279f617d-f7db-0c4b-8c54-98f8c5a87410"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qasm", "=", 
  RowBox[{
   RowBox[{"qc", "[", "\"\<Qiskit\>\"", "]"}], "[", 
   RowBox[{"\"\<QASM\>\"", ",", " ", 
    RowBox[{"\"\<Provider\>\"", " ", "\[Rule]", " ", "\"\<AWSBraket\>\""}]}], 
   "]"}], " "}]], "Input",
 CellChangeTimes->{{3.9416497621257534`*^9, 3.9416497621277637`*^9}, {
  3.9416499842072563`*^9, 3.9416499852610445`*^9}, {3.941650050056557*^9, 
  3.941650091805958*^9}, {3.941650489263401*^9, 3.941650491319406*^9}, {
  3.941711974452385*^9, 3.941711980239414*^9}, {3.941714041754593*^9, 
  3.9417140580426817`*^9}, {3.941714163714947*^9, 3.941714286654064*^9}, {
  3.9417143384862614`*^9, 3.941714342494086*^9}, {3.941714876275454*^9, 
  3.9417148971477017`*^9}, {3.941714952168642*^9, 3.941714960190588*^9}, {
  3.9417149939327335`*^9, 3.941714994897513*^9}, {3.941715070208725*^9, 
  3.941715073485218*^9}, {3.9417151416538124`*^9, 3.941715168810005*^9}, {
  3.94171533051856*^9, 3.941715337261523*^9}},
 CellLabel->"In[51]:=",
 CellID->597352419,ExpressionUUID->"bb4e2eea-b707-194a-9851-f686cd81eed2"],

Cell[BoxData["\<\"OPENQASM 3.0;\\nbit[3] b;\\nqubit[3] q;\\nh q[0];\\nh q[1];\
\\ncnot q[0], q[1];\\nh q[0];\\nh q[2];\\ncnot q[1], \
q[2];\\nrz(1.0471975511965976) q[1];\\nh q[1];\\nrz(2.0943951023931953) q[2];\
\\nh q[2];\\nb[0] = measure q[0];\\nb[1] = measure q[1];\\nb[2] = measure \
q[2];\"\>"], "Output",
 CellChangeTimes->{
  3.941715177360497*^9, 3.9417152114727306`*^9, {3.9417153316720448`*^9, 
   3.9417153458848934`*^9}, 3.941716037552962*^9},
 CellLabel->"Out[51]=",
 CellID->843301149,ExpressionUUID->"bdadc5cd-dcd2-0a47-a599-98dd8c354240"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Using this OpenQASM code,  we can send the query to the Amazon simulator and \
our personal \"OutputS3Bucket\":\
\>", "Text",
 CellChangeTimes->{{3.940950253484595*^9, 3.940950256577814*^9}, {
   3.940950304682524*^9, 3.940950317177284*^9}, 3.941715436299852*^9, 
   3.941716095995725*^9},
 CellID->71015004,ExpressionUUID->"bd5e228a-8e7b-9e46-8b1c-16e51d68c4ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"taskIonQ", "=", 
  RowBox[{"braket", "[", 
   RowBox[{"\"\<CreateQuantumTask\>\"", ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<DeviceArn\>\"", "->", 
     RowBox[{"ionq", "[", "\"\<DeviceArn\>\"", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
    "\"\<OutputS3Bucket\>\"", "->", "\"\<amazon-braket-wolfram-mads\>\""}], 
    ",", 
    RowBox[{"\"\<OutputS3KeyPrefix\>\"", "->", "\"\<tasks\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Shots\>\"", "->", "100"}], ",", 
    RowBox[{"\"\<Action\>\"", "->", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<braketSchemaHeader\>\"", "->", 
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{
          "\"\<name\>\"", "->", "\"\<braket.ir.openqasm.program\>\""}], ",", 
          RowBox[{"\"\<version\>\"", "->", "\"\<1\>\""}]}], 
         "\[RightAssociation]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<source\>\"", "->", "qasm"}]}], "\[RightAssociation]"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<ValidateRequest\>\"", "->", "False"}], ",", 
    RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.941715922353441*^9, 3.941715941573973*^9}, {
  3.9417159945618267`*^9, 3.941716006543764*^9}},
 CellLabel->"In[52]:=",
 CellID->143141549,ExpressionUUID->"bebacbb5-23a6-3346-b893-3cb4dcc52644"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "QuantumTaskArn" -> 
       "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-d287-4f12-\
baa7-6e700b86c16c", "Status" -> "INITIALIZED"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[147.], 
         TypeSystem`PackageScope`AtomShape[560.]]], 2, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[
        TypeSystem`Enumeration["QuantumTaskArn", "Status"]], 
       TypeSystem`Atom[String], 2], "Path" -> {}, "DisplayedRowCount" -> 2, 
     "DisplayedColumnCount" -> 1, "DataRowCount" -> 2, "DataColumnCount" -> 1,
      "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-\
d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{147., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["INITIALIZED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{724., {32.8544921875, 38.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{724., {32.8544921875, 38.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.941715882710863*^9, 3.941715924040392*^9, {3.941715995509243*^9, 
   3.941716007583629*^9}, 3.941716040794747*^9},
 CellLabel->"Out[52]=",
 CellID->273120042,ExpressionUUID->"1a4d9c2c-04f1-6741-a3b6-ed36ad362862"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Task", "Subsection",
 CellChangeTimes->{{3.940943187302208*^9, 3.940943194944233*^9}, {
  3.940959017576615*^9, 3.940959018555987*^9}, {3.941716465410801*^9, 
  3.9417164658572426`*^9}},
 CellID->116260310,ExpressionUUID->"8323750f-1ae3-5948-bd4b-0b6d09824250"],

Cell[CellGroupData[{

Cell["Check all the jobs requested in your service:", "Text",
 CellChangeTimes->{{3.940952025933161*^9, 3.940952055147414*^9}, {
  3.9409585181477222`*^9, 3.940958518538521*^9}},
 CellID->39802156,ExpressionUUID->"bc4de015-04d2-854f-9264-ee18d1249dc8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.941716408011364*^9, 3.941716411856392*^9}},
 CellLabel->"In[56]:=",
 CellID->57694188,ExpressionUUID->"cf36ba00-1c64-9346-80c5-036135bc97bf"],

Cell[BoxData["\<\"arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-\
d287-4f12-baa7-6e700b86c16c\"\>"], "Output",
 CellChangeTimes->{3.9417164122026615`*^9},
 CellLabel->"Out[56]=",
 CellID->272324566,ExpressionUUID->"44e6fd8e-d6ef-8a45-b80d-527c331b5cdd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Check the status of the task:", "Text",
 CellChangeTimes->{{3.94171617461965*^9, 3.941716189862844*^9}},
 CellID->87768214,ExpressionUUID->"ed8c3c75-8a80-a945-8708-51db51f5fdca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<GetQuantumTask\>\"", ",", 
   RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
    RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.865785181442865*^9, 3.865785182426072*^9}, {
  3.865787620367635*^9, 3.865787620502542*^9}, {3.86579027738731*^9, 
  3.865790277572442*^9}, {3.888022006107614*^9, 3.888022006668753*^9}, {
  3.888436159231516*^9, 3.888436159849811*^9}, {3.941716136123514*^9, 
  3.941716162504376*^9}},
 CellLabel->"In[53]:=",
 CellID->1535752367,ExpressionUUID->"c2464c43-b6af-454c-9af5-b494e409d72a"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "CreatedAt" -> 
       DateObject[{2024, 11, 27, 17, 7, 21.685}, "Instant", "Gregorian", 0.], 
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
       "DeviceParameters" -> <|
        "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
           "version" -> "1"|>, 
         "paradigmParameters" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.gate_model_parameters", "version" -> 
             "1"|>, "qubitCount" -> 3, "disableQubitRewiring" -> False|>, 
         "errorMitigation" -> Null|>, "EndedAt" -> Null, "FailureReason" -> 
       Null, "HybridJobArn" -> Null, "Id" -> 
       "5fb7cfc5-d287-4f12-baa7-6e700b86c16c", "OutputS3Bucket" -> 
       "amazon-braket-wolfram-mads", "OutputS3Directory" -> 
       "tasks/5fb7cfc5-d287-4f12-baa7-6e700b86c16c", "QuantumTaskArn" -> 
       "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-d287-4f12-\
baa7-6e700b86c16c", "ReservationArn" -> Null, "Shots" -> 100, "Status" -> 
       "QUEUED", "Tags" -> <||>|>, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"ReservationArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "ReservationArn", "Shots", 
        "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"ReservationArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "ReservationArn", "Shots", 
        "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 14, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CreatedAt", 
                  Style[
                  "CreatedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["CreatedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 27 Nov 2024 17:07:21\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{537.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceParameters", 
                  Style[
                  "DeviceParameters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["DeviceParameters"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["DeviceParameters"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EndedAt", 
                  Style[
                  "EndedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["EndedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FailureReason", 
                  Style[
                  "FailureReason", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["FailureReason"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["FailureReason"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HybridJobArn", 
                  Style[
                  "HybridJobArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["HybridJobArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["HybridJobArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Id", 
                  Style[
                  "Id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["5fb7cfc5-d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Bucket", 
                  Style[
                  "OutputS3Bucket", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Bucket"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram-mads", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Directory", 
                  Style[
                  "OutputS3Directory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OutputS3Directory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tasks/5fb7cfc5-d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-\
d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ReservationArn", 
                  Style[
                  "ReservationArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ReservationArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ReservationArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ReservationArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Shots", 
                  Style[
                  "Shots", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Shots"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["QUEUED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tags", 
                  Style[
                  "Tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[<||>, ShowStringCharacters -> False], 
                  Style[
                   Style[<||>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{688., {194.8544921875, 200.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{688., {194.8544921875, 200.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.941716177633393*^9},
 CellLabel->"Out[53]=",
 CellID->691875441,ExpressionUUID->"e1c479a1-6f42-d741-b42f-ddf5cbc4a27e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Job Results", "Subsubsection",
 CellChangeTimes->{{3.9409610451926193`*^9, 3.940961048125498*^9}},
 CellID->829197341,ExpressionUUID->"d5c01066-7cb0-ea4e-8d42-750ee6493403"],

Cell[CellGroupData[{

Cell[" Once the job is done, you can also check on results:", "Text",
 CellChangeTimes->{{3.940958943793598*^9, 3.940958947373312*^9}, {
  3.941734873651907*^9, 3.941734874760437*^9}},
 CellID->130783892,ExpressionUUID->"b16be9d1-fa79-eb4a-ae24-7a5ef220b1ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"braket", "[", 
  RowBox[{"\"\<GetQuantumTask\>\"", ",", 
   RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
    RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
   RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.940951191865034*^9, 3.940951194656334*^9}, {
   3.940951771728218*^9, 3.940951791057532*^9}, 3.940958746890806*^9, {
   3.9409588366841965`*^9, 3.94095883924848*^9}, 3.940959037057459*^9, {
   3.940959103133186*^9, 3.9409591084794846`*^9}, 3.941718568309574*^9},
 CellLabel->"In[57]:=",
 CellID->865646729,ExpressionUUID->"51cb2205-9c7d-2b4d-aa70-953061a670d5"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "CreatedAt" -> 
       DateObject[{2024, 11, 27, 17, 7, 21.685}, "Instant", "Gregorian", 0.], 
       "DeviceArn" -> "arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
       "DeviceParameters" -> <|
        "braketSchemaHeader" -> <|
          "name" -> "braket.device_schema.ionq.ionq_device_parameters", 
           "version" -> "1"|>, 
         "paradigmParameters" -> <|
          "braketSchemaHeader" -> <|
            "name" -> "braket.device_schema.gate_model_parameters", "version" -> 
             "1"|>, "qubitCount" -> 3, "disableQubitRewiring" -> False|>, 
         "errorMitigation" -> Null|>, "EndedAt" -> 
       DateObject[{2024, 11, 27, 17, 16, 9.48}, "Instant", "Gregorian", 0.], 
       "FailureReason" -> Null, "HybridJobArn" -> Null, "Id" -> 
       "5fb7cfc5-d287-4f12-baa7-6e700b86c16c", "OutputS3Bucket" -> 
       "amazon-braket-wolfram-mads", "OutputS3Directory" -> 
       "tasks/5fb7cfc5-d287-4f12-baa7-6e700b86c16c", "QuantumTaskArn" -> 
       "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-d287-4f12-\
baa7-6e700b86c16c", "ReservationArn" -> Null, "Shots" -> 100, "Status" -> 
       "COMPLETED", "Tags" -> <||>|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"ReservationArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "InitialType" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "ReservationArn", "Shots", 
        "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"CreatedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"DeviceArn"} -> 
        TypeSystem`PackageScope`AtomShape[537.6], {"DeviceParameters"} -> 
        TypeSystem`PackageScope`ElidedShape[1], {"EndedAt"} -> 
        TypeSystem`PackageScope`AtomShape[75], {"FailureReason"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"HybridJobArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Id"} -> 
        TypeSystem`PackageScope`AtomShape[403.20000000000005`], {
         "OutputS3Bucket"} -> 
        TypeSystem`PackageScope`AtomShape[291.20000000000005`], {
         "OutputS3Directory"} -> 
        TypeSystem`PackageScope`AtomShape[470.40000000000003`], {
         "QuantumTaskArn"} -> 
        TypeSystem`PackageScope`AtomShape[560.], {"ReservationArn"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Shots"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Status"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {"Tags"} -> 
        TypeSystem`PackageScope`ElidedShape[1]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "CreatedAt", "DeviceArn", "DeviceParameters", "EndedAt", 
        "FailureReason", "HybridJobArn", "Id", "OutputS3Bucket", 
        "OutputS3Directory", "QuantumTaskArn", "ReservationArn", "Shots", 
        "Status", "Tags"}, {
        TypeSystem`Atom[DateObject], 
        TypeSystem`Atom[String], 
        TypeSystem`Struct[{
         "braketSchemaHeader", "paradigmParameters", "errorMitigation"}, {
          TypeSystem`Assoc[
           TypeSystem`Atom[
            TypeSystem`Enumeration["name", "version"]], 
           TypeSystem`Atom[String], 2], 
          
          TypeSystem`Struct[{
           "braketSchemaHeader", "qubitCount", "disableQubitRewiring"}, {
            TypeSystem`Assoc[
             TypeSystem`Atom[
              TypeSystem`Enumeration["name", "version"]], 
             TypeSystem`Atom[String], 2], 
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[TypeSystem`Boolean]}], TypeSystem`AnyType}], 
        TypeSystem`Atom[DateObject], TypeSystem`AnyType, TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], TypeSystem`AnyType, 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Assoc[
        TypeSystem`UnknownType, TypeSystem`UnknownType, 
         TypeSystem`AnyLength]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 14, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["CreatedAt", 
                  Style[
                  "CreatedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["CreatedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["CreatedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 27 Nov 2024 17:07:21\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["CreatedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceArn", 
                  Style[
                  "DeviceArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["DeviceArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["DeviceArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["arn:aws:braket:us-east-1::device/qpu/ionq/Aria-1", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["DeviceArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{537.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["DeviceParameters", 
                  Style[
                  "DeviceParameters", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["DeviceParameters"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["DeviceParameters"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[
                   Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                   GrayLevel[0.5]], 
                  Style[
                   Style[
                    Tooltip[
                    Row[{"\[LeftAssociation] ", 
                    Subscript["\[Ellipsis]", 3], "\[RightAssociation]"}], 
                    Row[{"Keys: ", 
                    
                    Row[{"braketSchemaHeader", "paradigmParameters", 
                    "errorMitigation"}, ", ", 
                    BaseStyle -> (ShowStringCharacters -> True)]}], 
                    TooltipDelay -> 0.1], 
                    GrayLevel[0.5]], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["DeviceParameters"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["DeviceParameters"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}], BaseStyle -> {
               GrayLevel[0.5]}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["EndedAt", 
                  Style[
                  "EndedAt", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["EndedAt"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["EndedAt"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wed 27 Nov 2024 17:16:09\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["EndedAt"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["FailureReason", 
                  Style[
                  "FailureReason", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["FailureReason"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["FailureReason"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["FailureReason"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HybridJobArn", 
                  Style[
                  "HybridJobArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["HybridJobArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["HybridJobArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["HybridJobArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Id", 
                  Style[
                  "Id", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["Id"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Id"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["5fb7cfc5-d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Id"]}, "Item", False], "Mouse"], 
              ImageSize -> {{403.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Bucket", 
                  Style[
                  "OutputS3Bucket", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["OutputS3Bucket"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["OutputS3Bucket"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["amazon-braket-wolfram-mads", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["OutputS3Bucket"]}, "Item", False], "Mouse"], 
              ImageSize -> {{291.20000000000005`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OutputS3Directory", 
                  Style[
                  "OutputS3Directory", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["OutputS3Directory"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["OutputS3Directory"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["tasks/5fb7cfc5-d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["OutputS3Directory"]}, "Item", False], "Mouse"], 
              ImageSize -> {{470.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["QuantumTaskArn", 
                  Style[
                  "QuantumTaskArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["QuantumTaskArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["QuantumTaskArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
              "arn:aws:braket:us-east-1:153593885406:quantum-task/5fb7cfc5-\
d287-4f12-baa7-6e700b86c16c", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["QuantumTaskArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{560., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ReservationArn", 
                  Style[
                  "ReservationArn", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["ReservationArn"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["ReservationArn"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox["Null", FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["ReservationArn"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Shots", 
                  Style[
                  "Shots", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["Shots"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Shots"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Shots"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Status", 
                  Style[
                  "Status", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["Status"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Status"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["COMPLETED", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Status"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Tags", 
                  Style[
                  "Tags", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["Tags"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Tags"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[<||>, ShowStringCharacters -> False], 
                  Style[
                   Style[<||>, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   "fba2e642-e88d-4733-a7df-81e517f98246"]][{
                    Key["Tags"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               "fba2e642-e88d-4733-a7df-81e517f98246"][{
                 Key["Tags"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                "fba2e642-e88d-4733-a7df-81e517f98246", {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "fba2e642-e88d-4733-a7df-81e517f98246"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    "fba2e642-e88d-4733-a7df-81e517f98246"]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "fba2e642-e88d-4733-a7df-81e517f98246"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "fba2e642-e88d-4733-a7df-81e517f98246"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    "fba2e642-e88d-4733-a7df-81e517f98246"][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              "fba2e642-e88d-4733-a7df-81e517f98246"][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
    "fba2e642-e88d-4733-a7df-81e517f98246"][{
      Key["QuantumTaskArn"]}, "Item", False]}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{688., {194.8544921875, 200.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{688., {194.8544921875, 200.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.94095178937946*^9, 3.940951792377466*^9}, 
   3.9409587503334846`*^9, 3.940958841448017*^9, 3.9417185705831585`*^9},
 CellLabel->"Out[57]=",
 CellID->943460284,ExpressionUUID->"b805c8c7-e0de-a94b-b63f-1af25d1a9859"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Results", "Subsection",
 CellChangeTimes->{{3.940959176213121*^9, 3.9409591786955776`*^9}},
 CellID->361424097,ExpressionUUID->"65023dfa-a88e-ae4a-95c2-6e711dc39ac2"],

Cell[CellGroupData[{

Cell["\<\
The results of the requested updates are saved in S3. We can find these by \
locating their directories:\
\>", "Text",
 CellChangeTimes->{{3.9409592392632*^9, 3.940959248925148*^9}, {
   3.9417187241685944`*^9, 3.941718725826881*^9}, 3.941719486952158*^9},
 CellID->42803491,ExpressionUUID->"a83f20fd-979f-ce4b-95f7-30c9231d8f2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputPathIONQ", "=", 
  RowBox[{
   RowBox[{"braket", "[", 
    RowBox[{"\"\<GetQuantumTask\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<QuantumTaskArn\>\"", "->", 
      RowBox[{"taskIonQ", "[", "\"\<QuantumTaskArn\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<RequestRegion\>\"", "->", "\"\<us-east-1\>\""}]}], 
    "\[IndentingNewLine]", "]"}], "[", "\"\<OutputS3Directory\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.940960103740621*^9, 3.94096012363616*^9}, {
   3.940960223736332*^9, 3.940960225317196*^9}, 3.94171872905155*^9, {
   3.941719174469486*^9, 3.941719196932577*^9}},
 CellLabel->"In[66]:=",
 CellID->89984608,ExpressionUUID->"fdfbd802-f2cd-7d4b-8976-17d04b12a04e"],

Cell[BoxData["\<\"tasks/5fb7cfc5-d287-4f12-baa7-6e700b86c16c\"\>"], "Output",
 CellChangeTimes->{{3.940960104602743*^9, 3.9409601245479813`*^9}, 
   3.940960226211006*^9, 3.941718731224318*^9, 3.941719187536297*^9},
 CellLabel->"Out[66]=",
 CellID->356500595,ExpressionUUID->"716a43c2-d28c-d94f-ba54-0c0f4bb4cdac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Given the previous directory, the measurement result can be obtained as \
follows:\
\>", "Text",
 CellChangeTimes->{{3.9417187433815737`*^9, 3.941718745889929*^9}, {
  3.9417194929991813`*^9, 3.9417195298974876`*^9}},
 CellID->258848104,ExpressionUUID->"db092232-0523-1842-994a-9a7bbe0f69a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"resultsIonQ", "=", 
   RowBox[{"KeySort", "[", 
    RowBox[{
     RowBox[{"ImportByteArray", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"s3", "[", 
         RowBox[{"\"\<GetObject\>\"", ",", 
          RowBox[{
          "\"\<Bucket\>\"", "->", "\"\<amazon-braket-wolfram-mads\>\""}], ",", 
          RowBox[{"\"\<Key\>\"", "->", 
           RowBox[{
           "outputPathIONQ", "<>", "\"\</\>\"", "<>", " ", 
            "\"\<results.json\>\""}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<RequestRegion\>\"", "\[Rule]", "\"\<us-east-1\>\""}]}],
          "]"}], "[", "\"\<Body\>\"", "]"}], ",", "\"\<RawJSON\>\""}], "]"}], 
     "[", "\"\<measurementProbabilities\>\"", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.940959304540804*^9, 3.940959310103012*^9}, {
   3.9409593749723606`*^9, 3.9409594549485207`*^9}, {3.940959684259428*^9, 
   3.94095971208232*^9}, {3.940959760626812*^9, 3.940959781395079*^9}, {
   3.940959847605873*^9, 3.940959856053797*^9}, {3.9409598987986183`*^9, 
   3.9409599296294727`*^9}, {3.940960033514612*^9, 3.9409600421074944`*^9}, 
   3.940960091625103*^9, {3.9409601282352505`*^9, 3.94096016078383*^9}, {
   3.9409602332762203`*^9, 3.94096028111694*^9}, 3.9417187496916738`*^9, 
   3.9417187989142036`*^9, {3.9417191822895336`*^9, 3.941719182557894*^9}, 
   3.941719539624645*^9, 3.941734278488983*^9, {3.9417348378976736`*^9, 
   3.941734841150057*^9}},
 CellLabel->"In[433]:=",
 CellID->234207586,ExpressionUUID->"8cc35f76-f349-5747-a220-684c090645ed"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Based on the generated results for IonQ, we can then calculate the \
probabilities:\
\>", "Text",
 CellChangeTimes->{{3.940960457420294*^9, 3.9409604919639053`*^9}, {
  3.941734302895256*^9, 3.941734309107912*^9}},
 CellID->344221668,ExpressionUUID->"065f455f-a9ef-d942-96e2-d940f4b2a72b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsIonQ", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"AssociationThread", "[", 
     RowBox[{
      RowBox[{"StringJoin", "/@", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "3"}], "]"}]}],
       ",", "0"}], "]"}], ",", "resultsIonQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.888022123174798*^9, 3.888022131530669*^9}, 
   3.888022176838532*^9, {3.888433057147657*^9, 3.888433143391659*^9}, {
   3.888436325555752*^9, 3.88843633404002*^9}, {3.889022453354262*^9, 
   3.889022471322756*^9}, 3.891433388713068*^9, 3.892071749905689*^9, {
   3.892753521114987*^9, 3.892753556653609*^9}, 3.941734322761952*^9, {
   3.941734461062689*^9, 3.941734461203398*^9}},
 CellLabel->"In[434]:=",
 CellID->1234233014,ExpressionUUID->"70f945db-d4c2-514e-aca8-3f1f3d25eb4f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"000\"\>", "\[Rule]", "0.14`"}], ",", 
   RowBox[{"\<\"001\"\>", "\[Rule]", "0.6`"}], ",", 
   RowBox[{"\<\"010\"\>", "\[Rule]", "0.08`"}], ",", 
   RowBox[{"\<\"011\"\>", "\[Rule]", "0.18`"}], ",", 
   RowBox[{"\<\"100\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"101\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"110\"\>", "\[Rule]", "0"}], ",", 
   RowBox[{"\<\"111\"\>", "\[Rule]", "0"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.941734317665854*^9, 3.941734323272911*^9}, {
   3.94173446191*^9, 3.9417344918218613`*^9}, 3.9417348433651752`*^9},
 CellLabel->"Out[434]=",
 CellID->653653426,ExpressionUUID->"7e7ae5ef-7959-fb45-87a7-f152cabbc929"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
We can then chart results for the IonQ QPU (100 shots) and the Wolfram \
Quantum Framework (exact probabilities as predicted by quantum theory):\
\>", "Text",
 CellChangeTimes->{{3.941734335790238*^9, 3.941734342661125*^9}},
 CellID->350574518,ExpressionUUID->"49a3d165-6812-4a44-8100-6e75490c96f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Values", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"N", "@", 
        RowBox[{
         RowBox[{"qc", "[", "]"}], "[", "\"\<Probabilities\>\"", "]"}]}], ",",
        "resultsIonQ"}], "}"}]}], "]"}], ",", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Expression", "SequenceIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Sequence", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["6", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["1152", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Sequence[ChartLabels -> {
       Keys[
        $CellContext`qc[]["Probabilities"]], None}, BarSpacing -> {0, 1}, 
     ChartLegends -> {{
       "Wolfram Quantum Framework", "SV1 simulator", "IonQ QPU"}}, GridLines -> 
     Automatic, AspectRatio -> 1/2, ImageSize -> Medium],
    SelectWithContents->True,
    Selectable->False]}], "]"}]], "Input",
 CellChangeTimes->{{3.888487604674121*^9, 3.888487645724274*^9}, 
   3.888487708057361*^9, {3.888487808266686*^9, 3.888487855909235*^9}, {
   3.888488190578088*^9, 3.888488211122517*^9}, {3.889022481000156*^9, 
   3.889022499897574*^9}, {3.891427097844768*^9, 3.891427128283867*^9}, 
   3.8920701788190327`*^9, 3.892071680691285*^9, {3.8927535411261883`*^9, 
   3.892753543242786*^9}, {3.89275371112466*^9, 3.892753711625072*^9}, {
   3.941734359002989*^9, 3.941734385565012*^9}, {3.9417345089700785`*^9, 
   3.941734524509161*^9}, 3.9417345552873964`*^9, {3.94173475587316*^9, 
   3.9417347740274935`*^9}},
 CellLabel->"In[435]:=",
 CellID->411619309,ExpressionUUID->"5d4963cb-b68a-0343-8e19-9ed607bc17e7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{
      Opacity[0], 
      PointBox[{{0.54, 0.}, {24., 0.}}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{1., 0.}, {2., 0.1875}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.1875]& , TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{2., 0.}, {3., 0.14}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.14]& , TagBoxNote -> "0.14"], 
             StyleBox["0.14`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.14, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{4., 0.}, {5., 0.5625}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.5625]& , TagBoxNote -> "0.5625"], 
             StyleBox["0.5625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.5625, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{5., 0.}, {6., 0.6}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.6]& , TagBoxNote -> "0.6"], 
             StyleBox["0.6`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.6, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{7., 0.}, {8., 0.0625}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.0625]& , TagBoxNote -> "0.0625"], 
             StyleBox["0.0625`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.0625, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{8., 0.}, {9., 0.08}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.08]& , TagBoxNote -> "0.08"], 
             StyleBox["0.08`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.08, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{10., 0.}, {11., 0.1875}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.1875]& , TagBoxNote -> "0.1875"], 
             StyleBox["0.1875`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.1875, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{11., 0.}, {12., 0.18}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.18]& , TagBoxNote -> "0.18"], 
             StyleBox["0.18`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0.18, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{13., 0.}, {14., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.]& , TagBoxNote -> "0."], 
             StyleBox["0.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{14., 0.}, {15., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0]& , TagBoxNote -> "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{16., 0.}, {17., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.]& , TagBoxNote -> "0."], 
             StyleBox["0.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{17., 0.}, {18., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0]& , TagBoxNote -> "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{19., 0.}, {20., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.]& , TagBoxNote -> "0."], 
             StyleBox["0.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{20., 0.}, {21., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0]& , TagBoxNote -> "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{22., 0.}, {23., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0.]& , TagBoxNote -> "0."], 
             StyleBox["0.`", {}, StripOnInput -> False]], Annotation[#, 
             Style[0., {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.588]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              RectangleBox[{23., 0.}, {24., 0.}, "RoundingRadius" -> 0], 
              StatusArea[#, 0]& , TagBoxNote -> "0"], 
             StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
             Style[0, {}], 
             "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.54, 0.}, {24.4692, 0.}}]}, 
         StyleBox[{}, {"GraphicsLabel"}, StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{1., 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {1., 0.}]}], 
           LineBox[{{24., 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {24., 
              0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
             LineBox[{{3., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {3., 0.}]}], 
             LineBox[{{4., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {4., 0.}]}], 
             LineBox[{{6., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {6., 0.}]}], 
             LineBox[{{7., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {7., 0.}]}], 
             LineBox[{{9., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {9., 0.}]}], 
             LineBox[{{10., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {10., 0.}]}], 
             LineBox[{{12., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {12., 0.}]}], 
             LineBox[{{13., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {13., 0.}]}], 
             LineBox[{{15., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {15., 0.}]}], 
             LineBox[{{16., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {16., 0.}]}], 
             LineBox[{{18., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {18., 0.}]}], 
             LineBox[{{19., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {19., 0.}]}], 
             LineBox[{{21., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {21., 0.}]}], 
             LineBox[{{22., 0.}, 
               Offset[{-1.102182119232618*^-15, -6.}, {22., 0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            StyleBox[{
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {2., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 0, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {5., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {8., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{0, 1, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {11., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {14., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 0, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {17., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["0", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {20., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}], 
              InsetBox[
               FormBox[
                InterpretationBox[
                 StyleBox[
                  TemplateBox[{
                    RowBox[{
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm], "\[InvisibleSpace]", 
                    FormBox["1", TraditionalForm]}]}, "Ket"], FontWeight -> 
                  "Plain"], 
                 
                 Wolfram`QuantumFramework`QuditName[{1, 1, 1}, "Dual" -> 
                  False]], TraditionalForm], 
               Offset[{0, -2}, {23., 0.}], 
               NCache[
                ImageScaled[{
                  Rational[1, 2], 1}], 
                ImageScaled[{0.5, 1}]], Automatic, {1, 0}]}, {{}}, 
             StripOnInput -> False]}, {"GraphicsLabel"}, StripOnInput -> 
           False]}, {"GraphicsTicks"}, StripOnInput -> False]}, {
       "GraphicsAxes"}, StripOnInput -> False]}}, {
    DisplayFunction -> Identity, AspectRatio -> NCache[
       Rational[1, 2], 0.5], Axes -> {False, True}, AxesLabel -> {None, None},
      AxesOrigin -> {0.54, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
     PlotRange -> {{All, All}, {All, All}}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"Wolfram Quantum Framework\"", "\"SV1 simulator\"", "\"IonQ QPU\""}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.588]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.3}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[1]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.982864, 0.7431472, 0.3262672]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.588`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.4992, 0.5552, 0.8309304]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"{", "}"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9417343890871167`*^9, {3.941734500603174*^9, 3.941734525136767*^9}, {
   3.941734766600926*^9, 3.941734776078928*^9}, 3.941734846595909*^9},
 CellLabel->"Out[435]=",
 CellID->6825375,ExpressionUUID->"e5832017-b7f5-8341-89d8-59a9b7a1005c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
As observed, there have been some errors in the hardware, possibly due to \
environmental noise or other factors.\
\>", "Text",
 CellChangeTimes->{{3.940960540663595*^9, 3.9409605643935833`*^9}},
 CellID->65114119,ExpressionUUID->"11c3f8bf-2aa2-c049-b432-c0aa81f191fb"],

Cell["", "Text",
 CellChangeTimes->{{3.940960403572849*^9, 3.940960404066963*^9}},
 CellID->47721401,ExpressionUUID->"a64bcb75-75c0-b74e-86e4-56ae3c6aadcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "TutorialMoreAboutSection",
 CellChangeTimes->{{3.843042384656711*^9, 3.843042386024461*^9}},
 CellID->94059308,ExpressionUUID->"90b20ea0-bf42-914d-ac0e-d602442355e3"],

Cell["XXXX", "TutorialMoreAbout",
 CellID->237551692,ExpressionUUID->"c054783b-dd34-cb4d-b412-414838dee862"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tech Notes", "RelatedTutorialsSection",
 CellID->546199847,ExpressionUUID->"03d42069-2367-134f-ae8a-6960c9fdae62"],

Cell["XXXX", "RelatedTutorials",
 CellID->212860076,ExpressionUUID->"b778860a-c6cb-8f41-9d22-ce4e2bf45ec9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->368279061,ExpressionUUID->"53c8aa5b-f5c5-3043-9cd1-b4aba8525828"],

Cell[TextData[{
 "New in: ",
 Cell["XX", "HistoryData",
  CellTags->"New",ExpressionUUID->"1a4a341f-a005-f048-bb65-3a3b78611bf9"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"52cba50b-940f-7245-9925-81eaa48ef031"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"93fccbc2-67bd-3a41-9d37-e3ef5c749ab0"]
}], "History",
 CellID->556031984,ExpressionUUID->"6e10bcbd-140f-0d44-b401-d85086ce2910"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->470257887,ExpressionUUID->"ea2c59a6-ceca-204b-b46d-02a964fc1032"],

Cell["Tech Note", "Categorization",
 CellLabel->"Entity Type",
 CellID->120477424,ExpressionUUID->"b5e8d9ba-3c1b-a945-b8dd-f54ab1e64606"],

Cell["Wolfram/QuantumFramework", "Categorization",
 CellLabel->"Paclet Name",
 CellID->107155044,ExpressionUUID->"94cae039-fde2-114f-a1e3-9880ed0dab16"],

Cell["Wolfram`QuantumFrameworkLoader`", "Categorization",
 CellLabel->"Context",
 CellID->82264983,ExpressionUUID->"816d999f-390d-384a-9be4-3a04b0a76403"],

Cell["Wolfram/QuantumFramework/tutorial/QPUServiceConnect", "Categorization",
 CellLabel->"URI",
 CellID->16207011,ExpressionUUID->"679214d8-c686-2046-840f-04a8c6859e1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->59120526,ExpressionUUID->"8e433613-d90e-d242-bae5-b91ad27a88ea"],

Cell["XXXX", "Keywords",
 CellID->274207636,ExpressionUUID->"4eef46c0-10e9-6040-8a96-4803a902a450"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1152, 580.5},
WindowMargins->{{
  Automatic, -4.7999999999999545`}, {-4.7999999999999545`, Automatic}},
TaggingRules-><|"Paclet" -> "Wolfram/QuantumFramework"|>,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (December 12, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TechNotePageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"3a3db5dd-e9fc-c144-ba7f-8cdfbd5e263a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 229, 3, 114, "Title",ExpressionUUID->"a819cbfe-67e2-5e45-95db-a6e7753a7510",
 CellID->563242627],
Cell[812, 27, 854, 19, 63, "Text",ExpressionUUID->"b42b0f5f-e178-df48-82c2-0497807012a6",
 CellID->837691791],
Cell[CellGroupData[{
Cell[1691, 50, 530, 11, 44, "Text",ExpressionUUID->"6c7d0b09-9efb-7e44-b491-2303b01a1e8f",
 CellID->49816071],
Cell[2224, 63, 404, 7, 41, "Input",ExpressionUUID->"d8398bea-2b63-6046-a083-2b56be253d83",
 InitializationCell->True,
 CellID->727584899]
}, Open  ]],
Cell[CellGroupData[{
Cell[2665, 75, 352, 5, 45, "Section",ExpressionUUID->"3ed3d4ff-fafa-0d4a-a26a-cde495d6731e",
 CellID->823812336],
Cell[3020, 82, 314, 6, 44, "Text",ExpressionUUID->"373c6636-86bc-064a-a6e4-0c4bfbd15f31",
 CellID->411472949],
Cell[CellGroupData[{
Cell[3359, 92, 186, 2, 42, "Subsection",ExpressionUUID->"66b20415-95b7-d840-b041-1b9e3901c646",
 CellID->83339160],
Cell[CellGroupData[{
Cell[3570, 98, 478, 11, 44, "Text",ExpressionUUID->"876cf592-7508-7443-a00d-ff06d0a1a309",
 CellID->164825640],
Cell[CellGroupData[{
Cell[4073, 113, 496, 9, 25, "Input",ExpressionUUID->"7f291366-f779-f54e-94a8-8e0950a9f01d",
 CellID->157969475],
Cell[4572, 124, 100395, 1668, 54, "Output",ExpressionUUID->"fec3ba20-3164-ef43-a471-181fdde2a7d1",
 CellID->85962062]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105016, 1798, 291, 5, 44, "Text",ExpressionUUID->"528b0439-96a1-c34a-ae00-0f08b8cd6e7e",
 CellID->553629132],
Cell[105310, 1805, 80603, 1326, 218, "Input",ExpressionUUID->"d088023b-cafa-5d4a-9b30-83fc407070bf",
 CellID->158548638]
}, Open  ]],
Cell[185928, 3134, 590, 13, 44, "Text",ExpressionUUID->"e6cc6ca8-1d1f-f244-b9d1-280b1879d85e",
 CellID->243253306],
Cell[CellGroupData[{
Cell[186543, 3151, 214, 2, 25, "Text",ExpressionUUID->"d3f9ab20-80f8-0647-9ebf-14584d7844eb",
 CellID->76120046],
Cell[CellGroupData[{
Cell[186782, 3157, 433, 8, 25, "Input",ExpressionUUID->"916b67e7-b7f7-1840-87f7-87b9e1f48c7e",
 CellID->384436077],
Cell[187218, 3167, 28911, 511, 137, "Output",ExpressionUUID->"859e29ea-e509-2242-8c9f-3b096d43dc7c",
 CellID->556924449]
}, Open  ]]
}, Open  ]],
Cell[216156, 3682, 269, 5, 25, "Text",ExpressionUUID->"06c27415-a62e-c344-aa1e-e984524aed6b",
 CellID->34648820]
}, Open  ]],
Cell[CellGroupData[{
Cell[216462, 3692, 215, 3, 42, "Subsection",ExpressionUUID->"6370f11f-5070-bd44-8d00-27a9cdfd9739",
 CellID->286395207],
Cell[216680, 3697, 255, 4, 44, "Text",ExpressionUUID->"950f64d3-7e83-b444-a351-1b13b74eb401",
 CellID->76296984],
Cell[CellGroupData[{
Cell[216960, 3705, 444, 9, 44, "Text",ExpressionUUID->"2fc6a2e6-03d8-0241-9199-8060cef48f62",
 CellID->198476487],
Cell[CellGroupData[{
Cell[217429, 3718, 543, 10, 25, "Input",ExpressionUUID->"f2c102b8-444b-f845-aa2b-db50cc4fa2a2",
 CellID->175296243],
Cell[217975, 3730, 19868, 354, 60, "Output",ExpressionUUID->"a6500326-5bf2-2c4c-b118-1433fd1f6e1d",
 CellID->11060011]
}, Open  ]]
}, Open  ]],
Cell[237870, 4088, 637, 14, 44, "Text",ExpressionUUID->"a2e1ab00-736c-ac4e-ae6a-52992329fb2e",
 CellID->25792858],
Cell[238510, 4104, 682, 15, 44, "Text",ExpressionUUID->"09cac4a0-538b-d44c-bc60-4f977609ec54",
 CellID->151559412],
Cell[CellGroupData[{
Cell[239217, 4123, 437, 11, 25, "Text",ExpressionUUID->"2e5c7891-ccac-d64f-a556-5e8ce04c8818",
 CellID->102176501],
Cell[CellGroupData[{
Cell[239679, 4138, 464, 10, 25, "Input",ExpressionUUID->"5bdbd36f-9843-3844-b386-722d01139f81",
 CellID->786869830],
Cell[240146, 4150, 13638, 247, 60, "Output",ExpressionUUID->"8e29019e-b68e-694b-84b3-b8c25c1070bb",
 CellID->631027603]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253833, 4403, 119, 1, 25, "Text",ExpressionUUID->"54fce184-ecf9-af42-9a19-ead1e9061984",
 CellID->26093945],
Cell[CellGroupData[{
Cell[253977, 4408, 497, 11, 25, "Input",ExpressionUUID->"cf5371ad-c5b9-4e44-bb51-1ad6009d2cc8",
 CellID->907743533],
Cell[254477, 4421, 19694, 355, 60, "Output",ExpressionUUID->"35b5f917-d536-2f4d-a224-a2bfff04c727",
 CellID->879988704]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274220, 4782, 337, 6, 44, "Text",ExpressionUUID->"b104cb1a-9a7f-c64b-a1e1-ade114b26903",
 CellID->9436521],
Cell[CellGroupData[{
Cell[274582, 4792, 722, 14, 25, "Input",ExpressionUUID->"b1f4f2da-e287-d447-ac67-becd12fdda9c",
 CellID->350271637],
Cell[275307, 4808, 47156, 877, 299, "Output",ExpressionUUID->"b270a675-f54b-bf46-9992-c4e288e42243",
 CellID->325585479]
}, Open  ]]
}, Open  ]],
Cell[322490, 5689, 269, 5, 25, "Text",ExpressionUUID->"53a623ed-bdff-804f-a55e-9b025a17e7f7",
 CellID->70968122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[322808, 5700, 171, 2, 45, "Section",ExpressionUUID->"3a3d9eb9-7e03-8540-8a8f-25dedcdb679b",
 CellID->297314092],
Cell[CellGroupData[{
Cell[323004, 5706, 181, 2, 25, "Text",ExpressionUUID->"23261bcd-c76d-0743-b30a-c4df2f82de92",
 CellID->627470884],
Cell[CellGroupData[{
Cell[323210, 5712, 275, 5, 25, "Input",ExpressionUUID->"4886ae32-bf5b-e94b-b1cf-4e6f5173652c",
 CellID->154129702],
Cell[323488, 5719, 100281, 1665, 54, "Output",ExpressionUUID->"828bb0f3-59c7-de4e-8ad0-4a03993eddfd",
 CellID->78469484]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423818, 7390, 252, 5, 25, "Text",ExpressionUUID->"ab3901f0-bb0d-a744-8115-0d20c26ed590",
 CellID->3588496],
Cell[CellGroupData[{
Cell[424095, 7399, 234, 4, 25, "Input",ExpressionUUID->"9a5caeb8-e587-9342-b717-290a545414cd",
 CellID->635210],
Cell[424332, 7405, 594, 10, 42, "Output",ExpressionUUID->"5de4f869-8103-1b4f-856f-a527e0ae2177",
 CellID->288462559]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[424975, 7421, 189, 2, 42, "Subsection",ExpressionUUID->"c6eea3e0-9f33-2b4d-a5b5-a25e34feb420",
 CellID->13392481],
Cell[425167, 7425, 252, 5, 25, "Text",ExpressionUUID->"3896aa93-d717-1448-b6ce-394014842bc1",
 CellID->581417927],
Cell[425422, 7432, 1351, 26, 122, "DefinitionBox",ExpressionUUID->"c863665b-ba21-0e4d-bd04-e06da630a4f1",
 CellID->273289839],
Cell[CellGroupData[{
Cell[426798, 7462, 223, 3, 43, "Subsubsection",ExpressionUUID->"370b0606-15f0-d141-b4cc-f4a5b47898bb",
 CellID->228194309],
Cell[CellGroupData[{
Cell[427046, 7469, 299, 6, 25, "Text",ExpressionUUID->"4e6f45fb-7d8b-474a-89fe-687ba69bdadb",
 CellID->31737247],
Cell[CellGroupData[{
Cell[427370, 7479, 264, 5, 25, "Input",ExpressionUUID->"bb66bfed-99a7-704b-a999-07277f37cd86",
 CellID->35478333],
Cell[427637, 7486, 34384, 633, 218, "Output",ExpressionUUID->"7f534e36-bcd9-f644-9410-e1b86e5c8ca7",
 CellID->339885208]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[462070, 8125, 308, 7, 25, "Text",ExpressionUUID->"aa219e08-ae40-ed4d-bed5-4610979d32c7",
 CellID->669062197],
Cell[CellGroupData[{
Cell[462403, 8136, 288, 6, 25, "Input",ExpressionUUID->"f186804c-0311-4e44-99b6-336a94f28767",
 CellID->343597553],
Cell[462694, 8144, 28812, 509, 137, "Output",ExpressionUUID->"45a9bbbd-d05b-5948-b938-60bf2ffe67af",
 CellID->551533187]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[491579, 8661, 184, 2, 42, "Subsection",ExpressionUUID->"59548b2a-f618-e746-a70e-eddb2b4c9931",
 CellID->173768192],
Cell[491766, 8665, 321, 5, 44, "Text",ExpressionUUID->"9281332e-f118-6c43-b053-70363ea41a95",
 CellID->343224848],
Cell[492090, 8672, 1530, 28, 122, "DefinitionBox",ExpressionUUID->"8a82770e-5794-8144-af13-782364708372",
 CellID->11296086],
Cell[CellGroupData[{
Cell[493645, 8704, 276, 3, 25, "Text",ExpressionUUID->"e465d02a-dc18-c942-882b-550ec4f9d86f",
 CellID->177316874],
Cell[CellGroupData[{
Cell[493946, 8711, 256, 5, 25, "Input",ExpressionUUID->"3ecce3c5-3e0b-2f47-96e2-3151918f10d9",
 CellID->134671224],
Cell[494205, 8718, 389, 8, 24, "Output",ExpressionUUID->"1942fb4b-43a0-9641-93e1-bb0a9ff9de92",
 CellID->132818558]
}, Open  ]],
Cell[CellGroupData[{
Cell[494631, 8731, 254, 5, 25, "Input",ExpressionUUID->"2d6b105a-12e3-794a-80fa-5f93a1a9422a",
 CellID->319597165],
Cell[494888, 8738, 23323, 408, 56, "Output",ExpressionUUID->"4f12edb3-e675-6341-9960-67f7f119b753",
 CellID->135377073]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[518260, 9152, 279, 6, 25, "Text",ExpressionUUID->"1f64087e-af74-3e46-96ec-b57524ba933f",
 CellID->15384857],
Cell[CellGroupData[{
Cell[518564, 9162, 313, 6, 25, "Input",ExpressionUUID->"3fbfaca1-a155-2746-9ef1-2ab981237e55",
 CellID->649417660],
Cell[518880, 9170, 26617, 472, 110, "Output",ExpressionUUID->"21b3552b-ccf6-d74f-9411-796dc75508c4",
 CellID->571240421]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[545546, 9648, 303, 4, 43, "Subsubsection",ExpressionUUID->"f45dce3d-8a94-9f4b-a3d0-0d10d2b630f4",
 CellID->80589642],
Cell[545852, 9654, 254, 5, 23, "Text",ExpressionUUID->"9e88ba8b-f8e1-a04c-96cd-e97cb557804c",
 CellID->121761759],
Cell[546109, 9661, 1593, 28, 113, "DefinitionBox",ExpressionUUID->"7cd8b656-dc9f-6043-88ba-f80c4ea9c741",
 CellID->906372273],
Cell[CellGroupData[{
Cell[547727, 9693, 243, 4, 23, "Text",ExpressionUUID->"cf45bab2-5dee-5a4b-82ef-e010508b5aa5",
 CellID->884057198],
Cell[CellGroupData[{
Cell[547995, 9701, 545, 11, 22, "Input",ExpressionUUID->"12317b61-235e-3e49-bf2f-0cadc2b65f16",
 CellID->295035813],
Cell[548543, 9714, 52929, 963, 209, "Output",ExpressionUUID->"7662ceec-95ee-2a4b-9c60-8c034cca23f8",
 CellID->354705273]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[601521, 10683, 228, 3, 35, "Subsubsubsection",ExpressionUUID->"de820ca6-2769-664e-8b4f-bb892a96fd4a",
 CellID->157842501],
Cell[CellGroupData[{
Cell[601774, 10690, 263, 5, 23, "Text",ExpressionUUID->"0a34fac3-75c1-f74e-b9f1-6b897acc6c05",
 CellID->568154787],
Cell[CellGroupData[{
Cell[602062, 10699, 497, 10, 22, "Input",ExpressionUUID->"a6e6c4c9-0afe-8e4f-873a-7aa7dbc8ef41",
 CellID->183654778],
Cell[602562, 10711, 197, 3, 21, "Output",ExpressionUUID->"81675b73-67c8-7648-a5e7-a9614e1adc8a",
 CellID->21736154]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602808, 10720, 200, 2, 23, "Text",ExpressionUUID->"9bed1386-4489-7c41-bc3d-234d101d4ae5",
 CellID->50698769],
Cell[CellGroupData[{
Cell[603033, 10726, 220, 4, 22, "Input",ExpressionUUID->"e860c84d-6cae-5345-8c11-4bc48c3a5c1c",
 CellID->302166774],
Cell[603256, 10732, 23102, 408, 201, "Output",ExpressionUUID->"58f9b1f5-2a94-6049-baab-ef04e19114be",
 CellID->59599702]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[626407, 11146, 254, 5, 23, "Text",ExpressionUUID->"54bbb841-c5e9-5347-8553-05b0d05c318b",
 CellID->581348808],
Cell[CellGroupData[{
Cell[626686, 11155, 381, 6, 22, "Input",ExpressionUUID->"5daf9bd8-ed46-344a-b900-075b74ed12b8",
 CellID->32572173],
Cell[627070, 11163, 129072, 2380, 606, "Output",ExpressionUUID->"83865e04-0579-be42-b6c7-13d4320cb730",
 CellID->195991848]
}, Open  ]],
Cell[CellGroupData[{
Cell[756179, 13548, 283, 5, 22, "Input",ExpressionUUID->"24a7ebaa-3d50-8b4d-9ea0-5a12f0d9999b",
 CellID->22076397],
Cell[756465, 13555, 870117, 16218, 547, "Output",ExpressionUUID->"c65fa3e4-bf67-b34b-a8ec-76dbd58f2176",
 CellID->554534322]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1626643, 29780, 183, 2, 35, "Subsubsubsection",ExpressionUUID->"1f1f5ee7-7cbf-f840-86e1-5ff2f6578002",
 CellID->30500890],
Cell[CellGroupData[{
Cell[1626851, 29786, 197, 2, 23, "Text",ExpressionUUID->"67864dd5-07db-6344-9ca7-25ba50ad17b6",
 CellID->40813747],
Cell[CellGroupData[{
Cell[1627073, 29792, 443, 9, 22, "Input",ExpressionUUID->"c23686ad-cf19-fa40-a731-ddb9892bd65d",
 CellID->456857504],
Cell[1627519, 29803, 88843, 1596, 554, "Output",ExpressionUUID->"aa2f95cb-7f23-0845-bb38-98c09e5e0a03",
 CellID->653357516]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1716411, 31405, 206, 2, 23, "Text",ExpressionUUID->"25f4589b-a977-a44a-9203-c35724ad7d15",
 CellID->106167653],
Cell[CellGroupData[{
Cell[1716642, 31411, 274, 5, 22, "Input",ExpressionUUID->"20c1d4ee-79bd-e14b-aae7-995bdbf212bc",
 CellID->31911404],
Cell[1716919, 31418, 21956, 386, 151, "Output",ExpressionUUID->"1c9154a8-e1c8-b948-a076-5be1d96340bf",
 CellID->143876436]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1738924, 31810, 204, 2, 23, "Text",ExpressionUUID->"ed7fb9e9-b085-b646-910d-8c291d0fb4a8",
 CellID->311370782],
Cell[CellGroupData[{
Cell[1739153, 31816, 242, 4, 22, "Input",ExpressionUUID->"a108bd47-486b-7341-b957-519b7dc3ae65",
 CellID->59837826],
Cell[1739398, 31822, 124653, 2002, 216, "Output",ExpressionUUID->"231ede77-e854-ff45-a3f3-388eb06a577d",
 CellID->710987636]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1864112, 33831, 293, 4, 35, "Subsubsubsection",ExpressionUUID->"9295f69b-bc60-9f4d-895f-2fd077197e1b",
 CellID->26617832],
Cell[CellGroupData[{
Cell[1864430, 33839, 242, 3, 23, "Text",ExpressionUUID->"ef436d23-4ef1-e649-a6ef-f268b3ee2c57",
 CellID->712223893],
Cell[CellGroupData[{
Cell[1864697, 33846, 455, 9, 22, "Input",ExpressionUUID->"ef222921-d5fc-1641-ba35-fa505cb0a8b0",
 CellID->342873649],
Cell[1865155, 33857, 31457, 565, 151, "Output",ExpressionUUID->"760b370a-3567-2545-9a41-f97d55690ce4",
 CellID->831144254]
}, Open  ]],
Cell[CellGroupData[{
Cell[1896649, 34427, 471, 9, 22, "Input",ExpressionUUID->"36f4ba4a-05b3-b64e-a0c6-454c05a0852a",
 CellID->385824478],
Cell[1897123, 34438, 48175, 888, 209, "Output",ExpressionUUID->"90be1f4d-9968-8845-907e-4a9e9a1f3212",
 CellID->193297886]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1945383, 35335, 228, 3, 42, "Subsection",ExpressionUUID->"9449a27e-c971-114e-a7f8-0c8873aec54e",
 CellID->259639],
Cell[CellGroupData[{
Cell[1945636, 35342, 462, 8, 44, "Text",ExpressionUUID->"55ff3e8c-2c3c-fe41-8f24-0c33740aca2a",
 CellID->599463686],
Cell[CellGroupData[{
Cell[1946123, 35354, 1346, 35, 182, "Input",ExpressionUUID->"680a397a-3297-2448-9492-a6310b063cdc",
 CellID->91303064],
Cell[1947472, 35391, 20781, 461, 208, "Output",ExpressionUUID->"7b47bdea-2fd5-8a4d-a32c-2c080e71770a",
 CellID->30568222]
}, Open  ]]
}, Open  ]],
Cell[1968280, 35856, 286, 5, 25, "Text",ExpressionUUID->"8e759a12-86ca-f44c-9817-ed9d95825534",
 CellID->199133389],
Cell[1968569, 35863, 173, 2, 23, "Item",ExpressionUUID->"dca4c844-5cee-3c40-9c93-cbf57fc2ad30",
 CellID->660153590],
Cell[1968745, 35867, 197, 3, 23, "Item",ExpressionUUID->"61b3ae95-df15-8348-9fc1-b85696610f5b",
 CellID->97229535],
Cell[CellGroupData[{
Cell[1968967, 35874, 184, 2, 43, "Subsubsection",ExpressionUUID->"b69d89ca-0161-7840-b339-c5e651af2376",
 CellID->569025401],
Cell[CellGroupData[{
Cell[1969176, 35880, 218, 2, 25, "Text",ExpressionUUID->"fa1ddf1d-19d2-7644-9ff6-3e2441cb7579",
 CellID->14316207],
Cell[CellGroupData[{
Cell[1969419, 35886, 358, 9, 25, "Input",ExpressionUUID->"ba431b54-14a4-734e-9497-9ab0de9dde4a",
 CellID->119219805],
Cell[1969780, 35897, 44108, 754, 56, "Output",ExpressionUUID->"6682728a-9c9f-2c4f-b777-4cb276a71337",
 CellID->23789743]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2013937, 36657, 190, 2, 25, "Text",ExpressionUUID->"6c2bf80b-af8a-ce4a-bf30-46447032cc4b",
 CellID->804678628],
Cell[CellGroupData[{
Cell[2014152, 36663, 337, 6, 25, "Input",ExpressionUUID->"d0235c4f-c964-774a-bc06-f6dd1932ce55",
 CellID->575600384],
Cell[2014492, 36671, 139965, 2299, 161, "Output",ExpressionUUID->"d5ddb127-9a88-924b-8089-d0e5572d6c3a",
 CellID->347898138]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154506, 38976, 248, 5, 25, "Text",ExpressionUUID->"aeab5a68-f7af-fb48-9f16-8a5e56819c58",
 CellID->454174011],
Cell[2154757, 38983, 680, 14, 96, "Input",ExpressionUUID->"bfcd72fa-9c36-b74e-9737-9a247477d0ee",
 CellID->304440840]
}, Open  ]],
Cell[CellGroupData[{
Cell[2155474, 39002, 237, 3, 25, "Text",ExpressionUUID->"89d2bc93-4f23-7144-a790-7bbbc69cf6b4",
 CellID->721409177],
Cell[CellGroupData[{
Cell[2155736, 39009, 569, 13, 25, "Input",ExpressionUUID->"6a8e01e9-9da1-d046-8357-ad151cbb1d2f",
 CellID->42989671],
Cell[2156308, 39024, 28757, 512, 110, "Output",ExpressionUUID->"6750c5bf-ad4e-9545-878b-192f587f1d1f",
 CellID->23035925]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2185126, 39543, 187, 2, 43, "Subsubsection",ExpressionUUID->"b75e73d2-5e2b-1c45-9c12-0166b2284c25",
 CellID->161445803],
Cell[CellGroupData[{
Cell[2185338, 39549, 251, 5, 23, "Text",ExpressionUUID->"d44beec6-274a-0848-9829-3fb5c0e31349",
 CellID->1161895],
Cell[CellGroupData[{
Cell[2185614, 39558, 510, 12, 22, "Input",ExpressionUUID->"995641ac-f183-8d49-a546-ba01d176a125",
 CellID->327180443],
Cell[2186127, 39572, 41631, 908, 49, "Output",ExpressionUUID->"877c7b55-435c-5e41-8def-6909e4066503",
 CellID->21677268]
}, Open  ]]
}, Open  ]],
Cell[2227785, 40484, 405, 7, 58, "Text",ExpressionUUID->"6bceb6c5-f7b4-da49-af87-36abee654ac5",
 CellID->315346468],
Cell[CellGroupData[{
Cell[2228215, 40495, 451, 7, 58, "Text",ExpressionUUID->"c16ac3da-384d-4442-a5ea-e1502f61357e",
 CellID->107638085],
Cell[CellGroupData[{
Cell[2228691, 40506, 1089, 25, 86, "Input",ExpressionUUID->"9dedf13e-24c9-4640-b8c5-f0526bb790d7",
 CellID->212013893],
Cell[2229783, 40533, 25673, 507, 100, "Output",ExpressionUUID->"e1a9dc28-f5fa-be48-bb09-b5a465e9b6be",
 CellID->651246664]
}, Open  ]]
}, Open  ]],
Cell[2255483, 41044, 335, 6, 41, "Text",ExpressionUUID->"c0d2a15e-716e-1b4f-aa09-c890783a02ed",
 CellID->603804972]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2255867, 41056, 216, 3, 42, "Subsection",ExpressionUUID->"ad8a7f3a-4ecf-9547-b1c0-e60cbd5632fc",
 CellID->323336871],
Cell[2256086, 41061, 338, 6, 25, "Text",ExpressionUUID->"ee78c367-40ca-2d49-8fdf-fd0ced7e2234",
 CellID->570973196],
Cell[2256427, 41069, 1298, 24, 96, "DefinitionBox",ExpressionUUID->"a0c641ba-ff02-cf43-be1a-979401357eea",
 CellID->806420685],
Cell[CellGroupData[{
Cell[2257750, 41097, 253, 3, 25, "Text",ExpressionUUID->"8e60a79e-4ad6-ba42-bd63-433871f8ba42",
 CellID->137390902],
Cell[CellGroupData[{
Cell[2258028, 41104, 306, 5, 25, "Input",ExpressionUUID->"a0f226df-c37b-b249-8848-5c08502f184d",
 CellID->477317118],
Cell[2258337, 41111, 40613, 771, 137, "Output",ExpressionUUID->"616826a2-b01b-b74e-8ffb-e8b20dd954bf",
 CellID->828984335]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2298999, 41888, 178, 2, 43, "Subsubsection",ExpressionUUID->"a6ae0f87-b060-6c4c-8e71-2fd2bddd5465",
 CellID->214004947],
Cell[CellGroupData[{
Cell[2299202, 41894, 385, 7, 23, "Text",ExpressionUUID->"76b2ad19-7622-f24b-acd2-0a61d43960f6",
 CellID->35547466],
Cell[CellGroupData[{
Cell[2299612, 41905, 637, 13, 22, "Input",ExpressionUUID->"3859051d-f9bf-4f46-82d5-d286b4b3bcf1",
 CellID->277959282],
Cell[2300252, 41920, 63305, 1194, 502, "Output",ExpressionUUID->"dc24c09f-4e6d-f04c-8a68-1dcda708f843",
 CellID->890732860]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2363606, 43120, 192, 2, 23, "Text",ExpressionUUID->"3a6396af-bf4d-a049-b2be-e6fa880fb9d6",
 CellID->28765219],
Cell[CellGroupData[{
Cell[2363823, 43126, 327, 7, 22, "Input",ExpressionUUID->"0f6197e6-319c-ba4e-a45c-ebf21dd8a3f1",
 CellID->991348585],
Cell[2364153, 43135, 747, 20, 32, "Output",ExpressionUUID->"72222759-cd16-b84b-8e43-930f98e64e3e",
 CellID->214564197]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2364949, 43161, 408, 10, 23, "Text",ExpressionUUID->"9c92ed56-99b3-1840-9136-6b2371da4417",
 CellID->348581371],
Cell[2365360, 43173, 201207, 3303, 227, "Input",ExpressionUUID->"56b8a6c7-c56e-7f48-80de-0b22533c688c",
 CellID->3854516]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[2566616, 46482, 179, 2, 43, "Subsubsection",ExpressionUUID->"22e15b6c-ce78-474e-b2ae-449bfa22947c",
 CellID->878123497],
Cell[CellGroupData[{
Cell[2566820, 46488, 276, 5, 25, "Text",ExpressionUUID->"8c1a2242-eb28-2e45-8a57-b7598670477e",
 CellID->355234984],
Cell[CellGroupData[{
Cell[2567121, 46497, 607, 13, 25, "Input",ExpressionUUID->"7e60fec9-d71b-1640-a04f-bc828467fd0f",
 CellID->600845936],
Cell[2567731, 46512, 55783, 1063, 353, "Output",ExpressionUUID->"a816d2f4-e6fd-1b4f-8c2f-9dec707e3bea",
 CellID->319133584]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2623587, 47583, 172, 2, 42, "Subsection",ExpressionUUID->"66660f30-8b90-6845-afc6-58de6c973687",
 CellID->221297928],
Cell[CellGroupData[{
Cell[2623784, 47589, 333, 6, 44, "Text",ExpressionUUID->"49a570d6-db50-8c46-9c86-6902275e6683",
 CellID->100538978],
Cell[CellGroupData[{
Cell[2624142, 47599, 398, 9, 25, "Input",ExpressionUUID->"ee90d538-c5f3-fe44-bf5a-60394d352374",
 CellID->791823408],
Cell[2624543, 47610, 37725, 691, 245, "Output",ExpressionUUID->"98ca5ed6-2897-384d-8e56-342653da8040",
 CellID->260563706]
}, Open  ]],
Cell[CellGroupData[{
Cell[2662305, 48306, 857, 17, 25, "Input",ExpressionUUID->"f6a94edf-443e-9643-90f3-1413df067d4e",
 CellID->77960807],
Cell[2663165, 48325, 458, 9, 24, "Output",ExpressionUUID->"aeea0c40-8d38-2840-abaf-69e2b87a1290",
 CellID->65532129]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2663672, 48340, 242, 4, 25, "Text",ExpressionUUID->"54f54094-b690-674b-85af-21c075d102c9",
 CellID->304338068],
Cell[CellGroupData[{
Cell[2663939, 48348, 332, 8, 25, "Input",ExpressionUUID->"48094023-cca1-9d4b-abc4-78044fca48ec",
 CellID->21304690],
Cell[2664274, 48358, 409, 8, 24, "Output",ExpressionUUID->"bdb1620a-c3eb-e64e-9e6d-26884f6ae5bd",
 CellID->153615261]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2664732, 48372, 188, 2, 25, "Text",ExpressionUUID->"00720001-a9be-3c4f-8ebc-085e8fe18232",
 CellID->587276563],
Cell[CellGroupData[{
Cell[2664945, 48378, 2000, 42, 33, "Input",ExpressionUUID->"7bd0c1d7-eec4-134a-995f-ef38c01316c1",
 CellID->31647014],
Cell[2666948, 48422, 30119, 708, 399, "Output",ExpressionUUID->"c4f44dc8-0ae9-9948-9d36-ce943e7b1f2d",
 CellID->428447616]
}, Open  ]]
}, Open  ]],
Cell[2697094, 49134, 280, 5, 44, "Text",ExpressionUUID->"24c9fb36-077a-5d4c-9ed0-881d0007917e",
 CellID->346862969],
Cell[2697377, 49141, 156, 2, 25, "Text",ExpressionUUID->"f2e82d63-644d-f241-89a7-83526bc7deda",
 CellID->29608716]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2697582, 49149, 220, 3, 45, "Section",ExpressionUUID->"67d9fd02-9f11-b345-b629-e48b8bb48f83",
 CellID->332485653],
Cell[CellGroupData[{
Cell[2697827, 49156, 222, 3, 25, "Text",ExpressionUUID->"93674a88-943a-d447-9ef0-e73a7c6d2682",
 CellID->179608444],
Cell[CellGroupData[{
Cell[2698074, 49163, 867, 21, 61, "Input",ExpressionUUID->"ba8f2b85-d7bb-994d-a46c-d63883152659",
 CellID->70288842],
Cell[2698944, 49186, 19871, 354, 60, "Output",ExpressionUUID->"423bdb21-22f4-c341-a84c-557a2780301e",
 CellID->341325068],
Cell[2718818, 49542, 13839, 249, 60, "Output",ExpressionUUID->"e46453be-6194-9b4c-b0c1-4f9badfce248",
 CellID->3776130],
Cell[2732660, 49793, 19897, 355, 60, "Output",ExpressionUUID->"2e271a6f-370f-a24a-8705-30c9b61b3c39",
 CellID->587661687]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2752606, 50154, 198, 3, 42, "Subsection",ExpressionUUID->"e7d59f70-31d5-a84e-a7d2-c32644b8af0e",
 CellID->119869412],
Cell[CellGroupData[{
Cell[2752829, 50161, 312, 4, 25, "Text",ExpressionUUID->"ec65521e-23ca-7d40-81ae-d93dd263f9d7",
 CellID->554452241],
Cell[CellGroupData[{
Cell[2753166, 50169, 486, 11, 25, "Input",ExpressionUUID->"872f2bcc-617a-884f-af11-788c29701f1f",
 CellID->68532194],
Cell[2753655, 50182, 156085, 2514, 299, "Output",ExpressionUUID->"056224fb-a7f7-b242-b6c8-2b7d2ee1defb",
 CellID->394851175]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2909789, 52702, 268, 3, 25, "Text",ExpressionUUID->"1cfbcf65-f105-c94d-89d8-e958e6aeed45",
 CellID->123286018],
Cell[CellGroupData[{
Cell[2910082, 52709, 485, 11, 25, "Input",ExpressionUUID->"ab82ce09-6c22-c24f-8b3b-51c7b0bb7776",
 CellID->384727762],
Cell[2910570, 52722, 33662, 613, 299, "Output",ExpressionUUID->"acff9ce2-c4c7-0441-8997-3792c3badc0e",
 CellID->171481526]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2944281, 53341, 304, 4, 43, "Subsubsection",ExpressionUUID->"cf5ebe1f-57a8-874c-b87d-3ffbcdb189fb",
 CellID->465616939],
Cell[CellGroupData[{
Cell[2944610, 53349, 256, 3, 25, "Text",ExpressionUUID->"081dacb4-786f-dc46-a99a-ea7356a33b32",
 CellID->117689943],
Cell[CellGroupData[{
Cell[2944891, 53356, 652, 15, 25, "Input",ExpressionUUID->"735c5228-dd45-3747-b70d-049064a46dad",
 CellID->364017493],
Cell[2945546, 53373, 42766, 779, 191, "Output",ExpressionUUID->"ccfa28f3-3bba-014b-a926-0f7d9cad1ff6",
 CellID->37559593]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2988385, 54160, 231, 3, 42, "Subsection",ExpressionUUID->"fd860dc4-98ea-f44c-a66e-9cf7141c13d4",
 CellID->166443007],
Cell[CellGroupData[{
Cell[2988641, 54167, 462, 8, 44, "Text",ExpressionUUID->"d7b113a0-0553-6743-8b6e-432d00d6eca7",
 CellID->107030124],
Cell[CellGroupData[{
Cell[2989128, 54179, 1348, 35, 182, "Input",ExpressionUUID->"f5c3a39e-5c3b-7b49-a135-3eac3cf3c288",
 CellID->428734934],
Cell[2990479, 54216, 20824, 457, 208, "Output",ExpressionUUID->"2f40d460-19b7-7340-b291-b75bcb717a0f",
 CellID->97457172]
}, Open  ]]
}, Open  ]],
Cell[3011330, 54677, 285, 5, 25, "Text",ExpressionUUID->"fed6fde5-5eef-1542-bce5-dc0248c101cb",
 CellID->99761065],
Cell[3011618, 54684, 173, 2, 23, "Item",ExpressionUUID->"1e309bde-9941-0d4c-9382-8d1957d0a756",
 CellID->299924603],
Cell[3011794, 54688, 198, 3, 23, "Item",ExpressionUUID->"59865638-795f-9d47-af3c-650a21154e82",
 CellID->471589744],
Cell[CellGroupData[{
Cell[3012017, 54695, 184, 2, 43, "Subsubsection",ExpressionUUID->"df9e184b-9085-6f45-9f1d-a9890827e908",
 CellID->252565109],
Cell[CellGroupData[{
Cell[3012226, 54701, 430, 8, 25, "Text",ExpressionUUID->"279f617d-f7db-0c4b-8c54-98f8c5a87410",
 CellID->1258097],
Cell[CellGroupData[{
Cell[3012681, 54713, 1051, 18, 25, "Input",ExpressionUUID->"bb4e2eea-b707-194a-9851-f686cd81eed2",
 CellID->597352419],
Cell[3013735, 54733, 555, 9, 288, "Output",ExpressionUUID->"bdadc5cd-dcd2-0a47-a599-98dd8c354240",
 CellID->843301149]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3014339, 54748, 373, 7, 44, "Text",ExpressionUUID->"bd5e228a-8e7b-9e46-8b1c-16e51d68c4ef",
 CellID->71015004],
Cell[CellGroupData[{
Cell[3014737, 54759, 1420, 31, 166, "Input",ExpressionUUID->"bebacbb5-23a6-3346-b893-3cb4dcc52644",
 CellID->143141549],
Cell[3016160, 54792, 24513, 431, 83, "Output",ExpressionUUID->"1a4d9c2c-04f1-6741-a3b6-ed36ad362862",
 CellID->273120042]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3040746, 55231, 267, 4, 42, "Subsection",ExpressionUUID->"8323750f-1ae3-5948-bd4b-0b6d09824250",
 CellID->116260310],
Cell[CellGroupData[{
Cell[3041038, 55239, 252, 3, 25, "Text",ExpressionUUID->"bc4de015-04d2-854f-9264-ee18d1249dc8",
 CellID->39802156],
Cell[CellGroupData[{
Cell[3041315, 55246, 246, 4, 25, "Input",ExpressionUUID->"cf36ba00-1c64-9346-80c5-036135bc97bf",
 CellID->57694188],
Cell[3041564, 55252, 267, 4, 42, "Output",ExpressionUUID->"44e6fd8e-d6ef-8a45-b80d-527c331b5cdd",
 CellID->272324566]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3041880, 55262, 184, 2, 25, "Text",ExpressionUUID->"ed8c3c75-8a80-a945-8708-51db51f5fdca",
 CellID->87768214],
Cell[CellGroupData[{
Cell[3042089, 55268, 688, 13, 43, "Input",ExpressionUUID->"c2464c43-b6af-454c-9af5-b494e409d72a",
 CellID->1535752367],
Cell[3042780, 55283, 59600, 1099, 407, "Output",ExpressionUUID->"e1c479a1-6f42-d741-b42f-ddf5cbc4a27e",
 CellID->691875441]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3102429, 56388, 179, 2, 43, "Subsubsection",ExpressionUUID->"d5c01066-7cb0-ea4e-8d42-750ee6493403",
 CellID->829197341],
Cell[CellGroupData[{
Cell[3102633, 56394, 259, 3, 25, "Text",ExpressionUUID->"b16be9d1-fa79-eb4a-ae24-7a5ef220b1ce",
 CellID->130783892],
Cell[CellGroupData[{
Cell[3102917, 56401, 665, 12, 43, "Input",ExpressionUUID->"51cb2205-9c7d-2b4d-aa70-953061a670d5",
 CellID->865646729],
Cell[3103585, 56415, 55865, 1050, 407, "Output",ExpressionUUID->"b805c8c7-e0de-a94b-b63f-1af25d1a9859",
 CellID->943460284]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3159523, 57473, 172, 2, 42, "Subsection",ExpressionUUID->"65023dfa-a88e-ae4a-95c2-6e711dc39ac2",
 CellID->361424097],
Cell[CellGroupData[{
Cell[3159720, 57479, 340, 6, 25, "Text",ExpressionUUID->"a83f20fd-979f-ce4b-95f7-30c9231d8f2a",
 CellID->42803491],
Cell[CellGroupData[{
Cell[3160085, 57489, 743, 15, 78, "Input",ExpressionUUID->"fdfbd802-f2cd-7d4b-8976-17d04b12a04e",
 CellID->89984608],
Cell[3160831, 57506, 314, 4, 24, "Output",ExpressionUUID->"716a43c2-d28c-d94f-ba54-0c0f4bb4cdac",
 CellID->356500595]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3161194, 57516, 302, 6, 25, "Text",ExpressionUUID->"db092232-0523-1842-994a-9a7bbe0f69a8",
 CellID->258848104],
Cell[3161499, 57524, 1552, 30, 113, "Input",ExpressionUUID->"8cc35f76-f349-5747-a220-684c090645ed",
 CellID->234207586]
}, Open  ]],
Cell[CellGroupData[{
Cell[3163088, 57559, 299, 6, 25, "Text",ExpressionUUID->"065f455f-a9ef-d942-96e2-d940f4b2a72b",
 CellID->344221668],
Cell[CellGroupData[{
Cell[3163412, 57569, 888, 19, 43, "Input",ExpressionUUID->"70f945db-d4c2-514e-aca8-3f1f3d25eb4f",
 CellID->1234233014],
Cell[3164303, 57590, 744, 15, 24, "Output",ExpressionUUID->"7e7ae5ef-7959-fb45-87a7-f152cabbc929",
 CellID->653653426]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3165096, 57611, 309, 5, 44, "Text",ExpressionUUID->"49a3d165-6812-4a44-8100-6e75490c96f2",
 CellID->350574518],
Cell[CellGroupData[{
Cell[3165430, 57620, 2186, 48, 33, "Input",ExpressionUUID->"5d4963cb-b68a-0343-8e19-9ed607bc17e7",
 CellID->411619309],
Cell[3167619, 57670, 27765, 648, 205, "Output",ExpressionUUID->"e5832017-b7f5-8341-89d8-59a9b7a1005c",
 CellID->6825375]
}, Open  ]]
}, Open  ]],
Cell[3195411, 58322, 279, 5, 44, "Text",ExpressionUUID->"11c3f8bf-2aa2-c049-b432-c0aa81f191fb",
 CellID->65114119],
Cell[3195693, 58329, 156, 2, 25, "Text",ExpressionUUID->"a64bcb75-75c0-b74e-86e4-56ae3c6aadcb",
 CellID->47721401]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3195898, 58337, 190, 2, 74, "TutorialMoreAboutSection",ExpressionUUID->"90b20ea0-bf42-914d-ac0e-d602442355e3",
 CellID->94059308],
Cell[3196091, 58341, 108, 1, 24, "TutorialMoreAbout",ExpressionUUID->"c054783b-dd34-cb4d-b412-414838dee862",
 CellID->237551692]
}, Open  ]],
Cell[CellGroupData[{
Cell[3196236, 58347, 128, 1, 74, "RelatedTutorialsSection",ExpressionUUID->"03d42069-2367-134f-ae8a-6960c9fdae62",
 CellID->546199847],
Cell[3196367, 58350, 107, 1, 24, "RelatedTutorials",ExpressionUUID->"b778860a-c6cb-8f41-9d22-ce4e2bf45ec9",
 CellID->212860076]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3196523, 58357, 110, 1, 72, "MetadataSection",ExpressionUUID->"53c8aa5b-f5c5-3043-9cd1-b4aba8525828",
 CellID->368279061],
Cell[3196636, 58360, 473, 11, 26, "History",ExpressionUUID->"6e10bcbd-140f-0d44-b401-d85086ce2910",
 CellID->556031984],
Cell[CellGroupData[{
Cell[3197134, 58375, 122, 1, 21, "CategorizationSection",ExpressionUUID->"ea2c59a6-ceca-204b-b46d-02a964fc1032",
 CellID->470257887],
Cell[3197259, 58378, 137, 2, 34, "Categorization",ExpressionUUID->"b5e8d9ba-3c1b-a945-b8dd-f54ab1e64606",
 CellID->120477424],
Cell[3197399, 58382, 152, 2, 34, "Categorization",ExpressionUUID->"94cae039-fde2-114f-a1e3-9880ed0dab16",
 CellID->107155044],
Cell[3197554, 58386, 154, 2, 34, "Categorization",ExpressionUUID->"816d999f-390d-384a-9be4-3a04b0a76403",
 CellID->82264983],
Cell[3197711, 58390, 170, 2, 34, "Categorization",ExpressionUUID->"679214d8-c686-2046-840f-04a8c6859e1e",
 CellID->16207011]
}, Open  ]],
Cell[CellGroupData[{
Cell[3197918, 58397, 109, 1, 31, "KeywordsSection",ExpressionUUID->"8e433613-d90e-d242-bae5-b91ad27a88ea",
 CellID->59120526],
Cell[3198030, 58400, 99, 1, 70, "Keywords",ExpressionUUID->"4eef46c0-10e9-6040-8a96-4803a902a450",
 CellID->274207636]
}, Closed]]
}, Open  ]]
}
]
*)

